id,type,state,state_reason,title,body,author,created_at,assignees,updated_at,closed_at,url,labels,comments_list,comment_thread
2633855006,pull_request,closed,,Replace HTTP status code with named constants,"Replacing the ints with named constants from https://fastapi.tiangolo.com/reference/status/

It contains a group of named constants (variables) with integer status codes.

For example:

```
200: status.HTTP_200_OK
403: status.HTTP_403_FORBIDDEN
etc.
```

It can be convenient to quickly access HTTP (and WebSocket) status codes using autocompletion for the name without having to remember the integer status codes by memory

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-11-04 21:10:11+00:00,[],2024-11-05 10:16:44+00:00,2024-11-04 23:15:17+00:00,https://github.com/apache/airflow/pull/43663,[],"[{'comment_id': 2456773180, 'issue_id': 2633855006, 'author': 'pierrejeambrun', 'body': 'Nice, one thing off my todo list.', 'created_at': datetime.datetime(2024, 11, 5, 10, 16, 42, tzinfo=datetime.timezone.utc)}]","pierrejeambrun on (2024-11-05 10:16:42 UTC): Nice, one thing off my todo list.

"
2633851209,pull_request,closed,,fab_auth_manager: allow get_user method to return the user authenticated via Kerberos,"The issue this PR fixes was initially discussed in https://github.com/apache/airflow/discussions/39683.

@jijoj-hmetrix and I noticed that, starting from Airflow 2.8.0, Kerberos authentication does not seem to work with the stable API. Even when a user provides a valid Kerberos ticket, that the whole gssapi authentication dance is successful, and that the user has the required permissions, the API returns a 403 response.

```console
$ curl --negotiate -u: -s --service-name airflow https://airflow-test.xxxx.com/api/v1/pools  | jq .
{
  ""detail"": null,
  ""status"": 403,
  ""title"": ""Forbidden"",
  ""type"": ""https://airflow.apache.org/docs/apache-airflow/2.10.2/stable-rest-api-ref.html#section/Errors/PermissionDenied""
}
```

I found that [`airflow.providers.fab.auth_manager.fab_auth_manager.FabAuthManager.get_user`](https://github.com/apache/airflow/blob/baf2b3cb4453d44ff00598a3b0c42d432a7203f9/providers/src/airflow/providers/fab/auth_manager/fab_auth_manager.py#L185-L189) relies on flask-login's [current_user](https://github.com/maxcountryman/flask-login/blob/main/src/flask_login/utils.py#L25) to get the currently logged in user from the session.

However, the Kerberos auth backend stores the authenticated user [in `g`](https://github.com/brouberol/airflow/blob/main/providers/src/airflow/providers/fab/auth_manager/api/auth/backend/kerberos_auth.py#L136) and not in the session.

This patch allows the current user to be pulled either from `g` or the session, which allows the API to detect the user authenticated via Kerberos, and then link it to Fab permissions.

Here's an example from an instance running with the patch, with a admin user associated with a User account with Admin permissions:

```console
$ curl --negotiate -u: -s --service-name airflow https://airflow-test.xxx.com/api/v1/pools
{
  ""pools"": [
    {
      ""deferred_slots"": 0,
      ""description"": ""Default pool"",
      ""include_deferred"": false,
      ""name"": ""default_pool"",
      ""occupied_slots"": 0,
      ""open_slots"": 128,
      ""queued_slots"": 0,
      ""running_slots"": 0,
      ""scheduled_slots"": 0,
      ""slots"": 128
    }
  ],
  ""total_entries"": 1
}
```

I accompany the change with a small unit test.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",brouberol,2024-11-04 21:07:38+00:00,[],2024-12-15 21:11:05+00:00,2024-11-05 16:07:02+00:00,https://github.com/apache/airflow/pull/43662,"[('area:providers', ''), ('provider:fab', '')]","[{'comment_id': 2455704146, 'issue_id': 2633851209, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 11, 4, 21, 7, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455781825, 'issue_id': 2633851209, 'author': 'vincbeck', 'body': 'Some static check failures, shoud be easy to fix :) See [documentation](https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst)', 'created_at': datetime.datetime(2024, 11, 4, 21, 56, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457587706, 'issue_id': 2633851209, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 11, 5, 16, 7, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457818964, 'issue_id': 2633851209, 'author': 'brouberol', 'body': 'Thank you!\r\n\r\nOn Tue, Nov 5, 2024, at 5:07 PM, boring-cyborg[bot] wrote:\r\n> \r\n> \r\n> Awesome work, congrats on your first merged pull request! You are invited to check our Issue Tracker <https://github.com/apache/airflow/issues> for additional contributions.\r\n> \r\n> \r\n> —\r\n> Reply to this email directly, view it on GitHub <https://github.com/apache/airflow/pull/43662#issuecomment-2457587706>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AADVHA7TOAYVZUBJKKX5FJLZ7DUMBAVCNFSM6AAAAABRFDVPQ2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDINJXGU4DONZQGY>.\r\n> You are receiving this because you authored the thread.Message ID: ***@***.***>\r\n>', 'created_at': datetime.datetime(2024, 11, 5, 17, 50, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2543865728, 'issue_id': 2633851209, 'author': 'nicolasge', 'body': '@brouberol  do you know why the code in your PR has been removed in the latest Airflow image? say 2.10.3', 'created_at': datetime.datetime(2024, 12, 15, 13, 2, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2543941598, 'issue_id': 2633851209, 'author': 'brouberol', 'body': ""@nicolasge if that's indeed the case, I wasn't aware of it, sorry.\r\n\r\n**Edit**: it seems that the fix is indeed missing https://github.com/apache/airflow/blob/2.10.3/airflow/providers/fab/auth_manager/fab_auth_manager.py#L170-L174"", 'created_at': datetime.datetime(2024, 12, 15, 16, 39, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2543992373, 'issue_id': 2633851209, 'author': 'potiuk', 'body': '@brouberol -> see the comment in https://github.com/apache/airflow/issues/44943 -> providers are always released from main. You need to see which provider version it has been released in and have that provider. If it was not released in 2.10.3 - look at 2.10.4rc1 that is just being voted - maybe it contains newer provider version with the fix.\r\n\r\nLook at https://airflow.apache.org/docs/apache-airflow-providers/index.html to learn how providers vs. core work.', 'created_at': datetime.datetime(2024, 12, 15, 18, 30, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2544067739, 'issue_id': 2633851209, 'author': 'brouberol', 'body': 'Understood, thanks!\r\n\r\nOn Sun, Dec 15, 2024, at 7:31 PM, Jarek Potiuk wrote:\r\n> \r\n> \r\n> @brouberol <https://github.com/brouberol> -> see the comment in #44943 <https://github.com/apache/airflow/issues/44943> -> providers are always released from main. You need to see which provider version it has been released in and have that provider. If it was not released in 2.10.3 - look at 2.10.4rc1 that is just being voted - maybe it contains newer provider version with the fix.\r\n> \r\n> Look at https://airflow.apache.org/docs/apache-airflow-providers/index.html to learn how providers vs. core work.\r\n> \r\n> \r\n> —\r\n> Reply to this email directly, view it on GitHub <https://github.com/apache/airflow/pull/43662#issuecomment-2543992373>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AADVHA6H7GS4LNQFJVWOESL2FXDG5AVCNFSM6AAAAABRFDVPQ2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDKNBTHE4TEMZXGM>.\r\n> You are receiving this because you were mentioned.Message ID: ***@***.***>\r\n>', 'created_at': datetime.datetime(2024, 12, 15, 21, 11, 4, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-11-04 21:07:43 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

vincbeck on (2024-11-04 21:56:31 UTC): Some static check failures, shoud be easy to fix :) See [documentation](https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst)

boring-cyborg[bot] on (2024-11-05 16:07:06 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

brouberol (Issue Creator) on (2024-11-05 17:50:35 UTC): Thank you!

On Tue, Nov 5, 2024, at 5:07 PM, boring-cyborg[bot] wrote:

nicolasge on (2024-12-15 13:02:44 UTC): @brouberol  do you know why the code in your PR has been removed in the latest Airflow image? say 2.10.3

brouberol (Issue Creator) on (2024-12-15 16:39:09 UTC): @nicolasge if that's indeed the case, I wasn't aware of it, sorry.

**Edit**: it seems that the fix is indeed missing https://github.com/apache/airflow/blob/2.10.3/airflow/providers/fab/auth_manager/fab_auth_manager.py#L170-L174

potiuk on (2024-12-15 18:30:48 UTC): @brouberol -> see the comment in https://github.com/apache/airflow/issues/44943 -> providers are always released from main. You need to see which provider version it has been released in and have that provider. If it was not released in 2.10.3 - look at 2.10.4rc1 that is just being voted - maybe it contains newer provider version with the fix.

Look at https://airflow.apache.org/docs/apache-airflow-providers/index.html to learn how providers vs. core work.

brouberol (Issue Creator) on (2024-12-15 21:11:04 UTC): Understood, thanks!

On Sun, Dec 15, 2024, at 7:31 PM, Jarek Potiuk wrote:

"
2633800172,pull_request,closed,, Fix venv numpy example which needs to be 1.26 at least to be working in Python 3.12 (#43653),Backport of #43653 to 2.10,jscheffl,2024-11-04 20:42:53+00:00,[],2024-11-04 22:04:00+00:00,2024-11-04 22:04:00+00:00,https://github.com/apache/airflow/pull/43659,"[('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2633743170,pull_request,closed,,Remove Deleted backfill endpoint Tests from FAB,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
Related: #43496
The endpoint in the tests is deleted in the related PR. Deleting them should fix CI test issues. This is blocking the PRs too.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bugraoz93,2024-11-04 20:10:26+00:00,[],2024-11-04 21:05:36+00:00,2024-11-04 21:05:36+00:00,https://github.com/apache/airflow/pull/43654,"[('area:providers', ''), ('provider:fab', '')]","[{'comment_id': 2455613134, 'issue_id': 2633743170, 'author': 'bugraoz93', 'body': '@dstandish I think this endpoint is deleted in https://github.com/apache/airflow/pull/43496. Deleting them should fix CI test issues but I wanted to double-check with you. I am not sure how we are going to handle the permissions and tests in the FastAPI so maybe deleting them would be a good idea for now.', 'created_at': datetime.datetime(2024, 11, 4, 20, 13, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455699647, 'issue_id': 2633743170, 'author': 'bugraoz93', 'body': 'I think mine is a duplicate of #43649. I am closing this one.', 'created_at': datetime.datetime(2024, 11, 4, 21, 4, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455700324, 'issue_id': 2633743170, 'author': 'bugraoz93', 'body': 'Thanks a lot for a swift review @jscheffl! :pray:', 'created_at': datetime.datetime(2024, 11, 4, 21, 5, 18, tzinfo=datetime.timezone.utc)}]","bugraoz93 (Issue Creator) on (2024-11-04 20:13:16 UTC): @dstandish I think this endpoint is deleted in https://github.com/apache/airflow/pull/43496. Deleting them should fix CI test issues but I wanted to double-check with you. I am not sure how we are going to handle the permissions and tests in the FastAPI so maybe deleting them would be a good idea for now.

bugraoz93 (Issue Creator) on (2024-11-04 21:04:52 UTC): I think mine is a duplicate of #43649. I am closing this one.

bugraoz93 (Issue Creator) on (2024-11-04 21:05:18 UTC): Thanks a lot for a swift review @jscheffl! :pray:

"
2633713257,pull_request,closed,,Fix venv numpy example which needs to be 1.26 at least to be working in Python 3.12,Fix example DAG which is not installing/working with Python 3.12 again ad numpy must be upgraded to at least 1.26.0 to be working with Python 3.12,jscheffl,2024-11-04 19:53:49+00:00,[],2024-11-04 20:33:34+00:00,2024-11-04 20:33:34+00:00,https://github.com/apache/airflow/pull/43653,"[('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2633587334,pull_request,closed,,Remove auth manager tests of backfill,"Security is not yet implemented for fast api endpoints.
",dstandish,2024-11-04 18:50:20+00:00,[],2024-11-04 21:06:56+00:00,2024-11-04 21:06:56+00:00,https://github.com/apache/airflow/pull/43649,"[('area:providers', ''), ('provider:fab', '')]",[],
2633548700,pull_request,closed,,Simplify the handle stuck in queued interface,"Proposed changes to #43520

This changes the signature of `cleanup_stuck_queued_tasks` such that it returns Iterable[TaskInstance] instead of List[str] (where the str is a repr).

What are the implications....

Old provider with new executor:
* we check what kind of object the executor is returning.  if it is a string, then we know it's old executor version.  in that case we just log to stdout of scheduler and move on.

New provider with old executor:
* New provider would be yielding TIs instead of strings.  The executor would be expecting list of repr strings.  The repr IN check would not find matches.  Thus nothing would be logged.  Nothing breaks but you don't have the log messages about stuck TIs.  So this combination should be avoided and we might want to bump min version of provider.  Or we could add backcompat code in the providers to yield the reprs in that case.  That should work ok too.
",dstandish,2024-11-04 18:30:21+00:00,[],2024-11-07 00:37:45+00:00,2024-11-07 00:37:45+00:00,https://github.com/apache/airflow/pull/43647,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:providers', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues'), ('provider:celery', ''), ('area:Executors-core', 'LocalExecutor & SequentialExecutor')]",[],
2633545010,pull_request,closed,,Move responsibility to run a command from WinRMOperator to WinRMHook,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

This PR moved the responsibility to be able to run a  command from the WinRMOperator to the WinRMHook, just like it's also the case with a lot of other operators like for example the SQL operators which delegate the responsibility to be able to run an SQL statement to the DbApiHook.  The reason is simple, if you want to execute an SQL statement or in this case a command from within a PythonOperator, you cannot use the WinRMOperator, you have to use the WinRMHook, so it makes sense that the WinRMHook has the logic to execute the command, not the operator, as the operator is only a facilitator to allow you to run a command from within a DAG

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",dabla,2024-11-04 18:28:15+00:00,[],2024-11-06 09:00:30+00:00,2024-11-06 08:52:47+00:00,https://github.com/apache/airflow/pull/43646,"[('area:providers', ''), ('provider:microsoft-winrm', '')]","[{'comment_id': 2459054344, 'issue_id': 2633545010, 'author': 'dabla', 'body': 'Thx @eladkal :)', 'created_at': datetime.datetime(2024, 11, 6, 9, 0, 28, tzinfo=datetime.timezone.utc)}]","dabla (Issue Creator) on (2024-11-06 09:00:28 UTC): Thx @eladkal :)

"
2633516295,pull_request,closed,,terminate kubernetes watch in case of unknown error while flushing queue,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

Closes: #43440 
<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",pavansharma36,2024-11-04 18:12:27+00:00,[],2024-11-12 12:24:54+00:00,2024-11-12 12:24:54+00:00,https://github.com/apache/airflow/pull/43645,"[('area:providers', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues')]",[],
2633377107,pull_request,closed,,add basic system tests for OpenLineage,"Added system tests to make sure our OpenLineage integration actually works as expected. Here's what's new:

- Built a VariableTransport that dumps OpenLineage events into Airflow Variables so we can check them later
- Created a test operator (OpenLineageTestOperator) that compares the events we got against what we expected
- Added a simple test DAG to show how it all works together
- Threw in some helper functions to make event validation less painful (checking UUIDs, dates, etc.)

The main idea is to have a reliable way to verify that we're sending the right OpenLineage events with the right format.
The test setup is pretty flexible - you can either define your expected events inline or keep them in JSON files, whatever works better for your use case.
",mobuchowski,2024-11-04 17:14:40+00:00,[],2024-11-27 01:16:22+00:00,2024-11-27 01:16:22+00:00,https://github.com/apache/airflow/pull/43643,"[('area:providers', ''), ('provider:openlineage', 'AIP-53')]","[{'comment_id': 2486039390, 'issue_id': 2633377107, 'author': 'mobuchowski', 'body': '@Lee-W fixed all the typing/style comments.', 'created_at': datetime.datetime(2024, 11, 19, 15, 30, 57, tzinfo=datetime.timezone.utc)}]","mobuchowski (Issue Creator) on (2024-11-19 15:30:57 UTC): @Lee-W fixed all the typing/style comments.

"
2633261218,pull_request,closed,,AIP-84 List Mapped Task Instances,related to https://github.com/apache/airflow/issues/42370,pierrejeambrun,2024-11-04 16:23:56+00:00,['pierrejeambrun'],2024-11-07 14:53:03+00:00,2024-11-07 14:53:01+00:00,https://github.com/apache/airflow/pull/43642,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-84', 'Modern Rest API'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2461717697, 'issue_id': 2633261218, 'author': 'pierrejeambrun', 'body': 'Also replaced `execution_date` filter by `logical_date` filter, added tests.', 'created_at': datetime.datetime(2024, 11, 7, 9, 21, 55, tzinfo=datetime.timezone.utc)}]","pierrejeambrun (Issue Creator) on (2024-11-07 09:21:55 UTC): Also replaced `execution_date` filter by `logical_date` filter, added tests.

"
2632990409,pull_request,closed,,AIP-84 Get Import Error / Get Import Errors,"closes: #43594
closes: #43595
related: #42370",jason810496,2024-11-04 14:36:31+00:00,[],2024-11-05 14:30:39+00:00,2024-11-05 14:30:39+00:00,https://github.com/apache/airflow/pull/43637,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-84', 'Modern Rest API'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]",[],
2632732707,pull_request,closed,,Add dag source code to dag details page,"Closes: #43713 

Use dag source endpoint to add dag code to the new UI:

<img width=""1103"" alt=""Screenshot 2024-11-01 at 4 59 27 PM"" src=""https://github.com/user-attachments/assets/8d9f566b-0176-44d3-8124-4b5324b33c39"">
<img width=""1104"" alt=""Screenshot 2024-11-01 at 4 59 34 PM"" src=""https://github.com/user-attachments/assets/84ee4b43-d1e7-4655-a1f8-6ec2ac69ce74"">


---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-11-04 12:49:17+00:00,[],2024-11-06 12:57:42+00:00,2024-11-06 12:57:40+00:00,https://github.com/apache/airflow/pull/43633,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2455138419, 'issue_id': 2632732707, 'author': 'tirkarthi', 'body': ""Also legacy webserver used `yarn.lock` which is `pnpm-lock.yaml` in new UI which doesn't match below expressions and is considered as a remaining file causing all tests to run.\r\n\r\nhttps://github.com/apache/airflow/blob/20e6517ed334e5d76015bd3e170933b25f9337b5/dev/breeze/src/airflow_breeze/utils/selective_checks.py#L192-L197"", 'created_at': datetime.datetime(2024, 11, 4, 16, 17, 52, tzinfo=datetime.timezone.utc)}]","tirkarthi on (2024-11-04 16:17:52 UTC): Also legacy webserver used `yarn.lock` which is `pnpm-lock.yaml` in new UI which doesn't match below expressions and is considered as a remaining file causing all tests to run.

https://github.com/apache/airflow/blob/20e6517ed334e5d76015bd3e170933b25f9337b5/dev/breeze/src/airflow_breeze/utils/selective_checks.py#L192-L197

"
2632579562,pull_request,closed,,Add support for IAM database authentication for CloudSQL connection,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

In this PR I have added support for IAM authentication to the Postgres and MySQL databases for Cloud SQL connection.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",MaksYermak,2024-11-04 11:39:39+00:00,[],2024-11-12 12:21:45+00:00,2024-11-12 12:21:45+00:00,https://github.com/apache/airflow/pull/43631,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('kind:documentation', '')]",[],
2632543328,pull_request,closed,,Fix condition for using uv in some jobs,"The condition to check if pip is forced in the CI has a bug (GitHub actions bool behaviour is somewhat problematic) and uv has not been used really for some of the jobs. This is now fixed.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-11-04 11:23:45+00:00,[],2024-11-04 17:36:04+00:00,2024-11-04 17:35:59+00:00,https://github.com/apache/airflow/pull/43630,"[('area:dev-tools', '')]","[{'comment_id': 2454602789, 'issue_id': 2632543328, 'author': 'gopidesupavan', 'body': 'Yeah this is somewhat problematic thing difficult to debug :) \r\n\r\nI looked at their documentation, they some suggestion to use `fromjson`  \r\n\r\nhttps://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/evaluate-expressions-in-workflows-and-actions#fromjson', 'created_at': datetime.datetime(2024, 11, 4, 12, 34, 51, tzinfo=datetime.timezone.utc)}]","gopidesupavan on (2024-11-04 12:34:51 UTC): Yeah this is somewhat problematic thing difficult to debug :) 

I looked at their documentation, they some suggestion to use `fromjson`  

https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/evaluate-expressions-in-workflows-and-actions#fromjson

"
2632416779,pull_request,closed,,AIP-84 Get Task Instance Try,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->


<!-- Please keep an empty line above the dashes. -->
---
",kandharvishnu,2024-11-04 10:27:09+00:00,[],2024-11-05 09:27:51+00:00,2024-11-05 06:39:26+00:00,https://github.com/apache/airflow/pull/43629,"[('area:API', ""Airflow's REST/HTTP API""), ('legacy api', 'Whether legacy API changes should be allowed in PR')]",[],
2632399943,pull_request,closed,,Full-on switching Breeze development to use uv,"Since we are switching to uv, breeze dev environment can now also be managed with uv and if you fully switch to it, the workflow of managing breeze, setting the dev environment and upgrading dependencies is far simpler than airflow's so we should be able to follow the regular uv workflow for it - i.e. use uv to manage dependencies, sync, upgrade them etc. This will be really nice way for some of the maintainers to get to learn uv more and prepare for more standardisation in the future Airflow development (maybe) - when we will link uv.lock and constraints management.

Documentation has been updated in Breeze's README to explain some basic way of using uv for breeze development.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-11-04 10:19:33+00:00,[],2024-11-04 17:39:10+00:00,2024-11-04 17:37:14+00:00,https://github.com/apache/airflow/pull/43628,"[('area:dev-tools', '')]",[],
2632245546,pull_request,closed,,[BACKPORT] make Breeze installation and reinstallation support both uv and pipx …,"…(#43607)

So far `breeze` fully supported only `pipx` installation. For example it would reinstall itself automatically with pipx if you attempted to run it from another workspace/checked out repository of Airflow, and it only provided instructions for pipx.

With this PR:

* the `uv tool` is preferred way to install breeze
* the `pipx` is PSF-governance managed alternative
* breeze will reinstall itself using uv if it has been installed with uv before when it is run from a different workspace or different airflow repo checked out in another folder

Also documentation is updated to make `uv` the recommended tool and describing how to install it - with `pipx` provided as an alternative.

Warning is printed in case pre-commit-uv is not installed with the pre-commit (pre-commit-uv significantly speeds up installation of the venvs by pre-commit). This warning also provides instructions how to install it.

(cherry picked from commit ddc5670a8c6f2facb490d3f8de297fb7705d3887)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-11-04 09:10:17+00:00,[],2024-12-04 08:59:01+00:00,2024-11-04 16:52:53+00:00,https://github.com/apache/airflow/pull/43626,"[('area:dev-tools', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]","[{'comment_id': 2454203533, 'issue_id': 2632245546, 'author': 'potiuk', 'body': 'I\'ve added a few more things in CI/selectuve to sync with latest version in main. I could have cherry-picked individual PRs but at this stage it\'s easier to just ""make it works"" in v2-10-test as there are significant non-cherry-pickable changes (new UI, new providers support etc. - all of which are not usable /harmful in v2-10-test.', 'created_at': datetime.datetime(2024, 11, 4, 9, 29, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454204808, 'issue_id': 2632245546, 'author': 'potiuk', 'body': 'Backport of #43607', 'created_at': datetime.datetime(2024, 11, 4, 9, 30, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454262471, 'issue_id': 2632245546, 'author': 'potiuk', 'body': 'ok. looks like we have now full support for `uv` in breeze / venv also for the v2-10-test branch after we merge it.', 'created_at': datetime.datetime(2024, 11, 4, 9, 58, 7, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-11-04 09:29:55 UTC): I've added a few more things in CI/selectuve to sync with latest version in main. I could have cherry-picked individual PRs but at this stage it's easier to just ""make it works"" in v2-10-test as there are significant non-cherry-pickable changes (new UI, new providers support etc. - all of which are not usable /harmful in v2-10-test.

potiuk (Issue Creator) on (2024-11-04 09:30:33 UTC): Backport of #43607

potiuk (Issue Creator) on (2024-11-04 09:58:07 UTC): ok. looks like we have now full support for `uv` in breeze / venv also for the v2-10-test branch after we merge it.

"
2632192136,pull_request,closed,,[BACKPORT] Remove root warning in image used to build packages in CI (#43597) ,"(cherry picked from commit https://github.com/potiuk/airflow/commit/681c59a27c1e0414bf1843c569fad9d0ec407456)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-11-04 08:44:14+00:00,[],2024-11-04 08:59:10+00:00,2024-11-04 08:59:08+00:00,https://github.com/apache/airflow/pull/43625,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]","[{'comment_id': 2454113338, 'issue_id': 2632192136, 'author': 'potiuk', 'body': 'Backport of #43597', 'created_at': datetime.datetime(2024, 11, 4, 8, 44, 33, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-11-04 08:44:33 UTC): Backport of #43597

"
2632180159,pull_request,closed,,[BACKPORT] Allow to switch breeze to use uv internally to create virtualenvs (#43587),"Breeze sometimes creates ""internal"" virtualenvs in local "".build""
directory when it needs - for example in order to run k8s tests
or for release management commands.

This PR adds capability to switch breeze to use `uv` instead of
`pip` to install depdendencies in those envs.

You can now switch breeze to use uv by `breeze setup config --use-uv`
and switch back to pip by `breeze setup config --no-use-uv`.

(cherry picked from commit https://github.com/potiuk/airflow/commit/a2a0ef09357f278bde031092e395f13286fd3076)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-11-04 08:39:20+00:00,[],2024-11-04 08:59:31+00:00,2024-11-04 08:59:29+00:00,https://github.com/apache/airflow/pull/43624,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]","[{'comment_id': 2454106090, 'issue_id': 2632180159, 'author': 'potiuk', 'body': 'Backport of #43587 (depends on #43623', 'created_at': datetime.datetime(2024, 11, 4, 8, 40, 32, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-11-04 08:40:32 UTC): Backport of #43587 (depends on #43623

"
2632167419,pull_request,closed,,[BACKPORT] Complete automation of version replacement pre-commit for pip and uv …,"…(#43205)

The scripts to update pip and uv version were not complete - they did not replace a few of our scripts and documentation. This was especially troublesome for doc replacement, because updating versions manually led to misalignments of tables in markdown.

Lack of completeness of the upgrade caused #43197 and #43135 manual PRs to bump all references.

Also an earlier upgrade caused the markdown table to be broken - with UV row table offset by 1.

This PR fixes it:

* all the scripts and docs are updated now
* when markdown is updated, the table structure is not broken

(cherry picked from commit 7ede73c85a3e5815b061f9b520e999cd4b5efd52)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-11-04 08:32:06+00:00,[],2024-11-04 08:56:29+00:00,2024-11-04 08:56:27+00:00,https://github.com/apache/airflow/pull/43623,"[('area:dev-tools', '')]","[{'comment_id': 2454091707, 'issue_id': 2632167419, 'author': 'potiuk', 'body': 'Backport of #43205', 'created_at': datetime.datetime(2024, 11, 4, 8, 32, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454094891, 'issue_id': 2632167419, 'author': 'potiuk', 'body': 'Backporting some recent changes - to enable switching to uv for v2-10-test/stable in ordert to speed up next 2.10.* preparation and switching between branches (mostly to help @utkarsharma2 and @ephraimbuddy and anyone who cherry-picks bugfixes)', 'created_at': datetime.datetime(2024, 11, 4, 8, 34, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454135744, 'issue_id': 2632167419, 'author': 'potiuk', 'body': 'Just random node issue :)', 'created_at': datetime.datetime(2024, 11, 4, 8, 56, 22, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-11-04 08:32:36 UTC): Backport of #43205

potiuk (Issue Creator) on (2024-11-04 08:34:25 UTC): Backporting some recent changes - to enable switching to uv for v2-10-test/stable in ordert to speed up next 2.10.* preparation and switching between branches (mostly to help @utkarsharma2 and @ephraimbuddy and anyone who cherry-picks bugfixes)

potiuk (Issue Creator) on (2024-11-04 08:56:22 UTC): Just random node issue :)

"
2632131515,pull_request,closed,,Resolve GlueJobTrigger serialization bug causing verbose to always be True,"related: https://github.com/apache/airflow/issues/43620
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",jimwbaldwin,2024-11-04 08:14:04+00:00,[],2024-11-05 16:01:22+00:00,2024-11-05 16:01:18+00:00,https://github.com/apache/airflow/pull/43622,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]","[{'comment_id': 2454058604, 'issue_id': 2632131515, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 11, 4, 8, 14, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454214097, 'issue_id': 2632131515, 'author': 'jimwbaldwin', 'body': ""It doesn't test the functionality of what I wanted to test as it does not defer and thats where the bug is. Trying to figure out how to test something that has been deferred and then resumed."", 'created_at': datetime.datetime(2024, 11, 4, 9, 35, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455275380, 'issue_id': 2632131515, 'author': 'vincbeck', 'body': 'Some static check failures, please [fix them](https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst)', 'created_at': datetime.datetime(2024, 11, 4, 17, 17, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455855181, 'issue_id': 2632131515, 'author': 'jimwbaldwin', 'body': ""Okay, I figured out how to find the bug we suspected and confirm it with a test. Please see the new `test_serialization` test in this PR.\r\n\r\n> Some static check failures, please [fix them](https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst)\r\n\r\nI'll take a look at these soon."", 'created_at': datetime.datetime(2024, 11, 4, 22, 46, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455994580, 'issue_id': 2632131515, 'author': 'jimwbaldwin', 'body': 'The GlueJobTrigger serialization test before I fixed the bug was failing as expected.\r\n\r\n![image](https://github.com/user-attachments/assets/40d3e2c2-2181-47cb-a404-8b59bd66eb8a)\r\n\r\nNow it is passing after removing the conversion to str.', 'created_at': datetime.datetime(2024, 11, 5, 0, 47, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456004134, 'issue_id': 2632131515, 'author': 'jimwbaldwin', 'body': 'Static type checking looks fine after rebase.\r\n<img width=""774"" alt=""image"" src=""https://github.com/user-attachments/assets/e2edaef6-0598-4dad-8b20-a525d182b44c"">', 'created_at': datetime.datetime(2024, 11, 5, 0, 57, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456395942, 'issue_id': 2632131515, 'author': 'gopidesupavan', 'body': 'LGTM :)', 'created_at': datetime.datetime(2024, 11, 5, 7, 7, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456396236, 'issue_id': 2632131515, 'author': 'gopidesupavan', 'body': '@jimwbaldwin Nice one, BTW congrats on your first contribution :)', 'created_at': datetime.datetime(2024, 11, 5, 7, 8, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456424335, 'issue_id': 2632131515, 'author': 'jimwbaldwin', 'body': ""Still has static file checks issues. I'll check."", 'created_at': datetime.datetime(2024, 11, 5, 7, 27, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457573782, 'issue_id': 2632131515, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 11, 5, 16, 1, 21, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-11-04 08:14:09 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

jimwbaldwin (Issue Creator) on (2024-11-04 09:35:05 UTC): It doesn't test the functionality of what I wanted to test as it does not defer and thats where the bug is. Trying to figure out how to test something that has been deferred and then resumed.

vincbeck on (2024-11-04 17:17:12 UTC): Some static check failures, please [fix them](https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst)

jimwbaldwin (Issue Creator) on (2024-11-04 22:46:06 UTC): Okay, I figured out how to find the bug we suspected and confirm it with a test. Please see the new `test_serialization` test in this PR.


I'll take a look at these soon.

jimwbaldwin (Issue Creator) on (2024-11-05 00:47:21 UTC): The GlueJobTrigger serialization test before I fixed the bug was failing as expected.

![image](https://github.com/user-attachments/assets/40d3e2c2-2181-47cb-a404-8b59bd66eb8a)

Now it is passing after removing the conversion to str.

jimwbaldwin (Issue Creator) on (2024-11-05 00:57:30 UTC): Static type checking looks fine after rebase.
<img width=""774"" alt=""image"" src=""https://github.com/user-attachments/assets/e2edaef6-0598-4dad-8b20-a525d182b44c"">

gopidesupavan on (2024-11-05 07:07:48 UTC): LGTM :)

gopidesupavan on (2024-11-05 07:08:03 UTC): @jimwbaldwin Nice one, BTW congrats on your first contribution :)

jimwbaldwin (Issue Creator) on (2024-11-05 07:27:38 UTC): Still has static file checks issues. I'll check.

boring-cyborg[bot] on (2024-11-05 16:01:21 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2631465230,pull_request,open,,Metrics Improvement Project - bootstrap metrics registry,"Metrics Improvement Project: #42881 

After https://github.com/apache/airflow/pull/43340 is merged, we can check in the `get_name` function that the `metric_name` exists in the metrics-registry.yaml file, and throw an error if it doesn't. This will enforce that the `metrics-registry.yaml` exists as a single source of truth for all metrics names. The metrics names from https://airflow.apache.org/docs/apache-airflow/stable/administration-and-deployment/logging-monitoring/metrics.html# will be generated from the `metrics-registry.yaml` file, ensuring that the documentation for metrics names is always up-to-date. 

The following bash script was used to grep all metric names from the codebase, excluding files ignored by git and tests.

```bash
git ls-files | grep -vE '^tests/|^tests_common/' | xargs -I {} grep -oE '\.(incr|decr|gauge|timer|timing)\(""([^""]+)""' ""{}"" | awk -F'""' '{
    type = ($1 ~ /\.incr|\.decr/) ? ""counter"" : ($1 ~ /\.gauge/) ? ""gauge"" : ""timer"";
    print ""- name: ""$2""\n  type: ""type""\n  description: \""\""""
}' > metrics-registry.yaml
```

TODOs:
- populate description fields from documentation
- cross reference `metrics-registry.yaml` with documentation to ensure no metrics were missed during the initial grep
- implement existence check when a metric name is used, blocked by #42881 

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",dannyl1u,2024-11-03 20:48:02+00:00,[],2025-01-03 00:15:19+00:00,,https://github.com/apache/airflow/pull/43618,[],"[{'comment_id': 2567194906, 'issue_id': 2631465230, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2025, 1, 2, 0, 15, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2568254634, 'issue_id': 2631465230, 'author': 'ferruzzi', 'body': 'still blocked waiting for https://github.com/apache/airflow/pull/43340', 'created_at': datetime.datetime(2025, 1, 2, 19, 18, 40, tzinfo=datetime.timezone.utc)}]","github-actions[bot] on (2025-01-02 00:15:17 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

ferruzzi on (2025-01-02 19:18:40 UTC): still blocked waiting for https://github.com/apache/airflow/pull/43340

"
2631427095,pull_request,closed,,Enable back iterative development of latest providers with old airflows,"The compatibility tests in CI are using providers built as packages from sources, so the compatibility tests run there using ""providers/tests"" work just fine, because all providers are installed in the airflow.providers site library. However when we are iterating and debugging backwards compatiblity provider tests, we should be able to use local provider sources, rather than installed packages and we have the possibility of mounting both - providers sources and tests to the image.

See `contributing-docs/testing/unit_tests.rst` on how to do it by using ``--mount-sources providers-and-tests`` flag connected with `--use-airflow-version`.

However as of #42505 this has been broken, because currently in main we  rely on airflow having ""pkgutil"" namespace package for both - airflow, and airflow.providers packages (previous airflow versions had implicit package for airflow.providers package) - so providers installed locally cannot be used as ""another"" source of providers.  Previously it was working because both ""installed"" and ""sources"" `airflow.providers` package were implicit namespace packages.

As explained in https://packaging.python.org/en/latest/guides/packaging-namespace-packages/#native-namespace-packages

> Every distribution that uses the namespace package must include such
> an `__init__.py`. If any distribution does not, it will cause the
> namespace logic to fail and the other sub-packages will not be
> importable. Any additional code in __init__.py will be inaccessible.

So because old airflow uses implicit provider's packages and main airflow from source uses ""explicit"" provider's package, the only way we can make the ""source"" providers is to mount them or symbolically link them to inside installed distribution of airflow package (in site directory) (or dynamically remove the __init__.py from provider's source directory.

We cannot mount the provider package sources ot inside the installed airflow - because when --use-airflow-version is used, airflow is installed dynamically inside the container - after the container is started.

This PR solves the problem by adding an env variable that will make the initialization script to remove the installed airflow.providers folder after installing airflow and linking the ""providers/src/airflow/providers"" folder there. This has the added benefit that all providers (including the preinstalled ones) are used from ""main"" sources rather than from installed packages - which was problematic for the past way of using providers from sources - which used the fact that both ""airflow.providers"" in the site-library and the one in sources were implicit namespace packages.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-11-03 19:40:51+00:00,[],2024-11-04 12:01:40+00:00,2024-11-04 12:01:38+00:00,https://github.com/apache/airflow/pull/43617,"[('area:dev-tools', '')]","[{'comment_id': 2453555631, 'issue_id': 2631427095, 'author': 'potiuk', 'body': ""Very interesting :). I've learned a bit more about namespace packages."", 'created_at': datetime.datetime(2024, 11, 3, 19, 47, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453556652, 'issue_id': 2631427095, 'author': 'potiuk', 'body': 'Found it while working on https://github.com/apache/airflow/pull/43556', 'created_at': datetime.datetime(2024, 11, 3, 19, 51, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454011611, 'issue_id': 2631427095, 'author': 'gopidesupavan', 'body': 'Definitely this is a great catch @potiuk :) Thank you..', 'created_at': datetime.datetime(2024, 11, 4, 7, 43, 31, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-11-03 19:47:59 UTC): Very interesting :). I've learned a bit more about namespace packages.

potiuk (Issue Creator) on (2024-11-03 19:51:54 UTC): Found it while working on https://github.com/apache/airflow/pull/43556

gopidesupavan on (2024-11-04 07:43:31 UTC): Definitely this is a great catch @potiuk :) Thank you..

"
2631090399,pull_request,closed,,Fix docstring for AthenaTrigger,I guess the redshift mentioning is copy-paste mistake,eladkal,2024-11-03 09:33:34+00:00,[],2024-11-03 10:59:53+00:00,2024-11-03 10:59:50+00:00,https://github.com/apache/airflow/pull/43616,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]",[],
2631001977,pull_request,closed,,Prepare docs for Oct 2nd wave of providers rc3,,eladkal,2024-11-03 06:12:10+00:00,[],2024-11-03 09:02:59+00:00,2024-11-03 09:02:59+00:00,https://github.com/apache/airflow/pull/43613,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('kind:documentation', ''), ('provider:fab', '')]",[],
2630809932,pull_request,closed,,Add UV support to venv operators,"Follow-up on #43553 and #43568

Adds support for UV for the VirtualEnv operators.

Don't know if it is acceptable like this, it is auto-detecting: if UV is installed then it is using UV.
Do we need to make this configurable or is an auto-detection sufficient?",jscheffl,2024-11-02 21:37:57+00:00,[],2024-11-07 00:49:38+00:00,2024-11-04 21:27:24+00:00,https://github.com/apache/airflow/pull/43612,"[('area:providers', ''), ('provider:standard', '')]","[{'comment_id': 2453169990, 'issue_id': 2630809932, 'author': 'potiuk', 'body': ""I'd say:\r\n\r\n* add parameter to switch between uv and pip (no auto-detection - too much risk) \r\n* add unit tests :)"", 'created_at': datetime.datetime(2024, 11, 2, 21, 45, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453204133, 'issue_id': 2630809932, 'author': 'jscheffl', 'body': '> I\'d say:\r\n> \r\n>     * add parameter to switch between uv and pip (no auto-detection - too much risk)\r\n\r\nWith the follow-up question(s):\r\n\r\n* What to default?\r\n* Adding a config entry or forcing all DAGs do be adjusted for this param?\r\n\r\nProposal:\r\n\r\n* Option ""AUTO"", ""PIP"", ""UV"" as Enum\r\n    * AUTO=Like now, checks if UV is installed, if not uses pip\r\n    * The other options: How the user likes it\r\n* Default is configurable and uses ""AUTO"" as default as provider config property\r\n\r\nAlternatively we can also make it like attept UV and if it fails attempt pip as fallback?', 'created_at': datetime.datetime(2024, 11, 2, 22, 10, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453213571, 'issue_id': 2630809932, 'author': 'gopidesupavan', 'body': '> > I\'d say:\r\n> > ```\r\n> > * add parameter to switch between uv and pip (no auto-detection - too much risk)\r\n> > ```\r\n> \r\n> With the follow-up question(s):\r\n> \r\n> * What to default?\r\n> * Adding a config entry or forcing all DAGs do be adjusted for this param?\r\n> \r\n> Proposal:\r\n> \r\n> * Option ""AUTO"", ""PIP"", ""UV"" as Enum\r\n>   \r\n>   * AUTO=Like now, checks if UV is installed, if not uses pip\r\n>   * The other options: How the user likes it\r\n> * Default is configurable and uses ""AUTO"" as default as provider config property\r\n> \r\n> Alternatively we can also make it like attept UV and if it fails attempt pip as fallback?\r\n\r\nI feel like default to UV is better, as now we are completely moving towards UV, so if user want to switch they can update?', 'created_at': datetime.datetime(2024, 11, 2, 22, 33, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453564474, 'issue_id': 2630809932, 'author': 'potiuk', 'body': '> Option ""AUTO"", ""PIP"", ""UV"" as Enum\r\n> AUTO=Like now, checks if UV is installed, if not uses pip\r\n\r\nYes. It\'s good I think. Needs to be followed up with newsfragment explaining it.', 'created_at': datetime.datetime(2024, 11, 3, 20, 19, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455690460, 'issue_id': 2630809932, 'author': 'gopidesupavan', 'body': 'LGTM :)', 'created_at': datetime.datetime(2024, 11, 4, 20, 59, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2460737995, 'issue_id': 2630809932, 'author': 'set5think', 'body': ""@jscheffl WOW THANKS FOR TAKING THIS TO THE FINISH LINE!!!  It's amazing to see how simple it was to add what I think is an extremely valuable contribution!!!  GOOD JOB! :heart:"", 'created_at': datetime.datetime(2024, 11, 6, 20, 41, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2461096378, 'issue_id': 2630809932, 'author': 'Lee-W', 'body': 'just saw it on slack. love this one!', 'created_at': datetime.datetime(2024, 11, 7, 0, 49, 37, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-11-02 21:45:48 UTC): I'd say:

* add parameter to switch between uv and pip (no auto-detection - too much risk) 
* add unit tests :)

jscheffl (Issue Creator) on (2024-11-02 22:10:54 UTC): With the follow-up question(s):

* What to default?
* Adding a config entry or forcing all DAGs do be adjusted for this param?

Proposal:

* Option ""AUTO"", ""PIP"", ""UV"" as Enum
    * AUTO=Like now, checks if UV is installed, if not uses pip
    * The other options: How the user likes it
* Default is configurable and uses ""AUTO"" as default as provider config property

Alternatively we can also make it like attept UV and if it fails attempt pip as fallback?

gopidesupavan on (2024-11-02 22:33:40 UTC): I feel like default to UV is better, as now we are completely moving towards UV, so if user want to switch they can update?

potiuk on (2024-11-03 20:19:11 UTC): Yes. It's good I think. Needs to be followed up with newsfragment explaining it.

gopidesupavan on (2024-11-04 20:59:33 UTC): LGTM :)

set5think on (2024-11-06 20:41:46 UTC): @jscheffl WOW THANKS FOR TAKING THIS TO THE FINISH LINE!!!  It's amazing to see how simple it was to add what I think is an extremely valuable contribution!!!  GOOD JOB! :heart:

Lee-W on (2024-11-07 00:49:37 UTC): just saw it on slack. love this one!

"
2630783847,pull_request,closed,,Ensure priority weight is capped at 32-bit integer to prevent roll-over,"This is an alternative PR to #42410 via not converting the priority_weight to float but ensure no roll-over in int is happening - by capping INT values to database limits.

There are several attempts to fix this problem:
- https://github.com/apache/airflow/pull/22784
- https://github.com/apache/airflow/pull/34168
- https://github.com/apache/airflow/pull/37990
- https://github.com/apache/airflow/pull/38125
- https://github.com/apache/airflow/pull/38160",jscheffl,2024-11-02 20:55:48+00:00,[],2024-12-20 05:13:07+00:00,2024-11-14 22:20:37+00:00,https://github.com/apache/airflow/pull/43611,"[('kind:documentation', ''), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:core', ''), ('area:task-sdk', None)]","[{'comment_id': 2453125823, 'issue_id': 2630783847, 'author': 'jscheffl', 'body': 'Besides some adjustments because of rework of classes in regards of TeskSDK I think this can also be back-ported to Ariflow 2.10 line to prevent errors in roll-over. Therefore tagging as 2.10.4 milestone... but backport would most likely a re-write of this PR.', 'created_at': datetime.datetime(2024, 11, 2, 20, 57, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2470378085, 'issue_id': 2630783847, 'author': 'potiuk', 'body': 'should we have a newsfragment (just in case) just explaining what happened?', 'created_at': datetime.datetime(2024, 11, 12, 12, 15, 26, tzinfo=datetime.timezone.utc)}]","jscheffl (Issue Creator) on (2024-11-02 20:57:23 UTC): Besides some adjustments because of rework of classes in regards of TeskSDK I think this can also be back-ported to Ariflow 2.10 line to prevent errors in roll-over. Therefore tagging as 2.10.4 milestone... but backport would most likely a re-write of this PR.

potiuk on (2024-11-12 12:15:26 UTC): should we have a newsfragment (just in case) just explaining what happened?

"
2630753770,pull_request,closed,,Redirect old location module imports to standard provider,"We have moved the operators/sensors/hooks/utils to standard provider from core area location.

This change is to support in ariflow 3.0.0 when user tries to import from old location, 
it redirects to standard provider.

So far the following operators/sensors/hooks/utils has been moved to standard provider.

#41564 
#42506
#42081
#42252

related: #43582
related: #43641
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #43582

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-11-02 19:53:24+00:00,[],2024-11-13 12:38:14+00:00,2024-11-12 12:17:20+00:00,https://github.com/apache/airflow/pull/43610,[],"[{'comment_id': 2453111065, 'issue_id': 2630753770, 'author': 'gopidesupavan', 'body': '@ashb If you feel this is not correct :), please suggest any alternatives or if there is more optimised way to workout these.', 'created_at': datetime.datetime(2024, 11, 2, 19, 56, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453137016, 'issue_id': 2630753770, 'author': 'gopidesupavan', 'body': 'Added tests to check if imports are working or not :)', 'created_at': datetime.datetime(2024, 11, 2, 21, 10, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2470383276, 'issue_id': 2630753770, 'author': 'potiuk', 'body': 'Should we somehow check if ""all"" moved imports are handled? Not sure if we can do it easily though.', 'created_at': datetime.datetime(2024, 11, 12, 12, 18, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2472433745, 'issue_id': 2630753770, 'author': 'gopidesupavan', 'body': '> Should we somehow check if ""all"" moved imports are handled? Not sure if we can do it easily though.\r\n\r\nYeah have ran basic python operator but that is on 3.9 versions. now that MethPathFinder not supported in 3.11 and 3.12, so will check if we can do anything :)', 'created_at': datetime.datetime(2024, 11, 13, 5, 33, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473308599, 'issue_id': 2630753770, 'author': 'potiuk', 'body': '> Yeah have ran basic python operator but that is on 3.9 versions. now that MethPathFinder not supported in 3.11 and 3.12, so will check if we can do anything :)\r\n\r\nJust to document: MetaPath solution suffers from bug introduced in Python 3.11 https://github.com/python/cpython/issues/117860 which is affecting unittest mock imports but also apparently goes beyond just unit tests - for example affecting Apprise 1.8 https://github.com/PrefectHQ/prefect/issues/13314 after they implemented refactors internally.\r\n\r\nMaybe we can come back (@ashb ?) to the old ways of doing it - we had implemented deprecation utils in v1-> v2 migration that we can apply again: https://github.com/apache/airflow/blob/v2-10-test/airflow/operators/__init__.py  - they did the job, the only problem was that the old ""package"" will have remain there - with an `__init__.py` with all the deprecation dicts. Which is ""slightly"" annoying, but also has the benefit of it being pretty explicit, as opposed to MetaPath thing. You know where you should look for it at least. And it will not suffer from the 3.11+ bug of importing packages that are loaded from a different path - because those are  ""real"" packages and real modules not ""linked"" modules. \r\n\r\nAlso - I think such `__init__.py` file can be easily generated from checked out `v2-10-test` branch - we could have a simple script that will import all the ""airflow.operators"", ""airflow.hooks"" etc and produce it in fully automated way, this way we will not have to verify it (and since we will never be changing it, we can generate it now and re-generate just before we release Airflow 3, to acount for potential Airflow 2.11 changes. This was following PEP 562 `__getattr__` https://peps.python.org/pep-0562/ and has been working 100% reliably so far.\r\n\r\nWDYT @gopidesupavan @ashb -> I think while the MetaPath was a nice idea, but it\'s a bit too risky.', 'created_at': datetime.datetime(2024, 11, 13, 11, 31, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473403909, 'issue_id': 2630753770, 'author': 'potiuk', 'body': 'After discussion in Slack @gopidesupavan -> maybe you could (at least for now - attempt to follow the PEP-562 approach and redo the change and we can revisit it later). Ideally simple script to generate moved class dicts would be cool to have so that we can re-apply it as we move new classes.', 'created_at': datetime.datetime(2024, 11, 13, 11, 57, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473481795, 'issue_id': 2630753770, 'author': 'gopidesupavan', 'body': '> After discussion in Slack @gopidesupavan -> maybe you could (at least for now - attempt to follow the PEP-562 approach and redo the change and we can revisit it later). Ideally simple script to generate moved class dicts would be cool to have so that we can re-apply it as we move new classes.\r\n\r\nYeah agree, better to avoid metapath. let me get the changes with PEP 562  `__getattr__`', 'created_at': datetime.datetime(2024, 11, 13, 12, 31, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473492553, 'issue_id': 2630753770, 'author': 'potiuk', 'body': 'BTW. This is a bit of an assumption that PEP 562 is going to be ""ok"" - it **should** work as this really creates aliases to objects in a different package, and we did not have problems with Airflow 2 deprecations even on airflow 2.11 and 2.12  - so it\'s likely to work (but let\'s see :).)', 'created_at': datetime.datetime(2024, 11, 13, 12, 36, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473494889, 'issue_id': 2630753770, 'author': 'potiuk', 'body': 'And BTW. when you create a PR - you can assign ""all versions"" and ""full tests needed"" labels to your PR @gopidesupavan before you create it - this way it will run on all versions  of Python/Databases and K8S (and will trigger all tests)', 'created_at': datetime.datetime(2024, 11, 13, 12, 37, 41, tzinfo=datetime.timezone.utc)}]","gopidesupavan (Issue Creator) on (2024-11-02 19:56:18 UTC): @ashb If you feel this is not correct :), please suggest any alternatives or if there is more optimised way to workout these.

gopidesupavan (Issue Creator) on (2024-11-02 21:10:59 UTC): Added tests to check if imports are working or not :)

potiuk on (2024-11-12 12:18:06 UTC): Should we somehow check if ""all"" moved imports are handled? Not sure if we can do it easily though.

gopidesupavan (Issue Creator) on (2024-11-13 05:33:41 UTC): Yeah have ran basic python operator but that is on 3.9 versions. now that MethPathFinder not supported in 3.11 and 3.12, so will check if we can do anything :)

potiuk on (2024-11-13 11:31:36 UTC): Just to document: MetaPath solution suffers from bug introduced in Python 3.11 https://github.com/python/cpython/issues/117860 which is affecting unittest mock imports but also apparently goes beyond just unit tests - for example affecting Apprise 1.8 https://github.com/PrefectHQ/prefect/issues/13314 after they implemented refactors internally.

Maybe we can come back (@ashb ?) to the old ways of doing it - we had implemented deprecation utils in v1-> v2 migration that we can apply again: https://github.com/apache/airflow/blob/v2-10-test/airflow/operators/__init__.py  - they did the job, the only problem was that the old ""package"" will have remain there - with an `__init__.py` with all the deprecation dicts. Which is ""slightly"" annoying, but also has the benefit of it being pretty explicit, as opposed to MetaPath thing. You know where you should look for it at least. And it will not suffer from the 3.11+ bug of importing packages that are loaded from a different path - because those are  ""real"" packages and real modules not ""linked"" modules. 

Also - I think such `__init__.py` file can be easily generated from checked out `v2-10-test` branch - we could have a simple script that will import all the ""airflow.operators"", ""airflow.hooks"" etc and produce it in fully automated way, this way we will not have to verify it (and since we will never be changing it, we can generate it now and re-generate just before we release Airflow 3, to acount for potential Airflow 2.11 changes. This was following PEP 562 `__getattr__` https://peps.python.org/pep-0562/ and has been working 100% reliably so far.

WDYT @gopidesupavan @ashb -> I think while the MetaPath was a nice idea, but it's a bit too risky.

potiuk on (2024-11-13 11:57:10 UTC): After discussion in Slack @gopidesupavan -> maybe you could (at least for now - attempt to follow the PEP-562 approach and redo the change and we can revisit it later). Ideally simple script to generate moved class dicts would be cool to have so that we can re-apply it as we move new classes.

gopidesupavan (Issue Creator) on (2024-11-13 12:31:45 UTC): Yeah agree, better to avoid metapath. let me get the changes with PEP 562  `__getattr__`

potiuk on (2024-11-13 12:36:34 UTC): BTW. This is a bit of an assumption that PEP 562 is going to be ""ok"" - it **should** work as this really creates aliases to objects in a different package, and we did not have problems with Airflow 2 deprecations even on airflow 2.11 and 2.12  - so it's likely to work (but let's see :).)

potiuk on (2024-11-13 12:37:41 UTC): And BTW. when you create a PR - you can assign ""all versions"" and ""full tests needed"" labels to your PR @gopidesupavan before you create it - this way it will run on all versions  of Python/Databases and K8S (and will trigger all tests)

"
2630522151,pull_request,closed,,Remove un used python_version param argument,"The param `python_version` not using anywhere in `convert_parallel_types_to_folders` function.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-11-02 15:29:16+00:00,[],2024-11-02 16:18:39+00:00,2024-11-02 16:18:39+00:00,https://github.com/apache/airflow/pull/43609,"[('area:dev-tools', '')]",[],
2630498850,pull_request,closed,,Move triggers to standard provider,"Move triggers to standard provider

airflow/triggers/external_task.py
airflow/triggers/file.py
airflow/triggers/temporal.py

to 

providers/src/airflow/providers/standard/triggers/external_task.py
providers/src/airflow/providers/standard/triggers/file.py
providers/src/airflow/providers/standard/triggers/temporal.py

related #43641
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-11-02 14:47:59+00:00,[],2024-11-25 19:05:30+00:00,2024-11-25 19:04:24+00:00,https://github.com/apache/airflow/pull/43608,"[('provider:microsoft-azure', 'Azure-related issues'), ('area:Scheduler', 'including HA (high availability) scheduler'), ('area:CLI', ''), ('area:providers', ''), ('area:dev-tools', ''), ('area:serialization', ''), ('kind:documentation', ''), ('area:core-operators', 'Operators, Sensors and hooks within Core Airflow'), ('area:Triggerer', ''), ('provider:common-compat', ''), ('provider:standard', '')]","[{'comment_id': 2455432213, 'issue_id': 2630498850, 'author': 'gopidesupavan', 'body': 'These changes also require to support 2.8 and 2.9, will wait for this https://github.com/apache/airflow/pull/43556 and then rebase on top so that will fix if anything fails for 2.8 and 2.9.\r\n\r\nMeanwhile working on local and verifying to support these changes on 2.8 and 2.9 :)', 'created_at': datetime.datetime(2024, 11, 4, 18, 34, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455465046, 'issue_id': 2630498850, 'author': 'potiuk', 'body': '> These changes also require to support 2.8 and 2.9, will wait for this #43556 and then rebase on top so that will fix if anything fails for 2.8 and 2.9.\r\n> \r\n> Meanwhile working on local and verifying to support these changes on 2.8 and 2.9 :)\r\n\r\nYeah ... Some of #43556  take a bit more  than I originally anticipated :D', 'created_at': datetime.datetime(2024, 11, 4, 18, 52, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455472265, 'issue_id': 2630498850, 'author': 'gopidesupavan', 'body': '> > These changes also require to support 2.8 and 2.9, will wait for this #43556 and then rebase on top so that will fix if anything fails for 2.8 and 2.9.\r\n> > Meanwhile working on local and verifying to support these changes on 2.8 and 2.9 :)\r\n> \r\n> Yeah ... Some of #43556 take a bit more than I originally anticipated :D\r\n\r\nYeah fine no rush ☺️...', 'created_at': datetime.datetime(2024, 11, 4, 18, 56, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2497935123, 'issue_id': 2630498850, 'author': 'gopidesupavan', 'body': 'This is green now, one test failed not related to this. would anyone have another look on the latest modifications, mostly those are test fixes to support compatibility :)', 'created_at': datetime.datetime(2024, 11, 25, 12, 49, 27, tzinfo=datetime.timezone.utc)}]","gopidesupavan (Issue Creator) on (2024-11-04 18:34:31 UTC): These changes also require to support 2.8 and 2.9, will wait for this https://github.com/apache/airflow/pull/43556 and then rebase on top so that will fix if anything fails for 2.8 and 2.9.

Meanwhile working on local and verifying to support these changes on 2.8 and 2.9 :)

potiuk on (2024-11-04 18:52:45 UTC): Yeah ... Some of #43556  take a bit more  than I originally anticipated :D

gopidesupavan (Issue Creator) on (2024-11-04 18:56:46 UTC): Yeah fine no rush ☺️...

gopidesupavan (Issue Creator) on (2024-11-25 12:49:27 UTC): This is green now, one test failed not related to this. would anyone have another look on the latest modifications, mostly those are test fixes to support compatibility :)

"
2630459400,pull_request,closed,,Make Breeze installation and reinstallation support both uv and pipx,"So far `breeze` fully supported only `pipx` installation. For example it would reinstall itself automatically with pipx if you attempted to run it from another workspace/checked out repository of Airflow, and it only provided instructions for pipx.

With this PR:

* the `uv tool` is preferred way to install breeze
* the `pipx` is PSF-governance managed alternative
* breeze will reinstall itself using uv if it has been installed with uv before when it is run from a different workspace or different airflow repo checked out in another folder

Also documentation is updated to make `uv` the recommended tool and describing how to install it - with `pipx` provided as an alternative.

Warning is printed in case pre-commit-uv is not installed with the
pre-commit (pre-commit-uv significantly speeds up installation of
the venvs by pre-commit). This warning also provides instructions
how to install it.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-11-02 13:33:24+00:00,[],2024-11-02 21:06:43+00:00,2024-11-02 21:06:41+00:00,https://github.com/apache/airflow/pull/43607,"[('area:dev-tools', '')]","[{'comment_id': 2452993113, 'issue_id': 2630459400, 'author': 'potiuk', 'body': ""We'll have to cherry-pick that one to v2-10-test to enable automated breeze switching between checked out `main` and `v2-10-test` to the right version (when breeze is installed via `uv tool`)"", 'created_at': datetime.datetime(2024, 11, 2, 13, 37, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453044436, 'issue_id': 2630459400, 'author': 'potiuk', 'body': 'I also tested a few scenarios where we were switching between ""breeze static checks"" and ""git commit"" pre-commit as I noticed that they could be using different pre-commit installation, and they could make no use of the ""pre-commit-uv"" - I fixed it in this PR, and now also users will get warning if their pre-commit is installed without `uv` and they also will get instructions how to install it.', 'created_at': datetime.datetime(2024, 11, 2, 16, 44, 38, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-11-02 13:37:44 UTC): We'll have to cherry-pick that one to v2-10-test to enable automated breeze switching between checked out `main` and `v2-10-test` to the right version (when breeze is installed via `uv tool`)

potiuk (Issue Creator) on (2024-11-02 16:44:38 UTC): I also tested a few scenarios where we were switching between ""breeze static checks"" and ""git commit"" pre-commit as I noticed that they could be using different pre-commit installation, and they could make no use of the ""pre-commit-uv"" - I fixed it in this PR, and now also users will get warning if their pre-commit is installed without `uv` and they also will get instructions how to install it.

"
2630453576,pull_request,closed,,Support multiple executors in chart,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:



How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
closes: #43224 
relates: #41524, #41797

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",jx2lee,2024-11-02 13:25:12+00:00,[],2024-12-17 15:50:00+00:00,2024-11-24 15:11:44+00:00,https://github.com/apache/airflow/pull/43606,"[('area:helm-chart', 'Airflow Helm Chart')]","[{'comment_id': 2453109835, 'issue_id': 2630453576, 'author': 'jscheffl', 'body': 'Relates to #41524 and #41797', 'created_at': datetime.datetime(2024, 11, 2, 19, 50, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2463728827, 'issue_id': 2630453576, 'author': 'joshua-yeung-mox', 'body': 'We are waiting for this feature. Hope it can be released soon.', 'created_at': datetime.datetime(2024, 11, 8, 4, 25, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2545866000, 'issue_id': 2630453576, 'author': 'seniuts-b2', 'body': '@romsharon98 \r\nCould you please explain: How I can pass multiple executors to custom values.yaml file?\r\nThese don\'t work for me:\r\n`executor: ""KubernetesExecutor, CeleryExecutor""`\r\n`executor: KubernetesExecutor, CeleryExecutor`', 'created_at': datetime.datetime(2024, 12, 16, 15, 3, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2545873578, 'issue_id': 2630453576, 'author': 'romsharon98', 'body': '> @romsharon98 \n> \n> Could you please explain: How I can pass multiple executors to custom values.yaml file?\n> \n> These don\'t work for me:\n> \n> `executor: ""KubernetesExecutor, CeleryExecutor""`\n> \n> `executor: KubernetesExecutor, CeleryExecutor`\n\nCan you explain what exactly you get when you try this?', 'created_at': datetime.datetime(2024, 12, 16, 15, 6, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2545888428, 'issue_id': 2630453576, 'author': 'seniuts-b2', 'body': '@romsharon98 I try to deploy Airflow 2.10.3 to Azure k8s via helm chart and I want to use multiple executors (Celery and Kubernetes) in my DAGs. As I understand in my values.yaml in section _executor:_ I need to provide list of executors that I want. I cannot understand hot to do it', 'created_at': datetime.datetime(2024, 12, 16, 15, 12, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2545928236, 'issue_id': 2630453576, 'author': 'romsharon98', 'body': 'You can use it like you wrote, define it like this:\r\n```executor: ""CeleryExecutor,KubernetesExecutor""```\r\nWhat the error you get?', 'created_at': datetime.datetime(2024, 12, 16, 15, 26, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2546011276, 'issue_id': 2630453576, 'author': 'seniuts-b2', 'body': '@romsharon98 \r\nthe error looks like:\r\n‘only one the following executors can be used: (here is the list of available executors)’', 'created_at': datetime.datetime(2024, 12, 16, 15, 58, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2546100740, 'issue_id': 2630453576, 'author': 'romsharon98', 'body': 'What chart version are you trying to deploy?', 'created_at': datetime.datetime(2024, 12, 16, 16, 33, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2546133693, 'issue_id': 2630453576, 'author': 'seniuts-b2', 'body': '@romsharon98 \r\n1.15.0', 'created_at': datetime.datetime(2024, 12, 16, 16, 47, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2546198765, 'issue_id': 2630453576, 'author': 'romsharon98', 'body': ""This changes didn't release yet in 1.15.0. They should be released on 1.16.0 (you can see the taged milestone in the PR)\r\nIf you want to use multiple executors like written in the [documentation](https://airflow.apache.org/docs/apache-airflow/stable/core-concepts/executor/index.html#statically-coded-hybrid-executors)"", 'created_at': datetime.datetime(2024, 12, 16, 17, 17, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2548363309, 'issue_id': 2630453576, 'author': 'seniuts-b2', 'body': '@romsharon98 thanks a lot for your support. \r\nOne question: is it possible to configure Airflow Helm chart 1.15.0 to use multiple executors? \r\nI tried to change the executor via `config:` section in `values.yaml ` like:\r\n```\r\nconfig:\r\n    core:\r\n      executor: KubernetesExecutor, CeleryExecutor\r\n```\r\nbut during deployment I get error:\r\n`helm.go:84: [debug] execution error at (airflow/charts/airflow/templates/NOTES.txt:205:6): Please configure the executor with \'executor\', not \'config.core.executor\'.`\r\nApproach though env variable also doesn\'t work:\r\n```\r\nenv:\r\n    - name: AIRFLOW__CORE__EXECUTOR\r\n      value: ""KubernetesExecutor,CeleryExecutor,LocalExecutor""\r\n```\r\nI am a bit confused. How to change the executor config in airflow.cfg without using approaches like adding `executor: ""KubernetesExecutor, CeleryExecutor""` or`config.core.executor: KubernetesExecutor, CeleryExecutor` in values.yaml file.\r\nI cannot find some workaround to use multiple executors while deploying Airflow via Airflow Helm Chart 1.15.0', 'created_at': datetime.datetime(2024, 12, 17, 12, 43, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2548826358, 'issue_id': 2630453576, 'author': 'jscheffl', 'body': '> @romsharon98 thanks a lot for your support. One question: is it possible to configure Airflow Helm chart 1.15.0 to use multiple executors? I tried to change the executor via `config:` section in `values.yaml ` like:\r\n> \r\n> ```\r\n> config:\r\n>     core:\r\n>       executor: KubernetesExecutor, CeleryExecutor\r\n> ```\r\n> \r\n> but during deployment I get error: `helm.go:84: [debug] execution error at (airflow/charts/airflow/templates/NOTES.txt:205:6): Please configure the executor with \'executor\', not \'config.core.executor\'.` Approach though env variable also doesn\'t work:\r\n> \r\n> ```\r\n> env:\r\n>     - name: AIRFLOW__CORE__EXECUTOR\r\n>       value: ""KubernetesExecutor,CeleryExecutor,LocalExecutor""\r\n> ```\r\n> \r\n> I am a bit confused. How to change the executor config in airflow.cfg without using approaches like adding `executor: ""KubernetesExecutor, CeleryExecutor""` or`config.core.executor: KubernetesExecutor, CeleryExecutor` in values.yaml file. I cannot find some workaround to use multiple executors while deploying Airflow via Airflow Helm Chart 1.15.0\r\n\r\nYou need to wait for 1.16.0. That makes it ""proper"".\r\n\r\nP.S.: We ""hacked"" it manually (using helmfile and some extra ENV) but if you are not an helm expert I\'d rather not propose to patch-around. Chart 1.16 is not too far away.', 'created_at': datetime.datetime(2024, 12, 17, 15, 49, 58, tzinfo=datetime.timezone.utc)}]","jscheffl on (2024-11-02 19:50:40 UTC): Relates to #41524 and #41797

joshua-yeung-mox on (2024-11-08 04:25:22 UTC): We are waiting for this feature. Hope it can be released soon.

seniuts-b2 on (2024-12-16 15:03:48 UTC): @romsharon98 
Could you please explain: How I can pass multiple executors to custom values.yaml file?
These don't work for me:
`executor: ""KubernetesExecutor, CeleryExecutor""`
`executor: KubernetesExecutor, CeleryExecutor`

romsharon98 on (2024-12-16 15:06:43 UTC): Can you explain what exactly you get when you try this?

seniuts-b2 on (2024-12-16 15:12:11 UTC): @romsharon98 I try to deploy Airflow 2.10.3 to Azure k8s via helm chart and I want to use multiple executors (Celery and Kubernetes) in my DAGs. As I understand in my values.yaml in section _executor:_ I need to provide list of executors that I want. I cannot understand hot to do it

romsharon98 on (2024-12-16 15:26:54 UTC): You can use it like you wrote, define it like this:
```executor: ""CeleryExecutor,KubernetesExecutor""```
What the error you get?

seniuts-b2 on (2024-12-16 15:58:40 UTC): @romsharon98 
the error looks like:
‘only one the following executors can be used: (here is the list of available executors)’

romsharon98 on (2024-12-16 16:33:36 UTC): What chart version are you trying to deploy?

seniuts-b2 on (2024-12-16 16:47:56 UTC): @romsharon98 
1.15.0

romsharon98 on (2024-12-16 17:17:10 UTC): This changes didn't release yet in 1.15.0. They should be released on 1.16.0 (you can see the taged milestone in the PR)
If you want to use multiple executors like written in the [documentation](https://airflow.apache.org/docs/apache-airflow/stable/core-concepts/executor/index.html#statically-coded-hybrid-executors)

seniuts-b2 on (2024-12-17 12:43:53 UTC): @romsharon98 thanks a lot for your support. 
One question: is it possible to configure Airflow Helm chart 1.15.0 to use multiple executors? 
I tried to change the executor via `config:` section in `values.yaml ` like:
```
config:
    core:
      executor: KubernetesExecutor, CeleryExecutor
```
but during deployment I get error:
`helm.go:84: [debug] execution error at (airflow/charts/airflow/templates/NOTES.txt:205:6): Please configure the executor with 'executor', not 'config.core.executor'.`
Approach though env variable also doesn't work:
```
env:
    - name: AIRFLOW__CORE__EXECUTOR
      value: ""KubernetesExecutor,CeleryExecutor,LocalExecutor""
```
I am a bit confused. How to change the executor config in airflow.cfg without using approaches like adding `executor: ""KubernetesExecutor, CeleryExecutor""` or`config.core.executor: KubernetesExecutor, CeleryExecutor` in values.yaml file.
I cannot find some workaround to use multiple executors while deploying Airflow via Airflow Helm Chart 1.15.0

jscheffl on (2024-12-17 15:49:58 UTC): You need to wait for 1.16.0. That makes it ""proper"".

P.S.: We ""hacked"" it manually (using helmfile and some extra ENV) but if you are not an helm expert I'd rather not propose to patch-around. Chart 1.16 is not too far away.

"
2630419070,pull_request,closed,,Explain how to use uv with airflow virtualenv and make it works,"Since we are switching to ``uv`` as our main development tooling, we should explain how to use ``uv`` with airflow and explain some basic commands that should be used to have a workign uv-manaaged venv.

This documentation explains some why's and initial hows with uv, also it fixes uv to work on macos with some default extras - such as devel, devel-tests and --all-extras, so that it works on a wider range of systems (includin MacOS). This includes making plyvel not installed on MacOS, because it's next to impossible to compile levelDB on a modern MacOS Operating system and it is anyway an optional component of google provider.

Fixes: #43200

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-11-02 11:57:53+00:00,[],2024-11-04 09:01:17+00:00,2024-11-02 19:32:24+00:00,https://github.com/apache/airflow/pull/43604,"[('area:dev-tools', '')]","[{'comment_id': 2452974508, 'issue_id': 2630419070, 'author': 'potiuk', 'body': 'Just to copy a bit more context on this change:\r\n\r\nMy - very basic and long term assumption for our local dev environment is that while ``uv`` makes it (and it will only get better) to maintain, upgrade, sync and setup the environment  very easily and the UX is great and complexity is low, we do not want to EXCLUSIVELY have setup that only works with UV\r\n\r\nI think everything that works with uv should also be achievable (even if in a much more convoluted way) with the standard tooling that is managed by PSF-managed tools (pip , hatch etc.) .\r\n\r\nWhile I love Astral, they are VC-backed company that will expect some returns of investment, and while I believe they are great community member and have no evil goals, they might get acquired, or whatever at any time, and we do not want to have a “strong” dependency on their tooling being available forever.\r\n\r\nThis goes in line with ASF’s “plan for 50 years” tools dependency approach - use what’s available and makes you more productive, but don’t rely too much on anything you cannot exchange easily. Sooner or later EVERY vendor we work with will disappear, and we must be there.\r\n\r\nThat’s why this doc has two chapters “recommended with UV” and “here is how you can do it with pip”\r\n\r\nI also removed hatch - for simplicity - we do not want to describe 3 tools, also I removed plyvel as dependency as it is almost impossible to install it MacOs and it blocked --all-extras and --devel extras to be installed for MacOS\r\n\r\nAll the rest might fail when installing - and you might need to have some system dependencies but they should be “easy” to install with brew and others\r\n\r\nPlyvel has a long time history of breaking MacOS and 10.15 is famously broken now https://github.com/wbolster/plyvel/issues/114\r\n\r\nAlso ``uv.lock`` is excluded for now until we figure out if /how to keep it updated acrooss all ~700 dependencies of ours and how to join it with the constraints we produce.', 'created_at': datetime.datetime(2024, 11, 2, 12, 25, 10, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-11-02 12:25:10 UTC): Just to copy a bit more context on this change:

My - very basic and long term assumption for our local dev environment is that while ``uv`` makes it (and it will only get better) to maintain, upgrade, sync and setup the environment  very easily and the UX is great and complexity is low, we do not want to EXCLUSIVELY have setup that only works with UV

I think everything that works with uv should also be achievable (even if in a much more convoluted way) with the standard tooling that is managed by PSF-managed tools (pip , hatch etc.) .

While I love Astral, they are VC-backed company that will expect some returns of investment, and while I believe they are great community member and have no evil goals, they might get acquired, or whatever at any time, and we do not want to have a “strong” dependency on their tooling being available forever.

This goes in line with ASF’s “plan for 50 years” tools dependency approach - use what’s available and makes you more productive, but don’t rely too much on anything you cannot exchange easily. Sooner or later EVERY vendor we work with will disappear, and we must be there.

That’s why this doc has two chapters “recommended with UV” and “here is how you can do it with pip”

I also removed hatch - for simplicity - we do not want to describe 3 tools, also I removed plyvel as dependency as it is almost impossible to install it MacOs and it blocked --all-extras and --devel extras to be installed for MacOS

All the rest might fail when installing - and you might need to have some system dependencies but they should be “easy” to install with brew and others

Plyvel has a long time history of breaking MacOS and 10.15 is famously broken now https://github.com/wbolster/plyvel/issues/114

Also ``uv.lock`` is excluded for now until we figure out if /how to keep it updated acrooss all ~700 dependencies of ours and how to join it with the constraints we produce.

"
2630184733,pull_request,closed,,"Add min version to ipykernel,scrapbook, pywinrm","Adding min versions as mentioned below:

1. pywinrm>=0.4 (We already have a pin on `pywinrm` in one of the providers. Now, adding pin to msft provider)
2. ipykernel>=6.29.4 (Released in March 2024.)
3. scrapbook[all]>=0.5.0 (This is the only version ever released and it was released in Jan 2021)

closes https://github.com/apache/airflow/issues/42989",rawwar,2024-11-02 04:05:07+00:00,[],2024-11-02 10:11:08+00:00,2024-11-02 10:10:51+00:00,https://github.com/apache/airflow/pull/43603,"[('provider:microsoft-azure', 'Azure-related issues'), ('area:providers', ''), ('provider:papermill', '')]","[{'comment_id': 2452943321, 'issue_id': 2630184733, 'author': 'potiuk', 'body': 'Thanks @rawwar for all the work on this one :) !!!', 'created_at': datetime.datetime(2024, 11, 2, 10, 11, 7, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-11-02 10:11:07 UTC): Thanks @rawwar for all the work on this one :) !!!

"
2630158157,pull_request,closed,,"AIP-72: Add ""update TI state"" endpoint for Execution API","Part of https://github.com/apache/airflow/issues/43586

## Changes 

This PR adds a new endpoint `/execution/{task_instance_id}/state` that will allow Updating the State of the TI from the worker.

Some of the interesting changes / TILs were:

### Minified Schema & Use of Discriminated union schemas

(hat tip to @ashb for this)

To streamline the data exchange between workers and the Task Execution API, this PR adds minified schemas for Task Instance updates i.e. focuses solely on the fields necessary for specific state transitions, reducing payload size and validations. Since our TaskInstance model is huge this also keeps it clean to focus on only those fields that matter for this case.

The endpoint added in this PR also leverages Pydantic’s [discriminated unions](https://docs.pydantic.dev/latest/concepts/unions/#discriminated-unions) to handle varying payload structures for each target state. This allows a single endpoint to receive different payloads (with different validations). For example:

- `TIEnterRunningPayload`: Requires fields such as hostname, unixname, pid, and start_date to mark a task as RUNNING.
- `TITerminalStatePayload`: Supports terminal states like SUCCESS, FAILED, SKIPPED,
- `TITargetStatePayload`: Allows for other non-terminal, non-running states that a task may transition to.

This is better so we don't have invalid payloads for example adding a start_date when a task is marked as SUCCESS, it doesn't make sense and it might be an error from the client!

![Nov-04-2024 20-00-26](https://github.com/user-attachments/assets/07c1a197-0238-4c1a-9783-f23dd74a8d3e)


### `status` codes

`fastapi` allows importing a handy `status` module from starlette which has status code and the reason in its name. Reference: https://fastapi.tiangolo.com/reference/status/
Example:

`status.HTTP_204_NO_CONTENT` and `status.HTTP_409_CONFLICT` explain a lot more than just a ""204 code"" which doesn't tell much. ~I plan to change our current integers on public API to these in coming days.~ Done ✅ : https://github.com/apache/airflow/pull/43663

## Assumption

For now, I have assumed that we/the user don't care about `end_date` for `REMOVED` & `UPSTREAM_FAILED` status since they should be handled by the scheduler and shouldn't even show up on the worker. 
For `SKIPPED` state, since there are 2 scenarios:
 1) A user can run the task and raise a `AirflowSkipException`
 2) a task skipped on scheduler itself! For (1), we could set an end date, but (2) doesn't have it. 

## Future Work

The following items will be done as future work -- they have been added to the [AIP-72 project board](https://github.com/orgs/apache/projects/405).
- [ ] Pass a [RFC 9457](https://datatracker.ietf.org/doc/html/rfc9457) compliant error message in ""detail"" field of `HTTPException` to provide more information about the error
- [ ] Add a separate heartbeat endpoint to track the TI’s active state.
- [ ] Replace handling of `SQLAlchemyError` with FastAPI's [Custom Exception handling](https://fastapi.tiangolo.com/tutorial/handling-errors/#install-custom-exception-handlers) across the Execution API endpoints. That way we don't need duplicate code across multiple endpoints.
- [ ] Replace `None` state on TaskInstance with a `Created` state. ([link](https://github.com/orgs/apache/projects/405/views/1?pane=issue&itemId=85900878))
- [ ] Remove redundant code that also sets task state once we remove DB access from the worker. This is assuming that the Webserver or the new FastAPI endpoints don't use this endpoint.


Co-authored-by: Ash Berlin-Taylor <ash@apache.org>


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-11-02 03:24:57+00:00,[],2024-11-05 14:22:52+00:00,2024-11-05 13:23:23+00:00,https://github.com/apache/airflow/pull/43602,[],"[{'comment_id': 2456710118, 'issue_id': 2630158157, 'author': 'ashb', 'body': 'I have a (maybe/probably) crazy idea that might make our tests nicer, and easier to parallelize in future:\r\n\r\nIf we use dependency overrides, we can make the session inside our routers use the same session https://fastapi.tiangolo.com/advanced/testing-dependencies/#use-the-appdependency_overrides-attribute\r\n\r\nBut for now: lets set up this dep override and change the `commit()` in tests to `flush()` (possibly putting the flush inside the dag_maker fixture itself?)', 'created_at': datetime.datetime(2024, 11, 5, 9, 48, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457025627, 'issue_id': 2630158157, 'author': 'kaxil', 'body': ""> I have a (maybe/probably) crazy idea that might make our tests nicer, and easier to parallelize in future:\r\n> \r\n> If we use dependency overrides, we can make the session inside our routers use the same session https://fastapi.tiangolo.com/advanced/testing-dependencies/#use-the-appdependency_overrides-attribute\r\n> \r\n> But for now: lets set up this dep override and change the `commit()` in tests to `flush()` (possibly putting the flush inside the dag_maker fixture itself?)\r\n\r\nCouldn't get it work easily, going to punt it to later!"", 'created_at': datetime.datetime(2024, 11, 5, 12, 19, 54, tzinfo=datetime.timezone.utc)}]","ashb on (2024-11-05 09:48:54 UTC): I have a (maybe/probably) crazy idea that might make our tests nicer, and easier to parallelize in future:

If we use dependency overrides, we can make the session inside our routers use the same session https://fastapi.tiangolo.com/advanced/testing-dependencies/#use-the-appdependency_overrides-attribute

But for now: lets set up this dep override and change the `commit()` in tests to `flush()` (possibly putting the flush inside the dag_maker fixture itself?)

kaxil (Issue Creator) on (2024-11-05 12:19:54 UTC): Couldn't get it work easily, going to punt it to later!

"
2630082488,pull_request,closed,,"added ""name"" and ""hostname"" to template_fields in KubernetesPodOperator","<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #43480 
related: #43480 

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Hi,

This PR closes: #43480.
It's a small change, which involves adding the `name` and `hostname` to the `template_fields` in the `KubernetesPodOperator`.

I decided to use a different approach from the one suggested by the issue creator.
This was to avoid changing the class API by renaming `self.name` to `self.pod_name`.

What do you think?

<!-- Please keep an empty line above the dashes. -->
---
",eilon246810,2024-11-02 00:43:19+00:00,[],2025-01-10 00:15:51+00:00,2025-01-10 00:15:51+00:00,https://github.com/apache/airflow/pull/43601,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:providers', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues')]","[{'comment_id': 2471374552, 'issue_id': 2630082488, 'author': 'eilon246810', 'body': 'I see I have some tests failing, setting PR to draft until I fix these.', 'created_at': datetime.datetime(2024, 11, 12, 19, 23, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2471455160, 'issue_id': 2630082488, 'author': 'eilon246810', 'body': 'The tests seem to fail because some of them mock the `name` parameter, and then the `validate_key` function inside `_set_name` fails because it expects a string.\r\n\r\nI need help here - what is the way to solve this in your opinion?', 'created_at': datetime.datetime(2024, 11, 12, 19, 57, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2569955082, 'issue_id': 2630082488, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2025, 1, 4, 0, 14, 59, tzinfo=datetime.timezone.utc)}]","eilon246810 (Issue Creator) on (2024-11-12 19:23:15 UTC): I see I have some tests failing, setting PR to draft until I fix these.

eilon246810 (Issue Creator) on (2024-11-12 19:57:43 UTC): The tests seem to fail because some of them mock the `name` parameter, and then the `validate_key` function inside `_set_name` fails because it expects a string.

I need help here - what is the way to solve this in your opinion?

github-actions[bot] on (2025-01-04 00:14:59 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2629986062,pull_request,closed,,Fix Bedrock system test,"Bedrock retired the Llama2 model, this updates the test to use the closest replacement Llama3 model.

Tests passes when run locally after this change.  

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",ferruzzi,2024-11-01 22:51:34+00:00,[],2024-11-02 00:57:06+00:00,2024-11-02 00:57:05+00:00,https://github.com/apache/airflow/pull/43600,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]","[{'comment_id': 2452714621, 'issue_id': 2629986062, 'author': 'ferruzzi', 'body': ""Agreed, but the complete name change would make automating the new name choice difficult.  \r\n\r\nFor reference, here's a list of the possible replacements for modelId `llama2-13b-chat-v1` :\r\n\r\n```\r\nIn [3]: [[model['modelName'], model['modelId']] for model in bedrock.list_foundation_models()['modelSummaries'] if 'Llama' in model['modelName']]\r\nOut[3]: \r\n[['Llama 3 8B Instruct', 'meta.llama3-8b-instruct-v1:0'],\r\n ['Llama 3 70B Instruct', 'meta.llama3-70b-instruct-v1:0'],\r\n ['Llama 3.2 11B Instruct', 'meta.llama3-2-11b-instruct-v1:0'],\r\n ['Llama 3.2 90B Instruct', 'meta.llama3-2-90b-instruct-v1:0'],\r\n ['Llama 3.2 1B Instruct', 'meta.llama3-2-1b-instruct-v1:0'],\r\n ['Llama 3.2 3B Instruct', 'meta.llama3-2-3b-instruct-v1:0']]\r\n\r\n```\r\n\r\nI'm not sure that would be a particularly easy choice to automate.  If it was just a version number bump or something then maybe, but this is a bit trickier to reliably predict"", 'created_at': datetime.datetime(2024, 11, 1, 23, 27, 23, tzinfo=datetime.timezone.utc)}]","ferruzzi (Issue Creator) on (2024-11-01 23:27:23 UTC): Agreed, but the complete name change would make automating the new name choice difficult.  

For reference, here's a list of the possible replacements for modelId `llama2-13b-chat-v1` :

```
In [3]: [[model['modelName'], model['modelId']] for model in bedrock.list_foundation_models()['modelSummaries'] if 'Llama' in model['modelName']]
Out[3]: 
[['Llama 3 8B Instruct', 'meta.llama3-8b-instruct-v1:0'],
 ['Llama 3 70B Instruct', 'meta.llama3-70b-instruct-v1:0'],
 ['Llama 3.2 11B Instruct', 'meta.llama3-2-11b-instruct-v1:0'],
 ['Llama 3.2 90B Instruct', 'meta.llama3-2-90b-instruct-v1:0'],
 ['Llama 3.2 1B Instruct', 'meta.llama3-2-1b-instruct-v1:0'],
 ['Llama 3.2 3B Instruct', 'meta.llama3-2-3b-instruct-v1:0']]

```

I'm not sure that would be a particularly easy choice to automate.  If it was just a version number bump or something then maybe, but this is a bit trickier to reliably predict

"
2629669092,pull_request,closed,,"Move TaskInstance heartbeat directly on to TI row, not on Job row","This is part of the work for AIP-72 epic, but is done as a separate PR for
ease of review.

This PR byitself doesn't remove the LocalTaskJob row (that will happen in a
future PR when the exeuction code is moved over to live in the TaskSDK) but
this paves the way for it. The reason we are making this change is:

- Having a separate row for tracking TI heartbeat is not really buying us much
- With the addition of TaskInstanceHistory we don't need _another_ separate
  record of when/where TIs were run
- It simplifies things (one less join in finding zombies)
- Makes zombie tracking eaiser -- it is now just on the TI state, not the
  combination of TI and Job state.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",ashb,2024-11-01 18:50:00+00:00,[],2024-11-04 22:30:21+00:00,2024-11-03 01:04:52+00:00,https://github.com/apache/airflow/pull/43599,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:CLI', ''), ('area:dev-tools', ''), ('area:serialization', ''), ('kind:documentation', ''), ('area:Executors-core', 'LocalExecutor & SequentialExecutor'), ('area:db-migrations', 'PRs with DB migration'), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]",[],
2629581290,pull_request,closed,,More executor cleanup to remove Plugin support,"Support for loading executors via plugins was removed in #43289 but a few bits remained left behind.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",o-nikolas,2024-11-01 17:57:05+00:00,[],2024-11-02 11:07:07+00:00,2024-11-01 20:50:32+00:00,https://github.com/apache/airflow/pull/43598,"[('area:Executors-core', 'LocalExecutor & SequentialExecutor')]","[{'comment_id': 2452394652, 'issue_id': 2629581290, 'author': 'o-nikolas', 'body': 'CC @kaxil', 'created_at': datetime.datetime(2024, 11, 1, 18, 36, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2452955336, 'issue_id': 2629581290, 'author': 'kaxil', 'body': 'Thanks @o-nikolas', 'created_at': datetime.datetime(2024, 11, 2, 11, 7, 6, tzinfo=datetime.timezone.utc)}]","o-nikolas (Issue Creator) on (2024-11-01 18:36:22 UTC): CC @kaxil

kaxil on (2024-11-02 11:07:06 UTC): Thanks @o-nikolas

"
2629547149,pull_request,closed,,Remove root warning in image used to build packages in CI,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-11-01 17:39:28+00:00,[],2024-11-02 14:06:24+00:00,2024-11-01 22:33:10+00:00,https://github.com/apache/airflow/pull/43597,"[('area:dev-tools', '')]","[{'comment_id': 2452658945, 'issue_id': 2629547149, 'author': 'gopidesupavan', 'body': 'cool, thank you :)', 'created_at': datetime.datetime(2024, 11, 1, 22, 12, 42, tzinfo=datetime.timezone.utc)}]","gopidesupavan on (2024-11-01 22:12:42 UTC): cool, thank you :)

"
2629515971,pull_request,closed,,Remove warning about missing config in edge plugin loading,"If pytests are executed in some cases edge plugin is loaded indirectly when plugins manager is initialized. THis should not happen as well as the warning is not needed.

This small change adds a fallback such that the warning is not made, `False` is used per default.",jscheffl,2024-11-01 17:23:27+00:00,[],2024-11-01 17:50:37+00:00,2024-11-01 17:50:36+00:00,https://github.com/apache/airflow/pull/43596,"[('area:providers', ''), ('type:bug-fix', 'Changelog: Bug Fixes'), ('AIP-69', 'Edge Executor'), ('provider:edge', 'Edge Executor / Worker (AIP-69)')]",[],
2629379419,pull_request,closed,,Remove extra step standard provider installation in OpenApi client tests ,"See here this https://github.com/apache/airflow/actions/runs/11632413925/job/32395501915?pr=43571#step:13:1 
extra step not required. 

Part of this step `""Prepare FAB+standard provider packages: wheel"" ` standard provider wheel is building 

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-11-01 16:20:10+00:00,[],2024-11-23 19:55:09+00:00,2024-11-01 17:59:40+00:00,https://github.com/apache/airflow/pull/43593,"[('area:dev-tools', '')]",[],
2629198609,pull_request,closed,, Fix Try Selector in Mapped Tasks also on Index 0 (#43590) Backport,"(cherry picked from commit 1c3d555cc92104a34b63bfaa404ba2474ed945d6)

Backport of #43590 to v2 line",jscheffl,2024-11-01 14:50:32+00:00,[],2024-11-01 18:21:12+00:00,2024-11-01 18:21:12+00:00,https://github.com/apache/airflow/pull/43591,"[('area:webserver', 'Webserver related Issues'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('legacy ui', 'Whether legacy UI change should be allowed in PR')]",[],
2629194157,pull_request,closed,,Fix Try Selector in Mapped Tasks also on Index 0,"While doing a regression on release tests on 2.10.3rc2 I noticed that the fixed logic still has a problem on mapped in dex 0 - seem I did not click on the first mapped element when testing :-(

This PR fixes the logic such that the try history is correctly fetched also for index 0 if dynamic mapped tasks.

Hope we get rid of this code in Airflow 3, this manual client function is really error prone.

related: #43565 #42357
",jscheffl,2024-11-01 14:48:12+00:00,[],2024-11-01 17:45:13+00:00,2024-11-01 17:45:13+00:00,https://github.com/apache/airflow/pull/43590,"[('area:webserver', 'Webserver related Issues'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('legacy ui', 'Whether legacy UI change should be allowed in PR')]",[],
2629155027,pull_request,closed,,Allow Utkarsh to run dockerhub image release job (#43588),"(cherry picked from commit c4a0461dd362e80b82424b8cc93e71392de8e7e5)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",utkarsharma2,2024-11-01 14:30:24+00:00,[],2024-12-02 04:58:45+00:00,2024-11-01 14:31:27+00:00,https://github.com/apache/airflow/pull/43589,"[('area:dev-tools', '')]",[],
2629146852,pull_request,closed,,Allow Utkarsh to run dockerhub image release job,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-11-01 14:25:50+00:00,[],2024-11-01 14:27:48+00:00,2024-11-01 14:27:46+00:00,https://github.com/apache/airflow/pull/43588,"[('area:dev-tools', '')]",[],
2629138094,pull_request,closed,,Allow to switch breeze to use uv internally to create virtualenvs,"Breeze sometimes creates ""internal"" virtualenvs in local "".build"" directory when it needs - for example in order to run k8s tests or for release management commands.

This PR adds capability to switch breeze to use `uv` instead of `pip` to install depdendencies in those envs.

You can now switch breeze to use uv by `breeze setup config --use-uv` and switch back to pip by `breeze setup config --no-use-uv`.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-11-01 14:20:50+00:00,[],2024-11-02 14:06:39+00:00,2024-11-01 16:55:36+00:00,https://github.com/apache/airflow/pull/43587,"[('area:dev-tools', '')]",[],
2628848534,pull_request,closed,,mark test_task_workflow_trigger_success as flaky (#42972),"(cherry picked from commit f1735b4c0c4743ccd747a60c88310d6ef45bbdc7)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",utkarsharma2,2024-11-01 11:24:11+00:00,[],2024-11-01 11:31:00+00:00,2024-11-01 11:30:58+00:00,https://github.com/apache/airflow/pull/43580,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)'), ('area:Triggerer', '')]",[],
2628693266,pull_request,closed,,Sync v2-10-stable with v2-10-test(sync_2-10-test-rc2) to release 2.10.3,Time for 2.10.3rc2,utkarsharma2,2024-11-01 09:34:23+00:00,[],2025-01-11 19:44:18+00:00,2024-11-01 12:27:36+00:00,https://github.com/apache/airflow/pull/43578,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:webserver', 'Webserver related Issues'), ('area:dev-tools', ''), ('area:API', ""Airflow's REST/HTTP API""), ('kind:documentation', ''), ('area:production-image', 'Production image improvements and fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('area:db-migrations', 'PRs with DB migration')]",[],
2628659694,pull_request,closed,, FIX: Don't raise a warning in ExecutorSafeguard when execute is called from an extended operator (#42849) Backport,"Backport of #42849 to v2-10-test branch for the next release

Relates to #41470",jscheffl,2024-11-01 09:12:08+00:00,[],2024-11-01 12:05:20+00:00,2024-11-01 10:10:09+00:00,https://github.com/apache/airflow/pull/43577,"[('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2451592740, 'issue_id': 2628659694, 'author': 'jscheffl', 'body': 'FYI @dabla', 'created_at': datetime.datetime(2024, 11, 1, 9, 36, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2451634815, 'issue_id': 2628659694, 'author': 'jscheffl', 'body': '@utkarsharma2 if 2.10.3rc2 is not (yet) cut... this would be a late arrival candidante...', 'created_at': datetime.datetime(2024, 11, 1, 10, 10, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2451725987, 'issue_id': 2628659694, 'author': 'utkarsharma2', 'body': ""> @utkarsharma2 if 2.10.3rc2 is not (yet) cut... this would be a late arrival candidante...\r\n\r\nSure I'll include it."", 'created_at': datetime.datetime(2024, 11, 1, 11, 27, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2451767094, 'issue_id': 2628659694, 'author': 'dabla', 'body': 'Thanks guys for backporting this fix!', 'created_at': datetime.datetime(2024, 11, 1, 12, 5, 19, tzinfo=datetime.timezone.utc)}]","jscheffl (Issue Creator) on (2024-11-01 09:36:07 UTC): FYI @dabla

jscheffl (Issue Creator) on (2024-11-01 10:10:12 UTC): @utkarsharma2 if 2.10.3rc2 is not (yet) cut... this would be a late arrival candidante...

utkarsharma2 on (2024-11-01 11:27:53 UTC): Sure I'll include it.

dabla on (2024-11-01 12:05:19 UTC): Thanks guys for backporting this fix!

"
2628625267,pull_request,closed,,bugfix description should be optional for openlineage integration with `AthenaOperator`,"Comments are optional for athena table columns. This change fixes openlineage behavior for AthenaOperator.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Udbv,2024-11-01 08:49:27+00:00,[],2024-11-19 07:30:39+00:00,2024-11-06 09:46:47+00:00,https://github.com/apache/airflow/pull/43576,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]","[{'comment_id': 2451773122, 'issue_id': 2628625267, 'author': 'Udbv', 'body': '@eladkal @o-nikolas  pls review, linter fixed', 'created_at': datetime.datetime(2024, 11, 1, 12, 10, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453100583, 'issue_id': 2628625267, 'author': 'Udbv', 'body': '@o-nikolas sorry, i am not able to write proper test for this, i’m not aware of how to write tests for airflow operators 😔. I could only provide queries for tests.', 'created_at': datetime.datetime(2024, 11, 2, 19, 13, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453104796, 'issue_id': 2628625267, 'author': 'potiuk', 'body': 'Just look at the other tests implemented and extend them appropriately. They are pretty logical:\r\n\r\n``providers/tests/amazon/aws/operators/test_athena.py``', 'created_at': datetime.datetime(2024, 11, 2, 19, 31, 15, tzinfo=datetime.timezone.utc)}]","Udbv (Issue Creator) on (2024-11-01 12:10:03 UTC): @eladkal @o-nikolas  pls review, linter fixed

Udbv (Issue Creator) on (2024-11-02 19:13:09 UTC): @o-nikolas sorry, i am not able to write proper test for this, i’m not aware of how to write tests for airflow operators 😔. I could only provide queries for tests.

potiuk on (2024-11-02 19:31:15 UTC): Just look at the other tests implemented and extend them appropriately. They are pretty logical:

``providers/tests/amazon/aws/operators/test_athena.py``

"
2628475678,pull_request,closed,,Add tirkarthi to committers list.,"Adding myself to the list as part of new committer onboarding.

https://github.com/apache/airflow/blob/main/COMMITTERS.rst#new-committer-onboarding-steps",tirkarthi,2024-11-01 07:10:10+00:00,[],2024-11-01 09:20:56+00:00,2024-11-01 09:20:41+00:00,https://github.com/apache/airflow/pull/43573,"[('area:dev-tools', ''), ('kind:documentation', '')]","[{'comment_id': 2451573983, 'issue_id': 2628475678, 'author': 'tirkarthi', 'body': 'Thanks @Lee-W .', 'created_at': datetime.datetime(2024, 11, 1, 9, 20, 55, tzinfo=datetime.timezone.utc)}]","tirkarthi (Issue Creator) on (2024-11-01 09:20:55 UTC): Thanks @Lee-W .

"
2628436045,pull_request,closed,,Mark all tasks as skipped when failing a dag_run manually including t…,"(cherry picked from commit eda6a8fcf009eb224ec556f7117a97965dbd4dd5)

Backport of - https://github.com/apache/airflow/pull/43482",utkarsharma2,2024-11-01 06:38:29+00:00,[],2024-11-01 08:37:46+00:00,2024-11-01 07:42:20+00:00,https://github.com/apache/airflow/pull/43572,"[('area:webserver', 'Webserver related Issues'), ('area:API', ""Airflow's REST/HTTP API""), ('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2451398348, 'issue_id': 2628436045, 'author': 'Lee-W', 'body': 'looks like some test are failing 🤔', 'created_at': datetime.datetime(2024, 11, 1, 6, 54, 24, tzinfo=datetime.timezone.utc)}]","Lee-W on (2024-11-01 06:54:24 UTC): looks like some test are failing 🤔

"
2628403145,pull_request,closed,,Move triggers and remaining operators/sensors into standard provider,"Moving core area triggers and remaining operators/sensors inside standard provider

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-11-01 06:10:14+00:00,[],2024-12-01 07:49:10+00:00,2024-12-01 07:49:10+00:00,https://github.com/apache/airflow/pull/43571,"[('provider:microsoft-azure', 'Azure-related issues'), ('area:providers', ''), ('area:dev-tools', ''), ('area:serialization', ''), ('kind:documentation', ''), ('area:core-operators', 'Operators, Sensors and hooks within Core Airflow'), ('provider:common-compat', ''), ('provider:standard', '')]","[{'comment_id': 2452900588, 'issue_id': 2628403145, 'author': 'gopidesupavan', 'body': 'Does email operator/email utils is required to move inside standard provider?', 'created_at': datetime.datetime(2024, 11, 2, 7, 3, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453013932, 'issue_id': 2628403145, 'author': 'gopidesupavan', 'body': 'This pr getting more and more changes i feel and some changes require in selective checks to remove `OPERATORS` tests from core area. So i feel better to have split the triggers to separate pr #43608.\r\n\r\nWill update this later.', 'created_at': datetime.datetime(2024, 11, 2, 14, 51, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453025931, 'issue_id': 2628403145, 'author': 'potiuk', 'body': '> This pr getting more and more changes i feel and some changes require in selective checks to remove `OPERATORS` tests from core area. So i feel better to have split the triggers to separate pr #43608.\r\n> \r\n> Will update this later.\r\n\r\nMakes sense', 'created_at': datetime.datetime(2024, 11, 2, 15, 38, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2509603613, 'issue_id': 2628403145, 'author': 'eladkal', 'body': 'Do we still need this PR or was it break into smaller ones that were already merged?', 'created_at': datetime.datetime(2024, 12, 1, 6, 56, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2509619098, 'issue_id': 2628403145, 'author': 'gopidesupavan', 'body': ""> Do we still need this PR or was it break into smaller ones that were already merged?\r\n\r\nDon't think this is required, kept open to double check the final checks. I think we are good I will close this."", 'created_at': datetime.datetime(2024, 12, 1, 7, 48, 44, tzinfo=datetime.timezone.utc)}]","gopidesupavan (Issue Creator) on (2024-11-02 07:03:26 UTC): Does email operator/email utils is required to move inside standard provider?

gopidesupavan (Issue Creator) on (2024-11-02 14:51:05 UTC): This pr getting more and more changes i feel and some changes require in selective checks to remove `OPERATORS` tests from core area. So i feel better to have split the triggers to separate pr #43608.

Will update this later.

potiuk on (2024-11-02 15:38:13 UTC): Makes sense

eladkal on (2024-12-01 06:56:20 UTC): Do we still need this PR or was it break into smaller ones that were already merged?

gopidesupavan (Issue Creator) on (2024-12-01 07:48:44 UTC): Don't think this is required, kept open to double check the final checks. I think we are good I will close this.

"
2628184039,pull_request,closed,,"add min versions to types- tabulate,termcolor,toml","Adding min versions as mentioned below:

1. `types-tabulate>=0.9.0.20240106` (This is the latest version and was released Jan 2024)
2. `types-termcolor>=1.1.6.2` (This is the latest version and was released March 2023)
3. `types-toml>=0.10.8.20240310` (This is the latest version and was released March 2024)


related to https://github.com/apache/airflow/issues/42989",rawwar,2024-11-01 02:39:48+00:00,[],2024-11-02 05:29:04+00:00,2024-11-01 20:21:56+00:00,https://github.com/apache/airflow/pull/43570,[],[],
2628005999,pull_request,closed,,Switch PythonVirtualenvOperator to venv from virtualenv package,"The PythonVirtualenvOperator has been using virtualenv in order to support Python 2.7 and pre Python 3.5, however we do not need those any more - and we can use built-in venv instead.

Fixes: #40420

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-31 23:37:47+00:00,[],2024-11-01 13:03:27+00:00,2024-11-01 13:03:25+00:00,https://github.com/apache/airflow/pull/43568,"[('area:providers', ''), ('area:dev-tools', ''), ('kind:documentation', ''), ('provider:standard', '')]","[{'comment_id': 2451640382, 'issue_id': 2628005999, 'author': 'gopidesupavan', 'body': 'cool :)', 'created_at': datetime.datetime(2024, 11, 1, 10, 14, 23, tzinfo=datetime.timezone.utc)}]","gopidesupavan on (2024-11-01 10:14:23 UTC): cool :)

"
2627946280,pull_request,closed,,Conditionally add OTEL events when processing executor events (#43558),"It's possible that the start/end date are null when processing an executor event, and there is no point in adding an OTEL event in that case.

Before this, we'd try and convert `None` to nanoseconds and blow up the scheduler.

Note: I don't think `queued_dttm` can be empty, but figured it didn't hurt to guard against it just in case I've overlooked a way it can be possible.

(cherry picked from commit fe41e156084aeb139c0a28d9bfa535aae9a56b1e)

Backporting #43558 ",jedcunningham,2024-10-31 22:37:37+00:00,[],2024-11-01 14:25:41+00:00,2024-10-31 23:14:43+00:00,https://github.com/apache/airflow/pull/43567,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2627907383,pull_request,closed,,Fix TrySelector for Mapped Tasks in Logs and Details Grid Panel (#43565) Backport,Backport of Fix TrySelector for Mapped Tasks in Logs and Details Grid Panel --> #43565,jscheffl,2024-10-31 22:00:13+00:00,[],2024-11-01 11:58:34+00:00,2024-11-01 00:18:28+00:00,https://github.com/apache/airflow/pull/43566,"[('area:webserver', 'Webserver related Issues'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('legacy ui', 'Whether legacy UI change should be allowed in PR')]",[],
2627896322,pull_request,closed,,Fix TrySelector for Mapped Tasks in Logs and Details Grid Panel,"Fixing try selector in UI for mapped tasks in Logs and Details panel. This bothered us in production really hard... was hoping somebody else was jumping on this and am wondering if nobody else is affected by this?

Took a moment to find the root cause, actually it was a simple thing: String replacement was not taken over for the effective call URL, such no history could be found, no history... no try selector buttons...

How to test: Run and retry a mapped task from the examples and see that the selector is showing up!

![image](https://github.com/user-attachments/assets/3a53d126-6fa9-48c6-b307-bb7bd55442bb)

closes: #42357

Somewhat 2.10.3rc1 was cut.. hping some other issue is found that this find's its way to the next release, if too late for 2.10.3 then hopefully 2.10.4!

FYI @AutomationDev85 @clellmann @majorosdonat @OliverWannenwetsch ",jscheffl,2024-10-31 21:52:08+00:00,[],2024-11-01 00:18:40+00:00,2024-11-01 00:17:16+00:00,https://github.com/apache/airflow/pull/43565,"[('area:webserver', 'Webserver related Issues'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('legacy ui', 'Whether legacy UI change should be allowed in PR')]",[],
2627878343,pull_request,closed,,Add missing extension in the Newsfragment file,"The `.rst` extension was missed. Added it and made some minor formatting changes.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-31 21:38:32+00:00,[],2024-10-31 22:16:31+00:00,2024-10-31 21:56:42+00:00,https://github.com/apache/airflow/pull/43564,[],[],
2627869491,pull_request,closed,,Drop redundant code since Airflow 3 is Python `>=3.9`,"Some of these checks are now redundant since we dropped support for Py < 3.9 in https://github.com/apache/airflow/pull/42766

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-31 21:31:21+00:00,[],2024-10-31 22:16:55+00:00,2024-10-31 22:16:53+00:00,https://github.com/apache/airflow/pull/43563,[],[],
2627860668,pull_request,closed,,Remove deprecated Python Version identifiers,"These were deprecated in 2.9 by https://github.com/apache/airflow/pull/37575

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-31 21:26:01+00:00,[],2024-10-31 23:34:27+00:00,2024-10-31 23:34:25+00:00,https://github.com/apache/airflow/pull/43562,"[('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]",[],
2627838800,pull_request,closed,,Remove `importlib_resources` dependency,"Since the minimium required Python in Airflow main is now >=3.9 since https://github.com/apache/airflow/pull/42766, we can drop this dep

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-31 21:10:44+00:00,[],2024-10-31 23:34:43+00:00,2024-10-31 23:34:42+00:00,https://github.com/apache/airflow/pull/43561,[],[],
2627838709,pull_request,closed,,Remove `astunparse` dependency,"Since the minimium required Python in Airflow main is now >=3.9 since https://github.com/apache/airflow/pull/42766, we can drop this dep

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-31 21:10:41+00:00,[],2024-10-31 22:53:39+00:00,2024-10-31 22:53:37+00:00,https://github.com/apache/airflow/pull/43560,"[('area:dev-tools', '')]","[{'comment_id': 2450840348, 'issue_id': 2627838709, 'author': 'potiuk', 'body': 'Also nice! :)', 'created_at': datetime.datetime(2024, 10, 31, 21, 24, 43, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-31 21:24:43 UTC): Also nice! :)

"
2627838610,pull_request,closed,,Remove `backports.zoneinfo` dependency,"Since the minimium required Python in Airflow main is now >=3.9 since https://github.com/apache/airflow/pull/42766, we can drop this dep

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-31 21:10:38+00:00,[],2024-10-31 22:54:47+00:00,2024-10-31 22:54:46+00:00,https://github.com/apache/airflow/pull/43559,"[('area:dev-tools', ''), ('area:serialization', '')]","[{'comment_id': 2450839716, 'issue_id': 2627838610, 'author': 'potiuk', 'body': 'Naaajs!', 'created_at': datetime.datetime(2024, 10, 31, 21, 24, 14, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-31 21:24:14 UTC): Naaajs!

"
2627588394,pull_request,closed,,Conditionally add OTEL events when processing executor events,"It's possible that the start/end date are null when processing an executor event, and there is no point in adding an OTEL event in that case.

Before this, we'd try and convert `None` to nanoseconds and blow up the scheduler.

Note: I don't think `queued_dttm` can be empty, but figured it didn't hurt to guard against it just in case I've overlooked a way it can be possible.

Closes #42456",jedcunningham,2024-10-31 18:43:53+00:00,[],2024-10-31 22:38:15+00:00,2024-10-31 22:34:17+00:00,https://github.com/apache/airflow/pull/43558,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2627583335,pull_request,closed,,Fix reproducibility of provider builds,"Four hours ago Flit released a new version (3.10.0) that bumped versio of metadata used to generate providers. That revealed a bug in the reproducibility setup for our providers. Previously the providers had flit>=3.2,<4 as build dependency - but that caused newer flit version to be used during the build and - since flit bumped the metadata-version produced, it caused the packages generated to be binary non-reproducible.

This PR fixes it by ""pinning"" flit version (all build dependencies should generally be pinned to provide reproducibility)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-31 18:42:00+00:00,[],2024-10-31 20:42:56+00:00,2024-10-31 20:42:54+00:00,https://github.com/apache/airflow/pull/43557,"[('area:dev-tools', '')]","[{'comment_id': 2450590055, 'issue_id': 2627583335, 'author': 'potiuk', 'body': 'This is the day of weirdest bugs ever. Flit released 3.10.0 today. Which uncovered problem in reproducibility of package generation:\r\n\r\n![image](https://github.com/user-attachments/assets/0bb0bd69-958d-47d7-af16-9bc0cda91637)', 'created_at': datetime.datetime(2024, 10, 31, 18, 43, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450619782, 'issue_id': 2627583335, 'author': 'ashb', 'body': '> it caused the packages generated to be binary non-reproducible.\n\nWhat does this mean?', 'created_at': datetime.datetime(2024, 10, 31, 19, 1, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450650950, 'issue_id': 2627583335, 'author': 'potiuk', 'body': '> > it caused the packages generated to be binary non-reproducible.\r\n> \r\n> What does this mean?\r\n\r\nAll the packages we release in airflow are  binary reproducible - which means that whoever builds them gets the excat binary identtical packages (or that\'s how it was supposed to be but there was this bug). This follows the highly recommended in ASF (and in the future likely mandatory or at least expected until you have good reason not to have them) property of produced artifacts to be binary reproducible as this heavily improves security  - especially for supply dependency chain.\r\n\r\nWe implemented reproducible builds with the help of Sovereign Tech Fund fund last year. And all our builds are (well - not reallly, there is this bug which made them not reproducible).\r\n\r\nWe added reproducible check as one of the gates to pass when we vote by the PMC - some 5 moths ago - this is actually how I found today that our provider package builds are not reproducible today. \r\n\r\nThe new `Apache Trusted Releases` platform to release packages that ASF infrastructure works on (and soon there will likely be beta - likely and we wil be one of the first users of I hope) will have specifilc features desgned around binary reproducibility that will make it more secure (for example binary reproducibility adds another layer of protection - for example with build reproducibility, you can vastly simplify the checks if the hardware that you use to build packages on or tooling you use to build your packages have not beem compromised. \r\n\r\nAlso binary reproducibility is pre-requisite (from the ASF policies point of view) to automate uploads of the artifacts of our to PyPI direcfly via Github Actions (this is tracked and hopefully we will have it soon https://github.com/apache/airflow/issues/41937)  via Trusted Publishing - which is yet another level of security of distrubution that we work on together with the ASF and PSF for Airflow and for Airflow software supply chain (Trusted Publishing is part of the ""Airflow Beach Cleaning"" i work on)\r\n\r\nYou can read more about buld reproducibility and why it matters here:\r\n\r\nhttps://reproducible-builds.org/', 'created_at': datetime.datetime(2024, 10, 31, 19, 20, 43, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-31 18:43:58 UTC): This is the day of weirdest bugs ever. Flit released 3.10.0 today. Which uncovered problem in reproducibility of package generation:

![image](https://github.com/user-attachments/assets/0bb0bd69-958d-47d7-af16-9bc0cda91637)

ashb on (2024-10-31 19:01:29 UTC): What does this mean?

potiuk (Issue Creator) on (2024-10-31 19:20:43 UTC): All the packages we release in airflow are  binary reproducible - which means that whoever builds them gets the excat binary identtical packages (or that's how it was supposed to be but there was this bug). This follows the highly recommended in ASF (and in the future likely mandatory or at least expected until you have good reason not to have them) property of produced artifacts to be binary reproducible as this heavily improves security  - especially for supply dependency chain.

We implemented reproducible builds with the help of Sovereign Tech Fund fund last year. And all our builds are (well - not reallly, there is this bug which made them not reproducible).

We added reproducible check as one of the gates to pass when we vote by the PMC - some 5 moths ago - this is actually how I found today that our provider package builds are not reproducible today. 

The new `Apache Trusted Releases` platform to release packages that ASF infrastructure works on (and soon there will likely be beta - likely and we wil be one of the first users of I hope) will have specifilc features desgned around binary reproducibility that will make it more secure (for example binary reproducibility adds another layer of protection - for example with build reproducibility, you can vastly simplify the checks if the hardware that you use to build packages on or tooling you use to build your packages have not beem compromised. 

Also binary reproducibility is pre-requisite (from the ASF policies point of view) to automate uploads of the artifacts of our to PyPI direcfly via Github Actions (this is tracked and hopefully we will have it soon https://github.com/apache/airflow/issues/41937)  via Trusted Publishing - which is yet another level of security of distrubution that we work on together with the ASF and PSF for Airflow and for Airflow software supply chain (Trusted Publishing is part of the ""Airflow Beach Cleaning"" i work on)

You can read more about buld reproducibility and why it matters here:

https://reproducible-builds.org/

"
2627551743,pull_request,closed,,Test standard provider with Airflow 2.8 and 2.9,"The standard provider has now min version of Airflow = 2.8 since #43553, but we have not tested it for Airflow 2.8 and 2.9.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-31 18:24:41+00:00,[],2024-11-14 12:14:12+00:00,2024-11-09 16:40:12+00:00,https://github.com/apache/airflow/pull/43556,"[('area:dev-tools', '')]","[{'comment_id': 2450666870, 'issue_id': 2627551743, 'author': 'potiuk', 'body': 'Ha.... so we are NOT good with standard provider for 2.8 and 2.9 YET', 'created_at': datetime.datetime(2024, 10, 31, 19, 30, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450992672, 'issue_id': 2627551743, 'author': 'gopidesupavan', 'body': '> Ha.... so we are NOT good with standard provider for 2.8 and 2.9 YET\r\n\r\nhm sorry my bad 😞 , i thought only on airflow 2.10', 'created_at': datetime.datetime(2024, 10, 31, 23, 2, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450994506, 'issue_id': 2627551743, 'author': 'potiuk', 'body': '> > Ha.... so we are NOT good with standard provider for 2.8 and 2.9 YET\r\n> \r\n> hm sorry my bad 😞 , i thought only on airflow 2.10\r\n\r\nNo worries :). Nice excercise to fix it for 2.8 and 2.9 :)', 'created_at': datetime.datetime(2024, 10, 31, 23, 4, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453543671, 'issue_id': 2627551743, 'author': 'potiuk', 'body': 'There are still some interesting problems to solve :). I already found another teething problem from providers move :)', 'created_at': datetime.datetime(2024, 11, 3, 19, 6, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453556498, 'issue_id': 2627551743, 'author': 'potiuk', 'body': 'The fix here https://github.com/apache/airflow/pull/43617 allows to iterate fast on the ""main providers"" + ""old airflow"" case :)', 'created_at': datetime.datetime(2024, 11, 3, 19, 51, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462954597, 'issue_id': 2627551743, 'author': 'gopidesupavan', 'body': ""alright got it where the failures coming from for this `providers/tests/standard/operators/test_python.py::TestBranchExternalPythonOperator::test_use_airflow_context_touch_other_variables` its acutally difference in the deserialisation between 2.8 and 2.10\r\n\r\n2.10 has this casting Context: https://github.com/apache/airflow/blob/v2-10-stable/airflow/serialization/serialized_objects.py#L829, where as 2.8 and 2.9 doesn't have this implementation."", 'created_at': datetime.datetime(2024, 11, 7, 18, 33, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2463475323, 'issue_id': 2627551743, 'author': 'potiuk', 'body': '> alright got it where the failures coming from for this providers/tests/standard/operators/test_python.py::TestBranchExternalPythonOperator::test_use_airflow_context_touch_other_variables its acutally difference in the deserialisation between 2.8 and 2.10\r\n\r\nNice. Good job. So now we have to find out how this deserialization happened in 2.8/2.9 PythonVirtualenv. Let me take a look', 'created_at': datetime.datetime(2024, 11, 8, 0, 19, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2463487767, 'issue_id': 2627551743, 'author': 'potiuk', 'body': 'AH... Of course. Sending context was added in 3.0.0 :) . So the fact that it actually works on 2.10 is a bonus of new standard providers, but there should be no expectation it should work on 2.8 or 2.9 because it never worked there!', 'created_at': datetime.datetime(2024, 11, 8, 0, 31, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2463491363, 'issue_id': 2627551743, 'author': 'gopidesupavan', 'body': ""> AH... Of course. Sending context was added in 3.0.0 :) . So the fact that it actually works on 2.10 is a bonus of new standard providers, but there should be no expectation it should work on 2.8 or 2.9 because it never worked there!\r\n\r\nYeah that's correct, should we make necessary changes to support it only for 2.10+"", 'created_at': datetime.datetime(2024, 11, 8, 0, 35, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2463502317, 'issue_id': 2627551743, 'author': 'gopidesupavan', 'body': 'Happy to make changes, I believe only need some test fixes and use_airflow_context  \r\nParameter checks between Versions', 'created_at': datetime.datetime(2024, 11, 8, 0, 40, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2463555353, 'issue_id': 2627551743, 'author': 'potiuk', 'body': '> Happy to make changes, I believe only need some test fixes and use_airflow_context Parameter checks between Versions\r\n\r\nI am fixing it :)', 'created_at': datetime.datetime(2024, 11, 8, 1, 10, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2464130128, 'issue_id': 2627551743, 'author': 'potiuk', 'body': 'Actually - really the thing is that that it was only working on 2.10 when ENABLE_AIP_44 was used, so we really should only enable it only for Airlfow 3+', 'created_at': datetime.datetime(2024, 11, 8, 8, 38, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2464468231, 'issue_id': 2627551743, 'author': 'gopidesupavan', 'body': '> Actually - really the thing is that that it was only working on 2.10 when ENABLE_AIP_44 was used, so we really should only enable it only for Airlfow 3+\r\n\r\nYes your correct. for airflow less thank 3 versions we can disable, currently by default its coming as true for all the versions.\r\n\r\nI ran this in local , \r\n`breeze shell --use-airflow-version 2.8.4 --mount-sources providers-and-tests` and in the tests its coming as true.   \r\n\r\nraised change here: https://github.com/apache/airflow/pull/43818', 'created_at': datetime.datetime(2024, 11, 8, 11, 24, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2466279211, 'issue_id': 2627551743, 'author': 'potiuk', 'body': '@gopidesupavan - you can rebase and check yout #43818 now', 'created_at': datetime.datetime(2024, 11, 9, 16, 40, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2466397589, 'issue_id': 2627551743, 'author': 'gopidesupavan', 'body': '> @gopidesupavan - you can rebase and check yout #43818 now\r\n\r\nwoohoo merged thank you @potiuk :) . Let me rebase other pr.', 'created_at': datetime.datetime(2024, 11, 9, 18, 23, 9, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-31 19:30:34 UTC): Ha.... so we are NOT good with standard provider for 2.8 and 2.9 YET

gopidesupavan on (2024-10-31 23:02:19 UTC): hm sorry my bad 😞 , i thought only on airflow 2.10

potiuk (Issue Creator) on (2024-10-31 23:04:23 UTC): No worries :). Nice excercise to fix it for 2.8 and 2.9 :)

potiuk (Issue Creator) on (2024-11-03 19:06:59 UTC): There are still some interesting problems to solve :). I already found another teething problem from providers move :)

potiuk (Issue Creator) on (2024-11-03 19:51:17 UTC): The fix here https://github.com/apache/airflow/pull/43617 allows to iterate fast on the ""main providers"" + ""old airflow"" case :)

gopidesupavan on (2024-11-07 18:33:36 UTC): alright got it where the failures coming from for this `providers/tests/standard/operators/test_python.py::TestBranchExternalPythonOperator::test_use_airflow_context_touch_other_variables` its acutally difference in the deserialisation between 2.8 and 2.10

2.10 has this casting Context: https://github.com/apache/airflow/blob/v2-10-stable/airflow/serialization/serialized_objects.py#L829, where as 2.8 and 2.9 doesn't have this implementation.

potiuk (Issue Creator) on (2024-11-08 00:19:53 UTC): Nice. Good job. So now we have to find out how this deserialization happened in 2.8/2.9 PythonVirtualenv. Let me take a look

potiuk (Issue Creator) on (2024-11-08 00:31:28 UTC): AH... Of course. Sending context was added in 3.0.0 :) . So the fact that it actually works on 2.10 is a bonus of new standard providers, but there should be no expectation it should work on 2.8 or 2.9 because it never worked there!

gopidesupavan on (2024-11-08 00:35:05 UTC): Yeah that's correct, should we make necessary changes to support it only for 2.10+

gopidesupavan on (2024-11-08 00:40:15 UTC): Happy to make changes, I believe only need some test fixes and use_airflow_context  
Parameter checks between Versions

potiuk (Issue Creator) on (2024-11-08 01:10:27 UTC): I am fixing it :)

potiuk (Issue Creator) on (2024-11-08 08:38:09 UTC): Actually - really the thing is that that it was only working on 2.10 when ENABLE_AIP_44 was used, so we really should only enable it only for Airlfow 3+

gopidesupavan on (2024-11-08 11:24:58 UTC): Yes your correct. for airflow less thank 3 versions we can disable, currently by default its coming as true for all the versions.

I ran this in local , 
`breeze shell --use-airflow-version 2.8.4 --mount-sources providers-and-tests` and in the tests its coming as true.   

raised change here: https://github.com/apache/airflow/pull/43818

potiuk (Issue Creator) on (2024-11-09 16:40:40 UTC): @gopidesupavan - you can rebase and check yout #43818 now

gopidesupavan on (2024-11-09 18:23:09 UTC): woohoo merged thank you @potiuk :) . Let me rebase other pr.

"
2627430321,pull_request,closed,,Dedent help string in breeze configuration,"In Python 3.13 compiler, docstrings are automatically dedented. And while Python 3.13 is not yet officially supported by Airflow for some strange (and unknown) reasons, when you install breeze with uv tools that have Python 3.13 installed, it might get into a state that the docstrings are dedented in Breeze's bytecode and it causes hash calculation for configuration options that have docstring-generated help differs on different installations.

In order to make it consistent - we are now always dedenting the help strings before hash calculation.

See https://github.com/python/cpython/issues/81283

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-31 17:28:11+00:00,[],2024-10-31 21:12:16+00:00,2024-10-31 18:17:30+00:00,https://github.com/apache/airflow/pull/43555,"[('area:dev-tools', '')]","[{'comment_id': 2450439964, 'issue_id': 2627430321, 'author': 'potiuk', 'body': ""Let's see if dedetnting produces the same hashes on CI as well."", 'created_at': datetime.datetime(2024, 10, 31, 17, 28, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450542291, 'issue_id': 2627430321, 'author': 'potiuk', 'body': 'Ok. Look like it works nicely :). Weird, weird stuff.', 'created_at': datetime.datetime(2024, 10, 31, 18, 17, 19, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-31 17:28:56 UTC): Let's see if dedetnting produces the same hashes on CI as well.

potiuk (Issue Creator) on (2024-10-31 18:17:19 UTC): Ok. Look like it works nicely :). Weird, weird stuff.

"
2627343195,pull_request,closed,,Add pavan kumar gopidesu into committer list,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-10-31 16:47:31+00:00,[],2024-11-02 13:04:37+00:00,2024-10-31 21:12:29+00:00,https://github.com/apache/airflow/pull/43554,"[('area:dev-tools', ''), ('kind:documentation', '')]","[{'comment_id': 2450426201, 'issue_id': 2627343195, 'author': 'kaxil', 'body': '@gopidesupavan Could you add your name and details on airflow-site too please: https://github.com/apache/airflow-site/blob/main/landing-pages/site/data/committers.json', 'created_at': datetime.datetime(2024, 10, 31, 17, 23, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2451374828, 'issue_id': 2627343195, 'author': 'gopidesupavan', 'body': '> @gopidesupavan Could you add your name and details on airflow-site too please: https://github.com/apache/airflow-site/blob/main/landing-pages/site/data/committers.json\r\n\r\nThank you Kaxil for making changes 😄 . sure will update in airflow-site', 'created_at': datetime.datetime(2024, 11, 1, 6, 29, 11, tzinfo=datetime.timezone.utc)}]","kaxil on (2024-10-31 17:23:11 UTC): @gopidesupavan Could you add your name and details on airflow-site too please: https://github.com/apache/airflow-site/blob/main/landing-pages/site/data/committers.json

gopidesupavan (Issue Creator) on (2024-11-01 06:29:11 UTC): Thank you Kaxil for making changes 😄 . sure will update in airflow-site

"
2627263855,pull_request,closed,,Fix dependencies of standard provider,"Standard provider should have virtualenv as dependency set as it has PythonVirtualenvOperator that needs it. Also it should have min airflow version 2.8.0 same as all other providers.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-31 16:11:09+00:00,[],2024-11-01 22:49:02+00:00,2024-10-31 18:21:56+00:00,https://github.com/apache/airflow/pull/43553,"[('area:providers', ''), ('full tests needed', 'We need to run full set of tests for this PR to merge'), ('provider:standard', '')]","[{'comment_id': 2450362206, 'issue_id': 2627263855, 'author': 'gopidesupavan', 'body': 'I believe changes required here also `BASE_PROVIDERS_COMPATIBILITY_CHECKS `\r\n\r\nhttps://github.com/apache/airflow/blob/main/dev/breeze/src/airflow_breeze/global_constants.py#L563 ?\r\n\r\nremove-providers: standard from 2.8.4 and 2.9.3', 'created_at': datetime.datetime(2024, 10, 31, 16, 52, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450547788, 'issue_id': 2627263855, 'author': 'potiuk', 'body': '> I believe changes required here also `BASE_PROVIDERS_COMPATIBILITY_CHECKS `\r\n> \r\n> https://github.com/apache/airflow/blob/main/dev/breeze/src/airflow_breeze/global_constants.py#L563 ?\r\n> \r\n> remove-providers: standard from 2.8.4 and 2.9.3\r\n\r\nGREAT POINT', 'created_at': datetime.datetime(2024, 10, 31, 18, 20, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450550169, 'issue_id': 2627263855, 'author': 'potiuk', 'body': 'I will merge it first to fix main though, and then wil make a follow up PR @gopidesupavan', 'created_at': datetime.datetime(2024, 10, 31, 18, 21, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450556733, 'issue_id': 2627263855, 'author': 'potiuk', 'body': 'Follow up PR in https://github.com/apache/airflow/pull/43556', 'created_at': datetime.datetime(2024, 10, 31, 18, 25, 17, tzinfo=datetime.timezone.utc)}]","gopidesupavan on (2024-10-31 16:52:07 UTC): I believe changes required here also `BASE_PROVIDERS_COMPATIBILITY_CHECKS `

https://github.com/apache/airflow/blob/main/dev/breeze/src/airflow_breeze/global_constants.py#L563 ?

remove-providers: standard from 2.8.4 and 2.9.3

potiuk (Issue Creator) on (2024-10-31 18:20:34 UTC): GREAT POINT

potiuk (Issue Creator) on (2024-10-31 18:21:48 UTC): I will merge it first to fix main though, and then wil make a follow up PR @gopidesupavan

potiuk (Issue Creator) on (2024-10-31 18:25:17 UTC): Follow up PR in https://github.com/apache/airflow/pull/43556

"
2627067030,pull_request,closed,,Remove pluggable TaskRunners concept,"As part of the changes in AIP-72 to have ""activities"" (i.e. TaskExecuteActivity) and the need to shortly move the StandardTaskRunner into the TaskSDK, and before doing that I want to simplify the strucutre.

To that end, the CGroupTaskRunner is being removed. While it (likely/probably) still works, it's use is very uncommon as it does not work within Docker or Kubernetes deployment (as it is not currently possible to nest cgroups inside a container in practice).

In this PR I have removed the config option and task_runner loader concept, deleted the CGroupRunner and merged Base and Starndard TaskRunner classes.

 I have also started keeping an ""umberalla"" newsfragment where we can track all AIP-72 related changes (of which there will be a lot)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",ashb,2024-10-31 14:53:24+00:00,[],2024-10-31 17:42:32+00:00,2024-10-31 17:42:29+00:00,https://github.com/apache/airflow/pull/43551,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:CLI', ''), ('area:providers', ''), ('area:dev-tools', ''), ('provider:openlineage', 'AIP-53'), ('area:task-execution-interface-aip72', 'AIP-72: Task Execution Interface (TEI) aka Task SDK')]",[],
2626809224,pull_request,closed,,Mark standard provider as ready for release,Provider is not fully functional but we can start releasing it as 0.x till it has all the needed features.,eladkal,2024-10-31 13:04:29+00:00,[],2024-10-31 21:17:18+00:00,2024-10-31 18:59:16+00:00,https://github.com/apache/airflow/pull/43550,"[('area:providers', ''), ('area:dev-tools', ''), ('provider:standard', '')]","[{'comment_id': 2450830749, 'issue_id': 2626809224, 'author': 'potiuk', 'body': 'I think before release I really need to fix https://github.com/apache/airflow/pull/43556 (@eladkal - just in case).', 'created_at': datetime.datetime(2024, 10, 31, 21, 17, 16, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-31 21:17:16 UTC): I think before release I really need to fix https://github.com/apache/airflow/pull/43556 (@eladkal - just in case).

"
2626787384,pull_request,closed,,Introduce new gcp TranslateText and TranslateTextBatch operators,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",olegkachur-e,2024-10-31 12:56:37+00:00,[],2024-10-31 12:56:55+00:00,2024-10-31 12:56:55+00:00,https://github.com/apache/airflow/pull/43549,"[('area:system-tests', '')]",[],
2626765873,pull_request,closed,,AIP-84 Get Mapped Task Instance,Related to: https://github.com/apache/airflow/issues/42370,pierrejeambrun,2024-10-31 12:46:14+00:00,['pierrejeambrun'],2024-10-31 20:02:44+00:00,2024-10-31 20:02:42+00:00,https://github.com/apache/airflow/pull/43548,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-84', 'Modern Rest API'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]",[],
2626684877,pull_request,closed,,Check for empty list of integration tests before evaluation inside marix that requires a value.,"When there is a PR with only new UI changes the list of integration tests is empty. The empty list causes annotation error in matrix step. The PR is green with tests that ran but it sends an email notification that PR run failed due to this annotation error causing confusion. Hence add a check before evaluation to execute integration tests only when the list is not empty. This was due to my previous change in https://github.com/apache/airflow/pull/43512

Solution found in https://github.com/dorny/paths-filter/issues/66#issuecomment-778267385
Ref error : https://github.com/apache/airflow/actions/runs/11610447563?pr=43501

> Tests
Error when evaluating 'strategy' for job 'tests-integration'. apache/airflow/.github/workflows/integration-tests.yml@0481b8e617fc357cd1c33c2d94f76e958903c42d (Line: 67, Col: 22): Matrix vector 'integration' does not contain any values
",tirkarthi,2024-10-31 12:00:48+00:00,[],2024-11-02 17:19:29+00:00,2024-11-02 17:17:17+00:00,https://github.com/apache/airflow/pull/43546,"[('area:dev-tools', '')]","[{'comment_id': 2453053419, 'issue_id': 2626684877, 'author': 'potiuk', 'body': 'Nice!', 'created_at': datetime.datetime(2024, 11, 2, 17, 19, 28, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-11-02 17:19:28 UTC): Nice!

"
2626430277,pull_request,closed,,Fix broken stat scheduler_loop_duration (#42886),"* wip

* wip

* fix lint err

---------

Co-authored-by: venkat <venkat@venkats-MacBook-Pro.local>
(cherry picked from commit 60b8056616e94f987c3096dff3b59211d649b4b0)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-31 09:49:09+00:00,[],2024-11-01 08:38:42+00:00,2024-10-31 10:57:19+00:00,https://github.com/apache/airflow/pull/43544,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2449447677, 'issue_id': 2626430277, 'author': 'potiuk', 'body': 'Backporting #42886', 'created_at': datetime.datetime(2024, 10, 31, 9, 49, 33, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-31 09:49:33 UTC): Backporting #42886

"
2626364202,pull_request,closed,,Include doc-only commit in provider commit history,"When we generated list of commits for provider's documentation, we only checked for commits from the source folders of the providers, however there were some commits that only changed documentation for the provider and such commits were not included.

This PR adds documentation folder to be used while checkign for the commit list, and next time when documentation will be generated for providers, the doc-only commits should also be included for all historical versions of providers.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-31 09:14:56+00:00,[],2024-10-31 12:40:08+00:00,2024-10-31 09:15:58+00:00,https://github.com/apache/airflow/pull/43543,"[('area:dev-tools', '')]",[],
2626140174,pull_request,closed,,Prepare docs for Oct 2nd wave of providers RC2,amazon and fab providers,eladkal,2024-10-31 07:20:40+00:00,[],2024-10-31 09:35:38+00:00,2024-10-31 09:35:35+00:00,https://github.com/apache/airflow/pull/43540,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('kind:documentation', ''), ('provider:fab', '')]",[],
2626128678,pull_request,closed,,Update providers metadata 2024-10-31,,eladkal,2024-10-31 07:12:31+00:00,[],2024-10-31 07:54:27+00:00,2024-10-31 07:54:24+00:00,https://github.com/apache/airflow/pull/43539,[],[],
2625976017,pull_request,closed,,Fix main: ignore spell check Uncompress,"Spell check fix.

https://github.com/apache/airflow/actions/runs/11604744139/job/32314423307#step:7:10728
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-10-31 04:59:32+00:00,[],2024-11-02 13:04:52+00:00,2024-10-31 08:21:47+00:00,https://github.com/apache/airflow/pull/43538,"[('kind:documentation', '')]","[{'comment_id': 2449018133, 'issue_id': 2625976017, 'author': 'gopidesupavan', 'body': 'Came from here https://github.com/apache/airflow/pull/43526', 'created_at': datetime.datetime(2024, 10, 31, 5, 6, 2, tzinfo=datetime.timezone.utc)}]","gopidesupavan (Issue Creator) on (2024-10-31 05:06:02 UTC): Came from here https://github.com/apache/airflow/pull/43526

"
2625884244,pull_request,closed,,Remove reference to undead tasks from documentation,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

This PR removes references to undead tasks from the docs page [here](https://airflow.apache.org/docs/apache-airflow/stable/core-concepts/tasks.html#zombie-undead-tasks).

The term ""undead task"" is not used in the logs. Instead, if a running task has its state externally changed (what undead tasks is referring to in the docs), the logs display the below message where ""x"" is the new task state ([source code](https://github.com/apache/airflow/blob/d3e181215218ca9d0fb510c29d646c2aea315fcb/airflow/jobs/local_task_job_runner.py#L346-L348)).
```
""State of this instance has been externally set to <x>. Terminating instance.""

```

There is no reference to undead tasks within this log message or anywhere else in Airflow (I think). Therefore, users do not search for the term ""undead tasks"" when they encounter this error. Including it in the documentation seems unhelpful and can even be confusing if users conflate it with zombie tasks.

Additionally, the line in the documentation above the code snippet states: ""Below is the code snippet from the Airflow scheduler that runs periodically to detect zombie/undead tasks."" This line is incorrect because the snippet only contains code for detecting zombies. The code to detect tasks whose state has been changed externally is in local_task_job_runner.py.


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",karenbraganz,2024-10-31 03:20:10+00:00,[],2025-01-27 12:29:31+00:00,2025-01-26 23:27:31+00:00,https://github.com/apache/airflow/pull/43536,"[('kind:documentation', ''), ('type:doc-only', 'Changelog: Doc Only')]","[{'comment_id': 2454753804, 'issue_id': 2625884244, 'author': 'karenbraganz', 'body': 'I have removed the code snippet.\r\n<img width=""1184"" alt=""zombie_docs"" src=""https://github.com/user-attachments/assets/bc928881-5209-4452-ba47-437bbd7b69ee"">', 'created_at': datetime.datetime(2024, 11, 4, 13, 43, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2555996930, 'issue_id': 2625884244, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 12, 20, 0, 15, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2581693378, 'issue_id': 2625884244, 'author': 'karenbraganz', 'body': ""@RNHTTR as discussed offline, the URL redirects were failing in my tests because redirecting sections doesn't work on Sphinx by only modifying redirects.txt.\r\n\r\nTherefore, I created redirects.js to dynamically handle URL fragment redirects. I built the docs and tested this out to confirm that it works."", 'created_at': datetime.datetime(2025, 1, 10, 3, 58, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2593421673, 'issue_id': 2625884244, 'author': 'RNHTTR', 'body': 'Any opposition to this @potiuk ?', 'created_at': datetime.datetime(2025, 1, 15, 16, 43, 37, tzinfo=datetime.timezone.utc)}]","karenbraganz (Issue Creator) on (2024-11-04 13:43:55 UTC): I have removed the code snippet.
<img width=""1184"" alt=""zombie_docs"" src=""https://github.com/user-attachments/assets/bc928881-5209-4452-ba47-437bbd7b69ee"">

github-actions[bot] on (2024-12-20 00:15:29 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

karenbraganz (Issue Creator) on (2025-01-10 03:58:15 UTC): @RNHTTR as discussed offline, the URL redirects were failing in my tests because redirecting sections doesn't work on Sphinx by only modifying redirects.txt.

Therefore, I created redirects.js to dynamically handle URL fragment redirects. I built the docs and tested this out to confirm that it works.

RNHTTR on (2025-01-15 16:43:37 UTC): Any opposition to this @potiuk ?

"
2625860194,pull_request,closed,,next_execution_date explained in case of manual triggers,"aligned with comments at https://github.com/apache/airflow/blob/35087d7d10714130cc3e9e9730e34b07fc56938d/airflow/models/taskinstance.py#L1032-L1035

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",zachliu,2024-10-31 02:55:46+00:00,[],2024-11-02 00:16:37+00:00,2024-11-01 23:45:08+00:00,https://github.com/apache/airflow/pull/43535,"[('kind:documentation', '')]","[{'comment_id': 2449604519, 'issue_id': 2625860194, 'author': 'zachliu', 'body': '@uranusjr are you referring to AIP-83 [project](https://github.com/orgs/apache/projects/410)?', 'created_at': datetime.datetime(2024, 10, 31, 11, 13, 27, tzinfo=datetime.timezone.utc)}]","zachliu (Issue Creator) on (2024-10-31 11:13:27 UTC): @uranusjr are you referring to AIP-83 [project](https://github.com/orgs/apache/projects/410)?

"
2625713444,pull_request,closed,,Remove redundant functions in `airflow.utils.dates`,"`parse_execution_date` was just calling `timezone.parse`, there isn't a need for it to be a separate function.

`round_time` wasn't used anywhere

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-31 01:17:07+00:00,[],2024-10-31 15:49:11+00:00,2024-10-31 15:49:10+00:00,https://github.com/apache/airflow/pull/43533,"[('area:providers', ''), ('area:API', ""Airflow's REST/HTTP API""), ('provider:fab', ''), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2449677934, 'issue_id': 2625713444, 'author': 'gopidesupavan', 'body': 'Tests are failing it looks like , indirect datetime reference imports.', 'created_at': datetime.datetime(2024, 10, 31, 11, 58, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2449698915, 'issue_id': 2625713444, 'author': 'kaxil', 'body': '> Remove redundant functions in `airflow.utils.dates`\r\n\r\nYeah, looks like they were bad imports :D -- fixed them in https://github.com/apache/airflow/pull/43533/commits/1bf242d104a97d607cb5108724353524810d50e0', 'created_at': datetime.datetime(2024, 10, 31, 12, 10, 52, tzinfo=datetime.timezone.utc)}]","gopidesupavan on (2024-10-31 11:58:33 UTC): Tests are failing it looks like , indirect datetime reference imports.

kaxil (Issue Creator) on (2024-10-31 12:10:52 UTC): Yeah, looks like they were bad imports :D -- fixed them in https://github.com/apache/airflow/pull/43533/commits/1bf242d104a97d607cb5108724353524810d50e0

"
2625665614,pull_request,closed,,Remove `TaskInstanceKey.reduced`,"Not sure why this was deferred in https://github.com/apache/airflow/pull/39336/files#r1594440137 but I can't find any usages of this in the codebase. (cc @dstandish )

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-31 00:40:47+00:00,[],2024-10-31 01:17:49+00:00,2024-10-31 01:17:47+00:00,https://github.com/apache/airflow/pull/43532,[],[],
2625633518,pull_request,closed,,Bump `uv` to `0.4.29`,"https://github.com/astral-sh/uv/releases/tag/0.4.29

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-31 00:08:58+00:00,[],2024-10-31 01:02:11+00:00,2024-10-31 01:02:10+00:00,https://github.com/apache/airflow/pull/43531,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]",[],
2625628874,pull_request,closed,,Remove deprecated functions from `airflow/configuration.py`,"These functions have been deprecated from a long time now.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-31 00:03:16+00:00,[],2024-10-31 00:55:13+00:00,2024-10-31 00:55:11+00:00,https://github.com/apache/airflow/pull/43530,"[('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]",[],
2625605019,pull_request,closed,,Fix testing tests command to allow passing test as extra arg,"When providers have been moved in #42505 broke passing parameters when provider tests were passed as extra args of ""testing tests"" command of breeze.

Previously all tests were under ""tests"" folder and there was an exclusion to disable ""All"" tests when any test was passed as parameter. But after moving tests to ""providers"" this stopped working.

Additional exclusion needs to be added for ""providers/tests"" and ""providers/tests_sdk/"".

This PR also adds autocompletion for tests passed this way by setting the click type to Path for the extra args (but without the need for the Path to exist).

Also during this check it turned out that ""All"" tests are not working in the intended way - but this should not impact our CI only local runs.

Appropriate comment has been added and it's captured in https://github.com/apache/airflow/issues/42632

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-30 23:42:23+00:00,[],2024-10-31 19:39:54+00:00,2024-10-31 09:17:06+00:00,https://github.com/apache/airflow/pull/43529,"[('area:dev-tools', '')]",[],
2625604731,pull_request,closed,,Remove `task_fail` from `airflow db cleanup`,"This was missed in https://github.com/apache/airflow/pull/43490

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-30 23:42:15+00:00,[],2024-10-31 00:18:47+00:00,2024-10-31 00:18:46+00:00,https://github.com/apache/airflow/pull/43528,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2625576183,pull_request,closed,,Remove unused functions from `airflow.utils.dates`,"The code that used it was removed in https://github.com/apache/airflow/pull/37988 already. It was used in FAB views.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-30 23:21:17+00:00,[],2024-10-31 00:02:30+00:00,2024-10-31 00:02:28+00:00,https://github.com/apache/airflow/pull/43527,[],[],
2625382458,pull_request,closed,,Move `uncompress_file` function from `airflow.utils` to Hive provider,"It was only used in S3 To Hive module. One less thing in the `utils` directory.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-30 21:28:25+00:00,[],2024-10-31 16:36:52+00:00,2024-10-30 22:09:46+00:00,https://github.com/apache/airflow/pull/43526,"[('area:providers', ''), ('provider:apache-hive', '')]",[],
2625172439,pull_request,closed,,Add directions to build a provider package locally.,No directions exist for building a provider locally to test with an existing airflow installation. This PR provides directions to build provider so they can be installed locally for integration testing.,perry2of5,2024-10-30 19:44:42+00:00,[],2024-10-31 21:12:34+00:00,2024-10-31 21:10:15+00:00,https://github.com/apache/airflow/pull/43524,"[('area:dev-tools', '')]","[{'comment_id': 2450289700, 'issue_id': 2625172439, 'author': 'perry2of5', 'body': 'I think I\'m going to change this to mention --skip-tag-check. I assume that you can skip creating the ""fake"" version and just use it? I\'ll go test....', 'created_at': datetime.datetime(2024, 10, 31, 16, 18, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450320224, 'issue_id': 2625172439, 'author': 'potiuk', 'body': '> I think I\'m going to change this to mention --skip-tag-check. I assume that you can skip creating the ""fake"" version and just use it? I\'ll go test....\r\n\r\nYep.', 'created_at': datetime.datetime(2024, 10, 31, 16, 33, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450429659, 'issue_id': 2625172439, 'author': 'perry2of5', 'body': 'Okay, I think my new changes make this simpler and shorter. Please review and let me know if you see any other improvements I could make here. Thank you!', 'created_at': datetime.datetime(2024, 10, 31, 17, 24, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450824154, 'issue_id': 2625172439, 'author': 'perry2of5', 'body': 'Thank you for the help improving this.', 'created_at': datetime.datetime(2024, 10, 31, 21, 12, 29, tzinfo=datetime.timezone.utc)}]","perry2of5 (Issue Creator) on (2024-10-31 16:18:53 UTC): I think I'm going to change this to mention --skip-tag-check. I assume that you can skip creating the ""fake"" version and just use it? I'll go test....

potiuk on (2024-10-31 16:33:30 UTC): Yep.

perry2of5 (Issue Creator) on (2024-10-31 17:24:21 UTC): Okay, I think my new changes make this simpler and shorter. Please review and let me know if you see any other improvements I could make here. Thank you!

perry2of5 (Issue Creator) on (2024-10-31 21:12:29 UTC): Thank you for the help improving this.

"
2625131664,pull_request,closed,,Migrate new UI to Chakra v3,"Chakra v3 came out last week. Its a really big change. So its better than we migrate sooner rather than later. By the time Airflow 3 comes out it won't be at 3.0.0 anymore.

Closes: https://github.com/apache/airflow/issues/43483


<img width=""1473"" alt=""Screenshot 2024-10-31 at 10 13 00 AM"" src=""https://github.com/user-attachments/assets/96d5a60e-7835-41fd-9ca3-8f3d61962103"">
<img width=""1448"" alt=""Screenshot 2024-10-31 at 10 13 07 AM"" src=""https://github.com/user-attachments/assets/086abde8-01dd-4d99-9514-3ac53a72c800"">
<img width=""1478"" alt=""Screenshot 2024-10-31 at 10 12 42 AM"" src=""https://github.com/user-attachments/assets/6a3a95c0-c881-4925-a4cf-2015815c312a"">
<img width=""1477"" alt=""Screenshot 2024-10-31 at 10 12 55 AM"" src=""https://github.com/user-attachments/assets/b5de8b74-a590-4665-a995-a558e09792af"">


---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-10-30 19:28:52+00:00,[],2024-11-01 17:50:57+00:00,2024-11-01 17:43:48+00:00,https://github.com/apache/airflow/pull/43523,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2451953551, 'issue_id': 2625131664, 'author': 'bbovenzi', 'body': ""> Good to upgrade / switch early!\r\n> \r\n> A lot of UI components are added inthe PR - I assume they are missing (atm) in 3.0.0 and hopefully will be added upstream later such that we can drop the local code?\r\n> \r\n> I also saw a small in-consistency - but maybe already have been before? When I enable/disable DAGs and switch from card to list view, state is not carried over. Also I think some small glitches (not sure if have been like this before) when filtering ans switching card/list view, then filters are reset. Not critical to merge.\r\n> \r\n> LGTM! (Wow a big change!)\r\n\r\nChakra v3 switched to open components which gives a lot easier ways to customize them, but also means you need to build a lot yourself. Hence the new `components/ui` directory. Those are all generated from chakra ui snippets. I just commented on an issue on the ChakraUI repo to request their snippets be provided as a separate package so we'd only need to add the components we actually want to customize.\r\n\r\nPierre had a similar issue with the pause/unpause dags. Somehow `rm -rf node_modules && pnpm install` fixed it for him. Let me know if those work for those two issues."", 'created_at': datetime.datetime(2024, 11, 1, 14, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2452319172, 'issue_id': 2625131664, 'author': 'jscheffl', 'body': '> Pierre had a similar issue with the pause/unpause dags. Somehow `rm -rf node_modules && pnpm install` fixed it for him. Let me know if those work for those two issues.\r\n\r\nSorry, too late... but comments were not planned to block merge... so all good!', 'created_at': datetime.datetime(2024, 11, 1, 17, 50, 56, tzinfo=datetime.timezone.utc)}]","bbovenzi (Issue Creator) on (2024-11-01 14:20:00 UTC): Chakra v3 switched to open components which gives a lot easier ways to customize them, but also means you need to build a lot yourself. Hence the new `components/ui` directory. Those are all generated from chakra ui snippets. I just commented on an issue on the ChakraUI repo to request their snippets be provided as a separate package so we'd only need to add the components we actually want to customize.

Pierre had a similar issue with the pause/unpause dags. Somehow `rm -rf node_modules && pnpm install` fixed it for him. Let me know if those work for those two issues.

jscheffl on (2024-11-01 17:50:56 UTC): Sorry, too late... but comments were not planned to block merge... so all good!

"
2625126969,pull_request,closed,,Task SDK: Fix typing for `autoregistered_dags`,"Fixing one of the TODOs: https://github.com/apache/airflow/pull/43076

This was already addressed but missed to remove it

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-30 19:27:19+00:00,[],2024-10-30 21:01:47+00:00,2024-10-30 21:01:45+00:00,https://github.com/apache/airflow/pull/43522,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)'), ('area:task-sdk', None)]",[],
2624902487,pull_request,closed,,AIP-84 Migrate public xcom endpoint get entry to fastapi,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
closes #42978

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",michaeljs-c,2024-10-30 18:01:43+00:00,[],2024-11-26 14:49:57+00:00,2024-11-12 09:04:36+00:00,https://github.com/apache/airflow/pull/43521,"[('AIP-84', 'Modern Rest API'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2460976183, 'issue_id': 2624902487, 'author': 'michaeljs-c', 'body': ""> Thank you for the PR. Overall looking nice, a few minor suggestions.\r\n> \r\n> We are missing the `mark_fastapi_migration_done`, check `�17_adding_api_endpoints.rst` for more information.\r\n\r\nThanks for the comments. I've updated the PR. It looks like adding the migration decorator caused CI to fail due to changes in the legacy API requiring a legacy tag?"", 'created_at': datetime.datetime(2024, 11, 6, 23, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2464886380, 'issue_id': 2624902487, 'author': 'pierrejeambrun', 'body': '@michaeljs-c Can you please rebase and solve conflicts, we are good to merge after that :)', 'created_at': datetime.datetime(2024, 11, 8, 14, 21, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2465867904, 'issue_id': 2624902487, 'author': 'michaeljs-c', 'body': '> @michaeljs-c Can you please rebase and solve conflicts, we are good to merge after that :)\r\n\r\nAll done. Thanks @pierrejeambrun!', 'created_at': datetime.datetime(2024, 11, 8, 22, 50, 14, tzinfo=datetime.timezone.utc)}]","michaeljs-c (Issue Creator) on (2024-11-06 23:10:00 UTC): Thanks for the comments. I've updated the PR. It looks like adding the migration decorator caused CI to fail due to changes in the legacy API requiring a legacy tag?

pierrejeambrun on (2024-11-08 14:21:15 UTC): @michaeljs-c Can you please rebase and solve conflicts, we are good to merge after that :)

michaeljs-c (Issue Creator) on (2024-11-08 22:50:14 UTC): All done. Thanks @pierrejeambrun!

"
2624807791,pull_request,closed,,Allow for retry when tasks are stuck in queued,"Tasks can get stuck in queued for a wide variety of reasons (e.g. celery loses
track of a task, a cluster can't further scale up its workers, etc.), but tasks
should not be stuck in queued for a long time.

Originally, we simply marked a task as failed when it was stuck in queued for
too long. We found that this led to suboptimal outcomes as ideally we would like ""failed""
to mean that a task was unable to run, instead of it meaning that we were unable to run the task.

As a compromise between always failing a stuck task and always rescheduling a stuck task (which could
lead to tasks being stuck in queued forever without informing the user), we have creating the config
`[core] num_stuck_reschedules`. With this new configuration, an airflow admin can decide how
sensitive they would like their airflow to be WRT failing stuck tasks.


Here is an example of what it looks like after trying this out with celery executor

<img width=""1109"" alt=""image"" src=""https://github.com/user-attachments/assets/233af08e-703a-4b1f-82e1-3340c52bf43a"">
",dimberman,2024-10-30 17:24:22+00:00,[],2024-11-19 16:57:57+00:00,2024-11-16 04:42:58+00:00,https://github.com/apache/airflow/pull/43520,"[('area:Scheduler', 'including HA (high availability) scheduler')]","[{'comment_id': 2465299664, 'issue_id': 2624807791, 'author': 'dimberman', 'body': 'I have tested this PR by doing the following:\r\n\r\n1. Created two airflows in helm, one Celery and one KubernetesExecutor, I lowered the timeout for queued to 10 seconds\r\n2. Ensured that both Airflows ran correctly\r\n3. For the CeleryExecutor I then removed the workers and ensured that the correct logs showed up\r\n4. For KubernetesExecutor I modified the pod_template_File to ensure that the pod would be stuck in pending. In that same fashion the following logs showed up indicating that the scheduler attempted to restart the queued task 3 times before failing\r\n<img width=""1387"" alt=""Screenshot 2024-11-08 at 9 07 13\u202fAM"" src=""https://github.com/user-attachments/assets/dd5d700a-a526-48b8-999f-f3829c7526e2"">', 'created_at': datetime.datetime(2024, 11, 8, 17, 7, 35, tzinfo=datetime.timezone.utc)}]","dimberman (Issue Creator) on (2024-11-08 17:07:35 UTC): I have tested this PR by doing the following:

1. Created two airflows in helm, one Celery and one KubernetesExecutor, I lowered the timeout for queued to 10 seconds
2. Ensured that both Airflows ran correctly
3. For the CeleryExecutor I then removed the workers and ensured that the correct logs showed up
4. For KubernetesExecutor I modified the pod_template_File to ensure that the pod would be stuck in pending. In that same fashion the following logs showed up indicating that the scheduler attempted to restart the queued task 3 times before failing
<img width=""1387"" alt=""Screenshot 2024-11-08 at 9 07 13 AM"" src=""https://github.com/user-attachments/assets/dd5d700a-a526-48b8-999f-f3829c7526e2"">

"
2624436386,pull_request,closed,,Add logging to the migration commands,"This PR enhances logging for the migration commands and ensures that
alembic doesn't change the logger when logging.

A PR was raised to address the issue of reset db command changing logging level;
see f1664674d859a262e93fb3110557a1e71138ca8b, but that did not address
it for other commands. This PR addresses it for all the migration commands
",ephraimbuddy,2024-10-30 15:13:36+00:00,[],2024-10-31 13:44:20+00:00,2024-10-31 13:44:17+00:00,https://github.com/apache/airflow/pull/43516,"[('area:providers', ''), ('provider:fab', '')]",[],
2624369713,pull_request,closed,,removed all refs to page_size,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #43486 
related: #43486 

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

**Problem**
When executing the GoogleAdsToGcsOperator I received an error that `page_size` is not accepted parameters by this API. According to [these](https://developers.google.com/google-ads/api/docs/sunset-dates) docs, it appears that none of the google API versions support this parameters. 

Closes: https://github.com/apache/airflow/issues/43486

**Solution**
removed all refs to `page_size` as can no longer be passed onto the API. 


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",shervinrad100,2024-10-30 14:52:33+00:00,[],2025-01-08 21:56:00+00:00,2025-01-08 21:55:50+00:00,https://github.com/apache/airflow/pull/43515,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2447414471, 'issue_id': 2624369713, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 30, 14, 52, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2449370509, 'issue_id': 2624369713, 'author': 'molcay', 'body': 'Hi @shervinrad100, Thank you for the contribution.\r\n\r\nFor the Google provider (and also Airflow in general), we are following a depreciation policy which states that before removal (which requires a major version bump), we need to deprecate the `public` parameters/hooks/operators etc. While adding the depreciation, we also need to mention the **removal date** _(if possible alternative things to use)_.\r\n\r\nNormally, we have a hook to use it for depreciation but parameter depreciation is a bit tricky. Here is an example for depreciation for the parameter.\r\n```python\r\nwarnings.warn(""Something is deprecated and will be removed after MONTH DD, YYYY. Please use something else instead."" AirflowProviderDeprecationWarning, stacklevel=2)\r\n```\r\n> Please check this warning message on the unit tests side as well.\r\n\r\nWe can remove it from the [underlying API call](https://github.com/apache/airflow/blob/755c10b99752b1868eb410a00563eff537300e91/providers/src/airflow/providers/google/ads/hooks/ads.py#L287C68-L287C90) and private methods like [`_search`](https://github.com/apache/airflow/blob/755c10b99752b1868eb410a00563eff537300e91/providers/src/airflow/providers/google/ads/hooks/ads.py#L270) to avoid API error. However the public parts (in your PR, they are the parameter of the hooks) needs to deprecate first and then remove.\r\n\r\nAlso, I wonder about operators; as far as I can see, the [operator](https://github.com/apache/airflow/blob/755c10b99752b1868eb410a00563eff537300e91/providers/src/airflow/providers/google/ads/transfers/ads_to_gcs.py#L86C9-L86C32) also has this `page_size` parameter. Are there any reasons for **not** changing the operators?\r\n\r\n\r\n---\r\n\r\nI saw this is your first PR on this repo but removing something is just hard. I very much appreciated your effort, thank you!', 'created_at': datetime.datetime(2024, 10, 31, 9, 5, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2467968935, 'issue_id': 2624369713, 'author': 'eladkal', 'body': ""@molcay according to the description I am not sure if deprecation is needed?\r\nIt suggests that the API itself doesn't accept this parameter so what is the reasoning with deprecation first?"", 'created_at': datetime.datetime(2024, 11, 11, 11, 40, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2482915275, 'issue_id': 2624369713, 'author': 'molcay', 'body': 'Hi @eladkal, \r\nThe documentation page says after v16 sunset (February 5, 2025), this parameter will be removed. Currently we are trying to use the latest version in our provider but users of the operator can always change the version and use an old version (like `v16` or `v16.1`). \r\n\r\nConsidering we have approx. 3 months before sunset of v16, I think we need to give some kind of depreciation warning to the user first and then remove it. Also, removing something requires the bump of the major version, we are just trying to avoid removing something directly.', 'created_at': datetime.datetime(2024, 11, 18, 12, 33, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2482927240, 'issue_id': 2624369713, 'author': 'eladkal', 'body': '> The documentation page says after v16 sunset (February 5, 2025), this parameter will be removed. \r\n\r\nThen the statement of:\r\n\r\n> When executing the GoogleAdsToGcsOperator I received an error that page_size is not accepted parameters by this API.\r\n\r\nby the PR author, is not accurate?', 'created_at': datetime.datetime(2024, 11, 18, 12, 38, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2488091436, 'issue_id': 2624369713, 'author': 'molcay', 'body': '@eladkal, the comment is accurate for `v17`, `v17.1` and `v18` of the Google Ads API. \r\nOn the other hand, `v16` and `v16.1` (which are supported until February 5, 2025) support this variable. \r\nBy default we have the latest version of the API but the users can always specify the API version to use a specific API version. \r\nAfter February, since the support for `v16` and `v16.1` will be ended, then we can remove the parameter. \r\nIMHO, we need to put the deprecation warning for February right now and will remove it on February', 'created_at': datetime.datetime(2024, 11, 20, 9, 43, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2505165336, 'issue_id': 2624369713, 'author': 'potiuk', 'body': 'Shall we merge it @eladkal ?', 'created_at': datetime.datetime(2024, 11, 28, 2, 51, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2505498829, 'issue_id': 2624369713, 'author': 'eladkal', 'body': ""> Shall we merge it @eladkal ?\r\n\r\nAccording to @molcay we can't merge it unless we bump min version of SDK to 17. If we don't wish to do it then we need to deprecate the parameter and have some mechanism to detect which version of the SDK is being used to populate the right function signature.\r\n\r\nI'll leave to Google folks to decide how they want to proceed."", 'created_at': datetime.datetime(2024, 11, 28, 8, 13, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2506034763, 'issue_id': 2624369713, 'author': 'potiuk', 'body': '@molcay @VladaZakharova ?', 'created_at': datetime.datetime(2024, 11, 28, 12, 43, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2514067488, 'issue_id': 2624369713, 'author': 'molcay', 'body': 'Hi @potiuk,\r\n\r\nSince we have ~3 months before sunset for `v16.x`, we have to deprecate first and then after February we can remove it. \r\nSome users might be using the `v16.x` of the API and the `page_size` parameter is available for them.\r\n\r\n@shervinrad100 did you have an update on this topic?', 'created_at': datetime.datetime(2024, 12, 3, 9, 56, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2514134399, 'issue_id': 2624369713, 'author': 'eladkal', 'body': ""Just to clarify, the current state is that the feature is usable only for v16 as v17+ get exception thus can't use it.\r\nIf that is the case I suggest to get this resolved before next cut of providers wave."", 'created_at': datetime.datetime(2024, 12, 3, 10, 22, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2518427579, 'issue_id': 2624369713, 'author': 'molcay', 'body': 'Hi @eladkal,\r\nYes, it is currently working in v16 but not in v17+. \r\nDo we know when it will be the next cut?\r\nI asked @shervinrad100 to clarify the status. According to the response we might take action.', 'created_at': datetime.datetime(2024, 12, 4, 19, 50, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2567444942, 'issue_id': 2624369713, 'author': 'molcay', 'body': 'Hi @eladkal,\r\nI created a [follow-up PR](https://github.com/apache/airflow/pull/45239) for this change. Can you have a look at it?', 'created_at': datetime.datetime(2025, 1, 2, 8, 53, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2577222957, 'issue_id': 2624369713, 'author': 'molcay', 'body': 'Hi,\r\nThe follow-up PR: #45239 is already merged! We can close this', 'created_at': datetime.datetime(2025, 1, 8, 9, 40, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2578742260, 'issue_id': 2624369713, 'author': 'potiuk', 'body': 'Closing', 'created_at': datetime.datetime(2025, 1, 8, 21, 55, 59, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-30 14:52:39 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

molcay on (2024-10-31 09:05:42 UTC): Hi @shervinrad100, Thank you for the contribution.

For the Google provider (and also Airflow in general), we are following a depreciation policy which states that before removal (which requires a major version bump), we need to deprecate the `public` parameters/hooks/operators etc. While adding the depreciation, we also need to mention the **removal date** _(if possible alternative things to use)_.

Normally, we have a hook to use it for depreciation but parameter depreciation is a bit tricky. Here is an example for depreciation for the parameter.
```python
warnings.warn(""Something is deprecated and will be removed after MONTH DD, YYYY. Please use something else instead."" AirflowProviderDeprecationWarning, stacklevel=2)
```

We can remove it from the [underlying API call](https://github.com/apache/airflow/blob/755c10b99752b1868eb410a00563eff537300e91/providers/src/airflow/providers/google/ads/hooks/ads.py#L287C68-L287C90) and private methods like [`_search`](https://github.com/apache/airflow/blob/755c10b99752b1868eb410a00563eff537300e91/providers/src/airflow/providers/google/ads/hooks/ads.py#L270) to avoid API error. However the public parts (in your PR, they are the parameter of the hooks) needs to deprecate first and then remove.

Also, I wonder about operators; as far as I can see, the [operator](https://github.com/apache/airflow/blob/755c10b99752b1868eb410a00563eff537300e91/providers/src/airflow/providers/google/ads/transfers/ads_to_gcs.py#L86C9-L86C32) also has this `page_size` parameter. Are there any reasons for **not** changing the operators?


---

I saw this is your first PR on this repo but removing something is just hard. I very much appreciated your effort, thank you!

eladkal on (2024-11-11 11:40:50 UTC): @molcay according to the description I am not sure if deprecation is needed?
It suggests that the API itself doesn't accept this parameter so what is the reasoning with deprecation first?

molcay on (2024-11-18 12:33:21 UTC): Hi @eladkal, 
The documentation page says after v16 sunset (February 5, 2025), this parameter will be removed. Currently we are trying to use the latest version in our provider but users of the operator can always change the version and use an old version (like `v16` or `v16.1`). 

Considering we have approx. 3 months before sunset of v16, I think we need to give some kind of depreciation warning to the user first and then remove it. Also, removing something requires the bump of the major version, we are just trying to avoid removing something directly.

eladkal on (2024-11-18 12:38:26 UTC): Then the statement of:


by the PR author, is not accurate?

molcay on (2024-11-20 09:43:55 UTC): @eladkal, the comment is accurate for `v17`, `v17.1` and `v18` of the Google Ads API. 
On the other hand, `v16` and `v16.1` (which are supported until February 5, 2025) support this variable. 
By default we have the latest version of the API but the users can always specify the API version to use a specific API version. 
After February, since the support for `v16` and `v16.1` will be ended, then we can remove the parameter. 
IMHO, we need to put the deprecation warning for February right now and will remove it on February

potiuk on (2024-11-28 02:51:46 UTC): Shall we merge it @eladkal ?

eladkal on (2024-11-28 08:13:36 UTC): According to @molcay we can't merge it unless we bump min version of SDK to 17. If we don't wish to do it then we need to deprecate the parameter and have some mechanism to detect which version of the SDK is being used to populate the right function signature.

I'll leave to Google folks to decide how they want to proceed.

potiuk on (2024-11-28 12:43:37 UTC): @molcay @VladaZakharova ?

molcay on (2024-12-03 09:56:43 UTC): Hi @potiuk,

Since we have ~3 months before sunset for `v16.x`, we have to deprecate first and then after February we can remove it. 
Some users might be using the `v16.x` of the API and the `page_size` parameter is available for them.

@shervinrad100 did you have an update on this topic?

eladkal on (2024-12-03 10:22:13 UTC): Just to clarify, the current state is that the feature is usable only for v16 as v17+ get exception thus can't use it.
If that is the case I suggest to get this resolved before next cut of providers wave.

molcay on (2024-12-04 19:50:41 UTC): Hi @eladkal,
Yes, it is currently working in v16 but not in v17+. 
Do we know when it will be the next cut?
I asked @shervinrad100 to clarify the status. According to the response we might take action.

molcay on (2025-01-02 08:53:15 UTC): Hi @eladkal,
I created a [follow-up PR](https://github.com/apache/airflow/pull/45239) for this change. Can you have a look at it?

molcay on (2025-01-08 09:40:47 UTC): Hi,
The follow-up PR: #45239 is already merged! We can close this

potiuk on (2025-01-08 21:55:59 UTC): Closing

"
2624090308,pull_request,closed,,Skip integration tests for new UI only PR. Run docs build only when needed. ,"This is a follow-up on #43503 . Following are the changes.

1. Made `only_new_ui_files` as an attribute that is true when there are any source files and they contain only new UI changes. Sometimes the PR has no source code changes so instead of diff on 2 empty sets this ensures there are source files and changes in new UI folder with no remaining files left. I am thinking of skipping db tests that now run with ""always"" that takes 2 mins down from 20 mins earlier but is not needed in new UI only PRs.
2. `docs-build` flag is not used in the CI configuration causing docs build to always run that is not needed in new UI only PRs that don't change any user facing docs. Sometimes the build runs for an hour or more with intermittent failures and retry. This ensures to build docs only when needed. If there are scenarios where the flag is False with docs required then this could be improved.
3. Integration tests are still executed since there is a default list of integrations. Using the `only_new_ui_files` return an empty list so that these tests are skipped for PR with only new UI changes. Each test takes 2 minutes.",tirkarthi,2024-10-30 13:21:52+00:00,[],2024-10-30 19:12:34+00:00,2024-10-30 19:12:34+00:00,https://github.com/apache/airflow/pull/43512,"[('area:dev-tools', '')]","[{'comment_id': 2447212354, 'issue_id': 2624090308, 'author': 'tirkarthi', 'body': '`docs-build = true` yet the docs build step in CI seems to be skipped.\r\n\r\nhttps://github.com/apache/airflow/actions/runs/11594095043/job/32279562944?pr=43512#step:8:731', 'created_at': datetime.datetime(2024, 10, 30, 13, 45, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447307813, 'issue_id': 2624090308, 'author': 'potiuk', 'body': '> `docs-build = true` yet the docs build step in CI seems to be skipped.\r\n> \r\n> https://github.com/apache/airflow/actions/runs/11594095043/job/32279562944?pr=43512#step:8:731\r\n\r\nYou also need to add ""docs-build"" as input of the composite `static-checks-mypy-docs.yml` workflow and pass it in ci.yml.\r\n\r\nUnfortunately GitHub Actions convers unknown variables, inputs etc into empty string :scream:  and in this case you have:\r\n\r\n```\r\nif inputs.docs-build == \'true\'\r\n```\r\n\r\nturns into\r\n\r\n```\r\nif \'\' == \'true\'\r\n```\r\n\r\nI opened (it is still opened) a github support request for that around 3 years ago. But I am afraid the ship has sailed - there are far too many workflows that would be broken if they introduce an error on undefined variables in their expression language :(', 'created_at': datetime.datetime(2024, 10, 30, 14, 14, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447574691, 'issue_id': 2624090308, 'author': 'tirkarthi', 'body': 'As per my understanding it seems `ci.yml` has `docs-build` . I just added it to `static-checks-mypy-docs.yml` and I am getting email notifications that ""PR run failed at startup:"" and ""no jobs were run"". Maybe I missed something else.\r\n\r\nhttps://github.com/tirkarthi/airflow/blob/54f47844e0da031130d97eb234d607554c86cb5f/.github/workflows/ci.yml#L102\r\n\r\nhttps://github.com/tirkarthi/airflow/blob/54f47844e0da031130d97eb234d607554c86cb5f/.github/workflows/static-checks-mypy-docs.yml#L95-L98', 'created_at': datetime.datetime(2024, 10, 30, 15, 36, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447578068, 'issue_id': 2624090308, 'author': 'tirkarthi', 'body': ""Thanks @potiuk for the details. These look like long standing issues and similar ones from 2021 reports below. It looks even `required: true` doesn't work as expected.\r\n\r\nhttps://github.com/actions/runner/issues/924\r\nhttps://github.com/actions/runner/issues/1070"", 'created_at': datetime.datetime(2024, 10, 30, 15, 38, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447598661, 'issue_id': 2624090308, 'author': 'tirkarthi', 'body': 'Ok, I had to pass `docs-build` in `static-checks-mypy-docs` section in ci.yml from `build-info`. I thought outputs from ci.yml is automatically available in other builds. My bad. It seems to be building now. Thanks.', 'created_at': datetime.datetime(2024, 10, 30, 15, 45, 56, tzinfo=datetime.timezone.utc)}]","tirkarthi (Issue Creator) on (2024-10-30 13:45:17 UTC): `docs-build = true` yet the docs build step in CI seems to be skipped.

https://github.com/apache/airflow/actions/runs/11594095043/job/32279562944?pr=43512#step:8:731

potiuk on (2024-10-30 14:14:42 UTC): You also need to add ""docs-build"" as input of the composite `static-checks-mypy-docs.yml` workflow and pass it in ci.yml.

Unfortunately GitHub Actions convers unknown variables, inputs etc into empty string :scream:  and in this case you have:

```
if inputs.docs-build == 'true'
```

turns into

```
if '' == 'true'
```

I opened (it is still opened) a github support request for that around 3 years ago. But I am afraid the ship has sailed - there are far too many workflows that would be broken if they introduce an error on undefined variables in their expression language :(

tirkarthi (Issue Creator) on (2024-10-30 15:36:46 UTC): As per my understanding it seems `ci.yml` has `docs-build` . I just added it to `static-checks-mypy-docs.yml` and I am getting email notifications that ""PR run failed at startup:"" and ""no jobs were run"". Maybe I missed something else.

https://github.com/tirkarthi/airflow/blob/54f47844e0da031130d97eb234d607554c86cb5f/.github/workflows/ci.yml#L102

https://github.com/tirkarthi/airflow/blob/54f47844e0da031130d97eb234d607554c86cb5f/.github/workflows/static-checks-mypy-docs.yml#L95-L98

tirkarthi (Issue Creator) on (2024-10-30 15:38:01 UTC): Thanks @potiuk for the details. These look like long standing issues and similar ones from 2021 reports below. It looks even `required: true` doesn't work as expected.

https://github.com/actions/runner/issues/924
https://github.com/actions/runner/issues/1070

tirkarthi (Issue Creator) on (2024-10-30 15:45:56 UTC): Ok, I had to pass `docs-build` in `static-checks-mypy-docs` section in ci.yml from `build-info`. I thought outputs from ci.yml is automatically available in other builds. My bad. It seems to be building now. Thanks.

"
2623999713,pull_request,closed,,update issue triage process to improve Dosu bot quality,,eladkal,2024-10-30 12:48:27+00:00,[],2024-10-30 20:09:46+00:00,2024-10-30 14:07:14+00:00,https://github.com/apache/airflow/pull/43511,[],"[{'comment_id': 2447289828, 'issue_id': 2623999713, 'author': 'potiuk', 'body': 'I like how we need to improve the docs (not the code) in order to improve the bot :)', 'created_at': datetime.datetime(2024, 10, 30, 14, 7, 53, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-30 14:07:53 UTC): I like how we need to improve the docs (not the code) in order to improve the bot :)

"
2623855700,pull_request,closed,,Bring back documentation publishing to Canary builds,"We are using the same approach as in
https://github.com/apache/airflow-site/pull/1055/ where we utilise /mnt directory to store checked out airflow-site.

Fixes: #41931

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-30 11:54:22+00:00,[],2024-10-31 21:19:13+00:00,2024-10-31 19:26:49+00:00,https://github.com/apache/airflow/pull/43509,"[('area:dev-tools', ''), ('canary', 'When set on PR running from apache repo - behave as canary run')]","[{'comment_id': 2446849773, 'issue_id': 2623855700, 'author': 'potiuk', 'body': 'This seems to be even simpler than https://github.com/apache/airflow-site/pull/1055 as  we only need to really use the /mnt space for the airflow-site separate checkout .', 'created_at': datetime.datetime(2024, 10, 30, 11, 55, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446872396, 'issue_id': 2623855700, 'author': 'potiuk', 'body': 'BTW. I want to get it out ""quick-ish"" because it causes very long  ""spellcheck"" checks on some PRs because first pass of spell-check does not local build, so if inventories are out-dated, it will try to spellcheck, fail, and then fall-back to rebuilding everything -  and it can take more than hour.', 'created_at': datetime.datetime(2024, 10, 30, 12, 0, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446880167, 'issue_id': 2623855700, 'author': 'potiuk', 'body': 'Example here: https://github.com/apache/airflow/actions/runs/11591221918/job/32271148668?pr=43503', 'created_at': datetime.datetime(2024, 10, 30, 12, 1, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447221965, 'issue_id': 2623855700, 'author': 'potiuk', 'body': 'Spellcheck still running in 1h 30 minutes - hopefully last pass of the spellcheck now. Testing this change is a PAIN. I understand @kaxil why it was not high priority :D\r\n\r\nBTW. Might want to optimise that one but when we have regular pushes - this will happen way less frequently.', 'created_at': datetime.datetime(2024, 10, 30, 13, 48, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447231482, 'issue_id': 2623855700, 'author': 'potiuk', 'body': ""This is really bad thing that is happening -> downloading inventories (old) -> running spellcheck for all providers -> failing some as inventories are outdated and miss some references -> cleaning all -> running build together (failing for some cases - because local inventories were outdated) -> re-running again -> failing a bit less number of those as local inventories were rebuilt -> re-running build again for the remaining ones -> running spellcheck for all of them now with locally rebuilt inventories -> it's a bit madness :D"", 'created_at': datetime.datetime(2024, 10, 30, 13, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447758505, 'issue_id': 2623855700, 'author': 'ashb', 'body': ""Failing with\n\n```\nfatal: could not create work tree dir '/mnt/airflow-site/airflow-site': Permission denied\n```\n\n😞"", 'created_at': datetime.datetime(2024, 10, 30, 16, 39, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447760677, 'issue_id': 2623855700, 'author': 'potiuk', 'body': 'So... Not that easy :)', 'created_at': datetime.datetime(2024, 10, 30, 16, 40, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447764087, 'issue_id': 2623855700, 'author': 'potiuk', 'body': 'Right ... Sudo :)', 'created_at': datetime.datetime(2024, 10, 30, 16, 41, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2449846334, 'issue_id': 2623855700, 'author': 'potiuk', 'body': ""I hope I got this right this-time. It's not only the sudo, but the `df -h` had shown that we did not have this extra space and it was because ASF self-hosted runners we used to use for publishing actually did not have this extra volume mounted.\r\n\r\nI switched back publlishing and doc building back to public runners and :crossed_fingers: it will work this time.\r\n\r\nWe will see in 2 hours"", 'created_at': datetime.datetime(2024, 10, 31, 13, 29, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450276295, 'issue_id': 2623855700, 'author': 'potiuk', 'body': 'Almost: \r\n\r\n![image](https://github.com/user-attachments/assets/a0403f9b-adf5-4d0a-b0fc-b975ecbd57c0)', 'created_at': datetime.datetime(2024, 10, 31, 16, 12, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450430757, 'issue_id': 2623855700, 'author': 'kaxil', 'body': '🤞', 'created_at': datetime.datetime(2024, 10, 31, 17, 24, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450660665, 'issue_id': 2623855700, 'author': 'potiuk', 'body': 'Finally!', 'created_at': datetime.datetime(2024, 10, 31, 19, 26, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450721622, 'issue_id': 2623855700, 'author': 'kaxil', 'body': 'Nice', 'created_at': datetime.datetime(2024, 10, 31, 20, 6, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450833262, 'issue_id': 2623855700, 'author': 'potiuk', 'body': '> Nice\r\n\r\nYeah... ❤️  it too :)', 'created_at': datetime.datetime(2024, 10, 31, 21, 19, 11, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-30 11:55:31 UTC): This seems to be even simpler than https://github.com/apache/airflow-site/pull/1055 as  we only need to really use the /mnt space for the airflow-site separate checkout .

potiuk (Issue Creator) on (2024-10-30 12:00:17 UTC): BTW. I want to get it out ""quick-ish"" because it causes very long  ""spellcheck"" checks on some PRs because first pass of spell-check does not local build, so if inventories are out-dated, it will try to spellcheck, fail, and then fall-back to rebuilding everything -  and it can take more than hour.

potiuk (Issue Creator) on (2024-10-30 12:01:37 UTC): Example here: https://github.com/apache/airflow/actions/runs/11591221918/job/32271148668?pr=43503

potiuk (Issue Creator) on (2024-10-30 13:48:21 UTC): Spellcheck still running in 1h 30 minutes - hopefully last pass of the spellcheck now. Testing this change is a PAIN. I understand @kaxil why it was not high priority :D

BTW. Might want to optimise that one but when we have regular pushes - this will happen way less frequently.

potiuk (Issue Creator) on (2024-10-30 13:52:00 UTC): This is really bad thing that is happening -> downloading inventories (old) -> running spellcheck for all providers -> failing some as inventories are outdated and miss some references -> cleaning all -> running build together (failing for some cases - because local inventories were outdated) -> re-running again -> failing a bit less number of those as local inventories were rebuilt -> re-running build again for the remaining ones -> running spellcheck for all of them now with locally rebuilt inventories -> it's a bit madness :D

ashb on (2024-10-30 16:39:37 UTC): Failing with

```
fatal: could not create work tree dir '/mnt/airflow-site/airflow-site': Permission denied
```

😞

potiuk (Issue Creator) on (2024-10-30 16:40:09 UTC): So... Not that easy :)

potiuk (Issue Creator) on (2024-10-30 16:41:23 UTC): Right ... Sudo :)

potiuk (Issue Creator) on (2024-10-31 13:29:01 UTC): I hope I got this right this-time. It's not only the sudo, but the `df -h` had shown that we did not have this extra space and it was because ASF self-hosted runners we used to use for publishing actually did not have this extra volume mounted.

I switched back publlishing and doc building back to public runners and :crossed_fingers: it will work this time.

We will see in 2 hours

potiuk (Issue Creator) on (2024-10-31 16:12:57 UTC): Almost: 

![image](https://github.com/user-attachments/assets/a0403f9b-adf5-4d0a-b0fc-b975ecbd57c0)

kaxil on (2024-10-31 17:24:44 UTC): 🤞

potiuk (Issue Creator) on (2024-10-31 19:26:42 UTC): Finally!

kaxil on (2024-10-31 20:06:02 UTC): Nice

potiuk (Issue Creator) on (2024-10-31 21:19:11 UTC): Yeah... ❤️  it too :)

"
2623740121,pull_request,closed,,AIP-84 Add ability to update dag run note in PATCH dag_run endpoint ,"closes #43476

related to #42701",rawwar,2024-10-30 11:13:54+00:00,[],2024-11-08 13:08:58+00:00,2024-11-08 13:08:57+00:00,https://github.com/apache/airflow/pull/43508,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2457718821, 'issue_id': 2623740121, 'author': 'pierrejeambrun', 'body': ""I just pushed a new commit that should help you. Tests are green for `test_patch_dag_run` and both https://github.com/apache/airflow/pull/43508/commits/e75afb79ae7f06f594064e55211f3ff1a97ef92c.\r\n\r\nThe issue is coming session related and coming from the fact that methods such as `set_dag_run_state_to_success` are not updating the `dag_run` that we have in our context. Therefore we can do that beforehand, refetch the dag_run and then proceed to normal update.\r\n\r\nMaybe we want to play around `session=session`, also `commit=True` is not actually `committing` to the db but only doing the modification, that's misleading but it is actually what we need. (1 commit per request to guarantee data integrity)"", 'created_at': datetime.datetime(2024, 11, 5, 17, 2, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2464714936, 'issue_id': 2623740121, 'author': 'pierrejeambrun', 'body': 'Thanks', 'created_at': datetime.datetime(2024, 11, 8, 13, 8, 46, tzinfo=datetime.timezone.utc)}]","pierrejeambrun on (2024-11-05 17:02:40 UTC): I just pushed a new commit that should help you. Tests are green for `test_patch_dag_run` and both https://github.com/apache/airflow/pull/43508/commits/e75afb79ae7f06f594064e55211f3ff1a97ef92c.

The issue is coming session related and coming from the fact that methods such as `set_dag_run_state_to_success` are not updating the `dag_run` that we have in our context. Therefore we can do that beforehand, refetch the dag_run and then proceed to normal update.

Maybe we want to play around `session=session`, also `commit=True` is not actually `committing` to the db but only doing the modification, that's misleading but it is actually what we need. (1 commit per request to guarantee data integrity)

pierrejeambrun on (2024-11-08 13:08:46 UTC): Thanks

"
2623647377,pull_request,closed,,Add Briana to triage team,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-30 10:43:29+00:00,[],2024-10-30 11:12:50+00:00,2024-10-30 11:12:48+00:00,https://github.com/apache/airflow/pull/43507,"[('area:dev-tools', '')]","[{'comment_id': 2446529733, 'issue_id': 2623647377, 'author': 'potiuk', 'body': 'Also removed @gopidesupavan (committer now :) )', 'created_at': datetime.datetime(2024, 10, 30, 10, 44, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446530350, 'issue_id': 2623647377, 'author': 'potiuk', 'body': 'cc: @briana-okyere', 'created_at': datetime.datetime(2024, 10, 30, 10, 44, 28, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-30 10:44:10 UTC): Also removed @gopidesupavan (committer now :) )

potiuk (Issue Creator) on (2024-10-30 10:44:28 UTC): cc: @briana-okyere

"
2623580166,pull_request,closed,,AIP-84 Migrate GET Dag Runs endpoint to FastAPI,related to https://github.com/apache/airflow/issues/42701,rawwar,2024-10-30 10:23:30+00:00,[],2024-11-20 18:27:40+00:00,2024-11-20 18:27:39+00:00,https://github.com/apache/airflow/pull/43506,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2480547709, 'issue_id': 2623580166, 'author': 'rawwar', 'body': '@pierrejeambrun , as of now get dag runs does not raise 404 not found if dag id is invalid. [Link](https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html#operation/get_dag_runs).\r\n\r\nShould we update it?', 'created_at': datetime.datetime(2024, 11, 16, 12, 42, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2482730997, 'issue_id': 2623580166, 'author': 'pierrejeambrun', 'body': '> @pierrejeambrun , as of now get dag runs does not raise 404 not found if dag id is invalid. [Link](https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html#operation/get_dag_runs).\r\n\r\n> Should we update it?\r\n\r\nI think we should update it in the new FastAPI endpoint, I wouldn\'t bother fixing the legacy one though (it\'s not really a bug, more of an imprecision I would say, we can live with that in airflow 2.x). We can do the same as in `get_tasks`.\r\n```python\r\n    """"""Get tasks for DAG.""""""\r\n    dag: DAG = request.app.state.dag_bag.get_dag(dag_id)\r\n    if not dag:\r\n        raise HTTPException(status.HTTP_404_NOT_FOUND, f""Dag with id {dag_id} was not found"")\r\n```', 'created_at': datetime.datetime(2024, 11, 18, 11, 11, 18, tzinfo=datetime.timezone.utc)}]","rawwar (Issue Creator) on (2024-11-16 12:42:05 UTC): @pierrejeambrun , as of now get dag runs does not raise 404 not found if dag id is invalid. [Link](https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html#operation/get_dag_runs).

Should we update it?

pierrejeambrun on (2024-11-18 11:11:18 UTC): I think we should update it in the new FastAPI endpoint, I wouldn't bother fixing the legacy one though (it's not really a bug, more of an imprecision I would say, we can live with that in airflow 2.x). We can do the same as in `get_tasks`.
```python
    """"""Get tasks for DAG.""""""
    dag: DAG = request.app.state.dag_bag.get_dag(dag_id)
    if not dag:
        raise HTTPException(status.HTTP_404_NOT_FOUND, f""Dag with id {dag_id} was not found"")
```

"
2623566282,pull_request,closed,,Make the warnings capture plugin know about the provider workspace folder,"While digging in to #43280 I noticed that the grouping for warnings wasn't correct anymore after the move to uv-workspace folders

This isn't the cause of the issue in that PR, but should be fixed anyway
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",ashb,2024-10-30 10:18:20+00:00,[],2024-10-30 11:16:08+00:00,2024-10-30 10:54:11+00:00,https://github.com/apache/airflow/pull/43505,[],[],
2623475961,pull_request,closed,,"Revert ""Fix pytest plugin (#43280)""","This reverts commit c3254a363ff647034272dc5f0a458ccd9b1a9cd4.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-30 09:53:12+00:00,[],2024-10-30 09:58:39+00:00,2024-10-30 09:58:38+00:00,https://github.com/apache/airflow/pull/43504,"[('area:providers', ''), ('area:dev-tools', ''), ('area:task-sdk', None)]","[{'comment_id': 2446385020, 'issue_id': 2623475961, 'author': 'potiuk', 'body': 'Let mer revert #43280 temporarily as it breaks running pytest from CLI', 'created_at': datetime.datetime(2024, 10, 30, 9, 54, 6, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-30 09:54:06 UTC): Let mer revert #43280 temporarily as it breaks running pytest from CLI

"
2623464438,pull_request,closed,,Run only ui tests for PR with new UI only changes.,"Closes #43498 

Added a change to new ui file folder for testing. Will be removed after review and approval.",tirkarthi,2024-10-30 09:49:35+00:00,[],2024-10-30 12:09:14+00:00,2024-10-30 12:09:14+00:00,https://github.com/apache/airflow/pull/43503,"[('area:dev-tools', ''), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2623413665,pull_request,closed,,Add type hints to DAG test utils,"Now you can annotate a fixture argument and get type hints and autocompletion in tests. I’ll probably add more annotations (for example, to `create_dagrun`), but this is good enough for now.",uranusjr,2024-10-30 09:31:00+00:00,[],2024-10-31 07:23:31+00:00,2024-10-30 11:38:00+00:00,https://github.com/apache/airflow/pull/43502,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('area:logging', ''), ('provider:alibaba', '')]","[{'comment_id': 2446765841, 'issue_id': 2623413665, 'author': 'potiuk', 'body': 'Cool', 'created_at': datetime.datetime(2024, 10, 30, 11, 37, 45, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-30 11:37:45 UTC): Cool

"
2623182156,pull_request,closed,,Add data interval and next_dagrun_create_after info through tooltip to next dagrun.,"Legacy home page displays data interval start for next dagrun which might be confusing to users who are looking for next_dagrun_create_after which is when the next dagrun will be scheduled. There is a tooltip in the legacy UI. Similar tooltip can be added on hover to new UI as well for clarification.

Review notes : 

* I would like to keep tooltip for UTC to be displayed on non-UTC timezones in `<Time />` and skip tooltip for next dagrun component since they collide with each other in UI. I tried to keep it as true by default and then pass `tooltip={false}` but eslint complains about this rule and removes it. I have disabled this rule only for the file. Maybe there is a better way to have this logic. 

https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-boolean-value.md

* I have named this as `DagRunInfo` but this is closely tied to next dagrun only for now with next_dagrun_create_after. Legacy UI also has tooltip for last dagrun. Maybe this could be updated after last dagrun info is updated in https://github.com/apache/airflow/pull/43489 to pass data_interval_start, data_interval_end and next_dagrun_create_after as optional. Please add in your thoughts.

Screenshot

![image](https://github.com/user-attachments/assets/af76d1a7-1e35-461a-8503-5a062a8cd303)


Thanks",tirkarthi,2024-10-30 07:48:07+00:00,[],2024-11-05 19:27:55+00:00,2024-11-05 19:27:55+00:00,https://github.com/apache/airflow/pull/43501,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2449704890, 'issue_id': 2623182156, 'author': 'tirkarthi', 'body': 'Since last run info is also added I guess the tooltip is needed there too with duration instead of next dag run creation time. This PR could be updated to have two components in DagRunInfo.tsx\r\n\r\n*  `NextDagRunInfo` that receives next_data_interval_start, next_data_interval_end and next_dagrun_create_after .\r\n* `LastDagRunInfo` that receives data_interval_start, data_interval_end and duration .\r\n\r\nThoughts?', 'created_at': datetime.datetime(2024, 10, 31, 12, 14, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2449819879, 'issue_id': 2623182156, 'author': 'bbovenzi', 'body': ""> Since last run info is also added I guess the tooltip is needed there too with duration instead of next dag run creation time. This PR could be updated to have two components in DagRunInfo.tsx\r\n> \r\n> * `NextDagRunInfo` that receives next_data_interval_start, next_data_interval_end and next_dagrun_create_after .\r\n> * `LastDagRunInfo` that receives data_interval_start, data_interval_end and duration .\r\n> \r\n> Thoughts?\r\n\r\nLet's just make it one component but pass each date instead of the DAG so we can reuse it for both places."", 'created_at': datetime.datetime(2024, 10, 31, 13, 16, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450091415, 'issue_id': 2623182156, 'author': 'tirkarthi', 'body': 'Thanks @bbovenzi, I tried using a single component but I feel it got overloaded to be of different components. Type definition is as below where dataIntervalStart and dataIntervalEnd are the only common ones between last dag run and next dag run.\r\n\r\n```\r\ntype Props = {\r\n  readonly dataIntervalEnd?: string | null;\r\n  readonly dataIntervalStart?: string | null;\r\n  readonly endDate?: string | null;\r\n  readonly logicalDate?: string | null;\r\n  readonly nextDagrunCreateAfter?: string | null;\r\n  readonly startDate?: string | null;\r\n};\r\n```', 'created_at': datetime.datetime(2024, 10, 31, 14, 54, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454654007, 'issue_id': 2623182156, 'author': 'bbovenzi', 'body': '> Thanks @bbovenzi, I tried using a single component but I feel it got overloaded to be of different components. Type definition is as below where dataIntervalStart and dataIntervalEnd are the only common ones between last dag run and next dag run.\r\n> \r\n> ```\r\n> type Props = {\r\n>   readonly dataIntervalEnd?: string | null;\r\n>   readonly dataIntervalStart?: string | null;\r\n>   readonly endDate?: string | null;\r\n>   readonly logicalDate?: string | null;\r\n>   readonly nextDagrunCreateAfter?: string | null;\r\n>   readonly startDate?: string | null;\r\n> };\r\n> ```\r\n\r\nI think its fine to still have just a single run timestamps tooltip.', 'created_at': datetime.datetime(2024, 11, 4, 12, 59, 19, tzinfo=datetime.timezone.utc)}]","tirkarthi (Issue Creator) on (2024-10-31 12:14:17 UTC): Since last run info is also added I guess the tooltip is needed there too with duration instead of next dag run creation time. This PR could be updated to have two components in DagRunInfo.tsx

*  `NextDagRunInfo` that receives next_data_interval_start, next_data_interval_end and next_dagrun_create_after .
* `LastDagRunInfo` that receives data_interval_start, data_interval_end and duration .

Thoughts?

bbovenzi on (2024-10-31 13:16:09 UTC): Let's just make it one component but pass each date instead of the DAG so we can reuse it for both places.

tirkarthi (Issue Creator) on (2024-10-31 14:54:34 UTC): Thanks @bbovenzi, I tried using a single component but I feel it got overloaded to be of different components. Type definition is as below where dataIntervalStart and dataIntervalEnd are the only common ones between last dag run and next dag run.

```
type Props = {
  readonly dataIntervalEnd?: string | null;
  readonly dataIntervalStart?: string | null;
  readonly endDate?: string | null;
  readonly logicalDate?: string | null;
  readonly nextDagrunCreateAfter?: string | null;
  readonly startDate?: string | null;
};
```

bbovenzi on (2024-11-04 12:59:19 UTC): I think its fine to still have just a single run timestamps tooltip.

"
2623175477,pull_request,closed,,[TRACES][OTEL] allow otel_debugging_on to emit traces to otel host,"closes: #43427
related: #43427

### What? 
When traces are enabled via otel traces config, the traces will ALWAYS be emitted to the configured host via the `OTLPSpanExporter`. (even if `otel_debugging_on` is set to `true`)
If debug is enabled via `otel_debugging_on`, the traces will be emitted to the console as well (via the `ConsoleSpanExporter`).

### Why?
When otel traces are configured and `otel_debugging_on` is set to `True`, the traces are only logged to the console and not emitted to the configured host. The current change allows the traces to be emitted to both the console and the host when 
debug is enabled. 

### How? 
Removed the debug check from the get_otel_tracer() function. The function now always sets the span exporter as `OTLPSpanExporter`. Shifted the debug check in the get_tracer() function, where the `ConsoleSpanExporter` is added to the span exporter only when debug is true.

",ninad-opsverse,2024-10-30 07:43:59+00:00,[],2024-10-31 17:48:18+00:00,2024-10-31 16:39:29+00:00,https://github.com/apache/airflow/pull/43500,[],"[{'comment_id': 2446082807, 'issue_id': 2623175477, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 30, 7, 44, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448952143, 'issue_id': 2623175477, 'author': 'howardyoo', 'body': 'Hey all,\r\nI would generally give my blessing to such a work. This would make\r\ndebugging OTEL instrumentation much easier and does not require extra\r\nthings (like running otel collector with debug exporter), so I would give a\r\nthumbs up on this.\r\n\r\nThanks for the work!\r\n\r\nOn Wed, Oct 30, 2024 at 2:35\u202fPM D. Ferruzzi ***@***.***>\r\nwrote:\r\n\r\n> ***@***.**** commented on this pull request.\r\n> ------------------------------\r\n>\r\n> In airflow/traces/otel_tracer.py\r\n> <https://github.com/apache/airflow/pull/43500#discussion_r1823267912>:\r\n>\r\n> > @@ -57,7 +57,7 @@ class OtelTrace:\r\n>      When OTEL is enabled, the Trace class will be replaced by this class.\r\n>\r\n> This comment is here to block merging while it is open; feel free to\r\n> resolve this after (and only after) @howardyoo\r\n> <https://github.com/howardyoo> gives his blessing.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/apache/airflow/pull/43500#pullrequestreview-2406096080>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AHZNLLXZA73JPBVK5CVKKPLZ6EYIPAVCNFSM6AAAAABQ3NIWKKVHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMZDIMBWGA4TMMBYGA>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>', 'created_at': datetime.datetime(2024, 10, 31, 3, 38, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450335799, 'issue_id': 2623175477, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 31, 16, 39, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450476486, 'issue_id': 2623175477, 'author': 'ferruzzi', 'body': ""Thanks @howardyoo, It seemed good to me but I wasn't involved in the Traces side like I was in the Metrics side so I wanted to make sure I wasn't missing some nuance."", 'created_at': datetime.datetime(2024, 10, 31, 17, 48, 16, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-30 07:44:03 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

howardyoo on (2024-10-31 03:38:19 UTC): Hey all,
I would generally give my blessing to such a work. This would make
debugging OTEL instrumentation much easier and does not require extra
things (like running otel collector with debug exporter), so I would give a
thumbs up on this.

Thanks for the work!

On Wed, Oct 30, 2024 at 2:35 PM D. Ferruzzi ***@***.***>
wrote:

boring-cyborg[bot] on (2024-10-31 16:39:32 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

ferruzzi on (2024-10-31 17:48:16 UTC): Thanks @howardyoo, It seemed good to me but I wasn't involved in the Traces side like I was in the Metrics side so I wanted to make sure I wasn't missing some nuance.

"
2622493774,pull_request,closed,,AIP-84 Migrate backfill API to fast api,"Related to https://github.com/apache/airflow/issues/42370

That is all.",dstandish,2024-10-29 23:08:40+00:00,['dstandish'],2024-11-05 14:16:25+00:00,2024-11-04 17:06:31+00:00,https://github.com/apache/airflow/pull/43496,"[('AIP-84', 'Modern Rest API'), ('legacy ui', 'Whether legacy UI change should be allowed in PR'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2455477908, 'issue_id': 2622493774, 'author': 'potiuk', 'body': 'Ah... \r\n\r\n````\r\nFAILED providers/tests/fab/auth_manager/api_endpoints/test_backfill_endpoint.py::TestListBackfills::test_should_respond_200_with_granular_dag_access - assert 404 == 200\r\n +  where 404 = <WrapperTestResponse streamed [404 NOT FOUND]>.status_code\r\nFAILED providers/tests/fab/auth_manager/api_endpoints/test_backfill_endpoint.py::TestGetBackfill::test_should_respond_200_with_granular_dag_access - assert 404 == 200\r\n +  where 404 = <WrapperTestResponse streamed [404 NOT FOUND]>.status_code\r\nFAILED providers/tests/fab/auth_manager/api_endpoints/test_backfill_endpoint.py::TestCreateBackfill::test_create_backfill - assert 404 == 200\r\n +  where 404 = <WrapperTestResponse streamed [404 NOT FOUND]>.status_code\r\nFAILED providers/tests/fab/auth_manager/api_endpoints/test_backfill_endpoint.py::TestPauseBackfill::test_should_respond_200_with_granular_dag_access - assert 404 == 200\r\n +  where 404 = <WrapperTestResponse streamed [404 NOT FOUND]>.status_code\r\nFAILED providers/tests/fab/auth_manager/api_endpoints/test_backfill_endpoint.py::TestCancelBackfill::test_should_respond_200_with_granular_dag_access - assert 404 == 200\r\n +  where 404 = <WrapperTestResponse streamed [404 NOT FOUND]>.status_code\r\n```` \r\n\r\nWill faili now in main - see https://github.com/apache/airflow/actions/runs/11669732900/job/32492756690?pr=43556#step:7:4733\r\n\r\nI guess those tests should never be in FAB in the first place ? Maybe we should move them to API @dstandish @pierrejeambrun', 'created_at': datetime.datetime(2024, 11, 4, 18, 59, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455479235, 'issue_id': 2622493774, 'author': 'potiuk', 'body': ""It's nice to see with all those changes how sometimes mixed things were :D"", 'created_at': datetime.datetime(2024, 11, 4, 19, 0, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457293948, 'issue_id': 2622493774, 'author': 'pierrejeambrun', 'body': 'Yep, we missed that FAB provider tests were relying on these legacy endpoints. Indeed those should not be there in the first place, Daniel opened quickly a PR to fix it, sorry for the disruption.', 'created_at': datetime.datetime(2024, 11, 5, 14, 15, 57, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-11-04 18:59:48 UTC): Ah... 

````
FAILED providers/tests/fab/auth_manager/api_endpoints/test_backfill_endpoint.py::TestListBackfills::test_should_respond_200_with_granular_dag_access - assert 404 == 200
 +  where 404 = <WrapperTestResponse streamed [404 NOT FOUND]>.status_code
FAILED providers/tests/fab/auth_manager/api_endpoints/test_backfill_endpoint.py::TestGetBackfill::test_should_respond_200_with_granular_dag_access - assert 404 == 200
 +  where 404 = <WrapperTestResponse streamed [404 NOT FOUND]>.status_code
FAILED providers/tests/fab/auth_manager/api_endpoints/test_backfill_endpoint.py::TestCreateBackfill::test_create_backfill - assert 404 == 200
 +  where 404 = <WrapperTestResponse streamed [404 NOT FOUND]>.status_code
FAILED providers/tests/fab/auth_manager/api_endpoints/test_backfill_endpoint.py::TestPauseBackfill::test_should_respond_200_with_granular_dag_access - assert 404 == 200
 +  where 404 = <WrapperTestResponse streamed [404 NOT FOUND]>.status_code
FAILED providers/tests/fab/auth_manager/api_endpoints/test_backfill_endpoint.py::TestCancelBackfill::test_should_respond_200_with_granular_dag_access - assert 404 == 200
 +  where 404 = <WrapperTestResponse streamed [404 NOT FOUND]>.status_code
```` 

Will faili now in main - see https://github.com/apache/airflow/actions/runs/11669732900/job/32492756690?pr=43556#step:7:4733

I guess those tests should never be in FAB in the first place ? Maybe we should move them to API @dstandish @pierrejeambrun

potiuk on (2024-11-04 19:00:28 UTC): It's nice to see with all those changes how sometimes mixed things were :D

pierrejeambrun on (2024-11-05 14:15:57 UTC): Yep, we missed that FAB provider tests were relying on these legacy endpoints. Indeed those should not be there in the first place, Daniel opened quickly a PR to fix it, sorry for the disruption.

"
2622438196,pull_request,closed,,DOC fix documentation error in `apache-airflow-providers-fab/access-control.rst`,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

closes: #43140

",SuccessMoses,2024-10-29 22:22:53+00:00,[],2024-11-11 20:19:52+00:00,2024-10-31 08:47:19+00:00,https://github.com/apache/airflow/pull/43495,"[('area:providers', ''), ('kind:documentation', ''), ('provider:fab', '')]","[{'comment_id': 2445436756, 'issue_id': 2622438196, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 29, 22, 22, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445439059, 'issue_id': 2622438196, 'author': 'SuccessMoses', 'body': '> Congratulations on your first Pull Request and welcome to the Apache Airflow community! \r\n\r\nThanks **boring-cyborg**', 'created_at': datetime.datetime(2024, 10, 29, 22, 25, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446419730, 'issue_id': 2622438196, 'author': 'potiuk', 'body': 'I think you have a space missing and Sphix does not like it when formatting tables.', 'created_at': datetime.datetime(2024, 10, 30, 10, 6, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2449337738, 'issue_id': 2622438196, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 31, 8, 47, 21, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-29 22:22:57 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

SuccessMoses (Issue Creator) on (2024-10-29 22:25:02 UTC): Thanks **boring-cyborg**

potiuk on (2024-10-30 10:06:55 UTC): I think you have a space missing and Sphix does not like it when formatting tables.

boring-cyborg[bot] on (2024-10-31 08:47:21 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2622314740,pull_request,closed,,Fix Power BI trigger testcase,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",ambika-garg,2024-10-29 20:57:17+00:00,[],2024-11-10 22:20:07+00:00,2024-11-09 18:09:50+00:00,https://github.com/apache/airflow/pull/43494,"[('provider:microsoft-azure', 'Azure-related issues'), ('area:providers', '')]","[{'comment_id': 2445319992, 'issue_id': 2622314740, 'author': 'ambika-garg', 'body': 'Hey @eladkal and @dabla, This pull request fixes the test case of powerbi_trigger, that initially took 30 seconds to execute. It is in continuation to PR #41331.\r\n\r\n<img width=""1417"" alt=""Screenshot 2024-10-29 at 3 47 20\u202fPM"" src=""https://github.com/user-attachments/assets/262a4b34-38d3-4b6e-bc6e-f4bf8eee4351"">', 'created_at': datetime.datetime(2024, 10, 29, 20, 59, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445387942, 'issue_id': 2622314740, 'author': 'potiuk', 'body': 'Looks like `mypy` does not like it :)', 'created_at': datetime.datetime(2024, 10, 29, 21, 44, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2466380404, 'issue_id': 2622314740, 'author': 'dabla', 'body': 'Thank you @ambika-garg for the fix', 'created_at': datetime.datetime(2024, 11, 9, 18, 15, 56, tzinfo=datetime.timezone.utc)}]","ambika-garg (Issue Creator) on (2024-10-29 20:59:32 UTC): Hey @eladkal and @dabla, This pull request fixes the test case of powerbi_trigger, that initially took 30 seconds to execute. It is in continuation to PR #41331.

<img width=""1417"" alt=""Screenshot 2024-10-29 at 3 47 20 PM"" src=""https://github.com/user-attachments/assets/262a4b34-38d3-4b6e-bc6e-f4bf8eee4351"">

potiuk on (2024-10-29 21:44:36 UTC): Looks like `mypy` does not like it :)

dabla on (2024-11-09 18:15:56 UTC): Thank you @ambika-garg for the fix

"
2622213987,pull_request,closed,,initial commit,"Start referring to ""DAG"" as ""Dag"", so users don't get confused with the concept of a directed acyclic graph.

https://lists.apache.org/thread/lktrzqkzrpvc1cyctxz7zxfmc0fwtq2j",RNHTTR,2024-10-29 20:03:33+00:00,[],2024-12-19 00:16:12+00:00,2024-12-19 00:16:12+00:00,https://github.com/apache/airflow/pull/43493,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:webserver', 'Webserver related Issues'), ('area:CLI', ''), ('area:dev-tools', ''), ('area:API', ""Airflow's REST/HTTP API""), ('kind:documentation', ''), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('area:core-operators', 'Operators, Sensors and hooks within Core Airflow')]","[{'comment_id': 2542578750, 'issue_id': 2622213987, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 12, 14, 0, 16, 6, tzinfo=datetime.timezone.utc)}]","github-actions[bot] on (2024-12-14 00:16:06 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2622124103,pull_request,closed,,AIP-65: Update dag source endpoint to support versioning,"Enhanced the DAG source endpoint to support version-based retrieval

Refactored the get_dag_source function to allow fetching specific versions of DAG source code using dag_id, version_name, and version_number parameters.

Replaced file_token with dag_id in endpoint paths and removed unnecessary token-based access.

Updated OpenAPI specifications and requested serializers to include new versioning parameters.

Modified API response schema to include dag_id, and version_number for improved version tracking.

Added/updated tests",ephraimbuddy,2024-10-29 19:18:31+00:00,[],2025-01-16 20:20:47+00:00,2024-11-19 11:26:08+00:00,https://github.com/apache/airflow/pull/43492,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:webserver', 'Webserver related Issues'), ('area:dev-tools', ''), ('area:serialization', ''), ('area:API', ""Airflow's REST/HTTP API""), ('kind:documentation', ''), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('area:db-migrations', 'PRs with DB migration'), ('AIP-65: DAG history in UI', ''), ('legacy ui', 'Whether legacy UI change should be allowed in PR'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]",[],
2622045481,pull_request,closed,,Dep: Revert changes for cloudant python specifier,"Unfortunately uv 0.4.28 did not solve this

https://github.com/apache/airflow/pull/43451

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-29 18:35:46+00:00,[],2024-10-29 18:41:34+00:00,2024-10-29 18:41:10+00:00,https://github.com/apache/airflow/pull/43491,"[('area:providers', ''), ('provider:cloudant', '')]","[{'comment_id': 2445064348, 'issue_id': 2622045481, 'author': 'kaxil', 'body': 'Nevermind, it actually fixed. I was running `uv sync` from a wrong place (diff venv).', 'created_at': datetime.datetime(2024, 10, 29, 18, 41, 33, tzinfo=datetime.timezone.utc)}]","kaxil (Issue Creator) on (2024-10-29 18:41:33 UTC): Nevermind, it actually fixed. I was running `uv sync` from a wrong place (diff venv).

"
2622028517,pull_request,closed,,Drop `task_fail` table,"This table was previously only used in Task Duraton Legacy view.

Follow-up of https://github.com/apache/airflow/pull/38339#pullrequestreview-1949728059

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-29 18:26:29+00:00,[],2024-10-29 21:54:21+00:00,2024-10-29 21:34:38+00:00,https://github.com/apache/airflow/pull/43490,"[('kind:documentation', ''), ('area:db-migrations', 'PRs with DB migration'), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]","[{'comment_id': 2445400391, 'issue_id': 2622028517, 'author': 'potiuk', 'body': 'NICE :)', 'created_at': datetime.datetime(2024, 10, 29, 21, 54, 20, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-29 21:54:20 UTC): NICE :)

"
2621886922,pull_request,closed,,Add latest dag run info to dags list and dag details,"Add latest dag runs info to the new UI to better fill out the dags list and dag details header:

<img width=""909"" alt=""Screenshot 2024-10-29 at 1 13 58 PM"" src=""https://github.com/user-attachments/assets/69e76c49-b29d-4cbc-9b22-e38c0d60d661"">
<img width=""1369"" alt=""Screenshot 2024-10-29 at 1 13 50 PM"" src=""https://github.com/user-attachments/assets/d327e150-5988-4716-a88f-7d4770246d1c"">
<img width=""695"" alt=""Screenshot 2024-10-29 at 1 13 38 PM"" src=""https://github.com/user-attachments/assets/707ce51a-227e-4c8e-ad77-525459b5de29"">
<img width=""654"" alt=""Screenshot 2024-10-29 at 1 21 57 PM"" src=""https://github.com/user-attachments/assets/6aae4c65-4e0c-4c5c-8a60-e92e08b40b5d"">





---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-10-29 17:15:11+00:00,[],2024-10-30 13:27:07+00:00,2024-10-30 13:27:05+00:00,https://github.com/apache/airflow/pull/43489,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2621774899,pull_request,closed,,Prepare & Install Task SDK package for OpenAPI client tests,"Without it the CI will fail once https://github.com/apache/airflow/pull/43076 is merged. Example: https://github.com/apache/airflow/actions/runs/11578061340/job/32231040111?pr=43076

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-29 16:29:36+00:00,[],2024-10-29 16:37:28+00:00,2024-10-29 16:37:26+00:00,https://github.com/apache/airflow/pull/43487,"[('area:dev-tools', '')]",[],
2621664469,pull_request,closed,,AIP-84 Get Task Instance,"Related to https://github.com/apache/airflow/issues/42370


Tests are taken from the legacy API. Beside the `Zulu` datetime and `execution_date -> logical_date` payload assertion in tests are identical, ensuring consistency.",pierrejeambrun,2024-10-29 15:47:19+00:00,['pierrejeambrun'],2024-10-31 09:24:21+00:00,2024-10-31 09:24:19+00:00,https://github.com/apache/airflow/pull/43485,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-84', 'Modern Rest API'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2446314959, 'issue_id': 2621664469, 'author': 'pierrejeambrun', 'body': 'Add TaskInstanceCollection serializer to unblock other PRs.', 'created_at': datetime.datetime(2024, 10, 30, 9, 27, 42, tzinfo=datetime.timezone.utc)}]","pierrejeambrun (Issue Creator) on (2024-10-30 09:27:42 UTC): Add TaskInstanceCollection serializer to unblock other PRs.

"
2621511393,pull_request,closed,,Mark all tasks as skipped when failing a dag_run manually including t…,"closes: #43475

There no reason to leave any task as None state when marking the dag_run as failed manually.",abhishekbhakat,2024-10-29 14:55:56+00:00,[],2024-11-01 08:37:56+00:00,2024-10-29 17:46:23+00:00,https://github.com/apache/airflow/pull/43482,"[('area:API', ""Airflow's REST/HTTP API""), ('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2444897798, 'issue_id': 2621511393, 'author': 'abhishekbhakat', 'body': ""> Looks good. Could you add a unit test for this though please?\r\n\r\nDone. Added a test which will fail without the code changes like:\r\n```\r\n=============================================================================== short test summary info ================================================================================\r\nFAILED tests/www/views/test_views_dagrun.py::test_dagrun_failed - AssertionError: assert None in {'failed', 'skipped', 'success', 'upstream_failed'}\r\n +  where None = <TaskInstance: example_bash_decorator.run_this_last test_dagrun_failed [None]>.state\r\n============================================================================= 1 failed, 1 warning in 6.21s =============================================================================\r\nroot@b8d8405b20f5:/opt/airflow# python -m pytest -vvv tests/www/views/test_views_dagrun.py::test_dagrun_failed\r\n================================================================================= test session starts ==================================================================================\r\n```"", 'created_at': datetime.datetime(2024, 10, 29, 17, 18, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2451385157, 'issue_id': 2621511393, 'author': 'utkarsharma2', 'body': 'Backported to v2-10-test in PR - https://github.com/apache/airflow/pull/43572', 'created_at': datetime.datetime(2024, 11, 1, 6, 40, 6, tzinfo=datetime.timezone.utc)}]","abhishekbhakat (Issue Creator) on (2024-10-29 17:18:23 UTC): Done. Added a test which will fail without the code changes like:
```
=============================================================================== short test summary info ================================================================================
FAILED tests/www/views/test_views_dagrun.py::test_dagrun_failed - AssertionError: assert None in {'failed', 'skipped', 'success', 'upstream_failed'}
 +  where None = <TaskInstance: example_bash_decorator.run_this_last test_dagrun_failed [None]>.state
============================================================================= 1 failed, 1 warning in 6.21s =============================================================================
root@b8d8405b20f5:/opt/airflow# python -m pytest -vvv tests/www/views/test_views_dagrun.py::test_dagrun_failed
================================================================================= test session starts ==================================================================================
```

utkarsharma2 on (2024-11-01 06:40:06 UTC): Backported to v2-10-test in PR - https://github.com/apache/airflow/pull/43572

"
2621479600,pull_request,closed,,Fix docstring for `TI.fetch_handle_failure_context`,"While debugging test failures on https://github.com/apache/airflow/pull/43076, found that this docstring was wrong, most likely a copy/paste error of `ti._handle_failure`

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-29 14:45:16+00:00,[],2024-10-29 15:06:39+00:00,2024-10-29 15:06:37+00:00,https://github.com/apache/airflow/pull/43481,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2621437346,pull_request,closed,,include limit and offset in request body schema for List task instances (batch) endpoint,Backport of https://github.com/apache/airflow/pull/42870,rawwar,2024-10-29 14:29:51+00:00,[],2024-11-01 08:49:19+00:00,2024-10-29 14:59:12+00:00,https://github.com/apache/airflow/pull/43479,"[('area:webserver', 'Webserver related Issues'), ('area:API', ""Airflow's REST/HTTP API""), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2621409614,pull_request,closed,,Rename --dag to --dag-id in backfill CLI command,"Depends on #43477, which must be merged first.",dstandish,2024-10-29 14:19:47+00:00,[],2024-10-29 22:11:25+00:00,2024-10-29 22:11:24+00:00,https://github.com/apache/airflow/pull/43478,"[('area:CLI', ''), ('kind:documentation', ''), ('area:Executors-core', 'LocalExecutor & SequentialExecutor')]","[{'comment_id': 2444482996, 'issue_id': 2621409614, 'author': 'kaxil', 'body': 'newsfragment please :)', 'created_at': datetime.datetime(2024, 10, 29, 14, 46, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445110968, 'issue_id': 2621409614, 'author': 'dstandish', 'body': '> newsfragment please :)\r\n\r\nthis is new feature @kaxil was never released', 'created_at': datetime.datetime(2024, 10, 29, 19, 6, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445406119, 'issue_id': 2621409614, 'author': 'kaxil', 'body': '> > newsfragment please :)\r\n> \r\n> this is new feature @kaxil was never released\r\n\r\naah whoops', 'created_at': datetime.datetime(2024, 10, 29, 21, 58, 58, tzinfo=datetime.timezone.utc)}]","kaxil on (2024-10-29 14:46:16 UTC): newsfragment please :)

dstandish (Issue Creator) on (2024-10-29 19:06:43 UTC): this is new feature @kaxil was never released

kaxil on (2024-10-29 21:58:58 UTC): aah whoops

"
2621390177,pull_request,closed,,AIP-78 Add docs for backfill,Add docs for backfill,dstandish,2024-10-29 14:12:27+00:00,[],2024-10-29 21:01:11+00:00,2024-10-29 21:01:08+00:00,https://github.com/apache/airflow/pull/43477,"[('kind:documentation', ''), ('area:Executors-core', 'LocalExecutor & SequentialExecutor')]",[],
2621174498,pull_request,closed,,Bump google-ads version to use v18 by default,"This PR is related to the upgrade of google-ads dependency. There is a new API version on Google Ads API and Google Ads API tends to deprecate too quickly. So we are trying to increase the dependency version to match with the latest version.

Since we mostly use the types from the underlying library it is safe to upgrade. Also the users can give specific API version to override default value and use the previous API versions.

Here is the ""Deprecation and sunset page"" of Google Ads API: https://developers.google.com/google-ads/api/docs/sunset-dates.
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",VladaZakharova,2024-10-29 12:58:40+00:00,[],2024-10-29 21:02:47+00:00,2024-10-29 21:02:47+00:00,https://github.com/apache/airflow/pull/43474,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2444177697, 'issue_id': 2621174498, 'author': 'eladkal', 'body': ""Can we maybe change our approach to the default version?\r\n\r\nWe have default value in our hook\r\n\r\nhttps://github.com/apache/airflow/blob/0962c285c2659cd86ab436d573f381d928a5fa47/providers/src/airflow/providers/google/ads/hooks/ads.py#L113\r\n\r\nhttps://github.com/apache/airflow/blob/0962c285c2659cd86ab436d573f381d928a5fa47/providers/src/airflow/providers/google/ads/hooks/ads.py#L104\r\n\r\nwhich is forward to the `GoogleAdsClient`\r\n\r\nhttps://github.com/apache/airflow/blob/0962c285c2659cd86ab436d573f381d928a5fa47/providers/src/airflow/providers/google/ads/hooks/ads.py#L192\r\n\r\nI checked and the client has it's own default.\r\n\r\nhttps://github.com/googleads/google-ads-python/blob/6c205c4abdf95a18c70b938e37f448660b280da9/google/ads/googleads/client.py#L35\r\n\r\nThis means that we can change `self.api_version `to be default of None. if user wants to set it they can otherwise it uses the underlying SDK default (whatever that may be)"", 'created_at': datetime.datetime(2024, 10, 29, 13, 8, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2444481430, 'issue_id': 2621174498, 'author': 'VladaZakharova', 'body': ""> Can we maybe change our approach to the default version?\r\n> \r\n> We have default value in our hook\r\n> \r\n> https://github.com/apache/airflow/blob/0962c285c2659cd86ab436d573f381d928a5fa47/providers/src/airflow/providers/google/ads/hooks/ads.py#L113\r\n> \r\n> https://github.com/apache/airflow/blob/0962c285c2659cd86ab436d573f381d928a5fa47/providers/src/airflow/providers/google/ads/hooks/ads.py#L104\r\n> \r\n> which is forward to the `GoogleAdsClient`\r\n> \r\n> https://github.com/apache/airflow/blob/0962c285c2659cd86ab436d573f381d928a5fa47/providers/src/airflow/providers/google/ads/hooks/ads.py#L192\r\n> \r\n> I checked and the client has it's own default.\r\n> \r\n> https://github.com/googleads/google-ads-python/blob/6c205c4abdf95a18c70b938e37f448660b280da9/google/ads/googleads/client.py#L35\r\n> \r\n> This means that we can change `self.api_version `to be default of None. if user wants to set it they can otherwise it uses the underlying SDK default (whatever that may be)\r\n\r\nwow, this is really good idea, thank you so much! I will update the code"", 'created_at': datetime.datetime(2024, 10, 29, 14, 45, 44, tzinfo=datetime.timezone.utc)}]","eladkal on (2024-10-29 13:08:26 UTC): Can we maybe change our approach to the default version?

We have default value in our hook

https://github.com/apache/airflow/blob/0962c285c2659cd86ab436d573f381d928a5fa47/providers/src/airflow/providers/google/ads/hooks/ads.py#L113

https://github.com/apache/airflow/blob/0962c285c2659cd86ab436d573f381d928a5fa47/providers/src/airflow/providers/google/ads/hooks/ads.py#L104

which is forward to the `GoogleAdsClient`

https://github.com/apache/airflow/blob/0962c285c2659cd86ab436d573f381d928a5fa47/providers/src/airflow/providers/google/ads/hooks/ads.py#L192

I checked and the client has it's own default.

https://github.com/googleads/google-ads-python/blob/6c205c4abdf95a18c70b938e37f448660b280da9/google/ads/googleads/client.py#L35

This means that we can change `self.api_version `to be default of None. if user wants to set it they can otherwise it uses the underlying SDK default (whatever that may be)

VladaZakharova (Issue Creator) on (2024-10-29 14:45:44 UTC): wow, this is really good idea, thank you so much! I will update the code

"
2621168930,pull_request,closed,,Fix validating `parent_model` parameter in `UploadModelOperator`,"Fix validating parent_model parameter in UploadModelOperator + fixing system test
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",VladaZakharova,2024-10-29 12:56:53+00:00,[],2024-10-29 18:21:57+00:00,2024-10-29 18:21:56+00:00,https://github.com/apache/airflow/pull/43473,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]",[],
2620971142,pull_request,closed,,fix(providers/amazon): alias is_authorized_dataset to is_authorized_asset,"## Why

is_authorized_dataset has been is_authorized_asset in airflow 3.0 but not yet in 2.10, which will cause insufficient permission when using airflow 2.10 with aws 9.0.0

## What

Alias is_authorized_dataset to is_authorized_asset and add a deprecation warning to is_authorized_dataset

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-10-29 11:34:24+00:00,[],2024-10-29 14:34:10+00:00,2024-10-29 14:34:07+00:00,https://github.com/apache/airflow/pull/43470,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]",[],
2620962290,pull_request,closed,,fix(providers/fab): alias is_authorized_dataset to is_authorized_asset,"## Why

is_authorized_dataset has been is_authorized_asset in airflow 3.0 but not yet in 2.10 which will cause insufficient permission when use airflow 2.10 with fab 1.4.1

## What

Alias is_authorized_dataset to is_authorized_asset and add a deprecation warning to is_authorized_dataset

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-10-29 11:29:56+00:00,[],2024-10-29 14:26:57+00:00,2024-10-29 14:26:55+00:00,https://github.com/apache/airflow/pull/43469,"[('area:providers', ''), ('provider:fab', '')]",[],
2620906579,pull_request,closed,,Add simple instructions for installing providers in editable mode,"After #42505, you need to get through extra hoops to develop providers in Airflow's monorepo.

This is a simple (not yet uv-specific) documentation on how to install providers in editable mode when you want to develop providers, so that you can run unit test.

Copied mostly from https://github.com/apache/airflow/pull/43082

It's not yet full set of docs explaining how to use workspaces and UV. This shoudl be handled via  #43200

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-29 11:05:03+00:00,[],2024-10-29 16:38:40+00:00,2024-10-29 16:38:40+00:00,https://github.com/apache/airflow/pull/43468,"[('area:dev-tools', '')]",[],
2620860573,pull_request,closed,,Fix oracle bulk insert issue when leftover chunk is empty,"closes: https://github.com/apache/airflow/pull/42606
with cherry-pick: @mfatemipour
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-10-29 10:46:23+00:00,[],2024-10-29 16:06:49+00:00,2024-10-29 16:06:49+00:00,https://github.com/apache/airflow/pull/43467,"[('area:providers', ''), ('provider:oracle', '')]",[],
2620642893,pull_request,closed,,Allowing (d) classification while classifying changes,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

When we ask:
```
=================================================================================================  ===========  ========================================================================================
Commit                                                                                             Committed    Subject
=================================================================================================  ===========  ========================================================================================
`857ca4c06c <https://github.com/apache/airflow/commit/857ca4c06c9008593674cabdd28d3c30e3e7f97b>`_  2024-10-09   ``Split providers out of the main ""airflow/"" tree into a UV workspace project (#42505)``
=================================================================================================  ===========  ========================================================================================

Does the provider: airbyte have any changes apart from 'doc-only'?
Press y/N/q: y

Define the type of change for `Split providers out of the main ""airflow/"" tree into a UV workspace project (https://github.com/apache/airflow/pull/42505)` by referring to the above table
Type of change (d)ocumentation, (b)ugfix, (f)eature, (x)breaking change, (m)misc, (s)kip, (q)uit ? ^C
```

If there are more than 1 changes to classify, the RM would answer ""y"" to the qn but the classification could have ""doc"" type too. We should allow RM to enter ""d"" for the classification too. The backend part is already handled and works.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",amoghrajesh,2024-10-29 09:24:19+00:00,[],2024-10-29 12:11:37+00:00,2024-10-29 12:11:36+00:00,https://github.com/apache/airflow/pull/43463,"[('area:dev-tools', '')]",[],
2620500253,pull_request,closed,,Edge worker graceful shutdown on version mismatch,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
When there is a new airflow deployed with a new edge worker provider package, the deployed airflow core and the deployed edge worker has different versions. This version mismatch causes an immidiate crash for the edge worker.

This PR introduces a graceful shutdown for the edge worker: When the version mismatch happens, the worker waits for the running jobs and shuts down after their termination.

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",majorosdonat,2024-10-29 08:24:15+00:00,[],2024-10-29 12:44:07+00:00,2024-10-29 12:44:06+00:00,https://github.com/apache/airflow/pull/43462,"[('area:providers', ''), ('type:improvement', 'Changelog: Improvements'), ('AIP-69', 'Edge Executor'), ('provider:edge', 'Edge Executor / Worker (AIP-69)')]","[{'comment_id': 2444109627, 'issue_id': 2620500253, 'author': 'majorosdonat', 'body': '> Thanks for that improvement.\r\n> \r\n> I assume this super-seeds PR #43435 correct?\r\n\r\nYes, I will close that', 'created_at': datetime.datetime(2024, 10, 29, 12, 44, 6, tzinfo=datetime.timezone.utc)}]","majorosdonat (Issue Creator) on (2024-10-29 12:44:06 UTC): Yes, I will close that

"
2620320143,pull_request,closed,,"Fix(http) bug, pass request_kwargs to HttpHooK.run","HttpHooK.run() accepts request_kwargs, however HttpOperator and HttpSensor do not pass request_kwargs to HttpHooK.run()

",childe,2024-10-29 06:59:24+00:00,[],2024-10-29 10:48:50+00:00,2024-10-29 10:48:45+00:00,https://github.com/apache/airflow/pull/43459,"[('area:providers', ''), ('provider:http', '')]","[{'comment_id': 2443873635, 'issue_id': 2620320143, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 29, 10, 48, 48, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-29 10:48:48 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2620136468,pull_request,closed,,Fix test_create_backfill test,"Likely due to this https://github.com/apache/airflow/pull/43382/ i am suspecting.

Tests are failing on main and prs 

https://github.com/apache/airflow/actions/runs/11565645084/job/32193468104?pr=42081#step:7:7421

https://github.com/apache/airflow/actions/runs/11565878228/job/32194015729#step:7:6795

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-10-29 05:00:29+00:00,[],2024-10-29 12:43:02+00:00,2024-10-29 07:31:05+00:00,https://github.com/apache/airflow/pull/43457,"[('area:providers', ''), ('provider:fab', '')]","[{'comment_id': 2443261386, 'issue_id': 2620136468, 'author': 'gopidesupavan', 'body': '> lgtm if tests go green :)\r\n\r\ncool, the tests are green, doc build/spell checks are running :)', 'created_at': datetime.datetime(2024, 10, 29, 5, 38, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2444106849, 'issue_id': 2620136468, 'author': 'dstandish', 'body': 'ty', 'created_at': datetime.datetime(2024, 10, 29, 12, 43, tzinfo=datetime.timezone.utc)}]","gopidesupavan (Issue Creator) on (2024-10-29 05:38:16 UTC): cool, the tests are green, doc build/spell checks are running :)

dstandish on (2024-10-29 12:43:00 UTC): ty

"
2619989379,pull_request,closed,,Remove returns in final clause of S3ToDynamoDBOperator,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
Related: #43274

This PR will remove returns in the final clause of `S3ToDynamoDBOperator`.
Other related issues has been fixed by the PR: [#43426](https://github.com/apache/airflow/pull/43426) 
<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",yangyulely,2024-10-29 02:54:13+00:00,[],2024-11-05 10:37:11+00:00,2024-11-05 09:38:05+00:00,https://github.com/apache/airflow/pull/43456,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]",[],
2619759058,pull_request,closed,,Added condition to check if it is a scheduled save or rerun,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #43347
related: #43347

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
## What?
I added a condition distinguishing a scheduled run from a rerun.
- a scheduled run always starts a run of all models
- rerun, when the flag `retry_from_failure=True` is set, should only build models that failed in the previous run.
## Why?
The problem is that if there is an error in one model that can't be resolved (e.g., due to a data source issue), the flag prevented the other models from being refreshed, even in subsequent scheduled runs.
## How?
- first run calls `{account_id}/jobs/{job_id}/run/`
- next runs calls `{account_id}/jobs/{job_id}/rerun/`

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",krzysztof-kubis,2024-10-28 23:16:43+00:00,[],2024-11-14 02:54:11+00:00,2024-11-09 03:19:47+00:00,https://github.com/apache/airflow/pull/43453,"[('area:providers', ''), ('provider:dbt-cloud', '')]","[{'comment_id': 2442849673, 'issue_id': 2619759058, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 28, 23, 16, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456508667, 'issue_id': 2619759058, 'author': 'potiuk', 'body': 'Can you please add a unit test covering it?', 'created_at': datetime.datetime(2024, 11, 5, 8, 16, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456518478, 'issue_id': 2619759058, 'author': 'jaklan', 'body': '@potiuk \r\n\r\n> Can you please add a unit test covering it?\r\n\r\nWe will, but first we want to know if you (== anyone responsible for dbt Cloud Operator) are fine with the approach', 'created_at': datetime.datetime(2024, 11, 5, 8, 21, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456540668, 'issue_id': 2619759058, 'author': 'potiuk', 'body': ""> @potiuk\r\n> \r\n> > Can you please add a unit test covering it?\r\n\r\n\r\nThat was the part of first pass of review. At this stage assesment from me is that the change lacks unit test - so it won't be generally accepted anyway.\r\n\r\n> We will, but first we want to know if you (== anyone responsible for dbt Cloud Operator) are fine with the approach\r\n\r\nMaybe. I have no idea, I am not a dbt expert. Possibly someone else who is will take a look. But a lot of people won't even look if there is no unit test, we generally don't accept PRs where unit tests work before and after the change - because it means that the change is not testable and prone to regression. \r\n\r\nAlso unit tests help to guide reviewer in understanding what the change does - unit tests shows the scenarios in which the change gets used. Often unit test explain the reason and circumstances of the change better than words, and as such they are often used - especially when changes are small - as the review guideline. Also it shows that the author knows what they are doing since they are able to reproduce the situation they are talking about in unit tests."", 'created_at': datetime.datetime(2024, 11, 5, 8, 33, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456548456, 'issue_id': 2619759058, 'author': 'potiuk', 'body': 'BTW. There is no-one ""responsible"" - this is not how open-source work. There are > 3000 mostly volunteers - who similarl y as you - are both contributing and reviewing the code in their free time away from their day jobs and families, so the best course of action to get your PR merged, is to follow reviewer\'s comments and asks, and ping (in general not individual people) that your PR needs review.', 'created_at': datetime.datetime(2024, 11, 5, 8, 36, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456597998, 'issue_id': 2619759058, 'author': 'jaklan', 'body': '@potiuk \r\n\r\n> That was the part of first pass of review. At this stage assesment from me is that the change lacks unit test - so it won\'t be generally accepted anyway.\r\n\r\nWe know it won\'t be accepted - the point is to get approval to finalize the PR.\r\n\r\n> Maybe. I have no idea, I am not a dbt expert. Possibly someone else who is will take a look. But a lot of people won\'t even look if there is no unit test, we generally don\'t accept PRs where unit tests work before and after the change - because it means that the change is not testable and prone to regression.\r\n>\r\n>Also unit tests help to guide reviewer in understanding what the change does - unit tests shows the scenarios in which the change gets used. Often unit test explain the reason and circumstances of the change better than words, and as such they are often used - especially when changes are small - as the review guideline. Also it shows that the author knows what they are doing since they are able to reproduce the situation they are talking about in unit tests.\r\n\r\nI don\'t see any value in writing unit tests before there\'s confirmation the approach is fine, otherwise it\'s just a waste of time of contributors. You start with design, not with coding (that\'s why the confirmation should happen first in the issue anyway, the PR was opened because you asked for it), and the reasoning is described in both the issue and MR description. It\'s more than enough to provide a feedback if it makes sense conceptually for someone familiar with given provider, especially in a situation when a few potential solutions were proposed.\r\n\r\n> There is no-one ""responsible"" - this is not how open-source work. There are > 3000 mostly volunteers - who similarl y as you - are both contributing and reviewing the code in their free time away from their day jobs and families, so the best course of action to get your PR merged, is to follow reviewer\'s comments and asks, and ping (in general not individual people) that your PR needs review.\r\n\r\nBut there has to be someone responsible for the provider, who knows its specifics and who takes the final decision - I guess you don\'t merge PRs related to providers you don\'t know just because they seem to be documented and tested, you have to understand the impact.', 'created_at': datetime.datetime(2024, 11, 5, 9, 0, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457729170, 'issue_id': 2619759058, 'author': 'potiuk', 'body': '> I don\'t see any value in writing unit tests before there\'s confirmation the approach is fine, otherwise it\'s just a waste of time of contributors. You start with design, not with coding (that\'s why the confirmation should happen first in the issue anyway, the PR was opened because you asked for it), and the reasoning is described in both the issue and MR description. It\'s more than enough to provide a feedback if it makes sense conceptually for someone familiar with given provider, especially in a situation when a few potential solutions were proposed.\r\n\r\nYes. You trade the time of contributors with time of maintainers. And no. It\'s not a general ""truth"" that things start from design. There is an idea of ""emerging design"" that comes from discussion on a code implemented and tests showing how it work. There is even ""test driven development"" so statement suggesting that there is the only way of doing things starting with design is totally unfounded. And here we prefer to see the code and tests to be able to assess the impact - that saves precious time of maitainers who (I am sure you can attempt to empathise wiht them) sometimes review 10s of PRs a day and do it in their free, voluntary time. So the best thing you can do is to follow the way we do it here. If we follow things each of 3000+ contributors think is ""better"" , that would make it impossible to manage the flow of incoming contributions. So if you would like to join 3000 contributors, I think it makes sense that you adapt to the way how they work, not the other way round.  Or at least that seems more reasonable from common sense point of view.\r\n\r\n> But there has to be someone responsible for the provider, who knows its specifics and who takes the final decision - I guess you don\'t merge PRs related to providers you don\'t know just because they seem to be documented and tested, you have to understand the impact.\r\n\r\nNo. This is how things work in corporate-driven projects. This is not how things work in an open-source projects governed by the Apache Software Foundation. There is no-one responsible for this particular piece. You can see the history of contributors by following git history of the files you modified \r\n\r\n```\r\ngit log --follow providers/src/airflow/providers/dbt/cloud/operators/dbt.py\r\n```\r\n\r\nAnd see if there are changes relevant to your and ping those contributors if you think their opinion is relevant, but list of all contributors is all that you can see this way. We merge changes if the author (and reviewers who might or might not be maintainers) convince us that they tested the change and review looks good. Also when we release such a change, that is merged the authors are asked to check release candidates to confirm that their change worked as expected and that they tested it - see for example here https://github.com/apache/airflow/issues/43615. And we can always revert or fix it when you find it\'s not during your testing, and produce rc2 etc. \r\n\r\nSo ultimately it\'s actually your responsibility as an author to test and ""convince"" maintainers that the change is tested enough and to test it when release candidate is sent for voting . This is why also we ask you to add unit tests, to get more confidence that you understand the process and you are going to follow it - including testing the release.\r\n\r\nWe treat contributors very seriously here.', 'created_at': datetime.datetime(2024, 11, 5, 17, 7, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2458421570, 'issue_id': 2619759058, 'author': 'jaklan', 'body': '@potiuk \r\n\r\n> Yes. You trade the time of contributors with time of maintainers. And no. It\'s not a general ""truth"" that things start from design. There is an idea of ""emerging design"" that comes from discussion on a code implemented and tests showing how it work. There is even ""test driven development"" so statement suggesting that there is the only way of doing things starting with design is totally unfounded. And here we prefer to see the code and tests to be able to assess the impact - that saves precious time of maitainers who (I am sure you can attempt to empathise wiht them) sometimes review 10s of PRs a day and do it in their free, voluntary time.\r\n\r\nWe don\'t trade the time of contributors with time of maintainers - it\'s beneficial for both sides to agree on the direction before you go deep into code changes.\r\n\r\nNeither ""emerging design"" nor TDD means you start without the expected goal. Although you want to say you first write tests, then you write logic, and only after that you start defining the outcome in issues / user stories, but that would be, well, very unique approach.\r\n\r\n> So the best thing you can do is to follow the way we do it here. If we follow things each of 3000+ contributors think is ""better"" , that would make it impossible to manage the flow of incoming contributions. So if you would like to join 3000 contributors, I think it makes sense that you adapt to the way how they work, not the other way round. Or at least that seems more reasonable from common sense point of view.\r\n\r\nYes, we will follow the ""PR requirements"", but that\'s not the point. In that case we can do the full implementation and be blocked at the very last stage because of something aimed to be discussed at the beginning, or we can implement something very opinionated which will be accepted just because ""code and tests look fine"". Neither outcome is good.\r\n\r\n> So ultimately it\'s actually your responsibility as an author to test and ""convince"" maintainers that the change is tested enough and to test it when release candidate is sent for voting . This is why also we ask you to add unit tests, to get more confidence that you understand the process and you are going to follow it - including testing the release.\r\n\r\nWe are back to the beginning again. The whole discussion is not about ""convincing"" anyone if the implementation is correct, that part is quite obvious, but about the common agreement which approach makes sense. We would change the logic, someone else would say they prefer the another one and create a new PR, and we will go back-and-forth indefinitely?\r\n\r\nIf you say there\'s no one within Airflow contributors to make such decision (which I really don\'t get - someone has to be a reviewer and someone has to accept the PR anyway - not only, I hope, by reviewing the quality of code - so such person could provide a feedback already now as well), then we can just reach out to dbt Labs folks to find the ""decision maker"" there. With a hope that their agreement would be a sufficient argument for reviewers to accept the agreed solution (once implementation is finalised, of course).', 'created_at': datetime.datetime(2024, 11, 5, 23, 44, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2459047374, 'issue_id': 2619759058, 'author': 'potiuk', 'body': ""Sorry, I have no time to lose on that discussion, but I think if you want to contribute, I suggest you to follow reviewer's request rather than argue with them. This is not the best way to contribute. And if you are not able to understand and adjust, maybe simple open source contribution is not for you."", 'created_at': datetime.datetime(2024, 11, 6, 8, 57, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2459054041, 'issue_id': 2619759058, 'author': 'potiuk', 'body': 'And yes. if you want to reach out to DBT maintainers - feel free. As I said we treat contributors seriously, if you need `dbt` maintainers opinion on that - feel free to reach to them bring them here and state their opinion.', 'created_at': datetime.datetime(2024, 11, 6, 9, 0, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2459149777, 'issue_id': 2619759058, 'author': 'jaklan', 'body': '> And if you are not able to understand and adjust, maybe simple open source contribution is not for you\r\n\r\n> As I said we treat contributors seriously\r\n\r\nOf course you do - respecting their time and themselves in the way presented above is the best proof of this 😉 Sorry for wasting your time by raising concerns that you are unable to answer without ad personam. But in fact, it is a valuable feedback that we can significantly change the logic of the operator and no one will even wonder about the rationale behind it - as long as there are tests. We will definitely raise that issue during discussion with `dbt` folks so they are aware what can happen with their provider.', 'created_at': datetime.datetime(2024, 11, 6, 9, 45, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2459751931, 'issue_id': 2619759058, 'author': 'potiuk', 'body': ""> with dbt folks so they are aware what can happen with their provider.\r\n\r\nPlease do. Maybe they will contribute back - including the tests. That's all I am asking for - to test providers and provide unit test for them. If your discussion with `dbt` will bring them here to contribute - I am happy as a bunny.\r\n\r\nI also have not noticed any `ad personam` in whatever I wrote, but maye we have a different definition of `ad personam`."", 'created_at': datetime.datetime(2024, 11, 6, 13, 27, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2464967312, 'issue_id': 2619759058, 'author': 'pierrejeambrun', 'body': ""Hello guys,\r\n\r\n@krzysztof-kubis  @jaklan do you plan on continuing your work on that PR, just to know what do to with this one? This will most likely help many other users facing the same problem, I think it's worth pursuing.\r\n\r\nI noticed the branch is in a weird state, most likely due to a bad rebase I assume.\r\n\r\nBest regards,"", 'created_at': datetime.datetime(2024, 11, 8, 14, 57, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2465000790, 'issue_id': 2619759058, 'author': 'krzysztof-kubis', 'body': '> I noticed the branch is in a weird state, most likely due to a bad rebase I assume.\r\n\r\nSolved!', 'created_at': datetime.datetime(2024, 11, 8, 15, 11, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2465988895, 'issue_id': 2619759058, 'author': 'jaklan', 'body': 'Next week we have a call with `dbt` folks - we will try to confirm with them whether it\'s fine to go with this simplified approach or we should implement the more robust one allowing to have more control on `run` mode in dbt Cloud, so sth like:\r\n```\r\nrerun_from_failure = ""never"" | ""always"" | ""when_task_retried""\r\n```\r\n(although it\'s also not perfect because Airflow task could be retried not because of dbt Cloud job failure)', 'created_at': datetime.datetime(2024, 11, 9, 2, 4, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2466014473, 'issue_id': 2619759058, 'author': 'josh-fell', 'body': '> Next week we have a call with `dbt` folks - we will try to confirm with them whether it\'s fine to go with this simplified approach or we should implement the more robust one allowing to have more control on `run` mode in dbt Cloud, so sth like:\r\n> \r\n> ```\r\n> rerun_from_failure = ""never"" | ""always"" | ""when_task_retried""\r\n> ```\r\n> \r\n> (although it\'s also not perfect because Airflow task could be retried not because of dbt Cloud job failure)\r\n\r\nNothing wrong with incremental changes. The dbt folks were, at least peripherally, involved in the initial creation of this provider. Continued collaboration is definitely welcomed. This provider has come a long way since it was created with contributions from folks like you @krzysztof-kubis, so thank you!', 'created_at': datetime.datetime(2024, 11, 9, 3, 19, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2466014597, 'issue_id': 2619759058, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 11, 9, 3, 19, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2466018350, 'issue_id': 2619759058, 'author': 'josh-fell', 'body': '🎉 Congrats @krzysztof-kubis! Keep the contributions coming!', 'created_at': datetime.datetime(2024, 11, 9, 3, 31, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2466681024, 'issue_id': 2619759058, 'author': 'jaklan', 'body': '> Nothing wrong with incremental changes. The dbt folks were, at least peripherally, involved in the initial creation of this provider. Continued collaboration is definitely welcomed. This provider has come a long way since it was created with contributions from folks like you @krzysztof-kubis, so thank you!\r\n\r\nAs you wish, just to note it\'s already a breaking change - with the second approach we could avoid it by either:\r\n- introducing a new parameter `rerun_from_failure` and deprecating `retry_from_failure` (to differentiate dbt Cloud `rerun` - as that\'s the API endpoint - from Airflow task `retry`)\r\nor\r\n- keeping `retry_from_failure`, but supporting all options like: `True | False | ""never"" | ""always"" | ""when_task_retried""` and a) marking `True | False` as deprecated b) keeping the mapping `True -> ""always""`, `False -> ""never""`', 'created_at': datetime.datetime(2024, 11, 10, 10, 39, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2468878469, 'issue_id': 2619759058, 'author': 'potiuk', 'body': '> 🎉 Congrats @krzysztof-kubis! Keep the contributions coming!\r\n\r\nIndeed', 'created_at': datetime.datetime(2024, 11, 11, 19, 25, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2468881857, 'issue_id': 2619759058, 'author': 'potiuk', 'body': 'Despite some grumpy maintainers :). But you know guys, I am Polish as both of you @jaklan @krzysztof-kubis , so I had to complain.\r\n\r\nSorry if you were a bit too much put-off inititally, and if I was a bit too harsh, but this OSS world is a bit different than traditional and the ""top-bottom"" thing  does not work here - much more responsibility is in the hands of contributors.', 'created_at': datetime.datetime(2024, 11, 11, 19, 27, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2469913393, 'issue_id': 2619759058, 'author': 'jaklan', 'body': '>Sorry if you were a bit too much put-off inititally, and if I was a bit too harsh, but this OSS world is a bit different than traditional and the ""top-bottom"" thing does not work here - much more responsibility is in the hands of contributors.\r\n\r\n@potiuk Sure, we get this point, but that\'s exactly the reason why we had doubts about the best way to move forward. It\'s just a single-line change, but - breaking change. And the fact we expect the Operator to behave differently doesn\'t mean it\'s the same for other users, maybe for most of them the existing behaviour was actually fine? \r\n\r\nThat\'s why we wanted to ensure first there was a common agreement to change the logic, but if there is no direct ownership of the Operator - then I believe we should be even more cautious about introducing breaking changes, which could be avoided for example in one of the above ways:\r\n\r\n> * introducing a new parameter `rerun_from_failure` and deprecating `retry_from_failure` (to differentiate dbt Cloud `rerun` - as that\'s the API endpoint - from Airflow task `retry`)\r\n>   or\r\n> * keeping `retry_from_failure`, but supporting all options like: `True | False | ""never"" | ""always"" | ""when_task_retried""` and a) marking `True | False` as deprecated b) keeping the mapping `True -> ""always""`, `False -> ""never""`', 'created_at': datetime.datetime(2024, 11, 12, 8, 41, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2470090708, 'issue_id': 2619759058, 'author': 'potiuk', 'body': '> @potiuk Sure, we get this point, but that\'s exactly the reason why we had doubts about the best way to move forward. It\'s just a single-line change, but - breaking change. And the fact we expect the Operator to behave differently doesn\'t mean it\'s the same for other users, maybe for most of them the existing behaviour was actually fine?\r\n\r\n> That\'s why we wanted to ensure first there was a common agreement to change the logic, but if there is no direct ownership of the Operator - then I believe we should be even more cautious about introducing breaking changes, which could be avoided for example in one of the above ways:\r\n\r\nYeah - and that\'s where seeing test helps and - as you see there were people who looked at it and said ""yes, looks fine, let\'s merge it\'.  We have 4000+ operators in Airflow. There is no way we can be authoritative in all of them as maintainers. But you already said you feel that you would like to discuss it with `dbt` people so if you have another proposal after talking to them that will result in a new PR, that\'s cool. And if you care about this dbt operator and want to make it better - this is how you become ""steward"" of it, by making it better and fix problems - we as maintiners are super happy if people like you care and want to make things better (and also take more responsibility for making decisions there without having official authority). This is precisely how you might become committer here - by making decisions and implementing them and taking responsibility for them (including fixing problems when people raise them). And there are a number of places in Airflow that have their own ""informal"" stewards like that. And those people - when they are active in several parts of the code and are engaged, might then later be invited as committers.\r\n\r\nThis is how it works here - committer (also known as maintainer) is not a person who is ""responsible"" for some part of the code - this is a person who is committed and engaged in the project, but besides of being able to approve and merge the code that ""looks good"" and that author is confident about fixing some problems and confirming they tested it, they have no ""authority"" / ""responsibilty"" to make decisions over specific part of the code alone. \r\n\r\nYes. I know it\'s surprising that it works, but it does. Because authors like you take more responsibility for their own decisions when their code is merged and their name is attached to ""I made that change and vouch for it"".\r\n\r\nThe code looks good, we cannot see any big issue and we trust you care and made good decision.\r\n\r\nWorst thing that can happen, people will downgrade the provider and we will have to revert that change if it will turn it has more problems that we foresaw by reviewing them as maintainers, no big harm done - but we trust you will test it with release candidate as well and confirm it\'s working.', 'created_at': datetime.datetime(2024, 11, 12, 9, 58, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2474745382, 'issue_id': 2619759058, 'author': 'joellabes', 'body': ""Hey! I'm the DX advocate for the orchestration team at dbt Labs. \r\n\r\nI think this approach (only issue a rerun command if it's an Airflow retry) makes sense. It aligns with the behaviour in the run results UI for dbt Cloud, where the only way you can trigger a rerun is to have a job which has partially failed. So it should match up with folks' mental models pretty nicely. \r\n\r\nAs for the tradeoffs between the possible approaches, I think it would have been useful to flag that it was a breaking change when the PR was opened, as opposed to [after the merge had happened](https://github.com/apache/airflow/pull/43453#issuecomment-2466681024). The initial issue enumerated the options but didn't explicitly call out the tradeoffs associated with each one. \r\n\r\n(To be clear, I do think you made the right choice in _not_ adding a new option/parameter, since the change aligns with the mental model of the feature in dbt Cloud so should be uncontroversial.)\r\n\r\nThanks for your contribution to the operator!"", 'created_at': datetime.datetime(2024, 11, 13, 20, 43, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2474901731, 'issue_id': 2619759058, 'author': 'jaklan', 'body': '@joellabes thanks for the input! The most confusing part here was whether we should take ""UI mental model"" or ""API mental model"":\r\n- UI mental model: e.g. each day we have a new scheduled run, but if some run fails - we can additionally trigger ""retry from failure""\r\n- API mental model: `run` and `rerun` are 2 different endpoints, [where `rerun` can also trigger the full run](https://docs.getdbt.com/dbt-cloud/api-v2#/operations/Retry%20Failed%20Job):\r\n  > Use this endpoint to retry a failed run for a job from the point of failure, if the run failed. **Otherwise trigger a new run.** \r\n  \r\nSo one could argue the expected behaviour of the operator option is just to switch the endpoint which is used. We were in favor of the first approach, but we didn\'t want to take that decision by ourselves - now it\'s confirmed it\'s aligned with your vision as well 😉\r\n\r\nHaving said that, I wonder how we can make it more robust. With the current implementation, Airflow task can fail for whatever reason not related to dbt Cloud job (e.g. queue timeout) and be retried, which could trigger a significantly different behaviour if the previous run (e.g. from the previous day) in dbt Cloud didn\'t succeed - and that could lead to unexpected results.\r\n\r\nQuick idea could be to check if there\'s any dbt Cloud run ID associated with the first Airflow task try and based on its existence / status (+ `retry_from_failure` option) decide how retry should exactly behave, but I don\'t recall any simple, generic way to keep state between task retries (afaik XComs are cleared). Any ideas are more than welcome.\r\n\r\n> As for the tradeoffs between the possible approaches, I think it would have been useful to flag that it was a breaking change when the PR was opened, as opposed to https://github.com/apache/airflow/pull/43453#issuecomment-2466681024. The initial issue enumerated the options but didn\'t explicitly call out the tradeoffs associated with each one.\r\n\r\nThat\'s true, we haven\'t expected things to happen so fast 😄 Especially we thought [that comment](https://github.com/apache/airflow/pull/43453#issuecomment-2465988895) would simply ""freeze"" the MR until we have a discussion during the today meeting, but well, it didn\'t 🙈', 'created_at': datetime.datetime(2024, 11, 13, 21, 55, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2474918631, 'issue_id': 2619759058, 'author': 'joellabes', 'body': ""> which could trigger a significantly different behaviour if the previous run (e.g. from the previous day) in dbt Cloud didn't succeed - and that could lead to unexpected results.\r\n\r\nIt'll only retry if the most recent run of the job failed - if yesterday morning's run failed in dbt Cloud, and yesterday evening's run succeeded, and then this morning's run failed in Airflow, an Airflow retry will trigger a whole new run in Cloud instead of picking up from halfway through yesterday morning's Cloud run. So I think it should be ok?"", 'created_at': datetime.datetime(2024, 11, 13, 22, 4, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2475307606, 'issue_id': 2619759058, 'author': 'jaklan', 'body': ""@joellabes \r\n\r\n> if yesterday morning's run failed in dbt Cloud, and yesterday evening's run succeeded, and then this morning's run failed in Airflow, an Airflow retry will trigger a whole new run in Cloud instead of picking up from halfway through yesterday morning's Cloud run. So I think it should be ok?\r\n\r\nIn this case - yes, but I mean a different scenario:\r\n> assume one run per day, `retry_from_failure` set to `True`, `retries` set to e.g. `2`\r\n- yesterday run failed, there was no another run / rerun\r\n- today run was scheduled in Airflow, but it wasn't executed, because task failed due to queue timeout\r\n- Airflow task retry was applied\r\n- this time task was executed, but because it was retry - it wasn't a new run, but a retry from failure against yesterday run"", 'created_at': datetime.datetime(2024, 11, 14, 2, 54, 10, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-28 23:16:47 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-11-05 08:16:40 UTC): Can you please add a unit test covering it?

jaklan on (2024-11-05 08:21:38 UTC): @potiuk 


We will, but first we want to know if you (== anyone responsible for dbt Cloud Operator) are fine with the approach

potiuk on (2024-11-05 08:33:04 UTC): That was the part of first pass of review. At this stage assesment from me is that the change lacks unit test - so it won't be generally accepted anyway.


Maybe. I have no idea, I am not a dbt expert. Possibly someone else who is will take a look. But a lot of people won't even look if there is no unit test, we generally don't accept PRs where unit tests work before and after the change - because it means that the change is not testable and prone to regression. 

Also unit tests help to guide reviewer in understanding what the change does - unit tests shows the scenarios in which the change gets used. Often unit test explain the reason and circumstances of the change better than words, and as such they are often used - especially when changes are small - as the review guideline. Also it shows that the author knows what they are doing since they are able to reproduce the situation they are talking about in unit tests.

potiuk on (2024-11-05 08:36:56 UTC): BTW. There is no-one ""responsible"" - this is not how open-source work. There are > 3000 mostly volunteers - who similarl y as you - are both contributing and reviewing the code in their free time away from their day jobs and families, so the best course of action to get your PR merged, is to follow reviewer's comments and asks, and ping (in general not individual people) that your PR needs review.

jaklan on (2024-11-05 09:00:08 UTC): @potiuk 


We know it won't be accepted - the point is to get approval to finalize the PR.


I don't see any value in writing unit tests before there's confirmation the approach is fine, otherwise it's just a waste of time of contributors. You start with design, not with coding (that's why the confirmation should happen first in the issue anyway, the PR was opened because you asked for it), and the reasoning is described in both the issue and MR description. It's more than enough to provide a feedback if it makes sense conceptually for someone familiar with given provider, especially in a situation when a few potential solutions were proposed.


But there has to be someone responsible for the provider, who knows its specifics and who takes the final decision - I guess you don't merge PRs related to providers you don't know just because they seem to be documented and tested, you have to understand the impact.

potiuk on (2024-11-05 17:07:25 UTC): Yes. You trade the time of contributors with time of maintainers. And no. It's not a general ""truth"" that things start from design. There is an idea of ""emerging design"" that comes from discussion on a code implemented and tests showing how it work. There is even ""test driven development"" so statement suggesting that there is the only way of doing things starting with design is totally unfounded. And here we prefer to see the code and tests to be able to assess the impact - that saves precious time of maitainers who (I am sure you can attempt to empathise wiht them) sometimes review 10s of PRs a day and do it in their free, voluntary time. So the best thing you can do is to follow the way we do it here. If we follow things each of 3000+ contributors think is ""better"" , that would make it impossible to manage the flow of incoming contributions. So if you would like to join 3000 contributors, I think it makes sense that you adapt to the way how they work, not the other way round.  Or at least that seems more reasonable from common sense point of view.


No. This is how things work in corporate-driven projects. This is not how things work in an open-source projects governed by the Apache Software Foundation. There is no-one responsible for this particular piece. You can see the history of contributors by following git history of the files you modified 

```
git log --follow providers/src/airflow/providers/dbt/cloud/operators/dbt.py
```

And see if there are changes relevant to your and ping those contributors if you think their opinion is relevant, but list of all contributors is all that you can see this way. We merge changes if the author (and reviewers who might or might not be maintainers) convince us that they tested the change and review looks good. Also when we release such a change, that is merged the authors are asked to check release candidates to confirm that their change worked as expected and that they tested it - see for example here https://github.com/apache/airflow/issues/43615. And we can always revert or fix it when you find it's not during your testing, and produce rc2 etc. 

So ultimately it's actually your responsibility as an author to test and ""convince"" maintainers that the change is tested enough and to test it when release candidate is sent for voting . This is why also we ask you to add unit tests, to get more confidence that you understand the process and you are going to follow it - including testing the release.

We treat contributors very seriously here.

jaklan on (2024-11-05 23:44:42 UTC): @potiuk 


We don't trade the time of contributors with time of maintainers - it's beneficial for both sides to agree on the direction before you go deep into code changes.

Neither ""emerging design"" nor TDD means you start without the expected goal. Although you want to say you first write tests, then you write logic, and only after that you start defining the outcome in issues / user stories, but that would be, well, very unique approach.


Yes, we will follow the ""PR requirements"", but that's not the point. In that case we can do the full implementation and be blocked at the very last stage because of something aimed to be discussed at the beginning, or we can implement something very opinionated which will be accepted just because ""code and tests look fine"". Neither outcome is good.


We are back to the beginning again. The whole discussion is not about ""convincing"" anyone if the implementation is correct, that part is quite obvious, but about the common agreement which approach makes sense. We would change the logic, someone else would say they prefer the another one and create a new PR, and we will go back-and-forth indefinitely?

If you say there's no one within Airflow contributors to make such decision (which I really don't get - someone has to be a reviewer and someone has to accept the PR anyway - not only, I hope, by reviewing the quality of code - so such person could provide a feedback already now as well), then we can just reach out to dbt Labs folks to find the ""decision maker"" there. With a hope that their agreement would be a sufficient argument for reviewers to accept the agreed solution (once implementation is finalised, of course).

potiuk on (2024-11-06 08:57:07 UTC): Sorry, I have no time to lose on that discussion, but I think if you want to contribute, I suggest you to follow reviewer's request rather than argue with them. This is not the best way to contribute. And if you are not able to understand and adjust, maybe simple open source contribution is not for you.

potiuk on (2024-11-06 09:00:20 UTC): And yes. if you want to reach out to DBT maintainers - feel free. As I said we treat contributors seriously, if you need `dbt` maintainers opinion on that - feel free to reach to them bring them here and state their opinion.

jaklan on (2024-11-06 09:45:55 UTC): Of course you do - respecting their time and themselves in the way presented above is the best proof of this 😉 Sorry for wasting your time by raising concerns that you are unable to answer without ad personam. But in fact, it is a valuable feedback that we can significantly change the logic of the operator and no one will even wonder about the rationale behind it - as long as there are tests. We will definitely raise that issue during discussion with `dbt` folks so they are aware what can happen with their provider.

potiuk on (2024-11-06 13:27:15 UTC): Please do. Maybe they will contribute back - including the tests. That's all I am asking for - to test providers and provide unit test for them. If your discussion with `dbt` will bring them here to contribute - I am happy as a bunny.

I also have not noticed any `ad personam` in whatever I wrote, but maye we have a different definition of `ad personam`.

pierrejeambrun on (2024-11-08 14:57:10 UTC): Hello guys,

@krzysztof-kubis  @jaklan do you plan on continuing your work on that PR, just to know what do to with this one? This will most likely help many other users facing the same problem, I think it's worth pursuing.

I noticed the branch is in a weird state, most likely due to a bad rebase I assume.

Best regards,

krzysztof-kubis (Issue Creator) on (2024-11-08 15:11:19 UTC): Solved!

jaklan on (2024-11-09 02:04:14 UTC): Next week we have a call with `dbt` folks - we will try to confirm with them whether it's fine to go with this simplified approach or we should implement the more robust one allowing to have more control on `run` mode in dbt Cloud, so sth like:
```
rerun_from_failure = ""never"" | ""always"" | ""when_task_retried""
```
(although it's also not perfect because Airflow task could be retried not because of dbt Cloud job failure)

josh-fell on (2024-11-09 03:19:21 UTC): Nothing wrong with incremental changes. The dbt folks were, at least peripherally, involved in the initial creation of this provider. Continued collaboration is definitely welcomed. This provider has come a long way since it was created with contributions from folks like you @krzysztof-kubis, so thank you!

boring-cyborg[bot] on (2024-11-09 03:19:49 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

josh-fell on (2024-11-09 03:31:34 UTC): 🎉 Congrats @krzysztof-kubis! Keep the contributions coming!

jaklan on (2024-11-10 10:39:40 UTC): As you wish, just to note it's already a breaking change - with the second approach we could avoid it by either:
- introducing a new parameter `rerun_from_failure` and deprecating `retry_from_failure` (to differentiate dbt Cloud `rerun` - as that's the API endpoint - from Airflow task `retry`)
or
- keeping `retry_from_failure`, but supporting all options like: `True | False | ""never"" | ""always"" | ""when_task_retried""` and a) marking `True | False` as deprecated b) keeping the mapping `True -> ""always""`, `False -> ""never""`

potiuk on (2024-11-11 19:25:06 UTC): Indeed

potiuk on (2024-11-11 19:27:27 UTC): Despite some grumpy maintainers :). But you know guys, I am Polish as both of you @jaklan @krzysztof-kubis , so I had to complain.

Sorry if you were a bit too much put-off inititally, and if I was a bit too harsh, but this OSS world is a bit different than traditional and the ""top-bottom"" thing  does not work here - much more responsibility is in the hands of contributors.

jaklan on (2024-11-12 08:41:54 UTC): @potiuk Sure, we get this point, but that's exactly the reason why we had doubts about the best way to move forward. It's just a single-line change, but - breaking change. And the fact we expect the Operator to behave differently doesn't mean it's the same for other users, maybe for most of them the existing behaviour was actually fine? 

That's why we wanted to ensure first there was a common agreement to change the logic, but if there is no direct ownership of the Operator - then I believe we should be even more cautious about introducing breaking changes, which could be avoided for example in one of the above ways:

potiuk on (2024-11-12 09:58:46 UTC): Yeah - and that's where seeing test helps and - as you see there were people who looked at it and said ""yes, looks fine, let's merge it'.  We have 4000+ operators in Airflow. There is no way we can be authoritative in all of them as maintainers. But you already said you feel that you would like to discuss it with `dbt` people so if you have another proposal after talking to them that will result in a new PR, that's cool. And if you care about this dbt operator and want to make it better - this is how you become ""steward"" of it, by making it better and fix problems - we as maintiners are super happy if people like you care and want to make things better (and also take more responsibility for making decisions there without having official authority). This is precisely how you might become committer here - by making decisions and implementing them and taking responsibility for them (including fixing problems when people raise them). And there are a number of places in Airflow that have their own ""informal"" stewards like that. And those people - when they are active in several parts of the code and are engaged, might then later be invited as committers.

This is how it works here - committer (also known as maintainer) is not a person who is ""responsible"" for some part of the code - this is a person who is committed and engaged in the project, but besides of being able to approve and merge the code that ""looks good"" and that author is confident about fixing some problems and confirming they tested it, they have no ""authority"" / ""responsibilty"" to make decisions over specific part of the code alone. 

Yes. I know it's surprising that it works, but it does. Because authors like you take more responsibility for their own decisions when their code is merged and their name is attached to ""I made that change and vouch for it"".

The code looks good, we cannot see any big issue and we trust you care and made good decision.

Worst thing that can happen, people will downgrade the provider and we will have to revert that change if it will turn it has more problems that we foresaw by reviewing them as maintainers, no big harm done - but we trust you will test it with release candidate as well and confirm it's working.

joellabes on (2024-11-13 20:43:27 UTC): Hey! I'm the DX advocate for the orchestration team at dbt Labs. 

I think this approach (only issue a rerun command if it's an Airflow retry) makes sense. It aligns with the behaviour in the run results UI for dbt Cloud, where the only way you can trigger a rerun is to have a job which has partially failed. So it should match up with folks' mental models pretty nicely. 

As for the tradeoffs between the possible approaches, I think it would have been useful to flag that it was a breaking change when the PR was opened, as opposed to [after the merge had happened](https://github.com/apache/airflow/pull/43453#issuecomment-2466681024). The initial issue enumerated the options but didn't explicitly call out the tradeoffs associated with each one. 

(To be clear, I do think you made the right choice in _not_ adding a new option/parameter, since the change aligns with the mental model of the feature in dbt Cloud so should be uncontroversial.)

Thanks for your contribution to the operator!

jaklan on (2024-11-13 21:55:36 UTC): @joellabes thanks for the input! The most confusing part here was whether we should take ""UI mental model"" or ""API mental model"":
- UI mental model: e.g. each day we have a new scheduled run, but if some run fails - we can additionally trigger ""retry from failure""
- API mental model: `run` and `rerun` are 2 different endpoints, [where `rerun` can also trigger the full run](https://docs.getdbt.com/dbt-cloud/api-v2#/operations/Retry%20Failed%20Job):
  
So one could argue the expected behaviour of the operator option is just to switch the endpoint which is used. We were in favor of the first approach, but we didn't want to take that decision by ourselves - now it's confirmed it's aligned with your vision as well 😉

Having said that, I wonder how we can make it more robust. With the current implementation, Airflow task can fail for whatever reason not related to dbt Cloud job (e.g. queue timeout) and be retried, which could trigger a significantly different behaviour if the previous run (e.g. from the previous day) in dbt Cloud didn't succeed - and that could lead to unexpected results.

Quick idea could be to check if there's any dbt Cloud run ID associated with the first Airflow task try and based on its existence / status (+ `retry_from_failure` option) decide how retry should exactly behave, but I don't recall any simple, generic way to keep state between task retries (afaik XComs are cleared). Any ideas are more than welcome.


That's true, we haven't expected things to happen so fast 😄 Especially we thought [that comment](https://github.com/apache/airflow/pull/43453#issuecomment-2465988895) would simply ""freeze"" the MR until we have a discussion during the today meeting, but well, it didn't 🙈

joellabes on (2024-11-13 22:04:50 UTC): It'll only retry if the most recent run of the job failed - if yesterday morning's run failed in dbt Cloud, and yesterday evening's run succeeded, and then this morning's run failed in Airflow, an Airflow retry will trigger a whole new run in Cloud instead of picking up from halfway through yesterday morning's Cloud run. So I think it should be ok?

jaklan on (2024-11-14 02:54:10 UTC): @joellabes 


In this case - yes, but I mean a different scenario:
- yesterday run failed, there was no another run / rerun
- today run was scheduled in Airflow, but it wasn't executed, because task failed due to queue timeout
- Airflow task retry was applied
- this time task was executed, but because it was retry - it wasn't a new run, but a retry from failure against yesterday run

"
2619732578,pull_request,closed,,Bump `ruff` to `0.7.1`,"https://pypi.org/project/ruff/0.7.1/
Changelog: https://github.com/astral-sh/ruff/blob/main/CHANGELOG.md#071

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-28 22:55:18+00:00,[],2024-10-29 12:13:29+00:00,2024-10-29 12:13:28+00:00,https://github.com/apache/airflow/pull/43452,"[('area:dev-tools', '')]",[],
2619702634,pull_request,closed,,Bump `uv` to `0.4.28`,"https://pypi.org/project/uv/0.4.28/

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-28 22:34:38+00:00,[],2024-10-29 16:17:15+00:00,2024-10-29 16:17:14+00:00,https://github.com/apache/airflow/pull/43451,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]","[{'comment_id': 2442804397, 'issue_id': 2619702634, 'author': 'kaxil', 'body': '@ashb This _should_ fix the problem you mentioned in https://github.com/apache/airflow/pull/43227#issuecomment-2441654936 as https://github.com/astral-sh/uv/issues/4668 was fixed', 'created_at': datetime.datetime(2024, 10, 28, 22, 37, 42, tzinfo=datetime.timezone.utc)}]","kaxil (Issue Creator) on (2024-10-28 22:37:42 UTC): @ashb This _should_ fix the problem you mentioned in https://github.com/apache/airflow/pull/43227#issuecomment-2441654936 as https://github.com/astral-sh/uv/issues/4668 was fixed

"
2619660094,pull_request,closed,,Remove return in final clause of DynamoDB Hooks,"This PR will remove returns in the final clause of DynamoDB hooks.

Issues: #43274 
Assigned by: @potiuk ",Rustix69,2024-10-28 22:01:22+00:00,[],2024-10-29 03:53:02+00:00,2024-10-29 03:51:31+00:00,https://github.com/apache/airflow/pull/43450,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]",[],
2619020997,pull_request,open,,Add GCP Financial Services API,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
# Google Cloud Financial Services API Operators

This PR adds operators to interact with the [GCP Financial Services Anti-Money Laundering AI API](https://cloud.google.com/financial-services/anti-money-laundering/docs).

## New Features

### Hooks

#### Financial Services Hook

`providers/src/airflow/providers/google/cloud/hooks/financial_services.py` adds a hook for calling the Financial Services API. The methods implemented in this PR are [create](https://cloud.google.com/financial-services/anti-money-laundering/docs/reference/rest/v1/projects.locations.instances/create), [get](https://cloud.google.com/financial-services/anti-money-laundering/docs/reference/rest/v1/projects.locations.instances/get), and [delete ](https://cloud.google.com/financial-services/anti-money-laundering/docs/reference/rest/v1/projects.locations.instances/delete) on the [instances ](https://cloud.google.com/financial-services/anti-money-laundering/docs/reference/rest/v1/projects.locations.instances) endpoint.

Note: To initialize the hook, the API discovery document must be provided as an argument in json format. This is because the Financial Services API is not currently publically General Available (customers must be allow-listed by Google), and requests to retrieve the discovery document require a developer key associated with that project. This discovery document does not contain any information beyond that already available from the public documentation and we have permission from a Google representative to check it in.

### Operators

#### Financial Services Create Instance Operator

`providers/src/airflow/providers/google/cloud/operators/financial_services.py::FinancialServicesCreateInstanceOperator` can be used for airflow tasks that create a new Financial Services instance. This call creates a long-running operation and returns the name of the operation for monitoring.

#### Financial Services Get Instance Operator

`providers/src/airflow/providers/google/cloud/operators/financial_services.py::FinancialServicesGetInstanceOperator` can be used for airflow tasks that fetch an existing Financial Services instance. This call returns the instance resource data.

#### Financial Services Delete Instance Operator

`providers/src/airflow/providers/google/cloud/operators/financial_services.py::FinancialServicesDeleteInstanceOperator` can be used for airflow tasks that delete a Financial Services instance. This call creates a long-running operation and returns the name of the operation for monitoring.


### Sensors

#### Financial Services Operation Sensor

`providers/src/airflow/providers/google/cloud/sensors/financial_services.py::FinancialServicesOperationSensor` can be used to monitor the status of Financial Services operations. The `poke` method access the `done` field of the operation and completes when `done=true`. 


## Tests

### Unit Tests
Unit tests added for the new hook, operator, and sensor features. 

### System Tests
An example DAG is added to the system tests directory. This DAG creates an instance, fetches the instance, and finally deletes it, with operation sensors for the create and delete operations. 

Running the system test requires access to the Financial Services API. Some environment variables should also be set:
- SYSTEM_TESTS_GCP_PROJECT
- SYSTEM_TESTS_GCP_LOCATION
- SYSTEM_TESTS_GCP_KMS_KEY

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",claw89,2024-10-28 17:12:59+00:00,[],2025-02-08 00:14:57+00:00,,https://github.com/apache/airflow/pull/43446,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('kind:documentation', '')]","[{'comment_id': 2442170045, 'issue_id': 2619020997, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 28, 17, 13, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2443836198, 'issue_id': 2619020997, 'author': 'VladaZakharova', 'body': 'Hi there! Thanks for your PR, sounds like a good feature to add :)\r\n@potiuk Can we please not merge this one until we run system tests for this? Thanks!', 'created_at': datetime.datetime(2024, 10, 29, 10, 31, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2444982577, 'issue_id': 2619020997, 'author': 'potiuk', 'body': '> Hi there! Thanks for your PR, sounds like a good feature to add :) @potiuk Can we please not merge this one until we run system tests for this? Thanks!\r\n\r\nsure!', 'created_at': datetime.datetime(2024, 10, 29, 17, 59, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450079003, 'issue_id': 2619020997, 'author': 'michalmodras', 'body': ""Given the operators are for allowlist-only service, I don't think they should be placed in the main Google provider, but instead in a separate one."", 'created_at': datetime.datetime(2024, 10, 31, 14, 49, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2452457156, 'issue_id': 2619020997, 'author': 'claw89', 'body': ""> Given the operators are for allowlist-only service, I don't think they should be placed in the main Google provider, but instead in a separate one.\r\n\r\nThanks for the suggestion. Would you recommend adding to somewhere existing in the provider packages or introducing a new provider?"", 'created_at': datetime.datetime(2024, 11, 1, 19, 21, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454326303, 'issue_id': 2619020997, 'author': 'VladaZakharova', 'body': ""> > Given the operators are for allowlist-only service, I don't think they should be placed in the main Google provider, but instead in a separate one.\r\n> \r\n> Thanks for the suggestion. Would you recommend adding to somewhere existing in the provider packages or introducing a new provider?\r\n\r\ncan you give us the reason why we want to add this new service to Google provider? Right now it looks like it has very narrow use case (it requires specific configuration to be able to run something using its API), so I would suggest not add it to Google provider without specific reason. \r\nRegarding adding this as a separate provider, I think it's better to ask @potiuk how to correctly do this :)"", 'created_at': datetime.datetime(2024, 11, 4, 10, 21, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454427711, 'issue_id': 2619020997, 'author': 'michalmodras', 'body': ""> > Given the operators are for allowlist-only service, I don't think they should be placed in the main Google provider, but instead in a separate one.\r\n> \r\n> Thanks for the suggestion. Would you recommend adding to somewhere existing in the provider packages or introducing a new provider?\r\n\r\nI think it should be a new, separate one. Ideally, providers should come with dashboards with system tests, similar to the ones we already have:\r\n\r\n- Astronomer (found this LLM-specific one, not sure if there is another one): https://astronomer.github.io/llm-dags-dashboard/\r\n- AWS:  https://aws-mwaa.github.io/open-source/system-tests/dashboard.html  and  https://aws-mwaa.github.io/open-source/system-tests/dashboard.json\r\n- Google:  https://storage.googleapis.com/providers-dashboard-html/dashboard.html"", 'created_at': datetime.datetime(2024, 11, 4, 11, 8, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454824832, 'issue_id': 2619020997, 'author': 'claw89', 'body': ""> > > Given the operators are for allowlist-only service, I don't think they should be placed in the main Google provider, but instead in a separate one.\r\n> > \r\n> > \r\n> > Thanks for the suggestion. Would you recommend adding to somewhere existing in the provider packages or introducing a new provider?\r\n> \r\n> I think it should be a new, separate one. Ideally, providers should come with dashboards with system tests, similar to the ones we already have:\r\n> \r\n> * Astronomer (found this LLM-specific one, not sure if there is another one): https://astronomer.github.io/llm-dags-dashboard/\r\n> * AWS:  https://aws-mwaa.github.io/open-source/system-tests/dashboard.html  and  https://aws-mwaa.github.io/open-source/system-tests/dashboard.json\r\n> * Google:  https://storage.googleapis.com/providers-dashboard-html/dashboard.html\r\n\r\nCan I clarify that your concern about the system test is access to the Financial Services API? I assume that the API is not currently available in the system test environment. Would it be possible to enable the API in the system test environment, and would that address your concerns?"", 'created_at': datetime.datetime(2024, 11, 4, 14, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456591689, 'issue_id': 2619020997, 'author': 'ssabdb', 'body': ""For disclosure, I work with @claw89.  Few more responses to question from @VladaZakharova. I should also add we are not Google, we're a small consulting company working with this product.\r\n\r\n> I think it should be a new, separate one. Ideally, providers should come with dashboards with system tests, similar to the ones we already have\r\n\r\nThis is a [publicly documented](https://cloud.google.com/financial-services/anti-money-laundering/docs/concepts/overview) Google GA product, it's hard to see it fitting anywhere else in a different provider for in airflow-repository community supported providers. \r\n\r\nThe procedure for adding a new provider involves a vote on the public list and I think it's unlikely we're going to get that passed (see [here](https://github.com/apache/airflow/blob/main/PROVIDERS.rst)), but I will concede a third party package is an option.\r\n\r\n> can you give us the reason why we want to add this new service to Google provider? Right now it looks like it has very narrow use case (it requires specific configuration to be able to run something using its API), so I would suggest not add it to Google provider without specific reason.\r\n\r\nWe want to add it because there are several very large Google cloud customers (banks) who already use this API in production. They are either already using cloud composer and/or airflow to orchestrate related data workflows and this API is very data/data engineering workflow dependent. Bringing this in under the primary airflow repository would make it easier for them to adopt the AML AI product, since Airflow is often an approved product in these institutions or an obvious choice. Bringing in additional software often requires extra paperwork! We've observed more than one have resorted to building their own providers/hooks.\r\n\r\nI will concede that the usecase is narrow, but it's deep enough for Google to have released as a cloud product. We're also planning on adding addition operators."", 'created_at': datetime.datetime(2024, 11, 5, 8, 57, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456603004, 'issue_id': 2619020997, 'author': 'ssabdb', 'body': 'Quick addition; if the concern is CI / Systems test, as @claw89 says, we can probably work to get the system test project allow-listed for system test purposes if that would help with getting consensus toward mergability.\r\n\r\nIt would also allow the use of the discovery document in those system tests, too.', 'created_at': datetime.datetime(2024, 11, 5, 9, 2, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456638829, 'issue_id': 2619020997, 'author': 'michalmodras', 'body': ""There is work planned on splitting the Google provider into a few smaller ones, to e.g. reduce the dependency tree size for users who want to use certain cloud services, ads, workspace, etc. The Cloud AI products, like Financial Services API, are distinct enough to be placed in a separate provider in a clean way. \r\n\r\nThe concern about CI is also there - there should be system tests implemented for the new operators and exposed in a dashboard.\r\n\r\nIf you propose the new provider & provide a CI dashboard with system tests for it, I'd be voting +1 in a vote on adding it. @potiuk please chime in if you see any major obstacles for it."", 'created_at': datetime.datetime(2024, 11, 5, 9, 17, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457628461, 'issue_id': 2619020997, 'author': 'ssabdb', 'body': 'I think the issues are:\r\n1) Creating a new, google provider will need some considerable design work - which providers should we split out? How? We can start with a cloudai provider, but I don\'t know enough about the best way to split this out.\r\n2) This PR does not introduce any additional dependencies, which seems to be the motivation behind the Google provider in https://github.com/apache/airflow/issues/15933\r\n3) Creating a new environment will also involve setting up and appropriately resourcing the build test dashboard. As a small organization, we\'re not in a position to be running and owning the CI and resultant dashboard for dozens of Google services.\r\n4) As @potiuk has pointed out on that thread, a full blocking process \r\n\r\n> It will not be ""split and done"". My point here is that this is a long-haul and requires to work out the process of maintenance, managing to respond to user\'s questions, document it properly, make frequent decisions on whether to accept and release changes that are ""possibly"" incompatible and how to version those separate providers and core.\r\n\r\nIf the intention/new policy is that any additional services added to the google provider should be channelled down as an incremental process as a path to close https://github.com/apache/airflow/issues/15933, fine - but it\'s going to be quite confusing to users in the meantime and requires a proper roadmap rather than a piecemeal approach. \r\n\r\nOtherwise, I\'m concerned that https://github.com/apache/airflow/issues/15933 has been open for 3 years now and blocking incremental additions behind what is outwardly a considerable change doesn\'t seem to have happened elsewhere - unless work is already underway?', 'created_at': datetime.datetime(2024, 11, 5, 16, 24, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2460692227, 'issue_id': 2619020997, 'author': 'michalmodras', 'body': ""1) I agree that these operators should have place in the main Airflow repository in a provider.\r\n\r\n2) These operators are different than most operators in the Google provider, which integrate with regular Cloud services - this is visible even in the implementation, e.g. the authentication pattern is different.\r\n\r\n3) On splitting the provider - I don't think the main google provider will turn into a number of small ones. Instead, a few operators set for related services that are similar will be placed in dedicated providers - e.g. ads, workspace. The main google provider with hundreds of operators will remain as Google Cloud provider. https://github.com/apache/airflow/issues/15933 is a bit obsolete discussion from few years ago.\r\n\r\nI think the operators from this PR should be placed in a new, google-cloud-ai provider. I am not asking to contribute to the split - just create a separate, small provider for the operators you're contributing.\r\n\r\n>If the intention/new policy is that any additional services added to the google provider should be channelled down as an incremental process\r\n\r\nNo - only operators for services that are very different (e.g. authentication point above, allowlist required), not useful to majority of users (because of required allowlisting / dedicated account vs. other cloud services available straightaway for cloud users), or introducing heavy dependency footprint (this is not the case with this PR), or other reason along these lines.\r\n\r\n4) New provider should have a supporting CI dashboard. We can help with hosting it on the Google side."", 'created_at': datetime.datetime(2024, 11, 6, 20, 15, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2465896772, 'issue_id': 2619020997, 'author': 'potiuk', 'body': 'I am here with @michalmodras -> the example thing to separate from Google provider is `ads` - this had been a pain to keep in the same provider as other google properties and we want to split for quite some time. The problem with keeping ""unrelated"" APIs together is not only dependencies but also independent maintenance - upgrades when thing change. For example what happens if financial services API changes and drops support for older version, but other google APIs (say GKE) are fine running using older code? What happens if at the same time we have breaking changes in new providers for GKE - for example - and the users would not like to upgrade to new ""google provider"", but also they are using ""google-finanacial"" API and the old API in the ""google provider"" they want to keep, is not working any more?\r\n\r\nThis is precisely what happened with ads provider.\r\n\r\nAnd If Google team wants to introduce and maintain the dashboard - that\'s ok. The condition for approving new provider is that there is **someone** who we can trust will keep an eye on it. It does not have to be original author - and here I see we have Google team confirming they will.', 'created_at': datetime.datetime(2024, 11, 8, 23, 28, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2465898410, 'issue_id': 2619020997, 'author': 'potiuk', 'body': 'Though.... After looking at the code - there is a bit of difficulty there @michalmodras -> this one is using GoogleBaseHook and I believe the dependency on this common GoogleBaseHook is main reason why we do not want to splitt the provider into  ""many"" sub-providers. I am not sure @claw89 if GoogleBAseHook as base is necessary there or not though?', 'created_at': datetime.datetime(2024, 11, 8, 23, 31, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2468376355, 'issue_id': 2619020997, 'author': 'claw89', 'body': ""@potiuk Our implementation of the FinancialServicesHook needs to inherit from the GoogleBaseHook because we use the standard authentication methods in GoogleBaseHook to connect to the Financial Services API. The different pattern that @michalmodras mentioned is around accessing the discovery document (either with a developer key or as a stand alone discovery document json) - once this document is available, the connections to the Financial Services API follow the same authentication pattern as other Google Cloud APIs. From what I can see in the Ads hook code, it seems that authentication is quite different for the Ads provider. \r\n\r\nCan anyone clarify how Ads is distinguished as a separate provider? Other 'sub-providers' (e.g., marketing_platform) in the google directory do use the GoogleBaseHook. Also, the relevant system tests for marketing platform are included in the main Google CI dashboard. I couldn't see any distinctions between Cloud and Ads that don't also apply to Cloud and Marketing Platform in the code."", 'created_at': datetime.datetime(2024, 11, 11, 14, 57, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2478385846, 'issue_id': 2619020997, 'author': 'claw89', 'body': ""## Options for Financial Services API in Airflow\r\n\r\nTo summarize the discussion, we have outlined the possible directions we could take with this PR. We'd welcome your comments on any alternative solutions or additional pros/cons so we can reach a consensus on the best way forward.\r\n\r\n### 1. Existing Google provider\r\n```\r\n📦providers\r\n ┣ 📂google\r\n ┃ ┣ 📂cloud\r\n ┃ ┃ ┣ 📂hooks\r\n ┃ ┃ ┃ ┗ 📜financial_services.py\r\n ┃ ┃ ┣ 📂operators\r\n ┃ ┃ ┃ ┗ 📜financial_services.py\r\n ┃ ┣ 📂common\r\n ┃ ┃ ┣ 📂hooks\r\n ┃ ┃ ┃ ┗ 📜base_google.py\r\n```\r\nPros\r\n- No need to set up/support a new provider\r\n- Financial Services hook can use google authentication in base_google.py\r\n- Adds no additional dependencies to the google provider package\r\n\r\nCons\r\n- Additional methods in hooks/financial_services.py to access discovery doc\r\n- Adds another service to the already large google provider\r\n\r\n### 2. Separate provider with duplicated base code\r\n```\r\n📦providers\r\n ┣ 📂google-cloud-ai\r\n ┃ ┣ 📂hooks\r\n ┃ ┃ ┣ 📜base_google.py *\r\n ┃ ┃ ┗ 📜financial_services.py\r\n ┃ ┣ 📂operators\r\n ┃ ┃ ┗ 📜financial_services.py\r\n ┣ 📂google\r\n ┃ ┣ 📂cloud\r\n ┃ ┣ 📂common\r\n ┃ ┃ ┣ 📂hooks\r\n ┃ ┃ ┃ ┗ 📜base_google.py *\r\n```\r\nPros\r\n- Initiates the processes of separating out Cloud AI products from other GCP products\r\n- Separates Financial Services into new CI dashboard\r\n\r\nCons\r\n- Authentication code in `base_google.py` needs to be duplicated inside `google-cloud-ai` provider. Possible divergence between `google-cloud-ai/hooks/base_google.py` and `google/hooks/base_google.py` as changes are introduced in one of the providers.\r\n\r\n### 3. Shared code in separate core provider\r\n```\r\n📦providers\r\n ┣ 📂google-core\r\n ┃ ┣ 📂hooks\r\n ┃ ┃ ┗ 📜base_google.py\r\n ┣ 📂google-cloud-ai\r\n ┃ ┣ 📂hooks\r\n ┃ ┃ ┗ 📜financial_services.py\r\n ┃ ┣ 📂operators\r\n ┃ ┃ ┗ 📜financial_services.py\r\n ┣ 📂google\r\n```\r\nPros\r\n- No duplication of authentication code; all hooks requiring google authentication import from `google-core`\r\n- Lightweight `google-core` only depends on core google packages (e.g., `google.auth` and `google.api_core`)\r\n\r\nCons\r\n- Unlcear if inter-provider dependency is possible\r\n- Splitting `hooks/base_google.py` out of google provider into new `google-core` provider; `google-core` becomes a dependency for `google`. Similarly, `google-core` is a dependency for `google-cloud-ai`. May require significant refactor of `google` provider\r\n\r\n### 4. Delay merge of Financial Services\r\n\r\nUntil either 1) Financial Services discovery doc is released without need for developer key or 2) Google provider is split into smaller providers."", 'created_at': datetime.datetime(2024, 11, 15, 9, 49, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2497194307, 'issue_id': 2619020997, 'author': 'ssabdb', 'body': '@michalmodras - any thoughts on the above? It would be useful to get your thoughts on the best way to proceed.', 'created_at': datetime.datetime(2024, 11, 25, 8, 16, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2504531380, 'issue_id': 2619020997, 'author': 'michalmodras', 'body': ""Hi @ssabdb , my preference would be 2. - separate provider with possibly some duplication, assuming we keep it as minimal as it needs to be. In the process of separating providers that we want to undertake, we will try to find a clear way to share code between providers (if necessary), and refactor. We will support the vote on the new provider in the community, and can host the system tests dashboard.\r\n\r\nAs these operators are only relevant for allowlisted users, I'd rather avoid adding them in the google provider. In a similar spirit, we'll be separating ads (which is more separate code-wise, and also comes with bigger deperendency tree), as they are not related to many cloud operators and usages."", 'created_at': datetime.datetime(2024, 11, 27, 18, 15, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2505050360, 'issue_id': 2619020997, 'author': 'potiuk', 'body': ""> Hi @ssabdb , my preference would be 2. - separate provider with possibly some duplication, assuming we keep it as minimal as it needs to be. In the process of separating providers that we want to undertake, we will try to find a clear way to share code between providers (if necessary), and refactor. We will support the vote on the new provider in the community, and can host the system tests dashboard.\r\n> \r\n> As these operators are only relevant for allowlisted users, I'd rather avoid adding them in the google provider. In a similar spirit, we'll be separating ads (which is more separate code-wise, and also comes with bigger deperendency tree), as they are not related to many cloud operators and usages.\r\n\r\nagree"", 'created_at': datetime.datetime(2024, 11, 28, 0, 36, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2585982243, 'issue_id': 2619020997, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2025, 1, 13, 0, 16, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2628930975, 'issue_id': 2619020997, 'author': 'potiuk', 'body': ""The discussion seem sttalled here - but if you want to continue, you will have to rebase it to the new provider's structure move (moved Python files) as we are about to move google provider to the new structure."", 'created_at': datetime.datetime(2025, 2, 1, 12, 20, 5, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-28 17:13:04 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

VladaZakharova on (2024-10-29 10:31:29 UTC): Hi there! Thanks for your PR, sounds like a good feature to add :)
@potiuk Can we please not merge this one until we run system tests for this? Thanks!

potiuk on (2024-10-29 17:59:22 UTC): sure!

michalmodras on (2024-10-31 14:49:26 UTC): Given the operators are for allowlist-only service, I don't think they should be placed in the main Google provider, but instead in a separate one.

claw89 (Issue Creator) on (2024-11-01 19:21:23 UTC): Thanks for the suggestion. Would you recommend adding to somewhere existing in the provider packages or introducing a new provider?

VladaZakharova on (2024-11-04 10:21:41 UTC): can you give us the reason why we want to add this new service to Google provider? Right now it looks like it has very narrow use case (it requires specific configuration to be able to run something using its API), so I would suggest not add it to Google provider without specific reason. 
Regarding adding this as a separate provider, I think it's better to ask @potiuk how to correctly do this :)

michalmodras on (2024-11-04 11:08:44 UTC): I think it should be a new, separate one. Ideally, providers should come with dashboards with system tests, similar to the ones we already have:

- Astronomer (found this LLM-specific one, not sure if there is another one): https://astronomer.github.io/llm-dags-dashboard/
- AWS:  https://aws-mwaa.github.io/open-source/system-tests/dashboard.html  and  https://aws-mwaa.github.io/open-source/system-tests/dashboard.json
- Google:  https://storage.googleapis.com/providers-dashboard-html/dashboard.html

claw89 (Issue Creator) on (2024-11-04 14:13:00 UTC): Can I clarify that your concern about the system test is access to the Financial Services API? I assume that the API is not currently available in the system test environment. Would it be possible to enable the API in the system test environment, and would that address your concerns?

ssabdb on (2024-11-05 08:57:17 UTC): For disclosure, I work with @claw89.  Few more responses to question from @VladaZakharova. I should also add we are not Google, we're a small consulting company working with this product.


This is a [publicly documented](https://cloud.google.com/financial-services/anti-money-laundering/docs/concepts/overview) Google GA product, it's hard to see it fitting anywhere else in a different provider for in airflow-repository community supported providers. 

The procedure for adding a new provider involves a vote on the public list and I think it's unlikely we're going to get that passed (see [here](https://github.com/apache/airflow/blob/main/PROVIDERS.rst)), but I will concede a third party package is an option.


We want to add it because there are several very large Google cloud customers (banks) who already use this API in production. They are either already using cloud composer and/or airflow to orchestrate related data workflows and this API is very data/data engineering workflow dependent. Bringing this in under the primary airflow repository would make it easier for them to adopt the AML AI product, since Airflow is often an approved product in these institutions or an obvious choice. Bringing in additional software often requires extra paperwork! We've observed more than one have resorted to building their own providers/hooks.

I will concede that the usecase is narrow, but it's deep enough for Google to have released as a cloud product. We're also planning on adding addition operators.

ssabdb on (2024-11-05 09:02:16 UTC): Quick addition; if the concern is CI / Systems test, as @claw89 says, we can probably work to get the system test project allow-listed for system test purposes if that would help with getting consensus toward mergability.

It would also allow the use of the discovery document in those system tests, too.

michalmodras on (2024-11-05 09:17:33 UTC): There is work planned on splitting the Google provider into a few smaller ones, to e.g. reduce the dependency tree size for users who want to use certain cloud services, ads, workspace, etc. The Cloud AI products, like Financial Services API, are distinct enough to be placed in a separate provider in a clean way. 

The concern about CI is also there - there should be system tests implemented for the new operators and exposed in a dashboard.

If you propose the new provider & provide a CI dashboard with system tests for it, I'd be voting +1 in a vote on adding it. @potiuk please chime in if you see any major obstacles for it.

ssabdb on (2024-11-05 16:24:14 UTC): I think the issues are:
1) Creating a new, google provider will need some considerable design work - which providers should we split out? How? We can start with a cloudai provider, but I don't know enough about the best way to split this out.
2) This PR does not introduce any additional dependencies, which seems to be the motivation behind the Google provider in https://github.com/apache/airflow/issues/15933
3) Creating a new environment will also involve setting up and appropriately resourcing the build test dashboard. As a small organization, we're not in a position to be running and owning the CI and resultant dashboard for dozens of Google services.
4) As @potiuk has pointed out on that thread, a full blocking process 


If the intention/new policy is that any additional services added to the google provider should be channelled down as an incremental process as a path to close https://github.com/apache/airflow/issues/15933, fine - but it's going to be quite confusing to users in the meantime and requires a proper roadmap rather than a piecemeal approach. 

Otherwise, I'm concerned that https://github.com/apache/airflow/issues/15933 has been open for 3 years now and blocking incremental additions behind what is outwardly a considerable change doesn't seem to have happened elsewhere - unless work is already underway?

michalmodras on (2024-11-06 20:15:33 UTC): 1) I agree that these operators should have place in the main Airflow repository in a provider.

2) These operators are different than most operators in the Google provider, which integrate with regular Cloud services - this is visible even in the implementation, e.g. the authentication pattern is different.

3) On splitting the provider - I don't think the main google provider will turn into a number of small ones. Instead, a few operators set for related services that are similar will be placed in dedicated providers - e.g. ads, workspace. The main google provider with hundreds of operators will remain as Google Cloud provider. https://github.com/apache/airflow/issues/15933 is a bit obsolete discussion from few years ago.

I think the operators from this PR should be placed in a new, google-cloud-ai provider. I am not asking to contribute to the split - just create a separate, small provider for the operators you're contributing.


No - only operators for services that are very different (e.g. authentication point above, allowlist required), not useful to majority of users (because of required allowlisting / dedicated account vs. other cloud services available straightaway for cloud users), or introducing heavy dependency footprint (this is not the case with this PR), or other reason along these lines.

4) New provider should have a supporting CI dashboard. We can help with hosting it on the Google side.

potiuk on (2024-11-08 23:28:49 UTC): I am here with @michalmodras -> the example thing to separate from Google provider is `ads` - this had been a pain to keep in the same provider as other google properties and we want to split for quite some time. The problem with keeping ""unrelated"" APIs together is not only dependencies but also independent maintenance - upgrades when thing change. For example what happens if financial services API changes and drops support for older version, but other google APIs (say GKE) are fine running using older code? What happens if at the same time we have breaking changes in new providers for GKE - for example - and the users would not like to upgrade to new ""google provider"", but also they are using ""google-finanacial"" API and the old API in the ""google provider"" they want to keep, is not working any more?

This is precisely what happened with ads provider.

And If Google team wants to introduce and maintain the dashboard - that's ok. The condition for approving new provider is that there is **someone** who we can trust will keep an eye on it. It does not have to be original author - and here I see we have Google team confirming they will.

potiuk on (2024-11-08 23:31:12 UTC): Though.... After looking at the code - there is a bit of difficulty there @michalmodras -> this one is using GoogleBaseHook and I believe the dependency on this common GoogleBaseHook is main reason why we do not want to splitt the provider into  ""many"" sub-providers. I am not sure @claw89 if GoogleBAseHook as base is necessary there or not though?

claw89 (Issue Creator) on (2024-11-11 14:57:33 UTC): @potiuk Our implementation of the FinancialServicesHook needs to inherit from the GoogleBaseHook because we use the standard authentication methods in GoogleBaseHook to connect to the Financial Services API. The different pattern that @michalmodras mentioned is around accessing the discovery document (either with a developer key or as a stand alone discovery document json) - once this document is available, the connections to the Financial Services API follow the same authentication pattern as other Google Cloud APIs. From what I can see in the Ads hook code, it seems that authentication is quite different for the Ads provider. 

Can anyone clarify how Ads is distinguished as a separate provider? Other 'sub-providers' (e.g., marketing_platform) in the google directory do use the GoogleBaseHook. Also, the relevant system tests for marketing platform are included in the main Google CI dashboard. I couldn't see any distinctions between Cloud and Ads that don't also apply to Cloud and Marketing Platform in the code.

claw89 (Issue Creator) on (2024-11-15 09:49:27 UTC): ## Options for Financial Services API in Airflow

To summarize the discussion, we have outlined the possible directions we could take with this PR. We'd welcome your comments on any alternative solutions or additional pros/cons so we can reach a consensus on the best way forward.

### 1. Existing Google provider
```
📦providers
 ┣ 📂google
 ┃ ┣ 📂cloud
 ┃ ┃ ┣ 📂hooks
 ┃ ┃ ┃ ┗ 📜financial_services.py
 ┃ ┃ ┣ 📂operators
 ┃ ┃ ┃ ┗ 📜financial_services.py
 ┃ ┣ 📂common
 ┃ ┃ ┣ 📂hooks
 ┃ ┃ ┃ ┗ 📜base_google.py
```
Pros
- No need to set up/support a new provider
- Financial Services hook can use google authentication in base_google.py
- Adds no additional dependencies to the google provider package

Cons
- Additional methods in hooks/financial_services.py to access discovery doc
- Adds another service to the already large google provider

### 2. Separate provider with duplicated base code
```
📦providers
 ┣ 📂google-cloud-ai
 ┃ ┣ 📂hooks
 ┃ ┃ ┣ 📜base_google.py *
 ┃ ┃ ┗ 📜financial_services.py
 ┃ ┣ 📂operators
 ┃ ┃ ┗ 📜financial_services.py
 ┣ 📂google
 ┃ ┣ 📂cloud
 ┃ ┣ 📂common
 ┃ ┃ ┣ 📂hooks
 ┃ ┃ ┃ ┗ 📜base_google.py *
```
Pros
- Initiates the processes of separating out Cloud AI products from other GCP products
- Separates Financial Services into new CI dashboard

Cons
- Authentication code in `base_google.py` needs to be duplicated inside `google-cloud-ai` provider. Possible divergence between `google-cloud-ai/hooks/base_google.py` and `google/hooks/base_google.py` as changes are introduced in one of the providers.

### 3. Shared code in separate core provider
```
📦providers
 ┣ 📂google-core
 ┃ ┣ 📂hooks
 ┃ ┃ ┗ 📜base_google.py
 ┣ 📂google-cloud-ai
 ┃ ┣ 📂hooks
 ┃ ┃ ┗ 📜financial_services.py
 ┃ ┣ 📂operators
 ┃ ┃ ┗ 📜financial_services.py
 ┣ 📂google
```
Pros
- No duplication of authentication code; all hooks requiring google authentication import from `google-core`
- Lightweight `google-core` only depends on core google packages (e.g., `google.auth` and `google.api_core`)

Cons
- Unlcear if inter-provider dependency is possible
- Splitting `hooks/base_google.py` out of google provider into new `google-core` provider; `google-core` becomes a dependency for `google`. Similarly, `google-core` is a dependency for `google-cloud-ai`. May require significant refactor of `google` provider

### 4. Delay merge of Financial Services

Until either 1) Financial Services discovery doc is released without need for developer key or 2) Google provider is split into smaller providers.

ssabdb on (2024-11-25 08:16:19 UTC): @michalmodras - any thoughts on the above? It would be useful to get your thoughts on the best way to proceed.

michalmodras on (2024-11-27 18:15:27 UTC): Hi @ssabdb , my preference would be 2. - separate provider with possibly some duplication, assuming we keep it as minimal as it needs to be. In the process of separating providers that we want to undertake, we will try to find a clear way to share code between providers (if necessary), and refactor. We will support the vote on the new provider in the community, and can host the system tests dashboard.

As these operators are only relevant for allowlisted users, I'd rather avoid adding them in the google provider. In a similar spirit, we'll be separating ads (which is more separate code-wise, and also comes with bigger deperendency tree), as they are not related to many cloud operators and usages.

potiuk on (2024-11-28 00:36:37 UTC): agree

github-actions[bot] on (2025-01-13 00:16:42 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

potiuk on (2025-02-01 12:20:05 UTC): The discussion seem sttalled here - but if you want to continue, you will have to rebase it to the new provider's structure move (moved Python files) as we are about to move google provider to the new structure.

"
2618949549,pull_request,closed,,Shorten max line length to 90 chars,"Shorten max line length to 90 chars for better readability.

I know this one is a long shot, but I actually think it's better readability at 90.  The main difference here is that ruff will be more likely to wrap 

Example OLD:
```python
@dags_router.get(""/{dag_id}/details"", responses=create_openapi_http_exception_doc([400, 401, 403, 404, 422]))
async def get_dag_details(
    dag_id: str, session: Annotated[Session, Depends(get_session)], request: Request
) -> DAGDetailsResponse:
```

Example NEW:
```python
@dags_router.get(
    ""/{dag_id}/details"",
    responses=create_openapi_http_exception_doc([400, 401, 403, 404, 422]),
)
async def get_dag_details(
    dag_id: str, session: Annotated[Session, Depends(get_session)], request: Request
) -> DAGDetailsResponse:
```

I think it becomes even better when we specify the args here:
```python
@dags_router.get(
    path=""/{dag_id}/details"",
    responses=create_openapi_http_exception_doc([400, 401, 403, 404, 422]),
)
async def get_dag_details(
    dag_id: str, session: Annotated[Session, Depends(get_session)], request: Request
) -> DAGDetailsResponse:
```
",dstandish,2024-10-28 16:43:16+00:00,[],2024-10-30 06:43:26+00:00,2024-10-28 20:50:04+00:00,https://github.com/apache/airflow/pull/43445,"[('area:API', ""Airflow's REST/HTTP API""), ('legacy ui', 'Whether legacy UI change should be allowed in PR'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2442268709, 'issue_id': 2618949549, 'author': 'kaxil', 'body': ""Nooo, please don't do this --- not right now 😆"", 'created_at': datetime.datetime(2024, 10, 28, 17, 59, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442354300, 'issue_id': 2618949549, 'author': 'potiuk', 'body': ""> Nooo, please don't do this --- not right now \r\n\r\n> Nooo, please don't do this --- not right now 😆\r\n\r\n:scream: \r\n\r\nBTW. Very interesting - looks like we have source code line number expected in stack-trace in one of the tests:\r\n\r\n```\r\nFAILED tests/models/test_dagbag.py::TestDagBag::test_dabgag_captured_warnings - AssertionError: assert equals failed\r\n  '/opt/airflow/tests/dags/test_d  '/opt/airflow/tests/dags/test_d \r\n  ag_warnings.py:55: DeprecationW  ag_warnings.py:47: DeprecationW \r\n  arning: Deprecated Parameter'    arning: Deprecated Parameter'\r\n====== 1 failed, 1934 passed, 913 skipped, 1 warning in 421.03s (0:07:01) ======\r\n````"", 'created_at': datetime.datetime(2024, 10, 28, 18, 41, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442588659, 'issue_id': 2618949549, 'author': 'dstandish', 'body': ""> Nooo, please don't do this --- not right now 😆\r\n\r\nso you are saying.... do it after AIP-72????"", 'created_at': datetime.datetime(2024, 10, 28, 20, 42, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442601512, 'issue_id': 2618949549, 'author': 'dstandish', 'body': 'Ok closing for now\r\n![image](https://github.com/user-attachments/assets/806a786a-782a-4f8e-b6d5-005344cdb710)', 'created_at': datetime.datetime(2024, 10, 28, 20, 50, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445427189, 'issue_id': 2618949549, 'author': 'mobuchowski', 'body': 'Please, not something less than 100...', 'created_at': datetime.datetime(2024, 10, 29, 22, 14, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445518605, 'issue_id': 2618949549, 'author': 'potiuk', 'body': '99?', 'created_at': datetime.datetime(2024, 10, 29, 23, 40, 16, tzinfo=datetime.timezone.utc)}]","kaxil on (2024-10-28 17:59:43 UTC): Nooo, please don't do this --- not right now 😆

potiuk on (2024-10-28 18:41:01 UTC): :scream: 

BTW. Very interesting - looks like we have source code line number expected in stack-trace in one of the tests:

```
FAILED tests/models/test_dagbag.py::TestDagBag::test_dabgag_captured_warnings - AssertionError: assert equals failed
  '/opt/airflow/tests/dags/test_d  '/opt/airflow/tests/dags/test_d 
  ag_warnings.py:55: DeprecationW  ag_warnings.py:47: DeprecationW 
  arning: Deprecated Parameter'    arning: Deprecated Parameter'
====== 1 failed, 1934 passed, 913 skipped, 1 warning in 421.03s (0:07:01) ======
````

dstandish (Issue Creator) on (2024-10-28 20:42:43 UTC): so you are saying.... do it after AIP-72????

dstandish (Issue Creator) on (2024-10-28 20:50:04 UTC): Ok closing for now
![image](https://github.com/user-attachments/assets/806a786a-782a-4f8e-b6d5-005344cdb710)

mobuchowski on (2024-10-29 22:14:49 UTC): Please, not something less than 100...

potiuk on (2024-10-29 23:40:16 UTC): 99?

"
2618866742,pull_request,closed,,Remove subdag from DAG Serialization schema,"Was missed in https://github.com/apache/airflow/pull/41390

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-28 16:07:04+00:00,[],2024-10-28 16:38:28+00:00,2024-10-28 16:38:25+00:00,https://github.com/apache/airflow/pull/43444,"[('area:serialization', '')]",[],
2618484123,pull_request,closed,,include limit and offset in request body schema for List task instances (batch) endpoint,Backport of #42870,rawwar,2024-10-28 13:48:25+00:00,[],2024-10-29 14:29:56+00:00,2024-10-29 14:29:56+00:00,https://github.com/apache/airflow/pull/43442,"[('area:webserver', 'Webserver related Issues'), ('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2441708888, 'issue_id': 2618484123, 'author': 'ephraimbuddy', 'body': 'This is not an exact backport. Please use cherrypicking to make it exact.', 'created_at': datetime.datetime(2024, 10, 28, 14, 12, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441774220, 'issue_id': 2618484123, 'author': 'rawwar', 'body': ""@ephraimbuddy , In 3.x code, we removed SLA related code. Like, the following code is not present in 3.x\r\n\r\n```\r\nbase_query = (\r\n        base_query.join(\r\n            SlaMiss,\r\n            and_(\r\n                SlaMiss.dag_id == TI.dag_id,\r\n                SlaMiss.task_id == TI.task_id,\r\n                SlaMiss.execution_date == DR.execution_date,\r\n            ),\r\n            isouter=True,\r\n        )\r\n        .add_columns(SlaMiss)\r\n```\r\n\r\nReference 3.x: https://github.com/apache/airflow/blob/ce0c1c0b56ccd5cf58b9ee858b60ce56a0b2ec31/airflow/api_connexion/endpoints/task_instance_endpoint.py#L418\r\nSo, it won't be an exact backport. I did a cherry-pick before the draft and it had conflicts\r\n\r\nHowever, there are no changes in tests. And, exact tests worked. So, I thought this should be good enough."", 'created_at': datetime.datetime(2024, 10, 28, 14, 37, 38, tzinfo=datetime.timezone.utc)}]","ephraimbuddy on (2024-10-28 14:12:55 UTC): This is not an exact backport. Please use cherrypicking to make it exact.

rawwar (Issue Creator) on (2024-10-28 14:37:38 UTC): @ephraimbuddy , In 3.x code, we removed SLA related code. Like, the following code is not present in 3.x

```
base_query = (
        base_query.join(
            SlaMiss,
            and_(
                SlaMiss.dag_id == TI.dag_id,
                SlaMiss.task_id == TI.task_id,
                SlaMiss.execution_date == DR.execution_date,
            ),
            isouter=True,
        )
        .add_columns(SlaMiss)
```

Reference 3.x: https://github.com/apache/airflow/blob/ce0c1c0b56ccd5cf58b9ee858b60ce56a0b2ec31/airflow/api_connexion/endpoints/task_instance_endpoint.py#L418
So, it won't be an exact backport. I did a cherry-pick before the draft and it had conflicts

However, there are no changes in tests. And, exact tests worked. So, I thought this should be good enough.

"
2618288173,pull_request,closed,,Limit mypy-boto3-appflow,Followup on https://github.com/apache/airflow/pull/42954#discussion_r1817993084 just to make sure we don't lose track of it.,eladkal,2024-10-28 12:28:47+00:00,[],2024-10-28 18:37:46+00:00,2024-10-28 16:24:41+00:00,https://github.com/apache/airflow/pull/43436,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]",[],
2618212165,pull_request,closed,,[Edge] Worker tiggeres graceful shutdown after different version detection.,"# Description

The EdgeWorker currently raises an exception if heatbeat is triggered and the version of the edge worker is different to the version of the main application. Idea is by detecting a different version that the worker executes a graceful shutdown of the worker.

# Details about changes

* EdgeWorker checks on heartbeat if version is different and triggers graceful shutdown of the worker.
* So worker task will end without crashing worker
* No new job will be reservert by the worker.",AutomationDev85,2024-10-28 11:57:40+00:00,[],2024-10-29 12:44:50+00:00,2024-10-29 12:44:49+00:00,https://github.com/apache/airflow/pull/43435,"[('area:providers', ''), ('type:improvement', 'Changelog: Improvements'), ('AIP-69', 'Edge Executor'), ('provider:edge', 'Edge Executor / Worker (AIP-69)')]","[{'comment_id': 2444111751, 'issue_id': 2618212165, 'author': 'jscheffl', 'body': 'Super-seeded by #43462', 'created_at': datetime.datetime(2024, 10, 29, 12, 44, 49, tzinfo=datetime.timezone.utc)}]","jscheffl on (2024-10-29 12:44:49 UTC): Super-seeded by #43462

"
2618029362,pull_request,closed,,serialize asset/dataset timetable conditions in OpenLineage info also for older supported Airflow 2 versions,"Currently, that information is included in OpenLineage events only for Airflow 2.10 and Airflow 3. 
We want to include it in OL events when running on Airflow 2.8 and 2.9 too.",mobuchowski,2024-10-28 10:41:30+00:00,[],2024-11-05 10:22:48+00:00,2024-11-05 10:22:48+00:00,https://github.com/apache/airflow/pull/43434,"[('area:providers', ''), ('provider:openlineage', 'AIP-53')]",[],
2617685491,pull_request,closed,,Ensure total_entries in /api/v1/dags (#43377),"* Ensure total_entries in /api/v1/dags

* Test total_entries for /api/v1/dags?fields=...

(cherry picked from commit 19ddb02812c49dcc50355fa981efa02ed907e735)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",pierrejeambrun,2024-10-28 08:32:13+00:00,[],2024-10-30 12:20:20+00:00,2024-10-30 12:20:17+00:00,https://github.com/apache/airflow/pull/43429,"[('area:API', ""Airflow's REST/HTTP API""), ('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2617654307,pull_request,closed,,Better diagnostics in tests in case text not found in response,"The assertions during tests checkign if content was in response, did not print the content of the response, which made it difficult to diagnose what was wrong with the response.

Adding response in case of failure should help to investigate issues in CI where those asserts fail.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-28 08:17:47+00:00,[],2024-10-28 08:59:06+00:00,2024-10-28 08:59:03+00:00,https://github.com/apache/airflow/pull/43428,[],"[{'comment_id': 2440923051, 'issue_id': 2617654307, 'author': 'potiuk', 'body': 'Just random failures when installing node/pnpm', 'created_at': datetime.datetime(2024, 10, 28, 8, 58, 59, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-28 08:58:59 UTC): Just random failures when installing node/pnpm

"
2617344666,pull_request,closed,,Remove returns in final clause of athena hooks,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
related: #43274

This PR will remove returns in the final clause of athena hooks.
There are other similar issues in other code (`s3_to_dynamodb.py` etc).
Not close the issue and I will create a new PR for the others later.

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

related: #43274

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",yangyulely,2024-10-28 05:31:40+00:00,[],2024-10-28 10:43:17+00:00,2024-10-28 10:43:17+00:00,https://github.com/apache/airflow/pull/43426,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]",[],
2617072456,pull_request,closed,, Resolve warning in Dataset Alias migration,"Backport #43421

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-10-28 01:50:20+00:00,[],2024-11-01 08:46:19+00:00,2024-10-28 09:02:28+00:00,https://github.com/apache/airflow/pull/43425,"[('kind:documentation', ''), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log'), ('area:db-migrations', 'PRs with DB migration')]",[],
2616937747,pull_request,closed,,Fix tag checkout in provider's PMC verification,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-27 23:06:58+00:00,[],2024-10-28 11:00:01+00:00,2024-10-28 00:50:46+00:00,https://github.com/apache/airflow/pull/43424,"[('area:dev-tools', '')]",[],
2616876409,pull_request,closed,,Resolve warning in Dataset Alias migration,"This PR resolves an SQLAlchemy warning in the migration by correctly setting the `alias_id` column as part of the primary key in the `dag_schedule_dataset_alias_reference` table. Previously, only dag_id was marked as the primary key, causing a mismatch with the local definition, which triggered an SAWarning.

Example: https://github.com/apache/airflow/actions/runs/11526187767/job/32090094094?pr=43243#step:6:745

When running a migration you see this. It was missed in https://github.com/apache/airflow/pull/41264:
```
/opt/airflow/airflow/migrations/versions/0026_2_10_0_dag_schedule_dataset_alias_reference.py:46 SAWarning: 
Table 'dag_schedule_dataset_alias_reference' specifies columns 'dag_id' as primary_key=True, not matching locally specified columns 'alias_id', 'dag_id'; setting the current primary key columns to 'alias_id', 'dag_id'. 
This warning may become an exception in a future release
```

It is already a primary key in models:

https://github.com/apache/airflow/blob/e9192f5db32e453f150c73ad31287d4953e3c43d/airflow/models/asset.py#L290-L291

I verified that both columns are marked as primary keys already in 2.10.

<img width=""789"" alt=""image"" src=""https://github.com/user-attachments/assets/8d9fca23-7a95-4252-8cc6-71b876bb8c24"">


<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-27 21:24:52+00:00,[],2024-11-01 08:46:29+00:00,2024-10-28 01:44:34+00:00,https://github.com/apache/airflow/pull/43421,"[('kind:documentation', ''), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log'), ('area:db-migrations', 'PRs with DB migration')]",[],
2616863667,pull_request,closed,,Optimize retrieval of `conn_id` and `dag_id` fields in `AirflowSecurityManagerV2`,"This PR refactors two methods within the AirflowSecurityManagerV2 class to retrieve only the required ID fields, conn_id and dag_id, directly from the database, rather than loading entire Connection and DagRun objects -- reducing unnecessary object retrieval.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-27 20:55:24+00:00,[],2024-10-28 00:58:35+00:00,2024-10-28 00:58:33+00:00,https://github.com/apache/airflow/pull/43420,"[('area:webserver', 'Webserver related Issues')]",[],
2616826555,pull_request,closed,,Upgrade pip to 24.3.1,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-27 19:47:41+00:00,[],2024-10-27 20:16:54+00:00,2024-10-27 20:16:52+00:00,https://github.com/apache/airflow/pull/43419,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]",[],
2616723629,pull_request,closed,,Upgrade pip version to `24.3`,"fix ci: https://github.com/apache/airflow/actions/runs/11540922782
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-10-27 16:46:47+00:00,[],2024-10-27 19:56:50+00:00,2024-10-27 19:35:21+00:00,https://github.com/apache/airflow/pull/43418,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]",[],
2616701749,pull_request,closed,,Correct question type for prepare-provider-documentation,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

For the provider doc preparation, the qn that asked to confirm if we have any changes apart from `doc-only` didn't acknowledge `N` option.

```
Does the provider: airbyte have any changes apart from 'doc-only'?
Press y/N/q: N

Define the type of change for `Split providers out of the main ""airflow/"" tree into a UV workspace project (https://github.com/apache/airflow/pull/42505)` by referring to the above table
Type of change (b)ugfix, (f)eature, (x)breaking change, (m)misc, (s)kip, (q)uit ? ^C

Summary of prepared documentation:
```

Corrected the qn function to fix it.

```
Does the provider: airbyte have any changes apart from 'doc-only'?
Press y/N/q: N
answer is Answer.NO True
Marking last change: 857ca4c06c and all above changes since the last release as doc-only changes!


Summary of prepared documentation:

Docs only: 1

airbyte


Successfully prepared documentation for packages!
```

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",amoghrajesh,2024-10-27 16:06:57+00:00,[],2024-10-29 19:51:25+00:00,2024-10-29 12:11:15+00:00,https://github.com/apache/airflow/pull/43417,"[('area:dev-tools', '')]","[{'comment_id': 2440206554, 'issue_id': 2616701749, 'author': 'potiuk', 'body': 'I think you should remove those HASH file modifications :)', 'created_at': datetime.datetime(2024, 10, 27, 22, 55, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2440207370, 'issue_id': 2616701749, 'author': 'potiuk', 'body': 'Looks like they were added by pre-commit while the source for breeze has not been committed :). Making sure that you do not have any modified file and running `pre-commit  run update-breeze-cmd-output --all-files` should fix things.\r\n\r\nJust make sure you have no non-added changes in your workspace.', 'created_at': datetime.datetime(2024, 10, 27, 22, 58, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441943694, 'issue_id': 2616701749, 'author': 'amoghrajesh', 'body': ""@potiuk I tried it out, it doesn't generate anything:\r\n```\r\n(apache-airflow) ➜  airflow git:(correctWrongAnsType) pre-commit  run update-breeze-cmd-output --all-files\r\nUpdate breeze docs.......................................................Passed\r\n\r\n```\r\n\r\nMoreover, also tried force pushing the change only, still running into this"", 'created_at': datetime.datetime(2024, 10, 28, 15, 40, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442266970, 'issue_id': 2616701749, 'author': 'potiuk', 'body': 'Maybe try to reinstall your pre-commit/breeze - maybe it is still installed with python 3.8 (though it should not change too much) . I cannot push a fixup to your branch, but I have exactly the same hashes as the one that are on the server- somehow the hashes in your version are calcualated differently..', 'created_at': datetime.datetime(2024, 10, 28, 17, 58, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2443148427, 'issue_id': 2616701749, 'author': 'amoghrajesh', 'body': 'Let me try reinstalling, looks to me that it installed an ""older"" breeze when I was playing around with some really ""old"" branch!', 'created_at': datetime.datetime(2024, 10, 29, 3, 55, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2444038116, 'issue_id': 2616701749, 'author': 'amoghrajesh', 'body': 'CI is green, merging.', 'created_at': datetime.datetime(2024, 10, 29, 12, 11, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445196722, 'issue_id': 2616701749, 'author': 'potiuk', 'body': '> Let me try reinstalling, looks to me that it installed an ""older"" breeze when I was playing around with some really ""old"" branch!\r\n\r\nThat could be - at some point in time i added the change that automatically breeze reinstalls if an older version is used - without even asking the user - it just reinstalls itself, but if you had REALLLY old version of breeze that did not have this mechanism, then yeah - hash calculation changed at some point in time so it could be different.', 'created_at': datetime.datetime(2024, 10, 29, 19, 50, 56, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-27 22:55:16 UTC): I think you should remove those HASH file modifications :)

potiuk on (2024-10-27 22:58:13 UTC): Looks like they were added by pre-commit while the source for breeze has not been committed :). Making sure that you do not have any modified file and running `pre-commit  run update-breeze-cmd-output --all-files` should fix things.

Just make sure you have no non-added changes in your workspace.

amoghrajesh (Issue Creator) on (2024-10-28 15:40:34 UTC): @potiuk I tried it out, it doesn't generate anything:
```
(apache-airflow) ➜  airflow git:(correctWrongAnsType) pre-commit  run update-breeze-cmd-output --all-files
Update breeze docs.......................................................Passed

```

Moreover, also tried force pushing the change only, still running into this

potiuk on (2024-10-28 17:58:52 UTC): Maybe try to reinstall your pre-commit/breeze - maybe it is still installed with python 3.8 (though it should not change too much) . I cannot push a fixup to your branch, but I have exactly the same hashes as the one that are on the server- somehow the hashes in your version are calcualated differently..

amoghrajesh (Issue Creator) on (2024-10-29 03:55:51 UTC): Let me try reinstalling, looks to me that it installed an ""older"" breeze when I was playing around with some really ""old"" branch!

amoghrajesh (Issue Creator) on (2024-10-29 12:11:10 UTC): CI is green, merging.

potiuk on (2024-10-29 19:50:56 UTC): That could be - at some point in time i added the change that automatically breeze reinstalls if an older version is used - without even asking the user - it just reinstalls itself, but if you had REALLLY old version of breeze that did not have this mechanism, then yeah - hash calculation changed at some point in time so it could be different.

"
2616555512,pull_request,closed,,fix: ensure 'bucket_name' falls back to default if missing or falsy,"This PR ensures that :
1. Add fallback for bucket_name parameter when missing or empty. 
2. Uses service_config to set default bucket_name if not provided in function arguments.

Closes: #43379 
Assigned By: @potiuk ",Rustix69,2024-10-27 12:14:11+00:00,[],2024-11-02 15:50:48+00:00,2024-11-02 15:49:45+00:00,https://github.com/apache/airflow/pull/43415,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]","[{'comment_id': 2439999436, 'issue_id': 2616555512, 'author': 'potiuk', 'body': 'Can you pleas add a unit test covering it ?', 'created_at': datetime.datetime(2024, 10, 27, 12, 37, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2440035096, 'issue_id': 2616555512, 'author': 'Rustix69', 'body': '> Can you pleas add a unit test covering it ?\r\n\r\nShould i create a new file including the unit test code or edit the existing test file?', 'created_at': datetime.datetime(2024, 10, 27, 13, 59, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2440188187, 'issue_id': 2616555512, 'author': 'potiuk', 'body': ""> > Can you pleas add a unit test covering it ?\r\n> \r\n> Should i create a new file including the unit test code or edit the existing test file?\r\n\r\nDepends what you find easier. Usually modifying/extending/adding files in existing test suite is easier and make more sense - but it's up to your judgment to propose it. How and where to add unit tests is part of the solution to an error."", 'created_at': datetime.datetime(2024, 10, 27, 21, 54, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442666910, 'issue_id': 2616555512, 'author': 'Rustix69', 'body': '> Can you pleas add a unit test covering it ?\r\n\r\nI had added unit test covering my PR regarding S3 bucket_name.\r\n![Screenshot from 2024-10-29 02-57-11](https://github.com/user-attachments/assets/b94b6ba9-538d-47c7-9911-d8454e4509ef)', 'created_at': datetime.datetime(2024, 10, 28, 21, 28, 29, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-27 12:37:54 UTC): Can you pleas add a unit test covering it ?

Rustix69 (Issue Creator) on (2024-10-27 13:59:46 UTC): Should i create a new file including the unit test code or edit the existing test file?

potiuk on (2024-10-27 21:54:49 UTC): Depends what you find easier. Usually modifying/extending/adding files in existing test suite is easier and make more sense - but it's up to your judgment to propose it. How and where to add unit tests is part of the solution to an error.

Rustix69 (Issue Creator) on (2024-10-28 21:28:29 UTC): I had added unit test covering my PR regarding S3 bucket_name.
![Screenshot from 2024-10-29 02-57-11](https://github.com/user-attachments/assets/b94b6ba9-538d-47c7-9911-d8454e4509ef)

"
2616554912,pull_request,closed,,Add an easy way to test `pip` from GitHub URL,"When PIP releases their new version they rarely release beta or rc packages, but usually announce their intention of making a release few days before in the pip mailing list - which we follow.

This PR allows to easily swith Airlfow builds to use `pip` from GitHub URL, as well as switching the CI builds from `uv` to `pip` by seting a `force pip` label.

This PR also fixes regexp checks for PIP version to use the ""URL"" installation syntax for PIP when it is set as GitHub URL.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-27 12:13:00+00:00,[],2024-10-27 19:46:12+00:00,2024-10-27 19:46:10+00:00,https://github.com/apache/airflow/pull/43414,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]","[{'comment_id': 2439991615, 'issue_id': 2616554912, 'author': 'potiuk', 'body': 'I\'ve used a ""hardcoded"" versio of it it to test `pip 24.3`  in #43395, but since we are likely to do similar tests in a future (even near - as there seem to be a breaking `pip 24.3` issue with recursive behaviour that might necessitate 24.3.1 soon https://github.com/pypa/pip/issues/13046', 'created_at': datetime.datetime(2024, 10, 27, 12, 15, 51, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-27 12:15:51 UTC): I've used a ""hardcoded"" versio of it it to test `pip 24.3`  in #43395, but since we are likely to do similar tests in a future (even near - as there seem to be a breaking `pip 24.3` issue with recursive behaviour that might necessitate 24.3.1 soon https://github.com/pypa/pip/issues/13046

"
2616521748,pull_request,closed,,[WIP] Override smtp config variables with connection values specified by email_conn_id ,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #34554 
related: #41539

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

closes: #34554 
related: #41539

**WIP** This change is incomplete, requires discussion.

Mandatory configuration of `smtp_user` and `smtp_pass`  via `Connection` object creates confusion as to source of truth for other SMTP params. This change proproses overriding all `smtp_*` vars with the `Connection` object equivalents when `email.email_conn_id` is specified. However, this creates some a questions that need resolving/consensus.

## Issue 1
My preference would be to use the `[smtp]` config vars as default/fallback values. However, this isn't possible as the connection UI doesn't allow for an 'not-specified' state for certain fields. 

E.g. the 'Disable SSL' checkbox defaults to `False` when not set, making it impossible to create a fallback condition. Attempting to implement a fallback leads to a state where the `smtp_ssl` config is ignored if the checkbox is checked, or the `smtp_ssl` config must be set to the desired value if the checkbox is unchecked. 

## Issue 2
`[smtp]` configuration variables are become usable only for connections not requiring authentication. This effectively reverses the confusion I'm trying to address. I.e. `[smtp]` config vars would have no effect if `email_conn_id` is in play.


# Possible solutions
* Remove all `[smtp]` config vars duplicated by connection object. Effectively mandate that all smtp configuration is done via a `Connection` object. This requires the most changes.
* Split `airflow.utils.email.send_email_smtp`  backend into `send_email_smtp` and `smtp_email_smtp_via_conn`. For this to work we'd need to revert #41539 and its deprecation, then auto-select backend based on presence of `email_conn_id`. Effectively states that if you want to use a `Connection` object to secure your SMTP params, you must configure the entirety of the SMTP connection using the object.
* Introduct another config: `smtp.smtp_config_source=config|connection` and require the user to opt into desired behaviour. Allows the user to specify that all SMTP vars should be controlled by `Connection` object. Still leaves a confusing default state.
* Modify the the connection UI to allow the user to clarify intent, thereby enabling the use of smtp config as fallback/default.
  * Change checkboxes to Default/Yes/No. This currently isn't possible as `SelectField/RadioField` types aren't allowed in Connection Forms
  * Provide No auth/user/pass checkbox to user to specify smtp doesn't require login.
* Other ideas?


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",scottlimmer,2024-10-27 11:20:12+00:00,[],2024-12-21 00:14:54+00:00,2024-12-21 00:14:54+00:00,https://github.com/apache/airflow/pull/43413,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file')]","[{'comment_id': 2439974511, 'issue_id': 2616521748, 'author': 'scottlimmer', 'body': '@potiuk @hussein-awala Would be good to get your thoughts (or anyone else who might have insights) on this before progressing further.', 'created_at': datetime.datetime(2024, 10, 27, 11, 24, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2543386174, 'issue_id': 2616521748, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 12, 15, 0, 18, 30, tzinfo=datetime.timezone.utc)}]","scottlimmer (Issue Creator) on (2024-10-27 11:24:20 UTC): @potiuk @hussein-awala Would be good to get your thoughts (or anyone else who might have insights) on this before progressing further.

github-actions[bot] on (2024-12-15 00:18:30 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2616521046,pull_request,closed,,Fix generation of commit history after moving providers,"Another teething problem after moving providers in #42505. After moving providers, the history of the current folder in ""providers"" only contains changes after the move - it does not include changes from before the move - and since we always regenerate the full list of commits - they were missing.

We cannot use `--follow` - because `git log --follow` only works for single files, not directories, but since the move was very predictable (""airflow/providers/nnn"" ->
""airflow/providers/src/airflow/providers/nnn"") we can add the old path to `git log` command to get both - pre and post move commit history.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-27 11:18:23+00:00,[],2024-10-27 11:39:54+00:00,2024-10-27 11:39:52+00:00,https://github.com/apache/airflow/pull/43412,"[('area:dev-tools', '')]","[{'comment_id': 2439978733, 'issue_id': 2616521046, 'author': 'potiuk', 'body': 'Yep - it nicely works in CI as well:\r\n\r\n<img width=""1612"" alt=""Screenshot 2024-10-27 at 12 36 17"" src=""https://github.com/user-attachments/assets/3207aef2-b8f7-4372-9e8a-894b702a5f98"">\r\n\r\n\r\nCompared to (in main):\r\n\r\n<img width=""1587"" alt=""Screenshot 2024-10-27 at 12 37 43"" src=""https://github.com/user-attachments/assets/04331bac-c856-47b7-964c-3bc43132d8f3"">', 'created_at': datetime.datetime(2024, 10, 27, 11, 38, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439979165, 'issue_id': 2616521046, 'author': 'potiuk', 'body': 'The doc failure is unrelated - seems that sqlalchemy doc inventory was temporarily unavailable. Merging - since the changes are only in ""doc generation"" and it already passed.', 'created_at': datetime.datetime(2024, 10, 27, 11, 39, 49, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-27 11:38:30 UTC): Yep - it nicely works in CI as well:

<img width=""1612"" alt=""Screenshot 2024-10-27 at 12 36 17"" src=""https://github.com/user-attachments/assets/3207aef2-b8f7-4372-9e8a-894b702a5f98"">


Compared to (in main):

<img width=""1587"" alt=""Screenshot 2024-10-27 at 12 37 43"" src=""https://github.com/user-attachments/assets/04331bac-c856-47b7-964c-3bc43132d8f3"">

potiuk (Issue Creator) on (2024-10-27 11:39:49 UTC): The doc failure is unrelated - seems that sqlalchemy doc inventory was temporarily unavailable. Merging - since the changes are only in ""doc generation"" and it already passed.

"
2616385463,pull_request,closed,,Fix tabular code owner to apache iceberg,,eladkal,2024-10-27 07:27:44+00:00,[],2024-10-27 08:04:37+00:00,2024-10-27 08:04:33+00:00,https://github.com/apache/airflow/pull/43410,"[('area:dev-tools', '')]",[],
2616384321,pull_request,closed,,Prepare docs for Oct 2nd wave of providers,"```
Summary of prepared documentation:

Success: 23

amazon apache.beam apache.druid apache.hdfs apache.livy apache.spark cloudant cncf.kubernetes common.sql databricks dbt.cloud fab google http jenkins microsoft.azure mongo mysql odbc openlineage oracle
slack ssh

Skipped by user: 68

airbyte alibaba apache.cassandra apache.drill apache.flink apache.hive apache.iceberg apache.impala apache.kafka apache.kylin apache.pig apache.pinot apprise arangodb asana atlassian.jira celery cohere
common.compat common.io datadog dingding discord docker elasticsearch exasol facebook ftp github grpc hashicorp imap influxdb jdbc microsoft.mssql microsoft.psrp microsoft.winrm neo4j openai openfaas
opensearch opsgenie pagerduty papermill pgvector pinecone postgres presto qdrant redis salesforce samba segment sendgrid sftp singularity smtp snowflake sqlite tableau telegram teradata trino vertica
weaviate yandex ydb zendesk


Successfully prepared documentation for packages!

```",eladkal,2024-10-27 07:24:02+00:00,[],2024-10-27 14:09:07+00:00,2024-10-27 14:09:03+00:00,https://github.com/apache/airflow/pull/43409,"[('provider:google', 'Google (including GCP) related issues'), ('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('kind:documentation', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues'), ('provider:common-sql', ''), ('provider:databricks', ''), ('provider:http', ''), ('provider:dbt-cloud', ''), ('provider:jenkins', ''), ('provider:apache-druid', ''), ('provider:apache-spark', ''), ('provider:apache-beam', ''), ('provider:apache-livy', ''), ('provider:apache-hdfs', ''), ('provider:cloudant', ''), ('provider:fab', '')]","[{'comment_id': 2439904974, 'issue_id': 2616384321, 'author': 'potiuk', 'body': 'There is something quite wrong with commits being removed from the docs.', 'created_at': datetime.datetime(2024, 10, 27, 8, 23, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439907120, 'issue_id': 2616384321, 'author': 'potiuk', 'body': 'I might take a look in 2 hours or so.', 'created_at': datetime.datetime(2024, 10, 27, 8, 31, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439959252, 'issue_id': 2616384321, 'author': 'potiuk', 'body': ""Ok. I know why - it's of course because moving the providers. Fix is coming."", 'created_at': datetime.datetime(2024, 10, 27, 10, 32, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439973151, 'issue_id': 2616384321, 'author': 'potiuk', 'body': 'Fix in https://github.com/apache/airflow/pull/43412', 'created_at': datetime.datetime(2024, 10, 27, 11, 19, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439979682, 'issue_id': 2616384321, 'author': 'potiuk', 'body': 'You should be able to rebase @eladkal and regenerate the documentation -  it **should** fix itself automatically when you re-run the `breeze release-management prepare-provider-documentation --answer yes`', 'created_at': datetime.datetime(2024, 10, 27, 11, 41, 33, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-27 08:23:32 UTC): There is something quite wrong with commits being removed from the docs.

potiuk on (2024-10-27 08:31:48 UTC): I might take a look in 2 hours or so.

potiuk on (2024-10-27 10:32:32 UTC): Ok. I know why - it's of course because moving the providers. Fix is coming.

potiuk on (2024-10-27 11:19:52 UTC): Fix in https://github.com/apache/airflow/pull/43412

potiuk on (2024-10-27 11:41:33 UTC): You should be able to rebase @eladkal and regenerate the documentation -  it **should** fix itself automatically when you re-run the `breeze release-management prepare-provider-documentation --answer yes`

"
2616369352,pull_request,closed,,gitSync from multiple git repository or branch,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).



Purpose of the PR : Git-Sync from multiple repo and branch ,
change-list:
- in dags.gitSync , now it is possible to have multiple entries
- changes in values.schema.json to amend the new schema for dags.gitSync.repositories
- changes in check-values.yaml to check the below rules
  - to check if duplicate repo and branch combinations are entered
  - containerName should be unique in values.yaml for every entry in dags.gitSync.repositories
- changes in _helpers.yml ( the helper function ) to accommodate multi-repo settings
- changes in deployment yaml to support multirepo setting
- changes in dags folder path so that symlink can be created for all repos
- changes to support known-hosts and sshKey for multiple repos or branchs

**This is a new feature which i have been working , i am ready to co-operate with all test-cases , below are the test cases i have performed**

Test Cases | Expected Behaviour | Result
-- | -- | --
multiple git-repo ( 2 Private and 1 Public ) | gitSync pulling from multiple repo or branch | PASSED
multiple git-repo ( 2 Private with ssh ) | gitSync pulling from multiple repo or branch | PASSED
single git-repo | existing behavior should not be interrupted | PASSED
multiple duplicate entry in repositories section in dags | Should raise error while helm install | PASSED
Known-hosts for all repos | Known-hosts are listed in airflow.cfg for all repos | PASSED

**Change Lists** : 

File Name | Changes
-- | --
templates/NOTES.txt | Notes added for multirepo changes , it is just a Note
templates/check-value.yaml | The Multirepo changes comes with some conditions -  <br>**1**. containerName in dags.gitSync for every repo in repositories list , should be unique  <br>**2**. whether user is providing duplicate input in the dags.gitSync.repolistories list
templates/_helpers.yaml | Below are the changes - <br>**1**. create git-sync-init and git-sync container for every entry in the dags.gitSync.repositories list <br>**2**. create seperate volumeMounts and volumes for the ssh key and repo in dags.gitSync.repositories <br>**3**. create dags folder path for all entries in dags.gitSync.repositories <br>**4**. created a new helper to create symlink for every repo and call this helper in container ( scheduler , worker , triggerer , webserver , ..  ) in their lifecycle
templates/scheduler/scheduler-deployment.yaml | changes to enlist all volumnes for all repos and as well as for sshKey , also in container lifecycle , helper airflow.dags_poststart has been called , so that it can create symlink for every repo , only after the git-sync is finished , to avoid any race-condition,
templates/worker/worker-deployment.yaml | changes to enlist all volumnes for all repos and as well as for sshKey , also in container lifecycle , helper airflow.dags_poststart has been called , so that it can create symlink for every repo , only after the git-sync is finished , to avoid any race-condition,
templates/webserver/webserver-deployment.yaml | changes to enlist all volumnes for all repos and as well as for sshKey , also in container lifecycle , helper airflow.dags_poststart has been called , so that it can create symlink for every repo , only after the git-sync is finished , to avoid any race-condition,
templates/triggerer/triggerer-deployment.yaml | changes to enlist all volumnes for all repos and as well as for sshKey , also in container lifecycle , helper airflow.dags_poststart has been called , so that it can create symlink for every repo , only after the git-sync is finished , to avoid any race-condition,
templates/secrets/git-ssh-key-secrets.yaml | changes in secrets , so that it can have secrets from multiple repos from dags.gitSync.repositories
templates/dag-processor/dag-processor-deployment.yaml | changes to enlist all volumnes for all repos and as well as for sshKey , also in container lifecycle , helper airflow.dags_poststart has been called , so that it can create symlink for every repo , only after the git-sync is finished , to avoid any race-condition,
templates/configmaps/configmap.yaml | changes to facilitate multiple known-hosts from dags.gitSync.repositories
files/pod-template-file.kubernetes-hem-yaml | changes in volumne and container lifecycle to facilitate the multirepo changes
values.yaml | introduced a new list element in dags.gitSync , this new list element named repositories which will have multiple entries of repos or branches
values-schema.json | because a new element has been introduced in dags.gitSync , the schema.json is needed to be changed .

Thanks and Regards,
koushik
",koustreak,2024-10-27 06:46:54+00:00,[],2024-10-30 17:07:59+00:00,2024-10-30 17:07:33+00:00,https://github.com/apache/airflow/pull/43408,"[('area:helm-chart', 'Airflow Helm Chart')]","[{'comment_id': 2439998942, 'issue_id': 2616369352, 'author': 'potiuk', 'body': 'Hello @koustreak  - could you please explain how are you going to provide synchronization between multiple repos?\r\n\r\nOne of the functionalities of git-sync is that it performs atomic swap when new commits are synced - it keeps the old repository, while it checks-out the new one and then atomically swaps the new folder with the old one via symbolic link.\r\n\r\nThis is an important feature of git-sync, because it guarantees that DAG parsing across multiple folders inside the repo is consistent - and uses always the same single-consistent version of the DAG files and any related imports.\r\n\r\nThis is one of the reasons why both git-sync and us are reluctant to manage and sync multiple repositories via ""external means"" - because you can already do it via ""submodules"" - and then the consistency and atomic swap is maintained - while you get  a good way of keeping references to all the updated repos and even reverting and backing individual repos to previous versions in the single ""umbrella repo"" using submodules.\r\n\r\nWith the approach you propose, not only you have multiple init containers, and running containers with git-sync, but also they have somewhat unpredictible schedule - and it\'s very easy to imagine that checked out repositories: a and b will be checked in an inconsistent state (say repository a still at previous commit, and repository b at new commit) \r\n\r\nImagine ""common"" repository and ""dag_team_a"" repository - and `dag_team_a` importing `common.util.function` - and comon.util.function adding new mandatory parameter - when you synchronize each repository independently, common.util.function might be already updated, when \'dag_team_a"" importing it, still uses the old function without the mandatory parameter. This will fail parsing of dags in `dag_team_a`.\r\n\r\nThis is perfectly manageable with having a single repository with submodules where you update to the right versions of your\r\ncommon repos and commit those changes together.\r\n\r\nSee https://www.youtube.com/watch?v=uA-8Lj1RNgw - the talk by Anum from Jagex explaining how they are doing it.\r\n\r\nHow are you going to deal with this scenario?', 'created_at': datetime.datetime(2024, 10, 27, 12, 36, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2440093226, 'issue_id': 2616369352, 'author': 'koustreak', 'body': ""Hi , @potiuk , \r\n\r\nFirst of all , many thanks for taking a look at my PR . \r\nlets say you have setup ```common``` and ```dag_team_a``` in the multirepo setup , and as per  wait parameter both will be synced independently , \r\n\r\nSo lets say for common repo the value of wait is 60 and for dag_team_a the value of wait is 80 , and they will be synced accordingly , so if ```common.util.function``` introduced a mandatory parameter and the user forgot to change the function call accordingly in dag_team_a , then it will throw an error , the user will change the function call in dag_team_a and wait for 80 seconds . \r\n\r\nThe scenario you referred is somewhat depends on end-user error , lets say you combine both dag_team_a and common in a single repo , still if you forgot to mention the mandatory parameter in your function call , you still gonna get the error . \r\n\r\nthe helper function **airflow.dags_poststart** makes sure once the scheduler / triggerer / worker / webserver .. container is started , it creates a symlink in /opt/airflow/dags/bags/<container name>   which points to /opt/airflow/dags/repo/container_name ( this is where the git-sync changes will be synced every time . \r\nAlso please take a look at the lifecycle section part of the container in deployment yaml .\r\n\r\nAlso the dag_folder points to /opt/airflow/dags/bags , ( if dags.path is mentioned in values.yaml ) \r\n\r\nYes , i agree to your point that the cross-repo sync won't happen easily , if such scenario with mandatory parameter occur , then it will throw an error in dag processing , then the user will change the code in dag_team_a and after 80 seconds it will be synced again and we can run the dag . \r\n\r\nA dag sync hook or dependence can be created , to make sure both repo sync at same time . I agree to your point there will be a problem with sync staleness , but if we keep the wait parameter value is same for both repo  then it will somewhat do the job will less lag ."", 'created_at': datetime.datetime(2024, 10, 27, 16, 43, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2440205320, 'issue_id': 2616369352, 'author': 'potiuk', 'body': '> A dag sync hook or dependence can be created , to make sure both repo sync at same time . I agree to your point there will be a problem with sync staleness , but if we keep the wait parameter value is same for both repo then it will somewhat do the job will less lag .\r\n\r\nBut why not promote submodule (which solves the problem - because in submodule, you can also make sure that you have a single commit, syncing both repos at the same time) .\r\n\r\nSay you have \r\n\r\n* repo a) commit 1 -> commit 2\r\n* repo b) commit 3 -> commit 4\r\n\r\nHaving a single ""umbrella"" subrebo and single git-sync allows you to do this:\r\n\r\nrepo c) (umbrella over b) and c)\r\n\r\n* commit 4: -> links to commit 1 of repo a) and commit 3 of repo b)\r\n* commit 5: -> links to commit 2 or repo a) and commit 4 of repo b)\r\n\r\nThat allows for atomic sync of repo c) - being umbrella on top of a) and b) where a) and b) repos are always consistent\r\n\r\nIs there any problem with that? Would not it be better to explain (and make a PR documenting it) how you can use submodule ""umbrella"" repo to synchronize multiple repos? Is there any problem with that? Have you looked at the Jagex presentation explaining it and benefits it brings for managing multi-repos?\r\n\r\nI am afraid that by adding more than one repo in git-sync we are opening up for a number of problems, and basicaly eventually we would have to develop a ""submodule"" equivalent, because the syncrhronisation problems between several repos will cause various errors - and submodule approach seem to have a solution for that, so it seems better to just describe how you can use it.\r\n\r\nAny problems with that?', 'created_at': datetime.datetime(2024, 10, 27, 22, 51, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2440205618, 'issue_id': 2616369352, 'author': 'potiuk', 'body': 'BTW. Have you tried to use submodules for your case? What are your experiences?', 'created_at': datetime.datetime(2024, 10, 27, 22, 52, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2440585414, 'issue_id': 2616369352, 'author': 'koustreak', 'body': 'Submodules are great and i have tried it ,\nBut the main problem with monorepo is the two different version of airflow dag and its code resides in single repo , which makes it difficult to manage sometime .\n\nThe main purpose i came up with this is something different . \n\nLets say you have two branch,  develop and main , and you want to test your dags and code are ok in develop branch first before merge it to main . \n\nAs per the existing airflow setup , you need to have two seperate airflow deployment in your kubernetes cluster ,  one is pointing to main and another is pointing to develop . \n\nIf you put both the repository to single repo , like the mono-repo approach then sometimes it become difficult to manage . \n\nMany small budget projects end up paying extra to manage two different deployments . \n\nThis is the problem i want to solve. Like i said earlier Cross repo sync wont be a blocker in multirepo gitsync, but it surely open up a thought in users mind to refer cross repo functions in airflow dag code .\n\nAs of now , we can imagine , that all the repos in the multirepo gitsync , should be independent of each other .\n\nMy goal is completely different.\n\nThe multirepo gitsync is a way to deal with multiple version of dags in a same environment.', 'created_at': datetime.datetime(2024, 10, 28, 5, 28, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441180007, 'issue_id': 2616369352, 'author': 'potiuk', 'body': '> The multirepo gitsync is a way to deal with multiple version of dags in a same environment.\r\n\r\nI am not sure if I get it. How?', 'created_at': datetime.datetime(2024, 10, 28, 10, 26, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441215247, 'issue_id': 2616369352, 'author': 'potiuk', 'body': 'Just to put it in context: in Airflow 2, all the DAGs in DAG folder are in the same ""namespace"" - they can see each other and import each other. You can potentially bundle things together in a DAG .zip file (and this is the way how you can currently also bundle DAG and it\'s dependencies so that they are isolated between different DAGs) - but generally speaking when you have a DAG, imports will use the DAG_FOLDER as the part of PYTHONPATH where all imports are made from for your custom code.\r\n\r\nI don\'t see why you would not be able to do what you want to do with submodules to be honest. But maybe I am wrong.\r\n\r\nAlso in Airflow 3 this is going to change a lot and in a completely different way that your proposal is heading. We have AIP-66 being implemented: https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=294816356 where you will be able to specify different sources for different bundles, and this all will be handled pretty differently - and the community is going to focus their efforts on supporting this - way more forward looking approach, which has much greater flexibility and will be supported. And if you want to spend your efforts on making it happen - I would suggest contributing to those efforts, rather than adding support for multiple git-sync containers. \r\n\r\nEven if you have a good case yourself to have support for multiple git-syncs rather than submodules I don\'t think it is something we would like to support here, you could probably fork Airfow\'s chart and publish your version if you want to expose it to others and support it for others using it, but I think that would be quite a bit of burden for us to support it here in the community, while we already not only defined what is the way forward but are also in the middle of implementing it for airflow 3.\r\n\r\n@jedcunningham -> since you are mostly engaged in AIP-66, is my thinking going in the right direction?', 'created_at': datetime.datetime(2024, 10, 28, 10, 38, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441285737, 'issue_id': 2616369352, 'author': 'koustreak', 'body': 'Understood , @potiuk , happy to contrubute to the community approach of dag versioning . \nSince the community is going towards a different direction , i would post my work as a fork and continue to use it in my current project as a stopgap . Once airflow 3 dag version is out comepletely i will switch to it .  \n\nThanks for reviewing my work , will close this PR today .', 'created_at': datetime.datetime(2024, 10, 28, 11, 10, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447831980, 'issue_id': 2616369352, 'author': 'jedcunningham', 'body': ""Yep, I share the same opinion/thoughts as Jarek.\r\n\r\n@koustreak, I just want to say this is a very good first PR though (sorry it's not something we want to merge). Lots of detail, testing documented, etc. Well done. Hope to see future PRs from you :)"", 'created_at': datetime.datetime(2024, 10, 30, 17, 7, 33, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-27 12:36:13 UTC): Hello @koustreak  - could you please explain how are you going to provide synchronization between multiple repos?

One of the functionalities of git-sync is that it performs atomic swap when new commits are synced - it keeps the old repository, while it checks-out the new one and then atomically swaps the new folder with the old one via symbolic link.

This is an important feature of git-sync, because it guarantees that DAG parsing across multiple folders inside the repo is consistent - and uses always the same single-consistent version of the DAG files and any related imports.

This is one of the reasons why both git-sync and us are reluctant to manage and sync multiple repositories via ""external means"" - because you can already do it via ""submodules"" - and then the consistency and atomic swap is maintained - while you get  a good way of keeping references to all the updated repos and even reverting and backing individual repos to previous versions in the single ""umbrella repo"" using submodules.

With the approach you propose, not only you have multiple init containers, and running containers with git-sync, but also they have somewhat unpredictible schedule - and it's very easy to imagine that checked out repositories: a and b will be checked in an inconsistent state (say repository a still at previous commit, and repository b at new commit) 

Imagine ""common"" repository and ""dag_team_a"" repository - and `dag_team_a` importing `common.util.function` - and comon.util.function adding new mandatory parameter - when you synchronize each repository independently, common.util.function might be already updated, when 'dag_team_a"" importing it, still uses the old function without the mandatory parameter. This will fail parsing of dags in `dag_team_a`.

This is perfectly manageable with having a single repository with submodules where you update to the right versions of your
common repos and commit those changes together.

See https://www.youtube.com/watch?v=uA-8Lj1RNgw - the talk by Anum from Jagex explaining how they are doing it.

How are you going to deal with this scenario?

koustreak (Issue Creator) on (2024-10-27 16:43:35 UTC): Hi , @potiuk , 

First of all , many thanks for taking a look at my PR . 
lets say you have setup ```common``` and ```dag_team_a``` in the multirepo setup , and as per  wait parameter both will be synced independently , 

So lets say for common repo the value of wait is 60 and for dag_team_a the value of wait is 80 , and they will be synced accordingly , so if ```common.util.function``` introduced a mandatory parameter and the user forgot to change the function call accordingly in dag_team_a , then it will throw an error , the user will change the function call in dag_team_a and wait for 80 seconds . 

The scenario you referred is somewhat depends on end-user error , lets say you combine both dag_team_a and common in a single repo , still if you forgot to mention the mandatory parameter in your function call , you still gonna get the error . 

the helper function **airflow.dags_poststart** makes sure once the scheduler / triggerer / worker / webserver .. container is started , it creates a symlink in /opt/airflow/dags/bags/<container name>   which points to /opt/airflow/dags/repo/container_name ( this is where the git-sync changes will be synced every time . 
Also please take a look at the lifecycle section part of the container in deployment yaml .

Also the dag_folder points to /opt/airflow/dags/bags , ( if dags.path is mentioned in values.yaml ) 

Yes , i agree to your point that the cross-repo sync won't happen easily , if such scenario with mandatory parameter occur , then it will throw an error in dag processing , then the user will change the code in dag_team_a and after 80 seconds it will be synced again and we can run the dag . 

A dag sync hook or dependence can be created , to make sure both repo sync at same time . I agree to your point there will be a problem with sync staleness , but if we keep the wait parameter value is same for both repo  then it will somewhat do the job will less lag .

potiuk on (2024-10-27 22:51:07 UTC): But why not promote submodule (which solves the problem - because in submodule, you can also make sure that you have a single commit, syncing both repos at the same time) .

Say you have 

* repo a) commit 1 -> commit 2
* repo b) commit 3 -> commit 4

Having a single ""umbrella"" subrebo and single git-sync allows you to do this:

repo c) (umbrella over b) and c)

* commit 4: -> links to commit 1 of repo a) and commit 3 of repo b)
* commit 5: -> links to commit 2 or repo a) and commit 4 of repo b)

That allows for atomic sync of repo c) - being umbrella on top of a) and b) where a) and b) repos are always consistent

Is there any problem with that? Would not it be better to explain (and make a PR documenting it) how you can use submodule ""umbrella"" repo to synchronize multiple repos? Is there any problem with that? Have you looked at the Jagex presentation explaining it and benefits it brings for managing multi-repos?

I am afraid that by adding more than one repo in git-sync we are opening up for a number of problems, and basicaly eventually we would have to develop a ""submodule"" equivalent, because the syncrhronisation problems between several repos will cause various errors - and submodule approach seem to have a solution for that, so it seems better to just describe how you can use it.

Any problems with that?

potiuk on (2024-10-27 22:52:04 UTC): BTW. Have you tried to use submodules for your case? What are your experiences?

koustreak (Issue Creator) on (2024-10-28 05:28:22 UTC): Submodules are great and i have tried it ,
But the main problem with monorepo is the two different version of airflow dag and its code resides in single repo , which makes it difficult to manage sometime .

The main purpose i came up with this is something different . 

Lets say you have two branch,  develop and main , and you want to test your dags and code are ok in develop branch first before merge it to main . 

As per the existing airflow setup , you need to have two seperate airflow deployment in your kubernetes cluster ,  one is pointing to main and another is pointing to develop . 

If you put both the repository to single repo , like the mono-repo approach then sometimes it become difficult to manage . 

Many small budget projects end up paying extra to manage two different deployments . 

This is the problem i want to solve. Like i said earlier Cross repo sync wont be a blocker in multirepo gitsync, but it surely open up a thought in users mind to refer cross repo functions in airflow dag code .

As of now , we can imagine , that all the repos in the multirepo gitsync , should be independent of each other .

My goal is completely different.

The multirepo gitsync is a way to deal with multiple version of dags in a same environment.

potiuk on (2024-10-28 10:26:20 UTC): I am not sure if I get it. How?

potiuk on (2024-10-28 10:38:24 UTC): Just to put it in context: in Airflow 2, all the DAGs in DAG folder are in the same ""namespace"" - they can see each other and import each other. You can potentially bundle things together in a DAG .zip file (and this is the way how you can currently also bundle DAG and it's dependencies so that they are isolated between different DAGs) - but generally speaking when you have a DAG, imports will use the DAG_FOLDER as the part of PYTHONPATH where all imports are made from for your custom code.

I don't see why you would not be able to do what you want to do with submodules to be honest. But maybe I am wrong.

Also in Airflow 3 this is going to change a lot and in a completely different way that your proposal is heading. We have AIP-66 being implemented: https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=294816356 where you will be able to specify different sources for different bundles, and this all will be handled pretty differently - and the community is going to focus their efforts on supporting this - way more forward looking approach, which has much greater flexibility and will be supported. And if you want to spend your efforts on making it happen - I would suggest contributing to those efforts, rather than adding support for multiple git-sync containers. 

Even if you have a good case yourself to have support for multiple git-syncs rather than submodules I don't think it is something we would like to support here, you could probably fork Airfow's chart and publish your version if you want to expose it to others and support it for others using it, but I think that would be quite a bit of burden for us to support it here in the community, while we already not only defined what is the way forward but are also in the middle of implementing it for airflow 3.

@jedcunningham -> since you are mostly engaged in AIP-66, is my thinking going in the right direction?

koustreak (Issue Creator) on (2024-10-28 11:10:37 UTC): Understood , @potiuk , happy to contrubute to the community approach of dag versioning . 
Since the community is going towards a different direction , i would post my work as a fork and continue to use it in my current project as a stopgap . Once airflow 3 dag version is out comepletely i will switch to it .  

Thanks for reviewing my work , will close this PR today .

jedcunningham on (2024-10-30 17:07:33 UTC): Yep, I share the same opinion/thoughts as Jarek.

@koustreak, I just want to say this is a very good first PR though (sorry it's not something we want to merge). Lots of detail, testing documented, etc. Well done. Hope to see future PRs from you :)

"
2616347637,pull_request,closed,,AIP-84 Get Event Logs,"Closes: #43326  
Related: #42370  


Related discussion mentioned at https://github.com/apache/airflow/pull/43204#issuecomment-2434982295
",jason810496,2024-10-27 05:52:55+00:00,[],2024-11-05 14:29:25+00:00,2024-11-05 10:51:22+00:00,https://github.com/apache/airflow/pull/43407,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2441638723, 'issue_id': 2616347637, 'author': 'pierrejeambrun', 'body': 'I reviewed the other PR on which is based this one. I will do an in-depth review here when the other one is updated and merge because it will most likely imply changes here as well.', 'created_at': datetime.datetime(2024, 10, 28, 13, 46, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446186256, 'issue_id': 2616347637, 'author': 'jason810496', 'body': 'Fix common issue in #43406 ( should add `create_openapi_http_exception_doc` at router ).', 'created_at': datetime.datetime(2024, 10, 30, 8, 36, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448932746, 'issue_id': 2616347637, 'author': 'jason810496', 'body': 'Sure, I will separate `FilterParam` from this PR.', 'created_at': datetime.datetime(2024, 10, 31, 3, 12, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453827554, 'issue_id': 2616347637, 'author': 'jason810496', 'body': 'Hi @pierrejeambrun, I believe this PR is ready to be merged. Afterward, I’ll start working on PR to refactor SortParam and FilterParam.', 'created_at': datetime.datetime(2024, 11, 4, 4, 54, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456559770, 'issue_id': 2616347637, 'author': 'pierrejeambrun', 'body': '> Hi @pierrejeambrun, I believe this PR is ready to be merged. Afterward, I’ll start working on PR to refactor SortParam and FilterParam.\r\n\r\nFor Range filtering, you can take a look at which implements some helper code, you might need to re-use some of it for your refactoring:\r\nhttps://github.com/apache/airflow/pull/43642', 'created_at': datetime.datetime(2024, 11, 5, 8, 42, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456562136, 'issue_id': 2616347637, 'author': 'pierrejeambrun', 'body': 'I just rebased the branch, waiting for a green CI to merge.', 'created_at': datetime.datetime(2024, 11, 5, 8, 43, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457328052, 'issue_id': 2616347637, 'author': 'jason810496', 'body': 'Thanks for helping resolve the conflict.\r\nI’ll take a look at the implementation of range filtering.', 'created_at': datetime.datetime(2024, 11, 5, 14, 29, 24, tzinfo=datetime.timezone.utc)}]","pierrejeambrun on (2024-10-28 13:46:58 UTC): I reviewed the other PR on which is based this one. I will do an in-depth review here when the other one is updated and merge because it will most likely imply changes here as well.

jason810496 (Issue Creator) on (2024-10-30 08:36:19 UTC): Fix common issue in #43406 ( should add `create_openapi_http_exception_doc` at router ).

jason810496 (Issue Creator) on (2024-10-31 03:12:41 UTC): Sure, I will separate `FilterParam` from this PR.

jason810496 (Issue Creator) on (2024-11-04 04:54:27 UTC): Hi @pierrejeambrun, I believe this PR is ready to be merged. Afterward, I’ll start working on PR to refactor SortParam and FilterParam.

pierrejeambrun on (2024-11-05 08:42:18 UTC): For Range filtering, you can take a look at which implements some helper code, you might need to re-use some of it for your refactoring:
https://github.com/apache/airflow/pull/43642

pierrejeambrun on (2024-11-05 08:43:28 UTC): I just rebased the branch, waiting for a green CI to merge.

jason810496 (Issue Creator) on (2024-11-05 14:29:24 UTC): Thanks for helping resolve the conflict.
I’ll take a look at the implementation of range filtering.

"
2616321421,pull_request,closed,,AIP-84 Get Event Log,"closes: #43327
related: #42370",jason810496,2024-10-27 05:05:25+00:00,[],2024-10-29 14:34:59+00:00,2024-10-29 14:34:58+00:00,https://github.com/apache/airflow/pull/43406,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2441635592, 'issue_id': 2616321421, 'author': 'pierrejeambrun', 'body': 'Thanks for the PR. A few suggestions before we can merge.', 'created_at': datetime.datetime(2024, 10, 28, 13, 45, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2443138812, 'issue_id': 2616321421, 'author': 'jason810496', 'body': 'Thanks for reviewing, @pierrejeambrun. I’ve just resolved the issue.', 'created_at': datetime.datetime(2024, 10, 29, 3, 44, 32, tzinfo=datetime.timezone.utc)}]","pierrejeambrun on (2024-10-28 13:45:46 UTC): Thanks for the PR. A few suggestions before we can merge.

jason810496 (Issue Creator) on (2024-10-29 03:44:32 UTC): Thanks for reviewing, @pierrejeambrun. I’ve just resolved the issue.

"
2616253092,pull_request,closed,,"add min versions to types- pytz, redis, requests, setuptools","Adding min versions as mentioned below:

1. types-pytz>=2024.1.0.20240417(Released in April 2024)
2. types-redis>=4.6.0.20240425(Released in April 2024)
3. types-requests>=2.31.0.6 (Released in September 2023. aiobotocore>=2.9.0 requires the min version of types-requests to be 2.31.0.6. This is because types-requests==2.31.0.7 depend on urllib>=2. aiobotocore>=2.9.0 requires urllib<2)
4. types-setuptools>=69.5.0.20240423(Released in April 2024)


related to #42989",rawwar,2024-10-27 01:53:59+00:00,[],2024-10-31 21:06:47+00:00,2024-10-31 21:06:47+00:00,https://github.com/apache/airflow/pull/43405,[],"[{'comment_id': 2450816394, 'issue_id': 2616253092, 'author': 'potiuk', 'body': 'Random issue only ... merging.', 'created_at': datetime.datetime(2024, 10, 31, 21, 6, 43, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-31 21:06:43 UTC): Random issue only ... merging.

"
2616151381,pull_request,closed,,[backport] prevent out of index error in getDagRunLabel function (#43388),"(cherry picked from commit fbc1c2bd16c1ac12071288096bacc39907fb5a31)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-10-26 21:24:41+00:00,[],2024-10-28 08:12:28+00:00,2024-10-27 07:40:29+00:00,https://github.com/apache/airflow/pull/43404,"[('area:webserver', 'Webserver related Issues'), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2615986240,pull_request,closed,,core operator python: check virtualenv is importable by importing,"This imports the module to check for `ModuleNotFoundError`. A soft import is possible but then will then import it later anyway and this will be most robust. This change is needed as a system `virtualenv` is not always available in a venv that airflow is not running in.

Closes #40420 ",thisiswhereitype,2024-10-26 16:39:15+00:00,[],2024-11-02 12:21:14+00:00,2024-10-31 23:42:03+00:00,https://github.com/apache/airflow/pull/43403,"[('area:core-operators', 'Operators, Sensors and hooks within Core Airflow')]","[{'comment_id': 2439647705, 'issue_id': 2615986240, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 26, 16, 39, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439724758, 'issue_id': 2615986240, 'author': 'potiuk', 'body': 'Actually - this is not correct/complete - is really a breaking change. \r\n\r\nSo far PythonVirtualenv operator used `virtualenv` package to create the venvs, not the built-in `venv` module.  Also there is a dedicated `[virtualenv]` extra to install the package. The package is here: https://pypi.org/project/virtualenv/\r\n\r\nNote that virtualenv is stil maintained till today, even if venv became available \r\n\r\nThis is mostly due to historical reasons, but also because `virtualenv` created venv behaves slightly differently than the built-in venv one (one of the differences for example is that it cannot be relocatable).\r\n\r\nI do not think we are bound to any specifics of `venv` vs `virtualenv` - however when customers use PythonVirtualenvOperat (and `virtualenv` under the hood) they might rely on some internals and differences of `virtualenv` vs `venv`.\r\n\r\nSo while I sympathise with the change - since `venv` is now built-in in Python since 3.3 - I think a change to use `venv` instead of `virtualenv` needs to be discussed in devlist, ending up as a potentially breaking change in Airflow 3 and newsfragment.\r\n\r\nAlso this change is plainly wrong - creating virtualenv currently actually uses ""virtualenv"" command line not `venv` module - so if we accept it as it is, it will check for `venv` but actually will use for `virtualenv`.', 'created_at': datetime.datetime(2024, 10, 26, 20, 15, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2440039690, 'issue_id': 2615986240, 'author': 'thisiswhereitype', 'body': 'Thanks for taking a look, I, for some reason though venv and virtualenv were the same. As you say this would be breaking.\r\n\r\nhttps://peps.python.org/pep-0405/ - is relevant for any future readers.', 'created_at': datetime.datetime(2024, 10, 27, 14, 11, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2451025533, 'issue_id': 2615986240, 'author': 'potiuk', 'body': 'Switching to venv in https://github.com/apache/airflow/pull/43568 - closing that one', 'created_at': datetime.datetime(2024, 10, 31, 23, 42, 3, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-26 16:39:19 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-10-26 20:15:44 UTC): Actually - this is not correct/complete - is really a breaking change. 

So far PythonVirtualenv operator used `virtualenv` package to create the venvs, not the built-in `venv` module.  Also there is a dedicated `[virtualenv]` extra to install the package. The package is here: https://pypi.org/project/virtualenv/

Note that virtualenv is stil maintained till today, even if venv became available 

This is mostly due to historical reasons, but also because `virtualenv` created venv behaves slightly differently than the built-in venv one (one of the differences for example is that it cannot be relocatable).

I do not think we are bound to any specifics of `venv` vs `virtualenv` - however when customers use PythonVirtualenvOperat (and `virtualenv` under the hood) they might rely on some internals and differences of `virtualenv` vs `venv`.

So while I sympathise with the change - since `venv` is now built-in in Python since 3.3 - I think a change to use `venv` instead of `virtualenv` needs to be discussed in devlist, ending up as a potentially breaking change in Airflow 3 and newsfragment.

Also this change is plainly wrong - creating virtualenv currently actually uses ""virtualenv"" command line not `venv` module - so if we accept it as it is, it will check for `venv` but actually will use for `virtualenv`.

thisiswhereitype (Issue Creator) on (2024-10-27 14:11:14 UTC): Thanks for taking a look, I, for some reason though venv and virtualenv were the same. As you say this would be breaking.

https://peps.python.org/pep-0405/ - is relevant for any future readers.

potiuk on (2024-10-31 23:42:03 UTC): Switching to venv in https://github.com/apache/airflow/pull/43568 - closing that one

"
2615941286,pull_request,closed,,Change default value of `namespace` in `task.kubernetes` to be None,"closes: https://github.com/apache/airflow/issues/42957

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-10-26 15:29:34+00:00,[],2024-11-05 12:22:30+00:00,2024-11-05 12:22:29+00:00,https://github.com/apache/airflow/pull/43402,"[('area:providers', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues')]",[],
2615933086,pull_request,closed,,Update CODEOWNERS for changes in providers path,,eladkal,2024-10-26 15:20:43+00:00,[],2024-10-26 20:25:11+00:00,2024-10-26 16:45:12+00:00,https://github.com/apache/airflow/pull/43401,"[('area:dev-tools', '')]","[{'comment_id': 2439725650, 'issue_id': 2615933086, 'author': 'potiuk', 'body': 'NICE!', 'created_at': datetime.datetime(2024, 10, 26, 20, 19, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439726870, 'issue_id': 2615933086, 'author': 'kaxil', 'body': 'Thanks Elad', 'created_at': datetime.datetime(2024, 10, 26, 20, 25, 9, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-26 20:19:36 UTC): NICE!

kaxil on (2024-10-26 20:25:09 UTC): Thanks Elad

"
2615891991,pull_request,closed,,gitSync from multiple git repository or branch,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).


Purpose of the PR : Git-Sync from multiple repo and branch , 
change-list:
- in dags.gitSync , now it is possible to have multiple entries 
- changes in values.schema.json to amend the new schema for dags.gitSync.repositories 
- changes in check-values.yaml to check the below rules 
  - to check if duplicate repo and branch combinations are entered
  - containerName should be unique in values.yaml for every entry in dags.gitSync.repositories
- changes in _helpers.yml ( the helper function ) to accommodate multi-repo settings
- changes in deployment yaml to support multirepo setting 
- changes in dags folder path so that symlink can be created for all repos 
- changes to support known-hosts and sshKey for multiple repos or branchs  

This is a new feature which i have been working , i am ready to co-operate with all test-cases , below are the test cases i have performed 



Test Cases | Expected Behaviour | Result
-- | -- | --
multiple git-repo ( 2 Private and 1 Public ) | gitSync pulling from multiple repo or branch | PASSED
multiple git-repo ( 2 Private with ssh ) | gitSync pulling from multiple repo or branch | PASSED
single git-repo | existing behavior should not be interrupted | PASSED
multiple duplicate entry in repositories section in dags | Should raise error while helm install | PASSED
Known-hosts for all repos | Known-hosts are listed in airflow.cfg for all repos | PASSED

",koustreak,2024-10-26 14:10:33+00:00,[],2024-10-27 05:35:45+00:00,2024-10-27 05:35:45+00:00,https://github.com/apache/airflow/pull/43400,"[('area:helm-chart', 'Airflow Helm Chart')]","[{'comment_id': 2439596296, 'issue_id': 2615891991, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 26, 14, 10, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439605149, 'issue_id': 2615891991, 'author': 'koustreak', 'body': 'i am ready to co-operate with all sorts of help , my next phase planning is - \r\n- change in airflow UI to add two columns , repo name and branch name so that users can understand which dag is from which repo or branch .', 'created_at': datetime.datetime(2024, 10, 26, 14, 38, 10, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-26 14:10:36 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

koustreak (Issue Creator) on (2024-10-26 14:38:10 UTC): i am ready to co-operate with all sorts of help , my next phase planning is - 
- change in airflow UI to add two columns , repo name and branch name so that users can understand which dag is from which repo or branch .

"
2615827031,pull_request,closed,,Fix exception swallowing in Athena and DynamoDB hooks,"This PR improves error handling for DynamoDB and Athena operations by:
1. Removing return in finally blocks to prevent silent exception absorption.
2. Enhancing error logging and re-raising, allowing exceptions to propagate for better debugging.
3. Refining polling logic to handle retries and failure scenarios effectively.

closes: #43274 
Assigned By: @potiuk",Rustix69,2024-10-26 12:20:54+00:00,[],2024-10-26 22:29:34+00:00,2024-10-26 22:29:33+00:00,https://github.com/apache/airflow/pull/43398,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]","[{'comment_id': 2439651413, 'issue_id': 2615827031, 'author': 'Rustix69', 'body': '> Looks good overall, could you please add some unit tests?\r\n\r\nI am beginner in Apache CodeBase, I had written the code but unable to find the reason why few test cases are failing.', 'created_at': datetime.datetime(2024, 10, 26, 16, 46, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439652107, 'issue_id': 2615827031, 'author': 'eladkal', 'body': '> > Looks good overall, could you please add some unit tests?\r\n> \r\n> I am beginner in Apache CodeBase, I had written the code but unable to find the reason why few test cases are failing.\r\n\r\n1 test is failing:\r\nhttps://github.com/apache/airflow/actions/runs/11531791746/job/32105138377#step:7:2095\r\n\r\n```\r\nproviders/tests/amazon/aws/operators/test_athena.py:245: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nairflow/models/baseoperator.py:417: in wrapper\r\n    return func(self, *args, **kwargs)\r\nproviders/src/airflow/providers/amazon/aws/operators/athena.py:158: in execute\r\n    query_status = self.hook.poll_query_status(\r\nproviders/src/airflow/providers/amazon/aws/hooks/athena.py:276: in poll_query_status\r\n    wait(\r\n_ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n...\r\n\r\n>                   raise AirflowException(f""{failure_message}: {error}"")\r\nE                   airflow.exceptions.AirflowException: Error while waiting for query eac29bf8-daa1-4ffc-b19a-0db31dc3b784 to complete: Waiter query_complete failed: An error occurred (UnrecognizedClientException): The security token included in the request is invalid.\r\n\r\nproviders/src/airflow/providers/amazon/aws/utils/waiter_with_logging.py:86: AirflowException\r\n```', 'created_at': datetime.datetime(2024, 10, 26, 16, 47, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439655543, 'issue_id': 2615827031, 'author': 'Rustix69', 'body': '> > > Looks good overall, could you please add some unit tests?\r\n> > \r\n> > \r\n> > I am beginner in Apache CodeBase, I had written the code but unable to find the reason why few test cases are failing.\r\n> \r\n> 1 test is failing: https://github.com/apache/airflow/actions/runs/11531791746/job/32105138377#step:7:2095\r\n> \r\n> ```\r\n> providers/tests/amazon/aws/operators/test_athena.py:245: \r\n> _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n> airflow/models/baseoperator.py:417: in wrapper\r\n>     return func(self, *args, **kwargs)\r\n> providers/src/airflow/providers/amazon/aws/operators/athena.py:158: in execute\r\n>     query_status = self.hook.poll_query_status(\r\n> providers/src/airflow/providers/amazon/aws/hooks/athena.py:276: in poll_query_status\r\n>     wait(\r\n> _ _ _ _ _ _ _ _ _ _ _ _ _\r\n> \r\n> ...\r\n> \r\n> >                   raise AirflowException(f""{failure_message}: {error}"")\r\n> E                   airflow.exceptions.AirflowException: Error while waiting for query eac29bf8-daa1-4ffc-b19a-0db31dc3b784 to complete: Waiter query_complete failed: An error occurred (UnrecognizedClientException): The security token included in the request is invalid.\r\n> \r\n> providers/src/airflow/providers/amazon/aws/utils/waiter_with_logging.py:86: AirflowException\r\n> ```\r\n\r\nThis error is not from my side It may be due to the AWS Credentials. Kindly Guide me with hints of solution.', 'created_at': datetime.datetime(2024, 10, 26, 16, 59, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439664271, 'issue_id': 2615827031, 'author': 'eladkal', 'body': '> This error is not from my side It may be due to the AWS Credentials. Kindly Guide me with hints of solution.\r\n\r\nYour code changes AthenaHook. The only failing test is with `TestAthenaOperator`, it seems related(?)', 'created_at': datetime.datetime(2024, 10, 26, 17, 27, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439667543, 'issue_id': 2615827031, 'author': 'Rustix69', 'body': '> > This error is not from my side It may be due to the AWS Credentials. Kindly Guide me with hints of solution.\r\n> \r\n> Your code changes AthenaHook. The only failing test is with `TestAthenaOperator`, it seems related(?)\r\n\r\nSir its my first contribution I am little bit confused why that test case is failing can you edit the code or give hint and merge the code.', 'created_at': datetime.datetime(2024, 10, 26, 17, 35, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439694749, 'issue_id': 2615827031, 'author': 'Rustix69', 'body': '> > > This error is not from my side It may be due to the AWS Credentials. Kindly Guide me with hints of solution.\r\n> > \r\n> > \r\n> > Your code changes AthenaHook. The only failing test is with `TestAthenaOperator`, it seems related(?)\r\n> \r\n> Sir its my first contribution I am little bit confused why that test case is failing can you edit the code or give hint and merge the code. \r\nPlz Help @potiuk', 'created_at': datetime.datetime(2024, 10, 26, 18, 58, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439720640, 'issue_id': 2615827031, 'author': 'potiuk', 'body': ""> its my first contribution I am little bit confused why that test case is failing can you edit the code or give hint and merge the code.\r\n\r\nNo idea - i do not know that part of the code and it would not scale if I do such thing for every single change. You might want to try to dig-it-up and find out or maybe look at history of changes in the file and try to involve others who contributed there. To be frank, if you can't figure it out, maybe not good idea to look at this ticket and try another one?"", 'created_at': datetime.datetime(2024, 10, 26, 20, 1, 20, tzinfo=datetime.timezone.utc)}]","Rustix69 (Issue Creator) on (2024-10-26 16:46:04 UTC): I am beginner in Apache CodeBase, I had written the code but unable to find the reason why few test cases are failing.

eladkal on (2024-10-26 16:47:51 UTC): 1 test is failing:
https://github.com/apache/airflow/actions/runs/11531791746/job/32105138377#step:7:2095

```
providers/tests/amazon/aws/operators/test_athena.py:245: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
airflow/models/baseoperator.py:417: in wrapper
    return func(self, *args, **kwargs)
providers/src/airflow/providers/amazon/aws/operators/athena.py:158: in execute
    query_status = self.hook.poll_query_status(
providers/src/airflow/providers/amazon/aws/hooks/athena.py:276: in poll_query_status
    wait(
_ _ _ _ _ _ _ _ _ _ _ _ _

...

E                   airflow.exceptions.AirflowException: Error while waiting for query eac29bf8-daa1-4ffc-b19a-0db31dc3b784 to complete: Waiter query_complete failed: An error occurred (UnrecognizedClientException): The security token included in the request is invalid.

providers/src/airflow/providers/amazon/aws/utils/waiter_with_logging.py:86: AirflowException
```

Rustix69 (Issue Creator) on (2024-10-26 16:59:19 UTC): This error is not from my side It may be due to the AWS Credentials. Kindly Guide me with hints of solution.

eladkal on (2024-10-26 17:27:39 UTC): Your code changes AthenaHook. The only failing test is with `TestAthenaOperator`, it seems related(?)

Rustix69 (Issue Creator) on (2024-10-26 17:35:50 UTC): Sir its my first contribution I am little bit confused why that test case is failing can you edit the code or give hint and merge the code.

Rustix69 (Issue Creator) on (2024-10-26 18:58:57 UTC): Plz Help @potiuk

potiuk on (2024-10-26 20:01:20 UTC): No idea - i do not know that part of the code and it would not scale if I do such thing for every single change. You might want to try to dig-it-up and find out or maybe look at history of changes in the file and try to involve others who contributed there. To be frank, if you can't figure it out, maybe not good idea to look at this ticket and try another one?

"
2615800468,pull_request,closed,,Resolved the Bug of Swallow Exceptions,"This PR improves error handling for DynamoDB and Athena operations by:
1. Removing return in finally blocks to prevent silent exception absorption.
2. Enhancing error logging and re-raising, allowing exceptions to propagate for better debugging.
3. Refining polling logic to handle retries and failure scenarios effectively.

closes: #43274 
Assigned By: @potiuk 
",Rustix69,2024-10-26 11:36:34+00:00,[],2024-10-26 12:01:30+00:00,2024-10-26 12:01:30+00:00,https://github.com/apache/airflow/pull/43397,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]",[],
2615761781,pull_request,closed,,AIP-84 Migrate post a connection to FastAPI API,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
closes: #42593


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bugraoz93,2024-10-26 11:02:02+00:00,[],2024-11-05 15:29:18+00:00,2024-11-05 15:29:17+00:00,https://github.com/apache/airflow/pull/43396,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2442499350, 'issue_id': 2615761781, 'author': 'bugraoz93', 'body': '> Should we handle the `password` as well ? How do we plan to set the connection password through the rest api ?\r\n> \r\n> (And check that in the response of the POST it is properly redacted).\r\n> \r\n> ATM this is done trough FAB in the `Adming/Connection` form that allow the `password` field. But this will be removed in airflow 3.0 so we should handle it in the rest API. Also the doc states `password` https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html#operation/post_connection but it was not handled I believe.\r\n\r\nYes, we should. Indeed, the post and the patch include a password. Awesome one! \r\nLet me make this work with the password as well as for the PATCH one. My mind ignored the password in the API. When I see passwords my mind just makes them disappear :smile:', 'created_at': datetime.datetime(2024, 10, 28, 19, 57, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2452697542, 'issue_id': 2615761781, 'author': 'bugraoz93', 'body': 'This still needs some work. I am looking\r\nEdit: depends on the work on #43102', 'created_at': datetime.datetime(2024, 11, 1, 23, 1, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455353442, 'issue_id': 2615761781, 'author': 'pierrejeambrun', 'body': 'We need to rebase to solve conflicts, but ready to merge IMO.', 'created_at': datetime.datetime(2024, 11, 4, 17, 53, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455440998, 'issue_id': 2615761781, 'author': 'bugraoz93', 'body': 'Good to hear that! Rebased and included the field into redact from the other PR comment :)', 'created_at': datetime.datetime(2024, 11, 4, 18, 39, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455618637, 'issue_id': 2615761781, 'author': 'bugraoz93', 'body': 'Something is off with the tests. These should have been caught by the CI/CD already.\r\n`FAILED providers/tests/fab/auth_manager/api_endpoints/test_backfill_endpoint.py`\r\nI think those parts are deleted maybe :thinking: it should be fixed in #43654.', 'created_at': datetime.datetime(2024, 11, 4, 20, 16, 32, tzinfo=datetime.timezone.utc)}]","bugraoz93 (Issue Creator) on (2024-10-28 19:57:07 UTC): Yes, we should. Indeed, the post and the patch include a password. Awesome one! 
Let me make this work with the password as well as for the PATCH one. My mind ignored the password in the API. When I see passwords my mind just makes them disappear :smile:

bugraoz93 (Issue Creator) on (2024-11-01 23:01:34 UTC): This still needs some work. I am looking
Edit: depends on the work on #43102

pierrejeambrun on (2024-11-04 17:53:37 UTC): We need to rebase to solve conflicts, but ready to merge IMO.

bugraoz93 (Issue Creator) on (2024-11-04 18:39:25 UTC): Good to hear that! Rebased and included the field into redact from the other PR comment :)

bugraoz93 (Issue Creator) on (2024-11-04 20:16:32 UTC): Something is off with the tests. These should have been caught by the CI/CD already.
`FAILED providers/tests/fab/auth_manager/api_endpoints/test_backfill_endpoint.py`
I think those parts are deleted maybe :thinking: it should be fixed in #43654.

"
2615744171,pull_request,closed,,[DO NOT MERGE] Testing if pip 24.3 pre-release works with Airflow,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-26 10:37:21+00:00,[],2024-11-01 13:12:09+00:00,2024-10-27 12:41:05+00:00,https://github.com/apache/airflow/pull/43395,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]",[],
2615739393,pull_request,closed,,Add documentation and modify breeze to use uv for pre-commits,"While pre-commit author refuses to add `uv` support, tox developers release a package that patches pre-commit with `uv` support - this should allow to speed up initial installation and upgrade of pre-commit venvs.

Our CI uses breeze-installed uv, rather than pipx installed one, so this PR extends breeze to also install `pre-commit-uv` package, so that UV can be used in CI.

Also documentation was updated to explain how to switch pre-commit installation to be able to use `uv` for the venvs.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-26 10:27:26+00:00,[],2024-10-26 20:46:15+00:00,2024-10-26 19:56:58+00:00,https://github.com/apache/airflow/pull/43394,"[('area:dev-tools', '')]","[{'comment_id': 2439730222, 'issue_id': 2615739393, 'author': 'potiuk', 'body': '> Very cool! Will this save a few seconds in CI as well?\r\n\r\nShould - in a number of cases - depending on whether cache was used or not. But in some it won\'t. \r\n\r\nThe actual answer to that is pretty complex and I still am not sure if I know all the cases.\r\n\r\nFor locally installing pre-commits for the first time (or after you run `pre-commit clean`), it should definitely speed up installation - as it will use uv to install all the venvs.\r\n\r\nIn CI we already used cache, so it would save some more time when deps are changing for ""canary"" builds - where generally cache is reused from past builds. \r\n\r\nBut the saving is not that obvious in all cases - uv has its own cache and we are not storing it separately as uv cache is generally quite huge and storing it in cache / restoring it in gh actions would add an overhead, and in most cases ""installed packages"" serve as cache as well (so we would have mutliple versions of the cache at several layers restored from the cache before it runs)\r\n\r\nGenerally it should speed up situation where cache is not used, but savings should be less where cache is used - unless we haevily change some pre-commit dependencies that will invalidate most of the venvs in the cache.\r\n\r\nBut the way cache is used in PRs from fork is somewhat complex when PRs from forks and multiple branches are involved.  See https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/caching-dependencies-to-speed-up-workflows#restrictions-for-accessing-a-cache - I am not 100% sure how it works in all cases, but in general for sure cache is shared between multiple runs of the same PR (i.e. when you rebase) - but cache is not shared from main to a fork-PR. But cache is shared with a PR from apache repo AFAIK.\r\n\r\n\r\nDid I mention that caching is hard?', 'created_at': datetime.datetime(2024, 10, 26, 20, 40, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439731724, 'issue_id': 2615739393, 'author': 'potiuk', 'body': 'It is a bit 🤯', 'created_at': datetime.datetime(2024, 10, 26, 20, 46, 13, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-26 20:40:31 UTC): Should - in a number of cases - depending on whether cache was used or not. But in some it won't. 

The actual answer to that is pretty complex and I still am not sure if I know all the cases.

For locally installing pre-commits for the first time (or after you run `pre-commit clean`), it should definitely speed up installation - as it will use uv to install all the venvs.

In CI we already used cache, so it would save some more time when deps are changing for ""canary"" builds - where generally cache is reused from past builds. 

But the saving is not that obvious in all cases - uv has its own cache and we are not storing it separately as uv cache is generally quite huge and storing it in cache / restoring it in gh actions would add an overhead, and in most cases ""installed packages"" serve as cache as well (so we would have mutliple versions of the cache at several layers restored from the cache before it runs)

Generally it should speed up situation where cache is not used, but savings should be less where cache is used - unless we haevily change some pre-commit dependencies that will invalidate most of the venvs in the cache.

But the way cache is used in PRs from fork is somewhat complex when PRs from forks and multiple branches are involved.  See https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/caching-dependencies-to-speed-up-workflows#restrictions-for-accessing-a-cache - I am not 100% sure how it works in all cases, but in general for sure cache is shared between multiple runs of the same PR (i.e. when you rebase) - but cache is not shared from main to a fork-PR. But cache is shared with a PR from apache repo AFAIK.


Did I mention that caching is hard?

potiuk (Issue Creator) on (2024-10-26 20:46:13 UTC): It is a bit 🤯

"
2615693206,pull_request,closed,,Upgrade statsd image in k8s to latest version,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-26 09:36:41+00:00,[],2024-11-18 07:06:04+00:00,2024-10-26 10:56:55+00:00,https://github.com/apache/airflow/pull/43393,"[('area:helm-chart', 'Airflow Helm Chart')]",[],
2615680349,pull_request,closed,,"add min version to types- paramiko, protobuf, python-dateutil, slugify","Adding min versions as mentioned below:

1. types-paramiko>=3.4.0.20240423 (Released in April 2024)
2. types-protobuf>=5.26.0.20240422 (Released in April 2024)
3. types-python-dateutil>=2.9.0.20240316 (Released in March 2024)
4. types-python-slugify>=8.0.2.20240310 (Released in March 2024)


related to #42989",rawwar,2024-10-26 09:11:04+00:00,[],2024-10-26 15:12:12+00:00,2024-10-26 15:12:12+00:00,https://github.com/apache/airflow/pull/43392,[],[],
2615640429,pull_request,closed,,Add BigQuerySqlToGCSOperator operator,"This PR adds an operator for exporting from Google BigQuery's SQL result into Google Cloud Storage.

The original ‎[BigQueryToGCSOperator‎](https://github.com/apache/airflow/blob/main/providers/src/airflow/providers/google/cloud/transfers/bigquery_to_gcs.py) allows only full table movement, since is based on [insert job](https://github.com/apache/airflow/blob/f80233054c204eace74d54a90e5ae517a8548922/providers/src/airflow/providers/google/cloud/hooks/bigquery.py#L1644C9-L1644C19), which has no options to pass query.

To simplify the interface of the task (switching cases of full/sql exporting modes), the SQL-based case of BQ->GCS job is implemented as a separate one.

The exporting format might be different for BQ for different cases, so the `field_to_bigquery` and `convert_type` methods are implemented as easy overridable. The default output format is made to manual saving of BQ's result as local file.

For example, for the query:
```sql
SELECT
True as _BOOL,
CODE_POINTS_TO_BYTES([65, 98, 67, 100]) as _BYTES,
DATE('0001-01-01') as _DATE,
DATETIME('0001-01-01 00:00:00') as _DATETIME,
JSON '{""id"": 10,""type"": ""fruit"",""name"": ""apple"",""on_menu"": true,""recipes"":{""salads"":[{ ""id"": 2001, ""type"": ""Walnut Apple Salad"" },{ ""id"": 2002, ""type"": ""Apple Spinach Salad"" }],""desserts"":[{ ""id"": 3001, ""type"": ""Apple Pie"" },{ ""id"": 3002, ""type"": ""Apple Scones"" },{ ""id"": 3003, ""type"": ""Apple Crumble"" }]}}' as _JSON,
-9223372036854775808 as _INT64,
cast(-9.9999999999999999999999999999999999999E+28 as NUMERIC) as _NUMERIC,
cast(-5.7896044618658097711785492504343953926634992332820282019728792003956564819968E+38 as BIGNUMERIC) as _BIGNUMERIC,
1.0 as _FLOAT64,
""str"" as _STRING,
TIME '12:30:00.45' as _TIME,
TIMESTAMP '2014-09-27 12:30:00.45-08' as _TIMESTAMP
```

The `BigQueryToGCSOperator` output (exported as a table):
```
_BOOL,_BYTES,_DATE,_DATETIME,_JSON,_INT64,_NUMERIC,_BIGNUMERIC,_FLOAT64,_STRING,_TIME,_TIMESTAMP
true,QWJDZA==,0001-01-01,0001-01-01 00:00:00,""{""""id"""":10,""""name"""":""""apple"""",""""on_menu"""":true,""""recipes"""":{""""desserts"""":[{""""id"""":3001,""""type"""":""""Apple Pie""""},{""""id"""":3002,""""type"""":""""Apple Scones""""},{""""id"""":3003,""""type"""":""""Apple Crumble""""}],""""salads"""":[{""""id"""":2001,""""type"""":""""Walnut Apple Salad""""},{""""id"""":2002,""""type"""":""""Apple Spinach Salad""""}]},""""type"""":""""fruit""""}"",-9223372036854775808,-99999999999999999999999999999.999999999,-578960446186580977117854925043439539266.34992332820282019728792003956564819968,1,str,12:30:00.450,2014-09-27 20:30:00.45 UTC
```

The cloud console's saving to file result (exported as query result):
```
_BOOL,_BYTES,_DATE,_DATETIME,_JSON,_INT64,_NUMERIC,_BIGNUMERIC,_FLOAT64,_STRING,_TIME,_TIMESTAMP
true,QWJDZA==,0001-01-01,0001-01-01T00:00:00,""{""""id"""":10,""""name"""":""""apple"""",""""on_menu"""":true,""""recipes"""":{""""desserts"""":[{""""id"""":3001,""""type"""":""""Apple Pie""""},{""""id"""":3002,""""type"""":""""Apple Scones""""},{""""id"""":3003,""""type"""":""""Apple Crumble""""}],""""salads"""":[{""""id"""":2001,""""type"""":""""Walnut Apple Salad""""},{""""id"""":2002,""""type"""":""""Apple Spinach Salad""""}]},""""type"""":""""fruit""""}"",-9223372036854775808,-99999999999999999999999999999.999999999,-578960446186580977117854925043439539266.34992332820282019728792003956564819968,1.0,str,12:30:00.450000,2014-09-27 20:30:00.450000 UTC
```

The result of new `BigQuerySqlToGCSOperator` (with default `field_to_bigquery` and `convert_type` methods) is:
```
_BOOL,_BYTES,_DATE,_DATETIME,_JSON,_INT64,_NUMERIC,_BIGNUMERIC,_FLOAT64,_STRING,_TIME,_TIMESTAMP
true,QWJDZA==,0001-01-01,0001-01-01T00:00:00,""{""""id"""":10,""""name"""":""""apple"""",""""on_menu"""":true,""""recipes"""":{""""desserts"""":[{""""id"""":3001,""""type"""":""""Apple Pie""""},{""""id"""":3002,""""type"""":""""Apple Scones""""},{""""id"""":3003,""""type"""":""""Apple Crumble""""}],""""salads"""":[{""""id"""":2001,""""type"""":""""Walnut Apple Salad""""},{""""id"""":2002,""""type"""":""""Apple Spinach Salad""""}]},""""type"""":""""fruit""""}"",-9223372036854775808,-99999999999999999999999999999.999999999,-578960446186580977117854925043439539266.34992332820282019728792003956564819968,1.0,str,12:30:00.450000,2014-09-27 20:30:00.450000 UTC
```

Since usage of `schema` is property simplifies formatting of the output data, but might be defined only at the moment of query execution - this property behaves overridable also, to let user decide if it is ok or not to change the property's value on a fly.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",VVildVVolf,2024-10-26 07:51:42+00:00,[],2024-10-27 01:53:50+00:00,2024-10-27 01:53:50+00:00,https://github.com/apache/airflow/pull/43391,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2439748416, 'issue_id': 2615640429, 'author': 'raphaelauv', 'body': ""why don't you use the  `BigQueryInsertJobOperator` and a SQL query of type `EXPORT DATA` ?\r\n\r\nhttps://cloud.google.com/bigquery/docs/exporting-data#sql"", 'created_at': datetime.datetime(2024, 10, 26, 21, 58, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439799932, 'issue_id': 2615640429, 'author': 'VVildVVolf', 'body': 'Thanks @raphaelauv for pointing. It might be not so flexible, but majority of cases should cover.', 'created_at': datetime.datetime(2024, 10, 27, 1, 53, 50, tzinfo=datetime.timezone.utc)}]","raphaelauv on (2024-10-26 21:58:39 UTC): why don't you use the  `BigQueryInsertJobOperator` and a SQL query of type `EXPORT DATA` ?

https://cloud.google.com/bigquery/docs/exporting-data#sql

VVildVVolf (Issue Creator) on (2024-10-27 01:53:50 UTC): Thanks @raphaelauv for pointing. It might be not so flexible, but majority of cases should cover.

"
2615418952,pull_request,closed,,"add min version to types- aiofiles, certifi, crontier, docutils","Adding min versions as mentioned below:
1. types-aiofiles>=23.2.0.20240403(Released in April 2024)
2. types-certifi>=2021.10.8.3(Released in June 2022. This is the latest)
3. types-croniter>=2.0.0.20240423(Released in April 2024)
4. types-docutils>=0.21.0.20240704(Released in July 2024)

related to #42989 ",rawwar,2024-10-26 00:58:16+00:00,[],2024-10-26 07:35:22+00:00,2024-10-26 07:35:22+00:00,https://github.com/apache/airflow/pull/43390,[],[],
2615312573,pull_request,closed,,"Fix duplicated otel_* options in metrics, update traces formatting, and add deprecated entries","**Fixes #43366**: Remove duplicated `otel_*` options from metrics, update traces formatting, and add deprecated entries.

### Description of Changes
- **Removed Duplicated Options**: The following `otel_*` options were removed from the `[metrics]` section in `config.yml`:
  - `otel_debugging_on`
  - `otel_host`
  - `otel_on`
  - `otel_port`
  - `otel_ssl_active`
  
- **Formatting Update in Traces Section**: Improved markdown consistency in the `[traces]` section for better documentation clarity.

- **Deprecated Options Added**: Added `otel_*` options to the deprecated list in `configuration.py`, directing users to the correct `[traces]` section options.",InderParmar,2024-10-25 22:55:17+00:00,[],2024-12-19 00:16:14+00:00,2024-12-19 00:16:13+00:00,https://github.com/apache/airflow/pull/43389,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file')]","[{'comment_id': 2439002898, 'issue_id': 2615312573, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 25, 22, 55, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439753695, 'issue_id': 2615312573, 'author': 'potiuk', 'body': 'Tests failing', 'created_at': datetime.datetime(2024, 10, 26, 22, 21, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442993864, 'issue_id': 2615312573, 'author': 'InderParmar', 'body': '@potiuk , I removed duplicate otel_* options from the [metrics] section in airflow.cfg, specifically otel_debugging_on, otel_host, otel_on, otel_port, and otel_ssl_active. Additionally, I improved formatting in the [traces] section for clarity and marked otel_* options as deprecated in configuration.py to guide users toward the updated [traces] section options. However, tests are still failing, potentially indicating deeper dependencies or parsing issues beyond these changes. Could I get feedback on any overlooked dependencies or configuration specifics that may be causing this?\r\nAlso, I am looking into the issue and trying to resolve it.', 'created_at': datetime.datetime(2024, 10, 29, 1, 44, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2542578790, 'issue_id': 2615312573, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 12, 14, 0, 16, 8, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-25 22:55:20 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-10-26 22:21:53 UTC): Tests failing

InderParmar (Issue Creator) on (2024-10-29 01:44:45 UTC): @potiuk , I removed duplicate otel_* options from the [metrics] section in airflow.cfg, specifically otel_debugging_on, otel_host, otel_on, otel_port, and otel_ssl_active. Additionally, I improved formatting in the [traces] section for clarity and marked otel_* options as deprecated in configuration.py to guide users toward the updated [traces] section options. However, tests are still failing, potentially indicating deeper dependencies or parsing issues beyond these changes. Could I get feedback on any overlooked dependencies or configuration specifics that may be causing this?
Also, I am looking into the issue and trying to resolve it.

github-actions[bot] on (2024-12-14 00:16:08 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2615165764,pull_request,closed,,prevent out of index error in getDagRunLabel function,"related: https://github.com/apache/airflow/pull/43148
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-10-25 21:28:29+00:00,[],2024-10-26 21:18:59+00:00,2024-10-26 21:18:59+00:00,https://github.com/apache/airflow/pull/43388,"[('area:webserver', 'Webserver related Issues'), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('legacy ui', 'Whether legacy UI change should be allowed in PR')]",[],
2615069853,pull_request,closed,,Remove direction to update provider.yaml for breaking changes,"The directions in 11_provider_packages.rst stated the version in provider.yml should be updated when a breaking change was made. In actuality, the versions are maintained by the release manager and should not be updated. This PR updates the directions to match current practices.",perry2of5,2024-10-25 20:43:40+00:00,[],2024-10-25 20:50:32+00:00,2024-10-25 20:48:15+00:00,https://github.com/apache/airflow/pull/43387,"[('area:dev-tools', '')]","[{'comment_id': 2438760491, 'issue_id': 2615069853, 'author': 'perry2of5', 'body': 'As requested, @potiuk!', 'created_at': datetime.datetime(2024, 10, 25, 20, 44, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438770476, 'issue_id': 2615069853, 'author': 'potiuk', 'body': 'NICE! Thank you !', 'created_at': datetime.datetime(2024, 10, 25, 20, 48, 1, tzinfo=datetime.timezone.utc)}]","perry2of5 (Issue Creator) on (2024-10-25 20:44:42 UTC): As requested, @potiuk!

potiuk on (2024-10-25 20:48:01 UTC): NICE! Thank you !

"
2614957498,pull_request,closed,,Bump uv to ``0.4.27``,"https://pypi.org/project/uv/0.4.27/

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-25 19:37:14+00:00,[],2024-10-25 21:16:58+00:00,2024-10-25 20:48:00+00:00,https://github.com/apache/airflow/pull/43386,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]","[{'comment_id': 2438668897, 'issue_id': 2614957498, 'author': 'potiuk', 'body': 'Renamed the title to use `uv` instead of `ruff` :) - but when merging it might come back from the commit (just watch-out to update it when merging)', 'created_at': datetime.datetime(2024, 10, 25, 19, 44, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438779711, 'issue_id': 2614957498, 'author': 'potiuk', 'body': 'AAAND we have ""dependency groups"" support in (https://peps.python.org/pep-0735/)', 'created_at': datetime.datetime(2024, 10, 25, 20, 50, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438888387, 'issue_id': 2614957498, 'author': 'kaxil', 'body': '> AAAND we have ""dependency groups"" support in (https://peps.python.org/pep-0735/)\r\n\r\nYup, lol, the timing of your comment here and [my Slack message](https://apache-airflow.slack.com/archives/C06K9Q5G2UA/p1729889456191669) is almost the same.', 'created_at': datetime.datetime(2024, 10, 25, 21, 16, 56, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-25 19:44:11 UTC): Renamed the title to use `uv` instead of `ruff` :) - but when merging it might come back from the commit (just watch-out to update it when merging)

potiuk on (2024-10-25 20:50:46 UTC): AAAND we have ""dependency groups"" support in (https://peps.python.org/pep-0735/)

kaxil (Issue Creator) on (2024-10-25 21:16:56 UTC): Yup, lol, the timing of your comment here and [my Slack message](https://apache-airflow.slack.com/archives/C06K9Q5G2UA/p1729889456191669) is almost the same.

"
2614682663,pull_request,closed,,Provide default for EXCLUDED_PROVIDERS lookup.,"The current code throws a KeyError when the environment variable EXCLUDED_PROVIDERS is not defined. This commit adds an empty map as a default to prevent this failure.


This was discovered while trying to replicate the issue with microsoft-kiota-http logged here:
https://github.com/microsoftgraph/msgraph-sdk-python-core/issues/706


> breeze testing tests --force-lowest-dependencies --test-type ""Providers[microsoft.azure]""

### Before:
Forcing dependencies to lowest versions for provider: [microsoft-azure]

Traceback (most recent call last):
  File ""/opt/airflow/scripts/in_container/is_provider_excluded.py"", line 26, in <module>
    excluded_providers = json.loads(os.environ[""EXCLUDED_PROVIDERS""])
  File ""/usr/local/lib/python3.9/os.py"", line 679, in __getitem__
    raise KeyError(key) from None
KeyError: 'EXCLUDED_PROVIDERS'

### After:
Forcing dependencies to lowest versions for provider: [microsoft-azure]

Check if provider  is excluded in {}
Provider  is not excluded.",perry2of5,2024-10-25 17:12:30+00:00,[],2024-10-25 17:25:43+00:00,2024-10-25 17:24:10+00:00,https://github.com/apache/airflow/pull/43385,"[('area:dev-tools', '')]","[{'comment_id': 2438381025, 'issue_id': 2614682663, 'author': 'perry2of5', 'body': ""I don't recall requesting a review (although it seems reasonable). Is that an automated GitHub action? If so, it shouldn't show up as being from me!"", 'created_at': datetime.datetime(2024, 10, 25, 17, 15, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438399569, 'issue_id': 2614682663, 'author': 'potiuk', 'body': ""> I don't recall requesting a review (although it seems reasonable). Is that an automated GitHub action? If so, it shouldn't show up as being from me!\r\n\r\nIt is how CODEOWNERS work"", 'created_at': datetime.datetime(2024, 10, 25, 17, 24, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438400697, 'issue_id': 2614682663, 'author': 'perry2of5', 'body': ""Oh, okay. I didn't know about CODEOWNERS! Thank you."", 'created_at': datetime.datetime(2024, 10, 25, 17, 25, 22, tzinfo=datetime.timezone.utc)}]","perry2of5 (Issue Creator) on (2024-10-25 17:15:01 UTC): I don't recall requesting a review (although it seems reasonable). Is that an automated GitHub action? If so, it shouldn't show up as being from me!

potiuk on (2024-10-25 17:24:45 UTC): It is how CODEOWNERS work

perry2of5 (Issue Creator) on (2024-10-25 17:25:22 UTC): Oh, okay. I didn't know about CODEOWNERS! Thank you.

"
2614665798,pull_request,closed,,Fix pytests for Edge Worker in backcompat tests,"Fix pytests failing (sometimes?) in canary / Non DB Tests: 
https://github.com/apache/airflow/actions/runs/11519239033/job/32068260767",jscheffl,2024-10-25 17:05:24+00:00,[],2024-10-25 19:27:54+00:00,2024-10-25 19:27:54+00:00,https://github.com/apache/airflow/pull/43384,"[('area:providers', '')]",[],
2614489478,pull_request,closed,,refactor(utils/decorators): rewrite remove task decorator to use cst,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
due to #42766 the dropping of python3.8 support, I rewrite the  `remove_task_decorator` to achieve the same purpose through CST.

TODO:
- [x] implementation
- [x] update unit tests

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",josix,2024-10-25 15:51:24+00:00,[],2025-02-07 03:23:32+00:00,2025-02-07 03:23:32+00:00,https://github.com/apache/airflow/pull/43383,[],"[{'comment_id': 2615771907, 'issue_id': 2614489478, 'author': 'josix', 'body': ""Hi @potiuk @Lee-W sorry for waiting for a period of time, I've updated to use libcst version to remove the task decorators. Please take a look when you are available, thanks!"", 'created_at': datetime.datetime(2025, 1, 27, 13, 31, 28, tzinfo=datetime.timezone.utc)}]","josix (Issue Creator) on (2025-01-27 13:31:28 UTC): Hi @potiuk @Lee-W sorry for waiting for a period of time, I've updated to use libcst version to remove the task decorators. Please take a look when you are available, thanks!

"
2614334554,pull_request,closed,,Add reprocessing behavior for backfill,"User can decide whether we should create a new run or not when a run already exists. For now, we just look at the latest instance of the by start date. If it's in flight we do not create.  If it's done, we may or may not create depending on state and desired reprocessing behavior.

There are three options for reprocessing behavior:
1. none
  - if there's already a run for this logical date, do not create another, no matter the state
2. failed
  - if a run exists, if the state is failed, create a new run for this date
3. completed
  - if a run exists, if the state is completed or failed, create a new run for this date

If the latest run is still running or is queued, we do not create another run, no matter the chosen reprocessing behavior.
",dstandish,2024-10-25 14:51:47+00:00,[],2024-10-28 20:43:37+00:00,2024-10-28 20:43:35+00:00,https://github.com/apache/airflow/pull/43382,"[('kind:documentation', ''), ('area:db-migrations', 'PRs with DB migration'), ('legacy ui', 'Whether legacy UI change should be allowed in PR'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2439607671, 'issue_id': 2614334554, 'author': 'dstandish', 'body': 'Alright this should be good to go.  Think I have it to pretty stable place / sensible behavior.', 'created_at': datetime.datetime(2024, 10, 26, 14, 48, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439734123, 'issue_id': 2614334554, 'author': 'dstandish', 'body': ""> I don't know if I asked before... no API changes on FastAPI? Still building this function on the legacy API which should go away?\r\n\r\nthe project began before the new API was there and i just wanted to focus on finishing the AIP.  we will need to migrate it.  also, from looking at some of the migrated routes i'm not sure if the security part of things has been figured out yet either."", 'created_at': datetime.datetime(2024, 10, 26, 20, 57, 4, tzinfo=datetime.timezone.utc)}]","dstandish (Issue Creator) on (2024-10-26 14:48:37 UTC): Alright this should be good to go.  Think I have it to pretty stable place / sensible behavior.

dstandish (Issue Creator) on (2024-10-26 20:57:04 UTC): the project began before the new API was there and i just wanted to focus on finishing the AIP.  we will need to migrate it.  also, from looking at some of the migrated routes i'm not sure if the security part of things has been figured out yet either.

"
2614216400,pull_request,closed,,Ensure that logging tests don't depend on how pytest is run,"If you use the `-s`/`--capture=no` then stdout is a tty, and the tests start
failing as the `record.args` gets modified to contain color escape codes

`pytest tests/models/test_dag.py::test_iter_dagrun_infos_between_error` passed
`pytest -s tests/models/test_dag.py::test_iter_dagrun_infos_between_error` failed

This uses the existing helpers we've got to ensure that it always passes

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",ashb,2024-10-25 14:06:49+00:00,[],2024-10-25 20:15:50+00:00,2024-10-25 15:35:26+00:00,https://github.com/apache/airflow/pull/43380,[],"[{'comment_id': 2438715734, 'issue_id': 2614216400, 'author': 'potiuk', 'body': 'Nice!', 'created_at': datetime.datetime(2024, 10, 25, 20, 15, 49, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-25 20:15:49 UTC): Nice!

"
2613608968,pull_request,closed,,Ensure total_entries in /api/v1/dags,"Ensures that ""total_entries"" is present in the API response of `/api/v1/dags` even if a `fields` filter is specified. Due to the enforced paging characteristic of the end-points, retrieving a field restricted response without a ""total_entries"" is of little use; this also aligns the behaviour with `/api/v1/dags/~/dagRuns`.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",xitep,2024-10-25 09:42:19+00:00,[],2024-10-28 08:29:34+00:00,2024-10-28 08:29:25+00:00,https://github.com/apache/airflow/pull/43377,"[('area:API', ""Airflow's REST/HTTP API""), ('type:bug-fix', 'Changelog: Bug Fixes'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2437349347, 'issue_id': 2613608968, 'author': 'xitep', 'body': ""i can't find the right place to write a unit test for this. any hints?"", 'created_at': datetime.datetime(2024, 10, 25, 9, 42, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2437463539, 'issue_id': 2613608968, 'author': 'xitep', 'body': ""> Please ask maintainer to assign the 'legacy api' label to the PR in order to continue\r\n\r\n:pray:"", 'created_at': datetime.datetime(2024, 10, 25, 10, 43, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2437631937, 'issue_id': 2613608968, 'author': 'pierrejeambrun', 'body': 'Hello,\r\n\r\nTests for this file are located in `test_dag_endpoint.py`.', 'created_at': datetime.datetime(2024, 10, 25, 12, 17, 44, tzinfo=datetime.timezone.utc)}]","xitep (Issue Creator) on (2024-10-25 09:42:45 UTC): i can't find the right place to write a unit test for this. any hints?

xitep (Issue Creator) on (2024-10-25 10:43:45 UTC): :pray:

pierrejeambrun on (2024-10-25 12:17:44 UTC): Hello,

Tests for this file are located in `test_dag_endpoint.py`.

"
2613427677,pull_request,closed,,Improve the cursor type definition of mysql ,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
This PR will improve the cursor type definition of mysql hooks code in `hooks/mysql.py`.
<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",yangyulely,2024-10-25 08:21:24+00:00,[],2024-10-28 02:45:35+00:00,2024-10-25 10:51:48+00:00,https://github.com/apache/airflow/pull/43376,"[('area:providers', ''), ('provider:mysql', '')]",[],
2613207299,pull_request,closed,,EdgeWorker support log file upload in chunks,"# Description

If Firewall checks for max request sizem, Edge Worker can not push log files without running into an Exception. This PR adds the feature to split log file upload into different chunks if max log file chunk size limit was reached.

# Details about changes

* Add new config value which defined max chunk size. push_log_chunk_size
* If push_log_chunk_size value exceeds then upload split rest of log file into new request.
",AutomationDev85,2024-10-25 06:26:55+00:00,[],2024-10-25 20:32:05+00:00,2024-10-25 08:53:04+00:00,https://github.com/apache/airflow/pull/43374,"[('area:providers', '')]","[{'comment_id': 2437248536, 'issue_id': 2613207299, 'author': 'jscheffl', 'body': 'Thanks for the improvements! That sounds reasonable to add.', 'created_at': datetime.datetime(2024, 10, 25, 8, 52, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438566092, 'issue_id': 2613207299, 'author': 'potiuk', 'body': ""Nice. Good one. There are few small things though for the future @AutomationDev85  (and @jscheffl ) - as written at the top of provider.yaml - we usually increment versions and add release notes by the relase manager - not in the PR, mainly because release manager can take decision on how it should be bumped. (MAJOR/MINOR/PATCHELEVEL) - based on all the changes between last release and new.\r\n\r\nThis is less of a concern for this pre-release provider, but would be good to keep it - especially removal of previous version is a bit concerning - we usually don't do it, and it makes it a possibility that it will break our automation around releases (but I think in  case of pre-release version it's not that important)"", 'created_at': datetime.datetime(2024, 10, 25, 18, 37, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438650750, 'issue_id': 2613207299, 'author': 'jscheffl', 'body': '> Nice. Good one. There are few small things though for the future @AutomationDev85 (and @jscheffl ) - as written at the top of provider.yaml - we usually increment versions and add release notes by the relase manager - not in the PR, mainly because release manager can take decision on how it should be bumped. (MAJOR/MINOR/PATCHELEVEL) - based on all the changes between last release and new.\r\n> \r\n> This is less of a concern for this pre-release provider, but would be good to keep it - especially removal of previous version is a bit concerning - we usually don\'t do it, and it makes it a possibility that it will break our automation around releases (but I think in case of pre-release version it\'s not that important)\r\n\r\nYes, I also thought about it. At the moment it is pre-release... and if you noticed the cadence... we have some contributions as we are moving this new provider to production and by every-day usage we try to harden.\r\n\r\nI\'d propose to continue like this - once we start a ""real release cadence"" then we must leave this to release manager. If anything breaks in release automation we will stop of course.', 'created_at': datetime.datetime(2024, 10, 25, 19, 32, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438743384, 'issue_id': 2613207299, 'author': 'potiuk', 'body': '> I\'d propose to continue like this - once we start a ""real release cadence"" then we must leave this to release manager. If anything breaks in release automation we will stop of course.\r\n\r\nI am fine. But I guess we\'ll have to get @eladkal be aware of it and possibly fix any issues quickly :)', 'created_at': datetime.datetime(2024, 10, 25, 20, 32, 4, tzinfo=datetime.timezone.utc)}]","jscheffl on (2024-10-25 08:52:59 UTC): Thanks for the improvements! That sounds reasonable to add.

potiuk on (2024-10-25 18:37:44 UTC): Nice. Good one. There are few small things though for the future @AutomationDev85  (and @jscheffl ) - as written at the top of provider.yaml - we usually increment versions and add release notes by the relase manager - not in the PR, mainly because release manager can take decision on how it should be bumped. (MAJOR/MINOR/PATCHELEVEL) - based on all the changes between last release and new.

This is less of a concern for this pre-release provider, but would be good to keep it - especially removal of previous version is a bit concerning - we usually don't do it, and it makes it a possibility that it will break our automation around releases (but I think in  case of pre-release version it's not that important)

jscheffl on (2024-10-25 19:32:48 UTC): Yes, I also thought about it. At the moment it is pre-release... and if you noticed the cadence... we have some contributions as we are moving this new provider to production and by every-day usage we try to harden.

I'd propose to continue like this - once we start a ""real release cadence"" then we must leave this to release manager. If anything breaks in release automation we will stop of course.

potiuk on (2024-10-25 20:32:04 UTC): I am fine. But I guess we'll have to get @eladkal be aware of it and possibly fix any issues quickly :)

"
2613120494,pull_request,closed,,add migration file to rename dag_schedule_dataset_alias_reference constraint typo,"## Why

as discussed in https://github.com/apache/airflow/pull/43314#issuecomment-2435932918, directly changing the migration content might be risky

## What
Create a new migration file for the constraint naming fixing

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-10-25 05:34:51+00:00,['Lee-W'],2024-10-28 06:21:24+00:00,2024-10-28 00:47:55+00:00,https://github.com/apache/airflow/pull/43373,"[('kind:documentation', ''), ('area:db-migrations', 'PRs with DB migration')]",[],
2613087444,pull_request,closed,,ci(pre-commit): migrate pre-commit config,"We update the names of the pre-commit stages. From the https://pre-commit.com/#confining-hooks-to-run-at-certain-stages:

> new in 3.2.0: The values of stages match the hook names. Previously, commit, push, and merge-commit matched pre-commit, pre-push, and pre-merge-commit respectively.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-10-25 05:05:22+00:00,[],2024-10-28 08:12:12+00:00,2024-10-25 16:33:17+00:00,https://github.com/apache/airflow/pull/43372,"[('area:dev-tools', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]","[{'comment_id': 2438278494, 'issue_id': 2613087444, 'author': 'potiuk', 'body': 'I added the description in the commit @Lee-W -> why we are doing it (also updated it in the PR description for posterity)', 'created_at': datetime.datetime(2024, 10, 25, 16, 33, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439236077, 'issue_id': 2613087444, 'author': 'Lee-W', 'body': '> I added the description in the commit @Lee-W -> why we are doing it (also updated it in the PR description for posterity)\r\n\r\nThanks!', 'created_at': datetime.datetime(2024, 10, 26, 3, 30, 19, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-25 16:33:54 UTC): I added the description in the commit @Lee-W -> why we are doing it (also updated it in the PR description for posterity)

Lee-W (Issue Creator) on (2024-10-26 03:30:19 UTC): Thanks!

"
2612939663,pull_request,closed,,"add min version to types- deprecated, markdown, pymysql, pyyaml","Adding min versions as mentioned below:

1. types-Deprecated>=1.2.9.20240311 (Released In March 2024 and is the latest. Prior version in Jan 2024)
2. types-Markdown>=3.6.0.20240316 (Released in March 2024(not the latest release), Prior version was also released in March)
3. types-PyMySQL>=1.1.0.20240425 (Released in April 2024. Prior version released in July 2023)
4. types-PyYAML>=6.0.12.20240724(Released in July 2024. Prior version released in March 2024)


Related to #42989",rawwar,2024-10-25 02:52:01+00:00,[],2024-10-26 00:36:43+00:00,2024-10-25 15:29:54+00:00,https://github.com/apache/airflow/pull/43371,[],[],
2612702209,pull_request,closed,,Add context to Azure Service Bus Message callback,"The original callback only took the message as a parameter. However, users may want to push status or location information into XComs and so callbacks need access to the context (or the XComs, but context is more general). This commit changes the code to pass the context.

NOTE: This is a **BREAKING CHANGE**.

Closes #43361",perry2of5,2024-10-24 22:56:46+00:00,[],2024-10-28 16:13:37+00:00,2024-10-26 21:32:54+00:00,https://github.com/apache/airflow/pull/43370,"[('provider:microsoft-azure', 'Azure-related issues'), ('area:providers', '')]","[{'comment_id': 2438361013, 'issue_id': 2612702209, 'author': 'potiuk', 'body': '> NOTE: This is a **BREAKING CHANGE**.\r\n\r\nIndeed. Can you please add a note on top of the changelog for the provider explaining the breaking change and what the users should do to switch?', 'created_at': datetime.datetime(2024, 10, 25, 17, 8, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438399082, 'issue_id': 2612702209, 'author': 'perry2of5', 'body': 'Added note. Thanks for letting me know what to do.', 'created_at': datetime.datetime(2024, 10, 25, 17, 24, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438567782, 'issue_id': 2612702209, 'author': 'perry2of5', 'body': 'Hmmm...the contributing guide says ""update the provider.yaml file with the new (breaking) version of the provider"", but the provider.yaml says ""note that those versions are maintained by release manager - do not update them manually"". I assume I don\'t need to change provider.yaml and that putting my comment about the breaking change in the PR is enough. Is that true?', 'created_at': datetime.datetime(2024, 10, 25, 18, 38, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438737708, 'issue_id': 2612702209, 'author': 'potiuk', 'body': 'Yes. No need to update versions, just update changelog - and any clarifications in our contributing docs are also very good contributions (just saying!)', 'created_at': datetime.datetime(2024, 10, 25, 20, 29, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439036737, 'issue_id': 2612702209, 'author': 'perry2of5', 'body': 'Built provider locally and tested end-to-end in flow. Everything worked as expected.', 'created_at': datetime.datetime(2024, 10, 25, 23, 24, 31, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-25 17:08:51 UTC): Indeed. Can you please add a note on top of the changelog for the provider explaining the breaking change and what the users should do to switch?

perry2of5 (Issue Creator) on (2024-10-25 17:24:28 UTC): Added note. Thanks for letting me know what to do.

perry2of5 (Issue Creator) on (2024-10-25 18:38:50 UTC): Hmmm...the contributing guide says ""update the provider.yaml file with the new (breaking) version of the provider"", but the provider.yaml says ""note that those versions are maintained by release manager - do not update them manually"". I assume I don't need to change provider.yaml and that putting my comment about the breaking change in the PR is enough. Is that true?

potiuk on (2024-10-25 20:29:08 UTC): Yes. No need to update versions, just update changelog - and any clarifications in our contributing docs are also very good contributions (just saying!)

perry2of5 (Issue Creator) on (2024-10-25 23:24:31 UTC): Built provider locally and tested end-to-end in flow. Everything worked as expected.

"
2612687485,pull_request,closed,,Fix spellcheck in main,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-24 22:44:13+00:00,[],2024-10-25 02:52:31+00:00,2024-10-25 02:52:31+00:00,https://github.com/apache/airflow/pull/43369,"[('kind:documentation', '')]",[],
2612598015,pull_request,closed,,Prevent using `trigger_rule=TriggerRule.ALWAYS` in a task-generated mapping within mapped task groups,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
closes: #30334

I started to stabilize the dynamic task mapping area, and specifically the interactions with the different trigger rules.
In the case of `TriggerRule.ALWAYS`, it is currently impractical to use it along with the dynamic task mapping. That is due the fact that the expanded task is triggered immediately, while the expanded parameters from the upstream are undefined - what will always result in the immediate failure of the task (`upstream_failure`).
I'm not entirely sure what the purpose of the original issue was by putting an ""ALWAYS"" task within a dynamic task group (they mentioned using a ""watcher"" pattern). However, I think that for now it makes sense to assume that upon an expension of a task - its expanded parameter(s) should be well-defined. 
If at some point we find a good reason to make this definition more flexible - I'm up to it, but at the current implementation it's rather a misuse that we should prevent.

I will cherry-pick into `v2-10-test` upon approval.


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",shahar1,2024-10-24 21:34:17+00:00,[],2024-12-09 10:34:03+00:00,2024-11-08 06:48:16+00:00,https://github.com/apache/airflow/pull/43368,"[('kind:documentation', ''), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:core', ''), ('area:dynamic-task-mapping', 'AIP-42')]","[{'comment_id': 2436413957, 'issue_id': 2612598015, 'author': 'potiuk', 'body': 'cc: @uranusjr -> I think it will need your input.', 'created_at': datetime.datetime(2024, 10, 24, 22, 3, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436470992, 'issue_id': 2612598015, 'author': 'shahar1', 'body': ""I need some help with fixing the tests - it gives strange errors when running them altogether:\r\n```\r\nFAILED tests/decorators/test_task_group.py::test_expand_create_mapped - RuntimeError: ('Cannot mix TaskGroups from different DAGs: %s and %s', <DAG: pipeline>, <DAG: test_executor>)\r\nFAILED tests/decorators/test_task_group.py::test_expand_kwargs_create_mapped - RuntimeError: ('Cannot mix TaskGroups from different DAGs: %s and %s', <DAG: pipeline>, <DAG: test_executor>)\r\nFAILED tests/decorators/test_task_group.py::test_task_group_expand_kwargs_with_upstream - airflow.exceptions.DuplicateTaskIdFound: Task id 'tg.t1' has already been added to the DAG\r\nFAILED tests/decorators/test_task_group.py::test_task_group_expand_with_upstream - airflow.exceptions.DuplicateTaskIdFound: Task id 'tg.t1' has already been added to the DAG\r\nFAILED tests/decorators/test_task_group.py::test_override_dag_default_args - RuntimeError: ('Cannot mix TaskGroups from different DAGs: %s and %s', <DAG: test_dag>, <DAG: test_executor>)\r\nFAILED tests/decorators/test_task_group.py::test_override_dag_default_args_nested_tg - RuntimeError: ('Cannot mix TaskGroups from different DAGs: %s and %s', <DAG: test_dag>, <DAG: test_executor>)\r\n```\r\nThanks beforehand :)\r\n\r\nUpdate: I've managed by moving the `pytest.raises` just above `tg.expand`."", 'created_at': datetime.datetime(2024, 10, 24, 22, 47, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2449441269, 'issue_id': 2612598015, 'author': 'potiuk', 'body': 'Can you resolve conflicts @shahar1  and back-port it - we are going to have 2.10.3 RC2 so we might include it there', 'created_at': datetime.datetime(2024, 10, 31, 9, 46, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2518383170, 'issue_id': 2612598015, 'author': 'jedcunningham', 'body': 'So it does work if you use static list to expand:\r\n\r\n```python\r\n    @task(trigger_rule=""always"")\r\n    def hello(input):\r\n        print(f""Hello, {input}"")\r\n\r\n    hello.expand(input=[""world"", ""moon""])\r\n```\r\n\r\nGranted, not sure it matters. I question the value of ""always"" anyway - there is no point in having any upstream if it\'s just going to run right away anyways, right? Just use a root task...', 'created_at': datetime.datetime(2024, 12, 4, 19, 27, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2518403280, 'issue_id': 2612598015, 'author': 'eladkal', 'body': ""> there is no point in having any upstream if it's just going to run right away anyways, right? Just use a root task...\r\n\r\nIt does matter if upstream is `ShortCircuitOperaror`. Short circuit can cascade skip signal through trigger rules."", 'created_at': datetime.datetime(2024, 12, 4, 19, 39, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2523810891, 'issue_id': 2612598015, 'author': 'shahar1', 'body': '> So it does work if you use static list to expand:\r\n> \r\n> ```python\r\n>     @task(trigger_rule=""always"")\r\n>     def hello(input):\r\n>         print(f""Hello, {input}"")\r\n> \r\n>     hello.expand(input=[""world"", ""moon""])\r\n> ```\r\n> \r\n> Granted, not sure it matters. I question the value of ""always"" anyway - there is no point in having any upstream if it\'s just going to run right away anyways, right? Just use a root task...\r\n\r\nThat\'s correct - it only applies for dynamic task mappings, where the `input` value is another operator (that\'s the actual check that I added).\r\nAs Elad stated, there could be some cases where `always` might be useful. However, there\'s plenty of work to do in the Trigger Rule area, I\'ll try to lead the efforts when I have the time.', 'created_at': datetime.datetime(2024, 12, 6, 17, 30, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2523903356, 'issue_id': 2612598015, 'author': 'jedcunningham', 'body': 'Sorry, I should have spent more time digging into this - I leaned too much on the title/newsfrag/docs changes.\r\n\r\nI will say, however, that the docs/newsfragment on this is misleading/wrong. It does still work for static expansions. This also only blocks task group expansions, expanding bare tasks with dynamic input from another task still parses and ultimately fails when running:\r\n\r\n```python\r\n    @task\r\n    def get_input():\r\n        return [""world"", ""moon""]\r\n\r\n    @task(trigger_rule=""always"")\r\n    def hello(input):\r\n        print(f""Hello, {input}"")\r\n\r\n    hello.expand(input=get_input())\r\n```\r\n\r\n![Screenshot 2024-12-06 at 11 14 50\u202fAM](https://github.com/user-attachments/assets/8845338e-0134-41e3-982f-f4563f27e5b1)\r\n\r\nI\'d be in favor of removing this from 2.10.4 for now, then go in and block both bare tasks and task groups, and document it more accurately too. (To be clear, just saying we pull it based on timing, if we can get it before we merge the 2.10.4 changes I\'m completely happy with that too.)', 'created_at': datetime.datetime(2024, 12, 6, 18, 21, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2523927589, 'issue_id': 2612598015, 'author': 'jedcunningham', 'body': '@eladkal I\'m curious, can you provide a simple example for the short circuit scenario you are talking about? In my experimenting, that feels like a bug on short circuit, not a useful feature of always.\r\n\r\ne.g. if I have this:\r\n\r\n```python\r\n    @task.short_circuit()\r\n    def short():\r\n        sleep(20)\r\n        return False\r\n\r\n    @task(trigger_rule=""always"")\r\n    def hello(input):\r\n        print(f""Hello, {input}"")\r\n\r\n    short() >> hello.expand(input=[""world"", ""moon""])\r\n```\r\n\r\n(Note: I added a sleep to expand the race condition a bit to make it easier to see the problem.)\r\n\r\nWhen it runs, the ALWAYS means those tasks run right away. So those hello tasks have run before the short task finishes:\r\n![Screenshot 2024-12-06 at 11 34 13\u202fAM](https://github.com/user-attachments/assets/21005027-dbaa-438c-a9df-8e5df1030da9)\r\n\r\nThen, when short eventually finishes, it goes in and retroactively skips... but thats wrong, those have already run!\r\n![Screenshot 2024-12-06 at 11 36 24\u202fAM](https://github.com/user-attachments/assets/86fa3afd-0511-4acc-b041-95b52b112cdc)', 'created_at': datetime.datetime(2024, 12, 6, 18, 37, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2523976124, 'issue_id': 2612598015, 'author': 'eladkal', 'body': ""> Then, when short eventually finishes, it goes in and retroactively skips... but thats wrong, those have already run!\r\n\r\nthen this is a bug. I assume you hit this because you set direct dependency between them. I think if there will be a middle task you won't hit this bug.\r\n\r\nI do agree that the value of always is very minor. We can consider removing it for Airflow 3."", 'created_at': datetime.datetime(2024, 12, 6, 19, 7, 13, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-24 22:03:14 UTC): cc: @uranusjr -> I think it will need your input.

shahar1 (Issue Creator) on (2024-10-24 22:47:08 UTC): I need some help with fixing the tests - it gives strange errors when running them altogether:
```
FAILED tests/decorators/test_task_group.py::test_expand_create_mapped - RuntimeError: ('Cannot mix TaskGroups from different DAGs: %s and %s', <DAG: pipeline>, <DAG: test_executor>)
FAILED tests/decorators/test_task_group.py::test_expand_kwargs_create_mapped - RuntimeError: ('Cannot mix TaskGroups from different DAGs: %s and %s', <DAG: pipeline>, <DAG: test_executor>)
FAILED tests/decorators/test_task_group.py::test_task_group_expand_kwargs_with_upstream - airflow.exceptions.DuplicateTaskIdFound: Task id 'tg.t1' has already been added to the DAG
FAILED tests/decorators/test_task_group.py::test_task_group_expand_with_upstream - airflow.exceptions.DuplicateTaskIdFound: Task id 'tg.t1' has already been added to the DAG
FAILED tests/decorators/test_task_group.py::test_override_dag_default_args - RuntimeError: ('Cannot mix TaskGroups from different DAGs: %s and %s', <DAG: test_dag>, <DAG: test_executor>)
FAILED tests/decorators/test_task_group.py::test_override_dag_default_args_nested_tg - RuntimeError: ('Cannot mix TaskGroups from different DAGs: %s and %s', <DAG: test_dag>, <DAG: test_executor>)
```
Thanks beforehand :)

Update: I've managed by moving the `pytest.raises` just above `tg.expand`.

potiuk on (2024-10-31 09:46:06 UTC): Can you resolve conflicts @shahar1  and back-port it - we are going to have 2.10.3 RC2 so we might include it there

jedcunningham on (2024-12-04 19:27:49 UTC): So it does work if you use static list to expand:

```python
    @task(trigger_rule=""always"")
    def hello(input):
        print(f""Hello, {input}"")

    hello.expand(input=[""world"", ""moon""])
```

Granted, not sure it matters. I question the value of ""always"" anyway - there is no point in having any upstream if it's just going to run right away anyways, right? Just use a root task...

eladkal on (2024-12-04 19:39:01 UTC): It does matter if upstream is `ShortCircuitOperaror`. Short circuit can cascade skip signal through trigger rules.

shahar1 (Issue Creator) on (2024-12-06 17:30:14 UTC): That's correct - it only applies for dynamic task mappings, where the `input` value is another operator (that's the actual check that I added).
As Elad stated, there could be some cases where `always` might be useful. However, there's plenty of work to do in the Trigger Rule area, I'll try to lead the efforts when I have the time.

jedcunningham on (2024-12-06 18:21:45 UTC): Sorry, I should have spent more time digging into this - I leaned too much on the title/newsfrag/docs changes.

I will say, however, that the docs/newsfragment on this is misleading/wrong. It does still work for static expansions. This also only blocks task group expansions, expanding bare tasks with dynamic input from another task still parses and ultimately fails when running:

```python
    @task
    def get_input():
        return [""world"", ""moon""]

    @task(trigger_rule=""always"")
    def hello(input):
        print(f""Hello, {input}"")

    hello.expand(input=get_input())
```

![Screenshot 2024-12-06 at 11 14 50 AM](https://github.com/user-attachments/assets/8845338e-0134-41e3-982f-f4563f27e5b1)

I'd be in favor of removing this from 2.10.4 for now, then go in and block both bare tasks and task groups, and document it more accurately too. (To be clear, just saying we pull it based on timing, if we can get it before we merge the 2.10.4 changes I'm completely happy with that too.)

jedcunningham on (2024-12-06 18:37:07 UTC): @eladkal I'm curious, can you provide a simple example for the short circuit scenario you are talking about? In my experimenting, that feels like a bug on short circuit, not a useful feature of always.

e.g. if I have this:

```python
    @task.short_circuit()
    def short():
        sleep(20)
        return False

    @task(trigger_rule=""always"")
    def hello(input):
        print(f""Hello, {input}"")

    short() >> hello.expand(input=[""world"", ""moon""])
```

(Note: I added a sleep to expand the race condition a bit to make it easier to see the problem.)

When it runs, the ALWAYS means those tasks run right away. So those hello tasks have run before the short task finishes:
![Screenshot 2024-12-06 at 11 34 13 AM](https://github.com/user-attachments/assets/21005027-dbaa-438c-a9df-8e5df1030da9)

Then, when short eventually finishes, it goes in and retroactively skips... but thats wrong, those have already run!
![Screenshot 2024-12-06 at 11 36 24 AM](https://github.com/user-attachments/assets/86fa3afd-0511-4acc-b041-95b52b112cdc)

eladkal on (2024-12-06 19:07:13 UTC): then this is a bug. I assume you hit this because you set direct dependency between them. I think if there will be a middle task you won't hit this bug.

I do agree that the value of always is very minor. We can consider removing it for Airflow 3.

"
2612548789,pull_request,closed,,Add Trigger DAG UI with advance options,"
<img width=""1728"" alt=""Screenshot 2024-11-13 at 1 06 13 AM"" src=""https://github.com/user-attachments/assets/cd641440-80f6-4ebe-b401-1d9add9ef439"">



<img width=""1728"" alt=""Screenshot 2024-11-13 at 1 06 02 AM"" src=""https://github.com/user-attachments/assets/43f19a4a-b89a-4921-96c7-242d52a8b382"">



<img width=""1728"" alt=""Screenshot 2024-11-13 at 1 05 31 AM"" src=""https://github.com/user-attachments/assets/eca08d03-58d2-4b68-9279-4ddc7521c28b"">



<img width=""1728"" alt=""Screenshot 2024-11-13 at 1 05 23 AM"" src=""https://github.com/user-attachments/assets/3a439a40-608f-43c8-bb11-31c88ee906c2"">



<img width=""1728"" alt=""Screenshot 2024-11-13 at 1 05 14 AM"" src=""https://github.com/user-attachments/assets/eb998ee2-020e-4963-a457-d7b4139c8b3e"">



<img width=""1728"" alt=""Screenshot 2024-11-13 at 1 04 55 AM"" src=""https://github.com/user-attachments/assets/656d52d1-33d7-4e18-86d6-fdb0c2ee8c72"">


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).",shubhamraj-git,2024-10-24 20:58:57+00:00,[],2024-11-13 20:27:58+00:00,2024-11-13 16:02:56+00:00,https://github.com/apache/airflow/pull/43367,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2436336510, 'issue_id': 2612548789, 'author': 'shubhamraj-git', 'body': '@jscheffl Tried to cover many points. Still some points left.\r\n1. Reset should be shown only when ""show advance option"" is true.\r\n2. JSON linters and validation should be part of codemirror.\r\n3. Some style fix for config box.', 'created_at': datetime.datetime(2024, 10, 24, 21, 5, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454647825, 'issue_id': 2612548789, 'author': 'bbovenzi', 'body': 'Oh you already rebased? How was moving your changes to chakra v3?', 'created_at': datetime.datetime(2024, 11, 4, 12, 56, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454679653, 'issue_id': 2612548789, 'author': 'shubhamraj-git', 'body': ""@bbovenzi \r\nI rebased and encountered lot of issues. I am still working on getting the existing code to migrate to chakra ui 3.0, didn't pushed yet.\r\nSome of the areas impacted are forms, modal.\r\nWill refer the migration PR for the changes. Post that I will work on the reviews."", 'created_at': datetime.datetime(2024, 11, 4, 13, 11, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454714977, 'issue_id': 2612548789, 'author': 'bbovenzi', 'body': 'Ok. Let me know if you want me to pull the branch down and help with the rebase.', 'created_at': datetime.datetime(2024, 11, 4, 13, 26, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455544299, 'issue_id': 2612548789, 'author': 'shubhamraj-git', 'body': '@bbovenzi @jscheffl Rebased successfully.\r\nLast few commits just have rebase related changes. Will address the reviews in coming commits.', 'created_at': datetime.datetime(2024, 11, 4, 19, 36, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2458249852, 'issue_id': 2612548789, 'author': 'jscheffl', 'body': 'Looking promising. Since there is a conflict... let me know when it is best to do a re-review.\r\n\r\nI noticed a few details:\r\n- Trigger button on DAG details is still disabled, would be great to add the modal there as well\r\n- Trigger is not really working, correct? I did not see a successful run later\r\n- Still the dialog has three lines, title, DAG name and DAG id. I thing this can really be reduced, e.g. put the DAG ID into the title and the gray DAG ID only needs to be displayed if no title is there.\r\n- If the DAG is disabled - on the legacy UI there was an option added and turned on per default to enable DAG scheduling if the DAG was disabled before opening the trigger dialog\r\n- Default params of the DAG are not loaded per default into the DICT element', 'created_at': datetime.datetime(2024, 11, 5, 22, 14, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462953888, 'issue_id': 2612548789, 'author': 'shubhamraj-git', 'body': '> Looking promising. Since there is a conflict... let me know when it is best to do a re-review.\r\n> \r\n> I noticed a few details:\r\n> \r\n> * Trigger button on DAG details is still disabled, would be great to add the modal there as well\r\n> * Trigger is not really working, correct? I did not see a successful run later\r\n> * Still the dialog has three lines, title, DAG name and DAG id. I thing this can really be reduced, e.g. put the DAG ID into the title and the gray DAG ID only needs to be displayed if no title is there.\r\n> * If the DAG is disabled - on the legacy UI there was an option added and turned on per default to enable DAG scheduling if the DAG was disabled before opening the trigger dialog\r\n> * Default params of the DAG are not loaded per default into the DICT element\r\n\r\n1. Added the button on DAG details too.\r\n2. As discussed , using an alert and console, Can be taken in another PR post fast API migration.\r\n3. Did the changes, It will be like ""Trigger DAG - <DAG_DISPLAY_NAME>"" and if it\'s not present, DAG id will be shown on next line.\r\n4. Can we take this in another PR? Since that needs a validation check.\r\n5. You mean conf? \r\n\r\n@jscheffl', 'created_at': datetime.datetime(2024, 11, 7, 18, 33, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2463035659, 'issue_id': 2612548789, 'author': 'shubhamraj-git', 'body': '@bbovenzi @jscheffl Should we have the reset button in blue colour? Irrespective of light or dark mode?', 'created_at': datetime.datetime(2024, 11, 7, 19, 20, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2463057696, 'issue_id': 2612548789, 'author': 'bbovenzi', 'body': '> @bbovenzi @jscheffl Should we have the reset button in blue colour? Irrespective of light or dark mode?\r\n\r\nNo, let\'s leave it as-is and with variant=""outline"". We\'ll save blue and solid buttons for primary actions', 'created_at': datetime.datetime(2024, 11, 7, 19, 34, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2463327713, 'issue_id': 2612548789, 'author': 'jscheffl', 'body': '> > Looking promising. Since there is a conflict... let me know when it is best to do a re-review.\r\n> > I noticed a few details:\r\n> > \r\n> > * Trigger button on DAG details is still disabled, would be great to add the modal there as well\r\n> > * Trigger is not really working, correct? I did not see a successful run later\r\n> > * Still the dialog has three lines, title, DAG name and DAG id. I thing this can really be reduced, e.g. put the DAG ID into the title and the gray DAG ID only needs to be displayed if no title is there.\r\n> > * If the DAG is disabled - on the legacy UI there was an option added and turned on per default to enable DAG scheduling if the DAG was disabled before opening the trigger dialog\r\n> > * Default params of the DAG are not loaded per default into the DICT element\r\n> \r\n>     1. Added the button on DAG details too.\r\n> \r\n>     2. As discussed , using an alert and console, Can be taken in another PR post fast API migration.\r\n> \r\n>     3. Did the changes, It will be like ""Trigger DAG - <DAG_DISPLAY_NAME>"" and if it\'s not present, DAG id will be shown on next line.\r\n> \r\n>     4. Can we take this in another PR? Since that needs a validation check.\r\n> \r\n>     5. You mean conf?\r\n> \r\n> \r\n> @jscheffl\r\n\r\nRegarding 4) Can you leave a TODO as comment. Then we can leave this in a follow-up PR\r\n\r\nRegarding 5) Yes. Default params --> config dict on the modal dialog --> trigger to be the DAG run conf.', 'created_at': datetime.datetime(2024, 11, 7, 22, 8, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2466310142, 'issue_id': 2612548789, 'author': 'shubhamraj-git', 'body': 'A quick thoughts needed?\r\nFor the type ""configJson"" should be use it as record or string.\r\nUsing as record will further need to convert for usage of codemirror.\r\nif we use string we can handle that in backend maybe while API Calling or maybe while creating json for API, we can convert.\r\n\r\ncc: @bbovenzi @jscheffl', 'created_at': datetime.datetime(2024, 11, 9, 17, 43, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2466403574, 'issue_id': 2612548789, 'author': 'jscheffl', 'body': '> A quick thoughts needed? For the type ""configJson"" should be use it as record or string. Using as record will further need to convert for usage of codemirror. if we use string we can handle that in backend maybe while API Calling or maybe while creating json for API, we can convert.\r\n> \r\n> cc: @bbovenzi @jscheffl\r\n\r\nThe current public REST API expects an JSON object as parameter for the conf, see https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html#operation/post_dag_run\r\nBefore adding a new API just to expect a string... I think it is easier to parse the JSON body from CodeMirror to JSON and use this for the trigger. Also has the benefit that you validate early and don\'t need to handle this explicitly from the server side.', 'created_at': datetime.datetime(2024, 11, 9, 18, 29, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2466405363, 'issue_id': 2612548789, 'author': 'shubhamraj-git', 'body': ""@jscheffl So, can we do something like, we take as string, and while sending request, we can parse to record?\r\nReason being I need to separately handle the record for codemirror, since it's expecting type as string."", 'created_at': datetime.datetime(2024, 11, 9, 18, 36, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2466409780, 'issue_id': 2612548789, 'author': 'jscheffl', 'body': ""> @jscheffl So, can we do something like, we take as string, and while sending request, we can parse to record? Reason being I need to separately handle the record for codemirror, since it's expecting type as string.\r\n\r\nYes, understand. Codemirror wants to have plain text. But on API an object is needed (today and preferrably keep it like this). So in between on trigger you need to fetch the Codemirror and JSON parse before POST to server... Anyway I'd think this is good to ensure valid data is sent.\r\n\r\nIn the existing / legacy UI also whenever you left the CodeMirror editor the test was re-formatted. Don't know if you ever tried... if syntax errors there was an error marker being set and if JSON was valid, it was re-formatted by Codemirror."", 'created_at': datetime.datetime(2024, 11, 9, 18, 52, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2466418182, 'issue_id': 2612548789, 'author': 'shubhamraj-git', 'body': ""Thanks @jscheffl \r\nGot the point. To summarise.\r\n1. We will have a jsonConf as string type, will convert it to json object before requesting trigger api.\r\n2. once the user is done editing the jsonConf in code mirror, It will parse and if it's okay then will prettify it, else will show error. (Currently it was doing live check while typing)."", 'created_at': datetime.datetime(2024, 11, 9, 19, 22, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2474719551, 'issue_id': 2612548789, 'author': 'jscheffl', 'body': '> Great work! Thanks for being patient with all the back-and-forth review comments.\r\n\r\n+1 from my side for handling all the comments :-D', 'created_at': datetime.datetime(2024, 11, 13, 20, 27, 56, tzinfo=datetime.timezone.utc)}]","shubhamraj-git (Issue Creator) on (2024-10-24 21:05:13 UTC): @jscheffl Tried to cover many points. Still some points left.
1. Reset should be shown only when ""show advance option"" is true.
2. JSON linters and validation should be part of codemirror.
3. Some style fix for config box.

bbovenzi on (2024-11-04 12:56:19 UTC): Oh you already rebased? How was moving your changes to chakra v3?

shubhamraj-git (Issue Creator) on (2024-11-04 13:11:06 UTC): @bbovenzi 
I rebased and encountered lot of issues. I am still working on getting the existing code to migrate to chakra ui 3.0, didn't pushed yet.
Some of the areas impacted are forms, modal.
Will refer the migration PR for the changes. Post that I will work on the reviews.

bbovenzi on (2024-11-04 13:26:50 UTC): Ok. Let me know if you want me to pull the branch down and help with the rebase.

shubhamraj-git (Issue Creator) on (2024-11-04 19:36:11 UTC): @bbovenzi @jscheffl Rebased successfully.
Last few commits just have rebase related changes. Will address the reviews in coming commits.

jscheffl on (2024-11-05 22:14:39 UTC): Looking promising. Since there is a conflict... let me know when it is best to do a re-review.

I noticed a few details:
- Trigger button on DAG details is still disabled, would be great to add the modal there as well
- Trigger is not really working, correct? I did not see a successful run later
- Still the dialog has three lines, title, DAG name and DAG id. I thing this can really be reduced, e.g. put the DAG ID into the title and the gray DAG ID only needs to be displayed if no title is there.
- If the DAG is disabled - on the legacy UI there was an option added and turned on per default to enable DAG scheduling if the DAG was disabled before opening the trigger dialog
- Default params of the DAG are not loaded per default into the DICT element

shubhamraj-git (Issue Creator) on (2024-11-07 18:33:10 UTC): 1. Added the button on DAG details too.
2. As discussed , using an alert and console, Can be taken in another PR post fast API migration.
3. Did the changes, It will be like ""Trigger DAG - <DAG_DISPLAY_NAME>"" and if it's not present, DAG id will be shown on next line.
4. Can we take this in another PR? Since that needs a validation check.
5. You mean conf? 

@jscheffl

shubhamraj-git (Issue Creator) on (2024-11-07 19:20:59 UTC): @bbovenzi @jscheffl Should we have the reset button in blue colour? Irrespective of light or dark mode?

bbovenzi on (2024-11-07 19:34:09 UTC): No, let's leave it as-is and with variant=""outline"". We'll save blue and solid buttons for primary actions

jscheffl on (2024-11-07 22:08:58 UTC): Regarding 4) Can you leave a TODO as comment. Then we can leave this in a follow-up PR

Regarding 5) Yes. Default params --> config dict on the modal dialog --> trigger to be the DAG run conf.

shubhamraj-git (Issue Creator) on (2024-11-09 17:43:16 UTC): A quick thoughts needed?
For the type ""configJson"" should be use it as record or string.
Using as record will further need to convert for usage of codemirror.
if we use string we can handle that in backend maybe while API Calling or maybe while creating json for API, we can convert.

cc: @bbovenzi @jscheffl

jscheffl on (2024-11-09 18:29:55 UTC): The current public REST API expects an JSON object as parameter for the conf, see https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html#operation/post_dag_run
Before adding a new API just to expect a string... I think it is easier to parse the JSON body from CodeMirror to JSON and use this for the trigger. Also has the benefit that you validate early and don't need to handle this explicitly from the server side.

shubhamraj-git (Issue Creator) on (2024-11-09 18:36:10 UTC): @jscheffl So, can we do something like, we take as string, and while sending request, we can parse to record?
Reason being I need to separately handle the record for codemirror, since it's expecting type as string.

jscheffl on (2024-11-09 18:52:39 UTC): Yes, understand. Codemirror wants to have plain text. But on API an object is needed (today and preferrably keep it like this). So in between on trigger you need to fetch the Codemirror and JSON parse before POST to server... Anyway I'd think this is good to ensure valid data is sent.

In the existing / legacy UI also whenever you left the CodeMirror editor the test was re-formatted. Don't know if you ever tried... if syntax errors there was an error marker being set and if JSON was valid, it was re-formatted by Codemirror.

shubhamraj-git (Issue Creator) on (2024-11-09 19:22:10 UTC): Thanks @jscheffl 
Got the point. To summarise.
1. We will have a jsonConf as string type, will convert it to json object before requesting trigger api.
2. once the user is done editing the jsonConf in code mirror, It will parse and if it's okay then will prettify it, else will show error. (Currently it was doing live check while typing).

jscheffl on (2024-11-13 20:27:56 UTC): +1 from my side for handling all the comments :-D

"
2612426639,pull_request,closed,,Fix accessibility with sorting tables and zIndex with tags selector,"- Move table sorting to a button inside of Th so it can be picked up by screen readers and tab controls
- Fix z-index of tags option dropdown

Before:
<img width=""331"" alt=""Screenshot 2024-10-24 at 3 40 19 PM"" src=""https://github.com/user-attachments/assets/d89830b7-9667-4377-9911-70ef71999af7"">



After:
<img width=""504"" alt=""Screenshot 2024-10-24 at 3 39 59 PM"" src=""https://github.com/user-attachments/assets/db7973c9-18e6-4d24-ba90-1c0735d6e5b8"">

note that the DAG button now has the highlight from tabbing across the page
<img width=""627"" alt=""Screenshot 2024-10-24 at 3 40 06 PM"" src=""https://github.com/user-attachments/assets/19d9d0c3-22d1-4d07-9306-4a5376005327"">


---


**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-10-24 19:42:35+00:00,[],2024-10-25 15:53:40+00:00,2024-10-25 15:53:39+00:00,https://github.com/apache/airflow/pull/43365,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2436294719, 'issue_id': 2612426639, 'author': 'jscheffl', 'body': 'After review of previous PR I get a ""white page"" and the document inspectr in Firefox shows me:\r\n![image](https://github.com/user-attachments/assets/8a22b5a7-9be1-4e3e-857f-d7e6808e675e)', 'created_at': datetime.datetime(2024, 10, 24, 20, 37, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2437732654, 'issue_id': 2612426639, 'author': 'bbovenzi', 'body': '> Besides the ""glitch"" of a wrong TimeZone selection, crashing script, this looks good.\r\n> \r\n> (I am not sure if the problem is a generic thing, a side effect from Browser Storage of other PR or introduced here. In a other browser (Chrome) it is not crashing.. but maybe I did not select a Timezone there)\r\n\r\nOh that is from another PR. You can just clear the old localStorage for now', 'created_at': datetime.datetime(2024, 10, 25, 13, 7, 25, tzinfo=datetime.timezone.utc)}]","jscheffl on (2024-10-24 20:37:24 UTC): After review of previous PR I get a ""white page"" and the document inspectr in Firefox shows me:
![image](https://github.com/user-attachments/assets/8a22b5a7-9be1-4e3e-857f-d7e6808e675e)

bbovenzi (Issue Creator) on (2024-10-25 13:07:25 UTC): Oh that is from another PR. You can just clear the old localStorage for now

"
2612366582,pull_request,closed,,Add Dag Page header,"Use the Dag Details public API to render a basic header for the DAG Details page.
Also fixed tags and dags list filter labels to match designs better.

Built on top of https://github.com/apache/airflow/pull/43324

Only look at the last commit.


<img width=""999"" alt=""Screenshot 2024-10-24 at 3 08 06 PM"" src=""https://github.com/user-attachments/assets/078afa82-49ca-40ca-a270-97004c6bb259"">
<img width=""998"" alt=""Screenshot 2024-10-24 at 3 07 40 PM"" src=""https://github.com/user-attachments/assets/58a5f984-89ab-49e5-9de6-b3736df3872b"">


<img width=""994"" alt=""Screenshot 2024-10-24 at 3 07 47 PM"" src=""https://github.com/user-attachments/assets/298bc2b8-6a2d-4a7c-9ea6-1b2a78e6ebb7"">


---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-10-24 19:09:47+00:00,[],2024-10-28 08:41:15+00:00,2024-10-28 08:41:13+00:00,https://github.com/apache/airflow/pull/43362,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2612198258,pull_request,closed,,Feature: Added fast_executemany parameter to insert_rows of DbApiHook,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

As explained in my [blogpost ](https://medium.com/apache-airflow/transfering-data-from-sap-hana-to-mssql-using-the-airflow-generictransfer-d29f147a9f1f) using the GenericTransfer operator, I've patched the insert_rows method of the DbApiHook to allow specifying the fast_executemany parameter from the GenericTransfer operator to allow much faster executemany when inserting rows into the destination database.  The insert_rows method behaves as before if the parameter isn't specified (False by default).  This is one of the patches that will be needed to enhance the GenericTransfer, once this PR is merged I will create a new one for the GenericTransfer operator itself and the SQLExecuteQueryTrigger.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",dabla,2024-10-24 17:34:44+00:00,[],2024-10-25 16:41:18+00:00,2024-10-25 16:41:17+00:00,https://github.com/apache/airflow/pull/43357,"[('area:providers', ''), ('provider:common-sql', '')]","[{'comment_id': 2436437468, 'issue_id': 2612198258, 'author': 'potiuk', 'body': 'But our very diligent bot is not happy with spelling in the docs ... You can put `executemany` in reverse quotes to skip spell checking BTW.', 'created_at': datetime.datetime(2024, 10, 24, 22, 17, 32, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-24 22:17:32 UTC): But our very diligent bot is not happy with spelling in the docs ... You can put `executemany` in reverse quotes to skip spell checking BTW.

"
2611890297,pull_request,closed,,Change prettier config to json,"Change the prettier configuration from a esm js module to plain json.

None of the parameters are updated, this is just to allow broader compatibility with some IDE and external tools. (Normally both should be perfectly interchangeable but I am experiencing issues with the `.js` version).",pierrejeambrun,2024-10-24 15:07:33+00:00,['pierrejeambrun'],2024-10-24 22:09:35+00:00,2024-10-24 22:09:33+00:00,https://github.com/apache/airflow/pull/43353,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2435626413, 'issue_id': 2611890297, 'author': 'ryanahamilton', 'body': ""I don't have any particular expertise here, but did you try `prettier.config.mjs`? That's what we use internally."", 'created_at': datetime.datetime(2024, 10, 24, 15, 35, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2435668436, 'issue_id': 2611890297, 'author': 'pierrejeambrun', 'body': ""I tried locally and unfortunately it doesn't work for me. (local issue based on my IDE). Also I believe that `cjs` is for `common` js, and `mjs` is for `module`, here even plain `js` config is interpreted as `module` because prettier finds the `module` information from the `package.json` file. So basically our `js` and `mjs` should be equivalent here."", 'created_at': datetime.datetime(2024, 10, 24, 15, 54, 12, tzinfo=datetime.timezone.utc)}]","ryanahamilton on (2024-10-24 15:35:37 UTC): I don't have any particular expertise here, but did you try `prettier.config.mjs`? That's what we use internally.

pierrejeambrun (Issue Creator) on (2024-10-24 15:54:12 UTC): I tried locally and unfortunately it doesn't work for me. (local issue based on my IDE). Also I believe that `cjs` is for `common` js, and `mjs` is for `module`, here even plain `js` config is interpreted as `module` because prettier finds the `module` information from the `package.json` file. So basically our `js` and `mjs` should be equivalent here.

"
2611675186,pull_request,closed,,[BACKPORT] Remove unused TriggerRule.DUMMY (#43349),"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Backports: #43349

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",shahar1,2024-10-24 13:48:44+00:00,[],2024-10-24 14:08:16+00:00,2024-10-24 14:08:16+00:00,https://github.com/apache/airflow/pull/43350,"[('area:core', ''), ('kind:task', 'A task that needs to be completed as part of a larger issue')]","[{'comment_id': 2435400578, 'issue_id': 2611675186, 'author': 'shahar1', 'body': 'Woops, apparently it is backward compatible in Airflow 2.', 'created_at': datetime.datetime(2024, 10, 24, 14, 8, 16, tzinfo=datetime.timezone.utc)}]","shahar1 (Issue Creator) on (2024-10-24 14:08:16 UTC): Woops, apparently it is backward compatible in Airflow 2.

"
2611662589,pull_request,closed,,Remove unused `TriggerRule.DUMMY`,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

`TriggerRule.DUMMY` has no effect in Airflow 3, so it could be safely removed.



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",shahar1,2024-10-24 13:43:45+00:00,[],2024-11-11 12:48:16+00:00,2024-11-11 12:48:16+00:00,https://github.com/apache/airflow/pull/43349,"[('area:core', ''), ('kind:task', 'A task that needs to be completed as part of a larger issue'), ('airflow3.0:candidate', 'Potential candidates for Airflow 3.0'), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]","[{'comment_id': 2435410523, 'issue_id': 2611662589, 'author': 'shahar1', 'body': ""Unfortunately, `TriggerRule.DUMMY` is still operable in AIrflow 2, so I can't backport this one to `v2-10-test`. As I plan to make some compatible changes in the trigger rule depedencies - I want to avoid code deviations for now between the branches in this area.\r\nFor that reason, I'm drafting this PR for now."", 'created_at': datetime.datetime(2024, 10, 24, 14, 12, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436056380, 'issue_id': 2611662589, 'author': 'eladkal', 'body': 'Also needs news fragment as this is a breaking change', 'created_at': datetime.datetime(2024, 10, 24, 18, 18, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439444848, 'issue_id': 2611662589, 'author': 'shahar1', 'body': ""> Unfortunately, `TriggerRule.DUMMY` is still operable in AIrflow 2, so I can't backport this one to `v2-10-test`. As I plan to make some compatible changes in the trigger rule depedencies - I want to avoid code deviations for now between the branches in this area. For that reason, I'm drafting this PR for now.\r\n\r\nIn a second thought, the compatible changes shouldn't affect the `trigger_rule.py` file (no expected changes in the other statuses), so it should be ok to merge.\r\nI added a newsfragment (I had to obscure the content it due to `check-for-inclusive-language` 😅)"", 'created_at': datetime.datetime(2024, 10, 26, 9, 19, 57, tzinfo=datetime.timezone.utc)}]","shahar1 (Issue Creator) on (2024-10-24 14:12:13 UTC): Unfortunately, `TriggerRule.DUMMY` is still operable in AIrflow 2, so I can't backport this one to `v2-10-test`. As I plan to make some compatible changes in the trigger rule depedencies - I want to avoid code deviations for now between the branches in this area.
For that reason, I'm drafting this PR for now.

eladkal on (2024-10-24 18:18:12 UTC): Also needs news fragment as this is a breaking change

shahar1 (Issue Creator) on (2024-10-26 09:19:57 UTC): In a second thought, the compatible changes shouldn't affect the `trigger_rule.py` file (no expected changes in the other statuses), so it should be ok to merge.
I added a newsfragment (I had to obscure the content it due to `check-for-inclusive-language` 😅)

"
2611642373,pull_request,closed,,Backport: Remove Scarf analytics from Airflow Webserver (#43346),"Backport of https://github.com/apache/airflow/pull/43346

Since we have already made decisions about what we want to do for Plugins in Airflow 3 and revamping the entire UI, this data isn't that important. There were also concerns raised about de-depulications and other things.

(cherry picked from commit dc25301f35e78f5058bca9eb8436ec31dc3a2962)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-24 13:36:12+00:00,[],2024-11-01 08:47:57+00:00,2024-10-24 14:04:14+00:00,https://github.com/apache/airflow/pull/43348,"[('area:webserver', 'Webserver related Issues'), ('kind:documentation', ''), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2435320931, 'issue_id': 2611642373, 'author': 'kaxil', 'body': ""cc @utkarsharma2 @potiuk @ashb -- Let's get this in Airflow 2.10.3"", 'created_at': datetime.datetime(2024, 10, 24, 13, 36, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2435391653, 'issue_id': 2611642373, 'author': 'kaxil', 'body': 'Static check failure is the known transient issue\r\n```\r\nTS types generation / ESLint / Prettier against UI files...........................Failed\r\n- hook id: ts-compile-format-lint-www\r\n- exit code: 1\r\n\r\nyarn install v1.22.21\r\n\r\n[1/4] Resolving packages...\r\n\r\n[2/4] Fetching packages...\r\n(node:6675) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\r\n(Use `node --trace-deprecation ...` to show where the warning was created)\r\n\r\nerror Error: https://registry.yarnpkg.com/v8-compile-cache/-/v8-compile-cache-2.3.0.tgz: Request failed ""502 Bad Gateway""\r\n    at ResponseError.ExtendableBuiltin (/home/runner/.cache/pre-commit/repo0q5gvmzk/node_env-22.2.0/lib/node_modules/yarn/lib/cli.js:696:66)\r\n    at new ResponseError (/home/runner/.cache/pre-commit/repo0q5gvmzk/node_env-22.2.0/lib/node_modules/yarn/lib/cli.js:802:124)\r\n    at Request.<anonymous> (/home/runner/.cache/pre-commit/repo0q5gvmzk/node_env-22.2.0/lib/node_modules/yarn/lib/cli.js:66218:16)\r\n    at Request.emit (node:events:520:28)\r\n    at module.exports.Request.onRequestResponse (/home/runner/.cache/pre-commit/repo0q5gvmzk/node_env-22.2.0/lib/node_modules/yarn/lib/cli.js:141751:10)\r\n    at ClientRequest.emit (node:events:520:28)\r\n    at HTTPParser.parserOnIncomingClient [as onIncoming] (node:_http_client:700:27)\r\n    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)\r\n    at TLSSocket.socketOnData (node:_http_client:542:22)\r\n    at TLSSocket.emit (node:events:520:28)\r\n```', 'created_at': datetime.datetime(2024, 10, 24, 14, 4, 49, tzinfo=datetime.timezone.utc)}]","kaxil (Issue Creator) on (2024-10-24 13:36:35 UTC): cc @utkarsharma2 @potiuk @ashb -- Let's get this in Airflow 2.10.3

kaxil (Issue Creator) on (2024-10-24 14:04:49 UTC): Static check failure is the known transient issue
```
TS types generation / ESLint / Prettier against UI files...........................Failed
- hook id: ts-compile-format-lint-www
- exit code: 1

yarn install v1.22.21

[1/4] Resolving packages...

[2/4] Fetching packages...
(node:6675) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)

error Error: https://registry.yarnpkg.com/v8-compile-cache/-/v8-compile-cache-2.3.0.tgz: Request failed ""502 Bad Gateway""
    at ResponseError.ExtendableBuiltin (/home/runner/.cache/pre-commit/repo0q5gvmzk/node_env-22.2.0/lib/node_modules/yarn/lib/cli.js:696:66)
    at new ResponseError (/home/runner/.cache/pre-commit/repo0q5gvmzk/node_env-22.2.0/lib/node_modules/yarn/lib/cli.js:802:124)
    at Request.<anonymous> (/home/runner/.cache/pre-commit/repo0q5gvmzk/node_env-22.2.0/lib/node_modules/yarn/lib/cli.js:66218:16)
    at Request.emit (node:events:520:28)
    at module.exports.Request.onRequestResponse (/home/runner/.cache/pre-commit/repo0q5gvmzk/node_env-22.2.0/lib/node_modules/yarn/lib/cli.js:141751:10)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient [as onIncoming] (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at TLSSocket.emit (node:events:520:28)
```

"
2611455903,pull_request,closed,,Remove Scarf analytics from Airflow Webserver,"Since we have already made decisions about what we want to do for Plugins in Airflow 3 and revamping the entire UI, this data isn't that important. There were also concerns raised about de-depulications and other things.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-24 12:38:05+00:00,[],2024-10-24 14:23:24+00:00,2024-10-24 13:33:15+00:00,https://github.com/apache/airflow/pull/43346,"[('area:webserver', 'Webserver related Issues'), ('kind:documentation', ''), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2611273807,pull_request,closed,,Add Cyberdino to the list of companies using Apache Airflow,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
 
Added Cyberdino to INTHEWILD.md


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",tienhung2812,2024-10-24 11:25:34+00:00,[],2024-10-24 23:33:56+00:00,2024-10-24 18:00:18+00:00,https://github.com/apache/airflow/pull/43345,[],"[{'comment_id': 2435012765, 'issue_id': 2611273807, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 24, 11, 25, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2435722820, 'issue_id': 2611273807, 'author': 'tienhung2812', 'body': 'Thank you @shahar1 , I have updated sort order', 'created_at': datetime.datetime(2024, 10, 24, 16, 19, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436016126, 'issue_id': 2611273807, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 24, 18, 0, 21, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-24 11:25:37 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

tienhung2812 (Issue Creator) on (2024-10-24 16:19:13 UTC): Thank you @shahar1 , I have updated sort order

boring-cyborg[bot] on (2024-10-24 18:00:21 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2611239640,pull_request,closed,,fix(http provider): request_kwargs not passed from caller to HttpHook.run(),"HttpHooK.run() accepts request_kwargs, however HttpOperator and HttpSensor do not pass request_kwargs to HttpHooK.run()

Users pass kwargs to HttpSensor and HttpSensor, and then kwargs are passed to HttpHooK.run() as request_kwargs.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

",childe,2024-10-24 11:10:26+00:00,[],2024-10-29 06:58:45+00:00,2024-10-29 06:58:45+00:00,https://github.com/apache/airflow/pull/43344,"[('area:providers', ''), ('provider:http', '')]","[{'comment_id': 2434982151, 'issue_id': 2611239640, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 24, 11, 10, 30, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-24 11:10:30 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

"
2610877840,pull_request,closed,,[BACKPORT] Fixed type in section Object Storage XCom Backend in file xcoms.rst (#43339),"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

This PR backports #43339.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",shahar1,2024-10-24 08:40:28+00:00,[],2024-10-24 14:22:31+00:00,2024-10-24 08:41:50+00:00,https://github.com/apache/airflow/pull/43342,"[('kind:documentation', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2610573261,pull_request,open,,"Implemented get_name in StatsLogger, updated Otel and StatsD","- Added get_name method in StatsLogger (base_stat_logger.py) to handle metric name preparation and tag validation.
- Updated Otel and StatsD loggers to inherit from StatsLogger and utilize the new get_name method.
- Refactored tag preparation and validation logic into get_name for a cleaner and more consistent implementation.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #42881 
related: #42881 

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",ArshiaZr,2024-10-24 06:10:26+00:00,[],2025-01-22 22:53:04+00:00,,https://github.com/apache/airflow/pull/43340,[],"[{'comment_id': 2434389783, 'issue_id': 2610573261, 'author': 'ArshiaZr', 'body': '@ferruzzi, @howardyoo, @o-nikolas  Can you please take a look at it? If anything needs to change please let me know.', 'created_at': datetime.datetime(2024, 10, 24, 6, 16, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436537407, 'issue_id': 2610573261, 'author': 'howardyoo', 'body': '> @ferruzzi, @howardyoo, @o-nikolas Can you please take a look at it? If anything needs to change please let me know.\r\n\r\n@ArshiaZr, I am not a reviewer, and thus cannot review this PR, but I believe it would be nice if you can add unit tests for your changes as part of this PR, so that the changes can be properly checked to work properly. cc to @ferruzzi', 'created_at': datetime.datetime(2024, 10, 24, 23, 58, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438370274, 'issue_id': 2610573261, 'author': 'potiuk', 'body': '> @ArshiaZr, I am not a reviewer, and thus cannot review this PR, but I believe it would be nice if you can add unit tests for your changes as part of this PR, so that the changes can be properly checked to work properly. cc to @ferruzzi\r\n\r\nActually - anyone can review PRs - and we encourage it. You can even approve it @howardyoo  and it might guide other maintainers with their approvals.', 'created_at': datetime.datetime(2024, 10, 25, 17, 11, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438385500, 'issue_id': 2610573261, 'author': 'howardyoo', 'body': 'No, as far as I know, I don’t think I have the ability to approve the PR, but if I get a chance I’ll sure do the review. Having the unit test would be very helpful for the testing too.Sent from my iPhoneOn Oct 25, 2024, at 12:11\u202fPM, Jarek Potiuk ***@***.***> wrote:\ufeff\r\n\r\n@ArshiaZr, I am not a reviewer, and thus cannot review this PR, but I believe it would be nice if you can add unit tests for your changes as part of this PR, so that the changes can be properly checked to work properly. cc to @ferruzzi\r\n\r\nActually - anyone can review PRs - and we encourage it. You can even approve it @howardyoo  and it might guide other maintainers with their approvals.\r\n\r\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you were mentioned.Message ID: ***@***.***>', 'created_at': datetime.datetime(2024, 10, 25, 17, 17, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438402280, 'issue_id': 2610573261, 'author': 'potiuk', 'body': '> No, as far as I know, I don’t think I have the ability to approve the PR \r\n\r\nYou can approve it (many contributors do that). But you need at least one approval from a commiter to merge it - but approvals can be done by absolutely anyone who has a GitHub account.', 'created_at': datetime.datetime(2024, 10, 25, 17, 26, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438409806, 'issue_id': 2610573261, 'author': 'howardyoo', 'body': 'Ok, I see. Thanks!Sent from my iPhoneOn Oct 25, 2024, at 12:26\u202fPM, Jarek Potiuk ***@***.***> wrote:\ufeff\r\n\r\nNo, as far as I know, I don’t think I have the ability to approve the PR\r\n\r\nYou can approve it (many contributors do that). But you need at least one approval from a commiter to merge it - but approvals can be done by absolutely anyone who has a GitHub account.\r\n\r\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you were mentioned.Message ID: ***@***.***>', 'created_at': datetime.datetime(2024, 10, 25, 17, 30, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441765801, 'issue_id': 2610573261, 'author': 'howardyoo', 'body': 'I reviewed the code, and to me, it is well implemented and ready to be\r\nmerged.\r\n\r\nOn Fri, Oct 25, 2024 at 12:30\u202fPM Howard Yoo ***@***.***> wrote:\r\n\r\n> Ok, I see. Thanks!\r\n>\r\n> Sent from my iPhone\r\n>\r\n> On Oct 25, 2024, at 12:26\u202fPM, Jarek Potiuk ***@***.***>\r\n> wrote:\r\n>\r\n> \ufeff\r\n>\r\n> No, as far as I know, I don’t think I have the ability to approve the PR\r\n>\r\n> You can approve it (many contributors do that). But you need at least one\r\n> approval from a commiter to merge it - but approvals can be done by\r\n> absolutely anyone who has a GitHub account.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/apache/airflow/pull/43340#issuecomment-2438402280>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AHZNLLU25JM2URXAA4NZZRLZ5J5M7AVCNFSM6AAAAABQQJT7UOVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDIMZYGQYDEMRYGA>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n>', 'created_at': datetime.datetime(2024, 10, 28, 14, 34, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442243825, 'issue_id': 2610573261, 'author': 'potiuk', 'body': 'Do we expect any incompatibilities in produced metrics @ArshiaZr ? I would love to understand what was the intention of ""cleaner and more consistent implementation."" before I get into details.', 'created_at': datetime.datetime(2024, 10, 28, 17, 47, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2443170392, 'issue_id': 2610573261, 'author': 'ArshiaZr', 'body': ""I just made the code more robust based on @ferruzzi reviews I'd appreciate it if you could look at it. \r\n\r\ncc @howardyoo, @dannyl1u"", 'created_at': datetime.datetime(2024, 10, 29, 4, 19, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445387055, 'issue_id': 2610573261, 'author': 'ArshiaZr', 'body': ""@ferruzzi  Thanks for the reviews. Here's the fixed version. I had to add the instance back in StatsLogger as I noticed we're using it somewhere else."", 'created_at': datetime.datetime(2024, 10, 29, 21, 43, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448815134, 'issue_id': 2610573261, 'author': 'ArshiaZr', 'body': ""I raised another commit. I tried to address all the issues and reviewed it myself multiple times. \r\nI'll be grateful if you can take another look at it @ferruzzi."", 'created_at': datetime.datetime(2024, 10, 31, 1, 25, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450420777, 'issue_id': 2610573261, 'author': 'howardyoo', 'body': 'perhaps it\'s just trying to check whether full_metric_name isn\'t null?\r\n\r\nOn Thu, Oct 31, 2024 at 12:17\u202fPM D. Ferruzzi ***@***.***>\r\nwrote:\r\n\r\n> ***@***.**** commented on this pull request.\r\n> ------------------------------\r\n>\r\n> In airflow/metrics/statsd_logger.py\r\n> <https://github.com/apache/airflow/pull/43340#discussion_r1824865718>:\r\n>\r\n> >          *args,\r\n>          tags: dict[str, str] | None = None,\r\n>          **kwargs,\r\n>      ) -> TimerProtocol:\r\n>          """"""Timer metric that can be cancelled.""""""\r\n> -        if stat and self.metrics_validator.test(stat):\r\n> -            return Timer(self.statsd.timer(stat, *args, **kwargs))\r\n> +        full_metric_name = self.get_name(metric_name, tags)\r\n> +        if full_metric_name and self.metrics_validator.test(full_metric_name):\r\n>\r\n> Why is this the only one that gets if full_metric_name?\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/apache/airflow/pull/43340#pullrequestreview-2408604209>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AHZNLLRO6SCCGNC7VH2UL33Z6JQZPAVCNFSM6AAAAABQQJT7UOVHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMZDIMBYGYYDIMRQHE>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>', 'created_at': datetime.datetime(2024, 10, 31, 17, 20, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450554690, 'issue_id': 2610573261, 'author': 'howardyoo', 'body': 'Agreed. Thanks for the work, Arshia!\r\n\r\nOn Thu, Oct 31, 2024 at 1:22\u202fPM D. Ferruzzi ***@***.***>\r\nwrote:\r\n\r\n> ***@***.**** approved this pull request.\r\n>\r\n> Nice work.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/apache/airflow/pull/43340#pullrequestreview-2408792003>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AHZNLLQPLN2CF3R4GCLZMBDZ6JYNRAVCNFSM6AAAAABQQJT7UOVHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMZDIMBYG44TEMBQGM>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>', 'created_at': datetime.datetime(2024, 10, 31, 18, 24, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450837709, 'issue_id': 2610573261, 'author': 'howardyoo', 'body': 'I generally would not go with using the longer name (even otel has 255\r\nlimits to it), simply because of the following:\r\n1. it introduces flood of \'names\' in any telemetry data namespace - which\r\nmakes the management of it a nightmare\r\n2. that was one of the reason why people did not like statsd metrics\r\n3. converting into long names also modifies string (like replacing \' \' with\r\n\'_\' which is fine, but on some conditions, just makes the data messy and\r\n\'modified\' from its original format, so not a great design.\r\n\r\nI would still propose when user is switched over the otel metrics, the\r\nnames would be different (and all those unnecessary part of the name would\r\ninstead be gone into tags).\r\n\r\nOn Thu, Oct 31, 2024 at 4:08\u202fPM D. Ferruzzi ***@***.***>\r\nwrote:\r\n\r\n> ***@***.**** commented on this pull request.\r\n> ------------------------------\r\n>\r\n> In airflow/metrics/otel_logger.py\r\n> <https://github.com/apache/airflow/pull/43340#discussion_r1825165385>:\r\n>\r\n> > @@ -300,6 +305,15 @@ def timer(\r\n>          """"""Timer context manager returns the duration and can be cancelled.""""""\r\n>          return _OtelTimer(self, stat, tags)\r\n>\r\n> +    def get_name(self, metric_name: str, tags: Attributes | None = None) -> str:\r\n>\r\n> Cool, maybe it was a bug they fixed on their end. Best way to tell is to\r\n> make a metric with a long name and test it out using breeze start-airflow\r\n> --integration otel and see if it works.\r\n>\r\n> If that limit no loner exists then..... I don\'t know.... I think we should\r\n> still use tagging but I don\'t know what the best approach is for the name\r\n> itself. It makes sense to emit the longer name the same as statsd, but then\r\n> that\'s another breaking change since existing otel dashboards would all\r\n> break..... I guess that would need a community discussion at that point.\r\n>\r\n> @ArshiaZr <https://github.com/ArshiaZr> - Next step, please get a breeze\r\n> environment running with otel and verify the name limit restriction has\r\n> been removed/fixed, then we can go from there.\r\n>\r\n> @dannyl1u <https://github.com/dannyl1u> is working on the metrics\r\n> registry which you are going to use to auto-generate the docs page, so I\r\n> guess we need to determine which name we\'re going to be using before that\r\n> gets too far....\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/apache/airflow/pull/43340#discussion_r1825165385>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AHZNLLROOXZWX3E6NWMIOBLZ6KL4XAVCNFSM6AAAAABQQJT7UOVHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMZDIMBZGA3TQNBSHE>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>', 'created_at': datetime.datetime(2024, 10, 31, 21, 22, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2451958335, 'issue_id': 2610573261, 'author': 'ashb', 'body': 'I agree we should have short names where possible, but lets not artificially limit it in the logger to 32 characters', 'created_at': datetime.datetime(2024, 11, 1, 14, 22, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2452458443, 'issue_id': 2610573261, 'author': 'howardyoo', 'body': 'I can def check whether the name validation works on python otel sdk side, as well as on collector side.Will update sometime this weekend', 'created_at': datetime.datetime(2024, 11, 1, 19, 22, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2452626110, 'issue_id': 2610573261, 'author': 'ferruzzi', 'body': ""> I can def check whether the name validation works on python otel sdk side\r\n\r\nThanks @howardyoo \r\n\r\n> I agree we should have short names where possible, but lets not artificially limit it in the logger to 32 characters\r\n\r\n@ashb I concur.  Can we agree that the Otel names should continue to be the name without the embedded variables, as it is now, and (assuming Howard confirms the external verification is actually working) just remove our truncating and validating the name?\r\n\r\n> The datadog statsd format natively supports tags -- we should use those there/and it should be updated to inherit form StatsLogger too\r\n\r\nI'm not very familiar with datadog.  Looking at the existing code, its get_name implementation should be similar to OTel's and just pass the name through as provided since it also gets the tags added later, right?\r\n\r\n---\r\n\r\n@ArshiaZr  - Please implement the datadog part and either you and/or Howard can sort out what is going on with the otel name validation after that."", 'created_at': datetime.datetime(2024, 11, 1, 21, 38, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2452630668, 'issue_id': 2610573261, 'author': 'howardyoo', 'body': 'Yes, we shouldn’t have the limit to 32 chars - that is way too small and not useful.', 'created_at': datetime.datetime(2024, 11, 1, 21, 42, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453283898, 'issue_id': 2610573261, 'author': 'ArshiaZr', 'body': '## Rationale for Using Decorators Instead of Inheritance with Datadog\r\n\r\nUsing `get_name` with the Datadog protocol is unnecessary since we don’t combine tags and the stat name when calling `DogStatsd` functions. The functions in `DogStatsd` (e.g., `increment`, `decrement`, `gauge`, `timing`) expect the metric name and tags separately, so there’s no need to modify or combine them beforehand. \r\n\r\nEven if tags need to be prepared, we already apply the `@prepare_metric_name_with_tags` decorator before `get_name`, which impacts only the values passed to `get_name` and not the final metric name used in `DogStatsd` calls.\r\n\r\nTherefore, making `SafeDogStatsdLogger` a subclass of `StatsLogger` doesn’t add any functional value here. Instead, adding `@prepare_metric_name_with_tags` to each function in `SafeDogStatsdLogger` keeps the code organized and consistent without requiring inheritance specifically for Datadog. This approach provides clarity while keeping `SafeDogStatsdLogger` focused solely on Datadog-specific logic.\r\nAdditionally, I added the `@prepare_stat_with_tags` decorator for a more consistent way of validating tags, allowing for cleaner code by centralizing tag preparation and validation across all metric functions.\r\n\r\n@ashb @ferruzzi if you have any other suggestions just let me know', 'created_at': datetime.datetime(2024, 11, 3, 3, 55, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454800823, 'issue_id': 2610573261, 'author': 'ashb', 'body': ""Not being a subclass sounds fine as long as it follows the same interface/protocol. I'll check out the changes when I can."", 'created_at': datetime.datetime(2024, 11, 4, 14, 3, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456194715, 'issue_id': 2610573261, 'author': 'ArshiaZr', 'body': 'I have also added inheritance for consistency. Just let me know which approach is better. @ashb, @ferruzzi', 'created_at': datetime.datetime(2024, 11, 5, 4, 13, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457771750, 'issue_id': 2610573261, 'author': 'ferruzzi', 'body': ""We discussed on slack, but I'll also reply here for posterity:  I think inheritance is the right way to go here.   Should someone make a change tot he base class in the future, it would be confusing to troubleshoot why StatsD and OTel both work but Datadog doesn't.  So it should inherit for the sake of consistency, if nothing else."", 'created_at': datetime.datetime(2024, 11, 5, 17, 27, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2471055502, 'issue_id': 2610573261, 'author': 'ferruzzi', 'body': '@ashb  - Can we get this merged?', 'created_at': datetime.datetime(2024, 11, 12, 16, 49, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473182309, 'issue_id': 2610573261, 'author': 'ashb', 'body': 'Looking at this right now, sorry for the delay', 'created_at': datetime.datetime(2024, 11, 13, 10, 52, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2474246661, 'issue_id': 2610573261, 'author': 'ferruzzi', 'body': ""@ArshiaZr - You can also remove the portion(s) of code that limit the OTel name length now.   I think we've all agreed that we can keep the names short as Best Practice but should no longer be truncating them."", 'created_at': datetime.datetime(2024, 11, 13, 17, 12, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2483715146, 'issue_id': 2610573261, 'author': 'ferruzzi', 'body': 'They increased the name length in September of last year :sweat_smile:  https://github.com/open-telemetry/opentelemetry-python/pull/3442', 'created_at': datetime.datetime(2024, 11, 18, 17, 43, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2503780530, 'issue_id': 2610573261, 'author': 'potiuk', 'body': 'Needs conflicng resolving/rebase', 'created_at': datetime.datetime(2024, 11, 27, 12, 41, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2504078139, 'issue_id': 2610573261, 'author': 'ArshiaZr', 'body': '@potiuk and @ferruzzi  I resolved all of the conflicts and rebased it. Can you now confirm if everything is in place.', 'created_at': datetime.datetime(2024, 11, 27, 14, 52, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2504959447, 'issue_id': 2610573261, 'author': 'ferruzzi', 'body': ""I've seen so many iterations on this it's likely a good idea to have a fresh set of eyes have a quick look, but I think it's right and all the tests are green.  Congrats on that milestone."", 'created_at': datetime.datetime(2024, 11, 27, 23, 9, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2597185757, 'issue_id': 2610573261, 'author': 'bmoon4', 'body': ""Hi, I'm just curious .. will this pr fix the `otel metrics truncate` issue? OTEL supports maximum of 255 chars.\r\n```\r\nOTEL_NAME_MAX_LENGTH = 63\r\n```"", 'created_at': datetime.datetime(2025, 1, 17, 0, 32, 8, tzinfo=datetime.timezone.utc)}]","ArshiaZr (Issue Creator) on (2024-10-24 06:16:21 UTC): @ferruzzi, @howardyoo, @o-nikolas  Can you please take a look at it? If anything needs to change please let me know.

howardyoo on (2024-10-24 23:58:13 UTC): @ArshiaZr, I am not a reviewer, and thus cannot review this PR, but I believe it would be nice if you can add unit tests for your changes as part of this PR, so that the changes can be properly checked to work properly. cc to @ferruzzi

potiuk on (2024-10-25 17:11:08 UTC): Actually - anyone can review PRs - and we encourage it. You can even approve it @howardyoo  and it might guide other maintainers with their approvals.

howardyoo on (2024-10-25 17:17:10 UTC): No, as far as I know, I don’t think I have the ability to approve the PR, but if I get a chance I’ll sure do the review. Having the unit test would be very helpful for the testing too.Sent from my iPhoneOn Oct 25, 2024, at 12:11 PM, Jarek Potiuk ***@***.***> wrote:﻿

@ArshiaZr, I am not a reviewer, and thus cannot review this PR, but I believe it would be nice if you can add unit tests for your changes as part of this PR, so that the changes can be properly checked to work properly. cc to @ferruzzi

Actually - anyone can review PRs - and we encourage it. You can even approve it @howardyoo  and it might guide other maintainers with their approvals.

—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you were mentioned.Message ID: ***@***.***>

potiuk on (2024-10-25 17:26:18 UTC): You can approve it (many contributors do that). But you need at least one approval from a commiter to merge it - but approvals can be done by absolutely anyone who has a GitHub account.

howardyoo on (2024-10-25 17:30:38 UTC): Ok, I see. Thanks!Sent from my iPhoneOn Oct 25, 2024, at 12:26 PM, Jarek Potiuk ***@***.***> wrote:﻿

No, as far as I know, I don’t think I have the ability to approve the PR

You can approve it (many contributors do that). But you need at least one approval from a commiter to merge it - but approvals can be done by absolutely anyone who has a GitHub account.

—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you were mentioned.Message ID: ***@***.***>

howardyoo on (2024-10-28 14:34:28 UTC): I reviewed the code, and to me, it is well implemented and ready to be
merged.

On Fri, Oct 25, 2024 at 12:30 PM Howard Yoo ***@***.***> wrote:

potiuk on (2024-10-28 17:47:31 UTC): Do we expect any incompatibilities in produced metrics @ArshiaZr ? I would love to understand what was the intention of ""cleaner and more consistent implementation."" before I get into details.

ArshiaZr (Issue Creator) on (2024-10-29 04:19:03 UTC): I just made the code more robust based on @ferruzzi reviews I'd appreciate it if you could look at it. 

cc @howardyoo, @dannyl1u

ArshiaZr (Issue Creator) on (2024-10-29 21:43:56 UTC): @ferruzzi  Thanks for the reviews. Here's the fixed version. I had to add the instance back in StatsLogger as I noticed we're using it somewhere else.

ArshiaZr (Issue Creator) on (2024-10-31 01:25:28 UTC): I raised another commit. I tried to address all the issues and reviewed it myself multiple times. 
I'll be grateful if you can take another look at it @ferruzzi.

howardyoo on (2024-10-31 17:20:42 UTC): perhaps it's just trying to check whether full_metric_name isn't null?

On Thu, Oct 31, 2024 at 12:17 PM D. Ferruzzi ***@***.***>
wrote:

howardyoo on (2024-10-31 18:24:11 UTC): Agreed. Thanks for the work, Arshia!

On Thu, Oct 31, 2024 at 1:22 PM D. Ferruzzi ***@***.***>
wrote:

howardyoo on (2024-10-31 21:22:41 UTC): I generally would not go with using the longer name (even otel has 255
limits to it), simply because of the following:
1. it introduces flood of 'names' in any telemetry data namespace - which
makes the management of it a nightmare
2. that was one of the reason why people did not like statsd metrics
3. converting into long names also modifies string (like replacing ' ' with
'_' which is fine, but on some conditions, just makes the data messy and
'modified' from its original format, so not a great design.

I would still propose when user is switched over the otel metrics, the
names would be different (and all those unnecessary part of the name would
instead be gone into tags).

On Thu, Oct 31, 2024 at 4:08 PM D. Ferruzzi ***@***.***>
wrote:

ashb on (2024-11-01 14:22:56 UTC): I agree we should have short names where possible, but lets not artificially limit it in the logger to 32 characters

howardyoo on (2024-11-01 19:22:24 UTC): I can def check whether the name validation works on python otel sdk side, as well as on collector side.Will update sometime this weekend

ferruzzi on (2024-11-01 21:38:03 UTC): Thanks @howardyoo 


@ashb I concur.  Can we agree that the Otel names should continue to be the name without the embedded variables, as it is now, and (assuming Howard confirms the external verification is actually working) just remove our truncating and validating the name?


I'm not very familiar with datadog.  Looking at the existing code, its get_name implementation should be similar to OTel's and just pass the name through as provided since it also gets the tags added later, right?

---

@ArshiaZr  - Please implement the datadog part and either you and/or Howard can sort out what is going on with the otel name validation after that.

howardyoo on (2024-11-01 21:42:33 UTC): Yes, we shouldn’t have the limit to 32 chars - that is way too small and not useful.

ArshiaZr (Issue Creator) on (2024-11-03 03:55:03 UTC): ## Rationale for Using Decorators Instead of Inheritance with Datadog

Using `get_name` with the Datadog protocol is unnecessary since we don’t combine tags and the stat name when calling `DogStatsd` functions. The functions in `DogStatsd` (e.g., `increment`, `decrement`, `gauge`, `timing`) expect the metric name and tags separately, so there’s no need to modify or combine them beforehand. 

Even if tags need to be prepared, we already apply the `@prepare_metric_name_with_tags` decorator before `get_name`, which impacts only the values passed to `get_name` and not the final metric name used in `DogStatsd` calls.

Therefore, making `SafeDogStatsdLogger` a subclass of `StatsLogger` doesn’t add any functional value here. Instead, adding `@prepare_metric_name_with_tags` to each function in `SafeDogStatsdLogger` keeps the code organized and consistent without requiring inheritance specifically for Datadog. This approach provides clarity while keeping `SafeDogStatsdLogger` focused solely on Datadog-specific logic.
Additionally, I added the `@prepare_stat_with_tags` decorator for a more consistent way of validating tags, allowing for cleaner code by centralizing tag preparation and validation across all metric functions.

@ashb @ferruzzi if you have any other suggestions just let me know

ashb on (2024-11-04 14:03:27 UTC): Not being a subclass sounds fine as long as it follows the same interface/protocol. I'll check out the changes when I can.

ArshiaZr (Issue Creator) on (2024-11-05 04:13:02 UTC): I have also added inheritance for consistency. Just let me know which approach is better. @ashb, @ferruzzi

ferruzzi on (2024-11-05 17:27:15 UTC): We discussed on slack, but I'll also reply here for posterity:  I think inheritance is the right way to go here.   Should someone make a change tot he base class in the future, it would be confusing to troubleshoot why StatsD and OTel both work but Datadog doesn't.  So it should inherit for the sake of consistency, if nothing else.

ferruzzi on (2024-11-12 16:49:58 UTC): @ashb  - Can we get this merged?

ashb on (2024-11-13 10:52:52 UTC): Looking at this right now, sorry for the delay

ferruzzi on (2024-11-13 17:12:45 UTC): @ArshiaZr - You can also remove the portion(s) of code that limit the OTel name length now.   I think we've all agreed that we can keep the names short as Best Practice but should no longer be truncating them.

ferruzzi on (2024-11-18 17:43:53 UTC): They increased the name length in September of last year :sweat_smile:  https://github.com/open-telemetry/opentelemetry-python/pull/3442

potiuk on (2024-11-27 12:41:51 UTC): Needs conflicng resolving/rebase

ArshiaZr (Issue Creator) on (2024-11-27 14:52:48 UTC): @potiuk and @ferruzzi  I resolved all of the conflicts and rebased it. Can you now confirm if everything is in place.

ferruzzi on (2024-11-27 23:09:18 UTC): I've seen so many iterations on this it's likely a good idea to have a fresh set of eyes have a quick look, but I think it's right and all the tests are green.  Congrats on that milestone.

bmoon4 on (2025-01-17 00:32:08 UTC): Hi, I'm just curious .. will this pr fix the `otel metrics truncate` issue? OTEL supports maximum of 255 chars.
```
OTEL_NAME_MAX_LENGTH = 63
```

"
2610534710,pull_request,closed,,Fixed typo in section Object Storage XCom Backend in file xcoms.rst,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Baitur5,2024-10-24 05:44:38+00:00,[],2024-10-24 14:22:13+00:00,2024-10-24 08:37:34+00:00,https://github.com/apache/airflow/pull/43339,"[('kind:documentation', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]","[{'comment_id': 2434352241, 'issue_id': 2610534710, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 24, 5, 44, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2434647012, 'issue_id': 2610534710, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 24, 8, 37, 37, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-24 05:44:42 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-10-24 08:37:37 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2610081711,pull_request,closed,,Suppress warnings when masking sensitive confs (#43335),"This is to prevent issues such as https://github.com/apache/airflow/pull/43334

(cherry picked from commit https://github.com/apache/airflow/commit/0a9c3c007bf1672398a63bb9c97b82ec48f60afc)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-24 00:07:03+00:00,[],2024-10-24 08:49:17+00:00,2024-10-24 00:30:06+00:00,https://github.com/apache/airflow/pull/43337,"[('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2433850049, 'issue_id': 2610081711, 'author': 'potiuk', 'body': 'Backport of #43335. SHould be merged after #43336 is merged/', 'created_at': datetime.datetime(2024, 10, 24, 0, 7, 46, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-24 00:07:46 UTC): Backport of #43335. SHould be merged after #43336 is merged/

"
2610041340,pull_request,closed,,Masking configuration values irrelevant to DAG author (#43040),"Some configurations are irrelevant to DAG authors and hence we need to mask those to avoid it from getting logged unknowingly.

Co-authored-by: adesai <adesai@cloudera.com>
Co-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>
(cherry picked from commit 0b030c562363dd924bbbee0793636be18deeabe3)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-23 23:31:36+00:00,[],2024-10-24 08:50:31+00:00,2024-10-24 00:27:16+00:00,https://github.com/apache/airflow/pull/43336,"[('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2433777742, 'issue_id': 2610041340, 'author': 'potiuk', 'body': 'Bacport of #43334', 'created_at': datetime.datetime(2024, 10, 23, 23, 32, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 2433779905, 'issue_id': 2610041340, 'author': 'potiuk', 'body': 'Should be followed by cherry-picking #43335', 'created_at': datetime.datetime(2024, 10, 23, 23, 34, 3, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-23 23:32:38 UTC): Bacport of #43334

potiuk (Issue Creator) on (2024-10-23 23:34:03 UTC): Should be followed by cherry-picking #43335

"
2610035412,pull_request,closed,,Suppress warnings when masking sensitive confs,"This is to prevent issues such as https://github.com/apache/airflow/pull/43334 . This occurred when https://github.com/apache/airflow/pull/43040 was merged. This PR fixes it.

**Before**:

```
root@131e2fda270d:/opt/airflow# airflow providers list
[2024-10-23T23:24:17.970+0000] {configuration.py:995} WARNING - section/key [core/asset_manager_kwargs] not found in config
[2024-10-23T23:24:17.971+0000] {configuration.py:995} WARNING - section/key [database/sql_alchemy_engine_args] not found in config
package_name                              | description                                                                                             | version
==========================================+=========================================================================================================+==========
apache-airflow-providers-airbyte          | Airbyte https://airbyte.com/                                                                            | 4.0.0
apache-airflow-providers-alibaba          | Alibaba Cloud integration (including Alibaba Cloud https://www.alibabacloud.com/)                       | 2.9.1
```

**After**:

```
root@131e2fda270d:/opt/airflow# airflow providers list
package_name                              | description                                                                                             | version
==========================================+=========================================================================================================+==========
apache-airflow-providers-airbyte          | Airbyte https://airbyte.com/                                                                            | 4.0.0
apache-airflow-providers-alibaba          | Alibaba Cloud integration (including Alibaba Cloud https://www.alibabacloud.com/)                       | 2.9.1
```

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-23 23:26:36+00:00,[],2024-10-24 08:49:08+00:00,2024-10-24 00:01:42+00:00,https://github.com/apache/airflow/pull/43335,"[('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2433771842, 'issue_id': 2610035412, 'author': 'kaxil', 'body': ""@potiuk here is why `@suppress_logs_and_warning` wasn't working"", 'created_at': datetime.datetime(2024, 10, 23, 23, 27, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2433774322, 'issue_id': 2610035412, 'author': 'potiuk', 'body': 'Nice find @kaxil !', 'created_at': datetime.datetime(2024, 10, 23, 23, 29, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2433778076, 'issue_id': 2610035412, 'author': 'potiuk', 'body': 'I am cherry-picking #43334 to (in #43336) - this one will also have to be cherry-picked.', 'created_at': datetime.datetime(2024, 10, 23, 23, 33, 1, tzinfo=datetime.timezone.utc)}]","kaxil (Issue Creator) on (2024-10-23 23:27:07 UTC): @potiuk here is why `@suppress_logs_and_warning` wasn't working

potiuk on (2024-10-23 23:29:18 UTC): Nice find @kaxil !

potiuk on (2024-10-23 23:33:01 UTC): I am cherry-picking #43334 to (in #43336) - this one will also have to be cherry-picked.

"
2609998426,pull_request,closed,,Fix production image build in main,"Currently, main branch fails in Production image built with following error

https://github.com/apache/airflow/actions/runs/11489117758/job/31977767455?pr=43331

```
>           obj, end = self.scan_once(s, idx)
E           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 6 (char 5)
```

This is because the test `test_required_providers_are_installed` relies on output of `""airflow providers list --output json""`:

https://github.com/apache/airflow/blob/da7ce4ab7efcee4a5b431bf6779c2051c1a826ad/docker_tests/test_prod_image.py#L85-L94

and the output in main right now is, notice the warnings:

```
[2024-10-23T22:45:37.453+0000] {configuration.py:994} WARNING - section/key [database/sql_alchemy_engine_args] not found in config
[2024-10-23T22:45:37.455+0000] {configuration.py:994} WARNING - section/key [core/asset_manager_kwargs] not found in config
  [{""package_name"": ""apache-airflow-providers-amazon"", ""description"": ""Amazon integration (including Amazon Web Services (AWS) https://aws.amazon.com/)"", ""version"": ""9.0.0.dev0""}, {""package_name"": ""apache-airflow-providers-celery"", ""description"": ""Celery https://docs.celeryq.dev/en/stable/"", ""version"": ""3.8.3.dev0""}, {""package_name"": ""apache-airflow-providers-cncf-kubernetes"", ""description"": ""Kubernetes https://kubernetes.io/"", ""version"": ""9.0.0.dev0""}, {""package_name"": ""apache-airflow-providers-common-compat"", ""description"": ""Common Compatibility Provider - providing compatibility code for previous Airflow versions."", ""version"": ""1.2.1.dev0""}, {""package_name"": ""apache-airflow-providers-common-io"", ""description"": ""Common IO Provider"", ""version"": ""1.4.2.dev0""}, {""package_name"": ""apache-airflow-providers-common-sql"", ""description"": ""Common SQL Provider https://en.wikipedia.org/wiki/SQL"", ""version"": ""1.18.0.dev0""}, {""package_name"": ""apache-airflow-providers-docker"", ""description"": ""Docker https://www.docker.com/"", ""version"": ""3.14.0.dev0""}, {""package_name"": ""apache-airflow-providers-elasticsearch"", ""description"": ""Elasticsearch https://www.elastic.co/elasticsearch"", ""version"": ""5.5.2.dev0""}, {""package_name"": ""apache-airflow-providers-fab"", ""description"": ""Flask App Builder https://flask-appbuilder.readthedocs.io/"", ""version"": ""1.4.1.dev0""}, {""package_name"": ""apache-airflow-providers-ftp"", ""description"": ""File Transfer Protocol (FTP) https://tools.ietf.org/html/rfc114"", ""version"": ""3.11.1.dev0""}, {""package_name"": ""apache-airflow-providers-google"", ""description"": ""Google services including:\n\n  - Google Ads https://ads.google.com/\n  - Google Cloud (GCP) https://cloud.google.com/\n  - Google Firebase https://firebase.google.com/\n  - Google LevelDB https://github.com/google/leveldb/\n  - Google Marketing Platform https://marketingplatform.google.com/\n  - Google Workspace https://workspace.google.com/ (formerly Google Suite)"", ""version"": ""10.24.0.dev0""}, {""package_name"": ""apache-airflow-providers-grpc"", ""description"": ""gRPC https://grpc.io/"", ""version"": ""3.6.0.dev0""}, {""package_name"": ""apache-airflow-providers-hashicorp"", ""description"": ""Hashicorp including Hashicorp Vault https://www.vaultproject.io/"", ""version"": ""3.8.0.dev0""}, {""package_name"": ""apache-airflow-providers-http"", ""description"": ""Hypertext Transfer Protocol (HTTP) https://www.w3.org/Protocols/"", ""version"": ""4.13.1.dev0""}, {""package_name"": ""apache-airflow-providers-imap"", ""description"": ""Internet Message Access Protocol (IMAP) https://tools.ietf.org/html/rfc3501"", ""version"": ""3.7.0.dev0""}, {""package_name"": ""apache-airflow-providers-microsoft-azure"", ""description"": ""Microsoft Azure https://azure.microsoft.com/"", ""version"": ""10.5.1.dev0""}, {""package_name"": ""apache-airflow-providers-mysql"", ""description"": ""MySQL https://www.mysql.com/"", ""version"": ""5.7.2.dev0""}, {""package_name"": ""apache-airflow-providers-odbc"", ""description"": ""ODBC https://github.com/mkleehammer/pyodbc/wiki"", ""version"": ""4.7.1.dev0""}, {""package_name"": ""apache-airflow-providers-openlineage"", ""description"": ""OpenLineage https://openlineage.io/"", ""version"": ""1.12.2.dev0""}, {""package_name"": ""apache-airflow-providers-postgres"", ""description"": ""PostgreSQL https://www.postgresql.org/"", ""version"": ""5.13.1.dev0""}, {""package_name"": ""apache-airflow-providers-redis"", ""description"": ""Redis https://redis.io/"", ""version"": ""3.8.0.dev0""}, {""package_name"": ""apache-airflow-providers-sendgrid"", ""description"": ""Sendgrid https://sendgrid.com/"", ""version"": ""3.6.0.dev0""}, {""package_name"": ""apache-airflow-providers-sftp"", ""description"": ""SSH File Transfer Protocol (SFTP) https://tools.ietf.org/wg/secsh/draft-ietf-secsh-filexfer/"", ""version"": ""4.11.1.dev0""}, {""package_name"": ""apache-airflow-providers-slack"", ""description"": ""Slack https://slack.com/ services integration including:\n\n  - Slack API https://api.slack.com/\n  - Slack Incoming Webhook https://api.slack.com/messaging/webhooks"", ""version"": ""8.9.0.dev0""}, {""package_name"": ""apache-airflow-providers-smtp"", ""description"": ""Simple Mail Transfer Protocol (SMTP) https://tools.ietf.org/html/rfc5321"", ""version"": ""1.8.0.dev0""}, {""package_name"": ""apache-airflow-providers-snowflake"", ""description"": ""Snowflake https://www.snowflake.com/"", ""version"": ""5.8.0.dev0""}, {""package_name"": ""apache-airflow-providers-sqlite"", ""description"": ""SQLite https://www.sqlite.org/"", ""version"": ""3.9.0.dev0""}, {""package_name"": ""apache-airflow-providers-ssh"", ""description"": ""Secure Shell (SSH) https://tools.ietf.org/html/rfc4251"", ""version"": ""3.13.1.dev0""}, {""package_name"": ""apache-airflow-providers-standard"", ""description"": ""Airflow Standard Provider"", ""version"": ""1.0.0.dev0""}]
```

To fix this and make test more resilient, we change Airflow logging level to ERROR so warnings aren't shown on CLI, since we use its output

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-23 22:58:36+00:00,[],2024-10-23 23:18:44+00:00,2024-10-23 23:02:27+00:00,https://github.com/apache/airflow/pull/43334,"[('area:production-image', 'Production image improvements and fixes')]","[{'comment_id': 2433699365, 'issue_id': 2609998426, 'author': 'kaxil', 'body': 'I will debug the warnings separately', 'created_at': datetime.datetime(2024, 10, 23, 23, 0, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2433759172, 'issue_id': 2609998426, 'author': 'kaxil', 'body': 'Figured out, it was because of the change in https://github.com/apache/airflow/pull/43040\r\n\r\n> Good quick fix - but I think the warning should be eventually removed via `@suppress_logs_and_warnings`\r\n> \r\n> Let me see if I can see why it moght not work.', 'created_at': datetime.datetime(2024, 10, 23, 23, 18, 43, tzinfo=datetime.timezone.utc)}]","kaxil (Issue Creator) on (2024-10-23 23:00:34 UTC): I will debug the warnings separately

kaxil (Issue Creator) on (2024-10-23 23:18:43 UTC): Figured out, it was because of the change in https://github.com/apache/airflow/pull/43040

"
2609938871,pull_request,closed,,DatabricksHook: fix status property to work with ClientResponse used in async mode,"closes: #43269 

The object returned in by `request_func` in the `_a_do_api_call` is not a `request.Response` as in the synchronous call but a `ClientResponse` which does not have the property `status_code` but `status`

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",lucafurrer,2024-10-23 22:07:42+00:00,[],2024-10-25 08:18:00+00:00,2024-10-25 08:04:54+00:00,https://github.com/apache/airflow/pull/43333,"[('area:providers', ''), ('provider:databricks', '')]","[{'comment_id': 2433557118, 'issue_id': 2609938871, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 23, 22, 7, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2434660313, 'issue_id': 2609938871, 'author': 'potiuk', 'body': 'Can you please add/modify a unit test for it to avoid regression?', 'created_at': datetime.datetime(2024, 10, 24, 8, 43, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2434687741, 'issue_id': 2609938871, 'author': 'lucafurrer', 'body': '> Can you please add/modify a unit test for it to avoid regression?\r\n\r\nSure, I will try', 'created_at': datetime.datetime(2024, 10, 24, 8, 55, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2434835468, 'issue_id': 2609938871, 'author': 'rawwar', 'body': '> > Can you please add/modify a unit test for it to avoid regression?\r\n> \r\n> Sure, I will try\r\n\r\n@lucafurrer , if you would like some help, I can write the test case for this. Thanks for fixing it.', 'created_at': datetime.datetime(2024, 10, 24, 10, 0, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2435009362, 'issue_id': 2609938871, 'author': 'lucafurrer', 'body': '> > > Can you please add/modify a unit test for it to avoid regression?\r\n> > \r\n> > \r\n> > Sure, I will try\r\n> \r\n> @lucafurrer , if you would like some help, I can write the test case for this. Thanks for fixing it.\r\n\r\n@rawwar Hi, I will not have time before tonight to look into it. If you want go for it.', 'created_at': datetime.datetime(2024, 10, 24, 11, 24, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2435722042, 'issue_id': 2609938871, 'author': 'rawwar', 'body': ""> @rawwar Hi, I will not have time before tonight to look into it. If you want go for it.\n\nWon't be able to do it right now. But, i can finish this in this week"", 'created_at': datetime.datetime(2024, 10, 24, 16, 18, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436375962, 'issue_id': 2609938871, 'author': 'lucafurrer', 'body': '@potiuk, @rawwar I added an unit test. Comments are welcome. \r\nChallenge is that the problem only appears when logging is enabled and the object which had invalid property is mocked as it is the response from the API.', 'created_at': datetime.datetime(2024, 10, 24, 21, 33, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2437154350, 'issue_id': 2609938871, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 25, 8, 4, 56, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-23 22:07:46 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-10-24 08:43:52 UTC): Can you please add/modify a unit test for it to avoid regression?

lucafurrer (Issue Creator) on (2024-10-24 08:55:48 UTC): Sure, I will try

rawwar on (2024-10-24 10:00:54 UTC): @lucafurrer , if you would like some help, I can write the test case for this. Thanks for fixing it.

lucafurrer (Issue Creator) on (2024-10-24 11:24:13 UTC): @rawwar Hi, I will not have time before tonight to look into it. If you want go for it.

rawwar on (2024-10-24 16:18:47 UTC): Won't be able to do it right now. But, i can finish this in this week

lucafurrer (Issue Creator) on (2024-10-24 21:33:53 UTC): @potiuk, @rawwar I added an unit test. Comments are welcome. 
Challenge is that the problem only appears when logging is enabled and the object which had invalid property is mocked as it is the response from the API.

boring-cyborg[bot] on (2024-10-25 08:04:56 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2609746496,pull_request,closed,,Bump ``uv`` to ``0.4.26``,"https://pypi.org/project/uv/0.4.26/

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-23 20:17:43+00:00,[],2024-10-24 00:13:03+00:00,2024-10-24 00:13:02+00:00,https://github.com/apache/airflow/pull/43331,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]","[{'comment_id': 2433527742, 'issue_id': 2609746496, 'author': 'potiuk', 'body': 'Strange but prod image verification failed - could be because of some uv problem. I re-run it.', 'created_at': datetime.datetime(2024, 10, 23, 21, 48, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2433584404, 'issue_id': 2609746496, 'author': 'kaxil', 'body': '> Strange but prod image verification failed - could be because of some uv problem. I re-run it.\r\n\r\nYeah:\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n  ___________ TestPythonPackages.test_required_providers_are_installed ___________\r\n  [gw2] linux -- Python 3.9.20 /tmp/tmplx3z9mmg/.venv/bin/python\r\n  \r\n  self = <docker_tests.test_prod_image.TestPythonPackages object at 0x7f7ce56bbc70>\r\n  default_docker_image = \'ghcr.io/apache/airflow/main/prod/python3.9:b4a37f531cf739f8850e9795bab1473ebef212fd\'\r\n  \r\n      def test_required_providers_are_installed(self, default_docker_image):\r\n          if os.environ.get(""TEST_SLIM_IMAGE""):\r\n              packages_to_install = set(SLIM_IMAGE_PROVIDERS)\r\n              package_file = ""hatch_build.py""\r\n          else:\r\n              packages_to_install = set(REGULAR_IMAGE_PROVIDERS)\r\n              package_file = PROD_IMAGE_PROVIDERS_FILE_PATH\r\n          assert len(packages_to_install) != 0\r\n          output = run_bash_in_docker(""airflow providers list --output json"", image=default_docker_image)\r\n  >       providers = json.loads(output)\r\n  \r\n  docker_tests/test_prod_image.py:94: \r\n  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n  /opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/json/__init__.py:346: in loads\r\n      return _default_decoder.decode(s)\r\n  /opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/json/decoder.py:337: in decode\r\n      obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n  \r\n  self = <json.decoder.JSONDecoder object at 0x7f7ce715b6d0>\r\n  s = \'[2024-10-23T21:52:00.010+0000] {configuration.py:994} WARNING - section/key [core/asset_manager_kwargs] not found in ...kage_name"": ""apache-airflow-providers-standard"", ""description"": ""Airflow Standard Provider"", ""version"": ""1.0.0.dev0""}]\'\r\n  idx = 0\r\n  \r\n      def raw_decode(self, s, idx=0):\r\n          """"""Decode a JSON document from ``s`` (a ``str`` beginning with\r\n          a JSON document) and return a 2-tuple of the Python\r\n          representation and the index in ``s`` where the document ended.\r\n      \r\n          This can be used to decode a JSON document from a string that may\r\n          have extraneous data at the end.\r\n      \r\n          """"""\r\n          try:\r\n  >           obj, end = self.scan_once(s, idx)\r\n  E           json.decoder.JSONDecodeError: Expecting \',\' delimiter: line 1 column 6 (char 5)\r\n  \r\n  /opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/json/decoder.py:353: JSONDecodeError\r\n  =========================== short test summary info ============================\r\n  FAILED docker_tests/test_prod_image.py::TestPythonPackages::test_required_providers_are_installed - json.decoder.JSONDecodeError: Expecting \',\' delimiter: line 1 column 6 (char 5)\r\n```', 'created_at': datetime.datetime(2024, 10, 23, 22, 26, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2433597658, 'issue_id': 2609746496, 'author': 'kaxil', 'body': '> Strange but prod image verification failed - could be because of some uv problem. I re-run it.\r\n\r\nOh actually, looks like something is broken on main too: https://github.com/apache/airflow/actions/runs/11486815718/job/31971045626 (same error)', 'created_at': datetime.datetime(2024, 10, 23, 22, 34, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2433669460, 'issue_id': 2609746496, 'author': 'kaxil', 'body': '> > Strange but prod image verification failed - could be because of some uv problem. I re-run it.\r\n> \r\n> Oh actually, looks like something is broken on main too: https://github.com/apache/airflow/actions/runs/11486815718/job/31971045626 (same error)\r\n\r\nOk, I know now. PR incoming', 'created_at': datetime.datetime(2024, 10, 23, 22, 49, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2433692677, 'issue_id': 2609746496, 'author': 'potiuk', 'body': '> Ok, I know now. PR incoming\r\n\r\nYep:\r\n\r\n` WARNING - section/key [core/asset_manager_kwargs] not found in ...kage_name""`', 'created_at': datetime.datetime(2024, 10, 23, 22, 58, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2433693046, 'issue_id': 2609746496, 'author': 'kaxil', 'body': '@potiuk Fix here: https://github.com/apache/airflow/pull/43334', 'created_at': datetime.datetime(2024, 10, 23, 22, 58, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2433773418, 'issue_id': 2609746496, 'author': 'kaxil', 'body': '> @potiuk Fix here: #43334\r\n\r\nProper fix at https://github.com/apache/airflow/pull/43335', 'created_at': datetime.datetime(2024, 10, 23, 23, 28, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2433775385, 'issue_id': 2609746496, 'author': 'kaxil', 'body': '@potiuk Could I get a review on this :)', 'created_at': datetime.datetime(2024, 10, 23, 23, 30, 24, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-23 21:48:47 UTC): Strange but prod image verification failed - could be because of some uv problem. I re-run it.

kaxil (Issue Creator) on (2024-10-23 22:26:49 UTC): Yeah:

```
=================================== FAILURES ===================================
  ___________ TestPythonPackages.test_required_providers_are_installed ___________
  [gw2] linux -- Python 3.9.20 /tmp/tmplx3z9mmg/.venv/bin/python
  
  self = <docker_tests.test_prod_image.TestPythonPackages object at 0x7f7ce56bbc70>
  default_docker_image = 'ghcr.io/apache/airflow/main/prod/python3.9:b4a37f531cf739f8850e9795bab1473ebef212fd'
  
      def test_required_providers_are_installed(self, default_docker_image):
          if os.environ.get(""TEST_SLIM_IMAGE""):
              packages_to_install = set(SLIM_IMAGE_PROVIDERS)
              package_file = ""hatch_build.py""
          else:
              packages_to_install = set(REGULAR_IMAGE_PROVIDERS)
              package_file = PROD_IMAGE_PROVIDERS_FILE_PATH
          assert len(packages_to_install) != 0
          output = run_bash_in_docker(""airflow providers list --output json"", image=default_docker_image)
  
  docker_tests/test_prod_image.py:94: 
  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
  /opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/json/__init__.py:346: in loads
      return _default_decoder.decode(s)
  /opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/json/decoder.py:337: in decode
      obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
  
  self = <json.decoder.JSONDecoder object at 0x7f7ce715b6d0>
  s = '[2024-10-23T21:52:00.010+0000] {configuration.py:994} WARNING - section/key [core/asset_manager_kwargs] not found in ...kage_name"": ""apache-airflow-providers-standard"", ""description"": ""Airflow Standard Provider"", ""version"": ""1.0.0.dev0""}]'
  idx = 0
  
      def raw_decode(self, s, idx=0):
          """"""Decode a JSON document from ``s`` (a ``str`` beginning with
          a JSON document) and return a 2-tuple of the Python
          representation and the index in ``s`` where the document ended.
      
          This can be used to decode a JSON document from a string that may
          have extraneous data at the end.
      
          """"""
          try:
  E           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 6 (char 5)
  
  /opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/json/decoder.py:353: JSONDecodeError
  =========================== short test summary info ============================
  FAILED docker_tests/test_prod_image.py::TestPythonPackages::test_required_providers_are_installed - json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 6 (char 5)
```

kaxil (Issue Creator) on (2024-10-23 22:34:24 UTC): Oh actually, looks like something is broken on main too: https://github.com/apache/airflow/actions/runs/11486815718/job/31971045626 (same error)

kaxil (Issue Creator) on (2024-10-23 22:49:21 UTC): Ok, I know now. PR incoming

potiuk on (2024-10-23 22:58:40 UTC): Yep:

` WARNING - section/key [core/asset_manager_kwargs] not found in ...kage_name""`

kaxil (Issue Creator) on (2024-10-23 22:58:46 UTC): @potiuk Fix here: https://github.com/apache/airflow/pull/43334

kaxil (Issue Creator) on (2024-10-23 23:28:32 UTC): Proper fix at https://github.com/apache/airflow/pull/43335

kaxil (Issue Creator) on (2024-10-23 23:30:24 UTC): @potiuk Could I get a review on this :)

"
2609731676,pull_request,closed,,Update theme colors in new ui,"Taking some inspiration from the [Chakra-UI 3 announcement](https://www.chakra-ui.com/blog/00-announcing-v3) to improve how we handle colors. Make our own version of semantic colors for our common accent color, blue. Only worry about dark/light mode in our theme and not in components themselves.

We may switch to Chakra UI v3 once its had a few patch releases.

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-10-23 20:09:39+00:00,[],2024-10-25 14:06:43+00:00,2024-10-25 14:06:41+00:00,https://github.com/apache/airflow/pull/43330,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2435927720, 'issue_id': 2609731676, 'author': 'ryanahamilton', 'body': 'In v3 it appears that they are tokens per color palette, so something like\r\n`""blue.muted""` would probably be more inline with how they use them.\r\n\r\nOn Thu, Oct 24, 2024 at 10:24\u202fAM Brent Bovenzi ***@***.***>\r\nwrote:\r\n\r\n> ***@***.**** commented on this pull request.\r\n> ------------------------------\r\n>\r\n> In airflow/ui/src/theme.ts\r\n> <https://github.com/apache/airflow/pull/43330#discussion_r1815450840>:\r\n>\r\n> > @@ -67,8 +72,16 @@ const theme = extendTheme({\r\n>    },\r\n>    semanticTokens: {\r\n>      colors: {\r\n> -      ""subtle-bg"": { _dark: ""gray.900"", _light: ""blue.50"" },\r\n> -      ""subtle-text"": { _dark: ""blue.500"", _light: ""blue.600"" },\r\n> +      /* eslint-disable perfectionist/sort-objects */\r\n> +      contrast: { _dark: ""blue.200"", _light: ""blue.600"" },\r\n> +      focusRing: ""blue.500"",\r\n> +      fg: { _dark: ""blue.600"", _light: ""blue.400"" },\r\n> +      emphasized: { _dark: ""blue.700"", _light: ""blue.300"" },\r\n> +      solid: { _dark: ""blue.800"", _light: ""blue.200"" },\r\n> +      muted: { _dark: ""blue.900"", _light: ""blue.100"" },\r\n>\r\n> These are the color names in chakra v3. So I wanted to practice using\r\n> them. Which fg and emphasized are the colors for foreground elements like\r\n> text, borders, icons. This is a bit exploratory too. I might need to adjust\r\n> it later.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/apache/airflow/pull/43330#discussion_r1815450840>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AAAAZQ35PWBX77UAV72ZDMDZ5EULNAVCNFSM6AAAAABQPS32KKVHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMZDGOJTGMYTAMJYHE>\r\n> .\r\n> You are receiving this because your review was requested.Message ID:\r\n> ***@***.***>\r\n>', 'created_at': datetime.datetime(2024, 10, 24, 17, 34, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436047668, 'issue_id': 2609731676, 'author': 'bbovenzi', 'body': '> In v3 it appears that they are tokens per color palette, so something like `""blue.muted""` would probably be more inline with how they use them.\r\n\r\nGood point. Updated.', 'created_at': datetime.datetime(2024, 10, 24, 18, 13, 30, tzinfo=datetime.timezone.utc)}]","ryanahamilton on (2024-10-24 17:34:31 UTC): In v3 it appears that they are tokens per color palette, so something like
`""blue.muted""` would probably be more inline with how they use them.

On Thu, Oct 24, 2024 at 10:24 AM Brent Bovenzi ***@***.***>
wrote:

bbovenzi (Issue Creator) on (2024-10-24 18:13:30 UTC): Good point. Updated.

"
2609671280,pull_request,closed,,Caching yarn and pnpm dependencies in Docker,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
closes: #43167


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bugraoz93,2024-10-23 19:35:38+00:00,[],2024-12-01 10:08:49+00:00,2024-12-01 10:08:48+00:00,https://github.com/apache/airflow/pull/43329,"[('area:dev-tools', ''), ('area:CI', ""Airflow's tests and continious integration"")]","[{'comment_id': 2433359562, 'issue_id': 2609671280, 'author': 'bugraoz93', 'body': ""Hey @potiuk, \r\n\r\nI have started including the yarn dependency installation very similar to dependency caching. Most probably, I am still missing a lot of parts. I wanted to align with you on the approach before going too deep and include every detail :)\r\n\r\nI think using generic caches from GitHub actions have also a couple of actions for caching. Some of them specifically to yarn, npm etc... I don't think we would fully cascade that to the local environment though since it's limited to using it in GitHub CI. Maybe we can consider caching in CI and locally as separate tasks which using GitHub Actions could be easier to maintain in the future.\r\n\r\nI couldn't properly run the `inline_scripts_in_docker.py` to include it in the Dockfile. That's why CI is failing. I can take care of that part later after we have agreed on the approach and implementation phases.\r\n\r\nThanks for your time!"", 'created_at': datetime.datetime(2024, 10, 23, 20, 19, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445255687, 'issue_id': 2609671280, 'author': 'potiuk', 'body': ""> I couldn't properly run the inline_scripts_in_docker.py to include it in the Dockfile. That's why CI is failing. I can take care of that part later after we have agreed on the approach and implementation phases.\r\n\r\nThis should happen automatically with pre-commit you do not have to run it manually - just `git add` your changes and commit (after running `pre-commit install` once) then it will happen automatically for you."", 'created_at': datetime.datetime(2024, 10, 29, 20, 22, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445278123, 'issue_id': 2609671280, 'author': 'potiuk', 'body': '> I think using generic caches from GitHub actions have also a couple of actions for caching. Some of them specifically to yarn, npm etc... I don\'t think we would fully cascade that to the local environment though since it\'s limited to using it in GitHub CI. Maybe we can consider caching in CI and locally as separate tasks which using GitHub Actions could be easier to maintain in the future.\r\n\r\nYeah. That\'s something that we could do for regular installing of Yarn/NPM dependencies as part of CI jobs, but that will not work well for installing Yarn/NPM deps during the Dockerfile build. And yes - also we have a few places where we install it for local development as you wrote. But I think it\'s better to use specific caching in each case:\r\n\r\n* Dockerfile -> there the ""tip"" caching is really, really efficient, it works great because single build on the server saves all the rebuilds locally - and we just pull single container layer with installed dependencies - which is WAY faster than pulling half of the internet and 1000 node modules individually.\r\n\r\n* pre-commit - it installs node automatically without us doing anything (when language: node is used). And there we also easily controle node version `default_language_version:  python: python3 node: 22.2.0`. There caching is achieved by caching the whole pre-commit cache. And the nice thing is that pre-commit will use single node environment for all the pre-commit hooks that have same specification. We have quite a few of them - some for old UI with yarn, some for new with pnpm and some for a number of node tools. And here I think it already works well with current caching in CI and locally without any change from our side.\r\n\r\nI think both of them will be difficult to implement with any of the ""standard"" actions and are generally ""better"" - and same in CI and locally.\r\n\r\nSo yeah I think your current approach is right.', 'created_at': datetime.datetime(2024, 10, 29, 20, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445467292, 'issue_id': 2609671280, 'author': 'bugraoz93', 'body': ""> > I couldn't properly run the inline_scripts_in_docker.py to include it in the Dockfile. That's why CI is failing. I can take care of that part later after we have agreed on the approach and implementation phases.\r\n> \r\n> This should happen automatically with pre-commit you do not have to run it manually - just `git add` your changes and commit (after running `pre-commit install` once) then it will happen automatically for you.\r\n\r\nYeah, I found the script itself from pre-commit and ran it multiple times as pre-commit and as a raw Python call. I think this is something in my local setup then. I can sort that out. Thanks!"", 'created_at': datetime.datetime(2024, 10, 29, 22, 50, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445485127, 'issue_id': 2609671280, 'author': 'bugraoz93', 'body': ""Yeah, it will be difficult with them. I have checked a couple of them, and they are a bit limited. Even though they seem like they are properly caching, it's still not flexible enough to fit into multiple use cases.\r\nAwesome to hear the approach looks right! Hope I will ping you with a good solution in a couple of days :) \r\nThanks for the detailed answer!"", 'created_at': datetime.datetime(2024, 10, 29, 23, 7, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445528696, 'issue_id': 2609671280, 'author': 'potiuk', 'body': '> Yeah, I found the script itself from pre-commit and ran it multiple times as pre-commit and as a raw Python call. I think this is something in my local setup then. I can sort that out. Thanks!\r\n\r\nOne watchout here - in order for the inlining to work with **NEW** script - you should make sure to add a comment with the right script path just before the script that is ""inlined"" (and ending comment after) - this is the way how the script finds where to inline it.', 'created_at': datetime.datetime(2024, 10, 29, 23, 51, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2480819805, 'issue_id': 2609671280, 'author': 'potiuk', 'body': 'Looks good, but we also have to handle UI dependencies (with pnpm)', 'created_at': datetime.datetime(2024, 11, 16, 21, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2480851712, 'issue_id': 2609671280, 'author': 'bugraoz93', 'body': 'While reviewing the logs to ensure everything was running smoothly, I noticed an issue: I had accidentally reversed the -+e option 🤦\u200d♂️.\r\n\r\nHowever, I encountered the following error:\r\n>#50 2.616 /scripts/docker/install_yarn_dependencies_from_branch_tip.sh: line 21: yarn: command not found\r\n\r\nThis suggests that yarn was either not installed or unavailable in the environment when the script was executed.\r\n\r\nThis made me realize that `npm` and `yarn` should have been installed at the point when the script is executed. I identified the best place to install them using apt and to cache them just before switching to the `airflow` user. Since `yarn` installs `node_modules` to a local directory, I copied the installed dependencies to a cache directory for future use. Once the cache was utilized in the appropriate location, it was deleted during the execution of `compile_www_assets.py` to ensure it was not included in the final package.\r\n\r\n> Looks good, but we also have to handle UI dependencies (with pnpm)\r\n\r\nIndeed, thanks for pointing that out! I wanted to make sure everything was functioning as expected before implementing a similar solution with `pnpm`. That’s the next step I’ll tackle. Many thanks for the quick review!', 'created_at': datetime.datetime(2024, 11, 16, 23, 37, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2492714253, 'issue_id': 2609671280, 'author': 'bugraoz93', 'body': 'There are too many commits, rebased rather than merge :) Could you please check again when you have time?', 'created_at': datetime.datetime(2024, 11, 22, 1, 57, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2505046724, 'issue_id': 2609671280, 'author': 'potiuk', 'body': 'Sorry for missing that one. Rebased it. It looks really good.', 'created_at': datetime.datetime(2024, 11, 28, 0, 32, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2505152767, 'issue_id': 2609671280, 'author': 'potiuk', 'body': ""Hmm. Actually I looked closer (something was wrong here)\r\n\r\nI think this is (and I completely forgot about ) - a bit different issue. What we are currently doing - we do not have at all node /yarn/pnpm in Breeze. We are using and expecting is that `pre-commit` will manage the node pnmp/yarn environment for us.\r\n\r\n```\r\n      - id: compile-ui-assets\r\n        name: Compile ui assets (manual)\r\n        language: node\r\n        stages: ['manual']\r\n        types_or: [javascript, ts, tsx]\r\n        files: ^airflow/ui/\r\n        entry: ./scripts/ci/pre_commit/compile_ui_assets.py\r\n        pass_filenames: false\r\n        additional_dependencies: ['pnpm@9.7.1']\r\n      - id: compile-ui-assets-dev\r\n        name: Compile ui assets in dev mode (manual)\r\n        language: node\r\n        stages: ['manual']\r\n        types_or: [javascript, ts, tsx]\r\n        files: ^airflow/ui/\r\n        entry: ./scripts/ci/pre_commit/compile_ui_assets_dev.py\r\n        pass_filenames: false\r\n        additional_dependencies: ['pnpm@9.7.1']\r\n      - id: compile-www-assets\r\n        name: Compile www assets (manual)\r\n        language: node\r\n        stages: ['manual']\r\n        'types_or': [javascript, ts, tsx]\r\n        files: ^airflow/www/\r\n        entry: ./scripts/ci/pre_commit/compile_www_assets.py\r\n        pass_filenames: false\r\n        additional_dependencies: ['yarn@1.22.21']\r\n      - id: compile-www-assets-dev\r\n        name: Compile www assets in dev mode (manual)\r\n        language: node\r\n        stages: ['manual']\r\n        'types_or': [javascript, ts, tsx]\r\n        files: ^airflow/www/\r\n        entry: ./scripts/ci/pre_commit/compile_www_assets_dev.py\r\n        pass_filenames: false\r\n        additional_dependencies: ['yarn@1.22.21']\r\n```\r\n\r\nSo we do not even have anything in the image.\r\n\r\n\r\nI think the idea of doing similar caching in image (my idea) was really wrong. We could move node + all things to the image but it's not really needed. \r\n\r\nI am not really sure if we should do much now - the intermittent issues with node did not appear recently - so maybe just abandoning it for now is a better idea."", 'created_at': datetime.datetime(2024, 11, 28, 2, 41, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2509668760, 'issue_id': 2609671280, 'author': 'bugraoz93', 'body': ""Thanks for the review! \r\n\r\nThat's exactly what's the case, so I installed the node /yarn/ppm in the image. I tested with Breeze, too, since Breeze builds the Dockerfile.ci in local development. Aa, this only covers the local development case, though which may only speed up and not solve the entire problem.\r\n\r\nI agree, I haven't seen the problem with node for a while now. Let's abandon this for now. Also, managing these dependencies even in more places would be an additional burden. Even let's say we managed the dependencies in the image and removed them from pre-commit, it would increase the image size as well as bring a lot of vulnerabilities. Keeping this in the pre-commit environment still makes more sense. I missed this one. Awesome catch!"", 'created_at': datetime.datetime(2024, 12, 1, 10, 7, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2509669440, 'issue_id': 2609671280, 'author': 'bugraoz93', 'body': 'Closing this PR. If the problem appears again multiple times and bothers us, we can follow up again and discuss possible solutions. :)', 'created_at': datetime.datetime(2024, 12, 1, 10, 8, 48, tzinfo=datetime.timezone.utc)}]","bugraoz93 (Issue Creator) on (2024-10-23 20:19:47 UTC): Hey @potiuk, 

I have started including the yarn dependency installation very similar to dependency caching. Most probably, I am still missing a lot of parts. I wanted to align with you on the approach before going too deep and include every detail :)

I think using generic caches from GitHub actions have also a couple of actions for caching. Some of them specifically to yarn, npm etc... I don't think we would fully cascade that to the local environment though since it's limited to using it in GitHub CI. Maybe we can consider caching in CI and locally as separate tasks which using GitHub Actions could be easier to maintain in the future.

I couldn't properly run the `inline_scripts_in_docker.py` to include it in the Dockfile. That's why CI is failing. I can take care of that part later after we have agreed on the approach and implementation phases.

Thanks for your time!

potiuk on (2024-10-29 20:22:02 UTC): This should happen automatically with pre-commit you do not have to run it manually - just `git add` your changes and commit (after running `pre-commit install` once) then it will happen automatically for you.

potiuk on (2024-10-29 20:35:00 UTC): Yeah. That's something that we could do for regular installing of Yarn/NPM dependencies as part of CI jobs, but that will not work well for installing Yarn/NPM deps during the Dockerfile build. And yes - also we have a few places where we install it for local development as you wrote. But I think it's better to use specific caching in each case:

* Dockerfile -> there the ""tip"" caching is really, really efficient, it works great because single build on the server saves all the rebuilds locally - and we just pull single container layer with installed dependencies - which is WAY faster than pulling half of the internet and 1000 node modules individually.

* pre-commit - it installs node automatically without us doing anything (when language: node is used). And there we also easily controle node version `default_language_version:  python: python3 node: 22.2.0`. There caching is achieved by caching the whole pre-commit cache. And the nice thing is that pre-commit will use single node environment for all the pre-commit hooks that have same specification. We have quite a few of them - some for old UI with yarn, some for new with pnpm and some for a number of node tools. And here I think it already works well with current caching in CI and locally without any change from our side.

I think both of them will be difficult to implement with any of the ""standard"" actions and are generally ""better"" - and same in CI and locally.

So yeah I think your current approach is right.

bugraoz93 (Issue Creator) on (2024-10-29 22:50:34 UTC): Yeah, I found the script itself from pre-commit and ran it multiple times as pre-commit and as a raw Python call. I think this is something in my local setup then. I can sort that out. Thanks!

bugraoz93 (Issue Creator) on (2024-10-29 23:07:38 UTC): Yeah, it will be difficult with them. I have checked a couple of them, and they are a bit limited. Even though they seem like they are properly caching, it's still not flexible enough to fit into multiple use cases.
Awesome to hear the approach looks right! Hope I will ping you with a good solution in a couple of days :) 
Thanks for the detailed answer!

potiuk on (2024-10-29 23:51:26 UTC): One watchout here - in order for the inlining to work with **NEW** script - you should make sure to add a comment with the right script path just before the script that is ""inlined"" (and ending comment after) - this is the way how the script finds where to inline it.

potiuk on (2024-11-16 21:48:00 UTC): Looks good, but we also have to handle UI dependencies (with pnpm)

bugraoz93 (Issue Creator) on (2024-11-16 23:37:57 UTC): While reviewing the logs to ensure everything was running smoothly, I noticed an issue: I had accidentally reversed the -+e option 🤦‍♂️.

However, I encountered the following error:

This suggests that yarn was either not installed or unavailable in the environment when the script was executed.

This made me realize that `npm` and `yarn` should have been installed at the point when the script is executed. I identified the best place to install them using apt and to cache them just before switching to the `airflow` user. Since `yarn` installs `node_modules` to a local directory, I copied the installed dependencies to a cache directory for future use. Once the cache was utilized in the appropriate location, it was deleted during the execution of `compile_www_assets.py` to ensure it was not included in the final package.


Indeed, thanks for pointing that out! I wanted to make sure everything was functioning as expected before implementing a similar solution with `pnpm`. That’s the next step I’ll tackle. Many thanks for the quick review!

bugraoz93 (Issue Creator) on (2024-11-22 01:57:17 UTC): There are too many commits, rebased rather than merge :) Could you please check again when you have time?

potiuk on (2024-11-28 00:32:04 UTC): Sorry for missing that one. Rebased it. It looks really good.

potiuk on (2024-11-28 02:41:16 UTC): Hmm. Actually I looked closer (something was wrong here)

I think this is (and I completely forgot about ) - a bit different issue. What we are currently doing - we do not have at all node /yarn/pnpm in Breeze. We are using and expecting is that `pre-commit` will manage the node pnmp/yarn environment for us.

```
      - id: compile-ui-assets
        name: Compile ui assets (manual)
        language: node
        stages: ['manual']
        types_or: [javascript, ts, tsx]
        files: ^airflow/ui/
        entry: ./scripts/ci/pre_commit/compile_ui_assets.py
        pass_filenames: false
        additional_dependencies: ['pnpm@9.7.1']
      - id: compile-ui-assets-dev
        name: Compile ui assets in dev mode (manual)
        language: node
        stages: ['manual']
        types_or: [javascript, ts, tsx]
        files: ^airflow/ui/
        entry: ./scripts/ci/pre_commit/compile_ui_assets_dev.py
        pass_filenames: false
        additional_dependencies: ['pnpm@9.7.1']
      - id: compile-www-assets
        name: Compile www assets (manual)
        language: node
        stages: ['manual']
        'types_or': [javascript, ts, tsx]
        files: ^airflow/www/
        entry: ./scripts/ci/pre_commit/compile_www_assets.py
        pass_filenames: false
        additional_dependencies: ['yarn@1.22.21']
      - id: compile-www-assets-dev
        name: Compile www assets in dev mode (manual)
        language: node
        stages: ['manual']
        'types_or': [javascript, ts, tsx]
        files: ^airflow/www/
        entry: ./scripts/ci/pre_commit/compile_www_assets_dev.py
        pass_filenames: false
        additional_dependencies: ['yarn@1.22.21']
```

So we do not even have anything in the image.


I think the idea of doing similar caching in image (my idea) was really wrong. We could move node + all things to the image but it's not really needed. 

I am not really sure if we should do much now - the intermittent issues with node did not appear recently - so maybe just abandoning it for now is a better idea.

bugraoz93 (Issue Creator) on (2024-12-01 10:07:04 UTC): Thanks for the review! 

That's exactly what's the case, so I installed the node /yarn/ppm in the image. I tested with Breeze, too, since Breeze builds the Dockerfile.ci in local development. Aa, this only covers the local development case, though which may only speed up and not solve the entire problem.

I agree, I haven't seen the problem with node for a while now. Let's abandon this for now. Also, managing these dependencies even in more places would be an additional burden. Even let's say we managed the dependencies in the image and removed them from pre-commit, it would increase the image size as well as bring a lot of vulnerabilities. Keeping this in the pre-commit environment still makes more sense. I missed this one. Awesome catch!

bugraoz93 (Issue Creator) on (2024-12-01 10:08:48 UTC): Closing this PR. If the problem appears again multiple times and bothers us, we can follow up again and discuss possible solutions. :)

"
2609301099,pull_request,closed,,Rename DAG to Dag in new UI,"Use ""dag"" as a word instead of an acronym.

Before:
<img width=""477"" alt=""Screenshot 2024-10-23 at 1 14 23 PM"" src=""https://github.com/user-attachments/assets/d7f9a60b-cb71-4b84-b236-e67bf3f89f58"">

After:
<img width=""562"" alt=""Screenshot 2024-10-23 at 1 10 39 PM"" src=""https://github.com/user-attachments/assets/2cbb94b9-a043-497d-8a45-cab02e9460f5"">



---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-10-23 17:15:10+00:00,[],2024-10-23 19:33:02+00:00,2024-10-23 19:33:00+00:00,https://github.com/apache/airflow/pull/43325,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2609285701,pull_request,closed,,AIP 38 Select a dag from dags list,"Add ability to click on a dag in the dags list and navigate to it's own page.

As part of this route change, we also add an ErrorPage switch to react-router-dom's recommended syntax for routing.

Finally, store card/table view preference in localStorage.


<img width=""856"" alt=""Screenshot 2024-10-23 at 1 06 03 PM"" src=""https://github.com/user-attachments/assets/23b767cb-e27d-468d-98d6-951d2c7fdf74"">
<img width=""739"" alt=""Screenshot 2024-10-23 at 1 06 09 PM"" src=""https://github.com/user-attachments/assets/3a12856a-a3c9-46da-8247-600baf15b17f"">
<img width=""821"" alt=""Screenshot 2024-10-23 at 1 06 16 PM"" src=""https://github.com/user-attachments/assets/c98dfcaf-d041-468e-902c-0eaeefb8156f"">
<img width=""892"" alt=""Screenshot 2024-10-23 at 1 06 21 PM"" src=""https://github.com/user-attachments/assets/1486309a-f116-4eef-a013-66ac8d397492"">
<img width=""301"" alt=""Screenshot 2024-10-23 at 5 12 32 PM"" src=""https://github.com/user-attachments/assets/7f8e61d5-77d4-4046-8f38-cc4805835c55"">

Even catching errors in dev:
<img width=""803"" alt=""Screenshot 2024-10-23 at 5 13 17 PM"" src=""https://github.com/user-attachments/assets/d68a9f91-4609-495e-8ae7-6505c89885d3"">


---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-10-23 17:09:01+00:00,[],2024-10-25 18:41:38+00:00,2024-10-25 18:41:37+00:00,https://github.com/apache/airflow/pull/43324,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2609270639,pull_request,closed,,Shorten import timeout in DAG import test to speed up execution,"This test used to take more than 60 seconds previously. Now it takes less than a second.

Before:

```
60.06s call     tests/models/test_dagbag.py::TestDagBag::test_timeout_dag_errors_are_import_errors
0.77s setup    tests/models/test_dagbag.py::TestDagBag::test_timeout_dag_errors_are_import_errors
0.07s teardown tests/models/test_dagbag.py::TestDagBag::test_timeout_dag_errors_are_import_errors
```

After:

```
0.49s setup    tests/models/test_dagbag.py::TestDagBag::test_timeout_dag_errors_are_import_errors
0.02s call     tests/models/test_dagbag.py::TestDagBag::test_timeout_dag_errors_are_import_errors
0.01s teardown tests/models/test_dagbag.py::TestDagBag::test_timeout_dag_errors_are_import_errors
```

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-23 17:00:53+00:00,[],2024-10-23 19:47:11+00:00,2024-10-23 19:47:09+00:00,https://github.com/apache/airflow/pull/43323,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2609062808,pull_request,closed,,Fix failing main,"Test was failing here: https://github.com/apache/airflow/actions/runs/11482958870/job/31957874656?pr=43291

```
=========================== short test summary info ============================
FAILED tests/always/test_project_structure.py::TestProjectStructure::test_providers_modules_should_have_tests - AssertionError: Detect added tests in providers module - please remove the tests from OVERLOOKED_TESTS list above
assert equals failed
  set()                            set([
                                     'providers/tests/google/cloud
                                   /sensors/test_dataform.py',
                                   ])
= 1 failed, 12165 passed, 9445 skipped, 2 xfailed, 5 warnings in 571.47s (0:09:31) =

```

This was because the test was added in https://github.com/apache/airflow/pull/43055/

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-23 15:41:33+00:00,[],2024-10-23 16:23:54+00:00,2024-10-23 16:23:50+00:00,https://github.com/apache/airflow/pull/43322,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2608966156,pull_request,closed,,[BACKPORT] Fix instruction for docker compose(tested on Mac M1) (#43119),"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Backport of #43119

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",shahar1,2024-10-23 15:09:26+00:00,[],2024-10-24 08:55:33+00:00,2024-10-23 18:45:03+00:00,https://github.com/apache/airflow/pull/43321,"[('kind:documentation', ''), ('type:doc-only', 'Changelog: Doc Only')]",[],
2608925194,pull_request,closed,,Add Airflow 3 ``ui`` & ``task_sdk`` directories to `.gitignore`,"These directories are ignored so someone can develop on both (AF2 and AF3) of them without deleting files manually.

Without it I had to manually delete all the UI files

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-23 14:57:06+00:00,[],2024-10-24 14:22:56+00:00,2024-10-24 10:09:54+00:00,https://github.com/apache/airflow/pull/43319,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2608902405,pull_request,closed,,Backport: Bump Flask-AppBuilder to ``4.5.2`` (#43309),"https://pypi.org/project/Flask-AppBuilder/4.5.2/

Backport of https://github.com/apache/airflow/pull/43309 (cherry picked from commit d7f50baa6fa74eb6d7493e3abadb687b39ca0b5d)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-23 14:51:40+00:00,[],2024-10-24 07:23:53+00:00,2024-10-23 17:17:27+00:00,https://github.com/apache/airflow/pull/43318,"[('area:dev-tools', ''), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log')]","[{'comment_id': 2432497662, 'issue_id': 2608902405, 'author': 'kaxil', 'body': 'Merge after https://github.com/apache/airflow/pull/43316 is merged', 'created_at': datetime.datetime(2024, 10, 23, 14, 52, 13, tzinfo=datetime.timezone.utc)}]","kaxil (Issue Creator) on (2024-10-23 14:52:13 UTC): Merge after https://github.com/apache/airflow/pull/43316 is merged

"
2608865063,pull_request,closed,,AIP-84 Post Pool,related to: https://github.com/apache/airflow/issues/42370,pierrejeambrun,2024-10-23 14:40:21+00:00,['pierrejeambrun'],2024-10-24 14:44:48+00:00,2024-10-24 14:44:46+00:00,https://github.com/apache/airflow/pull/43317,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-84', 'Modern Rest API'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]",[],
2608861556,pull_request,closed,,Upgrade FAB to 4.5.1 (#43251),"FAB 4.5.1 has been released in September with a few small fixes. This change updates fab to 4.5.1 including changing the rate limiter creation that is vendored in. It has been changed in https://github.com/dpgaspar/Flask-AppBuilder/pull/2254 and relased in 4.5.1. That's the only dfference in security manager between 4.5.0 and 4.5.1.

(cherry picked from commit 84ff10bf06cf1a529169990d25c00a33d06e740e)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-23 14:39:07+00:00,[],2024-10-24 10:00:06+00:00,2024-10-23 16:26:33+00:00,https://github.com/apache/airflow/pull/43316,"[('area:webserver', 'Webserver related Issues'), ('area:dev-tools', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]","[{'comment_id': 2432452052, 'issue_id': 2608861556, 'author': 'potiuk', 'body': 'Backport of #43251 - should be followed with backport of #43309 when merged', 'created_at': datetime.datetime(2024, 10, 23, 14, 40, 1, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-23 14:40:01 UTC): Backport of #43251 - should be followed with backport of #43309 when merged

"
2608765835,pull_request,closed,,test: remove providers/tests/google/cloud/sensors/test_dataform.py from OVERLOOKED_TESTS,"due to https://github.com/apache/airflow/actions/runs/11481454183/job/31952676333?pr=43313

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-10-23 14:11:11+00:00,[],2024-10-24 00:38:02+00:00,2024-10-24 00:38:02+00:00,https://github.com/apache/airflow/pull/43315,[],"[{'comment_id': 2433930005, 'issue_id': 2608765835, 'author': 'Lee-W', 'body': 'This seems to be fixed in main already', 'created_at': datetime.datetime(2024, 10, 24, 0, 38, 2, tzinfo=datetime.timezone.utc)}]","Lee-W (Issue Creator) on (2024-10-24 00:38:02 UTC): This seems to be fixed in main already

"
2608742956,pull_request,closed,,fix typo in dag_schedule_dataset_alias_reference migration file,"backport https://github.com/apache/airflow/pull/43245/files#diff-465bfca34e4030692c541248495b5abfe4deea606db126241dade041746fbd60

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-10-23 14:03:25+00:00,['Lee-W'],2024-10-28 06:49:16+00:00,2024-10-26 15:05:19+00:00,https://github.com/apache/airflow/pull/43314,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)'), ('area:db-migrations', 'PRs with DB migration')]","[{'comment_id': 2432393747, 'issue_id': 2608742956, 'author': 'shahar1', 'body': 'Static checks fail for some reason', 'created_at': datetime.datetime(2024, 10, 23, 14, 24, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2433919695, 'issue_id': 2608742956, 'author': 'Lee-W', 'body': ""> Hmm not so sure about just renaming constraints. What about folks who are already on this version?\r\n\r\nThese reflect how the actual model is defined. As no feature is expected to be added to this version, I think these columns won't change in the future either."", 'created_at': datetime.datetime(2024, 10, 24, 0, 36, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2435932918, 'issue_id': 2608742956, 'author': 'kaxil', 'body': '> > Hmm not so sure about just renaming constraints. What about folks who are already on this version?\r\n> \r\n> These reflect how the actual model is defined. As no feature is expected to be added to this version, I think these columns won\'t change in the future either.\r\n\r\nIf you download Airflow 2.8.0, run `airflow db migrate`, upgrade to 2.10.2 and run `airflow db migrate` again with Postgres or MySQL backend, the constraints are created with the old names. Example:\r\n\r\n<img width=""253"" alt=""image"" src=""https://github.com/user-attachments/assets/e18aa36c-13eb-40b9-9fbf-f84b7012cd9f"">\r\n\r\n\r\nIf we merge and ship this change, we will have some users with `dsdar_dag_fkey` as name of constraint and some on `dsdar_dataset_fkey`. In future, if we need to access a constraint in another migration via name that won\'t work for some users.\r\n\r\nThis is true for folks upgrading from let\'s say Airflow 2.8.0 to 2.10.2 --> for those folks tables are created from ""migration"" . It is only for new Airflow 2.10.0 user where all tables are just created from ORM.\r\n\r\n<img width=""325"" alt=""image"" src=""https://github.com/user-attachments/assets/8e9b791e-b845-42da-ad23-04ef845cbf85"">', 'created_at': datetime.datetime(2024, 10, 24, 17, 36, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436096428, 'issue_id': 2608742956, 'author': 'potiuk', 'body': 'Yep. Agree with @kaxil. That should be a separate migration. Also the original cahnge in main should be reverted and re-applied after that because people will go eventually 2.x -> 2.11 -> 3.x and things will break for them.', 'created_at': datetime.datetime(2024, 10, 24, 18, 39, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436835934, 'issue_id': 2608742956, 'author': 'Lee-W', 'body': 'Got it. makes sense. I will create a fix pr to the main as well', 'created_at': datetime.datetime(2024, 10, 25, 5, 0, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438718759, 'issue_id': 2608742956, 'author': 'potiuk', 'body': 'Also I guess it should be back-ported ?', 'created_at': datetime.datetime(2024, 10, 25, 20, 17, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439246339, 'issue_id': 2608742956, 'author': 'Lee-W', 'body': '> Also I guess it should be back-ported ?\r\n\r\nThis is for 2.10.x, but I guess what you mean is for main and yes, the PR is here https://github.com/apache/airflow/pull/43373', 'created_at': datetime.datetime(2024, 10, 26, 3, 36, 7, tzinfo=datetime.timezone.utc)}]","shahar1 on (2024-10-23 14:24:08 UTC): Static checks fail for some reason

Lee-W (Issue Creator) on (2024-10-24 00:36:07 UTC): These reflect how the actual model is defined. As no feature is expected to be added to this version, I think these columns won't change in the future either.

kaxil on (2024-10-24 17:36:03 UTC): If you download Airflow 2.8.0, run `airflow db migrate`, upgrade to 2.10.2 and run `airflow db migrate` again with Postgres or MySQL backend, the constraints are created with the old names. Example:

<img width=""253"" alt=""image"" src=""https://github.com/user-attachments/assets/e18aa36c-13eb-40b9-9fbf-f84b7012cd9f"">


If we merge and ship this change, we will have some users with `dsdar_dag_fkey` as name of constraint and some on `dsdar_dataset_fkey`. In future, if we need to access a constraint in another migration via name that won't work for some users.

This is true for folks upgrading from let's say Airflow 2.8.0 to 2.10.2 --> for those folks tables are created from ""migration"" . It is only for new Airflow 2.10.0 user where all tables are just created from ORM.

<img width=""325"" alt=""image"" src=""https://github.com/user-attachments/assets/8e9b791e-b845-42da-ad23-04ef845cbf85"">

potiuk on (2024-10-24 18:39:50 UTC): Yep. Agree with @kaxil. That should be a separate migration. Also the original cahnge in main should be reverted and re-applied after that because people will go eventually 2.x -> 2.11 -> 3.x and things will break for them.

Lee-W (Issue Creator) on (2024-10-25 05:00:53 UTC): Got it. makes sense. I will create a fix pr to the main as well

potiuk on (2024-10-25 20:17:41 UTC): Also I guess it should be back-ported ?

Lee-W (Issue Creator) on (2024-10-26 03:36:07 UTC): This is for 2.10.x, but I guess what you mean is for main and yes, the PR is here https://github.com/apache/airflow/pull/43373

"
2608714981,pull_request,closed,,Fix AIP-74 migration errors,"## Why
I have conducted further testing on migrating between versions and discovered some typos and errors.

## What
* fix(migrations):
    * add server_default to the newly added ""group"" column in the dataset table
        * without this change, db with existing dataset rows break due to nullable=False
    * fix typos in the dataset to asset migration files and model

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-10-23 13:55:06+00:00,[],2024-10-24 15:24:31+00:00,2024-10-24 09:33:05+00:00,https://github.com/apache/airflow/pull/43313,"[('area:db-migrations', 'PRs with DB migration'), ('AIP-74', 'Dataset -> Asset')]",[],
2608650606,pull_request,closed,,Migrate public endpoint Get Airflow Version to FastAPI,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

closes: https://github.com/apache/airflow/issues/42879
related: https://github.com/apache/airflow/issues/42370

This migrates the Get Airflow Version API from `api_connexion` to `api_fastapi`.",omkar-foss,2024-10-23 13:37:00+00:00,[],2024-11-14 18:33:30+00:00,2024-10-24 13:55:15+00:00,https://github.com/apache/airflow/pull/43312,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2608591839,pull_request,closed,,Add isolation mode exclusion for mapped operator test (#43297),"This test has been cherry-picked to v2-10-test and should be excluded from isolation mode.

(cherry picked from commit f4d9a1b068ab3fed4e527bd8dbc67043caae620e)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-23 13:22:16+00:00,[],2024-10-23 14:42:15+00:00,2024-10-23 14:42:13+00:00,https://github.com/apache/airflow/pull/43311,[],"[{'comment_id': 2432159594, 'issue_id': 2608591839, 'author': 'potiuk', 'body': 'Backport of #43297 that should fix the DB isolation tests in `v2-10-test`', 'created_at': datetime.datetime(2024, 10, 23, 13, 23, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-23 13:23:00 UTC): Backport of #43297 that should fix the DB isolation tests in `v2-10-test`

"
2608537845,pull_request,closed,,Check python version that was used to install pre-commit venvs (#43282),"Since we moved to Python 3.9 and started usign 3.9+ only features line functools.cache, having Python 3.8 as default python version will result in virtualenvs created with outdated python.

This pre-commit checks what is the global version of python3 and it will complain if it is lower than 3.9. This is done via explicit call of ""python3"", because this is what pre-commit does. Also global setting is needed because otherwise new virtualenvs created by pre-commit might be created using lower python version.

(cherry picked from commit 076da924696dc7d8814a38f442e9ca3eb3e90634)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-23 13:04:46+00:00,[],2024-10-24 09:01:15+00:00,2024-10-23 14:44:00+00:00,https://github.com/apache/airflow/pull/43310,"[('area:dev-tools', ''), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log')]","[{'comment_id': 2432102126, 'issue_id': 2608537845, 'author': 'potiuk', 'body': 'Backport of #43282  -> Updated here for Python ""3.8"" - @jscheffl , you will have to update it later as well in #42788', 'created_at': datetime.datetime(2024, 10, 23, 13, 6, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432465175, 'issue_id': 2608537845, 'author': 'potiuk', 'body': 'Failed tests fixed already in tip of 2-10-test. merging', 'created_at': datetime.datetime(2024, 10, 23, 14, 43, 57, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-23 13:06:45 UTC): Backport of #43282  -> Updated here for Python ""3.8"" - @jscheffl , you will have to update it later as well in #42788

potiuk (Issue Creator) on (2024-10-23 14:43:57 UTC): Failed tests fixed already in tip of 2-10-test. merging

"
2608492229,pull_request,closed,,Bump Flask-AppBuilder to ``4.5.2``,"https://pypi.org/project/Flask-AppBuilder/4.5.2/ . It fixes WTForms issue mentioned in https://github.com/apache/airflow/pull/43233. Fix was https://github.com/dpgaspar/Flask-AppBuilder/pull/2279

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-23 12:49:56+00:00,[],2024-10-24 07:24:04+00:00,2024-10-23 14:36:31+00:00,https://github.com/apache/airflow/pull/43309,"[('area:providers', ''), ('area:dev-tools', ''), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log'), ('provider:fab', '')]","[{'comment_id': 2432052023, 'issue_id': 2608492229, 'author': 'ashb', 'body': 'This the WTForms fix?', 'created_at': datetime.datetime(2024, 10, 23, 12, 50, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432053052, 'issue_id': 2608492229, 'author': 'kaxil', 'body': '> This the WTForms fix?\r\n\r\nYup', 'created_at': datetime.datetime(2024, 10, 23, 12, 50, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432054024, 'issue_id': 2608492229, 'author': 'kaxil', 'body': '> This the WTForms fix?\r\n\r\n~Actually I will update the WTForms thing too~\r\n\r\nDone in https://github.com/apache/airflow/pull/43309/commits/3459d4f74c9bfbbb2dc41741ca994d85c7f36755', 'created_at': datetime.datetime(2024, 10, 23, 12, 51, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432133962, 'issue_id': 2608492229, 'author': 'potiuk', 'body': 'That was quick (from Daniel). But you will have to rebase @kaxil as I just merged 4.5.1 as it also had some ""security manager"" code changes - so we cannot go straight to 4.5.1 -> and now you have conflicts', 'created_at': datetime.datetime(2024, 10, 23, 13, 14, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432134609, 'issue_id': 2608492229, 'author': 'kaxil', 'body': '> That was quick (from Daniel). But you will have to rebase @kaxil as I just merged 4.5.1 as it also had some ""security manager"" code changes - so we cannot go straight to 4.5.1 -> and now you have conflicts\r\n\r\nDone', 'created_at': datetime.datetime(2024, 10, 23, 13, 14, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432142412, 'issue_id': 2608492229, 'author': 'potiuk', 'body': 'Also we will need to backport this one to 2-10-test because of the wtforms limit removal', 'created_at': datetime.datetime(2024, 10, 23, 13, 16, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432143108, 'issue_id': 2608492229, 'author': 'kaxil', 'body': '> Also we will need to backport this one to 2-10-test because of the wtforms limit removal\r\n\r\nYup, will create a backport PR once this is merged', 'created_at': datetime.datetime(2024, 10, 23, 13, 17, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432146827, 'issue_id': 2608492229, 'author': 'potiuk', 'body': 'I think due to our new backport policy, the number of PRs merged in Airflow increased significantly... But I am still increasing the lead @kaxil ;)', 'created_at': datetime.datetime(2024, 10, 23, 13, 18, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432150115, 'issue_id': 2608492229, 'author': 'potiuk', 'body': '> But I am still increasing the lead @kaxil ;)\r\n\r\nor NOT\r\n\r\n![image](https://github.com/user-attachments/assets/10c4a9f3-2caa-4047-9774-9429ce6a873c)', 'created_at': datetime.datetime(2024, 10, 23, 13, 20, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432150600, 'issue_id': 2608492229, 'author': 'kaxil', 'body': '> I think due to our new backport policy, the number of PRs merged in Airflow increased significantly... But I am still increasing the lead @kaxil ;)\r\n\r\nI need to change git author email and name on your laptop to mine :D', 'created_at': datetime.datetime(2024, 10, 23, 13, 20, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432155728, 'issue_id': 2608492229, 'author': 'kaxil', 'body': '> > But I am still increasing the lead @kaxil ;)\r\n> \r\n> or NOT\r\n> \r\n> ![image](https://private-user-images.githubusercontent.com/595491/379285675-10c4a9f3-2caa-4047-9774-9429ce6a873c.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mjk2ODk5MDIsIm5iZiI6MTcyOTY4OTYwMiwicGF0aCI6Ii81OTU0OTEvMzc5Mjg1Njc1LTEwYzRhOWYzLTJjYWEtNDA0Ny05Nzc0LTk0MjljZTZhODczYy5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQxMDIzJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MTAyM1QxMzIwMDJaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1jNzcxOGI3OWRhMTgyMGMzMzQ1YTFhMjQ1OTkxYjRlY2M3NmFiNGVjNjk2YTNiNGJkODk1ZmJjNGI3MjI2NWFiJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCJ9.7HpLlphuaV98HkHCqZn5CUx73KDBySPRiu5iYY5zu2I)\r\n\r\nLet me be happy with the weekly ones :D', 'created_at': datetime.datetime(2024, 10, 23, 13, 21, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432444442, 'issue_id': 2608492229, 'author': 'kaxil', 'body': 'Creating backport', 'created_at': datetime.datetime(2024, 10, 23, 14, 37, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432498452, 'issue_id': 2608492229, 'author': 'kaxil', 'body': 'Backport PR: https://github.com/apache/airflow/pull/43318', 'created_at': datetime.datetime(2024, 10, 23, 14, 52, 25, tzinfo=datetime.timezone.utc)}]","ashb on (2024-10-23 12:50:28 UTC): This the WTForms fix?

kaxil (Issue Creator) on (2024-10-23 12:50:50 UTC): Yup

kaxil (Issue Creator) on (2024-10-23 12:51:06 UTC): ~Actually I will update the WTForms thing too~

Done in https://github.com/apache/airflow/pull/43309/commits/3459d4f74c9bfbbb2dc41741ca994d85c7f36755

potiuk on (2024-10-23 13:14:04 UTC): That was quick (from Daniel). But you will have to rebase @kaxil as I just merged 4.5.1 as it also had some ""security manager"" code changes - so we cannot go straight to 4.5.1 -> and now you have conflicts

kaxil (Issue Creator) on (2024-10-23 13:14:19 UTC): Done

potiuk on (2024-10-23 13:16:48 UTC): Also we will need to backport this one to 2-10-test because of the wtforms limit removal

kaxil (Issue Creator) on (2024-10-23 13:17:04 UTC): Yup, will create a backport PR once this is merged

potiuk on (2024-10-23 13:18:37 UTC): I think due to our new backport policy, the number of PRs merged in Airflow increased significantly... But I am still increasing the lead @kaxil ;)

potiuk on (2024-10-23 13:20:01 UTC): or NOT

![image](https://github.com/user-attachments/assets/10c4a9f3-2caa-4047-9774-9429ce6a873c)

kaxil (Issue Creator) on (2024-10-23 13:20:13 UTC): I need to change git author email and name on your laptop to mine :D

kaxil (Issue Creator) on (2024-10-23 13:21:51 UTC): Let me be happy with the weekly ones :D

kaxil (Issue Creator) on (2024-10-23 14:37:20 UTC): Creating backport

kaxil (Issue Creator) on (2024-10-23 14:52:25 UTC): Backport PR: https://github.com/apache/airflow/pull/43318

"
2608251278,pull_request,closed,,Made usage of Path explicit for Edge Worker pid files,"## Summary

This PR fixes a type confusion in the pid file path in the Edge worker.
Now, pid_file_path is explicitly treated as string in the entire implementation of the Edge Worker cli, which interfaces with the lib `lockfile.pidlockfile` for pid file interaction, consuming file path as string only

## Changes in Detail

- updated function _write_pid_to_pidfile to consume pid file path as string (as any other function in the module `edge_command`
- converted property `pid_file_path` of class `_EdgeWorkerCli`from `Path` to `str`",OliverWannenwetsch,2024-10-23 11:31:02+00:00,[],2024-10-23 13:31:03+00:00,2024-10-23 13:31:03+00:00,https://github.com/apache/airflow/pull/43308,"[('area:providers', '')]",[],
2608166275,pull_request,closed,,Fixes behaviour of example dag tests for main/other branches (#43273),"While the #43260 attempted to address the problem where example dag importability tests should skip provider tests on non-main, it did not actually solve the problem.

While debugging it, it turned out that since #42505, the provider tests were not executed in main ""at all"" - the ""providers"" directory was not included in the list of places to check for the example dags (they were in ""airflow"" in v2-10-test"") this is why it ""looked like"" the solution worked in ""main"".

This PR fixes both problems:

* brings back importability of provider's example_dags in main branch
* properly excludes the providers examples in non-main branch

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-23 10:57:39+00:00,[],2024-10-23 12:06:54+00:00,2024-10-23 12:06:27+00:00,https://github.com/apache/airflow/pull/43307,[],"[{'comment_id': 2431734422, 'issue_id': 2608166275, 'author': 'potiuk', 'body': 'Backport of #43273 - should finally get the last remaining ""providers"" dependence in v2-10-test (or so I hope).', 'created_at': datetime.datetime(2024, 10, 23, 10, 58, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2431909556, 'issue_id': 2608166275, 'author': 'potiuk', 'body': 'Finally v2-10-test green @utkarsharma2 @ephraimbuddy', 'created_at': datetime.datetime(2024, 10, 23, 12, 6, 52, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-23 10:58:59 UTC): Backport of #43273 - should finally get the last remaining ""providers"" dependence in v2-10-test (or so I hope).

potiuk (Issue Creator) on (2024-10-23 12:06:52 UTC): Finally v2-10-test green @utkarsharma2 @ephraimbuddy

"
2608159750,pull_request,closed,,Sync v2-10-stable with v2-10-test(sync_v2_10_test) to release 2.10.3,Time for 2.10.3rc1!,utkarsharma2,2024-10-23 10:55:23+00:00,[],2025-01-11 19:44:19+00:00,2024-10-28 11:11:02+00:00,https://github.com/apache/airflow/pull/43306,"[('area:CLI', ''), ('area:dev-tools', ''), ('area:API', ""Airflow's REST/HTTP API""), ('area:production-image', 'Production image improvements and fixes')]","[{'comment_id': 2434861391, 'issue_id': 2608159750, 'author': 'utkarsharma2', 'body': '> The list could use a ""does the title make sense for an end user"" pass or 2, but overall looks good.\r\n\r\n@jedcunningham I made some changes to the PR title in changelogs, PTAL.', 'created_at': datetime.datetime(2024, 10, 24, 10, 11, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2435327407, 'issue_id': 2608159750, 'author': 'kaxil', 'body': '@utkarsharma2 we need to get https://github.com/apache/airflow/pull/43348 in fyi', 'created_at': datetime.datetime(2024, 10, 24, 13, 39, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2435467182, 'issue_id': 2608159750, 'author': 'utkarsharma2', 'body': '> @utkarsharma2 we need to get #43348 in fyi\r\n\r\nIncluded it.', 'created_at': datetime.datetime(2024, 10, 24, 14, 32, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438633914, 'issue_id': 2608159750, 'author': 'potiuk', 'body': 'One comment. I think - at least before final realease we need to release all the providers or at least the `apache-airflow-providers-fab` - with the `Flask-Application-Builder == 4.5.2`. We already have a number of issues of people who either do not use constraints or use and update their own constraints (because of WTForms release breaking FAB):\r\n\r\n* https://github.com/apache/airflow/issues/43228\r\n* https://github.com/apache/airflow/issues/43270\r\n* https://github.com/apache/airflow/issues/43356\r\n* https://github.com/apache/airflow/issues/43375\r\n\r\nAnd this is something we can only address by releasing the new FAB provider and making sure constraints are updated to point to it.', 'created_at': datetime.datetime(2024, 10, 25, 19, 21, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438634098, 'issue_id': 2608159750, 'author': 'potiuk', 'body': 'cc: @eladkal  ^^', 'created_at': datetime.datetime(2024, 10, 25, 19, 22, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2440909447, 'issue_id': 2608159750, 'author': 'utkarsharma2', 'body': ""> One comment. I think - at least before final realease we need to release all the providers or at least the `apache-airflow-providers-fab` - with the `Flask-Application-Builder == 4.5.2`. We already have a number of issues of people who either do not use constraints or use and update their own constraints (because of WTForms release breaking FAB):\r\n> \r\n>     * [WTForms 3.2.0 broke Airflow main #43228](https://github.com/apache/airflow/issues/43228)\r\n> \r\n>     * [500 on any admin pages #43270](https://github.com/apache/airflow/issues/43270)\r\n> \r\n>     * [WTForms==3.2.1 breaks UI #43356](https://github.com/apache/airflow/issues/43356)\r\n> \r\n>     * [AttributeError: 'tuple' object has no attribute 'items' when entering UI Admin Variables Section #43375](https://github.com/apache/airflow/issues/43375)\r\n> \r\n> \r\n> And this is something we can only address by releasing the new FAB provider and making sure constraints are updated to point to it.\r\n\r\nSince we already have 1st wave of providers out, I'm proceeding with release."", 'created_at': datetime.datetime(2024, 10, 28, 8, 52, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441261256, 'issue_id': 2608159750, 'author': 'potiuk', 'body': ""> Since we already have 1st wave of providers out, I'm proceeding with release.\r\n\r\nGo ahead, we can always regenerate the constraints to include the new providers released - they are rather independent from the release and internal RC testing and we've already done it in the past."", 'created_at': datetime.datetime(2024, 10, 28, 10, 59, 32, tzinfo=datetime.timezone.utc)}]","utkarsharma2 (Issue Creator) on (2024-10-24 10:11:45 UTC): @jedcunningham I made some changes to the PR title in changelogs, PTAL.

kaxil on (2024-10-24 13:39:13 UTC): @utkarsharma2 we need to get https://github.com/apache/airflow/pull/43348 in fyi

utkarsharma2 (Issue Creator) on (2024-10-24 14:32:34 UTC): Included it.

potiuk on (2024-10-25 19:21:52 UTC): One comment. I think - at least before final realease we need to release all the providers or at least the `apache-airflow-providers-fab` - with the `Flask-Application-Builder == 4.5.2`. We already have a number of issues of people who either do not use constraints or use and update their own constraints (because of WTForms release breaking FAB):

* https://github.com/apache/airflow/issues/43228
* https://github.com/apache/airflow/issues/43270
* https://github.com/apache/airflow/issues/43356
* https://github.com/apache/airflow/issues/43375

And this is something we can only address by releasing the new FAB provider and making sure constraints are updated to point to it.

potiuk on (2024-10-25 19:22:01 UTC): cc: @eladkal  ^^

utkarsharma2 (Issue Creator) on (2024-10-28 08:52:49 UTC): Since we already have 1st wave of providers out, I'm proceeding with release.

potiuk on (2024-10-28 10:59:32 UTC): Go ahead, we can always regenerate the constraints to include the new providers released - they are rather independent from the release and internal RC testing and we've already done it in the past.

"
2608071919,pull_request,closed,,adding support for snippet type in slack api,"related: https://github.com/apache/airflow/issues/42889
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Bowrna,2024-10-23 10:21:05+00:00,[],2024-10-24 20:22:24+00:00,2024-10-24 20:22:24+00:00,https://github.com/apache/airflow/pull/43305,"[('area:providers', ''), ('provider:slack', '')]",[],
2607902072,pull_request,closed,,AIP-38 - feat(pages/DagsList): add tags filter to dags list,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:



How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
closes: #42712 
![image](https://github.com/user-attachments/assets/b8bc5a48-71c4-44ed-9882-2de5aad64790)
![image](https://github.com/user-attachments/assets/3d238859-c8f2-4ea2-8572-4bbd9a3b41fa)


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",josix,2024-10-23 09:28:58+00:00,[],2024-10-23 20:05:01+00:00,2024-10-23 20:05:01+00:00,https://github.com/apache/airflow/pull/43303,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2607783790,pull_request,closed,,Ignore attr-defined for compat import,This seems to start failing recently in unrelated CI runs after #43142 was merged.,uranusjr,2024-10-23 08:48:05+00:00,[],2024-10-23 09:27:54+00:00,2024-10-23 09:27:53+00:00,https://github.com/apache/airflow/pull/43301,"[('area:providers', ''), ('provider:openlineage', 'AIP-53')]",[],
2607750260,pull_request,closed,,fix schedule_downstream_tasks bug (#42582),"* fix schedule_downstream_tasks bug

* remove partial_subset

* Update comment

---------

Co-authored-by: 维湘 <jiazhao.ljz@alibaba-inc.com>
(cherry picked from commit 3fceaa69260be80bc2123cd4664db79d96142b9f)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-23 08:37:41+00:00,[],2024-10-24 08:59:20+00:00,2024-10-23 14:44:46+00:00,https://github.com/apache/airflow/pull/43299,"[('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2431327384, 'issue_id': 2607750260, 'author': 'potiuk', 'body': 'This is backport of #42582 \r\n\r\nSince we are closing to 2.10.3 I merged #42582 as I believe it solves often occuring ""serialization"" issues (with partial_subset) that happen in ""mini-scheduler"" and causes failures of celery workers - and tests had shown that partial_subset are also wrong when it comes to determining eligibility of dependent tasks in some cases.\r\n\r\n@uranusjr and @ashb -> if you have any concerns about it this is the time to raise it before we merge - I think you were mostly those who knew most about using `partial_subset` and `mini-scheduler` so if you have any doubts whether we should release it in 2.10.3 - please comment. Details and discussion in #42582  and in the comments in this PR.', 'created_at': datetime.datetime(2024, 10, 23, 8, 42, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2431737231, 'issue_id': 2607750260, 'author': 'potiuk', 'body': 'The failure here should be fixed by #43307', 'created_at': datetime.datetime(2024, 10, 23, 11, 0, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432467309, 'issue_id': 2607750260, 'author': 'potiuk', 'body': 'Failing tests fixed in tip of `2-10-test` merging.', 'created_at': datetime.datetime(2024, 10, 23, 14, 44, 43, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-23 08:42:13 UTC): This is backport of #42582 

Since we are closing to 2.10.3 I merged #42582 as I believe it solves often occuring ""serialization"" issues (with partial_subset) that happen in ""mini-scheduler"" and causes failures of celery workers - and tests had shown that partial_subset are also wrong when it comes to determining eligibility of dependent tasks in some cases.

@uranusjr and @ashb -> if you have any concerns about it this is the time to raise it before we merge - I think you were mostly those who knew most about using `partial_subset` and `mini-scheduler` so if you have any doubts whether we should release it in 2.10.3 - please comment. Details and discussion in #42582  and in the comments in this PR.

potiuk (Issue Creator) on (2024-10-23 11:00:08 UTC): The failure here should be fixed by #43307

potiuk (Issue Creator) on (2024-10-23 14:44:43 UTC): Failing tests fixed in tip of `2-10-test` merging.

"
2607644575,pull_request,closed,,Fix edge-case when conflicting constraints prevent k8s env creation (…,"…#43276)

The #36930 added constraints to creation of k8s environment, but it had a side effect - the constraints could not be created if source of airflow had dependencies conflicting with constraints (which might happen for example when we upgrade FAB - because locally pinned FAB might be different than the one in constraints).

Also the constraints were ""hard-coded"" - the python version, branch and github repository were hard-coded.

This PR fixes both problems:

* constraints URL is dynamically generated based on current branch, repo and python version
* in case attempts to create the venv with constraints fails, we attempt to install it again without constraints

(cherry picked from commit 274b6e1168f84561e8f652a1a4a6fc82aeadc477)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-23 07:57:13+00:00,[],2024-10-23 12:58:25+00:00,2024-10-23 12:58:22+00:00,https://github.com/apache/airflow/pull/43298,"[('area:dev-tools', '')]","[{'comment_id': 2431206631, 'issue_id': 2607644575, 'author': 'potiuk', 'body': 'Backport of #43276', 'created_at': datetime.datetime(2024, 10, 23, 7, 57, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432069411, 'issue_id': 2607644575, 'author': 'potiuk', 'body': 'Both failures should already be fixed in tip of v2-10-test - merging', 'created_at': datetime.datetime(2024, 10, 23, 12, 58, 1, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-23 07:57:34 UTC): Backport of #43276

potiuk (Issue Creator) on (2024-10-23 12:58:01 UTC): Both failures should already be fixed in tip of v2-10-test - merging

"
2607634582,pull_request,closed,,Add isolation mode exclusion for mapped operator test,"This test has been cherry-picked to v2-10-test and should be excluded from isolation mode.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-23 07:53:31+00:00,[],2024-10-23 13:21:13+00:00,2024-10-23 13:21:11+00:00,https://github.com/apache/airflow/pull/43297,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2607353456,pull_request,closed,,Move scheduler health unit test to utils folder,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
The scheduler health unit test now is in `tests/cli/commands/test_scheduler_command.py`, actually, the scheduler health code is in `airflow/utils/scheduler_health.py`.
So it's better to move the unit test code to `tests/utils` folder. And this PR will remove the test code in `tests/cli/commands/test_scheduler_command.py` to a new test file `tests/utils/test_scheduler_health.py`  to realize that.
<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",yangyulely,2024-10-23 05:50:30+00:00,[],2024-10-25 07:57:23+00:00,2024-10-24 20:13:58+00:00,https://github.com/apache/airflow/pull/43294,"[('area:CLI', '')]",[],
2606955039,pull_request,closed,,"PyDocStyle Check - PT005: Fixture returns a value, remove leading underscore","Issue: #40567 
Fix 1 remaining PT005 (Fixture returns a value, remove leading underscore) failing style check, and remove PT005 from the`ignore` list

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",dannyl1u,2024-10-23 02:12:54+00:00,[],2024-10-23 15:21:51+00:00,2024-10-23 11:09:19+00:00,https://github.com/apache/airflow/pull/43292,"[('area:providers', ''), ('provider:ssh', '')]","[{'comment_id': 2431757207, 'issue_id': 2606955039, 'author': 'potiuk', 'body': 'NIce!', 'created_at': datetime.datetime(2024, 10, 23, 11, 9, 26, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-23 11:09:26 UTC): NIce!

"
2606911100,pull_request,closed,,Remove deprecated hook code from plugins,"We had removed registering hooks via plugin in https://github.com/apache/airflow/pull/12108 for Airflow 2.0. We kept it for registering Connection form.

As I understand it, we don't use that code but `ProvidersManager` (`airflow/providers_manager.py`) to register Connections from providers.

[Our docs](https://airflow.apache.org/docs/apache-airflow/stable/authoring-and-scheduling/plugins.html#plugins) already mark this as removed in 2.0:


<img width=""1099"" alt=""image"" src=""https://github.com/user-attachments/assets/c1aa9fbb-c0d0-4947-8ab9-7712fad8c5b1"">

https://github.com/apache/airflow/blob/156878806618145430629a4069911d425d6bf77a/docs/apache-airflow/authoring-and-scheduling/plugins.rst#L33-L37


<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-23 01:47:34+00:00,[],2024-10-23 16:24:53+00:00,2024-10-23 16:24:51+00:00,https://github.com/apache/airflow/pull/43291,"[('area:plugins', ''), ('kind:documentation', '')]","[{'comment_id': 2430630723, 'issue_id': 2606911100, 'author': 'kaxil', 'body': '@ashb since you were the author of https://github.com/apache/airflow/pull/12108 , could you review this PR and see if it makes sense', 'created_at': datetime.datetime(2024, 10, 23, 1, 48, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2431275848, 'issue_id': 2606911100, 'author': 'potiuk', 'body': 'Should be fine. The plugins from Airlfow 2 will stop working anyway and people will have to modify them. This is pretty much a ""given"" incompatibility and we need to bite the bullet.  But the  test needs to be fixed and I think we should add a newsfragment (just one liner now and we can expand it later).', 'created_at': datetime.datetime(2024, 10, 23, 8, 24, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2431753969, 'issue_id': 2606911100, 'author': 'kaxil', 'body': '> Should be fine. The plugins from Airlfow 2 will stop working anyway and people will have to modify them. This is pretty much a ""given"" incompatibility and we need to bite the bullet. But the test needs to be fixed and I think we should add a newsfragment (just one liner now and we can expand it later).\r\n\r\nThat was already part of the docs though, check PR description -- should we still add a newsfragment?\r\n\r\n\r\n[Our docs](https://airflow.apache.org/docs/apache-airflow/stable/authoring-and-scheduling/plugins.html#plugins) already mark this as removed in 2.0:\r\n\r\n\r\n<img width=""1099"" alt=""image"" src=""https://github.com/user-attachments/assets/c1aa9fbb-c0d0-4947-8ab9-7712fad8c5b1"">\r\n\r\nhttps://github.com/apache/airflow/blob/156878806618145430629a4069911d425d6bf77a/docs/apache-airflow/authoring-and-scheduling/plugins.rst#L33-L37', 'created_at': datetime.datetime(2024, 10, 23, 11, 7, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432082223, 'issue_id': 2606911100, 'author': 'kaxil', 'body': 'Added in https://github.com/apache/airflow/pull/43291/commits/3f92bf7da18a423545bb49d7282a061b1acf3760', 'created_at': datetime.datetime(2024, 10, 23, 13, 1, 44, tzinfo=datetime.timezone.utc)}]","kaxil (Issue Creator) on (2024-10-23 01:48:10 UTC): @ashb since you were the author of https://github.com/apache/airflow/pull/12108 , could you review this PR and see if it makes sense

potiuk on (2024-10-23 08:24:33 UTC): Should be fine. The plugins from Airlfow 2 will stop working anyway and people will have to modify them. This is pretty much a ""given"" incompatibility and we need to bite the bullet.  But the  test needs to be fixed and I think we should add a newsfragment (just one liner now and we can expand it later).

kaxil (Issue Creator) on (2024-10-23 11:07:44 UTC): That was already part of the docs though, check PR description -- should we still add a newsfragment?


[Our docs](https://airflow.apache.org/docs/apache-airflow/stable/authoring-and-scheduling/plugins.html#plugins) already mark this as removed in 2.0:


<img width=""1099"" alt=""image"" src=""https://github.com/user-attachments/assets/c1aa9fbb-c0d0-4947-8ab9-7712fad8c5b1"">

https://github.com/apache/airflow/blob/156878806618145430629a4069911d425d6bf77a/docs/apache-airflow/authoring-and-scheduling/plugins.rst#L33-L37

kaxil (Issue Creator) on (2024-10-23 13:01:44 UTC): Added in https://github.com/apache/airflow/pull/43291/commits/3f92bf7da18a423545bb49d7282a061b1acf3760

"
2606896897,pull_request,closed,,Remove deprecated Plugin Test code,"We had deprecated & removed support for Sensors & Operators via Plugin for Airflow 2 in Jun 25, 2020 :)

PR: https://github.com/apache/airflow/pull/12072


<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-23 01:37:49+00:00,[],2024-10-23 03:28:08+00:00,2024-10-23 03:28:06+00:00,https://github.com/apache/airflow/pull/43290,"[('area:plugins', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2606894542,pull_request,closed,,Remove the ability to import executors from plugins,"Executors should no longer be registered or imported via Airflow's plugin mechanism -- these types of classes are just treated as plain python classes by Airflow, so there is no need to register them with Airflow.

We had already removed it from our docs: https://airflow.apache.org/docs/apache-airflow/stable/authoring-and-scheduling/plugins.html#plugins

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-23 01:37:15+00:00,[],2024-10-23 14:37:08+00:00,2024-10-23 14:37:05+00:00,https://github.com/apache/airflow/pull/43289,"[('area:webserver', 'Webserver related Issues'), ('area:plugins', ''), ('area:Executors-core', 'LocalExecutor & SequentialExecutor'), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]","[{'comment_id': 2431814037, 'issue_id': 2606894542, 'author': 'kaxil', 'body': '> I think we have a still ongoing discussion, not voted towards future scope of provders package. I think this discussion should settle first.\r\n> \r\n> It would also mean that if this PR is merged, that the executor descriptions in provider packages need to be removed - or at least be deprecated until Airflow 2.x support is generated.\r\n\r\n@jscheffl The change in this PR just impact importing executors ""via plugins"": https://airflow.apache.org/docs/apache-airflow/stable/authoring-and-scheduling/plugins.html#plugins\r\n\r\nIt is not removing executors from Providers', 'created_at': datetime.datetime(2024, 10, 23, 11, 31, 34, tzinfo=datetime.timezone.utc)}]","kaxil (Issue Creator) on (2024-10-23 11:31:34 UTC): @jscheffl The change in this PR just impact importing executors ""via plugins"": https://airflow.apache.org/docs/apache-airflow/stable/authoring-and-scheduling/plugins.html#plugins

It is not removing executors from Providers

"
2606829471,pull_request,closed,,Fix broken links in `dev` folder,"Some of the links were pointing to old paths

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-23 00:41:55+00:00,[],2024-10-23 01:05:26+00:00,2024-10-23 01:05:24+00:00,https://github.com/apache/airflow/pull/43288,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2606807587,pull_request,closed,,Fix broken main with static checks,"https://github.com/apache/airflow/pull/43281 changed the python exec path and is now failing with:

```
Traceback (most recent call last):
  File ""/home/runner/work/airflow/airflow/./scripts/tools/check_if_limited_dependencies.py"", line 46, in <module>
    check_call([sys.executable[0], DEV_BREEZE_SRC_PATH / ""airflow_breeze"" / ""breeze.py"", ""--help""], env=env)
  File ""/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/subprocess.py"", line 368, in check_call
    retcode = call(*popenargs, **kwargs)
  File ""/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/subprocess.py"", line 349, in call
    with Popen(*popenargs, **kwargs) as p:
  File ""/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/subprocess.py"", line 951, in __init__
    self._execute_child(args, executable, preexec_fn, close_fds,
  File ""/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/subprocess.py"", line 1837, in _execute_child
    raise child_exception_type(errno_num, err_msg, err_filename)
PermissionError: [Errno 13] Permission denied: '/'
```

That is because:
```python
❯ ipython
Python 3.11.10 (main, Sep  9 2024, 20:58:40) [Clang 18.1.8 ]
Type 'copyright', 'credits' or 'license' for more information
IPython 8.18.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: import sys

In [2]: sys.executable[0]
Out[2]: '/'

In [3]: sys.executable[1]
Out[3]: 'U'

In [4]: sys.executable
Out[4]: '/Users/kaxilnaik/Documents/GitHub/astronomer/airflow/.venv/bin/python3'
```

Example Failure:
https://github.com/apache/airflow/actions/runs/11470387014/job/31919681910?pr=43286

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-23 00:24:01+00:00,[],2024-10-23 09:01:14+00:00,2024-10-23 00:39:08+00:00,https://github.com/apache/airflow/pull/43287,"[('area:dev-tools', '')]","[{'comment_id': 2431169188, 'issue_id': 2606807587, 'author': 'potiuk', 'body': 'Where did I get the `[0]` from? I have no idea. Sorry for that ...', 'created_at': datetime.datetime(2024, 10, 23, 7, 42, 3, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-23 07:42:03 UTC): Where did I get the `[0]` from? I have no idea. Sorry for that ...

"
2606777486,pull_request,closed,,Bump ``ruff`` to ``0.7.0`` in pre-commit hooks,"https://pypi.org/project/ruff/#history

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-22 23:55:43+00:00,[],2024-10-23 00:39:37+00:00,2024-10-23 00:39:18+00:00,https://github.com/apache/airflow/pull/43286,"[('area:providers', ''), ('area:dev-tools', ''), ('provider:papermill', '')]","[{'comment_id': 2430569154, 'issue_id': 2606777486, 'author': 'kaxil', 'body': '> Looks like we need to wait for #43287, but overall looks good\r\n\r\nSince the only failure is the one fixed in #43287, we are good', 'created_at': datetime.datetime(2024, 10, 23, 0, 39, 36, tzinfo=datetime.timezone.utc)}]","kaxil (Issue Creator) on (2024-10-23 00:39:36 UTC): Since the only failure is the one fixed in #43287, we are good

"
2606777163,pull_request,closed,,Bump ``black`` to ``24.10.0`` in pre-commit hooks,"https://pypi.org/project/black/#history

We were using a version from Oct 17, 2023

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-22 23:55:33+00:00,[],2024-10-23 00:28:52+00:00,2024-10-23 00:28:50+00:00,https://github.com/apache/airflow/pull/43285,"[('area:dev-tools', '')]",[],
2606776716,pull_request,closed,,Bump ``requests`` to ``2.32.3`` in pre-commit hooks,"
https://pypi.org/project/requests/#history

We were using a version from Nov 11, 2020

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-22 23:55:16+00:00,[],2024-10-23 00:13:16+00:00,2024-10-23 00:13:14+00:00,https://github.com/apache/airflow/pull/43284,"[('area:dev-tools', '')]",[],
2606776645,pull_request,closed,,Bump ``PyYAML`` to ``6.0.2`` in pre-commit hooks,"https://pypi.org/project/PyYAML/#history
https://pypi.org/project/PyYAML/6.0.2/

We were using a version from Mar 18, 2020

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-22 23:55:14+00:00,[],2024-10-23 00:34:46+00:00,2024-10-23 00:34:45+00:00,https://github.com/apache/airflow/pull/43283,"[('area:dev-tools', '')]",[],
2606772384,pull_request,closed,,Check python version that was used to install pre-commit venvs,"Since we moved to Python 3.9 and started usign 3.9+ only features line functools.cache, having Python 3.8 as default python version will result in virtualenvs created with outdated python.

This pre-commit checks what is the global version of python3 and it will complain if it is lower than 3.9. This is done via explicit call of ""python3"", because this is what pre-commit does. Also global setting is needed because otherwise new virtualenvs created by pre-commit might be created using lower python version.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-22 23:52:05+00:00,[],2024-10-24 20:04:38+00:00,2024-10-23 12:59:50+00:00,https://github.com/apache/airflow/pull/43282,"[('area:dev-tools', ''), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log')]","[{'comment_id': 2432073976, 'issue_id': 2606772384, 'author': 'potiuk', 'body': 'Mypy check fixed in main.', 'created_at': datetime.datetime(2024, 10, 23, 12, 59, 39, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-23 12:59:39 UTC): Mypy check fixed in main.

"
2606700386,pull_request,closed,,"Change hard-coded python into ""sys.executable"" in dependency check","The ""python"" used originally was a global python, changing it to ""sys.executable[0]"" changes it to Python version used in pre-commit

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-22 23:00:16+00:00,[],2024-10-22 23:10:02+00:00,2024-10-22 23:10:00+00:00,https://github.com/apache/airflow/pull/43281,"[('area:dev-tools', '')]",[],
2606664806,pull_request,closed,,Fix pytest plugin,"pytest plugins _cannot_ be installed by a non-top-level conftest file. Now that provider tests are moved to a nested directory we need to plumb the plugin in a different way.

The plugin is now provided on the command line for breeze testing commands.

Also the config files which contain exceptions for forbidden_warnings were
set in pytest config in the conftest files. Since the plugin is now loaded at
the top-level and before conftest files are loaded. Move the config into the
python module for the plugin itself. There should be no harm in
configuring all exceptions for each test type. Each discovered test is just checked against the set of exceptions.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",o-nikolas,2024-10-22 22:36:42+00:00,[],2024-10-31 16:44:36+00:00,2024-10-29 21:16:51+00:00,https://github.com/apache/airflow/pull/43280,"[('area:providers', ''), ('area:dev-tools', ''), ('area:task-sdk', None)]","[{'comment_id': 2436265533, 'issue_id': 2606664806, 'author': 'potiuk', 'body': 'Nice. I was wondering why we have warnings (yellow tests) back ... I think too much now happens in helm tests simply', 'created_at': datetime.datetime(2024, 10, 24, 20, 19, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436279483, 'issue_id': 2606664806, 'author': 'o-nikolas', 'body': ""> Nice. I was wondering why we have warnings (yellow tests) back ... I think too much now happens in helm tests simply\r\n\r\n@potiuk Yes this is to fix what was broken by Ash's changes to the directory structure (described in [this comment](https://github.com/apache/airflow/pull/42505#issuecomment-2407097770)). Every one of our system tests are currently failing for this reason.\r\n\r\nI think my fix should solve it, but for some reason all the Helm chart tests are failing as a side-effect and I have ZERO ideas why. I cannot see how they are related..."", 'created_at': datetime.datetime(2024, 10, 24, 20, 27, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436304273, 'issue_id': 2606664806, 'author': 'o-nikolas', 'body': ""> > Nice. I was wondering why we have warnings (yellow tests) back ... I think too much now happens in helm tests simply\r\n> \r\n> @potiuk Yes this is to fix what was broken by Ash's changes to the directory structure (described in [this comment](https://github.com/apache/airflow/pull/42505#issuecomment-2407097770)). Every one of our system tests are currently failing for this reason.\r\n> \r\n> I think my fix should solve it, but for some reason all the Helm chart tests are failing as a side-effect and I have ZERO ideas why. I cannot see how they are related...\r\n\r\nActually, when I run the tests locally on main it also fails. Which is a relief but also frustrating. How is main not more broken in the CI of all other PRs and Canary builds?"", 'created_at': datetime.datetime(2024, 10, 24, 20, 43, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436459596, 'issue_id': 2606664806, 'author': 'potiuk', 'body': '> Actually, when I run the tests locally on main it also fails. Which is a relief but also frustrating. How is main not more broken in the CI of all other PRs and Canary builds?\r\n\r\nAs discussed in slack - and for posterity.  This is another teeting problem after #42505 and later #43173.\r\n\r\nIt is the result of accidentally triggering database initialization for xdist (parallel) tests - in your PR by plugin initialization, in main runnnig  when BACKEND != none.\r\n\r\nA solution to that would be to force BACKEND to ""none"" and _AIRLFOW_SKIP_DB_TESTS to ""true"" in order to avoid all the DB autouse fixtures. But this is quite tricky as plugins passed with `-p` wil be initialized before conftest.py that could be used for it, also conftest.py cannot be put at top-level apparently because pytest has problems when several top-level tests folders have conftest.py - it will refuse to load them.\r\n\r\nWe need to find a better solution - likely use different mechanism of Pytest to do imports - likely https://docs.pytest.org/en/7.1.x/explanation/pythonpath.html or maybe find some other creative ways of loading plugins from common place. Or maybe figure out a better way of sharing common test code.', 'created_at': datetime.datetime(2024, 10, 24, 22, 37, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436459952, 'issue_id': 2606664806, 'author': 'potiuk', 'body': 'cc: @ashb -> maybe you will have some ideas?', 'created_at': datetime.datetime(2024, 10, 24, 22, 37, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445313952, 'issue_id': 2606664806, 'author': 'o-nikolas', 'body': ""@potiuk \r\nI got this one green finally and it's ready for review.\r\n\r\nThe approach I took was to simply not use the plugin for the helm chart tests. This is because it wasn't being used for them in the past I don't think. It was previously enabled in the tests of providers and core, but not helm, so I've excluded helm. Thoughts?"", 'created_at': datetime.datetime(2024, 10, 29, 20, 55, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445345903, 'issue_id': 2606664806, 'author': 'potiuk', 'body': ""> The approach I took was to simply not use the plugin for the helm chart tests. This is because it wasn't being used for them in the past I don't think. It was previously enabled in the tests of providers and core, but not helm, so I've excluded helm. Thoughts?\r\n\r\nYes."", 'created_at': datetime.datetime(2024, 10, 29, 21, 16, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445347447, 'issue_id': 2606664806, 'author': 'potiuk', 'body': 'Cool :)', 'created_at': datetime.datetime(2024, 10, 29, 21, 17, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445349322, 'issue_id': 2606664806, 'author': 'potiuk', 'body': 'I think together with the uv fix today, it might be about the last ""teething"" issue I am aware of with moving providers out of ""airlfow"" (cc: @ashb @kaxil )', 'created_at': datetime.datetime(2024, 10, 29, 21, 18, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445357445, 'issue_id': 2606664806, 'author': 'o-nikolas', 'body': '> I think together with the uv fix today, it might be about the last ""teething"" issue I am aware of with moving providers out of ""airlfow"" (cc: @ashb @kaxil )\r\n\r\nYeah, let\'s hope!\r\nI wouldn\'t be surprised if the plugin raised it\'s head again at least once :grimacing: It really was proliferated throughout a lot of the test logic we have.', 'created_at': datetime.datetime(2024, 10, 29, 21, 24, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445397854, 'issue_id': 2606664806, 'author': 'potiuk', 'body': ""> I wouldn't be surprised if the plugin raised it's head again at least once 😬 It really was proliferated throughout a lot of the test logic we have.\r\n\r\nWell. yeah, I might do some cleanups as well when attempting to split providers even further - also I think looking at https://github.com/apache/airflow/issues/43488 might uncover some other dead bodies we keep in the closet."", 'created_at': datetime.datetime(2024, 10, 29, 21, 52, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445500494, 'issue_id': 2606664806, 'author': 'ashb', 'body': '> pytest plugins cannot be installed by a non-top-level conftest file. Now that provider tests are moved to a nested directory we need to plumb the plugin in a different way.\r\n\r\nYes, but when was this actually a problem?', 'created_at': datetime.datetime(2024, 10, 29, 23, 20, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445535041, 'issue_id': 2606664806, 'author': 'potiuk', 'body': '> Yes, but when was this actually a problem?\r\n\r\nThe problem was that the plugin did not work - really after the move . It did not catch the ""forbidden warnings"" in both provider and non-provider tests. That resulted in our tests becoming ""yellow"" in CI instead of ""green"" as they used to be before the move - the idea with ""forbidden_warnings.py"" was that we keep on removing them and go down to 0 eventually but no new warnings should be added. \r\n\r\nSo this one fixes the setup that no new warnings should be added when tests are running.', 'created_at': datetime.datetime(2024, 10, 29, 23, 58, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445965880, 'issue_id': 2606664806, 'author': 'uranusjr', 'body': 'This breaks running Pytest in a Breeze shell. I’ll try to find a solution for it. In the mean time, add `-p tests_common.pytest_plugin` manually to your call.', 'created_at': datetime.datetime(2024, 10, 30, 6, 19, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446351769, 'issue_id': 2606664806, 'author': 'potiuk', 'body': '> This breaks running Pytest in a Breeze shell. I’ll try to find a solution for it. In the mean time, add `-p tests_common.pytest_plugin` manually to your call.\r\n\r\nLet me take a look as well', 'created_at': datetime.datetime(2024, 10, 30, 9, 42, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446367974, 'issue_id': 2606664806, 'author': 'ashb', 'body': ""Yeah - precisely -- the plugin not capturing warnings is very different from changing the plugin to be automatically loaded from conftest. \r\n\r\n> pytest plugins cannot be installed by a non-top-level conftest file\r\n\r\nThe plugin was only installed in a top level conftest file.\r\n\r\nI would like to revert this please if we can't find a way to make it be picked up no matter how people run pytest (breeze, directly, or from within IDEs) -- we shouldn't need to make everyone manually specify."", 'created_at': datetime.datetime(2024, 10, 30, 9, 48, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446386658, 'issue_id': 2606664806, 'author': 'potiuk', 'body': 'Yes. Reverting it now. This something we have to handle differently.', 'created_at': datetime.datetime(2024, 10, 30, 9, 54, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446392006, 'issue_id': 2606664806, 'author': 'potiuk', 'body': ""> Yeah - precisely -- the plugin not capturing warnings is very different from changing the plugin to be automatically loaded from conftest.\r\n\r\nIt's related I think, it's the order in which the plugins are loaded and warning capturing was done. But yes - it should be solved differently."", 'created_at': datetime.datetime(2024, 10, 30, 9, 57, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446394962, 'issue_id': 2606664806, 'author': 'ashb', 'body': ""I'm stepping through this (old/pre merge) version and it is correctly loading the exclusion list from the providers file. Looking at why the warnings filter isn't working though"", 'created_at': datetime.datetime(2024, 10, 30, 9, 58, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446400307, 'issue_id': 2606664806, 'author': 'potiuk', 'body': ""I don't know exactlly bt I  **think** that was also realated to the order in which warning captuiring was done."", 'created_at': datetime.datetime(2024, 10, 30, 10, 0, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447764394, 'issue_id': 2606664806, 'author': 'o-nikolas', 'body': ""Hey folks, clearing up some confusion here:\r\n\r\nCC @potiuk @ashb @uranusjr \r\n\r\n1)\r\n>> pytest plugins cannot be installed by a non-top-level conftest file. Now that provider tests are moved to a nested directory we need to plumb the plugin in a different way.\r\n\r\n> Yes, but when was this actually a problem?\r\n\r\n@ashb This was a problem as a consequence of the issue you described yourself [here](https://github.com/apache/airflow/pull/42505#issuecomment-2407097770)\r\nThis happens when we run a system test with breeze, which looks something like `breeze testing tests providers/tests/system/amazon/aws/example_lambda.py --system amazon`. After your changes this leads pytest to load a plugin from a non-toplevel location which is now **disallowed** by pytest and the command fails. All system test dashboards have been fully red since your merge ([example](https://aws-mwaa.github.io/#/open-source/system-tests/dashboard.html) the green runs were from the short time my change was merged). \r\n\r\n2) \r\n> Yeah - precisely -- the plugin not capturing warnings is very different from changing the plugin to be automatically loaded from conftest.\r\n\r\nThe changes related to warnings in this PR are _only_ present because moving the plugin to cli flag (due to 1) ) makes a race condition where the input exclusion paths are not yet loaded (since they are configured in conftest files). So they are moved to just be colocated to the code itself. Which is honestly just much simpler. \r\n\r\n3)\r\n> This breaks running Pytest in a Breeze shell. I’ll try to find a solution for it. In the mean time, add -p tests_common.pytest_plugin manually to your call.\r\n\r\nUnfortunately yes, the common way I run those is by using the command from breeze itself for the test type I'm testing with. But I can see how this would be not the same workflow for others. We need to figure out how to get that case covered.\r\n\r\n4)\r\n> I would like to revert this please if we can't find a way to make it be picked up no matter how people run pytest (breeze, directly, or from within IDEs) -- we shouldn't need to make everyone manually specify.\r\n\r\nFair enough, and agreed, but can we focus on our efforts on finding this new path? Because our system testing infra has been broken for over a week due to this and so far it has not gotten much attention."", 'created_at': datetime.datetime(2024, 10, 30, 16, 41, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447784971, 'issue_id': 2606664806, 'author': 'ashb', 'body': ""If the problem is that `breeze testing tests provider/tests/...` triggers the conftest error then we should fix that command:\n\nIf there are positional args to that then we shouldn't include tests arg.  Right now we get `breeze testing tests provider/tests/...` runs (give or take) `pytest tests provider/tests/...` when we want/need it to run `pytesy provider/tests/...`\n\nHave I understood correctly @o-nikolas ?"", 'created_at': datetime.datetime(2024, 10, 30, 16, 49, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447877612, 'issue_id': 2606664806, 'author': 'o-nikolas', 'body': ""> If the problem is that `breeze testing tests provider/tests/...` triggers the conftest error then we should fix that command:\r\n\r\nThis sounds lovely :) I'm not passionate about how the issue is fixed, just that it gets fixed.\r\n\r\n> If there are positional args to that then we shouldn't include tests arg. Right now we get `breeze testing tests provider/tests/...` runs (give or take) `pytest tests provider/tests/...` when we want/need it to run `pytesy provider/tests/...`\r\n\r\nThat is certainly a possible approach!"", 'created_at': datetime.datetime(2024, 10, 30, 17, 25, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448326569, 'issue_id': 2606664806, 'author': 'potiuk', 'body': ""Yes this is a problem reported today as well on slack https://apache-airflow.slack.com/archives/CCQ7EGB1P/p1730313232385169?thread_ts=1730313232.385169&cid=CCQ7EGB1P and now I see where it is coming from. Yep it's been broken since the provider's move and we should definitely fix it"", 'created_at': datetime.datetime(2024, 10, 30, 20, 37, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448347938, 'issue_id': 2606664806, 'author': 'potiuk', 'body': 'And when I recall that (coming back from a meetup now) - I believe this code must have been there  before the move only it has been disabled or removed when the providers were moved . I will have to check when I am back.', 'created_at': datetime.datetime(2024, 10, 30, 20, 49, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448352319, 'issue_id': 2606664806, 'author': 'potiuk', 'body': 'I thought it has not been needed BTW and iindownplayed importance of it but I see now that it has been indeed used for system tests so we must bring it back', 'created_at': datetime.datetime(2024, 10, 30, 20, 51, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448622281, 'issue_id': 2606664806, 'author': 'potiuk', 'body': '@ashb @o-nikolas  \r\n\r\nI was really scratching my head why this happen and could not figure it out, but I know what happens. I recalled some of the history, I checked out the version before the providers move and it turned out that the ""tests"" folder has been added there even then.\r\n\r\nBUT (And here comes surprise from pytest) the ""tests"" were never collected when we added any provider\'s tests because of af a bug introduced in Pytest 8: https://github.com/pytest-dev/pytest/issues/12605#issuecomment-2291198620\r\n\r\nThe thing that if you run: `pytest tests tests/providers/something` - the ""tests"" pytest will NOT be collected, because as of Pytest 8, if there is a parent folder before sub-path, ONLY  the subpath tests are collected (!!!!).\r\n\r\nIt\'s a very weird pytest behaviour that had already bitten us and I had to workaround it in `run_tests.py` for parallell non-db tests:\r\nhttps://github.com/apache/airflow/blob/51f9e835bf4e40e418f9f45a510a639068b08fa2/dev/breeze/src/airflow_breeze/utils/run_tests.py#L401\r\n\r\nSo The ""tests"" folder had been there for quite some time (after we switched to Pytest 8) - but we never  realized it, because system test providers were subfolder of the ""tests"" and when you run `pytest  tests tests/providers/amazon/sytem/some_test.py` - pytest did not collect all the tests from ""tests"" folder - only used the some_test.py folder.\r\n\r\nThis is now `pytest  tests providers/amazon/tests/sytem/some_test.py` - and in this case both ""tests"" and the system test are collected.\r\n\r\nWeird as it is, but simply ""tests"" should have not been at all in this case, but it was never a problem, because all the tests were in ""tests/"" sub-folder and simply the first ""tests"" folder was ignored.\r\n\r\nSo now when I **know** how we get it, the fix will be easy. PR shortly.', 'created_at': datetime.datetime(2024, 10, 30, 22, 58, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448681040, 'issue_id': 2606664806, 'author': 'potiuk', 'body': '@ashb @o-nikolas -> https://github.com/apache/airflow/pull/43529 fix here.', 'created_at': datetime.datetime(2024, 10, 30, 23, 43, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448686443, 'issue_id': 2606664806, 'author': 'potiuk', 'body': 'Actually it is not yet final fix - due to the multiple conftest.py at top-level, and moving providers the ""All"" test types are not exactly working as expected - they only run ""core"" tests. But this is not an issue for CI at least - becasue there in most cases (except Quarantine tests"" we are not  using ""All"" test suite, but individual tests folders (also for Non-DB tests) - so it has no impact on running all tests. I will fix it as a follow up and likely change  approach for ""All-"" test suites', 'created_at': datetime.datetime(2024, 10, 30, 23, 48, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448955231, 'issue_id': 2606664806, 'author': 'o-nikolas', 'body': '> The thing that if you run: pytest tests tests/providers/something - the ""tests"" pytest will NOT be collected, because as of Pytest 8, if there is a parent folder before sub-path, ONLY the subpath tests are collected (!!!!).\r\n\r\nI feel so much better now. I was also really scratching my head trying to figure out how this worked beforehand with passing a provider path, since I knew the `tests` was also there before. Thanks for solving that one!', 'created_at': datetime.datetime(2024, 10, 31, 3, 42, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450344523, 'issue_id': 2606664806, 'author': 'potiuk', 'body': ""> I feel so much better now. I was also really scratching my head trying to figure out how this worked beforehand with passing a provider path, since I knew the tests was also there before. Thanks for solving that one!\r\n\r\nYeah. It's a real **surprise** from pytest devs to have this behaviour.. but also it made me realise that we have far too many band-aids over band-aids for the test framework of our and now when we extract out provides and task_sdk we need to heavily refactor it as it is far from being easy to reason about - and if it took even me that long to find out where it comes from it means we have to simplify and split it all to 3 separate paths (and more) - see https://github.com/apache/airflow/issues/42632#issuecomment-2449671014"", 'created_at': datetime.datetime(2024, 10, 31, 16, 43, 59, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-24 20:19:13 UTC): Nice. I was wondering why we have warnings (yellow tests) back ... I think too much now happens in helm tests simply

o-nikolas (Issue Creator) on (2024-10-24 20:27:59 UTC): @potiuk Yes this is to fix what was broken by Ash's changes to the directory structure (described in [this comment](https://github.com/apache/airflow/pull/42505#issuecomment-2407097770)). Every one of our system tests are currently failing for this reason.

I think my fix should solve it, but for some reason all the Helm chart tests are failing as a side-effect and I have ZERO ideas why. I cannot see how they are related...

o-nikolas (Issue Creator) on (2024-10-24 20:43:39 UTC): Actually, when I run the tests locally on main it also fails. Which is a relief but also frustrating. How is main not more broken in the CI of all other PRs and Canary builds?

potiuk on (2024-10-24 22:37:35 UTC): As discussed in slack - and for posterity.  This is another teeting problem after #42505 and later #43173.

It is the result of accidentally triggering database initialization for xdist (parallel) tests - in your PR by plugin initialization, in main runnnig  when BACKEND != none.

A solution to that would be to force BACKEND to ""none"" and _AIRLFOW_SKIP_DB_TESTS to ""true"" in order to avoid all the DB autouse fixtures. But this is quite tricky as plugins passed with `-p` wil be initialized before conftest.py that could be used for it, also conftest.py cannot be put at top-level apparently because pytest has problems when several top-level tests folders have conftest.py - it will refuse to load them.

We need to find a better solution - likely use different mechanism of Pytest to do imports - likely https://docs.pytest.org/en/7.1.x/explanation/pythonpath.html or maybe find some other creative ways of loading plugins from common place. Or maybe figure out a better way of sharing common test code.

potiuk on (2024-10-24 22:37:57 UTC): cc: @ashb -> maybe you will have some ideas?

o-nikolas (Issue Creator) on (2024-10-29 20:55:46 UTC): @potiuk 
I got this one green finally and it's ready for review.

The approach I took was to simply not use the plugin for the helm chart tests. This is because it wasn't being used for them in the past I don't think. It was previously enabled in the tests of providers and core, but not helm, so I've excluded helm. Thoughts?

potiuk on (2024-10-29 21:16:01 UTC): Yes.

potiuk on (2024-10-29 21:17:04 UTC): Cool :)

potiuk on (2024-10-29 21:18:23 UTC): I think together with the uv fix today, it might be about the last ""teething"" issue I am aware of with moving providers out of ""airlfow"" (cc: @ashb @kaxil )

o-nikolas (Issue Creator) on (2024-10-29 21:24:07 UTC): Yeah, let's hope!
I wouldn't be surprised if the plugin raised it's head again at least once :grimacing: It really was proliferated throughout a lot of the test logic we have.

potiuk on (2024-10-29 21:52:23 UTC): Well. yeah, I might do some cleanups as well when attempting to split providers even further - also I think looking at https://github.com/apache/airflow/issues/43488 might uncover some other dead bodies we keep in the closet.

ashb on (2024-10-29 23:20:46 UTC): Yes, but when was this actually a problem?

potiuk on (2024-10-29 23:58:51 UTC): The problem was that the plugin did not work - really after the move . It did not catch the ""forbidden warnings"" in both provider and non-provider tests. That resulted in our tests becoming ""yellow"" in CI instead of ""green"" as they used to be before the move - the idea with ""forbidden_warnings.py"" was that we keep on removing them and go down to 0 eventually but no new warnings should be added. 

So this one fixes the setup that no new warnings should be added when tests are running.

uranusjr on (2024-10-30 06:19:04 UTC): This breaks running Pytest in a Breeze shell. I’ll try to find a solution for it. In the mean time, add `-p tests_common.pytest_plugin` manually to your call.

potiuk on (2024-10-30 09:42:20 UTC): Let me take a look as well

ashb on (2024-10-30 09:48:34 UTC): Yeah - precisely -- the plugin not capturing warnings is very different from changing the plugin to be automatically loaded from conftest. 


The plugin was only installed in a top level conftest file.

I would like to revert this please if we can't find a way to make it be picked up no matter how people run pytest (breeze, directly, or from within IDEs) -- we shouldn't need to make everyone manually specify.

potiuk on (2024-10-30 09:54:52 UTC): Yes. Reverting it now. This something we have to handle differently.

potiuk on (2024-10-30 09:57:17 UTC): It's related I think, it's the order in which the plugins are loaded and warning capturing was done. But yes - it should be solved differently.

ashb on (2024-10-30 09:58:34 UTC): I'm stepping through this (old/pre merge) version and it is correctly loading the exclusion list from the providers file. Looking at why the warnings filter isn't working though

potiuk on (2024-10-30 10:00:24 UTC): I don't know exactlly bt I  **think** that was also realated to the order in which warning captuiring was done.

o-nikolas (Issue Creator) on (2024-10-30 16:41:31 UTC): Hey folks, clearing up some confusion here:

CC @potiuk @ashb @uranusjr 

1)


@ashb This was a problem as a consequence of the issue you described yourself [here](https://github.com/apache/airflow/pull/42505#issuecomment-2407097770)
This happens when we run a system test with breeze, which looks something like `breeze testing tests providers/tests/system/amazon/aws/example_lambda.py --system amazon`. After your changes this leads pytest to load a plugin from a non-toplevel location which is now **disallowed** by pytest and the command fails. All system test dashboards have been fully red since your merge ([example](https://aws-mwaa.github.io/#/open-source/system-tests/dashboard.html) the green runs were from the short time my change was merged). 

2) 

The changes related to warnings in this PR are _only_ present because moving the plugin to cli flag (due to 1) ) makes a race condition where the input exclusion paths are not yet loaded (since they are configured in conftest files). So they are moved to just be colocated to the code itself. Which is honestly just much simpler. 

3)

Unfortunately yes, the common way I run those is by using the command from breeze itself for the test type I'm testing with. But I can see how this would be not the same workflow for others. We need to figure out how to get that case covered.

4)

Fair enough, and agreed, but can we focus on our efforts on finding this new path? Because our system testing infra has been broken for over a week due to this and so far it has not gotten much attention.

ashb on (2024-10-30 16:49:02 UTC): If the problem is that `breeze testing tests provider/tests/...` triggers the conftest error then we should fix that command:

If there are positional args to that then we shouldn't include tests arg.  Right now we get `breeze testing tests provider/tests/...` runs (give or take) `pytest tests provider/tests/...` when we want/need it to run `pytesy provider/tests/...`

Have I understood correctly @o-nikolas ?

o-nikolas (Issue Creator) on (2024-10-30 17:25:25 UTC): This sounds lovely :) I'm not passionate about how the issue is fixed, just that it gets fixed.


That is certainly a possible approach!

potiuk on (2024-10-30 20:37:25 UTC): Yes this is a problem reported today as well on slack https://apache-airflow.slack.com/archives/CCQ7EGB1P/p1730313232385169?thread_ts=1730313232.385169&cid=CCQ7EGB1P and now I see where it is coming from. Yep it's been broken since the provider's move and we should definitely fix it

potiuk on (2024-10-30 20:49:16 UTC): And when I recall that (coming back from a meetup now) - I believe this code must have been there  before the move only it has been disabled or removed when the providers were moved . I will have to check when I am back.

potiuk on (2024-10-30 20:51:03 UTC): I thought it has not been needed BTW and iindownplayed importance of it but I see now that it has been indeed used for system tests so we must bring it back

potiuk on (2024-10-30 22:58:02 UTC): @ashb @o-nikolas  

I was really scratching my head why this happen and could not figure it out, but I know what happens. I recalled some of the history, I checked out the version before the providers move and it turned out that the ""tests"" folder has been added there even then.

BUT (And here comes surprise from pytest) the ""tests"" were never collected when we added any provider's tests because of af a bug introduced in Pytest 8: https://github.com/pytest-dev/pytest/issues/12605#issuecomment-2291198620

The thing that if you run: `pytest tests tests/providers/something` - the ""tests"" pytest will NOT be collected, because as of Pytest 8, if there is a parent folder before sub-path, ONLY  the subpath tests are collected (!!!!).

It's a very weird pytest behaviour that had already bitten us and I had to workaround it in `run_tests.py` for parallell non-db tests:
https://github.com/apache/airflow/blob/51f9e835bf4e40e418f9f45a510a639068b08fa2/dev/breeze/src/airflow_breeze/utils/run_tests.py#L401

So The ""tests"" folder had been there for quite some time (after we switched to Pytest 8) - but we never  realized it, because system test providers were subfolder of the ""tests"" and when you run `pytest  tests tests/providers/amazon/sytem/some_test.py` - pytest did not collect all the tests from ""tests"" folder - only used the some_test.py folder.

This is now `pytest  tests providers/amazon/tests/sytem/some_test.py` - and in this case both ""tests"" and the system test are collected.

Weird as it is, but simply ""tests"" should have not been at all in this case, but it was never a problem, because all the tests were in ""tests/"" sub-folder and simply the first ""tests"" folder was ignored.

So now when I **know** how we get it, the fix will be easy. PR shortly.

potiuk on (2024-10-30 23:43:42 UTC): @ashb @o-nikolas -> https://github.com/apache/airflow/pull/43529 fix here.

potiuk on (2024-10-30 23:48:17 UTC): Actually it is not yet final fix - due to the multiple conftest.py at top-level, and moving providers the ""All"" test types are not exactly working as expected - they only run ""core"" tests. But this is not an issue for CI at least - becasue there in most cases (except Quarantine tests"" we are not  using ""All"" test suite, but individual tests folders (also for Non-DB tests) - so it has no impact on running all tests. I will fix it as a follow up and likely change  approach for ""All-"" test suites

o-nikolas (Issue Creator) on (2024-10-31 03:42:26 UTC): I feel so much better now. I was also really scratching my head trying to figure out how this worked beforehand with passing a provider path, since I knew the `tests` was also there before. Thanks for solving that one!

potiuk on (2024-10-31 16:43:59 UTC): Yeah. It's a real **surprise** from pytest devs to have this behaviour.. but also it made me realise that we have far too many band-aids over band-aids for the test framework of our and now when we extract out provides and task_sdk we need to heavily refactor it as it is far from being easy to reason about - and if it took even me that long to find out where it comes from it means we have to simplify and split it all to 3 separate paths (and more) - see https://github.com/apache/airflow/issues/42632#issuecomment-2449671014

"
2606584791,pull_request,closed,,Fix Pytest caplog after PR #43153,"PR #43153 introduced some tests using caplog - which is known to have concurrency issues... and as the added tests are non-DB tests they are executed in parallel, risk to have a race.

Failed canary builds https://github.com/apache/airflow/actions/runs/11461340167/job/31890715886 and https://github.com/apache/airflow/actions/runs/11467168248/job/31909855847

Attempting to fix with a context for log capturing.

FYI @OliverWannenwetsch ",jscheffl,2024-10-22 21:44:09+00:00,[],2024-10-23 07:16:42+00:00,2024-10-22 22:23:40+00:00,https://github.com/apache/airflow/pull/43279,"[('area:providers', ''), ('AIP-69', 'Edge Executor'), ('provider:edge', 'Edge Executor / Worker (AIP-69)')]","[{'comment_id': 2430375577, 'issue_id': 2606584791, 'author': 'jscheffl', 'body': 'Uuups, after some loops, was able to still have it failing locally, need to provide a better fix :-(', 'created_at': datetime.datetime(2024, 10, 22, 21, 47, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2430398349, 'issue_id': 2606584791, 'author': 'jscheffl', 'body': '> Uuups, after some loops, was able to still have it failing locally, need to provide a better fix :-(\r\n\r\nNow should be stable, removed dependency of logs in caplog as much as possible.', 'created_at': datetime.datetime(2024, 10, 22, 22, 3, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2431117278, 'issue_id': 2606584791, 'author': 'OliverWannenwetsch', 'body': 'Thank you @jscheffl for your effort here. I was not aware that caplog has concurrency issues. I will not use it in future PRs.', 'created_at': datetime.datetime(2024, 10, 23, 7, 16, 41, tzinfo=datetime.timezone.utc)}]","jscheffl (Issue Creator) on (2024-10-22 21:47:53 UTC): Uuups, after some loops, was able to still have it failing locally, need to provide a better fix :-(

jscheffl (Issue Creator) on (2024-10-22 22:03:04 UTC): Now should be stable, removed dependency of logs in caplog as much as possible.

OliverWannenwetsch on (2024-10-23 07:16:41 UTC): Thank you @jscheffl for your effort here. I was not aware that caplog has concurrency issues. I will not use it in future PRs.

"
2606505187,pull_request,closed,,Better handling masking of values of set variable  (#43123),"(cherry picked from commit 1260d9c042f7a6351a4b67611ce39f91764dcbdf)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-22 21:03:44+00:00,[],2024-10-23 08:56:54+00:00,2024-10-23 07:49:04+00:00,https://github.com/apache/airflow/pull/43278,"[('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2430279610, 'issue_id': 2606505187, 'author': 'potiuk', 'body': 'Backport of #43123 to v2-10-test.', 'created_at': datetime.datetime(2024, 10, 22, 21, 4, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2431189881, 'issue_id': 2606505187, 'author': 'potiuk', 'body': 'The errors will be handled separately PR is coming.', 'created_at': datetime.datetime(2024, 10, 23, 7, 49, 25, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-22 21:04:09 UTC): Backport of #43123 to v2-10-test.

potiuk (Issue Creator) on (2024-10-23 07:49:25 UTC): The errors will be handled separately PR is coming.

"
2606493114,pull_request,closed,,bump microsoft-kiota-abstractions>=1.4.0,"I changed the kiota - abstraction in the provider/microsoft/azure file.
closes: #43036 ",LefterisXefteris,2024-10-22 20:58:58+00:00,[],2024-10-27 06:27:49+00:00,2024-10-27 06:25:13+00:00,https://github.com/apache/airflow/pull/43277,"[('provider:microsoft-azure', 'Azure-related issues'), ('area:providers', '')]","[{'comment_id': 2430263035, 'issue_id': 2606493114, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 22, 20, 59, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436018400, 'issue_id': 2606493114, 'author': 'potiuk', 'body': 'You committed a lot of files in this PR that should not be committed.', 'created_at': datetime.datetime(2024, 10, 24, 18, 1, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439873436, 'issue_id': 2606493114, 'author': 'eladkal', 'body': 'please update the files in the PR only to what is relevant to the change', 'created_at': datetime.datetime(2024, 10, 27, 6, 27, 47, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-22 20:59:01 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-10-24 18:01:01 UTC): You committed a lot of files in this PR that should not be committed.

eladkal on (2024-10-27 06:27:47 UTC): please update the files in the PR only to what is relevant to the change

"
2606306545,pull_request,closed,,Fix edge-case when conflicting constraints prevent k8s env creation,"The #36930 added constraints to creation of k8s environment, but it had a side effect - the constraints could not be created if source of airflow had dependencies conflicting with constraints (which might happen for example when we upgrade FAB - because locally pinned FAB might be different than the one in constraints).

Also the constraints were ""hard-coded"" - the python version, branch and github repository were hard-coded.

This PR fixes both problems:

* constraints URL is dynamically generated based on current branch, repo and python version
* in case attempts to create the venv with constraints fails, we attempt to install it again without constraints

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-22 19:32:33+00:00,[],2024-10-23 07:54:34+00:00,2024-10-23 07:54:27+00:00,https://github.com/apache/airflow/pull/43276,"[('area:dev-tools', '')]",[],
2606138374,pull_request,closed,,adding import error,"fixes: #43092 
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Bowrna,2024-10-22 18:08:22+00:00,[],2024-10-22 18:19:31+00:00,2024-10-22 18:19:31+00:00,https://github.com/apache/airflow/pull/43275,"[('area:dev-tools', '')]",[],
2606104172,pull_request,closed,,Fixes behaviour of example dag tests for main/other branches,"While the #43260 attempted to address the problem where example dag importability tests should skip provider tests on non-main, it did not actually solve the problem.

While debugging it, it turned out that since #42505, the provider tests were not executed in main ""at all"" - the ""providers"" directory was not included in the list of places to check for the example dags (they were in ""airflow"" in v2-10-test"") this is why it ""looked like"" the solution worked in ""main"".

This PR fixes both problems:

* brings back importability of provider's example_dags in main branch
* properly excludes the providers examples in non-main branch

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-22 17:50:38+00:00,[],2024-10-23 10:56:15+00:00,2024-10-23 10:56:13+00:00,https://github.com/apache/airflow/pull/43273,[],[],
2606081221,pull_request,closed,,Upgrade databricks provider dependency,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->


continuation of https://github.com/apache/airflow/pull/42626
closes: https://github.com/apache/airflow/issues/39274
suppress: https://github.com/apache/airflow/pull/42626
patching some of the mypy test failures

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",dcmshi,2024-10-22 17:39:40+00:00,[],2024-11-27 04:34:13+00:00,2024-11-26 18:39:55+00:00,https://github.com/apache/airflow/pull/43272,"[('area:providers', ''), ('provider:snowflake', 'Issues related to Snowflake provider'), ('provider:databricks', '')]","[{'comment_id': 2429878523, 'issue_id': 2606081221, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 22, 17, 39, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442270557, 'issue_id': 2606081221, 'author': 'dcmshi', 'body': 'provider checks are good locally\r\n```\r\nhatch run pre-commit run mypy-providers --all-files\r\n```\r\n![Screenshot 2024-10-28 at 1 47 07 PM](https://github.com/user-attachments/assets/14b769b9-cada-4bd6-b8fc-7924f9649e99)', 'created_at': datetime.datetime(2024, 10, 28, 18, 0, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447560155, 'issue_id': 2606081221, 'author': 'dcmshi', 'body': 'reran with manual mypy-providers check\r\n```\r\nhatch run pre-commit run --color always --verbose --hook-stage manual  mypy-providers --all-files\r\n```\r\n<img width=""1835"" alt=""Screenshot 2024-10-30 at 11 31 15 AM"" src=""https://github.com/user-attachments/assets/564416c4-3a72-4372-a6c3-fd59f88bff14"">', 'created_at': datetime.datetime(2024, 10, 30, 15, 31, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454968200, 'issue_id': 2606081221, 'author': 'dcmshi', 'body': 'just syncing my fork, but the manual checks were passing before this so I think this should be ready for review?', 'created_at': datetime.datetime(2024, 11, 4, 15, 9, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455881053, 'issue_id': 2606081221, 'author': 'potiuk', 'body': 'Approved the workflow: 👀', 'created_at': datetime.datetime(2024, 11, 4, 23, 5, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457691614, 'issue_id': 2606081221, 'author': 'dcmshi', 'body': 'sorry I think I needed to rebase again, there were quite a few test failures in the test_backfill_endpoint module, but I think not related to my changes, I do see it was removed in this PR: https://github.com/apache/airflow/pull/43649/files . Could you please help me trigger checks whenever you get chance again 🙇 \r\n\r\nCI run test failures: https://github.com/apache/airflow/actions/runs/11671655535/job/32506671351?pr=43272\r\n<img width=""1336"" alt=""Screenshot 2024-11-05 at 11 48 25 AM"" src=""https://github.com/user-attachments/assets/3d91c09d-83aa-487b-a567-02ef4f10ca40"">', 'created_at': datetime.datetime(2024, 11, 5, 16, 51, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2489858437, 'issue_id': 2606081221, 'author': 'potiuk', 'body': 'Still there seem to be databricks imports in snowflake ?', 'created_at': datetime.datetime(2024, 11, 21, 1, 8, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2494954434, 'issue_id': 2606081221, 'author': 'potiuk', 'body': 'You need to rebase, rebuild image and it should work then.', 'created_at': datetime.datetime(2024, 11, 22, 22, 11, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2501673233, 'issue_id': 2606081221, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 11, 26, 18, 39, 57, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-22 17:39:46 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

dcmshi (Issue Creator) on (2024-10-28 18:00:32 UTC): provider checks are good locally
```
hatch run pre-commit run mypy-providers --all-files
```
![Screenshot 2024-10-28 at 1 47 07 PM](https://github.com/user-attachments/assets/14b769b9-cada-4bd6-b8fc-7924f9649e99)

dcmshi (Issue Creator) on (2024-10-30 15:31:32 UTC): reran with manual mypy-providers check
```
hatch run pre-commit run --color always --verbose --hook-stage manual  mypy-providers --all-files
```
<img width=""1835"" alt=""Screenshot 2024-10-30 at 11 31 15 AM"" src=""https://github.com/user-attachments/assets/564416c4-3a72-4372-a6c3-fd59f88bff14"">

dcmshi (Issue Creator) on (2024-11-04 15:09:40 UTC): just syncing my fork, but the manual checks were passing before this so I think this should be ready for review?

potiuk on (2024-11-04 23:05:14 UTC): Approved the workflow: 👀

dcmshi (Issue Creator) on (2024-11-05 16:51:18 UTC): sorry I think I needed to rebase again, there were quite a few test failures in the test_backfill_endpoint module, but I think not related to my changes, I do see it was removed in this PR: https://github.com/apache/airflow/pull/43649/files . Could you please help me trigger checks whenever you get chance again 🙇 

CI run test failures: https://github.com/apache/airflow/actions/runs/11671655535/job/32506671351?pr=43272
<img width=""1336"" alt=""Screenshot 2024-11-05 at 11 48 25 AM"" src=""https://github.com/user-attachments/assets/3d91c09d-83aa-487b-a567-02ef4f10ca40"">

potiuk on (2024-11-21 01:08:47 UTC): Still there seem to be databricks imports in snowflake ?

potiuk on (2024-11-22 22:11:28 UTC): You need to rebase, rebuild image and it should work then.

boring-cyborg[bot] on (2024-11-26 18:39:57 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2606009996,pull_request,closed,,Remove sqlalchemy-redshift dependency,"Tested this manually, should work - let's look at the tests.",mobuchowski,2024-10-22 17:01:56+00:00,[],2024-10-23 10:12:48+00:00,2024-10-23 10:12:48+00:00,https://github.com/apache/airflow/pull/43271,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('area:dev-tools', ''), ('full tests needed', 'We need to run full set of tests for this PR to merge'), ('disable image cache', 'Disables cache when buidling CI images')]","[{'comment_id': 2431613931, 'issue_id': 2606009996, 'author': 'potiuk', 'body': 'Cool. @ashb you should be unblocked with this sqlalchemy 2 related dependency. One less for our ""Airflow Beach Cleaning"" to analyse as well.', 'created_at': datetime.datetime(2024, 10, 23, 10, 12, 43, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-23 10:12:43 UTC): Cool. @ashb you should be unblocked with this sqlalchemy 2 related dependency. One less for our ""Airflow Beach Cleaning"" to analyse as well.

"
2605420431,pull_request,closed,,AIP-84 Patch Pool,"related to: https://github.com/apache/airflow/issues/42370

Only the last commit is relevant.",pierrejeambrun,2024-10-22 13:11:41+00:00,['pierrejeambrun'],2024-10-23 14:28:05+00:00,2024-10-23 14:28:03+00:00,https://github.com/apache/airflow/pull/43266,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-84', 'Modern Rest API'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]",[],
2605366590,pull_request,closed,,Add a debug log for creating batch workloads in dataproc,"suppress:https://github.com/apache/airflow/pull/41812
related: https://github.com/apache/airflow/issues/41789
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-10-22 12:50:25+00:00,[],2024-10-25 21:18:26+00:00,2024-10-25 20:18:56+00:00,https://github.com/apache/airflow/pull/43265,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2433140684, 'issue_id': 2605366590, 'author': 'kaxil', 'body': '@romsharon98 Could you please update the PR title? The current one is a bit vague and doesn’t clearly communicate the purpose of the change. I recommend reading [this blog post](https://cbea.ms/git-commit/) for guidance.\r\n\r\nIn particular, it would be helpful to follow this principle:\r\n\r\n> **_A properly formed Git commit subject line should always be able to complete the following sentence: “If applied, this commit will [your subject line here].”_**\r\n\r\nSince this entry will appear in the release notes, it’s important that the PR title and description clearly explain the changes and their impact.', 'created_at': datetime.datetime(2024, 10, 23, 18, 37, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438310257, 'issue_id': 2605366590, 'author': 'romsharon98', 'body': '> @romsharon98 Could you please update the PR title? The current one is a bit vague and doesn’t clearly communicate the purpose of the change. I recommend reading [this blog post](https://cbea.ms/git-commit/) for guidance.\n> \n> \n> \n> In particular, it would be helpful to follow this principle:\n> \n> \n> \n> > **_A properly formed Git commit subject line should always be able to complete the following sentence: “If applied, this commit will [your subject line here].”_**\n> \n> \n> \n> Since this entry will appear in the release notes, it’s important that the PR title and description clearly explain the changes and their impact.\n\nThanks @kaxil really appreciate the informative comment.\nI changed the PR title accordingly', 'created_at': datetime.datetime(2024, 10, 25, 16, 48, 30, tzinfo=datetime.timezone.utc)}]","kaxil on (2024-10-23 18:37:50 UTC): @romsharon98 Could you please update the PR title? The current one is a bit vague and doesn’t clearly communicate the purpose of the change. I recommend reading [this blog post](https://cbea.ms/git-commit/) for guidance.

In particular, it would be helpful to follow this principle:


Since this entry will appear in the release notes, it’s important that the PR title and description clearly explain the changes and their impact.

romsharon98 (Issue Creator) on (2024-10-25 16:48:30 UTC): Thanks @kaxil really appreciate the informative comment.
I changed the PR title accordingly

"
2605273167,pull_request,open,,fix(helm-chart): dags gitsync credentials,"closes: https://github.com/apache/airflow/issues/43247
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: https://github.com/apache/airflow/issues/43247
related: [#ISSUE](https://github.com/apache/airflow/issues/43247)

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
This adds a condition to the env vars being added to the gitsync sidecar. The expected keys are in sync with what is documentation here: https://github.com/romsharon98/airflow/blob/main/chart/values.yaml#L2738
",tobimichael96,2024-10-22 12:10:39+00:00,[],2025-01-21 21:20:57+00:00,,https://github.com/apache/airflow/pull/43264,"[('area:helm-chart', 'Airflow Helm Chart')]","[{'comment_id': 2429110373, 'issue_id': 2605273167, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 22, 12, 10, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2429148916, 'issue_id': 2605273167, 'author': 'tobimichael96', 'body': '> Can you add unit test for this?\r\n\r\nI added them here: https://github.com/apache/airflow/pull/43264/commits/2b70391f92bd1b5f44709b4a60c97958e342e971', 'created_at': datetime.datetime(2024, 10, 22, 12, 28, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2429191971, 'issue_id': 2605273167, 'author': 'romsharon98', 'body': 'It was a really quick solution, great one! @tobimichael96', 'created_at': datetime.datetime(2024, 10, 22, 12, 47, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2440816497, 'issue_id': 2605273167, 'author': 'tobimichael96', 'body': 'Any updates on this here? From my perspective it could be merged.', 'created_at': datetime.datetime(2024, 10, 28, 8, 7, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2440925389, 'issue_id': 2605273167, 'author': 'romsharon98', 'body': '> Any updates on this here? From my perspective it could be merged.\r\n\r\nLooks good to me.\r\n@jedcunningham', 'created_at': datetime.datetime(2024, 10, 28, 9, 0, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2540264892, 'issue_id': 2605273167, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 12, 13, 0, 16, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2540988030, 'issue_id': 2605273167, 'author': 'tobimichael96', 'body': ""Please don't close it. :)"", 'created_at': datetime.datetime(2024, 12, 13, 9, 33, 35, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-22 12:10:44 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

tobimichael96 (Issue Creator) on (2024-10-22 12:28:36 UTC): I added them here: https://github.com/apache/airflow/pull/43264/commits/2b70391f92bd1b5f44709b4a60c97958e342e971

romsharon98 on (2024-10-22 12:47:35 UTC): It was a really quick solution, great one! @tobimichael96

tobimichael96 (Issue Creator) on (2024-10-28 08:07:58 UTC): Any updates on this here? From my perspective it could be merged.

romsharon98 on (2024-10-28 09:00:05 UTC): Looks good to me.
@jedcunningham

github-actions[bot] on (2024-12-13 00:16:47 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

tobimichael96 (Issue Creator) on (2024-12-13 09:33:35 UTC): Please don't close it. :)

"
2605266317,pull_request,closed,,Skip example importability tests for providers in non-main branches (…,"…#43260)

When ""Always"" tests are running in v2* branches, they also tested provider examples for importability. However sometimes those tests failed because we have not cherry-picked some of the provider's changes that were necessary for the examples to get imported.

This PR excludes provider's examples from the ""always"" running importability tests, when the branch we are running it in is not main (i.e. we are in one of the past v2-branches).

(cherry picked from commit 0f38be1f957d72dd8b6081e7f2381f82f513f78a)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-22 12:07:36+00:00,[],2024-10-22 17:53:18+00:00,2024-10-22 17:53:15+00:00,https://github.com/apache/airflow/pull/43263,[],"[{'comment_id': 2429106601, 'issue_id': 2605266317, 'author': 'potiuk', 'body': 'Backport of #43260 - should help with getting v2-10-test PRs green - excluding provider examples from importability checks', 'created_at': datetime.datetime(2024, 10, 22, 12, 9, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2429182815, 'issue_id': 2605266317, 'author': 'potiuk', 'body': 'Hmm. For some reason it does not work :)', 'created_at': datetime.datetime(2024, 10, 22, 12, 43, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2429903037, 'issue_id': 2605266317, 'author': 'potiuk', 'body': 'OK. I know why it did not work (and actully found a teething problem with provider folder move). Proper fix is in https://github.com/apache/airflow/pull/43273 - but it will be easier to merge that one and the apply #43273 once merged to avoid conflicts.', 'created_at': datetime.datetime(2024, 10, 22, 17, 53, 12, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-22 12:09:01 UTC): Backport of #43260 - should help with getting v2-10-test PRs green - excluding provider examples from importability checks

potiuk (Issue Creator) on (2024-10-22 12:43:29 UTC): Hmm. For some reason it does not work :)

potiuk (Issue Creator) on (2024-10-22 17:53:12 UTC): OK. I know why it did not work (and actully found a teething problem with provider folder move). Proper fix is in https://github.com/apache/airflow/pull/43273 - but it will be easier to merge that one and the apply #43273 once merged to avoid conflicts.

"
2605201667,pull_request,closed,,Skip example importability tests for providers in non-main branches,"When ""Always"" tests are running in v2* branches, they also tested provider examples for importability. However sometimes those tests failed because we have not cherry-picked some of the provider's changes that were necessary for the examples to get imported.

This PR excludes provider's examples from the ""always"" running importability tests, when the branch we are running it in is not main (i.e. we are in one of the past v2-branches).

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-22 11:41:57+00:00,[],2024-10-22 12:06:30+00:00,2024-10-22 12:06:28+00:00,https://github.com/apache/airflow/pull/43260,[],[],
2605201087,pull_request,closed,,Unify reattach_states parameter logic across BigQuery operators,This PR propagates the bugfix #40664 by unifying logic for the `reattach_states` parameter across BigQuery operators that use it.,moiseenkov,2024-10-22 11:41:41+00:00,[],2024-10-31 20:53:21+00:00,2024-10-31 20:53:21+00:00,https://github.com/apache/airflow/pull/43259,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2449570706, 'issue_id': 2605201087, 'author': 'VladaZakharova', 'body': 'hi @shahar1 can you please check the changes? c:', 'created_at': datetime.datetime(2024, 10, 31, 10, 54, 20, tzinfo=datetime.timezone.utc)}]","VladaZakharova on (2024-10-31 10:54:20 UTC): hi @shahar1 can you please check the changes? c:

"
2605152229,pull_request,closed,,Add upperbound to microsoft-kiota-abstractions (#43021),"* add upperbound to microsoft-kiota-abstractions

* add

* add comment about breaking change

(cherry picked from commit 7b151d32c809805a6406999b83401663baf7eb41)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-22 11:22:16+00:00,[],2024-10-22 11:22:50+00:00,2024-10-22 11:22:50+00:00,https://github.com/apache/airflow/pull/43258,[],"[{'comment_id': 2429014596, 'issue_id': 2605152229, 'author': 'potiuk', 'body': ""Hmm.. Not really - it's already there..."", 'created_at': datetime.datetime(2024, 10, 22, 11, 22, 50, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-22 11:22:50 UTC): Hmm.. Not really - it's already there...

"
2605140572,pull_request,closed,,Mark sometimes failing heartbeat test and view test as flaky (#43250),"(cherry picked from commit fcfc6f96df8e3e22364952dc035b46dce840974f)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-22 11:17:38+00:00,[],2024-10-23 14:45:45+00:00,2024-10-23 14:45:42+00:00,https://github.com/apache/airflow/pull/43257,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:webserver', 'Webserver related Issues')]","[{'comment_id': 2429005147, 'issue_id': 2605140572, 'author': 'potiuk', 'body': 'Backport of #43250 to v2-10-test', 'created_at': datetime.datetime(2024, 10, 22, 11, 18, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432470284, 'issue_id': 2605140572, 'author': 'potiuk', 'body': 'Failing test fixed in tip of `2-10-test`. Merging', 'created_at': datetime.datetime(2024, 10, 23, 14, 45, 39, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-22 11:18:05 UTC): Backport of #43250 to v2-10-test

potiuk (Issue Creator) on (2024-10-23 14:45:39 UTC): Failing test fixed in tip of `2-10-test`. Merging

"
2605115679,pull_request,closed,,Update system tests apache-beam[gcp] sdk to the latest supported version,"Latest gcp supported version and known issues doc: https://cloud.google.com/dataflow/docs/support/sdk-version-support-status.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",olegkachur-e,2024-10-22 11:06:48+00:00,[],2024-10-24 19:18:58+00:00,2024-10-24 19:18:58+00:00,https://github.com/apache/airflow/pull/43256,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('provider:apache-beam', '')]",[],
2605058005,pull_request,closed,,Migrate the public endpoint Get DAG Stats to FastAPI,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

closes: #42877
related: #42370

This migrates the Get DAG Stats API from `api_connexion` to `api_fastapi`.
",omkar-foss,2024-10-22 10:44:02+00:00,[],2024-11-14 18:33:48+00:00,2024-11-05 15:58:12+00:00,https://github.com/apache/airflow/pull/43255,"[('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2443330078, 'issue_id': 2605058005, 'author': 'omkar-foss', 'body': '@pierrejeambrun All comments resolved, please have a look when possible. Thank you!', 'created_at': datetime.datetime(2024, 10, 29, 6, 36, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454220868, 'issue_id': 2605058005, 'author': 'omkar-foss', 'body': '> We are missing the `@mark_fastapi_migration_done` decorator\r\n\r\nDone, added it. And have added `legacy api` label to PR.', 'created_at': datetime.datetime(2024, 11, 4, 9, 38, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454275275, 'issue_id': 2605058005, 'author': 'omkar-foss', 'body': '@pierrejeambrun all conversations and conflicts resolved, PR ready to review ✅ \r\n\r\nAlso kindly see this thread, let me know if any changes needed there: https://github.com/apache/airflow/pull/43255#discussion_r1819328653', 'created_at': datetime.datetime(2024, 11, 4, 10, 3, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456525584, 'issue_id': 2605058005, 'author': 'pierrejeambrun', 'body': 'Need rebasing but can be merged after that.', 'created_at': datetime.datetime(2024, 11, 5, 8, 25, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457071090, 'issue_id': 2605058005, 'author': 'omkar-foss', 'body': '> Need rebasing but can be merged after that.\r\n\r\n@pierrejeambrun done, PR rebased and synced with `main` ✅', 'created_at': datetime.datetime(2024, 11, 5, 12, 43, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457551220, 'issue_id': 2605058005, 'author': 'pierrejeambrun', 'body': 'Thanks @omkar-foss', 'created_at': datetime.datetime(2024, 11, 5, 15, 52, 11, tzinfo=datetime.timezone.utc)}]","omkar-foss (Issue Creator) on (2024-10-29 06:36:48 UTC): @pierrejeambrun All comments resolved, please have a look when possible. Thank you!

omkar-foss (Issue Creator) on (2024-11-04 09:38:24 UTC): Done, added it. And have added `legacy api` label to PR.

omkar-foss (Issue Creator) on (2024-11-04 10:03:57 UTC): @pierrejeambrun all conversations and conflicts resolved, PR ready to review ✅ 

Also kindly see this thread, let me know if any changes needed there: https://github.com/apache/airflow/pull/43255#discussion_r1819328653

pierrejeambrun on (2024-11-05 08:25:19 UTC): Need rebasing but can be merged after that.

omkar-foss (Issue Creator) on (2024-11-05 12:43:19 UTC): @pierrejeambrun done, PR rebased and synced with `main` ✅

pierrejeambrun on (2024-11-05 15:52:11 UTC): Thanks @omkar-foss

"
2605028165,pull_request,closed,,Consolidate asset orphanization and activation,"Previously, asset activation and orphanization is done in two different places. This creates a race condition when an asset is modified in-place. If the old asset entry is not orphaned in time, the new one fails to be activated due to the name being still in use in the database.

The new logic instead activates assets in the same session that performs orphanization, eliminating the possbility. This also adds a DagWarning when conflicts happen, so users can be informed when such things happen.",uranusjr,2024-10-22 10:32:57+00:00,[],2024-10-26 15:01:16+00:00,2024-10-26 15:01:15+00:00,https://github.com/apache/airflow/pull/43254,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('AIP-74', 'Dataset -> Asset')]",[],
2604614829,pull_request,closed,,Upgrade FAB to 4.5.1,"FAB 4.5.1 has been released in September with a few small fixes. This change updates fab to 4.5.1 including changing the rate limiter creation that is vendored in. It has been changed in https://github.com/dpgaspar/Flask-AppBuilder/pull/2254 and relased in 4.5.1. That's the only dfference in security manager between 4.5.0 and 4.5.1.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-22 08:02:10+00:00,[],2024-10-24 10:00:19+00:00,2024-10-23 13:12:36+00:00,https://github.com/apache/airflow/pull/43251,"[('area:webserver', 'Webserver related Issues'), ('area:providers', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)'), ('provider:fab', '')]","[{'comment_id': 2430092820, 'issue_id': 2604614829, 'author': 'potiuk', 'body': 'OK. I know why it failed - seems like old change of mine (adding constraints) did not take into account that sometimes constraints might be conflicting with local deps (like in this case where we pin FAB). Fix in #43276', 'created_at': datetime.datetime(2024, 10, 22, 19, 35, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2431903113, 'issue_id': 2604614829, 'author': 'potiuk', 'body': 'Merging it - there is an openlineage mypy issue that will be addressed separately.', 'created_at': datetime.datetime(2024, 10, 23, 12, 4, 2, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-22 19:35:04 UTC): OK. I know why it failed - seems like old change of mine (adding constraints) did not take into account that sometimes constraints might be conflicting with local deps (like in this case where we pin FAB). Fix in #43276

potiuk (Issue Creator) on (2024-10-23 12:04:02 UTC): Merging it - there is an openlineage mypy issue that will be addressed separately.

"
2604570366,pull_request,closed,,Mark sometimes failing heartbeat test and view test as flaky,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-22 07:45:35+00:00,[],2024-10-22 11:16:25+00:00,2024-10-22 11:16:23+00:00,https://github.com/apache/airflow/pull/43250,"[('area:Scheduler', 'including HA (high availability) scheduler')]","[{'comment_id': 2428804858, 'issue_id': 2604570366, 'author': 'potiuk', 'body': 'Looks like we had another flaky test occuring in this one - I added flaky marker for that one too and updated the description', 'created_at': datetime.datetime(2024, 10, 22, 9, 44, 59, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-22 09:44:59 UTC): Looks like we had another flaky test occuring in this one - I added flaky marker for that one too and updated the description

"
2604120813,pull_request,closed,,Add missing test for kubernetes compat converters,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
This PR will add unit tests for kubernetes compat converters, and improve the coverage to 100% of `backwards_compat_converters.py`
![image](https://github.com/user-attachments/assets/a9c6c29f-a177-425f-87e5-e5083a732a23)
related: #35442
<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

related: #35442

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",yangyulely,2024-10-22 03:26:05+00:00,[],2024-11-01 10:16:25+00:00,2024-11-01 10:07:43+00:00,https://github.com/apache/airflow/pull/43248,"[('area:providers', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues')]","[{'comment_id': 2440413116, 'issue_id': 2604120813, 'author': 'yangyulely', 'body': ""@romsharon98 , can you review this? I will add more test if that's okay."", 'created_at': datetime.datetime(2024, 10, 28, 2, 31, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446384346, 'issue_id': 2604120813, 'author': 'romsharon98', 'body': 'The tests looks good.\r\nOne small thing, in my opinion, when you want to test a function that calls a function inside it you will want to mock the inner call and just test the call has been done like you expected (and not really call the inner function).\r\nLet me know what you think.', 'created_at': datetime.datetime(2024, 10, 30, 9, 53, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446477977, 'issue_id': 2604120813, 'author': 'yangyulely', 'body': '> The tests looks good. One small thing, in my opinion, when you want to test a function that calls a function inside it you will want to mock the inner call and just test the call has been done like you expected (and not really call the inner function). Let me know what you think.\r\n\r\nYeah, couldn\'t agree more with you, as you can see, that\'s how I got there\r\n```suggestion\r\n@patch(""airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters._convert_kube_model_object"")\r\ndef test_convert_volume_mount_normal_value(mock_convert_kube_model_object):\r\n    mock_convert_kube_model_object.return_value = k8s.V1VolumeMount(\r\n        name=""test_volume_mount"", mount_path=""/mnt/test""\r\n    )\r\n```', 'created_at': datetime.datetime(2024, 10, 30, 10, 26, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446644651, 'issue_id': 2604120813, 'author': 'romsharon98', 'body': '> > The tests looks good. One small thing, in my opinion, when you want to test a function that calls a function inside it you will want to mock the inner call and just test the call has been done like you expected (and not really call the inner function). Let me know what you think.\r\n> \r\n> Yeah, couldn\'t agree more with you, as you can see, that\'s how I got there\r\n> \r\n> ```\r\n> @patch(""airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters._convert_kube_model_object"")\r\n> def test_convert_volume_mount_normal_value(mock_convert_kube_model_object):\r\n>     mock_convert_kube_model_object.return_value = k8s.V1VolumeMount(\r\n>         name=""test_volume_mount"", mount_path=""/mnt/test""\r\n>     )\r\n> ```\r\n\r\nYes but I think we need to add that we call the Mock function correctly for example in this one we should add:\r\n```python\r\nmock_convert_kube_model_object.assert_called_with(...)\r\n```\r\n\r\nto really verify the logic of the function', 'created_at': datetime.datetime(2024, 10, 30, 11, 10, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2451539198, 'issue_id': 2604120813, 'author': 'yangyulely', 'body': '> Yes but I think we need to add that we call the Mock function correctly for example in this one we should add:\r\n> \r\n> ```python\r\n> mock_convert_kube_model_object.assert_called_with(...)\r\n> ```\r\n> \r\n> to really verify the logic of the function\r\n\r\n@romsharon98, I have updated for that, will appreciate it if you could review again.', 'created_at': datetime.datetime(2024, 11, 1, 8, 55, 18, tzinfo=datetime.timezone.utc)}]","yangyulely (Issue Creator) on (2024-10-28 02:31:58 UTC): @romsharon98 , can you review this? I will add more test if that's okay.

romsharon98 on (2024-10-30 09:53:48 UTC): The tests looks good.
One small thing, in my opinion, when you want to test a function that calls a function inside it you will want to mock the inner call and just test the call has been done like you expected (and not really call the inner function).
Let me know what you think.

yangyulely (Issue Creator) on (2024-10-30 10:26:21 UTC): Yeah, couldn't agree more with you, as you can see, that's how I got there
```suggestion
@patch(""airflow.providers.cncf.kubernetes.backcompat.backwards_compat_converters._convert_kube_model_object"")
def test_convert_volume_mount_normal_value(mock_convert_kube_model_object):
    mock_convert_kube_model_object.return_value = k8s.V1VolumeMount(
        name=""test_volume_mount"", mount_path=""/mnt/test""
    )
```

romsharon98 on (2024-10-30 11:10:58 UTC): Yes but I think we need to add that we call the Mock function correctly for example in this one we should add:
```python
mock_convert_kube_model_object.assert_called_with(...)
```

to really verify the logic of the function

yangyulely (Issue Creator) on (2024-11-01 08:55:18 UTC): @romsharon98, I have updated for that, will appreciate it if you could review again.

"
2604037401,pull_request,closed,,Fix `tmux` error,"Without this tmux runs fine, but when you exit, you see the following:

```
root@7baa3481ecf9:/opt/airflow# scripts/in_container/bin/run_tmux
can't find pane: 2
[exited]
```

That is because we are trying to select a pane that doesn't exist yet. This might have been an unintentional error while adding more panes in https://github.com/apache/airflow/pull/41896

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-22 02:09:42+00:00,[],2024-10-22 14:28:31+00:00,2024-10-22 09:07:52+00:00,https://github.com/apache/airflow/pull/43246,"[('area:dev-tools', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]","[{'comment_id': 2429447163, 'issue_id': 2604037401, 'author': 'potiuk', 'body': 'Nice!', 'created_at': datetime.datetime(2024, 10, 22, 14, 28, 29, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-22 14:28:29 UTC): Nice!

"
2604035198,pull_request,closed,,fix(migration): fix dataset to asset migration typo,"Closes: https://github.com/apache/airflow/issues/43226

# Why

`dsdar_dataset_alias_fkey` was accidentally named as `dsdar_dataset_fkey` in migration files

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-10-22 02:07:26+00:00,['Lee-W'],2024-10-23 14:03:39+00:00,2024-10-23 06:16:28+00:00,https://github.com/apache/airflow/pull/43245,"[('area:db-migrations', 'PRs with DB migration')]","[{'comment_id': 2429628372, 'issue_id': 2604035198, 'author': 'bbovenzi', 'body': 'Why is it `dataset_alias` and not `asset_alias`?\r\n\r\n\r\nAlso running `airflow db migrate` locally, I run into `constraint ""dsdar_dag_id_fkey"" of relation ""dag_schedule_asset_alias_reference"" does not exist`. Not sure if it might be related?', 'created_at': datetime.datetime(2024, 10, 22, 15, 40, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2430544035, 'issue_id': 2604035198, 'author': 'Lee-W', 'body': '> Why is it `dataset_alias` and not `asset_alias`?\r\n\r\nThose are fks from Airflow 2.10 that we need to rename.\r\n\r\n> Also running `airflow db migrate` locally, I run into `constraint ""dsdar_dag_id_fkey"" of relation ""dag_schedule_asset_alias_reference"" does not exist`. Not sure if it might be related?\r\n\r\nThanks for reminding me! There\'s yet another issue, but somewhat related. Fixed in this PR', 'created_at': datetime.datetime(2024, 10, 23, 0, 14, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2430610518, 'issue_id': 2604035198, 'author': 'Lee-W', 'body': '> This should be backported, right?\r\n\r\n0026 yes, 0040 no', 'created_at': datetime.datetime(2024, 10, 23, 1, 26, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432317079, 'issue_id': 2604035198, 'author': 'Lee-W', 'body': 'backport pr https://github.com/apache/airflow/pull/43314', 'created_at': datetime.datetime(2024, 10, 23, 14, 3, 38, tzinfo=datetime.timezone.utc)}]","bbovenzi on (2024-10-22 15:40:17 UTC): Why is it `dataset_alias` and not `asset_alias`?


Also running `airflow db migrate` locally, I run into `constraint ""dsdar_dag_id_fkey"" of relation ""dag_schedule_asset_alias_reference"" does not exist`. Not sure if it might be related?

Lee-W (Issue Creator) on (2024-10-23 00:14:10 UTC): Those are fks from Airflow 2.10 that we need to rename.


Thanks for reminding me! There's yet another issue, but somewhat related. Fixed in this PR

Lee-W (Issue Creator) on (2024-10-23 01:26:31 UTC): 0026 yes, 0040 no

Lee-W (Issue Creator) on (2024-10-23 14:03:38 UTC): backport pr https://github.com/apache/airflow/pull/43314

"
2604019095,pull_request,closed,,Fix alembic template & make pre-commit more resilient,"While working on this https://github.com/apache/airflow/pull/43243, I was following https://github.com/apache/airflow/blob/main/contributing-docs/13_metadata_database_updates.rst and I ran into an error with  pre-commit hook.

When running the revision command as follows:

```
root@f1f78138ad78:/opt/airflow/airflow# alembic revision -m ""New revision""
  Generating /opt/airflow/airflow/migrations/versions/01b38be821e9_new_revision.py ...  done
```

It creates a file as follows:

```python
""""""New revision

Revision ID: cd7be1ae8b80
Revises: 05234396c6fc
Create Date: 2024-10-22 01:44:17.873864

""""""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = 'cd7be1ae8b80'
down_revision = '05234396c6fc'
branch_labels = None
depends_on = None
```

Notice single quotes in `revision` & `down_revision`.

Now if I just run that single pre-commit hook (`update-migration-references`), it fails

```
❯ pre-commit run ""update-migration-references"" --all-files
Update migration ref doc.................................................Failed
- hook id: update-migration-references
- exit code: 1

Using 'uv' to install Airflow

Using airflow version from current sources

Updating migration reference for airflow
Making sure airflow version updated
Making sure there's no mismatching revision numbers
Traceback (most recent call last):
  File ""/opt/airflow/scripts/in_container/run_migration_reference.py"", line 246, in <module>
    correct_mismatching_revision_nums(revisions=revisions)
  File ""/opt/airflow/scripts/in_container/run_migration_reference.py"", line 230, in correct_mismatching_revision_nums
    new_content = content.replace(revision_id_match.group(1), revision_match.group(1), 1)
AttributeError: 'NoneType' object has no attribute 'group'
Error 1 returned

If you see strange stacktraces above, run `breeze ci-image build --python 3.9` and try again.
```

That isn't a problem generally as `ruff` will fail before and convert it into double quotes. But rather than doing that, we fix it at source.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-22 01:52:05+00:00,[],2024-10-22 10:36:56+00:00,2024-10-22 10:36:52+00:00,https://github.com/apache/airflow/pull/43244,"[('area:dev-tools', '')]",[],
2603996124,pull_request,closed,,Migrate `TaskInstance` to UUID v7 primary key,"closes https://github.com/apache/airflow/issues/43161 part of [AIP-72](https://github.com/orgs/apache/projects/405).

As part of the ongoing work for [AIP-72: Task Execution Interface](https://cwiki.apache.org/confluence/display/AIRFLOW/AIP-72+Task+Execution+Interface+aka+Task+SDK), we are migrating the task_instance table to use a UUID primary key. This change is being made to simplify task instance identification, especially when communicating between the executor and workers.

Currently, the primary key of task_instance is a composite key consisting of `dag_id, task_id, run_id, and map_index` as shown below. This migration introduces a **UUID v7** column (`id`) as the new primary key. 

https://github.com/apache/airflow/blob/b4269f33c7151e6d61e07333003ec1e219285b07/airflow/models/taskinstance.py#L1815-L1819

##  Why UUID v7?

The UUID v7 format was chosen because of its improved temporal sorting capabilities. For existing records, UUID v7 will be generated using either the queued_dttm, start_date, or the current timestamp.

<img width=""792"" alt=""image"" src=""https://github.com/user-attachments/assets/ba68c9ae-4f9d-4cd2-8504-1b671d23ef6c"">

(From [this blog post](https://www.toomanyafterthoughts.com/uuids-are-bad-for-database-index-performance-uuid7).)

## Changes 

1. **Migrated Primary Key to UUID v7**  
   - Replaced the composite primary key (`dag_id`, `task_id`, `run_id`, `map_index`) with a UUID v7 `id` field, ensuring temporal sorting and simplified task instance identification.

2. **Database-Specific UUID v7 Functions** for DB Migrations  
   - Added UUID v7 functions for each database, just for DB migration since generating uuid's on Python and then storing it in DB can be slow:
      - **PostgreSQL**: Uses `pgcrypto` for generation with fallback.
      - **MySQL**: Custom deterministic UUID v7 function.
      - **SQLite**: Utilizes `uuid6` Python package.

3. **Updated Constraints and Indexes**  
   - Added `UniqueConstraint` on (`dag_id`, `task_id`, `run_id`, `map_index`) for compatibility.
   - Modified foreign key constraints for the new primary key, handling downgrades to restore previous constraints.

4. **Model and API Adjustments**  
   - Updated `TaskInstance` model to use UUID v7 as the primary key via [`uuid6`](https://pypi.org/project/uuid6/) library, that has uuid7 ! 😄 .
   - Adjusted REST API, views, and queries to support UUID-based lookups.
   - Modified tests for compatibility with the new primary key.


## Issues identified

After updating the primary key on the `TaskInstance` model to a UUID7 `id` field (from the composite primary key of `[""dag_id"", ""task_id"", ""run_id"", ""map_index""]`), I have now run into issues  in testing and session management:

1. **`session.merge()` Compatibility**  

    The `session.merge()` function operates strictly on primary keys as mentioned in [this SQLAlchemy docs](https://docs.sqlalchemy.org/en/20/orm/session_state_management.html#merging), which means it no longer recognizes the unique constraint on `[""dag_id"", ""task_id"", ""run_id"", ""map_index""]` to identify existing `TaskInstance` records. This leads to issues in cases where `session.merge()` was previously used to either update or insert TaskInstance records, as it now fails to locate the intended record by the unique constraint.

    Example:
 
     https://github.com/apache/airflow/blob/b2ecb6c9caacd2ca7a2c1519ca892b19b2bb35fb/tests/models/test_dag.py#L2013-L2026

    A possible workaround would be to follow `session.merge()` calls with `refresh_from_db()` to ensure the instance has the latest state:  
   ```python
   task_instance_1 = session.merge(TaskInstance(task=t_1, run_id=dagrun_1.run_id, state=ti_state_begin))
   task_instance_1.refresh_from_db()  # Update instance with current DB state
   ```


2. **`session.get()` usage with `TaskInstanceKey`**  

    Similarly, `session.get()` and other primary key-based session operations now rely solely on the `id` UUID rather than the composite fields. This results in errors when accessing or sorting records based on the previous composite fields, as `session.get()` cannot match identifiers to `TaskInstance` records by the unique constraint.

    **Current code in main**:

    https://github.com/apache/airflow/blob/78ff0a99700125121b7f0647023503750f14a11b/tests/models/test_cleartasks.py#L742

    I have been changing those references from `TaskInstanceKey` in Database calls with `ti.id`, example:

   https://github.com/apache/airflow/blob/cca7ce0fd66b01293e21221d1dd9332312a4cb66/tests/models/test_cleartasks.py#L742

3. **Airflow REST API calls which filters TIs**  
    
    Similar to (2) above, some of our REST API call filters TI records based on current primary key as below:
     https://github.com/apache/airflow/blob/78ff0a99700125121b7f0647023503750f14a11b/airflow/api_connexion/endpoints/task_instance_endpoint.py#L536-L537

     I am changing that to `session.scalars(select(TI).where(...))..one_or_none()` queries. For example, the above code is changed to the following in this PR.
     https://github.com/apache/airflow/blob/3c61ba7157bce0dd9d7456670e7ba553be046d6e/airflow/api_connexion/endpoints/task_instance_endpoint.py#L536-L540

## TODOs

- [x] Check if the DB user has permissions to add CREATE extension for Postgres as we install `pgcrypto`
- [x] Convert the raw SQL for dropping the primary key (CASCADE) into an Alembic operation. This will allow capturing foreign key constraints and managing them in a downgrade scenario. MySQL does not support dropping foreign keys using CASCADE with primary keys anyway.
- [x] Ensure foreign key constraints are re-added during downgrades after the primary key has been changed back to the composite key.
- [x] SQLite Support: Add SQLite support for UUID v7 generation using the [uuid6 Python package](https://pypi.org/project/uuid6/).
- [x] Add changes to `TaskInstance` model file to add `id`

## Future Work
- [ ] Evaluate if the `task_instance_history` table requires similar updates for UUID v7 compatibility. (https://github.com/apache/airflow/issues/43437)
- [ ] **Batch Updates**: Investigate batch processing for updating UUIDs to avoid long locks on large datasets. Maybe run with batches of 10000 rows???  -- TBD. We can also run some benchmarks once we do that. (https://github.com/apache/airflow/issues/43438)
- [ ] Determine if including `try_number` in the `UniqueConstraint` improves index efficiency. (https://github.com/apache/airflow/issues/43439)
",kaxil,2024-10-22 01:26:43+00:00,[],2024-10-28 12:48:10+00:00,2024-10-28 12:40:35+00:00,https://github.com/apache/airflow/pull/43243,"[('kind:documentation', ''), ('area:db-migrations', 'PRs with DB migration'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2428855292, 'issue_id': 2603996124, 'author': 'ashb', 'body': ""A neat trick to avoid the need for pgcrypto extension: https://brandur.org/fragments/secure-bytes-without-pgcrypto\r\n\r\nThough `uuid_send()` fn it uses doesn't exist on Pg10, it only comes from Pg11 onwards. However I do think it's reasonable to say 12 or 13 is the min required Pg version for Airflow 3 (Postgres only supports v13 onwards).\r\n\r\nOh, Pg 12 is officially all we support anyway, so I think using the `uuid_send()` function approach could work fine."", 'created_at': datetime.datetime(2024, 10, 22, 10, 6, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439774584, 'issue_id': 2603996124, 'author': 'kaxil', 'body': '## Issues identified\r\n\r\nAfter updating the primary key on the `TaskInstance` model to a UUID7 `id` field (from the composite primary key of `[""dag_id"", ""task_id"", ""run_id"", ""map_index""]`), I have now run into issues  in testing and session management:\r\n\r\n1. **`session.merge()` Compatibility**  \r\n\r\n    The `session.merge()` function operates strictly on primary keys as mentioned in [this SQLAlchemy docs](https://docs.sqlalchemy.org/en/20/orm/session_state_management.html#merging), which means it no longer recognizes the unique constraint on `[""dag_id"", ""task_id"", ""run_id"", ""map_index""]` to identify existing `TaskInstance` records. This leads to issues in cases where `session.merge()` was previously used to either update or insert TaskInstance records, as it now fails to locate the intended record by the unique constraint.\r\n\r\n    Example:\r\n \r\n     https://github.com/apache/airflow/blob/b2ecb6c9caacd2ca7a2c1519ca892b19b2bb35fb/tests/models/test_dag.py#L2013-L2026\r\n\r\n    A possible workaround would be to follow `session.merge()` calls with `refresh_from_db()` to ensure the instance has the latest state:  \r\n   ```python\r\n   task_instance_1 = session.merge(TaskInstance(task=t_1, run_id=dagrun_1.run_id, state=ti_state_begin))\r\n   task_instance_1.refresh_from_db()  # Update instance with current DB state\r\n   ```\r\n\r\n\r\n2. **`session.get()` usage with `TaskInstanceKey`**  \r\n\r\n    Similarly, `session.get()` and other primary key-based session operations now rely solely on the `id` UUID rather than the composite fields. This results in errors when accessing or sorting records based on the previous composite fields, as `session.get()` cannot match identifiers to `TaskInstance` records by the unique constraint.\r\n\r\n    **Current code in main**:\r\n\r\n    https://github.com/apache/airflow/blob/78ff0a99700125121b7f0647023503750f14a11b/tests/models/test_cleartasks.py#L742\r\n\r\n    I have been changing those references from `TaskInstanceKey` in Database calls with `ti.id`, example:\r\n\r\n   https://github.com/apache/airflow/blob/cca7ce0fd66b01293e21221d1dd9332312a4cb66/tests/models/test_cleartasks.py#L742\r\n\r\n3. **Airflow REST API calls which filters TIs**  \r\n    \r\n    Similar to (2) above, some of our REST API call filters TI records based on current primary key as below:\r\n     https://github.com/apache/airflow/blob/78ff0a99700125121b7f0647023503750f14a11b/airflow/api_connexion/endpoints/task_instance_endpoint.py#L536-L537\r\n\r\n     I am changing that to `session.scalars(select(TI).where(...))..one_or_none()` queries. For example, the above code is changed to the following in this PR.\r\n     https://github.com/apache/airflow/blob/3c61ba7157bce0dd9d7456670e7ba553be046d6e/airflow/api_connexion/endpoints/task_instance_endpoint.py#L536-L540', 'created_at': datetime.datetime(2024, 10, 27, 0, 9, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441350388, 'issue_id': 2603996124, 'author': 'ashb', 'body': 'I do think long-term/by release of 3.0 TaskInstanceHistory should also have a uuid.', 'created_at': datetime.datetime(2024, 10, 28, 11, 41, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441393201, 'issue_id': 2603996124, 'author': 'potiuk', 'body': '> Yeah, our use of `session.merge()` in Airflow is v. bad :(\r\n\r\nAgree. This is one of the reasons I wanted to avoid all those db-schema changes for the initial proposal of multi-team and proposed the team-id prefix, becaue I was afraid we are going to have similar ripple-effects that will result in rewriting big part of our database code. Which seem that it was a pretty justified worry.', 'created_at': datetime.datetime(2024, 10, 28, 12, 2, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441404737, 'issue_id': 2603996124, 'author': 'potiuk', 'body': ""BTW. One of the ways it could be helped - we **could** potentially generate the unique id by hashing the remaining fields - with appropriate hashing algorithm, we could have very low probability of collision (and maybe we could implement a mechanism to detect collisions and implement handling of those collision in similar ways they are handled in hash maps) - that would be another way how we could approach it (and there the merge code could be simpler and still use session.merge()\r\n\r\nBut this one also comes with it's own set of difficulties and collision handling is likely going to be complex. But I thought it's worth menioning it here as an option."", 'created_at': datetime.datetime(2024, 10, 28, 12, 7, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441409245, 'issue_id': 2603996124, 'author': 'potiuk', 'body': 'One problem with generating the unique hash with other fields, is that it will be even **more** difficult to add new fields, so probably getting rid of session.merge() everywhere and replacing it with our own way of merging objects and database entries by retrieving the unique id based on the unique fields from the DB before merging is likely a long-term better approach.', 'created_at': datetime.datetime(2024, 10, 28, 12, 9, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441487051, 'issue_id': 2603996124, 'author': 'kaxil', 'body': ""@potiuk Yeah, I considered hashing but it is bad for Databases for indexing and, as a result, querying since it won't have temporal properties apart from Collision Handling complexity. \r\n\r\nUUID v7 is explicitly designed to support distributed databases with high insert rates due to its temporal ordering.\r\n\r\n> BTW. One of the ways it could be helped - we **could** potentially generate the unique id by hashing the remaining fields - with appropriate hashing algorithm, we could have very low probability of collision (and maybe we could implement a mechanism to detect collisions and implement handling of those collision in similar ways they are handled in hash maps) - that would be another way how we could approach it (and there the merge code could be simpler and still use session.merge()\r\n> \r\n> But this one also comes with it's own set of difficulties and collision handling is likely going to be complex. But I thought it's worth menioning it here as an option."", 'created_at': datetime.datetime(2024, 10, 28, 12, 43, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441487328, 'issue_id': 2603996124, 'author': 'kaxil', 'body': '> Yeah, our use of `session.merge()` in Airflow is v. bad :(\r\n\r\nIndeed', 'created_at': datetime.datetime(2024, 10, 28, 12, 43, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441490772, 'issue_id': 2603996124, 'author': 'potiuk', 'body': '> UUID v7 is explicitly designed to support distributed databases with high insert rates due to its temporal ordering.\r\n\r\nYep. that settles it as well. We would have to implement our hashing in similar way (if possible at all)', 'created_at': datetime.datetime(2024, 10, 28, 12, 45, 14, tzinfo=datetime.timezone.utc)}]","ashb on (2024-10-22 10:06:10 UTC): A neat trick to avoid the need for pgcrypto extension: https://brandur.org/fragments/secure-bytes-without-pgcrypto

Though `uuid_send()` fn it uses doesn't exist on Pg10, it only comes from Pg11 onwards. However I do think it's reasonable to say 12 or 13 is the min required Pg version for Airflow 3 (Postgres only supports v13 onwards).

Oh, Pg 12 is officially all we support anyway, so I think using the `uuid_send()` function approach could work fine.

kaxil (Issue Creator) on (2024-10-27 00:09:23 UTC): ## Issues identified

After updating the primary key on the `TaskInstance` model to a UUID7 `id` field (from the composite primary key of `[""dag_id"", ""task_id"", ""run_id"", ""map_index""]`), I have now run into issues  in testing and session management:

1. **`session.merge()` Compatibility**  

    The `session.merge()` function operates strictly on primary keys as mentioned in [this SQLAlchemy docs](https://docs.sqlalchemy.org/en/20/orm/session_state_management.html#merging), which means it no longer recognizes the unique constraint on `[""dag_id"", ""task_id"", ""run_id"", ""map_index""]` to identify existing `TaskInstance` records. This leads to issues in cases where `session.merge()` was previously used to either update or insert TaskInstance records, as it now fails to locate the intended record by the unique constraint.

    Example:
 
     https://github.com/apache/airflow/blob/b2ecb6c9caacd2ca7a2c1519ca892b19b2bb35fb/tests/models/test_dag.py#L2013-L2026

    A possible workaround would be to follow `session.merge()` calls with `refresh_from_db()` to ensure the instance has the latest state:  
   ```python
   task_instance_1 = session.merge(TaskInstance(task=t_1, run_id=dagrun_1.run_id, state=ti_state_begin))
   task_instance_1.refresh_from_db()  # Update instance with current DB state
   ```


2. **`session.get()` usage with `TaskInstanceKey`**  

    Similarly, `session.get()` and other primary key-based session operations now rely solely on the `id` UUID rather than the composite fields. This results in errors when accessing or sorting records based on the previous composite fields, as `session.get()` cannot match identifiers to `TaskInstance` records by the unique constraint.

    **Current code in main**:

    https://github.com/apache/airflow/blob/78ff0a99700125121b7f0647023503750f14a11b/tests/models/test_cleartasks.py#L742

    I have been changing those references from `TaskInstanceKey` in Database calls with `ti.id`, example:

   https://github.com/apache/airflow/blob/cca7ce0fd66b01293e21221d1dd9332312a4cb66/tests/models/test_cleartasks.py#L742

3. **Airflow REST API calls which filters TIs**  
    
    Similar to (2) above, some of our REST API call filters TI records based on current primary key as below:
     https://github.com/apache/airflow/blob/78ff0a99700125121b7f0647023503750f14a11b/airflow/api_connexion/endpoints/task_instance_endpoint.py#L536-L537

     I am changing that to `session.scalars(select(TI).where(...))..one_or_none()` queries. For example, the above code is changed to the following in this PR.
     https://github.com/apache/airflow/blob/3c61ba7157bce0dd9d7456670e7ba553be046d6e/airflow/api_connexion/endpoints/task_instance_endpoint.py#L536-L540

ashb on (2024-10-28 11:41:46 UTC): I do think long-term/by release of 3.0 TaskInstanceHistory should also have a uuid.

potiuk on (2024-10-28 12:02:19 UTC): Agree. This is one of the reasons I wanted to avoid all those db-schema changes for the initial proposal of multi-team and proposed the team-id prefix, becaue I was afraid we are going to have similar ripple-effects that will result in rewriting big part of our database code. Which seem that it was a pretty justified worry.

potiuk on (2024-10-28 12:07:50 UTC): BTW. One of the ways it could be helped - we **could** potentially generate the unique id by hashing the remaining fields - with appropriate hashing algorithm, we could have very low probability of collision (and maybe we could implement a mechanism to detect collisions and implement handling of those collision in similar ways they are handled in hash maps) - that would be another way how we could approach it (and there the merge code could be simpler and still use session.merge()

But this one also comes with it's own set of difficulties and collision handling is likely going to be complex. But I thought it's worth menioning it here as an option.

potiuk on (2024-10-28 12:09:59 UTC): One problem with generating the unique hash with other fields, is that it will be even **more** difficult to add new fields, so probably getting rid of session.merge() everywhere and replacing it with our own way of merging objects and database entries by retrieving the unique id based on the unique fields from the DB before merging is likely a long-term better approach.

kaxil (Issue Creator) on (2024-10-28 12:43:28 UTC): @potiuk Yeah, I considered hashing but it is bad for Databases for indexing and, as a result, querying since it won't have temporal properties apart from Collision Handling complexity. 

UUID v7 is explicitly designed to support distributed databases with high insert rates due to its temporal ordering.

kaxil (Issue Creator) on (2024-10-28 12:43:36 UTC): Indeed

potiuk on (2024-10-28 12:45:14 UTC): Yep. that settles it as well. We would have to implement our hashing in similar way (if possible at all)

"
2603843322,pull_request,closed,,Implement basic backfill dry run,"Add simple dry run functionality.  Does not check whether these runs exist.  Just doing the basic thing first.  Sample console output

```
Performing dry run of backfill.
Printing params:
    - dag_id = example_bash_operator
    - from_date = 2021-01-01 00:00:00+00:00
    - to_date = 2021-02-01 00:00:00+00:00
    - max_active_runs = None
    - reverse = False
    - dag_run_conf = None
    - dry_run = True
Logical dates:
    - 2021-01-01 00:00:00+00:00
    - 2021-01-02 00:00:00+00:00
    - 2021-01-03 00:00:00+00:00
    - 2021-01-04 00:00:00+00:00
    - 2021-01-05 00:00:00+00:00
    - 2021-01-06 00:00:00+00:00
    - 2021-01-07 00:00:00+00:00
    - 2021-01-08 00:00:00+00:00
    - 2021-01-09 00:00:00+00:00
    - 2021-01-10 00:00:00+00:00
    - 2021-01-11 00:00:00+00:00
    - 2021-01-12 00:00:00+00:00
    - 2021-01-13 00:00:00+00:00
    - 2021-01-14 00:00:00+00:00
    - 2021-01-15 00:00:00+00:00
    - 2021-01-16 00:00:00+00:00
    - 2021-01-17 00:00:00+00:00
    - 2021-01-18 00:00:00+00:00
    - 2021-01-19 00:00:00+00:00
    - 2021-01-20 00:00:00+00:00
    - 2021-01-21 00:00:00+00:00
    - 2021-01-22 00:00:00+00:00
    - 2021-01-23 00:00:00+00:00
    - 2021-01-24 00:00:00+00:00
    - 2021-01-25 00:00:00+00:00
    - 2021-01-26 00:00:00+00:00
    - 2021-01-27 00:00:00+00:00
    - 2021-01-28 00:00:00+00:00
    - 2021-01-29 00:00:00+00:00
    - 2021-01-30 00:00:00+00:00
    - 2021-01-31 00:00:00+00:00
    - 2021-02-01 00:00:00+00:00
```

",dstandish,2024-10-21 23:03:29+00:00,[],2024-10-23 13:15:54+00:00,2024-10-23 13:15:51+00:00,https://github.com/apache/airflow/pull/43241,"[('area:CLI', '')]",[],
2603803964,pull_request,closed,,Keycloak Breeze integration,"Work is starting on multi-team Airflow, and this project has many dependencies on a auth manager that can support authn and authz and also support the changes to the auth manager api (upcoming). An option for this is Keycloak.

This PR adds a Breeze integartion for Keycloak which creates a container running keycloak, which uses the existing Postgres container as the DB and disables the requirements for ssl/https/certificates to use the Keycloak admin console (since this is only for development purposes not production).

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",o-nikolas,2024-10-21 22:37:38+00:00,[],2024-10-30 22:00:41+00:00,2024-10-30 22:00:39+00:00,https://github.com/apache/airflow/pull/43240,"[('area:dev-tools', '')]","[{'comment_id': 2432711271, 'issue_id': 2603803964, 'author': 'o-nikolas', 'body': '@potiuk Let me know what you think of this, before I take it out of Draft.', 'created_at': datetime.datetime(2024, 10, 23, 15, 55, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436187798, 'issue_id': 2603803964, 'author': 'potiuk', 'body': 'This looks great. I only have one comment about using same ""postgres"" service for keycloack and metadata-db. Those two should be separate postgres instances IMHO.', 'created_at': datetime.datetime(2024, 10, 24, 19, 31, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436190177, 'issue_id': 2603803964, 'author': 'potiuk', 'body': 'Also it does not yet work when I try to run it due to ""keyclok"" typo in constants :)', 'created_at': datetime.datetime(2024, 10, 24, 19, 32, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436280427, 'issue_id': 2603803964, 'author': 'o-nikolas', 'body': '> Also it does not yet work when I try to run it due to ""keyclok"" typo in constants :)\r\n\r\nUgh, let me fix :sweat_smile:', 'created_at': datetime.datetime(2024, 10, 24, 20, 28, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445315202, 'issue_id': 2603803964, 'author': 'o-nikolas', 'body': '@potiuk \r\n\r\nThis one is ready for review as well. Fixed the typo and added a check to ensure the keycloak integration is used in conjunction with the postgres backend.', 'created_at': datetime.datetime(2024, 10, 29, 20, 56, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445385601, 'issue_id': 2603803964, 'author': 'potiuk', 'body': 'Maybe also we should extract all other backend constants for consistency @o-nikolas ? It looks weird when only one POSTGRES is constant.', 'created_at': datetime.datetime(2024, 10, 29, 21, 42, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445485300, 'issue_id': 2603803964, 'author': 'o-nikolas', 'body': ""> Maybe also we should extract all other backend constants for consistency @o-nikolas ? It looks weird when only one POSTGRES is constant.\r\n\r\nFair enough, I didn't extract them because they'd only be used in place there, not imported elsewhere which also feel strange. But I don't feel strongly about one approach more than the other, so I can make the change to extract constants for all :+1:"", 'created_at': datetime.datetime(2024, 10, 29, 23, 7, 48, tzinfo=datetime.timezone.utc)}]","o-nikolas (Issue Creator) on (2024-10-23 15:55:09 UTC): @potiuk Let me know what you think of this, before I take it out of Draft.

potiuk on (2024-10-24 19:31:14 UTC): This looks great. I only have one comment about using same ""postgres"" service for keycloack and metadata-db. Those two should be separate postgres instances IMHO.

potiuk on (2024-10-24 19:32:41 UTC): Also it does not yet work when I try to run it due to ""keyclok"" typo in constants :)

o-nikolas (Issue Creator) on (2024-10-24 20:28:34 UTC): Ugh, let me fix :sweat_smile:

o-nikolas (Issue Creator) on (2024-10-29 20:56:31 UTC): @potiuk 

This one is ready for review as well. Fixed the typo and added a check to ensure the keycloak integration is used in conjunction with the postgres backend.

potiuk on (2024-10-29 21:42:48 UTC): Maybe also we should extract all other backend constants for consistency @o-nikolas ? It looks weird when only one POSTGRES is constant.

o-nikolas (Issue Creator) on (2024-10-29 23:07:48 UTC): Fair enough, I didn't extract them because they'd only be used in place there, not imported elsewhere which also feel strange. But I don't feel strongly about one approach more than the other, so I can make the change to extract constants for all :+1:

"
2603601544,pull_request,closed,,Do not fail the build if only trove-classifiers change (#43236),"Trove classifiers is a non-code package so generally spaeking we have no need to update it every time it is released, but it would be great if we could update it together with other build dependencies - and not fail the build when only trove classifiers change, but update trove-classifiers nevertheless when we run

pre-commit run --hook-stage manual update-build-dependencies --all-files

This is very similar to what we already do with UV.

This PR achieves that:

* in CI we set the env SKIP_TROVE_CLASSIFIERS_ONLY to true
* this one will check if the only change in pyproject.toml are trove-classifiers
* If so - it only prints warning and exits with success

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-21 20:33:02+00:00,[],2024-10-22 11:19:41+00:00,2024-10-22 11:19:40+00:00,https://github.com/apache/airflow/pull/43237,"[('area:dev-tools', '')]","[{'comment_id': 2427665398, 'issue_id': 2603601544, 'author': 'potiuk', 'body': 'Backport of #43236', 'created_at': datetime.datetime(2024, 10, 21, 20, 33, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2429008345, 'issue_id': 2603601544, 'author': 'potiuk', 'body': 'We have some kiota related tests failing ""importability"" - we need to cherry-pick another fix from main to fix it (on it).', 'created_at': datetime.datetime(2024, 10, 22, 11, 19, 37, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-21 20:33:57 UTC): Backport of #43236

potiuk (Issue Creator) on (2024-10-22 11:19:37 UTC): We have some kiota related tests failing ""importability"" - we need to cherry-pick another fix from main to fix it (on it).

"
2603567912,pull_request,closed,,Do not fail the build if only trove-classifiers change,"Trove classifiers is a non-code package so generally spaeking we have no need to update it every time it is released, but it would be great if we could update it together with other build dependencies - and not fail the build when only trove classifiers change, but update trove-classifiers nevertheless when we run

pre-commit run --hook-stage manual update-build-dependencies --all-files

This is very similar to what we already do with UV.

This PR achieves that:

* in CI we set the env SKIP_TROVE_CLASSIFIERS_ONLY to true
* this one will check if the only change in pyproject.toml are trove-classifiers
* If so - it only prints warning and exits with success

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-21 20:15:34+00:00,[],2024-10-21 20:31:44+00:00,2024-10-21 20:31:43+00:00,https://github.com/apache/airflow/pull/43236,"[('area:dev-tools', '')]","[{'comment_id': 2427661158, 'issue_id': 2603567912, 'author': 'potiuk', 'body': '> Would be good to back-port to v2-10-test as well\r\n\r\nOh absolutely. On it.', 'created_at': datetime.datetime(2024, 10, 21, 20, 31, 34, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-21 20:31:34 UTC): Oh absolutely. On it.

"
2603476828,pull_request,closed,,Temporarily limits WTForms to below 3.2.0 #43233,Back-port of #43233 to v2-10-test,jscheffl,2024-10-21 19:31:14+00:00,[],2024-10-24 07:25:00+00:00,2024-10-21 19:46:43+00:00,https://github.com/apache/airflow/pull/43234,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2603447406,pull_request,closed,,Temporarily limits WTForms to below 3.2.0,"WTForms are limited to 3.2.0 because of the error in tests. We technically do not need it directly as this is a dependency of Flask-WTF, but we need to specify it here to add the limitation The issue to track it is https://github.com/pallets-eco/flask-wtf/issues/608 Note. 3.2.0 has been broken because of imports https://github.com/pallets-eco/wtforms/issues/861 which was fixed in 3.2.1, but after import was fixed, the tests started to work with 3.2.1 when the issue 863 is fixed, we should likely leave the line below and specify !=3.2.0,!=3.2.1

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-21 19:17:21+00:00,[],2024-10-24 07:24:38+00:00,2024-10-21 19:19:17+00:00,https://github.com/apache/airflow/pull/43233,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2603444442,pull_request,closed,,Pin WTforms to be lower than 3.2.0 as 3.2.0 and 3.2.1 hotfix broke main,"Prevents problems with WTForms 3.2.0++

related: #43228
",jscheffl,2024-10-21 19:16:22+00:00,[],2024-10-21 19:19:10+00:00,2024-10-21 19:19:09+00:00,https://github.com/apache/airflow/pull/43232,[],"[{'comment_id': 2427527456, 'issue_id': 2603444442, 'author': 'potiuk', 'body': 'https://github.com/apache/airflow/pull/43233 is more complete :)', 'created_at': datetime.datetime(2024, 10, 21, 19, 18, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2427528246, 'issue_id': 2603444442, 'author': 'jscheffl', 'body': 'Close in favor of #43233', 'created_at': datetime.datetime(2024, 10, 21, 19, 19, 9, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-21 19:18:43 UTC): https://github.com/apache/airflow/pull/43233 is more complete :)

jscheffl (Issue Creator) on (2024-10-21 19:19:09 UTC): Close in favor of #43233

"
2603427914,pull_request,closed,,ISSUE-43043 | AIP-38 | Add more sort options to Dags List,"Add more sort options to Dags List `""dag_display_name"",""next_dagrun"", ""last_run_state"", ""last_run_start_date""`
closes: #43043

Updated UI:

https://github.com/user-attachments/assets/a75156b5-10ac-47bc-a9e1-50232d997a74





<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",shubhamraj-git,2024-10-21 19:08:01+00:00,[],2024-11-13 18:06:07+00:00,2024-11-13 18:06:06+00:00,https://github.com/apache/airflow/pull/43231,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2468553543, 'issue_id': 2603427914, 'author': 'bbovenzi', 'body': '<img width=""319"" alt=""Screenshot 2024-11-11 at 11 19 19\u202fAM"" src=""https://github.com/user-attachments/assets/f9d1d717-291c-4e96-9379-eded8453d8c0"">\r\n \r\n \r\nLet\'s make the width a little bigger and lgtm', 'created_at': datetime.datetime(2024, 11, 11, 16, 19, 41, tzinfo=datetime.timezone.utc)}]","bbovenzi on (2024-11-11 16:19:41 UTC): <img width=""319"" alt=""Screenshot 2024-11-11 at 11 19 19 AM"" src=""https://github.com/user-attachments/assets/f9d1d717-291c-4e96-9379-eded8453d8c0"">
 
 
Let's make the width a little bigger and lgtm

"
2603427654,pull_request,closed,,Update ``trove-classifiers`` to ``2024.10.21.16``,Back-port of #43229 to v2-10-test,jscheffl,2024-10-21 19:07:50+00:00,[],2024-10-21 19:28:20+00:00,2024-10-21 19:28:19+00:00,https://github.com/apache/airflow/pull/43230,[],[],
2603420249,pull_request,closed,,Fix dependency check to trove-classifiers... again,"Another round of... fix update dependencies.

Broken run: https://github.com/apache/airflow/actions/runs/11446734942/job/31846579090",jscheffl,2024-10-21 19:03:43+00:00,[],2024-10-21 19:05:33+00:00,2024-10-21 19:05:33+00:00,https://github.com/apache/airflow/pull/43229,[],[],
2603316294,pull_request,closed,,More correctly work around `uv sync` issue with python 3.10+ only dep,"Just having the python_version requirement doesn't seem to correctly make uv
""fork"" the resolver path (Charlie's words/terms), so we either need to specify
both module versions here. The other option that could work is putting this in
our pyproject.toml

```
[tool.uv]
environments = [""python_version >= '3.10'"", ""python_version < '3.10'""]
```

But having both versions specified keeps the fix localized into the provider
so I have chosen this approach.

This is likely why the `exclued-python-version` setting we already had wasn't working for `uv sync`.",ashb,2024-10-21 18:15:11+00:00,[],2024-10-28 13:53:17+00:00,2024-10-21 19:41:36+00:00,https://github.com/apache/airflow/pull/43227,"[('area:providers', ''), ('provider:cloudant', '')]","[{'comment_id': 2441654936, 'issue_id': 2603316294, 'author': 'charliermarsh', 'body': '@ashb -- This _should_ be fixed in the next uv release, I just tested it.', 'created_at': datetime.datetime(2024, 10, 28, 13, 53, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441655379, 'issue_id': 2603316294, 'author': 'charliermarsh', 'body': 'See: https://github.com/astral-sh/uv/pull/8628', 'created_at': datetime.datetime(2024, 10, 28, 13, 53, 15, tzinfo=datetime.timezone.utc)}]","charliermarsh on (2024-10-28 13:53:04 UTC): @ashb -- This _should_ be fixed in the next uv release, I just tested it.

charliermarsh on (2024-10-28 13:53:15 UTC): See: https://github.com/astral-sh/uv/pull/8628

"
2603216612,pull_request,closed,,"Revert ""Update cloudant versions to be py-version aware so `uv lock` …","…can work. (#43217)""

This reverts commit 892b2f18f1674a031dc5ed6995cba8daf152847a.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-21 17:27:07+00:00,[],2024-10-22 10:11:21+00:00,2024-10-22 10:11:21+00:00,https://github.com/apache/airflow/pull/43225,"[('area:providers', ''), ('provider:cloudant', '')]","[{'comment_id': 2428868722, 'issue_id': 2603216612, 'author': 'ashb', 'body': 'Working around a bug in UV. It ""shouldn\'t"" be needed, but it is, sadly (though this didn\'t quite work #43227 was the full fix and links to upstream\xa0bug.)', 'created_at': datetime.datetime(2024, 10, 22, 10, 11, 21, tzinfo=datetime.timezone.utc)}]","ashb on (2024-10-22 10:11:21 UTC): Working around a bug in UV. It ""shouldn't"" be needed, but it is, sadly (though this didn't quite work #43227 was the full fix and links to upstream bug.)

"
2602992130,pull_request,closed,,AIP-84 Get Pools,"related to: https://github.com/apache/airflow/issues/42370

Only the last commit is relevant.",pierrejeambrun,2024-10-21 15:54:08+00:00,['pierrejeambrun'],2024-10-22 14:34:04+00:00,2024-10-22 14:34:02+00:00,https://github.com/apache/airflow/pull/43223,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-84', 'Modern Rest API'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]",[],
2602914800,pull_request,closed,,Remove airflowinfra.multi_cluster_utils import,Hardcode cluster_id to the default Airflow 2 value because we are only running 1 cluster in house.,arbazmirza-lyft,2024-10-21 15:29:12+00:00,[],2024-10-21 15:30:25+00:00,2024-10-21 15:30:25+00:00,https://github.com/apache/airflow/pull/43222,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]","[{'comment_id': 2427016079, 'issue_id': 2602914800, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 21, 15, 29, 17, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-21 15:29:17 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

"
2602907779,pull_request,closed,,AIP-84 Get Pool,related to: https://github.com/apache/airflow/issues/42370,pierrejeambrun,2024-10-21 15:26:38+00:00,['pierrejeambrun'],2024-10-22 08:07:49+00:00,2024-10-22 08:07:47+00:00,https://github.com/apache/airflow/pull/43221,"[('AIP-84', 'Modern Rest API'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2428557608, 'issue_id': 2602907779, 'author': 'pierrejeambrun', 'body': 'Unrelated CI failure, merging.', 'created_at': datetime.datetime(2024, 10, 22, 8, 7, 42, tzinfo=datetime.timezone.utc)}]","pierrejeambrun (Issue Creator) on (2024-10-22 08:07:42 UTC): Unrelated CI failure, merging.

"
2602612344,pull_request,closed,,Update provider structure diagram in source code,Update new provider folder structure given the changes we did with task SDK,eladkal,2024-10-21 13:45:29+00:00,[],2024-10-21 17:12:56+00:00,2024-10-21 17:12:53+00:00,https://github.com/apache/airflow/pull/43220,"[('area:providers', '')]",[],
2602567296,pull_request,closed,,Asset timetable summary should display assets on which it's scheduled,"Currently, timetables expose `summary`:

```
        This is used to display the timetable in the web UI. A cron expression
        timetable, for example, can use this to display the expression. The
        default implementation returns the timetable's type name.
```

However, `AssetTriggeredTimetable`'s summary is not very useful: while different `DataIntervalTimetable` expose the data interval on which the timetable was created, `AssetTriggeredTimetable`'s summary does not display assets on which the DAG will be scheduled.

I think the potential contention might be the multiple condition naming: would appreciate comments on what would be the most clear name. ",mobuchowski,2024-10-21 13:29:22+00:00,[],2024-10-21 15:57:46+00:00,2024-10-21 15:57:46+00:00,https://github.com/apache/airflow/pull/43219,[],[],
2602499074,pull_request,closed,,Update cloudant versions to be py-version aware so `uv lock` can work.,"We already have this:

```yaml
excluded-python-versions:
  # ibmcloudant transitively brings in urllib3 2.x, but the snowflake provider has a dependency that pins
  # urllib3 to 1.x on Python 3.9; thus we exclude those Python versions from taking the update
  # to ibmcloudant.
  # See #21004, #41555, and https://github.com/snowflakedb/snowflake-connector-python/issues/2016
  - ""3.9""
```


However when uv is looking at requirements it doesn't/can't respect this field, so we have to make
the dependency aware of python version too.

This makes `uv lock` and `uv sync` both worth, which should be the required
step for switching uv to the local venv workflow.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",ashb,2024-10-21 13:05:21+00:00,[],2024-10-25 23:28:45+00:00,2024-10-21 13:42:49+00:00,https://github.com/apache/airflow/pull/43217,"[('area:providers', ''), ('provider:cloudant', '')]","[{'comment_id': 2426627911, 'issue_id': 2602499074, 'author': 'ashb', 'body': 'Relates to #43200', 'created_at': datetime.datetime(2024, 10, 21, 13, 6, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2426721890, 'issue_id': 2602499074, 'author': 'ashb', 'body': 'Just failing with the known WTForms issue. Merging', 'created_at': datetime.datetime(2024, 10, 21, 13, 41, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2426929617, 'issue_id': 2602499074, 'author': 'ashb', 'body': 'Can someone test if this lets `uv sync` work for them now.\r\n\r\nIf not then add  ` - \'ibmcloudant==0.7.0 ; python_version < ""3.10""\'`  and then `breeze static-checks -t update-providers-dependencies -a`', 'created_at': datetime.datetime(2024, 10, 21, 14, 56, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439039143, 'issue_id': 2602499074, 'author': 'perry2of5', 'body': '> Can someone test if this lets `uv sync` work for them now.\r\n> \r\n> If not then add ` - \'ibmcloudant==0.7.0 ; python_version < ""3.10""\'` and then `breeze static-checks -t update-providers-dependencies -a`\r\n\r\n""uv sync"" worked for me, but it creates a ""uv.lock"" file which isn\'t in version control and isn\'t in .gitignore. Possibly we want to add it to github based off this: https://docs.astral.sh/uv/guides/projects/#uvlock', 'created_at': datetime.datetime(2024, 10, 25, 23, 28, 43, tzinfo=datetime.timezone.utc)}]","ashb (Issue Creator) on (2024-10-21 13:06:55 UTC): Relates to #43200

ashb (Issue Creator) on (2024-10-21 13:41:29 UTC): Just failing with the known WTForms issue. Merging

ashb (Issue Creator) on (2024-10-21 14:56:28 UTC): Can someone test if this lets `uv sync` work for them now.

If not then add  ` - 'ibmcloudant==0.7.0 ; python_version < ""3.10""'`  and then `breeze static-checks -t update-providers-dependencies -a`

perry2of5 on (2024-10-25 23:28:43 UTC): ""uv sync"" worked for me, but it creates a ""uv.lock"" file which isn't in version control and isn't in .gitignore. Possibly we want to add it to github based off this: https://docs.astral.sh/uv/guides/projects/#uvlock

"
2602417912,pull_request,closed,,BugFix(Operators.rst): Update operators.rst on adding SQLExecuteQueryOperator,"closes: #41914
with cherry-pick from: @DilanJT
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-10-21 12:35:28+00:00,[],2024-10-21 18:20:09+00:00,2024-10-21 18:20:03+00:00,https://github.com/apache/airflow/pull/43216,"[('kind:documentation', '')]","[{'comment_id': 2427414130, 'issue_id': 2602417912, 'author': 'potiuk', 'body': 'Nice!', 'created_at': datetime.datetime(2024, 10, 21, 18, 20, 8, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-21 18:20:08 UTC): Nice!

"
2602343365,pull_request,closed,,[Edge] Add metrics export and reset state of Edge Worker after worker timeout,"# Description

This PR enables the Edgeworker with metrics output to get live date of the state of the worker on a Dashboard. The PR also enables the EdgeExecutor to check if the Worker is still connected. If not then the state is reseted to UNKNOWN. 

# Details about changes 

* Exports the following metrics:
  * edge_executor.sync.duration: measures the duration of the  sync call of the edge executor
  * edge_worker.heartbeat_count: Heartbeat counter whihc is increased every time the heatbeat was received
  * edge_worker.state: 0 -> shows worker is disconnected, 1 shows worker is connected. tag shows details nameing of the state.
  * edge_worker.jobs_active: shows number of active jobs on this worker
  * edge_worker.concurrency: shows the current concurrency value of the worker
  * edge_worker.num_queues: shows the number of queues and tags contains queue names
* If 5 times the heatbeat was not received the heatbeat the state is set to UNKNOW.
* If worker disconnected the gauge metrics are reseted.

# Background information about metrics

As the tags are ignored in the statsd exporting and open telemetry is not enabled by default I orientated me on the implementation of dag_processing.last_duration like (https://github.com/apache/airflow/blob/main/airflow/dag_processing/manager.py#L1173) So currently double export. Hope we can get delete this in the future.",AutomationDev85,2024-10-21 12:04:23+00:00,[],2024-10-24 11:34:43+00:00,2024-10-24 11:34:43+00:00,https://github.com/apache/airflow/pull/43215,"[('area:providers', ''), ('type:improvement', 'Changelog: Improvements'), ('AIP-69', 'Edge Executor'), ('provider:edge', 'Edge Executor / Worker (AIP-69)')]",[],
2602189523,pull_request,closed,,add ProcessingEngineRunFacet to OL DAG Start event,"This PR adds ProcessingEngineRunFacet to OL DAG Start event. The facet was already added to Task-level events, added this to have Airflow version information straight on DAG start.",mobuchowski,2024-10-21 11:06:48+00:00,[],2024-11-14 14:57:27+00:00,2024-11-14 14:57:27+00:00,https://github.com/apache/airflow/pull/43213,"[('area:providers', ''), ('provider:openlineage', 'AIP-53')]","[{'comment_id': 2476588680, 'issue_id': 2602189523, 'author': 'mobuchowski', 'body': 'Added those.', 'created_at': datetime.datetime(2024, 11, 14, 14, 57, 24, tzinfo=datetime.timezone.utc)}]","mobuchowski (Issue Creator) on (2024-11-14 14:57:24 UTC): Added those.

"
2602134426,pull_request,closed,,Remove accidental typo from CI docs,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-21 10:46:34+00:00,[],2024-10-21 10:48:09+00:00,2024-10-21 10:48:07+00:00,https://github.com/apache/airflow/pull/43212,"[('area:dev-tools', '')]",[],
2601723912,pull_request,closed,,Make sure all GitHub activity is archived,"While following a discussion at board@a.o I realized that not all GitHub activity of ours is archived - we use the commits@a.a.o to archive all the commits automatically, and this list is not supposed to be subscribed to in general as it is already far too busy for that, however we can also forward all issues, prs and discussions there, which will make us follow the requirement of the ASF that all the activity in the project should be archived in foundation-managed archives.

It also has the nice benefit that there is single place (ponymail commits@a.a.o list) that has great search capabilities and is really nice as a single place where we will be able to find all the activity - regardles if they were in commits, prs, issues or discussions.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-21 08:10:23+00:00,[],2024-10-21 09:56:48+00:00,2024-10-21 09:56:46+00:00,https://github.com/apache/airflow/pull/43208,"[('area:dev-tools', '')]",[],
2601409246,pull_request,closed,,Remove unnecessary return value from `jenkins_request_with_headers`,"closes: https://github.com/apache/airflow/pull/40233
with cherry-pick from: @yangyulely 
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-10-21 05:49:52+00:00,[],2024-10-22 05:39:28+00:00,2024-10-22 05:39:28+00:00,https://github.com/apache/airflow/pull/43207,"[('area:providers', ''), ('provider:jenkins', '')]","[{'comment_id': 2426412838, 'issue_id': 2601409246, 'author': 'kaxil', 'body': '@romsharon98 Could you update the PR title please? ""Fix return issue"" doesn\'t say much about the PR', 'created_at': datetime.datetime(2024, 10, 21, 11, 31, 17, tzinfo=datetime.timezone.utc)}]","kaxil on (2024-10-21 11:31:17 UTC): @romsharon98 Could you update the PR title please? ""Fix return issue"" doesn't say much about the PR

"
2601345338,pull_request,closed,,fix mypy failure(provider) in SqlSensor,"when I run `pre-commit run --all-files`, I get the following mypy failure:

```
providers/src/airflow/providers/common/sql/sensors/sql.py:110: error: ""None""
not callable  [misc]
            condition = self.selector(records[0])
```

This PR fixes it.",rawwar,2024-10-21 05:08:43+00:00,[],2024-10-26 11:12:21+00:00,2024-10-26 11:12:21+00:00,https://github.com/apache/airflow/pull/43206,"[('area:providers', ''), ('provider:common-sql', '')]",[],
2600875953,pull_request,closed,,Complete automation of version replacement pre-commit for pip and uv,"The scripts to update pip and uv version were not complete - they did not replace a few of our scripts and documentation. This was especially troublesome for doc replacement, because updating versions manually led to misalignments of tables in markdown.

Lack of completeness of the upgrade caused #43197 and #43135 manual PRs to bump all references.

Also an earlier upgrade caused the markdown table to be broken - with UV row table offset by 1.

This PR fixes it:

* all the scripts and docs are updated now
* when markdown is updated, the table structure is not broken

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-20 21:11:32+00:00,[],2024-11-04 08:34:41+00:00,2024-10-21 09:55:32+00:00,https://github.com/apache/airflow/pull/43205,"[('area:dev-tools', '')]","[{'comment_id': 2425240890, 'issue_id': 2600875953, 'author': 'kaxil', 'body': 'Cool', 'created_at': datetime.datetime(2024, 10, 20, 21, 50, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2426193185, 'issue_id': 2600875953, 'author': 'potiuk', 'body': 'The errrors are due to the WTforms issue being fixed in https://github.com/pallets-eco/wtforms/pull/862', 'created_at': datetime.datetime(2024, 10, 21, 9, 55, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2426193368, 'issue_id': 2600875953, 'author': 'potiuk', 'body': 'Merging', 'created_at': datetime.datetime(2024, 10, 21, 9, 55, 28, tzinfo=datetime.timezone.utc)}]","kaxil on (2024-10-20 21:50:21 UTC): Cool

potiuk (Issue Creator) on (2024-10-21 09:55:24 UTC): The errrors are due to the WTforms issue being fixed in https://github.com/pallets-eco/wtforms/pull/862

potiuk (Issue Creator) on (2024-10-21 09:55:28 UTC): Merging

"
2600606598,pull_request,closed,,AIP-84: Add UI batch recent dag runs endpoint,"closes: #42933
Same filter with public [`get_dags`](https://github.com/apache/airflow/blob/57500b6608fcbd3bfaa1ddbe6364899ac3f8c251/airflow/api_fastapi/core_api/routes/public/dags.py#L60-L68) endpoint, but remove order_by params.

",jason810496,2024-10-20 16:04:44+00:00,[],2024-10-25 10:08:43+00:00,2024-10-25 10:08:43+00:00,https://github.com/apache/airflow/pull/43204,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-84', 'Modern Rest API')]","[{'comment_id': 2427040183, 'issue_id': 2600606598, 'author': 'jason810496', 'body': '### Refactor:\r\nUsed `DAGRunResponse`, `DAGCollectionResponse`, and `DAGResponse` from the public serializers for the UI batch of recent runs. However, the subclasses that inherit from the public serializers should also inherit from `OptionalModel`, as most of the fields should be optional.', 'created_at': datetime.datetime(2024, 10, 21, 15, 38, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2428775760, 'issue_id': 2600606598, 'author': 'jason810496', 'body': ""I think for this UI, the endpoint doesn't need to respond with so much information (compared with `/last_dagruns` in `views.py`). In `/last_dagruns`, it only needs `dag_id`, `start_date`, `end_date`, `state`, `execution_date`, `data_interval_start`, and `data_interval_end`.\r\n\r\nInstead of marking the fields that aren't needed in this endpoint as optional in `DAGRunResponse`, I think inheriting from `OptionalModel` to mark the entire `RecentDAGRunResponse` would be clearer."", 'created_at': datetime.datetime(2024, 10, 22, 9, 33, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2429239922, 'issue_id': 2600606598, 'author': 'pierrejeambrun', 'body': ""I think we can just return the whole information and don't bother filtering things out. For the front-end it is easier because you only manipulate 1 type for the returned DAG, DagRun, etc... You do not have different representation depending on the endpoint (private/public), which makes things easier to work with (fill/cast etc..).\r\n\r\n\r\n> Note: Most likely not needed here, but if you want to return a subpart of a model, the pydantic documentation explains it well, you can jus use the response_model, with a minimal model having only the fields that you need. https://fastapi.tiangolo.com/tutorial/response-model/#response_model-parameter. We would most likely not use a custom all optional `OptionalModel` for that."", 'created_at': datetime.datetime(2024, 10, 22, 13, 7, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2431038908, 'issue_id': 2600606598, 'author': 'jason810496', 'body': '**Resolved:**\r\n\r\nMade this UI endpoint more consistent with the public endpoint by removing `OptionalModel` and using `DAGRunResponse` directly from the public endpoint instead.', 'created_at': datetime.datetime(2024, 10, 23, 6, 33, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432686794, 'issue_id': 2600606598, 'author': 'pierrejeambrun', 'body': '@jason810496 Nice, I just added a small commit on top to make a few adjustment, let me know what you think, I believe we can merge then.', 'created_at': datetime.datetime(2024, 10, 23, 15, 45, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2434048053, 'issue_id': 2600606598, 'author': 'jason810496', 'body': 'Hi @pierrejeambrun, the changes look good to me, but I have another question:\r\n\r\nWhen should I utilize a parameter class (the classes declared in `common/parameters.py` with `to_orm` and `depends` methods) instead of adding query parameters directly (like `dag_runs_limit: int = 10` in this case)?\r\n\r\nFor example, in the Event Log endpoints, the query should leverage `paginated_select`, but the `paginated_select` function depends on a parameter class rather than query parameters. In this case, should I declare all filter classes in `common/parameters.py`, or would it be better to add a `FilterParam` with `dynamic_depends`, similar to `SortParam`, that could be used across all endpoints?', 'created_at': datetime.datetime(2024, 10, 24, 1, 43, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2434982295, 'issue_id': 2600606598, 'author': 'pierrejeambrun', 'body': '>When should I utilize a parameter class (the classes declared in common/parameters.py with to_orm and depends methods) instead of adding query parameters directly (like dag_runs_limit: int = 10 in this case)?\r\nFor example, in the Event Log endpoints, the query should leverage paginated_select, but the paginated_select function depends on a parameter class rather than query parameters. In this case, should I declare all filter classes in common/parameters.py, or would it be better to add a FilterParam with dynamic_depends, similar to SortParam, that could be used across all endpoints?\r\n\r\n\r\nThe idea is if the parameter (query or path) is meant to be re-used in other endpoints and implement a common db operation (filtering, sorting, matching, anything), then it should go into `parameters` with our common parameters.\r\n\r\nIf like here it is a very specific one, in terms of parameters (a secondary limit index operating on nested ressources) in terms of naming ""dag_runs_limit"", and in terms of implementation (`.where(recent_runs_subquery.c.rank <= dag_runs_limit)` which is really specific to the subquery), then it\'s ok to leave it in the router and not bother creating a reusable \'parameters\' out of if.', 'created_at': datetime.datetime(2024, 10, 24, 11, 10, 35, tzinfo=datetime.timezone.utc)}]","jason810496 (Issue Creator) on (2024-10-21 15:38:25 UTC): ### Refactor:
Used `DAGRunResponse`, `DAGCollectionResponse`, and `DAGResponse` from the public serializers for the UI batch of recent runs. However, the subclasses that inherit from the public serializers should also inherit from `OptionalModel`, as most of the fields should be optional.

jason810496 (Issue Creator) on (2024-10-22 09:33:35 UTC): I think for this UI, the endpoint doesn't need to respond with so much information (compared with `/last_dagruns` in `views.py`). In `/last_dagruns`, it only needs `dag_id`, `start_date`, `end_date`, `state`, `execution_date`, `data_interval_start`, and `data_interval_end`.

Instead of marking the fields that aren't needed in this endpoint as optional in `DAGRunResponse`, I think inheriting from `OptionalModel` to mark the entire `RecentDAGRunResponse` would be clearer.

pierrejeambrun on (2024-10-22 13:07:35 UTC): I think we can just return the whole information and don't bother filtering things out. For the front-end it is easier because you only manipulate 1 type for the returned DAG, DagRun, etc... You do not have different representation depending on the endpoint (private/public), which makes things easier to work with (fill/cast etc..).

jason810496 (Issue Creator) on (2024-10-23 06:33:17 UTC): **Resolved:**

Made this UI endpoint more consistent with the public endpoint by removing `OptionalModel` and using `DAGRunResponse` directly from the public endpoint instead.

pierrejeambrun on (2024-10-23 15:45:39 UTC): @jason810496 Nice, I just added a small commit on top to make a few adjustment, let me know what you think, I believe we can merge then.

jason810496 (Issue Creator) on (2024-10-24 01:43:37 UTC): Hi @pierrejeambrun, the changes look good to me, but I have another question:

When should I utilize a parameter class (the classes declared in `common/parameters.py` with `to_orm` and `depends` methods) instead of adding query parameters directly (like `dag_runs_limit: int = 10` in this case)?

For example, in the Event Log endpoints, the query should leverage `paginated_select`, but the `paginated_select` function depends on a parameter class rather than query parameters. In this case, should I declare all filter classes in `common/parameters.py`, or would it be better to add a `FilterParam` with `dynamic_depends`, similar to `SortParam`, that could be used across all endpoints?

pierrejeambrun on (2024-10-24 11:10:35 UTC): For example, in the Event Log endpoints, the query should leverage paginated_select, but the paginated_select function depends on a parameter class rather than query parameters. In this case, should I declare all filter classes in common/parameters.py, or would it be better to add a FilterParam with dynamic_depends, similar to SortParam, that could be used across all endpoints?


The idea is if the parameter (query or path) is meant to be re-used in other endpoints and implement a common db operation (filtering, sorting, matching, anything), then it should go into `parameters` with our common parameters.

If like here it is a very specific one, in terms of parameters (a secondary limit index operating on nested ressources) in terms of naming ""dag_runs_limit"", and in terms of implementation (`.where(recent_runs_subquery.c.rank <= dag_runs_limit)` which is really specific to the subquery), then it's ok to leave it in the router and not bother creating a reusable 'parameters' out of if.

"
2600431469,pull_request,closed,,Add XCom support for both last log line and all logs and Host DNS mapping support to Docker Swarm operator,"Docker Swarm Operator support containter log output to xcom using the do_xcom_push argument (same as the docker operator).  If you also set xcom_all to true, then the entire containter log output is sent to xcom.  If not, only the last line is sent to xcom.

Host DNS mapping was also added to support name to ip dns mapping internal to the container using the hosts argument.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",spoutin,2024-10-20 12:51:02+00:00,[],2024-12-19 00:16:15+00:00,2024-12-19 00:16:15+00:00,https://github.com/apache/airflow/pull/43202,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:providers', ''), ('provider:docker', '')]","[{'comment_id': 2445405252, 'issue_id': 2600431469, 'author': 'potiuk', 'body': 'Tests failing', 'created_at': datetime.datetime(2024, 10, 29, 21, 58, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2542578853, 'issue_id': 2600431469, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 12, 14, 0, 16, 9, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-29 21:58:18 UTC): Tests failing

github-actions[bot] on (2024-12-14 00:16:09 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2600400482,pull_request,closed,,remove PR #41531 but kept log drivers for Docker Swarm operator,"Due to issues with PR #41531 breaking the docker swarm operator a portion of the functionality was removed (copy files to xcom output).

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",spoutin,2024-10-20 12:10:02+00:00,[],2024-10-20 12:15:15+00:00,2024-10-20 12:15:15+00:00,https://github.com/apache/airflow/pull/43201,"[('area:providers', ''), ('provider:docker', '')]",[],
2600078283,pull_request,closed,,Docs: Typo Fix,"Corrected ""customising"" to ""customizing"" in [README.md].

This pull request addresses a minor typo found in repository. The typo has been corrected to improve clarity and maintain the quality of the documentation.

This change is purely cosmetic and does not affect functionality.

",Dnyanu76,2024-10-20 06:43:46+00:00,[],2024-10-20 16:51:02+00:00,2024-10-20 16:50:59+00:00,https://github.com/apache/airflow/pull/43199,[],"[{'comment_id': 2424659185, 'issue_id': 2600078283, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 20, 6, 43, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2425115389, 'issue_id': 2600078283, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 20, 16, 51, 1, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-20 06:43:50 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-10-20 16:51:01 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2599693738,pull_request,closed,,WIP: Enable Docs publishing CI step,"Same as https://github.com/apache/airflow/pull/43196 (to address https://github.com/apache/airflow/issues/41931) but trying to run it from a branch in the repo instead of a fork to figure out how much space is available. 

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-19 22:58:05+00:00,[],2024-10-30 12:19:14+00:00,2024-10-30 12:19:11+00:00,https://github.com/apache/airflow/pull/43198,"[('area:dev-tools', '')]","[{'comment_id': 2446948907, 'issue_id': 2599693738, 'author': 'kaxil', 'body': 'closed by https://github.com/apache/airflow/pull/43509', 'created_at': datetime.datetime(2024, 10, 30, 12, 19, 11, tzinfo=datetime.timezone.utc)}]","kaxil (Issue Creator) on (2024-10-30 12:19:11 UTC): closed by https://github.com/apache/airflow/pull/43509

"
2599663277,pull_request,closed,,Bump ``pip`` to ``24.2``,"pip 24.2 was released in July, this PR upgrades our version of pip to it.

https://pypi.org/project/pip/24.2/

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-19 22:27:23+00:00,[],2024-10-20 21:12:58+00:00,2024-10-20 17:42:34+00:00,https://github.com/apache/airflow/pull/43197,"[('area:dev-tools', '')]","[{'comment_id': 2425225692, 'issue_id': 2599663277, 'author': 'potiuk', 'body': 'I updated the ""update-installers"" pre-commit to handle all the places of uv and pip - including all scripts and docs modified in here and #43135', 'created_at': datetime.datetime(2024, 10, 20, 21, 12, 57, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-20 21:12:57 UTC): I updated the ""update-installers"" pre-commit to handle all the places of uv and pip - including all scripts and docs modified in here and #43135

"
2599636579,pull_request,closed,,Enable Docs publishing CI step,"closes https://github.com/apache/airflow/issues/41931

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-19 21:45:42+00:00,[],2024-10-30 12:17:52+00:00,2024-10-30 12:17:48+00:00,https://github.com/apache/airflow/pull/43196,"[('area:dev-tools', '')]","[{'comment_id': 2446946029, 'issue_id': 2599636579, 'author': 'kaxil', 'body': 'closed by https://github.com/apache/airflow/pull/43509', 'created_at': datetime.datetime(2024, 10, 30, 12, 17, 43, tzinfo=datetime.timezone.utc)}]","kaxil (Issue Creator) on (2024-10-30 12:17:43 UTC): closed by https://github.com/apache/airflow/pull/43509

"
2599628458,pull_request,closed,,Fix outdated CloudRunExecuteJobOperator docs,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---

Fixes some issues with the CloudRunExecuteJobOperator.
- The job parameter does not exist for this operator.
- The timout parameter is actually called timeout_seconds.
- Some minor language issues.

",p13rr0m,2024-10-19 21:38:32+00:00,[],2024-10-20 17:37:45+00:00,2024-10-20 17:37:41+00:00,https://github.com/apache/airflow/pull/43195,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2424223599, 'issue_id': 2599628458, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 19, 21, 38, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2425146098, 'issue_id': 2599628458, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 20, 17, 37, 43, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-19 21:38:36 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-10-20 17:37:43 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2599602246,pull_request,closed,,"Update trove-classifiers in v2-10 test, backport PR #43021",Fix dependencies on v2-10-test branch,jscheffl,2024-10-19 21:08:18+00:00,[],2024-10-23 08:58:51+00:00,2024-10-20 07:41:17+00:00,https://github.com/apache/airflow/pull/43194,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]","[{'comment_id': 2424702027, 'issue_id': 2599602246, 'author': 'jscheffl', 'body': 'More fixes needed, but current PR fixes some parts, will follow-up with another PR...', 'created_at': datetime.datetime(2024, 10, 20, 7, 41, 13, tzinfo=datetime.timezone.utc)}]","jscheffl (Issue Creator) on (2024-10-20 07:41:13 UTC): More fixes needed, but current PR fixes some parts, will follow-up with another PR...

"
2599295018,pull_request,closed,,Consider both commit authors and PR authors in status of testing issue,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

For the status of testing issue like this one: https://github.com/apache/airflow/issues/41956, the cherry pick owner was only tagged in the testing issue but the cherry pick author can be different from the commit author. We should add and tag the commit authors too.

Output with the change:
```
We are kindly requesting that contributors to [Apache Airflow RC 2.10.1rc1](https://pypi.org/project/apache-airflow/2.10.1rc1/) help test the RC.

Please let us know by commenting if the issue is addressed in the latest RC.

- [ ] [Handle Example dags case when checking for missing files (#41856) (#41874)](https://github.com/apache/airflow/pull/41874): @utkarsharma2
     Linked issues:
     - [DAGs are not marked as stale if the AIRFLOW__CORE__DAGS_FOLDER changes (#41432)](https://github.com/apache/airflow/issues/41432)
- [ ] [Bump webpack from 5.76.0 to 5.94.0 in /airflow/www (#41864) (#41879)](https://github.com/apache/airflow/pull/41879): @potiuk
- [ ] [Adding tojson filter to example_inlet_event_extra example dag (#41873) (#41890)](https://github.com/apache/airflow/pull/41890): @potiuk @amoghrajesh
- [ ] [Make Scarf usage reporting in major+minor versions and counters in buckets (#41898) (#41900)](https://github.com/apache/airflow/pull/41900): @jscheffl
- [ ] [Add backcompat check for executors that don't inherit BaseExecutor (#… (#41927)](https://github.com/apache/airflow/pull/41927): @potiuk @dstandish
- [ ] [Protect against None components of universal pathlib xcom backend (#4… (#41938)](https://github.com/apache/airflow/pull/41938): @potiuk
     Linked issues:
     - [Universal-pathlib 0.2.3 seems to break compatibility with 0.2.2 (at least breaks mypy checks). (#41723)](https://github.com/apache/airflow/issues/41723)
- [ ] [Lower down universal-pathlib minimum to 0.2.2 (#41939) (#41943)](https://github.com/apache/airflow/pull/41943): @potiuk


Thanks to all who contributed to the release (probably not a complete list!):
@jscheffl @dependabot[bot] @potiuk @dstandish @utkarsharma2 @amoghrajesh
```

closes: #41969 

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",amoghrajesh,2024-10-19 15:28:34+00:00,[],2024-10-20 18:21:05+00:00,2024-10-20 18:21:05+00:00,https://github.com/apache/airflow/pull/43192,"[('area:dev-tools', '')]",[],
2599087962,pull_request,closed,,[Backport] BashOperator: Execute templated bash script as file,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Backport of #42783 to Airflow 2.

When the BashOperator fails to write the rendered Jinja into a new file, it warns the user to add ""write"" and ""execute"" permissions in the working directory before Airflow 3; and fallback to the 2.10.2 behavior: executing the content of the bash script as inline command.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Joffreybvn,2024-10-19 11:52:37+00:00,[],2024-10-24 08:54:45+00:00,2024-10-24 00:21:25+00:00,https://github.com/apache/airflow/pull/43191,"[('kind:documentation', ''), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:core-operators', 'Operators, Sensors and hooks within Core Airflow')]",[],
2598954489,pull_request,closed,,add min version to types-deprecated,related to #42989,rawwar,2024-10-19 09:38:42+00:00,[],2024-10-19 09:56:19+00:00,2024-10-19 09:56:19+00:00,https://github.com/apache/airflow/pull/43190,[],[],
2598868422,pull_request,closed,,add min version to virtualenv,related to #42989,rawwar,2024-10-19 07:49:59+00:00,[],2024-10-24 00:17:25+00:00,2024-10-24 00:17:25+00:00,https://github.com/apache/airflow/pull/43189,[],[],
2598851472,pull_request,closed,,"Add filter, sorting and pagination changes as dependency for API.","The API calls were not made on changing filters, sort and pagination since only changes to search and paused were declared as dependency to the API call. This PR adds all other parameters.

Ideally, I think changing from last dag run state from running to success and then changing it back to running should trigger another API call to filter by running so that users always see fresh data. There is no refresh button in the UI like legacy UI so either a refresh button should be added or each change should trigger an API call. This seems to be due to staleTime parameter added to the API call options.",tirkarthi,2024-10-19 07:29:33+00:00,[],2024-10-22 18:19:43+00:00,2024-10-22 18:19:43+00:00,https://github.com/apache/airflow/pull/43188,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2423654579, 'issue_id': 2598851472, 'author': 'tirkarthi', 'body': 'Changes were added in #42896. cc  @luyangliuable', 'created_at': datetime.datetime(2024, 10, 19, 7, 31, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2423775426, 'issue_id': 2598851472, 'author': 'tirkarthi', 'body': 'I tried to test this with below patch. For some reason the click is triggered and DagsFilter is setting the searchParams but the subsequent re-render still has empty SearchParams thus making the API call without the filter.\r\n\r\nhttps://testing-library.com/docs/user-event/intro/\r\n\r\n```patch\r\ndiff --git a/airflow/ui/src/App.test.tsx b/airflow/ui/src/App.test.tsx\r\nindex 38b90d1c49..75b06c9b4e 100644\r\n--- a/airflow/ui/src/App.test.tsx\r\n+++ b/airflow/ui/src/App.test.tsx\r\n@@ -17,7 +17,8 @@\r\n  * under the License.\r\n  */\r\n import type { QueryObserverSuccessResult } from ""@tanstack/react-query"";\r\n-import { render } from ""@testing-library/react"";\r\n+import { render, waitFor, fireEvent } from ""@testing-library/react"";\r\n+import { userEvent } from ""@testing-library/user-event"";\r\n import { afterEach, beforeEach, describe, it, vi } from ""vitest"";\r\n \r\n import * as openapiQueriesModule from ""openapi/queries"";\r\n@@ -121,4 +122,21 @@ describe(""App"", () => {\r\n   it(""App component should render"", () => {\r\n     render(<App />, { wrapper: Wrapper });\r\n   });\r\n+\r\n+  it(""App component should render DAGs page"", async () => {\r\n+    const { getByText, getByRole, queryByText } = render(<App />, {\r\n+      wrapper: Wrapper,\r\n+    });\r\n+    const user = userEvent.setup();\r\n+\r\n+    expect(queryByText(""Running"")).not.toBeInTheDocument();\r\n+    expect(getByText(""DAGs"")).toBeInTheDocument();\r\n+\r\n+    await userEvent.click(getByText(""DAGs""));\r\n+\r\n+    expect(getByText(""Running"")).toBeInTheDocument();\r\n+    await user.click(getByRole(""button"", { name: ""Running"" }));\r\n+\r\n+    console.log(openapiQueriesModule.useDagServiceGetDags.mock.calls);\r\n+  });\r\n });\r\ndiff --git a/airflow/ui/src/pages/DagsList/DagsFilters.tsx b/airflow/ui/src/pages/DagsList/DagsFilters.tsx\r\nindex 3d507ace36..838862c32f 100644\r\n--- a/airflow/ui/src/pages/DagsList/DagsFilters.tsx\r\n+++ b/airflow/ui/src/pages/DagsList/DagsFilters.tsx\r\n@@ -66,6 +66,7 @@ export const DagsFilters = () => {\r\n   const handleStateChange: React.MouseEventHandler<HTMLButtonElement> =\r\n     useCallback(\r\n       ({ currentTarget: { value } }) => {\r\n+        console.log(""on click "", value);\r\n         if (value === ""all"") {\r\n           searchParams.delete(LAST_DAG_RUN_STATE_PARAM);\r\n         } else {\r\n@@ -76,6 +77,11 @@ export const DagsFilters = () => {\r\n           pagination: { ...pagination, pageIndex: 0 },\r\n           sorting,\r\n         });\r\n+        console.log(""on click after "", value);\r\n+        console.log(\r\n+          ""on click confirm "",\r\n+          searchParams.get(LAST_DAG_RUN_STATE_PARAM),\r\n+        );\r\n       },\r\n       [pagination, searchParams, setSearchParams, setTableURLState, sorting],\r\n     );\r\ndiff --git a/airflow/ui/src/pages/DagsList/DagsList.tsx b/airflow/ui/src/pages/DagsList/DagsList.tsx\r\nindex ad1b08fe87..5d5bbfe0dd 100644\r\n--- a/airflow/ui/src/pages/DagsList/DagsList.tsx\r\n+++ b/airflow/ui/src/pages/DagsList/DagsList.tsx\r\n@@ -121,6 +121,7 @@ export const DagsList = () => {\r\n   const [searchParams, setSearchParams] = useSearchParams();\r\n   const [display, setDisplay] = useState<""card"" | ""table"">(""card"");\r\n \r\n+  console.log(""search params"", searchParams);\r\n   const showPaused = searchParams.get(PAUSED_PARAM);\r\n   const lastDagRunState = searchParams.get(\r\n     LAST_DAG_RUN_STATE_PARAM,\r\n@@ -152,6 +153,8 @@ export const DagsList = () => {\r\n     setDagDisplayNamePattern(value);\r\n   };\r\n \r\n+  console.log(""last dag run state render"", lastDagRunState, searchParams);\r\n+\r\n   const { data, error, isFetching, isLoading } = useDagServiceGetDags(\r\n     {\r\n       dagDisplayNamePattern: Boolean(dagDisplayNamePattern)\r\n\r\n```', 'created_at': datetime.datetime(2024, 10, 19, 11, 32, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2423838086, 'issue_id': 2598851472, 'author': 'bbovenzi', 'body': ""Good catch. \r\n\r\nWe should probably move those query settings to be default for all our queries instead of just for getDags.\r\nWe just haven't added autorefetch yet which perhaps we should do and include the refetch function from useQuery\r\n\r\nFor your failing test, we probably need to mock the params themselves. https://stackoverflow.com/questions/71415745/mock-usesearchparams-react-testing-library"", 'created_at': datetime.datetime(2024, 10, 19, 13, 5, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2426755362, 'issue_id': 2598851472, 'author': 'tirkarthi', 'body': 'Thanks @bbovenzi for the link. I will try to take the test in another PR to unblock this fix since I might need sometime to fully process the testing and mocking flow to test this properly.', 'created_at': datetime.datetime(2024, 10, 21, 13, 54, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2429378346, 'issue_id': 2598851472, 'author': 'tirkarthi', 'body': 'Rebased with latest main branch. CI is green now.', 'created_at': datetime.datetime(2024, 10, 22, 14, 2, 7, tzinfo=datetime.timezone.utc)}]","tirkarthi (Issue Creator) on (2024-10-19 07:31:08 UTC): Changes were added in #42896. cc  @luyangliuable

tirkarthi (Issue Creator) on (2024-10-19 11:32:31 UTC): I tried to test this with below patch. For some reason the click is triggered and DagsFilter is setting the searchParams but the subsequent re-render still has empty SearchParams thus making the API call without the filter.

https://testing-library.com/docs/user-event/intro/

```patch
diff --git a/airflow/ui/src/App.test.tsx b/airflow/ui/src/App.test.tsx
index 38b90d1c49..75b06c9b4e 100644
--- a/airflow/ui/src/App.test.tsx
+++ b/airflow/ui/src/App.test.tsx
@@ -17,7 +17,8 @@
  * under the License.
  */
 import type { QueryObserverSuccessResult } from ""@tanstack/react-query"";
-import { render } from ""@testing-library/react"";
+import { render, waitFor, fireEvent } from ""@testing-library/react"";
+import { userEvent } from ""@testing-library/user-event"";
 import { afterEach, beforeEach, describe, it, vi } from ""vitest"";
 
 import * as openapiQueriesModule from ""openapi/queries"";
@@ -121,4 +122,21 @@ describe(""App"", () => {
   it(""App component should render"", () => {
     render(<App />, { wrapper: Wrapper });
   });
+
+  it(""App component should render DAGs page"", async () => {
+    const { getByText, getByRole, queryByText } = render(<App />, {
+      wrapper: Wrapper,
+    });
+    const user = userEvent.setup();
+
+    expect(queryByText(""Running"")).not.toBeInTheDocument();
+    expect(getByText(""DAGs"")).toBeInTheDocument();
+
+    await userEvent.click(getByText(""DAGs""));
+
+    expect(getByText(""Running"")).toBeInTheDocument();
+    await user.click(getByRole(""button"", { name: ""Running"" }));
+
+    console.log(openapiQueriesModule.useDagServiceGetDags.mock.calls);
+  });
 });
diff --git a/airflow/ui/src/pages/DagsList/DagsFilters.tsx b/airflow/ui/src/pages/DagsList/DagsFilters.tsx
index 3d507ace36..838862c32f 100644
--- a/airflow/ui/src/pages/DagsList/DagsFilters.tsx
+++ b/airflow/ui/src/pages/DagsList/DagsFilters.tsx
@@ -66,6 +66,7 @@ export const DagsFilters = () => {
   const handleStateChange: React.MouseEventHandler<HTMLButtonElement> =
     useCallback(
       ({ currentTarget: { value } }) => {
+        console.log(""on click "", value);
         if (value === ""all"") {
           searchParams.delete(LAST_DAG_RUN_STATE_PARAM);
         } else {
@@ -76,6 +77,11 @@ export const DagsFilters = () => {
           pagination: { ...pagination, pageIndex: 0 },
           sorting,
         });
+        console.log(""on click after "", value);
+        console.log(
+          ""on click confirm "",
+          searchParams.get(LAST_DAG_RUN_STATE_PARAM),
+        );
       },
       [pagination, searchParams, setSearchParams, setTableURLState, sorting],
     );
diff --git a/airflow/ui/src/pages/DagsList/DagsList.tsx b/airflow/ui/src/pages/DagsList/DagsList.tsx
index ad1b08fe87..5d5bbfe0dd 100644
--- a/airflow/ui/src/pages/DagsList/DagsList.tsx
+++ b/airflow/ui/src/pages/DagsList/DagsList.tsx
@@ -121,6 +121,7 @@ export const DagsList = () => {
   const [searchParams, setSearchParams] = useSearchParams();
   const [display, setDisplay] = useState<""card"" | ""table"">(""card"");
 
+  console.log(""search params"", searchParams);
   const showPaused = searchParams.get(PAUSED_PARAM);
   const lastDagRunState = searchParams.get(
     LAST_DAG_RUN_STATE_PARAM,
@@ -152,6 +153,8 @@ export const DagsList = () => {
     setDagDisplayNamePattern(value);
   };
 
+  console.log(""last dag run state render"", lastDagRunState, searchParams);
+
   const { data, error, isFetching, isLoading } = useDagServiceGetDags(
     {
       dagDisplayNamePattern: Boolean(dagDisplayNamePattern)

```

bbovenzi on (2024-10-19 13:05:37 UTC): Good catch. 

We should probably move those query settings to be default for all our queries instead of just for getDags.
We just haven't added autorefetch yet which perhaps we should do and include the refetch function from useQuery

For your failing test, we probably need to mock the params themselves. https://stackoverflow.com/questions/71415745/mock-usesearchparams-react-testing-library

tirkarthi (Issue Creator) on (2024-10-21 13:54:08 UTC): Thanks @bbovenzi for the link. I will try to take the test in another PR to unblock this fix since I might need sometime to fully process the testing and mocking flow to test this properly.

tirkarthi (Issue Creator) on (2024-10-22 14:02:07 UTC): Rebased with latest main branch. CI is green now.

"
2598808673,pull_request,closed,,Remove providers/_init__.py,"Removed the `__init__.py` file from ""providers"" directory, it is not needed there, because ""providers"" is just a folder where we keep provider files, it's not a Python package.

Also this PR fixes a few other teething problems with setup of tests that were introcuded in #42505 and #43802 ""masked"" by having `__init__.py` added in providers package:

* common.sql interface pre-commit used wrong path to generated files
* openlineage extractor test that should not expect ""providers.tests.*"" but ""tests.*"" package
* common_sql_api_stubs wrongly calculating generated path for stub-generated files
* pytest_plugin expecting .asf.yml in ""airflow"" sources - even during compatibility tests with older version of airflow (where the .asf.yml is not present)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-19 06:31:49+00:00,[],2024-10-19 06:55:41+00:00,2024-10-19 06:55:40+00:00,https://github.com/apache/airflow/pull/43187,"[('area:providers', ''), ('area:dev-tools', ''), ('provider:openlineage', 'AIP-53')]","[{'comment_id': 2423624206, 'issue_id': 2598808673, 'author': 'potiuk', 'body': 'Ah it is not that easy indeed :(', 'created_at': datetime.datetime(2024, 10, 19, 6, 54, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2423624438, 'issue_id': 2598808673, 'author': 'potiuk', 'body': 'Closing for now until #42632 is fixed - I forgot about it.', 'created_at': datetime.datetime(2024, 10, 19, 6, 55, 40, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-19 06:54:44 UTC): Ah it is not that easy indeed :(

potiuk (Issue Creator) on (2024-10-19 06:55:40 UTC): Closing for now until #42632 is fixed - I forgot about it.

"
2598687785,pull_request,closed,,Fix Selective checks for Task SDK,"Task SDK tests were running as part of ""DB tests"" with other Core files & providers, this PR changes it so they run separately. It also adds separate mypy checks for it.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-19 03:08:03+00:00,[],2024-10-19 23:49:53+00:00,2024-10-19 23:49:52+00:00,https://github.com/apache/airflow/pull/43185,"[('area:dev-tools', ''), ('area:task-execution-interface-aip72', 'AIP-72: Task Execution Interface (TEI) aka Task SDK')]","[{'comment_id': 2423650302, 'issue_id': 2598687785, 'author': 'potiuk', 'body': 'Nice! just two small things but LGTM', 'created_at': datetime.datetime(2024, 10, 19, 7, 15, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2423828503, 'issue_id': 2598687785, 'author': 'kaxil', 'body': '> Actually ... There is another problem. the `task-sdk-tests.yml` is never called from the ci workflow :)\r\n> \r\n> You need something like k8s tests calling from the main `ci.yml` @kaxil - because `task-sdk-tests.yml` is triggered on workflow call.\r\n> \r\n> ```yaml\r\n>   tests-kubernetes:\r\n>     name: ""Kubernetes tests""\r\n>     uses: ./.github/workflows/k8s-tests.yml\r\n>     needs: [build-info, wait-for-prod-images]\r\n>     permissions:\r\n>       contents: read\r\n>       packages: read\r\n>     secrets: inherit\r\n>     with:\r\n>       runs-on-as-json-default: ${{ needs.build-info.outputs.runs-on-as-json-default }}\r\n>       image-tag: ${{ needs.build-info.outputs.image-tag }}\r\n>       python-versions-list-as-string: ${{ needs.build-info.outputs.python-versions-list-as-string }}\r\n>       kubernetes-versions-list-as-string: ${{ needs.build-info.outputs.kubernetes-versions-list-as-string }}\r\n>       kubernetes-combos-list-as-string: ${{ needs.build-info.outputs.kubernetes-combos-list-as-string }}\r\n>       include-success-outputs: ${{ needs.build-info.outputs.include-success-outputs }}\r\n>       debug-resources: ${{ needs.build-info.outputs.debug-resources }}\r\n>     if: >\r\n>       ( needs.build-info.outputs.run-kubernetes-tests == \'true\' ||\r\n>       needs.build-info.outputs.needs-helm-tests == \'true\')\r\n> ```\r\n\r\nFixed in https://github.com/apache/airflow/pull/43185/commits/77c786d56f96ef88eef65ef6c0ba6d58811b8820', 'created_at': datetime.datetime(2024, 10, 19, 12, 52, 38, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-19 07:15:42 UTC): Nice! just two small things but LGTM

kaxil (Issue Creator) on (2024-10-19 12:52:38 UTC): Fixed in https://github.com/apache/airflow/pull/43185/commits/77c786d56f96ef88eef65ef6c0ba6d58811b8820

"
2598657223,pull_request,closed,,Add clearing behavior for backfill,"Add clearing behavior for backfill

User can elect to clear failed runs or completed runs in the backfill range.

Also, we handle the possibility of duplicate dag runs (i.e. multiple for the same execution date).",dstandish,2024-10-19 02:07:39+00:00,[],2024-10-25 15:09:41+00:00,2024-10-25 15:09:41+00:00,https://github.com/apache/airflow/pull/43184,[],"[{'comment_id': 2438081998, 'issue_id': 2598657223, 'author': 'dstandish', 'body': 'closing in favor of https://github.com/apache/airflow/pull/43382', 'created_at': datetime.datetime(2024, 10, 25, 15, 9, 41, tzinfo=datetime.timezone.utc)}]","dstandish (Issue Creator) on (2024-10-25 15:09:41 UTC): closing in favor of https://github.com/apache/airflow/pull/43382

"
2598470859,pull_request,closed,,Remove TaskContextLogger,"It was a fine idea, but we ultimately realized that it's better to just add records to the `Log` table, which can be viewed easily in the UI
",dstandish,2024-10-18 22:05:55+00:00,[],2024-10-20 13:48:00+00:00,2024-10-19 00:50:30+00:00,https://github.com/apache/airflow/pull/43183,"[('area:providers', ''), ('area:logging', ''), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]","[{'comment_id': 2423306800, 'issue_id': 2598470859, 'author': 'kaxil', 'body': '> It was a fine idea, but we ultimately realized that it\'s better to just add Log records.\r\n\r\nWhat are the ""Log records"" you are mentioning, could you expand a little', 'created_at': datetime.datetime(2024, 10, 18, 22, 8, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2423321318, 'issue_id': 2598470859, 'author': 'dstandish', 'body': '> > It was a fine idea, but we ultimately realized that it\'s better to just add Log records.\r\n> \r\n> What are the ""Log records"" you are mentioning, could you expand a little\r\n\r\nThe `Log` table\r\n\r\nAlso knows as `eventLogs` in the rest API', 'created_at': datetime.datetime(2024, 10, 18, 22, 24, 58, tzinfo=datetime.timezone.utc)}]","kaxil on (2024-10-18 22:08:21 UTC): What are the ""Log records"" you are mentioning, could you expand a little

dstandish (Issue Creator) on (2024-10-18 22:24:58 UTC): The `Log` table

Also knows as `eventLogs` in the rest API

"
2598364533,pull_request,closed,,Run Task SDK tests without DB,"We don't need Database for Task SDK. So let's skip initializing or using the database. This will help us catch if there is a code that needs DB leaks in the SDK code

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-18 20:48:17+00:00,[],2024-10-21 09:08:16+00:00,2024-10-21 09:08:14+00:00,https://github.com/apache/airflow/pull/43181,"[('area:dev-tools', ''), ('area:task-execution-interface-aip72', 'AIP-72: Task Execution Interface (TEI) aka Task SDK')]","[{'comment_id': 2423291281, 'issue_id': 2598364533, 'author': 'kaxil', 'body': '> Hmmm, could this be done in the task_sdk/tests/conftest.py too somehow, so that if you run `pytest` it will also not spin up the DB?\r\n> \r\n> I think there is a marker we could apply globally via that file.\r\n\r\n@ashb Done', 'created_at': datetime.datetime(2024, 10, 18, 21, 52, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2423530829, 'issue_id': 2598364533, 'author': 'kaxil', 'body': '~Waiting for https://github.com/apache/airflow/pull/43185 to get merged first~\r\n\r\n**Update**: Its Merged', 'created_at': datetime.datetime(2024, 10, 19, 3, 9, 50, tzinfo=datetime.timezone.utc)}]","kaxil (Issue Creator) on (2024-10-18 21:52:35 UTC): @ashb Done

kaxil (Issue Creator) on (2024-10-19 03:09:50 UTC): ~Waiting for https://github.com/apache/airflow/pull/43185 to get merged first~

**Update**: Its Merged

"
2598151600,pull_request,closed,,Fix side-effect of setting log handlers in tests,"In some of our tests, handlers for loggers were set to the ""logging.Handler()"" and that created a side effect where when they were not cleaned by another test, they produced `NotImplementedError: emit must be implemented by Handler subclasses` message - because indeed `logging.Handler()` emit message raised NotImplementedError.

The problem was that those tests (and some others) cleaned-up the handlers only BEFORE the tests but not AFTER - so if it happened that the same ""test worker"" run another test afterwards, that cleaned the handlers but did not set the handlers back, the side effect was gone. But when xdist arranged the tests to different pytest workers, the Handlers could remain registered in loggers so other tests could attempt to emit some logs in case they logged something to a parent logger.

The fix applied is to create a fixture that cleans all loggers BEFORE and AFTER a test - and add the fixture to tests that modify handlers.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-18 18:35:40+00:00,[],2024-10-18 22:56:24+00:00,2024-10-18 21:00:42+00:00,https://github.com/apache/airflow/pull/43175,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:CLI', ''), ('area:Triggerer', '')]","[{'comment_id': 2423037747, 'issue_id': 2598151600, 'author': 'potiuk', 'body': 'needs a bit more work for common code.', 'created_at': datetime.datetime(2024, 10, 18, 18, 41, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2423042441, 'issue_id': 2598151600, 'author': 'potiuk', 'body': ""I have to check what's the most optimal way to remove all handlers from all loggers."", 'created_at': datetime.datetime(2024, 10, 18, 18, 44, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2423048310, 'issue_id': 2598151600, 'author': 'potiuk', 'body': 'Should be ready for review.', 'created_at': datetime.datetime(2024, 10, 18, 18, 48, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2423344706, 'issue_id': 2598151600, 'author': 'dstandish', 'body': '#protm', 'created_at': datetime.datetime(2024, 10, 18, 22, 56, 22, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-18 18:41:07 UTC): needs a bit more work for common code.

potiuk (Issue Creator) on (2024-10-18 18:44:16 UTC): I have to check what's the most optimal way to remove all handlers from all loggers.

potiuk (Issue Creator) on (2024-10-18 18:48:37 UTC): Should be ready for review.

dstandish on (2024-10-18 22:56:22 UTC): #protm

"
2598080035,pull_request,closed,,"Remove ""from __future__"" from airflow/providers __init__.py","Cleans-up airflow and providers `__init__.py` files in order to get providers import work again.

This is done by excluding the two `__init__.py` files from automated ruff isort rules adding `from __future__ import annotations`.

Also removed the `__init__.py` file from ""providers"" directory, it is not needed there, because ""providers"" is just a folder where we keep provider files, it's not a Python package.

That should finally get rid of the Intellij teething import problem that has been introduced in #42505.

There were earlier - unsuccesful - attempts to fix it in the #43116 and #43081 that followed #42951 - but the key is that Pycharm requires the namespace's extend_path to be first ""real"" line of code in the `__init__.py` to understand that the package is an ""explicit"" namespace package - and it conflicts with the requirement of ""from __future__ import annotations"" to be the first line of Python code.

Also this PR fixes a few other teething problems with setup of tests that were introcuded in https://github.com/apache/airflow/pull/42505 and #43802 ""masked"" by having `__init__.py` added in providers package:

* common.sql interface pre-commit used wrong path to generated files
* openlineage extractor test that should not expect ""providers.tests.*""
  but ""tests.*"" package
* common_sql_api_stubs wrongly calculating generated path for
  stub-generated files
* pytest_plugin expecting .asf.yml in ""airflow"" sources - even during
  compatibility tests with older version of airflow (where the
  .asf.yml is not present)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-18 17:50:10+00:00,[],2024-10-19 06:32:53+00:00,2024-10-18 23:00:28+00:00,https://github.com/apache/airflow/pull/43173,"[('area:providers', '')]","[{'comment_id': 2422966232, 'issue_id': 2598080035, 'author': 'potiuk', 'body': 'It nicely works for my IntelliJ:\r\n\r\n<img width=""653"" alt=""Screenshot 2024-10-18 at 19 53 11"" src=""https://github.com/user-attachments/assets/b9afcd24-0f4c-49f5-8b0d-45c973cd9f00"">', 'created_at': datetime.datetime(2024, 10, 18, 17, 53, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2423011230, 'issue_id': 2598080035, 'author': 'potiuk', 'body': 'Ha.. Still some errors to fix but we get closer :) . Let me work on those :)', 'created_at': datetime.datetime(2024, 10, 18, 18, 24, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2423164629, 'issue_id': 2598080035, 'author': 'potiuk', 'body': 'I had to fix (I hope 🤞)  a few other problems that wer ""masked"" by having ""__init__.py"" in `providers` folder.', 'created_at': datetime.datetime(2024, 10, 18, 20, 12, 24, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-18 17:53:37 UTC): It nicely works for my IntelliJ:

<img width=""653"" alt=""Screenshot 2024-10-18 at 19 53 11"" src=""https://github.com/user-attachments/assets/b9afcd24-0f4c-49f5-8b0d-45c973cd9f00"">

potiuk (Issue Creator) on (2024-10-18 18:24:20 UTC): Ha.. Still some errors to fix but we get closer :) . Let me work on those :)

potiuk (Issue Creator) on (2024-10-18 20:12:24 UTC): I had to fix (I hope 🤞)  a few other problems that wer ""masked"" by having ""__init__.py"" in `providers` folder.

"
2598035428,pull_request,closed,,add min amqp version,"Latest version of `amqp` is 5.2.0. Which was released in November 2023.  Prior to that is 5.1.1, which was released in April 2022. Hence, using 5.2.0 as the min version

related to https://github.com/apache/airflow/issues/42989",rawwar,2024-10-18 17:25:03+00:00,[],2024-10-19 07:43:53+00:00,2024-10-19 07:27:32+00:00,https://github.com/apache/airflow/pull/43172,[],[],
2597954203,pull_request,closed,,Add Omkar to triage team,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-18 16:35:11+00:00,[],2024-10-18 16:36:02+00:00,2024-10-18 16:36:01+00:00,https://github.com/apache/airflow/pull/43170,"[('area:dev-tools', '')]","[{'comment_id': 2422850732, 'issue_id': 2597954203, 'author': 'potiuk', 'body': 'Closing in favour of #43169', 'created_at': datetime.datetime(2024, 10, 18, 16, 36, 1, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-18 16:36:01 UTC): Closing in favour of #43169

"
2597953218,pull_request,closed,,Add `omkar-foss` to the triage team,"This will allow him to interact with the GitHub project for sig-debugging: https://github.com/apache/airflow/issues/40975 & add things to https://github.com/orgs/apache/projects/421

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-18 16:34:30+00:00,[],2024-10-18 16:36:18+00:00,2024-10-18 16:36:16+00:00,https://github.com/apache/airflow/pull/43169,"[('area:dev-tools', '')]",[],
2597950441,pull_request,closed,,Add more robust handling of existing DagRun,"Previously we would just try to create and if exists just move on.

Now we'll make sure that we create the BackfillDagRun record with a note documenting that we did not create the dag run because it already existed.

This is a stepping stone towards implementing ""clear existing"" behavior.
",dstandish,2024-10-18 16:32:41+00:00,[],2024-10-18 23:10:06+00:00,2024-10-18 23:10:05+00:00,https://github.com/apache/airflow/pull/43168,"[('kind:documentation', ''), ('area:db-migrations', 'PRs with DB migration')]",[],
2597749533,pull_request,closed,,AIP-84 Delete Pool,related to: https://github.com/apache/airflow/issues/42370,pierrejeambrun,2024-10-18 14:50:13+00:00,['pierrejeambrun'],2024-10-21 07:56:55+00:00,2024-10-21 07:56:53+00:00,https://github.com/apache/airflow/pull/43165,"[('AIP-84', 'Modern Rest API'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2425901617, 'issue_id': 2597749533, 'author': 'pierrejeambrun', 'body': 'Merging, unrelated CI failures', 'created_at': datetime.datetime(2024, 10, 21, 7, 56, 45, tzinfo=datetime.timezone.utc)}]","pierrejeambrun (Issue Creator) on (2024-10-21 07:56:45 UTC): Merging, unrelated CI failures

"
2597743658,pull_request,open,,Add diagrams for Airflow packaging,"Those are draft diagrams showing Airflow Packaging for Airflow 2 and 3

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-18 14:47:42+00:00,[],2024-12-09 00:17:14+00:00,,https://github.com/apache/airflow/pull/43164,"[('kind:documentation', '')]","[{'comment_id': 2513245455, 'issue_id': 2597743658, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 12, 3, 0, 17, 35, tzinfo=datetime.timezone.utc)}]","github-actions[bot] on (2024-12-03 00:17:35 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2597740320,pull_request,closed,,[Backport] Always use logical date in DAG run header,This back ports #43148 to 2.,uranusjr,2024-10-18 14:46:26+00:00,[],2024-10-23 09:00:39+00:00,2024-10-18 19:26:00+00:00,https://github.com/apache/airflow/pull/43163,"[('area:webserver', 'Webserver related Issues'), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2597678445,pull_request,closed,,[WIP]Add statsd exporting to edge worker,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
In order to create metrics in grafana for the edge worker, we want to use statsd to send the data to the prometheus database. Therefore we do this export in the set_state method which is executed on every heartbeat

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",majorosdonat,2024-10-18 14:21:06+00:00,[],2024-12-08 00:18:13+00:00,2024-12-08 00:18:13+00:00,https://github.com/apache/airflow/pull/43162,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:providers', '')]","[{'comment_id': 2513245476, 'issue_id': 2597678445, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 12, 3, 0, 17, 37, tzinfo=datetime.timezone.utc)}]","github-actions[bot] on (2024-12-03 00:17:37 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2597528344,pull_request,closed,,Remove hard-coded logger in tests,"The change itself should be ok but on checking other patterns from the codebase, I am changing it to using the logger from the sensor

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-18 13:30:45+00:00,[],2024-10-18 15:58:52+00:00,2024-10-18 15:58:50+00:00,https://github.com/apache/airflow/pull/43160,"[('area:providers', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)'), ('provider:apache-hdfs', '')]",[],
2597522869,pull_request,closed,,AIP-84 Get Providers,related to https://github.com/apache/airflow/issues/42370,pierrejeambrun,2024-10-18 13:28:11+00:00,['pierrejeambrun'],2024-10-21 09:22:17+00:00,2024-10-21 09:22:14+00:00,https://github.com/apache/airflow/pull/43159,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-84', 'Modern Rest API'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2426103525, 'issue_id': 2597522869, 'author': 'pierrejeambrun', 'body': 'Unrelated CI failure, merging.', 'created_at': datetime.datetime(2024, 10, 21, 9, 22, 11, tzinfo=datetime.timezone.utc)}]","pierrejeambrun (Issue Creator) on (2024-10-21 09:22:11 UTC): Unrelated CI failure, merging.

"
2597486259,pull_request,closed,,Fix provider title in documentation,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Fix the title for `apache-airflow-providers-common-compat` provider in the documentation.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",alex-slynko,2024-10-18 13:10:39+00:00,[],2024-10-18 14:07:14+00:00,2024-10-18 14:07:10+00:00,https://github.com/apache/airflow/pull/43157,"[('area:providers', ''), ('kind:documentation', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)'), ('provider:common-compat', '')]","[{'comment_id': 2422445139, 'issue_id': 2597486259, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 18, 13, 10, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2422562682, 'issue_id': 2597486259, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 18, 14, 7, 12, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-18 13:10:43 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-10-18 14:07:12 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2597413304,pull_request,closed,,Making the security model more explicit,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",amoghrajesh,2024-10-18 12:37:00+00:00,[],2024-10-18 20:30:44+00:00,2024-10-18 20:30:44+00:00,https://github.com/apache/airflow/pull/43155,"[('area:dev-tools', '')]",[],
2597262315,pull_request,closed,,Fix Edge Worker handles orphaned PID files,"# Problem description

The Edge Worker run into the following Exception if the worker was shutdown in a undefined way (No clear shutdown).
```
Traceback (most recent call last):
  File ""/home/airflow/.local/bin/airflow"", line 8, in <module>
    sys.exit(main())
  File ""/home/airflow/.local/lib/python3.8/site-packages/airflow/__main__.py"", line 62, in main
    args.func(args)
  File ""/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/cli.py"", line 115, in wrapper
    return f(*args, **kwargs)
  File ""/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/providers_configuration_loader.py"", line 55, in wrapped_function
    return func(*args, **kwargs)
```

The root cause is that the current implementation does not consider, if PID file are already existing.
Also it also does not consider if PID files are created by parallel running Edge Worker instances

# Bugfix description

This PR contains code to handle existing PID files for Edge workers:

- Orphaned PID files created by crashed instances
- PID files owned by other running Edge worker instances that have configured with the same PID file path (each instance must have its own PID file path!)

# Changes in details

* Added function `_write_pid_to_pidfile` to Edge Worker CLI that handles PID files in their different life cycles
* Added pytests",OliverWannenwetsch,2024-10-18 11:25:17+00:00,[],2024-10-22 11:49:56+00:00,2024-10-22 11:48:05+00:00,https://github.com/apache/airflow/pull/43153,"[('area:providers', ''), ('type:bug-fix', 'Changelog: Bug Fixes'), ('AIP-69', 'Edge Executor'), ('provider:edge', 'Edge Executor / Worker (AIP-69)')]","[{'comment_id': 2422246581, 'issue_id': 2597262315, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 18, 11, 25, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2426839901, 'issue_id': 2597262315, 'author': 'jscheffl', 'body': ""+1: I see a couple of static checks failing, please run either `pre-commit` over your changes or `breeze static-checks`\r\n\r\nNote: I'd ignore most of the other errors in the pipeline, seems to be CI general in-stabiltiy)"", 'created_at': datetime.datetime(2024, 10, 21, 14, 24, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2426843482, 'issue_id': 2597262315, 'author': 'jscheffl', 'body': '+1... as we are on main but not releasing the package atm because it is not ready, can you please:\r\n\r\n- increment the third digit of the version number in providers/src/airflow/providers/edge/provider.yaml\r\n- Add some notes in changelog in providers/src/airflow/providers/edge/CHANGELOG.rst ?\r\n\r\nTHANKS!', 'created_at': datetime.datetime(2024, 10, 21, 14, 26, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2429012515, 'issue_id': 2597262315, 'author': 'OliverWannenwetsch', 'body': ""> +1: I see a couple of static checks failing, please run either `pre-commit` over your changes or `breeze static-checks`\r\n> \r\n> Note: I'd ignore most of the other errors in the pipeline, seems to be CI general in-stabiltiy)\r\n\r\nFixed in commit 1d0cb9c0b8"", 'created_at': datetime.datetime(2024, 10, 22, 11, 21, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2429014381, 'issue_id': 2597262315, 'author': 'OliverWannenwetsch', 'body': '> +1... as we are on main but not releasing the package atm because it is not ready, can you please:\r\n> \r\n> * increment the third digit of the version number in providers/src/airflow/providers/edge/provider.yaml\r\n> * Add some notes in changelog in providers/src/airflow/providers/edge/CHANGELOG.rst ?\r\n> \r\n> THANKS!\r\n\r\nFixed in commit 33fb87513e84f', 'created_at': datetime.datetime(2024, 10, 22, 11, 22, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2429063706, 'issue_id': 2597262315, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 22, 11, 48, 7, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-18 11:25:23 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

jscheffl on (2024-10-21 14:24:41 UTC): +1: I see a couple of static checks failing, please run either `pre-commit` over your changes or `breeze static-checks`

Note: I'd ignore most of the other errors in the pipeline, seems to be CI general in-stabiltiy)

jscheffl on (2024-10-21 14:26:04 UTC): +1... as we are on main but not releasing the package atm because it is not ready, can you please:

- increment the third digit of the version number in providers/src/airflow/providers/edge/provider.yaml
- Add some notes in changelog in providers/src/airflow/providers/edge/CHANGELOG.rst ?

THANKS!

OliverWannenwetsch (Issue Creator) on (2024-10-22 11:21:43 UTC): Fixed in commit 1d0cb9c0b8

OliverWannenwetsch (Issue Creator) on (2024-10-22 11:22:43 UTC): Fixed in commit 33fb87513e84f

boring-cyborg[bot] on (2024-10-22 11:48:07 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2596975622,pull_request,closed,,nit: remove taskgroup's tooltip from OL's AirflowJobFacet,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
Removing TaskGroup's tooltip from AirflowJobFacet that's included in DAG start event. The tooltip is already included in task level OpenLineage events and it might be long (docstring for taskflow API functions), so there is no need to duplicate that information. The DAG start event should only contain information necessary to deduce task dependencies and DAG structure, so the tooltip is not needed at that time.


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kacpermuda,2024-10-18 09:27:38+00:00,[],2024-10-22 11:27:08+00:00,2024-10-22 11:26:51+00:00,https://github.com/apache/airflow/pull/43152,"[('area:providers', ''), ('provider:openlineage', 'AIP-53')]","[{'comment_id': 2423187179, 'issue_id': 2596975622, 'author': 'potiuk', 'body': 'Rebased.', 'created_at': datetime.datetime(2024, 10, 18, 20, 29, 51, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-18 20:29:51 UTC): Rebased.

"
2596785239,pull_request,closed,,Always use logical date in DAG run header,"In #38365, it was mentioned the label really should use logical date, not data interval end. This comment was however not addressed at all before the PR was merged.

While using `dataIntervalEnd` fixes _some_ of the runs, it actually makes the display wrong for others. The run ID is generated from logical date, which _may_ be data interval start or end, or another value altogether depending on how the DAG is configured (specifically which timetable is used) and how the run is triggered. Using either `dataIntervalStart` or `dataIntervalEnd` is wrong.",uranusjr,2024-10-18 08:06:18+00:00,['uranusjr'],2024-10-25 21:29:25+00:00,2024-10-18 13:20:11+00:00,https://github.com/apache/airflow/pull/43148,"[('area:webserver', 'Webserver related Issues'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('legacy ui', 'Whether legacy UI change should be allowed in PR')]",[],
2596781124,pull_request,closed,,Fix intermittent failure in UI Time test,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

closes: https://github.com/apache/airflow/issues/43146",omkar-foss,2024-10-18 08:04:36+00:00,[],2024-10-18 14:44:50+00:00,2024-10-18 12:38:32+00:00,https://github.com/apache/airflow/pull/43147,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2421788302, 'issue_id': 2596781124, 'author': 'omkar-foss', 'body': 'cc: @bbovenzi just for your info! :)', 'created_at': datetime.datetime(2024, 10, 18, 8, 12, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2422021131, 'issue_id': 2596781124, 'author': 'omkar-foss', 'body': ""Hi! Looks like we've an intermittent test failure, while fixing another intermittent test failure 😂\r\nhttps://github.com/apache/airflow/actions/runs/11399892797/job/31720011364?pr=43147\r\n\r\nTrying to re-trigger the tests now."", 'created_at': datetime.datetime(2024, 10, 18, 9, 55, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2422199419, 'issue_id': 2596781124, 'author': 'omkar-foss', 'body': ""> Hi! Looks like we've an intermittent test failure, while fixing another intermittent test failure 😂 https://github.com/apache/airflow/actions/runs/11399892797/job/31720011364?pr=43147\r\n> \r\n> Trying to re-trigger the tests now.\r\n\r\nDoesn't look like an intermittent failure, I tried again twice, it's still failing. Weird thing that it's passing in my other PR https://github.com/apache/airflow/pull/43084 which also is in sync with `main` 🤔\r\n\r\nFailure seems to be related to `logging` module, I'll try to dig deeper."", 'created_at': datetime.datetime(2024, 10, 18, 10, 59, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2422381989, 'issue_id': 2596781124, 'author': 'bbovenzi', 'body': ""I'm still going to merge. Let's get rid of at least one intermittent failure"", 'created_at': datetime.datetime(2024, 10, 18, 12, 38, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2422405595, 'issue_id': 2596781124, 'author': 'pierrejeambrun', 'body': 'Yes and the other one is unrelated and need separate fixing I believe.', 'created_at': datetime.datetime(2024, 10, 18, 12, 50, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2422646102, 'issue_id': 2596781124, 'author': 'omkar-foss', 'body': ""> Yes and the other one is unrelated and need separate fixing I believe.\r\n\r\nYes, and the failing non-db tests command passes well on my local breeze. Also other PRs don't seem to be having this failure, which makes it even weirder! 😅"", 'created_at': datetime.datetime(2024, 10, 18, 14, 44, 48, tzinfo=datetime.timezone.utc)}]","omkar-foss (Issue Creator) on (2024-10-18 08:12:42 UTC): cc: @bbovenzi just for your info! :)

omkar-foss (Issue Creator) on (2024-10-18 09:55:30 UTC): Hi! Looks like we've an intermittent test failure, while fixing another intermittent test failure 😂
https://github.com/apache/airflow/actions/runs/11399892797/job/31720011364?pr=43147

Trying to re-trigger the tests now.

omkar-foss (Issue Creator) on (2024-10-18 10:59:14 UTC): Doesn't look like an intermittent failure, I tried again twice, it's still failing. Weird thing that it's passing in my other PR https://github.com/apache/airflow/pull/43084 which also is in sync with `main` 🤔

Failure seems to be related to `logging` module, I'll try to dig deeper.

bbovenzi on (2024-10-18 12:38:26 UTC): I'm still going to merge. Let's get rid of at least one intermittent failure

pierrejeambrun on (2024-10-18 12:50:18 UTC): Yes and the other one is unrelated and need separate fixing I believe.

omkar-foss (Issue Creator) on (2024-10-18 14:44:48 UTC): Yes, and the failing non-db tests command passes well on my local breeze. Also other PRs don't seem to be having this failure, which makes it even weirder! 😅

"
2596694786,pull_request,closed,,Also use ODBC connection for sqlalchemy engine in OdbcHook like JdbcHook,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: [#42664](https://github.com/apache/airflow/issues/42664)
related: [#42664](https://github.com/apache/airflow/issues/42664)

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Same as with [PR 42705](https://github.com/apache/airflow/pull/42705), we need to make sure the SQLAlchemy engine uses the same ODBC connection when creating the engine in the OdbcHook as the OdbcHook is also agnostic of which database it connects to, just like with the JdbcHook.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",dabla,2024-10-18 07:34:33+00:00,[],2024-10-23 18:50:31+00:00,2024-10-23 15:12:17+00:00,https://github.com/apache/airflow/pull/43145,"[('area:providers', ''), ('provider:odbc', '')]",[],
2596652769,pull_request,closed,,Add SageMakerProcessingSensor,"Add SageMakerProcessingSensor which can be used to wait on a SageMaker processing job.
closes: #42411",vVv-AA,2024-10-18 07:15:45+00:00,[],2024-10-18 13:27:55+00:00,2024-10-18 13:27:54+00:00,https://github.com/apache/airflow/pull/43144,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('kind:documentation', '')]","[{'comment_id': 2422011240, 'issue_id': 2596652769, 'author': 'vVv-AA', 'body': ""> In general looks good to me, but we'll need to fix the ci failure\r\n\r\nMy bad. The underscore in title was a bit short. I have updated. It is successful now."", 'created_at': datetime.datetime(2024, 10, 18, 9, 50, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2422017526, 'issue_id': 2596652769, 'author': 'Lee-W', 'body': ""I'll keep it for some more days so that others can take a look. Thanks for helping out :)"", 'created_at': datetime.datetime(2024, 10, 18, 9, 53, 39, tzinfo=datetime.timezone.utc)}]","vVv-AA (Issue Creator) on (2024-10-18 09:50:22 UTC): My bad. The underscore in title was a bit short. I have updated. It is successful now.

Lee-W on (2024-10-18 09:53:39 UTC): I'll keep it for some more days so that others can take a look. Thanks for helping out :)

"
2596644881,pull_request,closed,,pin min opentelemetry-exporter-prometheus version,"Latest version of opentelemetry-exporter-prometheus is 0.48b. But there's another older release that happened within the past 6 months. So, using that as a min version. When using without a pin, we install 0.48b version. So, we can also go with 0.48b, if required.

related to #42989

",rawwar,2024-10-18 07:11:42+00:00,[],2024-10-18 17:19:26+00:00,2024-10-18 17:17:31+00:00,https://github.com/apache/airflow/pull/43143,[],"[{'comment_id': 2422914811, 'issue_id': 2596644881, 'author': 'potiuk', 'body': '0.47b0 is good.', 'created_at': datetime.datetime(2024, 10, 18, 17, 17, 55, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-18 17:17:55 UTC): 0.47b0 is good.

"
2596599808,pull_request,closed,,"Add Dataset, Model asset subclasses","Close: https://github.com/apache/airflow/issues/42312

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-10-18 06:51:05+00:00,[],2024-10-23 06:10:20+00:00,2024-10-23 06:10:19+00:00,https://github.com/apache/airflow/pull/43142,[],"[{'comment_id': 2428782434, 'issue_id': 2596599808, 'author': 'uranusjr', 'body': 'Talked to Constance earlier; we should probably still make `from airflow.datasets import Dataset` work (and maybe also `from airflow import Dataset`). Without jumping through too many hoops, let’s just create a mostly empty `airflow/datasets.py` that emits a deprecation warning on import, and add a lazy import entry in `airflow/__init__.py`. Similar to how we handle name deprecations in providers.\r\n\r\nSame for DatasetAlias; this one is not as important (I doubt many people are already using it aside from Cosmos), but we might as well add it since the mechanism is the same.\r\n\r\nThose names should be removed in Airflow 3.2.', 'created_at': datetime.datetime(2024, 10, 22, 9, 36, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2428786854, 'issue_id': 2596599808, 'author': 'Lee-W', 'body': '> Talked to Constance earlier; we should probably still make `from airflow.datasets import Dataset` work (and maybe also `from airflow import Dataset`). Without jumping through too many hoops, let’s just create a mostly empty `airflow/datasets.py` that emits a deprecation warning on import, and add a lazy import entry in `airflow/__init__.py`. Similar to how we handle name deprecations in providers.\r\n> \r\n> Same for DatasetAlias; this one is not as important (I doubt many people are already using it aside from Cosmos), but we might as well add it since the mechanism is the same.\r\n> \r\n> Those names should be removed in Airflow 3.2.\r\n\r\nSounds good. Will do', 'created_at': datetime.datetime(2024, 10, 22, 9, 37, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2429044115, 'issue_id': 2596599808, 'author': 'Lee-W', 'body': '> Talked to Constance earlier; we should probably still make `from airflow.datasets import Dataset` work (and maybe also `from airflow import Dataset`). Without jumping through too many hoops, let’s just create a mostly empty `airflow/datasets.py` that emits a deprecation warning on import, and add a lazy import entry in `airflow/__init__.py`. Similar to how we handle name deprecations in providers.\r\n> \r\n> Same for DatasetAlias; this one is not as important (I doubt many people are already using it aside from Cosmos), but we might as well add it since the mechanism is the same.\r\n> \r\n> Those names should be removed in Airflow 3.2.\r\n\r\nUpdated', 'created_at': datetime.datetime(2024, 10, 22, 11, 38, 16, tzinfo=datetime.timezone.utc)}]","uranusjr on (2024-10-22 09:36:05 UTC): Talked to Constance earlier; we should probably still make `from airflow.datasets import Dataset` work (and maybe also `from airflow import Dataset`). Without jumping through too many hoops, let’s just create a mostly empty `airflow/datasets.py` that emits a deprecation warning on import, and add a lazy import entry in `airflow/__init__.py`. Similar to how we handle name deprecations in providers.

Same for DatasetAlias; this one is not as important (I doubt many people are already using it aside from Cosmos), but we might as well add it since the mechanism is the same.

Those names should be removed in Airflow 3.2.

Lee-W (Issue Creator) on (2024-10-22 09:37:48 UTC): Sounds good. Will do

Lee-W (Issue Creator) on (2024-10-22 11:38:16 UTC): Updated

"
2596522747,pull_request,closed,,AIP-69: Airflow Core adjustments for introduction of Edge Executor (#41730),Back-port of #41730 to v2-10-test,jscheffl,2024-10-18 06:10:27+00:00,[],2024-10-21 18:59:46+00:00,2024-10-21 18:59:46+00:00,https://github.com/apache/airflow/pull/43141,"[('kind:documentation', ''), ('area:Executors-core', 'LocalExecutor & SequentialExecutor'), ('AIP-69', 'Edge Executor'), ('provider:edge', 'Edge Executor / Worker (AIP-69)')]","[{'comment_id': 2427490095, 'issue_id': 2596522747, 'author': 'jscheffl', 'body': 'Buiuld fails as Edge provider is missing on the v2-10-test branch. Closing this PR and the one and only doc refernce link is not worth making the efforts porting this to 2v10 branch', 'created_at': datetime.datetime(2024, 10, 21, 18, 59, 46, tzinfo=datetime.timezone.utc)}]","jscheffl (Issue Creator) on (2024-10-21 18:59:46 UTC): Buiuld fails as Edge provider is missing on the v2-10-test branch. Closing this PR and the one and only doc refernce link is not worth making the efforts porting this to 2v10 branch

"
2596428062,pull_request,closed,, AIP-69: Breeze adjustments for introduction of Edge Executor (#41731),Back-port of #41731 to 2.10,jscheffl,2024-10-18 05:08:41+00:00,[],2024-10-18 06:26:43+00:00,2024-10-18 06:26:42+00:00,https://github.com/apache/airflow/pull/43139,"[('area:dev-tools', ''), ('AIP-69', 'Edge Executor'), ('provider:edge', 'Edge Executor / Worker (AIP-69)')]",[],
2596368761,pull_request,closed,,Fix awslogs_stream_prefix pattern,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

closes: #43130

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",pyrr,2024-10-18 04:23:20+00:00,[],2024-11-05 23:45:07+00:00,2024-11-05 19:30:20+00:00,https://github.com/apache/airflow/pull/43138,[],"[{'comment_id': 2457896593, 'issue_id': 2596368761, 'author': 'pyrr', 'body': '> Could please add/update unit test?\r\n\r\n@vincbeck Should be covered by current log fetch tests because the log stream name is inherited from the function changed in the commit. Let me know if you disagree and I can add a specific test.', 'created_at': datetime.datetime(2024, 11, 5, 18, 34, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457954987, 'issue_id': 2596368761, 'author': 'vincbeck', 'body': ""You're right! It might not be needed"", 'created_at': datetime.datetime(2024, 11, 5, 19, 8, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457996769, 'issue_id': 2596368761, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 11, 5, 19, 30, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2458386347, 'issue_id': 2596368761, 'author': 'ferruzzi', 'body': 'The \'run_task` task in the ECS system test [[here](https://github.com/apache/airflow/blob/main/providers/tests/system/amazon/aws/example_ecs.py#L151)] has started failing since this change with the following stacktrace:\r\n\r\n```\r\nINFO     airflow.task.operators.airflow.providers.amazon.aws.operators.ecs.EcsRunTaskOperator:task_log_fetcher.py:88 Cannot find log stream yet, it can take a couple of seconds to show up. If this error persists, check that the log group and stream are correct: group: /ecs_test/env00c63b78\tstream: ecs/env00c63b78-container/env00c63b78-container/8fdf80d5882e4a4ab9b2523da59cb109\r\nINFO     airflow.task.operators.airflow.providers.amazon.aws.operators.ecs.EcsRunTaskOperator:task_log_fetcher.py:88 Cannot find log stream yet, it can take a couple of seconds to show up. If this error persists, check that the log group and stream are correct: group: /ecs_test/env00c63b78\tstream: ecs/env00c63b78-container/env00c63b78-container/8fdf80d5882e4a4ab9b2523da59cb109\r\nINFO     airflow.task.operators.airflow.providers.amazon.aws.operators.ecs.EcsRunTaskOperator:ecs.py:685 ECS Task stopped, check status: {\'tasks\': [{\'attachments\': [{\'id\': \'a002ee5c-48c5-4b51-bc33-42adddc1b806\', \'type\': \'ElasticNetworkInterface\', \'status\': \'DELETED\', \'details\': [{\'name\': \'subnetId\', \'value\': \'subnet-043a758ae656cd1a1\'}, {\'name\': \'networkInterfaceId\', \'value\': \'eni-0876938a93c41615e\'}, {\'name\': \'macAddress\', \'value\': \'02:f9:6f:86:da:cf\'}, {\'name\': \'privateDnsName\', \'value\': \'ip-10-0-3-89.us-west-2.compute.internal\'}, {\'name\': \'privateIPv4Address\', \'value\': \'10.0.3.89\'}]}], \'attributes\': [{\'name\': \'ecs.cpu-architecture\', \'value\': \'x86_64\'}], \'availabilityZone\': \'us-west-2b\', \'clusterArn\': \'arn:aws:ecs:us-west-2:558120655471:cluster/SysTestCluster_example_ecs\', \'connectivity\': \'CONNECTED\', \'connectivityAt\': datetime.datetime(2024, 11, 5, 23, 3, 16, 665000, tzinfo=tzlocal()), \'containerInstanceArn\': \'arn:aws:ecs:us-west-2:558120655471:container-instance/SysTestCluster_example_ecs/f351c19e980943dab62ea246b00be509\', \'containers\': [{\'containerArn\': \'arn:aws:ecs:us-west-2:558120655471:container/SysTestCluster_example_ecs/8fdf80d5882e4a4ab9b2523da59cb109/f0c7840b-630e-4cdb-b5af-6400154f8a01\', \'taskArn\': \'arn:aws:ecs:us-west-2:558120655471:task/SysTestCluster_example_ecs/8fdf80d5882e4a4ab9b2523da59cb109\', \'name\': \'env00c63b78-container\', \'image\': \'ubuntu\', \'imageDigest\': \'sha256:99c35190e22d294cdace2783ac55effc69d32896daaa265f0bbedbcde4fbe3e5\', \'runtimeId\': \'e5a9056ce1d68042f96d7fbf2c20bad6b095c51512105c744d7d8fb447ba2b6c\', \'lastStatus\': \'STOPPED\', \'exitCode\': 0, \'networkBindings\': [], \'networkInterfaces\': [{\'attachmentId\': \'a002ee5c-48c5-4b51-bc33-42adddc1b806\', \'privateIpv4Address\': \'10.0.3.89\'}], \'healthStatus\': \'UNKNOWN\', \'cpu\': \'0\'}], \'cpu\': \'256\', \'createdAt\': datetime.datetime(2024, 11, 5, 23, 3, 16, 665000, tzinfo=tzlocal()), \'desiredStatus\': \'STOPPED\', \'enableExecuteCommand\': False, \'executionStoppedAt\': datetime.datetime(2024, 11, 5, 23, 3, 29, 662000, tzinfo=tzlocal()), \'group\': \'family:env00c63b78-task-definition\', \'healthStatus\': \'UNKNOWN\', \'lastStatus\': \'STOPPED\', \'launchType\': \'EC2\', \'memory\': \'512\', \'overrides\': {\'containerOverrides\': [{\'name\': \'env00c63b78-container\', \'command\': [\'echo hello world\']}], \'inferenceAcceleratorOverrides\': []}, \'pullStartedAt\': datetime.datetime(2024, 11, 5, 23, 3, 29, 257000, tzinfo=tzlocal()), \'pullStoppedAt\': datetime.datetime(2024, 11, 5, 23, 3, 29, 513000, tzinfo=tzlocal()), \'startedAt\': datetime.datetime(2024, 11, 5, 23, 3, 29, 533000, tzinfo=tzlocal()), \'startedBy\': \'airflow\', \'stopCode\': \'EssentialContainerExited\', \'stoppedAt\': datetime.datetime(2024, 11, 5, 23, 3, 43, 619000, tzinfo=tzlocal()), \'stoppedReason\': \'Essential container in task exited\', \'stoppingAt\': datetime.datetime(2024, 11, 5, 23, 3, 30, 333000, tzinfo=tzlocal()), \'tags\': [], \'taskArn\': \'arn:aws:ecs:us-west-2:558120655471:task/SysTestCluster_example_ecs/8fdf80d5882e4a4ab9b2523da59cb109\', \'taskDefinitionArn\': \'arn:aws:ecs:us-west-2:558120655471:task-definition/env00c63b78-task-definition:1\', \'version\': 6}], \'failures\': [], \'ResponseMetadata\': {\'RequestId\': \'7a1d07a1-71be-438d-94da-ff8738f0a8ad\', \'HTTPStatusCode\': 200, \'HTTPHeaders\': {\'x-amzn-requestid\': \'7a1d07a1-71be-438d-94da-ff8738f0a8ad\', \'content-type\': \'application/x-amz-json-1.1\', \'content-length\': \'2434\', \'date\': \'Tue, 05 Nov 2024 23:04:16 GMT\'}, \'RetryAttempts\': 0}}\r\n\r\nERROR    airflow.task:taskinstance.py:3189 Task failed with exception\r\nTraceback (most recent call last):\r\n  File ""/opt/airflow/airflow/models/taskinstance.py"", line 764, in _execute_task\r\n    result = _execute_callable(context=context, **execute_callable_kwargs)\r\n  File ""/opt/airflow/airflow/models/taskinstance.py"", line 730, in _execute_callable\r\n    return ExecutionCallableRunner(\r\n  File ""/opt/airflow/airflow/utils/operator_helpers.py"", line 258, in run\r\n    return self.func(*args, **kwargs)\r\n  File ""/opt/airflow/airflow/models/baseoperator.py"", line 375, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File ""/opt/airflow/providers/src/airflow/providers/amazon/aws/operators/ecs.py"", line 563, in execute\r\n    return self.task_log_fetcher.get_last_log_message()\r\n  File ""/opt/airflow/providers/src/airflow/providers/amazon/aws/utils/task_log_fetcher.py"", line 125, in get_last_log_message\r\n    return self.get_last_log_messages(1)[0]\r\n  File ""/opt/airflow/providers/src/airflow/providers/amazon/aws/utils/task_log_fetcher.py"", line 115, in get_last_log_messages\r\n    response = self.hook.conn.get_log_events(\r\n  File ""/usr/local/lib/python3.9/site-packages/botocore/client.py"", line 569, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File ""/usr/local/lib/python3.9/site-packages/botocore/client.py"", line 1023, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.errorfactory.ResourceNotFoundException: An error occurred (ResourceNotFoundException) when calling the GetLogEvents operation: The specified log stream does not exist.\r\n```\r\n\r\nThe test is already embedding the container name in the `awslogs_stream_prefix`.  Should we change the test, or add some logic to check if the container name is already in the prefix?', 'created_at': datetime.datetime(2024, 11, 5, 23, 13, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2458393440, 'issue_id': 2596368761, 'author': 'vincbeck', 'body': '> add some logic to check if the container name is already in the prefix?\r\n\r\nI think adding some logic to check if the container name is already in the prefix would make sense', 'created_at': datetime.datetime(2024, 11, 5, 23, 20, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2458416500, 'issue_id': 2596368761, 'author': 'ferruzzi', 'body': 'I agree, I think that is the safest way to handle it.   @pyrr , are you able to add that?', 'created_at': datetime.datetime(2024, 11, 5, 23, 39, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2458417370, 'issue_id': 2596368761, 'author': 'pyrr', 'body': ""Yes, thanks for finding out the problem @ferruzzi I'll proceed with your recommendation @vincbeck. Could you re-open the issue? Alternatively I can open a new issue if preferred."", 'created_at': datetime.datetime(2024, 11, 5, 23, 40, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2458420039, 'issue_id': 2596368761, 'author': 'ferruzzi', 'body': 'Thanks for taking it on.   I don\'t think you need to bother re-opening the Issue.  Just cut a new PR with the fix, put ""fixes PR: {link to this one}"" in the description (preferably with a little context), and tag me/us in it for reviewers.  We\'ll get a notification and get it merged.', 'created_at': datetime.datetime(2024, 11, 5, 23, 43, 7, tzinfo=datetime.timezone.utc)}]","pyrr (Issue Creator) on (2024-11-05 18:34:28 UTC): @vincbeck Should be covered by current log fetch tests because the log stream name is inherited from the function changed in the commit. Let me know if you disagree and I can add a specific test.

vincbeck on (2024-11-05 19:08:01 UTC): You're right! It might not be needed

boring-cyborg[bot] on (2024-11-05 19:30:22 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

ferruzzi on (2024-11-05 23:13:51 UTC): The 'run_task` task in the ECS system test [[here](https://github.com/apache/airflow/blob/main/providers/tests/system/amazon/aws/example_ecs.py#L151)] has started failing since this change with the following stacktrace:

```
INFO     airflow.task.operators.airflow.providers.amazon.aws.operators.ecs.EcsRunTaskOperator:task_log_fetcher.py:88 Cannot find log stream yet, it can take a couple of seconds to show up. If this error persists, check that the log group and stream are correct: group: /ecs_test/env00c63b78	stream: ecs/env00c63b78-container/env00c63b78-container/8fdf80d5882e4a4ab9b2523da59cb109
INFO     airflow.task.operators.airflow.providers.amazon.aws.operators.ecs.EcsRunTaskOperator:task_log_fetcher.py:88 Cannot find log stream yet, it can take a couple of seconds to show up. If this error persists, check that the log group and stream are correct: group: /ecs_test/env00c63b78	stream: ecs/env00c63b78-container/env00c63b78-container/8fdf80d5882e4a4ab9b2523da59cb109
INFO     airflow.task.operators.airflow.providers.amazon.aws.operators.ecs.EcsRunTaskOperator:ecs.py:685 ECS Task stopped, check status: {'tasks': [{'attachments': [{'id': 'a002ee5c-48c5-4b51-bc33-42adddc1b806', 'type': 'ElasticNetworkInterface', 'status': 'DELETED', 'details': [{'name': 'subnetId', 'value': 'subnet-043a758ae656cd1a1'}, {'name': 'networkInterfaceId', 'value': 'eni-0876938a93c41615e'}, {'name': 'macAddress', 'value': '02:f9:6f:86:da:cf'}, {'name': 'privateDnsName', 'value': 'ip-10-0-3-89.us-west-2.compute.internal'}, {'name': 'privateIPv4Address', 'value': '10.0.3.89'}]}], 'attributes': [{'name': 'ecs.cpu-architecture', 'value': 'x86_64'}], 'availabilityZone': 'us-west-2b', 'clusterArn': 'arn:aws:ecs:us-west-2:558120655471:cluster/SysTestCluster_example_ecs', 'connectivity': 'CONNECTED', 'connectivityAt': datetime.datetime(2024, 11, 5, 23, 3, 16, 665000, tzinfo=tzlocal()), 'containerInstanceArn': 'arn:aws:ecs:us-west-2:558120655471:container-instance/SysTestCluster_example_ecs/f351c19e980943dab62ea246b00be509', 'containers': [{'containerArn': 'arn:aws:ecs:us-west-2:558120655471:container/SysTestCluster_example_ecs/8fdf80d5882e4a4ab9b2523da59cb109/f0c7840b-630e-4cdb-b5af-6400154f8a01', 'taskArn': 'arn:aws:ecs:us-west-2:558120655471:task/SysTestCluster_example_ecs/8fdf80d5882e4a4ab9b2523da59cb109', 'name': 'env00c63b78-container', 'image': 'ubuntu', 'imageDigest': 'sha256:99c35190e22d294cdace2783ac55effc69d32896daaa265f0bbedbcde4fbe3e5', 'runtimeId': 'e5a9056ce1d68042f96d7fbf2c20bad6b095c51512105c744d7d8fb447ba2b6c', 'lastStatus': 'STOPPED', 'exitCode': 0, 'networkBindings': [], 'networkInterfaces': [{'attachmentId': 'a002ee5c-48c5-4b51-bc33-42adddc1b806', 'privateIpv4Address': '10.0.3.89'}], 'healthStatus': 'UNKNOWN', 'cpu': '0'}], 'cpu': '256', 'createdAt': datetime.datetime(2024, 11, 5, 23, 3, 16, 665000, tzinfo=tzlocal()), 'desiredStatus': 'STOPPED', 'enableExecuteCommand': False, 'executionStoppedAt': datetime.datetime(2024, 11, 5, 23, 3, 29, 662000, tzinfo=tzlocal()), 'group': 'family:env00c63b78-task-definition', 'healthStatus': 'UNKNOWN', 'lastStatus': 'STOPPED', 'launchType': 'EC2', 'memory': '512', 'overrides': {'containerOverrides': [{'name': 'env00c63b78-container', 'command': ['echo hello world']}], 'inferenceAcceleratorOverrides': []}, 'pullStartedAt': datetime.datetime(2024, 11, 5, 23, 3, 29, 257000, tzinfo=tzlocal()), 'pullStoppedAt': datetime.datetime(2024, 11, 5, 23, 3, 29, 513000, tzinfo=tzlocal()), 'startedAt': datetime.datetime(2024, 11, 5, 23, 3, 29, 533000, tzinfo=tzlocal()), 'startedBy': 'airflow', 'stopCode': 'EssentialContainerExited', 'stoppedAt': datetime.datetime(2024, 11, 5, 23, 3, 43, 619000, tzinfo=tzlocal()), 'stoppedReason': 'Essential container in task exited', 'stoppingAt': datetime.datetime(2024, 11, 5, 23, 3, 30, 333000, tzinfo=tzlocal()), 'tags': [], 'taskArn': 'arn:aws:ecs:us-west-2:558120655471:task/SysTestCluster_example_ecs/8fdf80d5882e4a4ab9b2523da59cb109', 'taskDefinitionArn': 'arn:aws:ecs:us-west-2:558120655471:task-definition/env00c63b78-task-definition:1', 'version': 6}], 'failures': [], 'ResponseMetadata': {'RequestId': '7a1d07a1-71be-438d-94da-ff8738f0a8ad', 'HTTPStatusCode': 200, 'HTTPHeaders': {'x-amzn-requestid': '7a1d07a1-71be-438d-94da-ff8738f0a8ad', 'content-type': 'application/x-amz-json-1.1', 'content-length': '2434', 'date': 'Tue, 05 Nov 2024 23:04:16 GMT'}, 'RetryAttempts': 0}}

ERROR    airflow.task:taskinstance.py:3189 Task failed with exception
Traceback (most recent call last):
  File ""/opt/airflow/airflow/models/taskinstance.py"", line 764, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
  File ""/opt/airflow/airflow/models/taskinstance.py"", line 730, in _execute_callable
    return ExecutionCallableRunner(
  File ""/opt/airflow/airflow/utils/operator_helpers.py"", line 258, in run
    return self.func(*args, **kwargs)
  File ""/opt/airflow/airflow/models/baseoperator.py"", line 375, in wrapper
    return func(self, *args, **kwargs)
  File ""/opt/airflow/providers/src/airflow/providers/amazon/aws/operators/ecs.py"", line 563, in execute
    return self.task_log_fetcher.get_last_log_message()
  File ""/opt/airflow/providers/src/airflow/providers/amazon/aws/utils/task_log_fetcher.py"", line 125, in get_last_log_message
    return self.get_last_log_messages(1)[0]
  File ""/opt/airflow/providers/src/airflow/providers/amazon/aws/utils/task_log_fetcher.py"", line 115, in get_last_log_messages
    response = self.hook.conn.get_log_events(
  File ""/usr/local/lib/python3.9/site-packages/botocore/client.py"", line 569, in _api_call
    return self._make_api_call(operation_name, kwargs)
  File ""/usr/local/lib/python3.9/site-packages/botocore/client.py"", line 1023, in _make_api_call
    raise error_class(parsed_response, operation_name)
botocore.errorfactory.ResourceNotFoundException: An error occurred (ResourceNotFoundException) when calling the GetLogEvents operation: The specified log stream does not exist.
```

The test is already embedding the container name in the `awslogs_stream_prefix`.  Should we change the test, or add some logic to check if the container name is already in the prefix?

vincbeck on (2024-11-05 23:20:52 UTC): I think adding some logic to check if the container name is already in the prefix would make sense

ferruzzi on (2024-11-05 23:39:09 UTC): I agree, I think that is the safest way to handle it.   @pyrr , are you able to add that?

pyrr (Issue Creator) on (2024-11-05 23:40:05 UTC): Yes, thanks for finding out the problem @ferruzzi I'll proceed with your recommendation @vincbeck. Could you re-open the issue? Alternatively I can open a new issue if preferred.

ferruzzi on (2024-11-05 23:43:07 UTC): Thanks for taking it on.   I don't think you need to bother re-opening the Issue.  Just cut a new PR with the fix, put ""fixes PR: {link to this one}"" in the description (preferably with a little context), and tag me/us in it for reviewers.  We'll get a notification and get it merged.

"
2596207184,pull_request,closed,,Add TimeoutError to be a retryable error in databricks provider,"closes #43128 


`aiohttp.client_exception.ServerTimeoutError` extends `asyncio.exceptions.TimeoutError`. Hence, used `ServerTimeoutError` when checking for type using isinstance. That should cover `TimeoutError`",rawwar,2024-10-18 02:16:41+00:00,[],2024-10-18 07:57:22+00:00,2024-10-18 07:20:05+00:00,https://github.com/apache/airflow/pull/43137,"[('area:providers', ''), ('provider:databricks', '')]","[{'comment_id': 2421163827, 'issue_id': 2596207184, 'author': 'rawwar', 'body': '@lucafurrer , FYI', 'created_at': datetime.datetime(2024, 10, 18, 2, 48, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2421538233, 'issue_id': 2596207184, 'author': 'rawwar', 'body': ""> If ServerTimeoutError extends TimeoutError, we should check for TimeoutError instead. It works the other way round than what we're saying the description🙂\r\n\r\nI guess,  I should take a Timeout and re-read Python stuff again :)\r\n\r\n\r\nOkay, here is what I had in mind when I wrote that. We want to be able to retry only for timeout errors that happen via the async. Which meant only aiohttp.ServerTimeoutError and asyncio.TimeoutError. But, not all types of timeout errors. I guess I'm wrong here. We should just retry for all types of timeouts."", 'created_at': datetime.datetime(2024, 10, 18, 6, 33, 41, tzinfo=datetime.timezone.utc)}]","rawwar (Issue Creator) on (2024-10-18 02:48:43 UTC): @lucafurrer , FYI

rawwar (Issue Creator) on (2024-10-18 06:33:41 UTC): I guess,  I should take a Timeout and re-read Python stuff again :)


Okay, here is what I had in mind when I wrote that. We want to be able to retry only for timeout errors that happen via the async. Which meant only aiohttp.ServerTimeoutError and asyncio.TimeoutError. But, not all types of timeout errors. I guess I'm wrong here. We should just retry for all types of timeouts.

"
2596072224,pull_request,closed,,Add cross reference for Edge Executor in Airflow docs,"Follow-up of https://github.com/apache/airflow/pull/42051 . After merging to main, I built docs for edge executor and pushed the inventory file to s3 (to s3://airflow-docs --> the one backing https://s.apache.org/airflow-docs/), so it is Airflow docs and can understand where the cross-ref is coming from since it downloads the inventory file.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-18 00:31:30+00:00,[],2024-10-18 04:42:32+00:00,2024-10-18 00:47:10+00:00,https://github.com/apache/airflow/pull/43136,"[('area:CLI', ''), ('kind:documentation', '')]","[{'comment_id': 2421349060, 'issue_id': 2596072224, 'author': 'jscheffl', 'body': 'Aaaah, @kaxil THANKS very much! I was scratching my head why the other PR always failed. I actually did not want to add this cross-reference first-hand but remember that some pre-commit check forced me for consistentcy to add it. Good that you resolved this!', 'created_at': datetime.datetime(2024, 10, 18, 4, 42, 31, tzinfo=datetime.timezone.utc)}]","jscheffl on (2024-10-18 04:42:31 UTC): Aaaah, @kaxil THANKS very much! I was scratching my head why the other PR always failed. I actually did not want to add this cross-reference first-hand but remember that some pre-commit check forced me for consistentcy to add it. Good that you resolved this!

"
2596049192,pull_request,closed,,Bump ``uv`` to ``0.4.24``,"https://github.com/astral-sh/uv/releases/tag/0.4.24

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-18 00:15:31+00:00,[],2024-10-18 00:43:47+00:00,2024-10-18 00:43:45+00:00,https://github.com/apache/airflow/pull/43135,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]",[],
2596025104,pull_request,closed,,Add docs about `cursor` extra param in Postgres Connection,"closes https://github.com/apache/airflow/issues/43120

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-17 23:55:54+00:00,[],2024-10-18 00:18:52+00:00,2024-10-18 00:18:50+00:00,https://github.com/apache/airflow/pull/43134,"[('area:providers', ''), ('kind:documentation', ''), ('provider:postgres', '')]",[],
2595712306,pull_request,closed,,Add timezone selection to new UI,"Let users specify their preferred timezone.

Add a Timezone context which reads and write to local storage, and passes the selected timezone down to all `<Time />` components. Also, always show UTC and the guessed TZ  at the top of the search list.

Closes #42817
Related #42821

<img width=""355"" alt=""Screenshot 2024-10-17 at 4 41 44 PM"" src=""https://github.com/user-attachments/assets/278a5e94-fa30-4228-bc04-0c91eb003300"">

<img width=""614"" alt=""Screenshot 2024-10-17 at 4 41 48 PM"" src=""https://github.com/user-attachments/assets/6b2f2679-2564-48a6-a79c-f30210bf14b9"">

<img width=""493"" alt=""Screenshot 2024-10-17 at 4 41 57 PM"" src=""https://github.com/user-attachments/assets/26b6a26d-f439-44f6-b1ca-7f5351c83254"">


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-10-17 20:44:22+00:00,[],2024-10-17 22:00:05+00:00,2024-10-17 22:00:03+00:00,https://github.com/apache/airflow/pull/43132,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2420583480, 'issue_id': 2595712306, 'author': 'bbovenzi', 'body': '> Cool!\r\n> \r\n> Tested and all look good!\r\n> \r\n> The only think that I favor from the previous UI: Less clicks needed to switch between time zones :-)\r\n\r\nI noticed that too with moving light/dark mode inside user settings. So I might try to redesign that', 'created_at': datetime.datetime(2024, 10, 17, 21, 12, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2420587063, 'issue_id': 2595712306, 'author': 'jscheffl', 'body': '> > Cool!\r\n> > Tested and all look good!\r\n> > The only think that I favor from the previous UI: Less clicks needed to switch between time zones :-)\r\n> \r\n> I noticed that too with moving light/dark mode inside user settings. So I might try to redesign that\r\n\r\nBut no force to have this in this PR... can also be a follow-up optimization. Critical functions in sceleton are more important (I think...)', 'created_at': datetime.datetime(2024, 10, 17, 21, 15, 5, tzinfo=datetime.timezone.utc)}]","bbovenzi (Issue Creator) on (2024-10-17 21:12:34 UTC): I noticed that too with moving light/dark mode inside user settings. So I might try to redesign that

jscheffl on (2024-10-17 21:15:05 UTC): But no force to have this in this PR... can also be a follow-up optimization. Critical functions in sceleton are more important (I think...)

"
2595627607,pull_request,closed,," Ignore ""depends_on_past"" for first run in a backfill"," Ignore ""depends_on_past"" for first run in a backfill

This implements this pre-AIP-78 behavior in AIP-78 backfill logic.

Depends on https://github.com/apache/airflow/pull/42684",dstandish,2024-10-17 20:01:07+00:00,[],2024-10-17 23:33:11+00:00,2024-10-17 23:33:10+00:00,https://github.com/apache/airflow/pull/43131,"[('area:Scheduler', 'including HA (high availability) scheduler')]",[],
2595401728,pull_request,closed,,add min version to plyvel,"`plyvel` 1.5.1 was released in January 2024. I'm setting this to the min required version as 1.5.0 is way too old(released in October 2022)


related to https://github.com/apache/airflow/issues/42989",rawwar,2024-10-17 18:04:15+00:00,[],2024-10-18 06:51:45+00:00,2024-10-18 06:25:27+00:00,https://github.com/apache/airflow/pull/43129,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2421528095, 'issue_id': 2595401728, 'author': 'potiuk', 'body': 'random k8s failure.', 'created_at': datetime.datetime(2024, 10, 18, 6, 25, 21, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-18 06:25:21 UTC): random k8s failure.

"
2595212915,pull_request,closed,,AIP-84 Get Plugins,"Add get plugins to new AIP.

Some types are `list[dict]` without more precision at this point (same as the legacy).

~~But I might explicit these types just in case the front-end need to know about them. (IT is also cleaner for users).~~ done",pierrejeambrun,2024-10-17 16:29:03+00:00,['pierrejeambrun'],2024-10-22 15:34:30+00:00,2024-10-22 15:34:28+00:00,https://github.com/apache/airflow/pull/43125,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-84', 'Modern Rest API'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]",[],
2595173326,pull_request,closed,,Add `bugraoz93` in the triage team,"Adding `bugraoz93` as a Triager/collaborator so that he can add issues to

[AIP-81: Enhanced Security in CLI via Integration of API -- Project Board](https://github.com/orgs/apache/projects/415)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-17 16:08:44+00:00,[],2024-10-17 17:20:14+00:00,2024-10-17 17:20:11+00:00,https://github.com/apache/airflow/pull/43124,"[('area:dev-tools', '')]",[],
2595072745,pull_request,closed,,Better handling masking of values of set variable ,"
<!-- Please keep an empty line above the dashes. -->
Better handling masking of values of set variable 
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",shubhamraj-git,2024-10-17 15:28:35+00:00,[],2024-10-23 08:56:34+00:00,2024-10-22 21:02:03+00:00,https://github.com/apache/airflow/pull/43123,"[('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2422473196, 'issue_id': 2595072745, 'author': 'amoghrajesh', 'body': 'Test failures look unrelated, but the static checks needs fixing. \r\n@shubhamraj-git you need to set up precommit and use it for your commits. Check: https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst', 'created_at': datetime.datetime(2024, 10, 18, 13, 25, tzinfo=datetime.timezone.utc)}]","amoghrajesh on (2024-10-18 13:25:00 UTC): Test failures look unrelated, but the static checks needs fixing. 
@shubhamraj-git you need to set up precommit and use it for your commits. Check: https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst

"
2595071772,pull_request,closed,,Fixed failing static checks & provider tests,"Main is failing on static checks. Example: https://github.com/apache/airflow/actions/runs/11387569851/job/31683018728?pr=43121

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-17 15:28:09+00:00,[],2024-10-17 16:19:22+00:00,2024-10-17 16:19:20+00:00,https://github.com/apache/airflow/pull/43122,"[('area:providers', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)'), ('provider:apache-hdfs', '')]","[{'comment_id': 2419917941, 'issue_id': 2595071772, 'author': 'kaxil', 'body': 'I am trying to fix the providers test failures too from https://github.com/apache/airflow/pull/43045', 'created_at': datetime.datetime(2024, 10, 17, 15, 51, 40, tzinfo=datetime.timezone.utc)}]","kaxil (Issue Creator) on (2024-10-17 15:51:40 UTC): I am trying to fix the providers test failures too from https://github.com/apache/airflow/pull/43045

"
2594995550,pull_request,closed,,Bump to `0.4.23` to fix a uv bug,"Now that https://github.com/astral-sh/uv/issues/8236 is fixed (a bug in uv 0.4.22), we can remove `--no-sources` (used in `uv pip install`) introduced in https://github.com/apache/airflow/pull/43056

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-17 14:56:43+00:00,[],2024-10-17 15:30:06+00:00,2024-10-17 15:30:04+00:00,https://github.com/apache/airflow/pull/43121,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes'), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2594820966,pull_request,closed,,Fix instruction for docker compose(tested on Mac M1),"Make fixes that allows to run airflow dags in pycharm debugger on Mac M1

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Udbv,2024-10-17 13:53:37+00:00,[],2024-10-24 08:55:23+00:00,2024-10-23 15:03:33+00:00,https://github.com/apache/airflow/pull/43119,"[('kind:documentation', ''), ('type:doc-only', 'Changelog: Doc Only')]","[{'comment_id': 2419618379, 'issue_id': 2594820966, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 17, 13, 53, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2421661826, 'issue_id': 2594820966, 'author': 'Udbv', 'body': 'Thanks, @potiuk  @shahar1 Seems like I fixed linter issue', 'created_at': datetime.datetime(2024, 10, 18, 7, 36, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2432539406, 'issue_id': 2594820966, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 23, 15, 3, 37, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-17 13:53:42 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

Udbv (Issue Creator) on (2024-10-18 07:36:11 UTC): Thanks, @potiuk  @shahar1 Seems like I fixed linter issue

boring-cyborg[bot] on (2024-10-23 15:03:37 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2594679154,pull_request,closed,,Cope with Pycharm's oddity in detecting namespace packages,"Without the `__path__` assignment being the very first line of the file
(including before any import) it doesn't detect this correctly.
",ashb,2024-10-17 13:01:51+00:00,[],2025-01-11 19:44:24+00:00,2024-10-29 21:19:01+00:00,https://github.com/apache/airflow/pull/43116,"[('area:providers', '')]","[{'comment_id': 2419488458, 'issue_id': 2594679154, 'author': 'ashb', 'body': '@shahar1 @kaxil Could one of you test if this fixes it please?', 'created_at': datetime.datetime(2024, 10, 17, 13, 2, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2419549285, 'issue_id': 2594679154, 'author': 'kaxil', 'body': '> @shahar1 @kaxil Could one of you test if this fixes it please?\r\n\r\nYup, works now', 'created_at': datetime.datetime(2024, 10, 17, 13, 27, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2419686751, 'issue_id': 2594679154, 'author': 'vincbeck', 'body': 'Yeah I tried in #43081 but could not make it work. Mypy/Python is not happy about it and raise a `SyntaxError`', 'created_at': datetime.datetime(2024, 10, 17, 14, 18, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2420541520, 'issue_id': 2594679154, 'author': 'ashb', 'body': ""https://youtrack.jetbrains.com/issue/PY-46690/Allow-all-imports-from-the-same-named-packages-if-path-manipulation-in-init-is-detected is the closest current issue I've found, but not exactly the same"", 'created_at': datetime.datetime(2024, 10, 17, 20, 45, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2420903132, 'issue_id': 2594679154, 'author': 'potiuk', 'body': 'Let\'s just exclude `airflow.__init__.py` from automatically adding `from __future__ import annotations` and convert it back to use ""regular"" typing.\r\n\r\nWe\'ve done that for Pydantic classes before and still doing it for some test files https://github.com/apache/airflow/blob/main/pyproject.toml#L355', 'created_at': datetime.datetime(2024, 10, 18, 0, 13, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2422964143, 'issue_id': 2594679154, 'author': 'potiuk', 'body': 'I added alternative implementation - and it seems to work for me https://github.com/apache/airflow/pull/43173 - just by removing `from future` and adding ignore rules from ruff seem to do the job as I suspected. Actually `airflow/__init__.py` did not require any change beceause it does not use postponed evaluation of types PEP563 at all.', 'created_at': datetime.datetime(2024, 10, 18, 17, 52, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445350209, 'issue_id': 2594679154, 'author': 'potiuk', 'body': ""Closing this one. It's already fixed."", 'created_at': datetime.datetime(2024, 10, 29, 21, 19, 1, tzinfo=datetime.timezone.utc)}]","ashb (Issue Creator) on (2024-10-17 13:02:11 UTC): @shahar1 @kaxil Could one of you test if this fixes it please?

kaxil on (2024-10-17 13:27:26 UTC): Yup, works now

vincbeck on (2024-10-17 14:18:53 UTC): Yeah I tried in #43081 but could not make it work. Mypy/Python is not happy about it and raise a `SyntaxError`

ashb (Issue Creator) on (2024-10-17 20:45:53 UTC): https://youtrack.jetbrains.com/issue/PY-46690/Allow-all-imports-from-the-same-named-packages-if-path-manipulation-in-init-is-detected is the closest current issue I've found, but not exactly the same

potiuk on (2024-10-18 00:13:46 UTC): Let's just exclude `airflow.__init__.py` from automatically adding `from __future__ import annotations` and convert it back to use ""regular"" typing.

We've done that for Pydantic classes before and still doing it for some test files https://github.com/apache/airflow/blob/main/pyproject.toml#L355

potiuk on (2024-10-18 17:52:11 UTC): I added alternative implementation - and it seems to work for me https://github.com/apache/airflow/pull/43173 - just by removing `from future` and adding ignore rules from ruff seem to do the job as I suspected. Actually `airflow/__init__.py` did not require any change beceause it does not use postponed evaluation of types PEP563 at all.

potiuk on (2024-10-29 21:19:01 UTC): Closing this one. It's already fixed.

"
2594679058,pull_request,closed,,Provider package Edge: Edge worker supports queue handling,"This PR adds the possibility to the Edge Worker to add or remove queues in the queue field in the DB and the worker gets this information and starts consuming tasks of queues or stops consuming task of queues. 

This makes future handling worker queues from main instance possible without restarting the worker on a different queue.
",AutomationDev85,2024-10-17 13:01:48+00:00,[],2024-10-18 07:51:11+00:00,2024-10-18 07:51:11+00:00,https://github.com/apache/airflow/pull/43115,"[('area:providers', ''), ('provider:edge', 'Edge Executor / Worker (AIP-69)')]","[{'comment_id': 2421512147, 'issue_id': 2594679058, 'author': 'jscheffl', 'body': 'As since yesterday we are on main with the edge provider, please also update the version number of the provider.', 'created_at': datetime.datetime(2024, 10, 18, 6, 11, 54, tzinfo=datetime.timezone.utc)}]","jscheffl on (2024-10-18 06:11:54 UTC): As since yesterday we are on main with the edge provider, please also update the version number of the provider.

"
2594386057,pull_request,closed,,Update unit_tests.rst links error,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
The link of `local virtualenv` in the unit_tests doc is not exist, it should be the upper level file `../07_local_virtualenv.rst`.
<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",yangyulely,2024-10-17 11:05:03+00:00,[],2024-10-18 07:49:04+00:00,2024-10-17 13:49:25+00:00,https://github.com/apache/airflow/pull/43114,"[('area:dev-tools', '')]",[],
2594338446,pull_request,closed,,Pin debian image version for Dataproc SparkR system test,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

In this PR I have pinned the debian image version for Dataproc SparkR system test. This change is needed because in the new version of debian image the SparkR tool does not exist for some reason.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",MaksYermak,2024-10-17 10:44:46+00:00,[],2024-10-17 21:57:33+00:00,2024-10-17 21:57:33+00:00,https://github.com/apache/airflow/pull/43113,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]",[],
2594149206,pull_request,closed,,feat(providers/fab): Use asset in common provider,"## Why
As apache-airflow-providers-common-compat 1.2.1 has been released, we can reuse the asset-related code inside it.

## What
Reuse asset-related code in apache-airflow-providers-common-compat 1.2.1


<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-10-17 09:27:37+00:00,[],2024-10-17 17:03:29+00:00,2024-10-17 17:03:28+00:00,https://github.com/apache/airflow/pull/43112,"[('area:providers', ''), ('provider:fab', '')]",[],
2594128071,pull_request,closed,,feat(providers/openlineage): Use asset in common provider,"## Why
As apache-airflow-providers-common-compat 1.2.1 has been released, we can reuse the asset-related code inside it.

## What
Reuse asset-related code in apache-airflow-providers-common-compat 1.2.1


<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-10-17 09:18:02+00:00,[],2024-10-18 00:38:39+00:00,2024-10-18 00:38:37+00:00,https://github.com/apache/airflow/pull/43111,"[('area:providers', ''), ('provider:openlineage', 'AIP-53')]",[],
2594117293,pull_request,closed,,feat(providers/amazon): Use asset in common provider,"## Why
As apache-airflow-providers-common-compat 1.2.1 has been released, we can reuse the asset-related code inside it.

## What
Reuse asset-related code in apache-airflow-providers-common-compat 1.2.1



<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-10-17 09:13:12+00:00,[],2024-10-17 20:53:49+00:00,2024-10-17 20:53:49+00:00,https://github.com/apache/airflow/pull/43110,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]",[],
2593986201,pull_request,closed,,Extend ruff to utilize f-string-in-exception (EM102),"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Should make the exceptions more readable, see [docs](https://docs.astral.sh/ruff/rules/f-string-in-exception/#f-string-in-exception-em102).

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",shahar1,2024-10-17 08:17:34+00:00,[],2024-10-24 09:03:07+00:00,2024-10-24 09:03:07+00:00,https://github.com/apache/airflow/pull/43109,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('area:API', ""Airflow's REST/HTTP API""), ('provider:trino', ''), ('provider:telegram', ''), ('provider:vertica', ''), ('provider:weaviate', ''), ('provider:teradata', '')]",[],
2593938141,pull_request,closed,,"Revert ""Fix flaky `test_get_dags` in FastAPI routes""","Reverts apache/airflow#43100

This should be reverted because:
- Order actually matters, especially when we are testing `order_by` query parameters. (The returned items must follow the queried order)
- This is not specific to the `get_dags` endpoints but any endpoint returning a list, because the database natural order is not guarantee. (based on insertion etc, etc,). This happens in case of equality on the first order_by criteria.


A fix is already opened here https://github.com/apache/airflow/pull/43085. It was there in the first place but got removed by mistake in a recent PR (yesterday or the day before that). To my knowledge we didn't have any issue reported before that.",pierrejeambrun,2024-10-17 07:55:54+00:00,[],2024-10-17 16:58:36+00:00,2024-10-17 10:07:07+00:00,https://github.com/apache/airflow/pull/43108,[],"[{'comment_id': 2419106405, 'issue_id': 2593938141, 'author': 'kaxil', 'body': ""Damn -- missed the order_by's"", 'created_at': datetime.datetime(2024, 10, 17, 10, 5, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2420051612, 'issue_id': 2593938141, 'author': 'potiuk', 'body': 'Damn...', 'created_at': datetime.datetime(2024, 10, 17, 16, 58, 34, tzinfo=datetime.timezone.utc)}]","kaxil on (2024-10-17 10:05:44 UTC): Damn -- missed the order_by's

potiuk on (2024-10-17 16:58:34 UTC): Damn...

"
2593808842,pull_request,closed,,SqlSensor enhancement: #37437,"Allow SqlSensor to inspect the entire result row by adding a selector field. 
This is useful to customize the success/failure criteria instead of just the first cell.
closes: #37437
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #37437

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vVv-AA,2024-10-17 06:56:24+00:00,[],2024-10-17 22:13:31+00:00,2024-10-17 22:13:28+00:00,https://github.com/apache/airflow/pull/43107,"[('area:providers', ''), ('provider:common-sql', '')]","[{'comment_id': 2418698406, 'issue_id': 2593808842, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 17, 6, 56, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2420695821, 'issue_id': 2593808842, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 17, 22, 13, 31, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-17 06:56:29 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-10-17 22:13:31 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2593786988,pull_request,closed,,Accept task_key as an argument in DatabricksNotebookOperator,"fixes #41816 , #44250",rawwar,2024-10-17 06:46:52+00:00,[],2024-12-13 14:46:57+00:00,2024-12-13 14:46:57+00:00,https://github.com/apache/airflow/pull/43106,"[('area:providers', ''), ('provider:databricks', '')]","[{'comment_id': 2453251935, 'issue_id': 2593786988, 'author': 'rawwar', 'body': 'This PR will be on hold for another week. I have issues with my Databricks account and cannot test it right now.\r\n\r\nEDIT: Still no access(20 Nov)', 'created_at': datetime.datetime(2024, 11, 3, 1, 25, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2541617827, 'issue_id': 2593786988, 'author': 'rawwar', 'body': 'I no longer have access to a Databricks account. Hence, this PR can be continued by anyone who have access to a Databricks account.', 'created_at': datetime.datetime(2024, 12, 13, 14, 46, 38, tzinfo=datetime.timezone.utc)}]","rawwar (Issue Creator) on (2024-11-03 01:25:47 UTC): This PR will be on hold for another week. I have issues with my Databricks account and cannot test it right now.

EDIT: Still no access(20 Nov)

rawwar (Issue Creator) on (2024-12-13 14:46:38 UTC): I no longer have access to a Databricks account. Hence, this PR can be continued by anyone who have access to a Databricks account.

"
2593403067,pull_request,closed,,Add min version to python-ldap,"The latest `python-ldap` version available is 3.4.4, and it was released in November 2023. 

When we install python-ldap without a pin, we install 3.4.4. Hence, I'm making the min version to be 3.4.4. 

related to https://github.com/apache/airflow/issues/42989",rawwar,2024-10-17 01:56:10+00:00,[],2024-10-17 17:16:58+00:00,2024-10-17 16:57:29+00:00,https://github.com/apache/airflow/pull/43104,"[('area:dependencies', 'Issues related to dependencies problems')]","[{'comment_id': 2418580345, 'issue_id': 2593403067, 'author': 'rawwar', 'body': ""Since, no merge conflicts don't want to update branch again as tests have been facing intermittent and unrelated issues and I'm not sure if it will be a green next time."", 'created_at': datetime.datetime(2024, 10, 17, 6, 3, 43, tzinfo=datetime.timezone.utc)}]","rawwar (Issue Creator) on (2024-10-17 06:03:43 UTC): Since, no merge conflicts don't want to update branch again as tests have been facing intermittent and unrelated issues and I'm not sure if it will be a green next time.

"
2593300741,pull_request,closed,,AIP-84 Migrate patch a connection to FastAPI API,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
closes: #42592. 
Include, making fields nullable for patch endpoints for backward compatibility. 


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bugraoz93,2024-10-17 00:08:17+00:00,[],2024-11-06 08:43:56+00:00,2024-11-06 08:43:56+00:00,https://github.com/apache/airflow/pull/43102,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2441320841, 'issue_id': 2593300741, 'author': 'pierrejeambrun', 'body': 'I just pushed one commit to remove a remnent of old code `_parse_comma_separated_query_params`. PR rebased. Should be good to merge.', 'created_at': datetime.datetime(2024, 10, 28, 11, 27, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441643558, 'issue_id': 2593300741, 'author': 'pierrejeambrun', 'body': 'I think we have the same issue here, we cannot `update` the `password` field. This should be possible, and the returned password should be redacted I believe. Otherwise we have no way for a user to update the password of a connection, or set it (event the POST create connection does not allow it in its current state.)', 'created_at': datetime.datetime(2024, 10, 28, 13, 48, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442465240, 'issue_id': 2593300741, 'author': 'bugraoz93', 'body': '> I just pushed one commit to remove a remnent of old code `_parse_comma_separated_query_params`. PR rebased. Should be good to merge.\r\n\r\nI totally missed this one, thanks for the changes! :)', 'created_at': datetime.datetime(2024, 10, 28, 19, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442472690, 'issue_id': 2593300741, 'author': 'bugraoz93', 'body': ""> I think we should also make consistant the behavior for `PATCH` regarding `None` value.\r\n> \r\n> Here when there is a mask you take them. And when there is no mask, you filter them out.\r\n> \r\n> I did something different for `Pool` which I think can be extented. When there is a mask, same thing, we use values. When there is no mask, we validate that the payload is valide by it's own, i.e it's a valid db entity by its own, and we use everything. (none or not).\r\n> \r\n> The idea is to allow someone to not specify `mask` and reset some fields to `None` if needed.\r\n\r\nI think I looked from the lazy path when no parameter, no value to you :) Saw your changes. Looks good and makes sense! I agree, we should have a common approach for common methods because what we are doing at the end is pretty similar."", 'created_at': datetime.datetime(2024, 10, 28, 19, 43, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2443576945, 'issue_id': 2593300741, 'author': 'pierrejeambrun', 'body': ""For 'common' behavior of null values we can do that in another PR. That is not really specific to this one. I think we can just handle the 'password', then merge it, maybe you can take care of making all `PATCH` consistent regarding none values in a follow up, if that sounds good ?"", 'created_at': datetime.datetime(2024, 10, 29, 8, 39, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2444749527, 'issue_id': 2593300741, 'author': 'bugraoz93', 'body': ""> For 'common' behavior of null values we can do that in another PR. That is not really specific to this one. I think we can just handle the 'password', then merge it, maybe you can take care of making all `PATCH` consistent regarding none values in a follow up, if that sounds good ?\n\nYeap, it sounds perfect! I am going to take care of that after finishing the `password` part. There is a small work left for password. I couldn't make redact work in the tests, which I will check it out today and push it to both PRs related to this"", 'created_at': datetime.datetime(2024, 10, 29, 16, 16, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455619562, 'issue_id': 2593300741, 'author': 'bugraoz93', 'body': 'Tests should be fixed in https://github.com/apache/airflow/pull/43654.', 'created_at': datetime.datetime(2024, 11, 4, 20, 17, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457964395, 'issue_id': 2593300741, 'author': 'bugraoz93', 'body': '> Looking good.\r\n> \r\n> Need rebasing to fix conflicts, we can merge after.\r\n\r\nMany thanks for rebasing and merging the other PR! You saved me from facing the conflict twice :pray: Rebased.', 'created_at': datetime.datetime(2024, 11, 5, 19, 13, 35, tzinfo=datetime.timezone.utc)}]","pierrejeambrun on (2024-10-28 11:27:16 UTC): I just pushed one commit to remove a remnent of old code `_parse_comma_separated_query_params`. PR rebased. Should be good to merge.

pierrejeambrun on (2024-10-28 13:48:48 UTC): I think we have the same issue here, we cannot `update` the `password` field. This should be possible, and the returned password should be redacted I believe. Otherwise we have no way for a user to update the password of a connection, or set it (event the POST create connection does not allow it in its current state.)

bugraoz93 (Issue Creator) on (2024-10-28 19:39:00 UTC): I totally missed this one, thanks for the changes! :)

bugraoz93 (Issue Creator) on (2024-10-28 19:43:14 UTC): I think I looked from the lazy path when no parameter, no value to you :) Saw your changes. Looks good and makes sense! I agree, we should have a common approach for common methods because what we are doing at the end is pretty similar.

pierrejeambrun on (2024-10-29 08:39:03 UTC): For 'common' behavior of null values we can do that in another PR. That is not really specific to this one. I think we can just handle the 'password', then merge it, maybe you can take care of making all `PATCH` consistent regarding none values in a follow up, if that sounds good ?

bugraoz93 (Issue Creator) on (2024-10-29 16:16:49 UTC): Yeap, it sounds perfect! I am going to take care of that after finishing the `password` part. There is a small work left for password. I couldn't make redact work in the tests, which I will check it out today and push it to both PRs related to this

bugraoz93 (Issue Creator) on (2024-11-04 20:17:04 UTC): Tests should be fixed in https://github.com/apache/airflow/pull/43654.

bugraoz93 (Issue Creator) on (2024-11-05 19:13:35 UTC): Many thanks for rebasing and merging the other PR! You saved me from facing the conflict twice :pray: Rebased.

"
2593178435,pull_request,closed,,Speed-up rebuilding of CI image after pip/uv version change,"So far `pip` and `uv` version change caused clean reinstallation of the CI image `pip` dependencies - including the cached layer from main - which pre-installed airlfow to speed up reinstallation of ""final"" airflow package.

However since we started to update `uv` more frequently - those frequent rebuilds are ... to costly (about 3 minutes extra when uv version changed.

This change implements optimization of this workflow - the main cache installation is done using LATEST uv or pip and only after that UV and PIP get reinstalled to the fixed version specified in Dockerfile.

Related: #42999

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-16 22:28:19+00:00,[],2024-10-17 21:43:51+00:00,2024-10-17 21:43:48+00:00,https://github.com/apache/airflow/pull/43101,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]","[{'comment_id': 2420063831, 'issue_id': 2593178435, 'author': 'potiuk', 'body': '> LGTM, will the failed checks be fixed after merging?\r\n\r\nI think that was an intermittent issue - but let me rebase and see (I have to do it anyway after uv has been upgraded :D AGAIN) .', 'created_at': datetime.datetime(2024, 10, 17, 17, 5, 8, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-10-17 17:05:08 UTC): I think that was an intermittent issue - but let me rebase and see (I have to do it anyway after uv has been upgraded :D AGAIN) .

"
2593086328,pull_request,closed,,Fix flaky `test_get_dags` in FastAPI routes,"closes https://github.com/apache/airflow/issues/43099

Solution: changed them to sets since the order doesn't matter for what we are trying to verify

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-16 21:22:42+00:00,[],2024-10-17 08:02:18+00:00,2024-10-16 21:48:35+00:00,https://github.com/apache/airflow/pull/43100,[],"[{'comment_id': 2418842008, 'issue_id': 2593086328, 'author': 'pierrejeambrun', 'body': 'I just suggested a rervert of that https://github.com/apache/airflow/pull/43108, more information can be found in the description of the PR.', 'created_at': datetime.datetime(2024, 10, 17, 8, 2, 17, tzinfo=datetime.timezone.utc)}]","pierrejeambrun on (2024-10-17 08:02:17 UTC): I just suggested a rervert of that https://github.com/apache/airflow/pull/43108, more information can be found in the description of the PR.

"
2592968784,pull_request,closed,,Deprecate `default` auth backend in Airflow 2.x,"Backport version of #43096

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-10-16 20:19:53+00:00,[],2024-10-17 14:55:04+00:00,2024-10-16 21:27:36+00:00,https://github.com/apache/airflow/pull/43098,"[('area:API', ""Airflow's REST/HTTP API"")]","[{'comment_id': 2417997061, 'issue_id': 2592968784, 'author': 'vincbeck', 'body': '`default` auth backend is only used in experimental API. No need to add deprecations since the experimental API was already deprecated', 'created_at': datetime.datetime(2024, 10, 16, 21, 27, 34, tzinfo=datetime.timezone.utc)}]","vincbeck (Issue Creator) on (2024-10-16 21:27:34 UTC): `default` auth backend is only used in experimental API. No need to add deprecations since the experimental API was already deprecated

"
2592966860,pull_request,closed,,Deprecate `default` auth backend in Airflow 2.x,"Backport version of #43096

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-10-16 20:19:16+00:00,[],2024-10-17 14:55:03+00:00,2024-10-16 20:19:22+00:00,https://github.com/apache/airflow/pull/43097,"[('area:CLI', ''), ('area:dev-tools', ''), ('area:API', ""Airflow's REST/HTTP API""), ('area:production-image', 'Production image improvements and fixes')]",[],
2592957145,pull_request,closed,,Remove `default` as auth backend,"`Default` is here for historic reasons but it also not working as expected. It works the same way as `session` auth backend, it does not allow all request as it should be.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-10-16 20:13:37+00:00,[],2024-10-18 16:49:02+00:00,2024-10-18 16:49:00+00:00,https://github.com/apache/airflow/pull/43096,"[('area:webserver', 'Webserver related Issues'), ('area:API', ""Airflow's REST/HTTP API"")]",[],
2592952158,pull_request,closed,,Update constraints to broken canary,Fix failing canary in https://github.com/apache/airflow/actions/runs/11372524573/job/31637095398,jscheffl,2024-10-16 20:10:36+00:00,[],2024-10-16 21:06:45+00:00,2024-10-16 20:32:14+00:00,https://github.com/apache/airflow/pull/43095,[],[],
2592869353,pull_request,closed,,Doc: Update example for dbt Cloud connection string,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Updating documentation for specifying a connection string for dbt Cloud.  There's been some confusion around the `getdbt` portion of the host within the conn string, which is only used if you're deployed on our North America multi-tenant instance.  This update just makes it more clear what the connection string should be when deployed elsewhere, which is increasingly more and more customers.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",dpguthrie,2024-10-16 19:35:22+00:00,[],2024-10-17 21:35:31+00:00,2024-10-17 21:35:27+00:00,https://github.com/apache/airflow/pull/43094,"[('area:providers', ''), ('kind:documentation', ''), ('provider:dbt-cloud', '')]","[{'comment_id': 2417774415, 'issue_id': 2592869353, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 10, 16, 19, 35, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2420629944, 'issue_id': 2592869353, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 17, 21, 35, 29, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-10-16 19:35:29 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-10-17 21:35:29 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2592721437,pull_request,closed,,Update lint rules,"Update some eslint rules that were too onerous.

Sub branch of #43090 so only bother looking at  the [latest commit](https://github.com/apache/airflow/pull/43093/commits/6e4e4f97db4c4bb1ea6157c803845ff4a163f4eb)

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-10-16 18:34:14+00:00,[],2024-10-17 16:02:45+00:00,2024-10-17 16:02:43+00:00,https://github.com/apache/airflow/pull/43093,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2419942246, 'issue_id': 2592721437, 'author': 'bbovenzi', 'body': 'CI failures unrelated.', 'created_at': datetime.datetime(2024, 10, 17, 16, 2, 40, tzinfo=datetime.timezone.utc)}]","bbovenzi (Issue Creator) on (2024-10-17 16:02:40 UTC): CI failures unrelated.

"
2592608320,pull_request,closed,,Add ClientConnectorError to be a retryable error in databricks provider,"closes #43080
",rawwar,2024-10-16 17:43:18+00:00,[],2024-10-17 11:17:53+00:00,2024-10-17 11:17:53+00:00,https://github.com/apache/airflow/pull/43091,"[('area:providers', ''), ('provider:databricks', '')]",[],
2592590820,pull_request,closed,,Initialize dashboard page with health info,"Initialize the Dashboard page with the health stats

Related: #42825

Dark:
<img width=""661"" alt=""Screenshot 2024-10-16 at 1 37 17 PM"" src=""https://github.com/user-attachments/assets/489670ca-98f8-41a9-b919-f921698e8c51"">


Light:
<img width=""630"" alt=""Screenshot 2024-10-16 at 1 34 56 PM"" src=""https://github.com/user-attachments/assets/d986c0e1-cef1-4ee7-bf89-e0af2ce7dace"">

Follow up PRs needed:
- pass is_standalone variable to determine when to render dag_processor
- update theme to color blind friendly colors
- fix some eslint rules that are annoying
- add timezone provider to improve timestamp rendering

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-10-16 17:36:25+00:00,[],2024-10-16 20:06:57+00:00,2024-10-16 20:06:55+00:00,https://github.com/apache/airflow/pull/43090,"[('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-38', 'Modern Web Application')]",[],
2592475448,pull_request,closed,,Added task_instance_mutation_hook for mapped operator index 0 (#42661),"* Added task_instance_mutation_hook for mapped operator index 0

* Added unit test

Back-port of #42661 to v2-10-test",jscheffl,2024-10-16 16:49:38+00:00,[],2024-10-23 09:02:01+00:00,2024-10-16 18:44:27+00:00,https://github.com/apache/airflow/pull/43089,"[('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2592361063,pull_request,closed,,Fix selective checks when only pyproject.toml changes,"In case only pyproject.toml changes we should automatically build CI image as we need to run full set of static checks - including mypy and other tools.

This change triggers ci-image for such case and it also fixes a subtle bug where ""pyproject_toml_changed"" was always set to true (but nothing depended on it, because we are checking if build dependencies changed in pyproject.toml to trigger full build as most of the build logic and dependencies is in hatch_build.py

The change first now attempts to see if the pyprject.toml changed at all (i.e. if pyprooject.toml is in the list of files that are changed in the commit) and only then reads the content of old and new version of pyproject.toml to compare them. This will make selective checks a bit faster as it won't run two git commands when pyproject.toml has not changed.

Also tests_common are now added to ""all sources"" group which should trigger tests when only tests_common change.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-10-16 16:08:01+00:00,[],2024-10-16 17:47:29+00:00,2024-10-16 17:47:27+00:00,https://github.com/apache/airflow/pull/43088,"[('area:dev-tools', '')]",[],
2592256150,pull_request,closed,,Fixed failing static checks,"For some reasons https://github.com/apache/airflow/pull/43077 passed but main was failing. This PR fixes it.

Example failure: https://github.com/apache/airflow/actions/runs/11368623270/job/31624624566?pr=43086

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-10-16 15:33:50+00:00,[],2024-10-16 15:45:54+00:00,2024-10-16 15:45:51+00:00,https://github.com/apache/airflow/pull/43087,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('area:logging', ''), ('area:secrets', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)'), ('provider:cncf-kubernetes', 'Kubernetes provider related issues'), ('provider:celery', ''), ('provider:alibaba', ''), ('provider:atlassian-jira', ''), ('provider:apache-hive', ''), ('provider:apache-spark', ''), ('provider:apache-livy', '')]",[],
2592198725,pull_request,closed,,Fix UI lint pre-commit hook,"With the recent reshape of the FastAPI API filestructure, I think we missed that point. Pre-commit was failing to detect updates on the generated-spec, and the frontend code was not regenerated.

> Be carefull with AIP-84 PRs that might have rebased while the fix was not there. CI will be green but can be in fact red, be extra cautious and ask to rebase to avoid breaking main.",pierrejeambrun,2024-10-16 15:13:56+00:00,['pierrejeambrun'],2024-10-16 15:41:53+00:00,2024-10-16 15:41:32+00:00,https://github.com/apache/airflow/pull/43086,"[('area:dev-tools', '')]","[{'comment_id': 2417136377, 'issue_id': 2592198725, 'author': 'pierrejeambrun', 'body': 'cc: @kaxil', 'created_at': datetime.datetime(2024, 10, 16, 15, 15, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2417140128, 'issue_id': 2592198725, 'author': 'kaxil', 'body': '> With the recent reshape of the FastAPI API filestructure, I think we missed that point. Pre-commit was failing to detect updates on the generated-spec, and the frontend code was not regenerated.\r\n> \r\n> > Be carefull with AIP-84 PRs that might have rebased while the fix was not there. CI will be green but can be in fact red, we can ask to rebase when this is merged.\r\n\r\nWhoops! thanks for fixing it', 'created_at': datetime.datetime(2024, 10, 16, 15, 17, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2417215392, 'issue_id': 2592198725, 'author': 'kaxil', 'body': 'I verified it locally, it works. The other static check failures will be fixed in https://github.com/apache/airflow/pull/43087', 'created_at': datetime.datetime(2024, 10, 16, 15, 41, 51, tzinfo=datetime.timezone.utc)}]","pierrejeambrun (Issue Creator) on (2024-10-16 15:15:47 UTC): cc: @kaxil

kaxil on (2024-10-16 15:17:13 UTC): Whoops! thanks for fixing it

kaxil on (2024-10-16 15:41:51 UTC): I verified it locally, it works. The other static check failures will be fixed in https://github.com/apache/airflow/pull/43087

"
2592190895,pull_request,closed,,Ensure stable secondary ordering,"The secondary default ordering is just to be sure that in case of equality on the primary ordering criteria objects follow a stable ordering. This is not the case by default and I added that because I obversed some flakyness on some tests due to that. 

Was removed in https://github.com/apache/airflow/pull/42782 by mistake. (secondary ordering is the same as the first one)",pierrejeambrun,2024-10-16 15:10:41+00:00,['pierrejeambrun'],2024-10-17 10:40:08+00:00,2024-10-17 10:40:06+00:00,https://github.com/apache/airflow/pull/43085,"[('AIP-84', 'Modern Rest API')]","[{'comment_id': 2417122581, 'issue_id': 2592190895, 'author': 'pierrejeambrun', 'body': 'cc: @bugraoz93', 'created_at': datetime.datetime(2024, 10, 16, 15, 10, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2417378855, 'issue_id': 2592190895, 'author': 'bugraoz93', 'body': '@pierrejeambrun  This was the method I mentioned as unused. Thanks for including the removal and the fix! \r\nIt looks great!', 'created_at': datetime.datetime(2024, 10, 16, 16, 45, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2417395445, 'issue_id': 2592190895, 'author': 'bugraoz93', 'body': 'I believe the fix for the failing check has already been merged in here #43087', 'created_at': datetime.datetime(2024, 10, 16, 16, 54, 18, tzinfo=datetime.timezone.utc)}]","pierrejeambrun (Issue Creator) on (2024-10-16 15:10:58 UTC): cc: @bugraoz93

bugraoz93 on (2024-10-16 16:45:52 UTC): @pierrejeambrun  This was the method I mentioned as unused. Thanks for including the removal and the fix! 
It looks great!

bugraoz93 on (2024-10-16 16:54:18 UTC): I believe the fix for the failing check has already been merged in here #43087

"
2592181045,pull_request,closed,,Migrate the public endpoint Get DAG Source to FastAPI,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Closes: https://github.com/apache/airflow/issues/42876
Related: https://github.com/apache/airflow/issues/42370

This migrates the Get DAG Source API from `api_connexion` to `api_fastapi`.
",omkar-foss,2024-10-16 15:06:39+00:00,[],2024-11-04 05:35:58+00:00,2024-10-30 14:57:54+00:00,https://github.com/apache/airflow/pull/43084,"[('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2443313261, 'issue_id': 2592181045, 'author': 'omkar-foss', 'body': ""Please ignore the request for review notification, reviewers got auto-added due to a large diff w.r.t `main`. I'll correct the reviewers list manually.\r\n\r\nMy apologies for the spam! :)"", 'created_at': datetime.datetime(2024, 10, 29, 6, 23, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2443479683, 'issue_id': 2592181045, 'author': 'omkar-foss', 'body': 'All conversations resolved, synced with `main` and conflicts resolved. PR ready for review.', 'created_at': datetime.datetime(2024, 10, 29, 7, 47, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2446219728, 'issue_id': 2592181045, 'author': 'omkar-foss', 'body': '> Nice. Needs rebasing to fix conflicts but ready to merge after that.\r\n\r\nSynced with `main` and fixed conflicts! ✅', 'created_at': datetime.datetime(2024, 10, 30, 8, 51, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2447429708, 'issue_id': 2592181045, 'author': 'pierrejeambrun', 'body': 'Nice work, thanks', 'created_at': datetime.datetime(2024, 10, 30, 14, 57, 51, tzinfo=datetime.timezone.utc)}]","omkar-foss (Issue Creator) on (2024-10-29 06:23:17 UTC): Please ignore the request for review notification, reviewers got auto-added due to a large diff w.r.t `main`. I'll correct the reviewers list manually.

My apologies for the spam! :)

omkar-foss (Issue Creator) on (2024-10-29 07:47:20 UTC): All conversations resolved, synced with `main` and conflicts resolved. PR ready for review.

omkar-foss (Issue Creator) on (2024-10-30 08:51:54 UTC): Synced with `main` and fixed conflicts! ✅

pierrejeambrun on (2024-10-30 14:57:51 UTC): Nice work, thanks

"
2592147205,pull_request,closed,,AIP-84 Get Variables,Related to: https://github.com/apache/airflow/issues/42370,pierrejeambrun,2024-10-16 14:54:16+00:00,['pierrejeambrun'],2024-10-18 14:23:49+00:00,2024-10-18 14:23:48+00:00,https://github.com/apache/airflow/pull/43083,"[('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-84', 'Modern Rest API'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]",[],
