id,type,state,state_reason,title,body,author,created_at,assignees,updated_at,closed_at,url,labels,comments_list,comment_thread
2549467920,pull_request,closed,,fix(providers/common/sql): add dummy connection setter for backward compatibility,"## Why

The introduction of [connection property](https://github.com/apache/airflow/pull/40751/files#diff-6e1b2f961cb951d05d66d2d814ef5f6d8f8bf8f43c40fb5d40e27a031fed8dd7R208) breaks `apache-airflow-providers-mysql<5.7.1`, `apache-airflow-providers-elasticsearch<5.5.1` and `apache-airflow-providers-postgres<5.13.0`

## What
Add a dummy connection setter 

Closes: #42452

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-09-26 04:12:56+00:00,[],2024-09-26 12:39:02+00:00,2024-09-26 12:39:00+00:00,https://github.com/apache/airflow/pull/42490,"[('area:providers', ''), ('provider:common-sql', ''), ('provider:mysql', '')]","[{'comment_id': 2376217630, 'issue_id': 2549467920, 'author': 'Lee-W', 'body': ""> This stops the error, but why does it work? Were those providers never reading `self.connection` again?\r\n\r\nThey're reading through the newly introduced property `connection` (since common-sql > 1.17.0)"", 'created_at': datetime.datetime(2024, 9, 26, 8, 2, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2376302938, 'issue_id': 2549467920, 'author': 'dabla', 'body': 'Does the dummy setter solve this issue now?  The problem is caused by my [PR 40751](https://github.com/apache/airflow/pull/40751).', 'created_at': datetime.datetime(2024, 9, 26, 8, 33, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2376351359, 'issue_id': 2549467920, 'author': 'Lee-W', 'body': ""> Can you patch this change on old common/sql and test with the affected mysql?\r\n> \r\n> My understanding is that the connection would be read from 'get_conn' which validates this change but yeah, let's test with a patch\r\n\r\nYep, works as expected"", 'created_at': datetime.datetime(2024, 9, 26, 8, 53, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2376417877, 'issue_id': 2549467920, 'author': 'dabla', 'body': ""> > Can you patch this change on old common/sql and test with the affected mysql?\r\n> > My understanding is that the connection would be read from 'get_conn' which validates this change but yeah, let's test with a patch\r\n> \r\n> Yep, works as expected\r\n\r\nGood to hear, sorry for the caused inconvenience."", 'created_at': datetime.datetime(2024, 9, 26, 9, 23, 1, tzinfo=datetime.timezone.utc)}]","Lee-W (Issue Creator) on (2024-09-26 08:02:17 UTC): They're reading through the newly introduced property `connection` (since common-sql > 1.17.0)

dabla on (2024-09-26 08:33:48 UTC): Does the dummy setter solve this issue now?  The problem is caused by my [PR 40751](https://github.com/apache/airflow/pull/40751).

Lee-W (Issue Creator) on (2024-09-26 08:53:45 UTC): Yep, works as expected

dabla on (2024-09-26 09:23:01 UTC): Good to hear, sorry for the caused inconvenience.

"
2549345397,pull_request,closed,,Fix typo in fixture set_auth_role_public,"auto -> auth
",dstandish,2024-09-26 02:34:18+00:00,[],2024-09-26 08:33:08+00:00,2024-09-26 08:33:05+00:00,https://github.com/apache/airflow/pull/42488,"[('area:providers', ''), ('provider:fab', '')]",[],
2549340598,pull_request,closed,,fix: ensure DAG trigger form submits with updated parameters upon key…,"

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

closes: #42157
Fixes bug where pressing ""enter"" on the keyboard submitted the DAG trigger form without updated values. 
Fixed by making a call to the existing `updateJSONconf()` function `onsubmit`


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",dannyl1u,2024-09-26 02:29:08+00:00,[],2024-09-30 18:44:07+00:00,2024-09-26 11:28:09+00:00,https://github.com/apache/airflow/pull/42487,"[('area:webserver', 'Webserver related Issues'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2375625758, 'issue_id': 2549340598, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 26, 2, 29, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2376678229, 'issue_id': 2549340598, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 26, 11, 28, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2377799604, 'issue_id': 2549340598, 'author': 'jscheffl', 'body': 'Thanke for the PR. Just coming ""late to the party"". So the described bug is fixed _but_ another feature that (we at least) often use is now broken:\r\nIf the form is submitted then the ""Generated Config JSON"" is ALWAYS updated. We often use this to copy&paste previous or generated data to save the effort to manually copy&paste all individual fields. But now if I copy&Paste or change in the JSON field, upon submit() the changes are over-ridden with the ""default text"" from the form (and so far known gap, individual fields are not updated if the JSON is changed.\r\n![image](https://github.com/user-attachments/assets/376f1f8d-71db-4799-8a6b-b17f1fe65719)', 'created_at': datetime.datetime(2024, 9, 26, 19, 46, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2377968654, 'issue_id': 2549340598, 'author': 'dannyl1u', 'body': '@jscheffl sorry about that, looking into it!', 'created_at': datetime.datetime(2024, 9, 26, 21, 26, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2377970457, 'issue_id': 2549340598, 'author': 'jscheffl', 'body': ""> @jscheffl sorry about that, looking into it!\r\n\r\nI'm also lookin ginto this and am in the ~hell~ ... complexity of JavaScript and events and what fires when :-("", 'created_at': datetime.datetime(2024, 9, 26, 21, 28, 1, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-26 02:29:13 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-26 11:28:11 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

jscheffl on (2024-09-26 19:46:09 UTC): Thanke for the PR. Just coming ""late to the party"". So the described bug is fixed _but_ another feature that (we at least) often use is now broken:
If the form is submitted then the ""Generated Config JSON"" is ALWAYS updated. We often use this to copy&paste previous or generated data to save the effort to manually copy&paste all individual fields. But now if I copy&Paste or change in the JSON field, upon submit() the changes are over-ridden with the ""default text"" from the form (and so far known gap, individual fields are not updated if the JSON is changed.
![image](https://github.com/user-attachments/assets/376f1f8d-71db-4799-8a6b-b17f1fe65719)

dannyl1u (Issue Creator) on (2024-09-26 21:26:42 UTC): @jscheffl sorry about that, looking into it!

jscheffl on (2024-09-26 21:28:01 UTC): I'm also lookin ginto this and am in the ~hell~ ... complexity of JavaScript and events and what fires when :-(

"
2549069731,pull_request,closed,, Do not attempt to provide not stringified objects to UI via xcom if pickling is active (#42388),"* Do not attempt to provide not stringified objects to UI via xcom if pickling is active

* Add pytest

(cherry picked from commit f9877af256acd1b64fcf91aefdf14ab9389b0bbc)
",jscheffl,2024-09-25 21:59:45+00:00,[],2024-09-26 04:34:25+00:00,2024-09-26 04:34:24+00:00,https://github.com/apache/airflow/pull/42486,"[('area:API', ""Airflow's REST/HTTP API""), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2548826584,pull_request,closed,,Simplify expression for get_permitted_dag_ids query,,dstandish,2024-09-25 19:24:53+00:00,[],2024-09-26 01:32:27+00:00,2024-09-26 01:32:25+00:00,https://github.com/apache/airflow/pull/42484,"[('area:providers', ''), ('provider:fab', '')]",[],
2548812484,pull_request,closed,,Move ECS executor to stable,"The AWS ECS executor has been released for just under one year. We have made changes as users have found issues but it has remained stable for quite a while now.

This PR proposes to remove the experimental warning for the executor and move it to respecting semver (so no more breaking changes in minor releases).

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",o-nikolas,2024-09-25 19:19:09+00:00,[],2024-09-26 14:37:33+00:00,2024-09-26 14:37:31+00:00,https://github.com/apache/airflow/pull/42483,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('kind:documentation', '')]",[],
2548752909,pull_request,closed,,Remove identity center auth manager cli,"The CLI command to setup identity center could only setup part of the required resources, since adding an application must be done from the console. As of November 15, 2023 it is now required to have an AWS Organization setup to create the required type of Identity Center Instance. The script would have to be change majorly to achieve this but it is also something that should be done with great care and intention since creating an organization in your AWS account has implications. If we automate it, many users won't know it's being created. Instead have users run through the wizard provided in the AWS console.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",o-nikolas,2024-09-25 18:56:35+00:00,[],2024-09-26 14:51:32+00:00,2024-09-25 22:09:06+00:00,https://github.com/apache/airflow/pull/42481,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('kind:documentation', '')]",[],
2548725844,pull_request,closed,,[BACKPORT] Fix the span link of task instance to point to the correct span in the scheduler_job_loop (#42430),"backports: #42430

(cherry picked from commit ae6ed8a9480ec18b2b14804821c1a4e9f1a91f3c)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",shahar1,2024-09-25 18:41:04+00:00,[],2024-09-25 21:45:22+00:00,2024-09-25 21:45:19+00:00,https://github.com/apache/airflow/pull/42480,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:core', '')]",[],
2548705939,pull_request,closed,,Small fix to AWS AVP cli init script,"Correct the configuration name we as users to set

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",o-nikolas,2024-09-25 18:29:07+00:00,[],2024-09-25 19:54:21+00:00,2024-09-25 19:54:19+00:00,https://github.com/apache/airflow/pull/42479,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]",[],
2548689812,pull_request,closed,, Bugfix task execution from runner in Windows (#42426),"(cherry picked from commit 737900a0a66d6987c5931dee34a634e32c812490)

Back-port of #42426
",jscheffl,2024-09-25 18:19:39+00:00,[],2024-09-25 20:10:26+00:00,2024-09-25 20:10:26+00:00,https://github.com/apache/airflow/pull/42478,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:core', ''), ('AIP-69', 'Edge Executor')]",[],
2548675616,pull_request,closed,,Remove jhtimmins as code owner for security,"Hi @jhtimmins I am assuming you don't want to be spammed with security PRs from airflow but if you do comment and I'll close this PR.

For others, I left the lines commented just to sort of be suggestive about the area of code ownership that could be taken on if someone had interest.",dstandish,2024-09-25 18:11:18+00:00,[],2024-09-26 01:31:56+00:00,2024-09-26 01:31:55+00:00,https://github.com/apache/airflow/pull/42477,"[('area:dev-tools', '')]","[{'comment_id': 2374841404, 'issue_id': 2548675616, 'author': 'dstandish', 'body': '@vincbeck not sure if you are interested in being code owner for security?', 'created_at': datetime.datetime(2024, 9, 25, 18, 16, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2374845470, 'issue_id': 2548675616, 'author': 'vincbeck', 'body': '> @vincbeck not sure if you are interested in being code owner for security?\r\n\r\nYep I can. The goal is to remove them from Airflow 3 anyway but in the meantime I can be', 'created_at': datetime.datetime(2024, 9, 25, 18, 18, 16, tzinfo=datetime.timezone.utc)}]","dstandish (Issue Creator) on (2024-09-25 18:16:11 UTC): @vincbeck not sure if you are interested in being code owner for security?

vincbeck on (2024-09-25 18:18:16 UTC): Yep I can. The goal is to remove them from Airflow 3 anyway but in the meantime I can be

"
2548575716,pull_request,closed,,Clarify logic in callback func in is authorized callback,Try to make clearer what this is doing by splitting things out a bit.,dstandish,2024-09-25 17:25:41+00:00,[],2024-09-26 15:53:43+00:00,2024-09-26 15:53:41+00:00,https://github.com/apache/airflow/pull/42475,"[('area:API', ""Airflow's REST/HTTP API"")]","[{'comment_id': 2375628284, 'issue_id': 2548575716, 'author': 'dstandish', 'body': '@vincbeck if you have a min to look tomorrow', 'created_at': datetime.datetime(2024, 9, 26, 2, 31, 51, tzinfo=datetime.timezone.utc)}]","dstandish (Issue Creator) on (2024-09-26 02:31:51 UTC): @vincbeck if you have a min to look tomorrow

"
2548564329,pull_request,closed,,Refactor ``bucket.get_blob`` calls in ``GCSHook`` to handle validation for non-existent objects.,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #42439
related: #42439

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
closes: [#42439](https://github.com/apache/airflow/issues/42439)
related: [#42439](https://github.com/apache/airflow/issues/42439)

This PR refactors ``bucket.get_blob`` calls in ``GCSHook`` to handle validation for non-existent objects. An internal method named ``_get_blob`` is created in ``GCSHook`` to consolidate ``bucket.get_blob`` calls where it includes validation. Exception is raised when object is non-existent.

It also fixes implicit exception in ``GCSToLocalFilesystemOperator`` when reading non-existing files by raising an explicit exception indicating object non-existence.


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",jsjasonseba,2024-09-25 17:20:29+00:00,[],2024-09-27 08:11:08+00:00,2024-09-27 08:11:08+00:00,https://github.com/apache/airflow/pull/42474,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2374762413, 'issue_id': 2548564329, 'author': 'jsjasonseba', 'body': 'Hi @shahar1, my PR is ready. I noticed that several methods in the GCS hook have the same issue as get_size, and some of them implemented nonexistent file checking too, so I decided to refactor those methods to reduce redundancy. Kindly check the PR when you have time.', 'created_at': datetime.datetime(2024, 9, 25, 17, 44, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2378696454, 'issue_id': 2548564329, 'author': 'shahar1', 'body': 'Great work!', 'created_at': datetime.datetime(2024, 9, 27, 8, 10, 59, tzinfo=datetime.timezone.utc)}]","jsjasonseba (Issue Creator) on (2024-09-25 17:44:42 UTC): Hi @shahar1, my PR is ready. I noticed that several methods in the GCS hook have the same issue as get_size, and some of them implemented nonexistent file checking too, so I decided to refactor those methods to reduce redundancy. Kindly check the PR when you have time.

shahar1 on (2024-09-27 08:10:59 UTC): Great work!

"
2548445634,pull_request,closed,,Split up the return statement in _is_authorized_callback for clarity,"I think this is the same result but easier to understand.

Also, I add a raise in the unexpected case (some method other than GET or PUT).  Not sure what happens in that case now?",dstandish,2024-09-25 16:30:43+00:00,[],2024-09-26 01:33:19+00:00,2024-09-26 01:33:17+00:00,https://github.com/apache/airflow/pull/42473,"[('area:API', ""Airflow's REST/HTTP API"")]",[],
2548433897,pull_request,closed,,bugfix: create_vector_index task gets marked successful even when it fails,"Currently if the task runs out of retries, the task gets marked success and the DAG moves on, failing at the ""create_knowledge_base"" task since the VI isn't there.  This ensures the task gets failed correctly.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",ferruzzi,2024-09-25 16:25:29+00:00,[],2024-09-25 17:52:24+00:00,2024-09-25 17:52:22+00:00,https://github.com/apache/airflow/pull/42472,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('area:system-tests', '')]",[],
2548303088,pull_request,closed,,docs: fix Executor alias syntax,"Hi! 
It looks like a wrong example of an Executor's short name in Docs due to https://github.com/apache/airflow/blob/193defd2898772e7e989cbee85815d49e9f0d8f0/airflow/executors/executor_loader.py#L116
",pustoshilov-d,2024-09-25 15:25:13+00:00,[],2024-10-02 15:33:55+00:00,2024-09-25 18:11:19+00:00,https://github.com/apache/airflow/pull/42471,"[('kind:documentation', ''), ('area:Executors-core', 'LocalExecutor & SequentialExecutor')]","[{'comment_id': 2374411850, 'issue_id': 2548303088, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 25, 15, 25, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2374831522, 'issue_id': 2548303088, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 25, 18, 11, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2378130758, 'issue_id': 2548303088, 'author': 'o-nikolas', 'body': 'Thanks for catching that!', 'created_at': datetime.datetime(2024, 9, 26, 23, 47, 52, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-25 15:25:17 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-25 18:11:21 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

o-nikolas on (2024-09-26 23:47:52 UTC): Thanks for catching that!

"
2548281735,pull_request,closed,,AIP-84 Migrate patch dag to FastAPI API,"Closes: https://github.com/apache/airflow/issues/42468

Migrate the `PUT` i.e update DAG from the public API to the FastAPI API.",pierrejeambrun,2024-09-25 15:15:30+00:00,['pierrejeambrun'],2024-09-26 10:16:15+00:00,2024-09-26 10:16:12+00:00,https://github.com/apache/airflow/pull/42469,"[('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-84', 'Modern Rest API')]",[],
2547761310,pull_request,closed,,S3DeleteObjects Operator: Handle dates passed as strings,"
---
closes: #42363

 `{{ macros.ds_add() }}` returns a string representation of a date, causing the operator to fail the comparison check. Added a date parser to parse strings into dates.",ellisms,2024-09-25 11:45:26+00:00,[],2025-01-31 13:57:23+00:00,2024-09-26 14:37:09+00:00,https://github.com/apache/airflow/pull/42464,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]","[{'comment_id': 2374753359, 'issue_id': 2547761310, 'author': 'vincbeck', 'body': 'Static checks are failing', 'created_at': datetime.datetime(2024, 9, 25, 17, 40, 19, tzinfo=datetime.timezone.utc)}]","vincbeck on (2024-09-25 17:40:19 UTC): Static checks are failing

"
2547602401,pull_request,closed,,Fix TestTranslationLegacyModelPredictLink dataset_id error for google provider translation operator,"- Add dataset_id parameter to let TestTranslationLegacyModelPredictLink work with the translation model.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",olegkachur-e,2024-09-25 10:27:55+00:00,[],2024-10-17 21:59:29+00:00,2024-10-17 21:59:29+00:00,https://github.com/apache/airflow/pull/42463,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2387505581, 'issue_id': 2547602401, 'author': 'potiuk', 'body': 'cc: @VladaZakharova ?', 'created_at': datetime.datetime(2024, 10, 2, 2, 20, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2410573192, 'issue_id': 2547602401, 'author': 'VladaZakharova', 'body': '> cc: @VladaZakharova ?\r\n\r\nyes, LGTM', 'created_at': datetime.datetime(2024, 10, 14, 9, 26, 50, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-02 02:20:23 UTC): cc: @VladaZakharova ?

VladaZakharova on (2024-10-14 09:26:50 UTC): yes, LGTM

"
2547420560,pull_request,closed,,Add more sort and filters to get dags endpoint,"Closes: https://github.com/apache/airflow/issues/42159

Add more filters and to sort https://github.com/apache/airflow/pull/42462/files the dag list endpoint.

Filters:
- `last_dag_run_state`

Sort:
- `last_run_state`
- `last_run_start_date`",pierrejeambrun,2024-09-25 09:10:09+00:00,[],2024-09-27 07:19:20+00:00,2024-09-27 07:19:18+00:00,https://github.com/apache/airflow/pull/42462,"[('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-84', 'Modern Rest API')]",[],
2547392176,pull_request,closed,,Remove deprecated CloudSQL HA functionality from the system test,"Removed deprecate CloudSQL HA functionality from the system test

https://cloud.google.com/sql/docs/mysql/configure-legacy-ha#curl",moiseenkov,2024-09-25 08:57:48+00:00,[],2024-09-25 18:20:59+00:00,2024-09-25 18:20:59+00:00,https://github.com/apache/airflow/pull/42461,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', ''), ('kind:documentation', '')]",[],
2547216006,pull_request,closed,,[HELM] - Add guide how to PgBouncer with Kubernetes Secret,"Hi All,

Do company polices we can not store secrets in the `values.yaml` and we need to use Kubernetes Secrets. These requirements made the PgBouncer implementation ver challenging because the the helm chart is able to handle external database until it is fully defined in the `values.yaml` however if it is defined the Kubernetes Secret than the PgBouncer does not pick up these changes and wan't to connect to the local Postgres DB which is not deployed because external database was used.

To be able to PgBouncer work we need to create two Kubernetes Secrets manually and reference is in the chart.  

I have extended the helm documentation if someone else in the future can have countless hours on deployment",andormarkus,2024-09-25 07:43:31+00:00,[],2024-10-02 01:51:48+00:00,2024-10-02 01:51:48+00:00,https://github.com/apache/airflow/pull/42460,"[('area:helm-chart', 'Airflow Helm Chart'), ('kind:documentation', '')]","[{'comment_id': 2387479762, 'issue_id': 2547216006, 'author': 'potiuk', 'body': 'Nice!', 'created_at': datetime.datetime(2024, 10, 2, 1, 51, 40, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-02 01:51:40 UTC): Nice!

"
2546727301,pull_request,closed,,Flush less in dataset manager,"As mentioned in https://github.com/apache/airflow/pull/42343#discussion_r1774261268

We don't really *need* those objects in the database after the manager (simply in the memory-managed SQLAlchemy session is good enough), and since the objects are still transaction-held, they can't be accessed by the listener hooks even if they are in the database anyway.

I also took the oppertunity to turn all listener method to class methods instead. This doesn't really make any difference (the manager does not hold instance-level values), and we need at least some of the methods to be class-level (for the internal API), and it's more consistent to have them all be class-level.",uranusjr,2024-09-25 01:57:18+00:00,[],2024-09-25 11:47:40+00:00,2024-09-25 11:47:38+00:00,https://github.com/apache/airflow/pull/42458,[],[],
2546585690,pull_request,closed,,Add Snowpark operator and decorator,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:


How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
closes: #24456 

This is the first step of adding Snowpark-related operators and decorators. We will add more in the following PRs (e.g., running snowpark in virtual env). This PR also includes unit tests, system tests and documentation changes. 

**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",sfc-gh-jdu,2024-09-24 23:26:12+00:00,[],2024-10-04 01:49:53+00:00,2024-10-03 01:55:57+00:00,https://github.com/apache/airflow/pull/42457,"[('area:providers', ''), ('area:system-tests', ''), ('kind:documentation', ''), ('provider:snowflake', 'Issues related to Snowflake provider')]","[{'comment_id': 2372563841, 'issue_id': 2546585690, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 24, 23, 26, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2383934128, 'issue_id': 2546585690, 'author': 'sfc-gh-jdu', 'body': 'Could anyone please take a look? Thanks!', 'created_at': datetime.datetime(2024, 9, 30, 18, 54, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387156378, 'issue_id': 2546585690, 'author': 'potiuk', 'body': '> Could anyone please take a look? Thanks!\r\n\r\nI think there is a problem with dependencies that causes PROD build to fail', 'created_at': datetime.datetime(2024, 10, 1, 22, 4, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387157703, 'issue_id': 2546585690, 'author': 'potiuk', 'body': 'Or simply rebase might fix it.', 'created_at': datetime.datetime(2024, 10, 1, 22, 5, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387165018, 'issue_id': 2546585690, 'author': 'sfc-gh-jdu', 'body': '> > Could anyone please take a look? Thanks!\r\n> \r\n> I think there is a problem with dependencies that causes PROD build to fail\r\n\r\nYeah I checked CI failures last week, it seems unrelated. I rebased once but got some new failures you saw here. @jscheffl Thanks for rebasing it!', 'created_at': datetime.datetime(2024, 10, 1, 22, 11, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2389673432, 'issue_id': 2546585690, 'author': 'sfc-gh-jdu', 'body': '> Or simply rebase might fix it.\r\n\r\n\r\n\r\n> Or simply rebase might fix it.\r\n\r\nAll merge gates are green now. Can you please take a look when you get a chance? Thanks!', 'created_at': datetime.datetime(2024, 10, 2, 20, 50, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2390343280, 'issue_id': 2546585690, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 3, 1, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2391943154, 'issue_id': 2546585690, 'author': 'sfc-gh-jdu', 'body': ""> LGTM as well. Though also - I do not know details of Snowflake integration.\r\n> \r\n> Speaking of which.....\r\n> \r\n> Maybe it is a good idea that Snowflake team implements System Tests and system test dashboard similar to the ones that Amazon, Google. Astronomer and Teradata did (see https://airflow.apache.org/ecosystem/#airflow-provider-system-test-dashboards )\r\n> \r\n> We had a talk about it at Airflow Summit (recording will be published soon) where the authors of such dashboard explained what benefit it brings to them and that might be a great way to make sure that the quality of integration with Snowflake is maintained over time.\r\n> \r\n> See https://airflowsummit.org/sessions/2024/hello-quality-building-cis-to-run-providers-packages-system-tests/ for description of the talk (recordings should be avaoilable at this link soon)\r\n\r\nYes! @mik-laj already told me that and I'm working on such a dashboard now"", 'created_at': datetime.datetime(2024, 10, 3, 17, 24, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2392636133, 'issue_id': 2546585690, 'author': 'potiuk', 'body': ""> Yes! @mik-laj already told me that and I'm working on such a dashboard now\r\n\r\n👀 👀 👀 👀 👀 👀 👀 👀"", 'created_at': datetime.datetime(2024, 10, 4, 1, 49, 52, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-24 23:26:16 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

sfc-gh-jdu (Issue Creator) on (2024-09-30 18:54:45 UTC): Could anyone please take a look? Thanks!

potiuk on (2024-10-01 22:04:06 UTC): I think there is a problem with dependencies that causes PROD build to fail

potiuk on (2024-10-01 22:05:14 UTC): Or simply rebase might fix it.

sfc-gh-jdu (Issue Creator) on (2024-10-01 22:11:08 UTC): Yeah I checked CI failures last week, it seems unrelated. I rebased once but got some new failures you saw here. @jscheffl Thanks for rebasing it!

sfc-gh-jdu (Issue Creator) on (2024-10-02 20:50:30 UTC): All merge gates are green now. Can you please take a look when you get a chance? Thanks!

boring-cyborg[bot] on (2024-10-03 01:56:00 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

sfc-gh-jdu (Issue Creator) on (2024-10-03 17:24:33 UTC): Yes! @mik-laj already told me that and I'm working on such a dashboard now

potiuk on (2024-10-04 01:49:52 UTC): 👀 👀 👀 👀 👀 👀 👀 👀

"
2546459044,pull_request,closed,,Add basic endpoints for managing backfill entities,"More logic will be added for `create` and `cancel`.  We'll need to create dag runs and fail them accordingly.  But I'll add that logic separately to make it easier to scrutinize it more closely.
",dstandish,2024-09-24 21:53:06+00:00,[],2024-09-26 20:27:35+00:00,2024-09-26 16:26:14+00:00,https://github.com/apache/airflow/pull/42455,"[('area:webserver', 'Webserver related Issues'), ('area:API', ""Airflow's REST/HTTP API""), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2546319435,pull_request,closed,,Refactor AWS Auth manager user output,"AWS auth manager has incredible tooling to setup the required resources, however one piece needs to be done manually. This PR updates the docs and user output to make it more clear what needs to happen next.

Removing the stacktrace (which usually indicates a critical failure in a piece of code) and replacing with a more clearly marked output message. Also update the docs to more clearly indicate that the script will most likely need user intervention.

![Screenshot from 2024-09-24 13-14-29](https://github.com/user-attachments/assets/869e4439-773a-4b61-a972-2e4bbf0d1f3c)
![Screenshot from 2024-09-24 11-12-54](https://github.com/user-attachments/assets/bbe893af-6d7d-4a70-b24b-2960fd6242cd)


<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",o-nikolas,2024-09-24 20:22:36+00:00,[],2024-09-25 13:58:22+00:00,2024-09-25 13:58:22+00:00,https://github.com/apache/airflow/pull/42454,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('kind:documentation', '')]",[],
2546094870,pull_request,closed,,Fix broken main: generated JS types,"Second round of generated TS fixing as main again broken in https://github.com/apache/airflow/actions/runs/11014909950/job/30587171255

Change were just produced by `pre-commit run -a`

related: #42435",jscheffl,2024-09-24 18:37:38+00:00,[],2024-09-24 19:59:36+00:00,2024-09-24 19:59:36+00:00,https://github.com/apache/airflow/pull/42451,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2372094218, 'issue_id': 2546094870, 'author': 'pierrejeambrun', 'body': ""Yep normally it's fixed and this shouldn't happen anymore.\r\n\r\nBad merge timing between the fix and the other PR caused this."", 'created_at': datetime.datetime(2024, 9, 24, 19, 4, 34, tzinfo=datetime.timezone.utc)}]","pierrejeambrun on (2024-09-24 19:04:34 UTC): Yep normally it's fixed and this shouldn't happen anymore.

Bad merge timing between the fix and the other PR caused this.

"
2546073786,pull_request,closed,,Remove deprecated stuff from Amazon provider package,"A new major version will be released in the Amazon provider package (see breaking change in #42218). As such, it is a good time to do some clean up.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-24 18:26:24+00:00,[],2024-09-26 15:40:25+00:00,2024-09-26 15:40:23+00:00,https://github.com/apache/airflow/pull/42450,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('area:secrets', '')]","[{'comment_id': 2372007597, 'issue_id': 2546073786, 'author': 'vincbeck', 'body': ""Tests are expected to fail. I'll resolve them"", 'created_at': datetime.datetime(2024, 9, 24, 18, 27, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2374185691, 'issue_id': 2546073786, 'author': 'eladkal', 'body': 'We need change log entry explaining what we broke (list of items)', 'created_at': datetime.datetime(2024, 9, 25, 14, 3, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2377189379, 'issue_id': 2546073786, 'author': 'vincbeck', 'body': '@eladkal Could you check that the changelog looks good to you?', 'created_at': datetime.datetime(2024, 9, 26, 14, 47, 59, tzinfo=datetime.timezone.utc)}]","vincbeck (Issue Creator) on (2024-09-24 18:27:20 UTC): Tests are expected to fail. I'll resolve them

eladkal on (2024-09-25 14:03:05 UTC): We need change log entry explaining what we broke (list of items)

vincbeck (Issue Creator) on (2024-09-26 14:47:59 UTC): @eladkal Could you check that the changelog looks good to you?

"
2546016194,pull_request,closed,,Make `AwsTaskLogFetcher` faster by reducing the amount of sleep,"Longer running tasks with lots of logs were slow to write all of the logs to AWS. This reduces the sleep delay to prevent the issue.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",smsm1-ito,2024-09-24 17:56:41+00:00,[],2024-11-03 09:09:56+00:00,2024-09-25 17:24:06+00:00,https://github.com/apache/airflow/pull/42449,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]","[{'comment_id': 2371947174, 'issue_id': 2546016194, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 24, 17, 56, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2374718562, 'issue_id': 2546016194, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 25, 17, 24, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453353023, 'issue_id': 2546016194, 'author': 'gopidesupavan', 'body': 'closes: #42442', 'created_at': datetime.datetime(2024, 11, 3, 9, 9, 55, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-24 17:56:47 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-25 17:24:09 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

gopidesupavan on (2024-11-03 09:09:55 UTC): closes: #42442

"
2545750255,pull_request,closed,,fix: OL dag start event not being emitted,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
In [apache-airflow-providers-openlineage==1.12.0](https://pypi.org/project/apache-airflow-providers-openlineage/1.12.0/) after changes from #41690 the DAG start events are not being emitted properly.

I think the main cause is trying to pass run_id to adapter's dag_started method https://github.com/apache/airflow/blob/dcb184687dcc0894bea384ddab1ed282304afb30/airflow/providers/openlineage/plugins/listener.py#L439-L453

when the adapter's method do not accept this argument https://github.com/apache/airflow/blob/dcb184687dcc0894bea384ddab1ed282304afb30/airflow/providers/openlineage/plugins/adapter.py#L336-L347

Error in scheduler logs:
```
[2024-09-24T15:14:49.910+0000] {listener.py:529} WARNING - Failed to submit method to executor
concurrent.futures.process._RemoteTraceback:
""""""
Traceback (most recent call last):
  File ""/usr/local/lib/python3.8/concurrent/futures/process.py"", line 239, in _process_worker
    r = call_item.fn(*call_item.args, **call_item.kwargs)
TypeError: dag_started() got an unexpected keyword argument 'run_id'
""""""

The above exception was the direct cause of the following exception:

TypeError: dag_started() got an unexpected keyword argument 'run_id'
```
<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kacpermuda,2024-09-24 15:38:02+00:00,[],2024-09-26 17:43:20+00:00,2024-09-26 17:34:42+00:00,https://github.com/apache/airflow/pull/42448,"[('area:providers', ''), ('provider:openlineage', 'AIP-53')]","[{'comment_id': 2372322417, 'issue_id': 2545750255, 'author': 'JDarDagran', 'body': 'Confirming https://github.com/apache/airflow/pull/41690 broke one of the base functionalities in 1.12.0 release. Thanks @kacpermuda for spotting this and fixing.\r\n\r\n@eladkal do you think we could mark 1.12.0 as yanked version and cut new release of the provider witth the next wave?', 'created_at': datetime.datetime(2024, 9, 24, 20, 32, 37, tzinfo=datetime.timezone.utc)}]","JDarDagran on (2024-09-24 20:32:37 UTC): Confirming https://github.com/apache/airflow/pull/41690 broke one of the base functionalities in 1.12.0 release. Thanks @kacpermuda for spotting this and fixing.

@eladkal do you think we could mark 1.12.0 as yanked version and cut new release of the provider witth the next wave?

"
2545746219,pull_request,closed,,Fix logout in AWS auth manager,"The logout link in Airflow is actually a form which then generate a POST request

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-24 15:36:08+00:00,[],2024-09-24 15:55:41+00:00,2024-09-24 15:55:39+00:00,https://github.com/apache/airflow/pull/42447,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]",[],
2545480175,pull_request,closed,,Update providers metadata 2024-09-24,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",eladkal,2024-09-24 13:51:58+00:00,[],2024-09-24 14:07:38+00:00,2024-09-24 14:07:35+00:00,https://github.com/apache/airflow/pull/42445,[],[],
2545458566,pull_request,closed,,Fix error file not found. tmp file is deleted before inserting rows t…,"Issue: File not found error when using VerticaToMySQLOperator with bulk_load=true.
The issue occurs because the temp file is automatically deleted while code get out of the block.

Fix: move the insertion logic into the NameTemporary file block and remove the explicit tmpFile.close() .
after the fix the replication work as expected.
",bareketamir,2024-09-24 13:44:13+00:00,[],2024-11-26 08:58:41+00:00,2024-11-20 08:01:05+00:00,https://github.com/apache/airflow/pull/42444,"[('area:providers', ''), ('provider:mysql', '')]","[{'comment_id': 2371321493, 'issue_id': 2545458566, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 24, 13, 44, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439656850, 'issue_id': 2545458566, 'author': 'eladkal', 'body': 'can you add unit test to cover this fix?', 'created_at': datetime.datetime(2024, 10, 26, 17, 3, 10, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-24 13:44:18 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

eladkal on (2024-10-26 17:03:10 UTC): can you add unit test to cover this fix?

"
2545422627,pull_request,open,,Skip `fastapi-cli` Indirection and SSL/TLS on Debug,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Following up on, https://github.com/apache/airflow/pull/42395. Have just added the SSL/TLS flags to the debug control flow. `fastapi` cli does not have SSL flags, but it is a thin wrapper around `uvicorn.run` (https://github.com/fastapi/fastapi-cli/blob/main/src/fastapi_cli/cli.py#L92)

Have created the `Appendable` test utility to declare files/filepaths in `pytest.mark.parametrize` that are to be relative `tmp_path`. Lmk if it is a bit weird / not good. Or whether it should be separated out into a different PR.

~~There are some CI failures, not too sure atm if it is because of `uvicorn[standard]>=0.15.0` or flakiness. Between [fa4239a](https://github.com/apache/airflow/pull/42443/commits/fa4239ae2f05eb3f8174f53b978e86e1a5536094) and [ba2fec5](https://github.com/apache/airflow/pull/42443/commits/ba2fec52381296abec57d00537cce8f50d5fd08d) same checks did not fail (barring mypy). Other PRs that trigger the same checks seem to sometimes error too (though error message is a bit different).~~ Atm, the only failing CI check looks to be resolved as a part of #42500.
~~`fastapi[standard]>=0.112.2` itself requires `uvicorn[standard]>=0.15.0`, wondering though whether since `uvicorn` is no longer a transitive dependency the tests fail.~~

related: https://github.com/apache/airflow/issues/42359

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",JoshuaXOng,2024-09-24 13:30:04+00:00,[],2025-01-06 15:52:42+00:00,,https://github.com/apache/airflow/pull/42443,"[('area:CLI', '')]","[{'comment_id': 2480862651, 'issue_id': 2545422627, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 11, 17, 0, 17, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2482286763, 'issue_id': 2545422627, 'author': 'pierrejeambrun', 'body': 'up', 'created_at': datetime.datetime(2024, 11, 18, 8, 40, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2568546703, 'issue_id': 2545422627, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2025, 1, 3, 0, 15, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2573394888, 'issue_id': 2545422627, 'author': 'pierrejeambrun', 'body': 'up', 'created_at': datetime.datetime(2025, 1, 6, 15, 52, 37, tzinfo=datetime.timezone.utc)}]","github-actions[bot] on (2024-11-17 00:17:08 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

pierrejeambrun on (2024-11-18 08:40:54 UTC): up

github-actions[bot] on (2025-01-03 00:15:21 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

pierrejeambrun on (2025-01-06 15:52:37 UTC): up

"
2545299628,pull_request,closed,,apply otel_service on metrics (#42242),"* apply otel_service on metrics

* change version_added to 2.10.3

(cherry picked from commit e14b4cae9c61cbf1df6e6b573d926d614f9f63e5)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-09-24 12:42:23+00:00,[],2024-10-23 09:25:12+00:00,2024-09-25 05:00:26+00:00,https://github.com/apache/airflow/pull/42441,"[('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2544719607,pull_request,closed,,Change default .airflowignore syntax to glob,"This matches the ignore file behavior of many popular tools (e.g. Git, Docker) and is likely what most users expect without reading the documentation.

The documentation is also tweaked to emphasize the new default. I also decided to get rid of some regexp examples entirely; I figure most of the users are better off either using glob, or just customize the might_contain_dag_callable hook instead. The regexp syntax parser uses re2, which is quite limiting for security reasons, and does not offer significant advantages over glob for almost all use cases.",uranusjr,2024-09-24 08:28:46+00:00,[],2024-09-30 04:43:46+00:00,2024-09-30 04:43:44+00:00,https://github.com/apache/airflow/pull/42436,"[('kind:documentation', ''), ('airflow3.0:candidate', 'Potential candidates for Airflow 3.0'), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]",[],
2544693822,pull_request,closed,,Fix UI pre commit hook,"File detection for the `ui` pre-commit hook is wrong. Now that the UI is based on the new FastAPI API and that it has its own generated spec, the file detection should happen on that new spec.

Will prevent other failure such as https://github.com/apache/airflow/pull/42422. (Original PR was green but skipped updating the front-end code causing main failure).",pierrejeambrun,2024-09-24 08:16:35+00:00,['pierrejeambrun'],2024-09-24 15:15:17+00:00,2024-09-24 15:15:15+00:00,https://github.com/apache/airflow/pull/42435,"[('area:dev-tools', '')]",[],
2544076718,pull_request,closed,,Fix failing canary build,"In [this](https://github.com/apache/airflow/actions/runs/10989610037/job/30508389976) failing CI job, the test has failed due to `opensearch-py` being set to None, which means there's an import failure.

The import failure is due to the removal of `opensearch-py` package during the build process: 

https://github.com/apache/airflow/blob/main/scripts/docker/entrypoint_ci.sh#L253

Hence this PR solves the CI error by skiping opensearch unittest when opensearchpy is not available, and also removing the class inheritance of Opensearch 
",Owen-CH-Leung,2024-09-24 01:38:46+00:00,[],2024-09-24 07:26:04+00:00,2024-09-24 07:26:03+00:00,https://github.com/apache/airflow/pull/42431,"[('area:providers', ''), ('area:logging', ''), ('provider:opensearch', '')]",[],
2544011540,pull_request,closed,,Fix the span link of task instance to point to the correct span in the scheduler_job_loop (issue #42429),"# Overview

This PR contains the fix for the following issue:

closes: #42429 

The fix covers creating span link of the task instance having the correct span of which to point to.
currently, the span link points to the root span of the scheduler job loop, but the fix will have the link
pointing to the actual location of where the task instance was triggered to run, providing better clarity.",howardyoo,2024-09-24 00:35:57+00:00,[],2024-09-25 18:45:04+00:00,2024-09-25 18:12:52+00:00,https://github.com/apache/airflow/pull/42430,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:core', '')]","[{'comment_id': 2371859660, 'issue_id': 2544011540, 'author': 'howardyoo', 'body': 'Thanks! Much appreciated!Sent from my iPhoneOn Sep 24, 2024, at 11:21\u202fAM, D. Ferruzzi ***@***.***> wrote:\ufeff\r\n@ferruzzi approved this pull request.\r\n\r\nI think it looks right.  The context in the linked Issue helped a lot.\r\n\r\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you authored the thread.Message ID: ***@***.***>', 'created_at': datetime.datetime(2024, 9, 24, 17, 9, 41, tzinfo=datetime.timezone.utc)}]","howardyoo (Issue Creator) on (2024-09-24 17:09:41 UTC): Thanks! Much appreciated!Sent from my iPhoneOn Sep 24, 2024, at 11:21 AM, D. Ferruzzi ***@***.***> wrote:﻿
@ferruzzi approved this pull request.

I think it looks right.  The context in the linked Issue helped a lot.

—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you authored the thread.Message ID: ***@***.***>

"
2543905162,pull_request,closed,,Support of host.name in OTEL metrics and usage of OTEL_RESOURCE_ATTRIBUTES in metrics,"# Overview

Fixes: #42424
Fixes: #42425 
which covers:
- adding 'host.name' in the resource attributes to have metrics data contain minimum source information
- adding support for OTEL_RESOURCE_ATTRIBUTES env variable for metrics

Please refer to the above github issues for more information regarding this PR. This PR is also intend to align the feature of OTEL metrics to that of the OTEL traces where the above feature is currently available, and thus beneficial for the metrics to have the same level of support.",howardyoo,2024-09-23 23:09:56+00:00,[],2024-10-23 09:36:03+00:00,2024-10-01 07:04:06+00:00,https://github.com/apache/airflow/pull/42428,"[('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2543824147,pull_request,closed,,Fix SparkKubernetesOperator spark name.,"Currently, it's ignoring the name from both the YAML file and operator arguments, and always using the task ID as the name by default, with random suffix.

The name precedence order follows like  below:

1. Use the name from the operator parameters.
2. If not available, use the name from the YAML file.
3. If neither is provided, default to the task ID.

Should we switch the first two steps, or does this order make sense?

closes: #41188 

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-09-23 22:31:45+00:00,[],2024-09-27 16:10:32+00:00,2024-09-27 12:55:25+00:00,https://github.com/apache/airflow/pull/42427,"[('area:providers', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues')]","[{'comment_id': 2372432728, 'issue_id': 2543824147, 'author': 'gopidesupavan', 'body': '> I think that maybe we do need another test to check the third case, because currently none of the other tests check it.\r\n\r\nupdated.', 'created_at': datetime.datetime(2024, 9, 24, 21, 36, 14, tzinfo=datetime.timezone.utc)}]","gopidesupavan (Issue Creator) on (2024-09-24 21:36:14 UTC): updated.

"
2543750861,pull_request,closed,,Bugfix task execution from runner in Windows,"While ""playing around"" with making the Edge Worker (AIP-69) running on Windows I noticed that the local task runner fails as the `signal` implementation in Windows does not carry `SIGKILL` - but as this is just a cosmetic log message extension (and whitespace was missing) this is just a small bugfix and then... EdgeWorker is running in Windows!

related: #10388

FYI @AutomationDev85 ",jscheffl,2024-09-23 21:45:25+00:00,[],2024-09-25 18:12:48+00:00,2024-09-25 18:12:03+00:00,https://github.com/apache/airflow/pull/42426,"[('type:bug-fix', 'Changelog: Bug Fixes'), ('area:core', ''), ('AIP-69', 'Edge Executor')]",[],
2543642685,pull_request,closed,,Add STOPPED to the failure cases for Sagemaker Training Jobs,"User pointed out that Airflow will mark a failed Sagemaker Training Job as a successful task.  Looking into the issue, Sagemaker treats ""Stopped"" as a failure state for this endpoint, not a successful terminal state. [Sagemaker Docs [here](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sagemaker/client/describe_training_job.html)]

To reproduce:

Run a DAG with a SagemakerTrainingOperator task.  Once the training starts, open the AWS console and stop the job.  Airflow will see that the job has ended but mark the task as successful.

After this change, those steps will show the task marked as failed as expected.",ferruzzi,2024-09-23 20:55:17+00:00,[],2024-09-24 22:07:42+00:00,2024-09-24 22:07:40+00:00,https://github.com/apache/airflow/pull/42423,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2369376188, 'issue_id': 2543642685, 'author': 'jscheffl', 'body': 'Oh, I have so little knowledge about AWS and Sagemaker, feel afraid to judge and approve this thing :-(', 'created_at': datetime.datetime(2024, 9, 23, 21, 1, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2369387977, 'issue_id': 2543642685, 'author': 'ferruzzi', 'body': ""> Oh, I have so little knowledge about AWS and Sagemaker, feel afraid to judge and approve this thing :-(\r\n\r\nIt's a very large ball of wax, that's for sure.  I'm not entirely sure why you were auto-added to the reviewers list, I didn't intentionally tag you."", 'created_at': datetime.datetime(2024, 9, 23, 21, 6, 48, tzinfo=datetime.timezone.utc)}]","jscheffl on (2024-09-23 21:01:35 UTC): Oh, I have so little knowledge about AWS and Sagemaker, feel afraid to judge and approve this thing :-(

ferruzzi (Issue Creator) on (2024-09-23 21:06:48 UTC): It's a very large ball of wax, that's for sure.  I'm not entirely sure why you were auto-added to the reviewers list, I didn't intentionally tag you.

"
2543627060,pull_request,closed,,Fix broken main: generated JS types,"Fix for static checks in https://github.com/apache/airflow/actions/runs/10995403123/job/30526485436

@pierrejeambrun was the API change intended that causes the generated DIFF? Or is this an unwanted side-effect?",jscheffl,2024-09-23 20:45:22+00:00,[],2024-09-24 08:17:24+00:00,2024-09-23 21:00:00+00:00,https://github.com/apache/airflow/pull/42422,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2369372637, 'issue_id': 2543627060, 'author': 'jscheffl', 'body': 'Static checks green now... others still fail, therefore merging...', 'created_at': datetime.datetime(2024, 9, 23, 20, 59, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2370558154, 'issue_id': 2543627060, 'author': 'pierrejeambrun', 'body': ""Thanks, yes the change is intended, but I do not understand why this didn't break in my PR"", 'created_at': datetime.datetime(2024, 9, 24, 8, 4, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2370566780, 'issue_id': 2543627060, 'author': 'pierrejeambrun', 'body': 'Hmmm this particular hook `ts-compile-format-lint-ui` was skipped, file detection is wrong I guess.\r\n\r\n\r\nEdit: OK got it opening a PR.', 'created_at': datetime.datetime(2024, 9, 24, 8, 8, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2370585333, 'issue_id': 2543627060, 'author': 'pierrejeambrun', 'body': ""https://github.com/apache/airflow/pull/42435 Hook wasn't re-wired on the new generated OpenAPI spec used by the front end, causing main failure. Thanks Jens shouldn't happen anymore."", 'created_at': datetime.datetime(2024, 9, 24, 8, 17, 23, tzinfo=datetime.timezone.utc)}]","jscheffl (Issue Creator) on (2024-09-23 20:59:56 UTC): Static checks green now... others still fail, therefore merging...

pierrejeambrun on (2024-09-24 08:04:52 UTC): Thanks, yes the change is intended, but I do not understand why this didn't break in my PR

pierrejeambrun on (2024-09-24 08:08:49 UTC): Hmmm this particular hook `ts-compile-format-lint-ui` was skipped, file detection is wrong I guess.


Edit: OK got it opening a PR.

pierrejeambrun on (2024-09-24 08:17:23 UTC): https://github.com/apache/airflow/pull/42435 Hook wasn't re-wired on the new generated OpenAPI spec used by the front end, causing main failure. Thanks Jens shouldn't happen anymore.

"
2543526319,pull_request,closed,,Set simple auth manager as default auth manager,"Set simple auth manager as default auth manager. Updating the default auth manager can confuse Airflow developers because the login form and the way users are defined change. Therefore, I'll merge this PR after consulting the community (dev email list or other).

But changing the default auth manager to simple auth manager allows detecting tests in Airflow core that rely on FAB auth manager (I have seen quite many). So I'll use this PR to update the tests in Airflow to no longer rely on FAB auth manager.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-23 19:52:26+00:00,[],2024-11-06 20:17:06+00:00,2024-10-09 19:49:47+00:00,https://github.com/apache/airflow/pull/42421,[],[],
2543257283,pull_request,closed,,Resolve failing test when request and ddb table schema mismatch,"
---
Addresses the failing DDB tests. Test is failing if the DDB schema and the get_item request parameters do not match.

Failed output: 

```
FAILED tests/providers/amazon/aws/sensors/test_dynamodb.py::TestDynamoDBValueSensor::test_sensor_with_pk - botocore.exceptions.ClientError: An error occurred (ValidationException) when calling the GetItem operation: The provided key element does not match the schema
4441
FAILED tests/providers/amazon/aws/sensors/test_dynamodb.py::TestDynamoDBMultipleValuesSensor::test_sensor_with_pk - botocore.exceptions.ClientError: An error occurred (ValidationException) when calling the GetItem operation: The provided key element does not match the schema
```",ellisms,2024-09-23 17:37:25+00:00,[],2025-01-31 13:57:13+00:00,2024-09-23 18:56:17+00:00,https://github.com/apache/airflow/pull/42419,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('upgrade to newer dependencies', 'If set, upgrade to newer dependencies is forced'), ('canary', 'When set on PR running from apache repo - behave as canary run')]",[],
2543226445,pull_request,closed,,Simple auth manager documentation - Airflow only,"Seems like making modifications in documentation of Airflow core and providers at the same time can lead to some doc generation issues. Scope down #42390 to only Airflow core.

Once this PR is merged, I'll create another one to update providers documentation.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-23 17:19:51+00:00,[],2024-10-01 21:58:48+00:00,2024-09-23 19:37:55+00:00,https://github.com/apache/airflow/pull/42418,"[('kind:documentation', '')]","[{'comment_id': 2387149616, 'issue_id': 2543226445, 'author': 'potiuk', 'body': 'Nice', 'created_at': datetime.datetime(2024, 10, 1, 21, 58, 47, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-01 21:58:47 UTC): Nice

"
2543164454,pull_request,closed,,Deprecate DAG.run method,"This method relies on local backfill mode, which is slated for removal in 3.0. We have suitable alternatives such as DAG.test() and triggering dags via API.
",dstandish,2024-09-23 16:45:32+00:00,[],2024-10-09 16:34:26+00:00,2024-09-24 01:52:48+00:00,https://github.com/apache/airflow/pull/42417,[],"[{'comment_id': 2368836112, 'issue_id': 2543164454, 'author': 'vincbeck', 'body': 'Should it be done in `v2-test` branch? In main we want to remove it I guess?', 'created_at': datetime.datetime(2024, 9, 23, 16, 51, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2368847078, 'issue_id': 2543164454, 'author': 'dstandish', 'body': 'I think that the practice is, add to main first, then cherry pick.  But I could be wrong.', 'created_at': datetime.datetime(2024, 9, 23, 16, 57, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2368849287, 'issue_id': 2543164454, 'author': 'vincbeck', 'body': 'That works too :)', 'created_at': datetime.datetime(2024, 9, 23, 16, 58, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2369367961, 'issue_id': 2543164454, 'author': 'kaxil', 'body': 'cc @ephraimbuddy / @utkarsharma2 If we do release 2.10.3 -- worth including it then or directly in 2.11', 'created_at': datetime.datetime(2024, 9, 23, 20, 57, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2369532097, 'issue_id': 2543164454, 'author': 'dstandish', 'body': ""> I assume you need to adjust some pytests making the CI green, else OK.\r\n\r\nYeah I had to.  These are actually _very_ old tests.  And it sorta wasn't clear what they were testing.  But they are related to this issue https://github.com/apache/airflow/issues/1225.  Ultimately though, they only test behavior of the backfill scheduler, which is going to be removed, so the tests can safely be removed IMHO. And I've added a todo for that to remove them along with DAG.run."", 'created_at': datetime.datetime(2024, 9, 23, 21, 45, 11, tzinfo=datetime.timezone.utc)}]","vincbeck on (2024-09-23 16:51:31 UTC): Should it be done in `v2-test` branch? In main we want to remove it I guess?

dstandish (Issue Creator) on (2024-09-23 16:57:08 UTC): I think that the practice is, add to main first, then cherry pick.  But I could be wrong.

vincbeck on (2024-09-23 16:58:18 UTC): That works too :)

kaxil on (2024-09-23 20:57:06 UTC): cc @ephraimbuddy / @utkarsharma2 If we do release 2.10.3 -- worth including it then or directly in 2.11

dstandish (Issue Creator) on (2024-09-23 21:45:11 UTC): Yeah I had to.  These are actually _very_ old tests.  And it sorta wasn't clear what they were testing.  But they are related to this issue https://github.com/apache/airflow/issues/1225.  Ultimately though, they only test behavior of the backfill scheduler, which is going to be removed, so the tests can safely be removed IMHO. And I've added a todo for that to remove them along with DAG.run.

"
2543131344,pull_request,closed,,Update docs regarding the AutoMLText deprecation,"- Suggest ways to replace old functionality.
- Move all related info to vertex_ai doc.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",olegkachur-e,2024-09-23 16:27:59+00:00,[],2024-09-27 08:20:21+00:00,2024-09-27 08:20:21+00:00,https://github.com/apache/airflow/pull/42415,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('kind:documentation', '')]",[],
2543099598,pull_request,closed,,BUGFIX: Paginated results in MSGraphAsyncOperator,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Today I discovered a regression in the pagination code which stores the paged results through XCom's, this PR fixes the bug.
The actual tests didn't detect the bug due to the fact that the paged results where stored in a field of the operator, but in reality  each paged results will be handled by a different worker in Airflow thus a possible different instance of the operator. 

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",dabla,2024-09-23 16:11:28+00:00,[],2024-09-25 14:01:36+00:00,2024-09-25 14:01:36+00:00,https://github.com/apache/airflow/pull/42414,"[('provider:microsoft-azure', 'Azure-related issues'), ('area:providers', '')]",[],
2542424857,pull_request,open,,Support for Kubernetes Executor side task attempt logging for failed tasks in case of task pods doesn't reach running state,"Right now, when the tasks fail due to pod launch failures or the pod is stuck in the pending phase, then the task logs from the UI are empty. It is very inconvenient for airflow consumers to debug it. They might not have access to the scheduler logs. We can push these failure reasons from the Kubernetes executor to task logs. So, that airflow consumers can able to see task failure reasons from the UI.

closes: #37435",dirrao,2024-09-23 12:03:04+00:00,['dirrao'],2024-12-16 22:03:00+00:00,,https://github.com/apache/airflow/pull/42412,"[('area:providers', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues')]","[{'comment_id': 2393329151, 'issue_id': 2542424857, 'author': 'dirrao', 'body': '@jedcunningham / @hussein-awala \r\nCan you review this MR when you are free?', 'created_at': datetime.datetime(2024, 10, 4, 10, 0, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2405441423, 'issue_id': 2542424857, 'author': 'dirrao', 'body': '@romsharon98 \r\nCan you review it when you are free?', 'created_at': datetime.datetime(2024, 10, 10, 15, 29, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2413596073, 'issue_id': 2542424857, 'author': 'dirrao', 'body': '@jedcunningham / @hussein-awala \r\nCan you review this MR when you are free?', 'created_at': datetime.datetime(2024, 10, 15, 11, 12, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2423568470, 'issue_id': 2542424857, 'author': 'dirrao', 'body': '@dstandish\r\nWith the changes introduced in PR #43183, is it still feasible to generate logs from locations other than the workers? If so, could you please provide a few references to explain this?', 'created_at': datetime.datetime(2024, 10, 19, 4, 47, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2423615323, 'issue_id': 2542424857, 'author': 'dstandish', 'body': '> @dstandish With the changes introduced in PR #43183, is it still feasible to generate logs from locations other than the workers? If so, could you please provide a few references to explain this?\r\n\r\nYes, you add a log record. Was done recently in an aws executor', 'created_at': datetime.datetime(2024, 10, 19, 6, 17, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2423846086, 'issue_id': 2542424857, 'author': 'dstandish', 'body': '> @dstandish With the changes introduced in PR #43183, is it still feasible to generate logs from locations other than the workers? If so, could you please provide a few references to explain this?\r\n\r\nOk following up with more specifics this morning.\r\n\r\nLook at `BaseExecutor.log_task_event`\r\n\r\nexecutors do not have access to a session, so from executor when we need to send this kind of message, we write the log records to a queue, and the scheduler consumes this queue and writes to db.\r\n\r\ncc @potiuk', 'created_at': datetime.datetime(2024, 10, 19, 13, 19, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2425114950, 'issue_id': 2542424857, 'author': 'potiuk', 'body': '> Look at BaseExecutor.log_task_event\r\n\r\nNice.', 'created_at': datetime.datetime(2024, 10, 20, 16, 50, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2457100316, 'issue_id': 2542424857, 'author': 'eladkal', 'body': '@dirrao what is the status of this PR?', 'created_at': datetime.datetime(2024, 11, 5, 12, 57, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2458853109, 'issue_id': 2542424857, 'author': 'dirrao', 'body': '> @dirrao what is the status of this PR?\r\n\r\nI’ve implemented the changes on the Kubernetes executor to align with the new base executor feature. However, I’m uncertain about how to adapt these updates in the Kubernetes watcher code.', 'created_at': datetime.datetime(2024, 11, 6, 6, 59, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2545337231, 'issue_id': 2542424857, 'author': 'amoghrajesh', 'body': '@dirrao why do you need to push anything to the watcher here?\r\nYou writing logs to the task logs should be sufficient right? or am missing something', 'created_at': datetime.datetime(2024, 12, 16, 11, 15, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2546926009, 'issue_id': 2542424857, 'author': 'dstandish', 'body': 'TaskContextLogger is removed from airflow; this PR needs to be updated to use the log table.  The feature was added in this pr https://github.com/apache/airflow/pull/40867 and you can see an example of its usage there.', 'created_at': datetime.datetime(2024, 12, 16, 22, 2, 59, tzinfo=datetime.timezone.utc)}]","dirrao (Issue Creator) on (2024-10-04 10:00:13 UTC): @jedcunningham / @hussein-awala 
Can you review this MR when you are free?

dirrao (Issue Creator) on (2024-10-10 15:29:33 UTC): @romsharon98 
Can you review it when you are free?

dirrao (Issue Creator) on (2024-10-15 11:12:29 UTC): @jedcunningham / @hussein-awala 
Can you review this MR when you are free?

dirrao (Issue Creator) on (2024-10-19 04:47:12 UTC): @dstandish
With the changes introduced in PR #43183, is it still feasible to generate logs from locations other than the workers? If so, could you please provide a few references to explain this?

dstandish on (2024-10-19 06:17:09 UTC): Yes, you add a log record. Was done recently in an aws executor

dstandish on (2024-10-19 13:19:34 UTC): Ok following up with more specifics this morning.

Look at `BaseExecutor.log_task_event`

executors do not have access to a session, so from executor when we need to send this kind of message, we write the log records to a queue, and the scheduler consumes this queue and writes to db.

cc @potiuk

potiuk on (2024-10-20 16:50:08 UTC): Nice.

eladkal on (2024-11-05 12:57:28 UTC): @dirrao what is the status of this PR?

dirrao (Issue Creator) on (2024-11-06 06:59:54 UTC): I’ve implemented the changes on the Kubernetes executor to align with the new base executor feature. However, I’m uncertain about how to adapt these updates in the Kubernetes watcher code.

amoghrajesh on (2024-12-16 11:15:47 UTC): @dirrao why do you need to push anything to the watcher here?
You writing logs to the task logs should be sufficient right? or am missing something

dstandish on (2024-12-16 22:02:59 UTC): TaskContextLogger is removed from airflow; this PR needs to be updated to use the log table.  The feature was added in this pr https://github.com/apache/airflow/pull/40867 and you can see an example of its usage there.

"
2542026959,pull_request,closed,,Change weight priority type from Integer to Float,"This PR is about changing the type of `priority_weight` property of the `TaskInstance`. For different databases, we have different possible max values for the integer columns.

There are several attempts to fix this problem:
- https://github.com/apache/airflow/pull/22784
- https://github.com/apache/airflow/pull/34168
- https://github.com/apache/airflow/pull/37990
- https://github.com/apache/airflow/pull/38125
- https://github.com/apache/airflow/pull/38160

This PR contains the changes in https://github.com/apache/airflow/pull/38160 (created by Taragolis) on top of https://github.com/apache/airflow/pull/38222 as mentioned [here](https://github.com/apache/airflow/pull/38160#issuecomment-2002370319). 

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",molcay,2024-09-23 09:13:43+00:00,[],2024-11-13 09:56:49+00:00,2024-11-13 09:56:42+00:00,https://github.com/apache/airflow/pull/42410,"[('area:webserver', 'Webserver related Issues'), ('area:API', ""Airflow's REST/HTTP API""), ('kind:documentation', ''), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('area:db-migrations', 'PRs with DB migration')]","[{'comment_id': 2368993097, 'issue_id': 2542026959, 'author': 'jscheffl', 'body': ""I don't understand the reason and need to change the priority weight from int to float. For me this adds just extra complexity and I see no benefit."", 'created_at': datetime.datetime(2024, 9, 23, 17, 59, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2378612109, 'issue_id': 2542026959, 'author': 'molcay', 'body': ""Hi @jscheffl,\r\nThere was this issue/discussion: https://github.com/apache/airflow/issues/22781 which is about the integer out-of-range for the priority weight field. This error might happen for PostgreSQL. There were a lot of discussions around it in different PRs (that I mentioned in this PR's description). As far as I understand; the next planned move was to make this change after https://github.com/apache/airflow/pull/38222 as mentioned https://github.com/apache/airflow/pull/38160#issuecomment-2002370319."", 'created_at': datetime.datetime(2024, 9, 27, 7, 36, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2378741435, 'issue_id': 2542026959, 'author': 'pierrejeambrun', 'body': ""This seems a little odd to me, just to be sure I understand what we are trying to solve, are we trying to address integer overflow for weights and operation on weights ?\r\n\r\nI don't see the use case for using such big numbers for priority weights."", 'created_at': datetime.datetime(2024, 9, 27, 8, 30, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2404434033, 'issue_id': 2542026959, 'author': 'molcay', 'body': ""Hi @pierrejeambrun,\r\n\r\nThe prior target is to address integer overflow. Because it is different for different database engines.\r\nSince we don't have any given range to the users, I think we just need to be sure that it is not failing or do this to avoid failing. I read all the discussions that were held before; this was the one of the previous implementation but closed and waited to make this change after https://github.com/apache/airflow/pull/38222"", 'created_at': datetime.datetime(2024, 10, 10, 8, 25, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2405850765, 'issue_id': 2542026959, 'author': 'jscheffl', 'body': 'Do we know what the ""lowest range"" supported in (positive and negative) range is? Then we could build a proper validation to prevent roll-over and document this.\r\n\r\nMaking this to float  I assume will make other problems... like if you have a very large number, adding one will still be the same number :-D', 'created_at': datetime.datetime(2024, 10, 10, 19, 10, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2449561571, 'issue_id': 2542026959, 'author': 'VladaZakharova', 'body': 'hi @potiuk !\r\nAs I understand there was a discussion regarding the way we want to implement this logic (the whole list is in the description of the PR). As I understand, now we have some kind of new ideas what we want here, so maybe we can agree with @jscheffl on the way it will be better to implement. WDYT?', 'created_at': datetime.datetime(2024, 10, 31, 10, 49, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2450790779, 'issue_id': 2542026959, 'author': 'potiuk', 'body': ""Yeah. Actually I like the idea of changing it to float - this has far less problems than int (rollover etc.) and the problem with +1/-1 is virtually not existing IMHO - because when you get to the value where +1/-1 is the same, then .... it is already such a big number that it does not matter any more. \r\n\r\nI'd be for rebasing and merging this change (@jscheffl ?)"", 'created_at': datetime.datetime(2024, 10, 31, 20, 48, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2451613605, 'issue_id': 2542026959, 'author': 'jscheffl', 'body': 'I am not a big fan of floats - maybe because in my job history I had always long long discussions about FMA and reproducibility of execution... but whatever.\r\n\r\nI would not block this but I still feel this is somewhat strange. integers have a very wide range in the default and we are talking about potentially a couple of thousand tasks we want to set priority. I don\'t see a point that  there is a real ""functional need"" to set priorities exponential or in another manner that - with a normal modelling - yo need such large ranges. Anyway that would be hard to manage from a functional standpoint. Also I don\'t see a realistic setup where the priority weight strategy because of a very hghe long DAG would get to such boundaries.\r\nAnd the argument that at a certain level a big big float with +1 is the same big big float and no harm... then we could also figure out the smallest bound of INT supported by Postgres/MySQL/whatsoever DB and just cap the upper/lower boundaries to prevent a roll-over.\r\n\r\nIt would be more convincing if there is a real problem/use case for such big priorities and not caused because DAG develops just add t00000000 many zeroes to the priority.', 'created_at': datetime.datetime(2024, 11, 1, 9, 53, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2452552943, 'issue_id': 2542026959, 'author': 'potiuk', 'body': '> I don\'t see a point that there is a real ""functional need"" to set priorities exponential or in another manner that - with a normal modelling - yo need such large ranges\r\n\r\nLet\'s not forget that we have the priority-weight cumulation: upstream, downstream and eventually Custom: https://airflow.apache.org/docs/apache-airflow/stable/administration-and-deployment/priority-weight.html#custom-weight-rule \r\n\r\nI can quite easily imagine some big numbers when we have huge 1000s task dags with multiple upstream/downstream tasks (and layers) and especially with custom weights I can easily imagine those numbers to add up (or maybe multiply in custom rules if one wants to have more aggressive priority propagation).', 'created_at': datetime.datetime(2024, 11, 1, 20, 35, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453088900, 'issue_id': 2542026959, 'author': 'jscheffl', 'body': '> > I don\'t see a point that there is a real ""functional need"" to set priorities exponential or in another manner that - with a normal modelling - yo need such large ranges\r\n> \r\n> Let\'s not forget that we have the priority-weight cumulation: upstream, downstream and eventually Custom: https://airflow.apache.org/docs/apache-airflow/stable/administration-and-deployment/priority-weight.html#custom-weight-rule\r\n> \r\n> I can quite easily imagine some big numbers when we have huge 1000s task dags with multiple upstream/downstream tasks (and layers) and especially with custom weights I can easily imagine those numbers to add up (or maybe multiply in custom rules if one wants to have more aggressive priority propagation).\r\n\r\nI still don\'t see a real need and use of such high numbers. Yes we accumulate priority weights by making sums. Assume we have a DAG with 1000 tasks chained (I hope nobody is modelling this, will really run a long time) and we use a priority of 10k (=10000). Then the accumulated priority is at 10 million.\r\n\r\nLooking into the INT value we use today the supported database have integer ranges with:\r\n\r\n- postgres: -2147483648 to +2147483647 (see https://www.postgresql.org/docs/current/datatype-numeric.html)\r\n- mysql: -2147483648 to +2147483647 (see https://dev.mysql.com/doc/refman/8.4/en/integer-types.html)\r\n- sqlite: -9223372036854775808 to +9223372036854775807 (see https://sqlite.org/datatype3.html)\r\n\r\nThis means I still can have 1000 tasks with a priority of 1 million in my DAG. Which is also something in the range of values you can model to fit into the INT range.\r\n\r\nInstead of switching to float I think we should rather cap the values and ensure they can not roll-over. And add documentation about the limits. The limtis of postgres and mysql are the same and sound reasonable (else: there is also the option to switch to bigint of course if you want to support incredible numbers non-float).', 'created_at': datetime.datetime(2024, 11, 2, 18, 37, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455364579, 'issue_id': 2542026959, 'author': 'pierrejeambrun', 'body': 'I am a little undecided on this one. On one hand if that is a use case, then why not, on the other hand, I tend to agree with Jens. I am having a hard time imagining a legitimate scenario for such big priority weights where downscaling to more reasonable values is not possible.', 'created_at': datetime.datetime(2024, 11, 4, 17, 59, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455421904, 'issue_id': 2542026959, 'author': 'potiuk', 'body': '@molcay -> is there a case that you might give as an example where it would be needed?', 'created_at': datetime.datetime(2024, 11, 4, 18, 28, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 2461687819, 'issue_id': 2542026959, 'author': 'molcay', 'body': ""Hi @potiuk, I am sorry but I don't have any specific case that can be used as an example. I only know #22781 was the start. Maybe, @kosteev has an idea?"", 'created_at': datetime.datetime(2024, 11, 7, 9, 7, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462272348, 'issue_id': 2542026959, 'author': 'kosteev', 'body': ""Not pretending that this is very practical case, however in Cloud Composer we saw this (and not only once):\r\n\r\nImagine that you give customer an example DAG that looks like this:\r\n<pre>\r\n...\r\n\r\ndag = DAG(\r\n    'dag_id',\r\n    default_args=default_args,\r\n    schedule_interval='*/10 * * * *',\r\n)\r\n\r\n# task with highest priority\r\nt1 = BashOperator(\r\n    task_id='task_id',\r\n    bash_command='echo test',\r\n    dag=dag,\r\n    priority_weight=2**31 - 1)\r\n</pre>\r\n\r\nCustomer modifies DAG and adds extra task `t2` by copying `t1` and setting dependencies between them:\r\n<pre>\r\n...\r\n\r\ndag = DAG(\r\n    'dag_id',\r\n    default_args=default_args,\r\n    schedule_interval='*/10 * * * *',\r\n)\r\n\r\n# task with highest priority\r\nt1 = BashOperator(\r\n    task_id='task_id',\r\n    bash_command='echo test',\r\n    dag=dag,\r\n    priority_weight=2**31 - 1)\r\n\r\nt2 = BashOperator(\r\n    task_id='task_id2',\r\n    bash_command='echo test2',\r\n    dag=dag,\r\n    priority_weight=2**31 - 1)\r\n\r\nt1 >> t2\r\n</pre>\r\n\r\nThen this DAG will cause an issue and break scheduler (because t2 priority_weight will overflow).\r\n\r\nBtw, I found and example DAG like this on stackoverflow https://stackoverflow.com/questions/66098050/airflow-dag-not-triggered-at-schedule-time.\r\n\r\nI am not saying that this is at all common, but it is very unexpected for user to have scheduler broken after slight modification of the DAG like this."", 'created_at': datetime.datetime(2024, 11, 7, 13, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462379944, 'issue_id': 2542026959, 'author': 'pierrejeambrun', 'body': 'Those are just unreasonable values and it is not a surprise to me that things break down the line.\r\n\r\nIf I code a mapped task that expand to (2*32 - 1) most likely things will also break.\r\n\r\nWe can always add a safeguard, or a better error handling on the scheduler side to make that more explicit, but changing the  underlying datatype to allow usage of extremely high values does not achieve much (IMO).\r\n\r\nAlso I believe that this can already be solved by a custom cluster policy if a company encounter this edge case. (preventing people from using too high values)', 'created_at': datetime.datetime(2024, 11, 7, 14, 29, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462495473, 'issue_id': 2542026959, 'author': 'kosteev', 'body': ""I agree that changing datatype doesn't solve issue radically.\r\n\r\nI haven't read all the comments here, but my vote is to have validation/safeguard for this (e.g. validation during DAG parsing and throwing import error for such a DAG, that customer could see it).\r\n\r\nIn general the fact that Airflow scheduler (or DAG processor) can break because of user code doesn't look right, IMHO."", 'created_at': datetime.datetime(2024, 11, 7, 15, 15, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2467970395, 'issue_id': 2542026959, 'author': 'potiuk', 'body': 'Yeah. I am convinced now, that we should rather cap the values, not change the type.', 'created_at': datetime.datetime(2024, 11, 11, 11, 41, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473037540, 'issue_id': 2542026959, 'author': 'molcay', 'body': 'Since #43611 is already approved and looks like it is about to merge, I am closing this PR', 'created_at': datetime.datetime(2024, 11, 13, 9, 56, 42, tzinfo=datetime.timezone.utc)}]","jscheffl on (2024-09-23 17:59:57 UTC): I don't understand the reason and need to change the priority weight from int to float. For me this adds just extra complexity and I see no benefit.

molcay (Issue Creator) on (2024-09-27 07:36:57 UTC): Hi @jscheffl,
There was this issue/discussion: https://github.com/apache/airflow/issues/22781 which is about the integer out-of-range for the priority weight field. This error might happen for PostgreSQL. There were a lot of discussions around it in different PRs (that I mentioned in this PR's description). As far as I understand; the next planned move was to make this change after https://github.com/apache/airflow/pull/38222 as mentioned https://github.com/apache/airflow/pull/38160#issuecomment-2002370319.

pierrejeambrun on (2024-09-27 08:30:50 UTC): This seems a little odd to me, just to be sure I understand what we are trying to solve, are we trying to address integer overflow for weights and operation on weights ?

I don't see the use case for using such big numbers for priority weights.

molcay (Issue Creator) on (2024-10-10 08:25:12 UTC): Hi @pierrejeambrun,

The prior target is to address integer overflow. Because it is different for different database engines.
Since we don't have any given range to the users, I think we just need to be sure that it is not failing or do this to avoid failing. I read all the discussions that were held before; this was the one of the previous implementation but closed and waited to make this change after https://github.com/apache/airflow/pull/38222

jscheffl on (2024-10-10 19:10:32 UTC): Do we know what the ""lowest range"" supported in (positive and negative) range is? Then we could build a proper validation to prevent roll-over and document this.

Making this to float  I assume will make other problems... like if you have a very large number, adding one will still be the same number :-D

VladaZakharova on (2024-10-31 10:49:10 UTC): hi @potiuk !
As I understand there was a discussion regarding the way we want to implement this logic (the whole list is in the description of the PR). As I understand, now we have some kind of new ideas what we want here, so maybe we can agree with @jscheffl on the way it will be better to implement. WDYT?

potiuk on (2024-10-31 20:48:57 UTC): Yeah. Actually I like the idea of changing it to float - this has far less problems than int (rollover etc.) and the problem with +1/-1 is virtually not existing IMHO - because when you get to the value where +1/-1 is the same, then .... it is already such a big number that it does not matter any more. 

I'd be for rebasing and merging this change (@jscheffl ?)

jscheffl on (2024-11-01 09:53:07 UTC): I am not a big fan of floats - maybe because in my job history I had always long long discussions about FMA and reproducibility of execution... but whatever.

I would not block this but I still feel this is somewhat strange. integers have a very wide range in the default and we are talking about potentially a couple of thousand tasks we want to set priority. I don't see a point that  there is a real ""functional need"" to set priorities exponential or in another manner that - with a normal modelling - yo need such large ranges. Anyway that would be hard to manage from a functional standpoint. Also I don't see a realistic setup where the priority weight strategy because of a very hghe long DAG would get to such boundaries.
And the argument that at a certain level a big big float with +1 is the same big big float and no harm... then we could also figure out the smallest bound of INT supported by Postgres/MySQL/whatsoever DB and just cap the upper/lower boundaries to prevent a roll-over.

It would be more convincing if there is a real problem/use case for such big priorities and not caused because DAG develops just add t00000000 many zeroes to the priority.

potiuk on (2024-11-01 20:35:41 UTC): Let's not forget that we have the priority-weight cumulation: upstream, downstream and eventually Custom: https://airflow.apache.org/docs/apache-airflow/stable/administration-and-deployment/priority-weight.html#custom-weight-rule 

I can quite easily imagine some big numbers when we have huge 1000s task dags with multiple upstream/downstream tasks (and layers) and especially with custom weights I can easily imagine those numbers to add up (or maybe multiply in custom rules if one wants to have more aggressive priority propagation).

jscheffl on (2024-11-02 18:37:44 UTC): I still don't see a real need and use of such high numbers. Yes we accumulate priority weights by making sums. Assume we have a DAG with 1000 tasks chained (I hope nobody is modelling this, will really run a long time) and we use a priority of 10k (=10000). Then the accumulated priority is at 10 million.

Looking into the INT value we use today the supported database have integer ranges with:

- postgres: -2147483648 to +2147483647 (see https://www.postgresql.org/docs/current/datatype-numeric.html)
- mysql: -2147483648 to +2147483647 (see https://dev.mysql.com/doc/refman/8.4/en/integer-types.html)
- sqlite: -9223372036854775808 to +9223372036854775807 (see https://sqlite.org/datatype3.html)

This means I still can have 1000 tasks with a priority of 1 million in my DAG. Which is also something in the range of values you can model to fit into the INT range.

Instead of switching to float I think we should rather cap the values and ensure they can not roll-over. And add documentation about the limits. The limtis of postgres and mysql are the same and sound reasonable (else: there is also the option to switch to bigint of course if you want to support incredible numbers non-float).

pierrejeambrun on (2024-11-04 17:59:12 UTC): I am a little undecided on this one. On one hand if that is a use case, then why not, on the other hand, I tend to agree with Jens. I am having a hard time imagining a legitimate scenario for such big priority weights where downscaling to more reasonable values is not possible.

potiuk on (2024-11-04 18:28:38 UTC): @molcay -> is there a case that you might give as an example where it would be needed?

molcay (Issue Creator) on (2024-11-07 09:07:56 UTC): Hi @potiuk, I am sorry but I don't have any specific case that can be used as an example. I only know #22781 was the start. Maybe, @kosteev has an idea?

kosteev on (2024-11-07 13:42:00 UTC): Not pretending that this is very practical case, however in Cloud Composer we saw this (and not only once):

Imagine that you give customer an example DAG that looks like this:
<pre>
...

dag = DAG(
    'dag_id',
    default_args=default_args,
    schedule_interval='*/10 * * * *',
)

# task with highest priority
t1 = BashOperator(
    task_id='task_id',
    bash_command='echo test',
    dag=dag,
    priority_weight=2**31 - 1)
</pre>

Customer modifies DAG and adds extra task `t2` by copying `t1` and setting dependencies between them:
<pre>
...

dag = DAG(
    'dag_id',
    default_args=default_args,
    schedule_interval='*/10 * * * *',
)

# task with highest priority
t1 = BashOperator(
    task_id='task_id',
    bash_command='echo test',
    dag=dag,
    priority_weight=2**31 - 1)

t2 = BashOperator(
    task_id='task_id2',
    bash_command='echo test2',
    dag=dag,
    priority_weight=2**31 - 1)

t1 >> t2
</pre>

Then this DAG will cause an issue and break scheduler (because t2 priority_weight will overflow).

Btw, I found and example DAG like this on stackoverflow https://stackoverflow.com/questions/66098050/airflow-dag-not-triggered-at-schedule-time.

I am not saying that this is at all common, but it is very unexpected for user to have scheduler broken after slight modification of the DAG like this.

pierrejeambrun on (2024-11-07 14:29:24 UTC): Those are just unreasonable values and it is not a surprise to me that things break down the line.

If I code a mapped task that expand to (2*32 - 1) most likely things will also break.

We can always add a safeguard, or a better error handling on the scheduler side to make that more explicit, but changing the  underlying datatype to allow usage of extremely high values does not achieve much (IMO).

Also I believe that this can already be solved by a custom cluster policy if a company encounter this edge case. (preventing people from using too high values)

kosteev on (2024-11-07 15:15:33 UTC): I agree that changing datatype doesn't solve issue radically.

I haven't read all the comments here, but my vote is to have validation/safeguard for this (e.g. validation during DAG parsing and throwing import error for such a DAG, that customer could see it).

In general the fact that Airflow scheduler (or DAG processor) can break because of user code doesn't look right, IMHO.

potiuk on (2024-11-11 11:41:38 UTC): Yeah. I am convinced now, that we should rather cap the values, not change the type.

molcay (Issue Creator) on (2024-11-13 09:56:42 UTC): Since #43611 is already approved and looks like it is about to merge, I am closing this PR

"
2541869657,pull_request,closed,,handle ClientError raised after key is missing during DyanmoDB table.get_item,"## Why
Since [moto 5.0.15](https://github.com/getmoto/moto/blob/5.0.15/CHANGELOG.md?plain=1#L61), it validates whether the key exists which might indicate we does not check whether the key exist in our sensor.

## What 
Add an additional check to handle boto ClientError


<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-09-23 08:00:02+00:00,[],2024-09-24 15:04:52+00:00,2024-09-24 15:04:52+00:00,https://github.com/apache/airflow/pull/42408,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('upgrade to newer dependencies', 'If set, upgrade to newer dependencies is forced'), ('canary', 'When set on PR running from apache repo - behave as canary run')]","[{'comment_id': 2368671061, 'issue_id': 2541869657, 'author': 'eladkal', 'body': 'We are having some canary build failure around dynamo db:\r\n\r\n```\r\nFAILED tests/providers/amazon/aws/sensors/test_dynamodb.py::TestDynamoDBValueSensor::test_sensor_with_pk - botocore.exceptions.ClientError: An error occurred (ValidationException) when calling the GetItem operation: The provided key element does not match the schema\r\n4441\r\nFAILED tests/providers/amazon/aws/sensors/test_dynamodb.py::TestDynamoDBMultipleValuesSensor::test_sensor_with_pk - botocore.exceptions.ClientError: An error occurred (ValidationException) when calling the GetItem operation: The provided key element does not match the schema\r\n```\r\nhttps://github.com/apache/airflow/actions/runs/10989610037/job/30508381216#step:7:4458\r\n\r\nLooks like `botocore` changed the dynamodb endpoints https://github.com/boto/botocore/issues/3263#issuecomment-2365345634\r\n\r\nAdded canary and upgrade labels to rerun the CI with the updated versions', 'created_at': datetime.datetime(2024, 9, 23, 15, 38, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2368916670, 'issue_id': 2541869657, 'author': 'vincbeck', 'body': 'Could you add/update unit test to cover this new branch?', 'created_at': datetime.datetime(2024, 9, 23, 17, 27, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2369246160, 'issue_id': 2541869657, 'author': 'eladkal', 'body': '> We are having some canary build failure around dynamo db:\r\n> \r\n> ```\r\n> FAILED tests/providers/amazon/aws/sensors/test_dynamodb.py::TestDynamoDBValueSensor::test_sensor_with_pk - botocore.exceptions.ClientError: An error occurred (ValidationException) when calling the GetItem operation: The provided key element does not match the schema\r\n> 4441\r\n> FAILED tests/providers/amazon/aws/sensors/test_dynamodb.py::TestDynamoDBMultipleValuesSensor::test_sensor_with_pk - botocore.exceptions.ClientError: An error occurred (ValidationException) when calling the GetItem operation: The provided key element does not match the schema\r\n> ```\r\n> \r\n> https://github.com/apache/airflow/actions/runs/10989610037/job/30508381216#step:7:4458\r\n> \r\n> Looks like `botocore` changed the dynamodb endpoints [boto/botocore#3263 (comment)](https://github.com/boto/botocore/issues/3263#issuecomment-2365345634)\r\n> \r\n> Added canary and upgrade labels to rerun the CI with the updated versions\r\n\r\nFixed in https://github.com/apache/airflow/pull/42419', 'created_at': datetime.datetime(2024, 9, 23, 19, 56, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2370872972, 'issue_id': 2541869657, 'author': 'Lee-W', 'body': '> Could you add/update unit test to cover this new branch?\r\n\r\nSure! just added', 'created_at': datetime.datetime(2024, 9, 24, 10, 23, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2370874334, 'issue_id': 2541869657, 'author': 'Lee-W', 'body': '> > We are having some canary build failure around dynamo db:\r\n> > ```\r\n> > FAILED tests/providers/amazon/aws/sensors/test_dynamodb.py::TestDynamoDBValueSensor::test_sensor_with_pk - botocore.exceptions.ClientError: An error occurred (ValidationException) when calling the GetItem operation: The provided key element does not match the schema\r\n> > 4441\r\n> > FAILED tests/providers/amazon/aws/sensors/test_dynamodb.py::TestDynamoDBMultipleValuesSensor::test_sensor_with_pk - botocore.exceptions.ClientError: An error occurred (ValidationException) when calling the GetItem operation: The provided key element does not match the schema\r\n> > ```\r\n> > \r\n> > \r\n> >     \r\n> >       \r\n> >     \r\n> > \r\n> >       \r\n> >     \r\n> > \r\n> >     \r\n> >   \r\n> > https://github.com/apache/airflow/actions/runs/10989610037/job/30508381216#step:7:4458\r\n> > Looks like `botocore` changed the dynamodb endpoints [boto/botocore#3263 (comment)](https://github.com/boto/botocore/issues/3263#issuecomment-2365345634)\r\n> > Added canary and upgrade labels to rerun the CI with the updated versions\r\n> \r\n> Fixed in #42419\r\n\r\nThanks! This one was originally meant to solve that, but seems to be the wrong fix 🤦\u200d♂️', 'created_at': datetime.datetime(2024, 9, 24, 10, 24, 10, tzinfo=datetime.timezone.utc)}]","eladkal on (2024-09-23 15:38:44 UTC): We are having some canary build failure around dynamo db:

```
FAILED tests/providers/amazon/aws/sensors/test_dynamodb.py::TestDynamoDBValueSensor::test_sensor_with_pk - botocore.exceptions.ClientError: An error occurred (ValidationException) when calling the GetItem operation: The provided key element does not match the schema
4441
FAILED tests/providers/amazon/aws/sensors/test_dynamodb.py::TestDynamoDBMultipleValuesSensor::test_sensor_with_pk - botocore.exceptions.ClientError: An error occurred (ValidationException) when calling the GetItem operation: The provided key element does not match the schema
```
https://github.com/apache/airflow/actions/runs/10989610037/job/30508381216#step:7:4458

Looks like `botocore` changed the dynamodb endpoints https://github.com/boto/botocore/issues/3263#issuecomment-2365345634

Added canary and upgrade labels to rerun the CI with the updated versions

vincbeck on (2024-09-23 17:27:11 UTC): Could you add/update unit test to cover this new branch?

eladkal on (2024-09-23 19:56:39 UTC): Fixed in https://github.com/apache/airflow/pull/42419

Lee-W (Issue Creator) on (2024-09-24 10:23:23 UTC): Sure! just added

Lee-W (Issue Creator) on (2024-09-24 10:24:10 UTC): Thanks! This one was originally meant to solve that, but seems to be the wrong fix 🤦‍♂️

"
2541869000,pull_request,closed,,Add 'name' and 'group' to DatasetModel,"The unique index is also modified to include 'name', so now an asset is considered unique if *either* the name or URI is different. This makes no difference for the moment---the name is simply populated from URI. We'll add a public interface to set the name in a later PR.

This PR strictly only touches the model so it does not conflict with too many things, and can be merged quickly.

The unique index on DatasetAliasModel is also renamed since we were using a wrong naming convention on both models. Since the index namespace is shared in the entire database, the index name should include additional components. The idx_name_unique is still usable, but we should a better citizen and name this the right way(tm).",uranusjr,2024-09-23 07:59:42+00:00,[],2024-09-30 06:27:43+00:00,2024-09-30 06:27:41+00:00,https://github.com/apache/airflow/pull/42407,"[('kind:documentation', ''), ('area:db-migrations', 'PRs with DB migration')]","[{'comment_id': 2372844356, 'issue_id': 2541869000, 'author': 'uranusjr', 'body': 'Index on MySQL can only be up to 3072 bytes, so I’m halving the length of `name` and `uri` so we can put them both in an index. I don’t think anyone really needs 1500 characters in their URI anyway…', 'created_at': datetime.datetime(2024, 9, 25, 3, 38, 31, tzinfo=datetime.timezone.utc)}]","uranusjr (Issue Creator) on (2024-09-25 03:38:31 UTC): Index on MySQL can only be up to 3072 bytes, so I’m halving the length of `name` and `uri` so we can put them both in an index. I don’t think anyone really needs 1500 characters in their URI anyway…

"
2541863804,pull_request,closed,,Chart: Default airflow version to 2.10.2,Set the default airflow version to 2.10.2,ephraimbuddy,2024-09-23 07:57:03+00:00,[],2025-02-05 15:51:59+00:00,2024-09-23 13:03:49+00:00,https://github.com/apache/airflow/pull/42406,"[('area:helm-chart', 'Airflow Helm Chart')]",[],
2541839384,pull_request,closed,,Airflow 2.10.2 has been released,,ephraimbuddy,2024-09-23 07:47:33+00:00,[],2024-09-28 14:41:40+00:00,2024-09-28 14:41:38+00:00,https://github.com/apache/airflow/pull/42405,"[('area:dev-tools', ''), ('kind:documentation', ''), ('area:production-image', 'Production image improvements and fixes')]",[],
2541590945,pull_request,closed,,"Remove logical_date from DAG Run APIs and Functions, transition to run_id as sole identifier for Airflow 3.0","<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
After renaming `execuiton_date` to `logical_date` in [43902](https://github.com/apache/airflow/pull/43902) this PR removes the `logical_date` arguments from functions and APIs that are used to retrieve DAG runs, aligning with the broader changes introduced in Airflow 2.2 and preparing for Airflow 3.0. The functions now use `run_id` as the sole identifier for DAG runs, simplifying the process and eliminating deprecated behaviour.

### **Motivation**:
In Airflow, `execution_date` has historically been used to distinguish different DAG run instances. However, the introduction of `run_id` and the DAG run concept in Airflow 2.2 shifts away from using `execution_date` as an identifier. Continuing to rely on `execution_date` introduces limitations, such as the inability to handle multiple DAG runs at the same logical time, especially in cases like `TriggerDagRunOperator` when dynamic runs are generated.

This PR eliminates these limitations by removing `execution_date`and `logical_date` in favor of `run_id`. 

### **Key Changes**:
1. **API and Function Changes**:
   - [x] The `logical_date` arguments have been removed from all public APIs and Python functions related to DAG run lookups.
   - [x] `run_id` is now the exclusive identifier for DAG runs in these contexts.

2. **Database Migration**:
   - [x] The unique constraint on `execution_date` in the database has been dropped, as `run_id` now ensures the uniqueness of DAG runs as part of [#41818](https://github.com/apache/airflow/pull/41818)

### **Rationale**:
Removing `execution_date` is necessary to enable more flexible DAG run management. For example, dynamic runs created by `TriggerDagRunOperator` can now be correctly identified and managed without awkward workarounds as discussed in this [doc](https://cwiki.apache.org/confluence/display/AIRFLOW/AIP-83+Remove+Execution+Date+Unique+Constraint+from+DAG+Run). This change makes subsequent DAG run lookups easier and more robust, while also simplifying the database schema by removing the unique constraint on `execution_date`.

### **How `execution_date` and `logical_date` Work**
1. **Logical date is equivalent to execution date**: The two are just different names for the same value.
2. **Timetable controls logical date**: The logical date can be set to any value, not necessarily tied to the data interval's start or end.
3. **Schedules dictate behavior**: For value-based schedules (like cron), the logical date is set by the timetable class used.

Additionally, users will still be able to view `execution_date` for reference, renamed as `logical_date`, and paired with `run_id` for clarity in the web UI, making it easier to distinguish between DAG runs.

### **Testing**
- Updated unit tests to reflect the changes.

closes: [#42339](https://github.com/apache/airflow/issues/42339), [#42340](https://github.com/apache/airflow/issues/42340) and [#42338](https://github.com/apache/airflow/issues/42338)
<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",sunank200,2024-09-23 05:12:02+00:00,[],2024-11-25 05:34:43+00:00,2024-11-20 14:01:20+00:00,https://github.com/apache/airflow/pull/42404,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:webserver', 'Webserver related Issues'), ('area:CLI', ''), ('area:providers', ''), ('area:API', ""Airflow's REST/HTTP API""), ('provider:cncf-kubernetes', 'Kubernetes provider related issues'), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('provider:databricks', ''), ('area:Triggerer', ''), ('area:db-migrations', 'PRs with DB migration'), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes'), ('AIP-83', 'Remove Execution Date Unique Constraint from DAG Run'), ('legacy ui', 'Whether legacy UI change should be allowed in PR'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2469302913, 'issue_id': 2541590945, 'author': 'sunank200', 'body': 'The following PR: [https://github.com/apache/airflow/pull/43902](https://github.com/apache/airflow/pull/43902) renames the `execution_date` to `logical_date` across the codebase.', 'created_at': datetime.datetime(2024, 11, 11, 23, 49, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2488760938, 'issue_id': 2541590945, 'author': 'rawwar', 'body': '@sunank200 , will there be another PR to remove logical_date from Fastapi endpoints as well?', 'created_at': datetime.datetime(2024, 11, 20, 14, 39, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2488873522, 'issue_id': 2541590945, 'author': 'sunank200', 'body': '> @sunank200 , will there be another PR to remove logical_date from Fastapi endpoints as well?\r\n\r\n@rawwar I think `logical_date` would be there to filter as part of FastAPI endpoints. But we solely identify `DagRun` by `run_id`.', 'created_at': datetime.datetime(2024, 11, 20, 15, 23, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2488900971, 'issue_id': 2541590945, 'author': 'uranusjr', 'body': 'We should remove it if the frontend can work without them.', 'created_at': datetime.datetime(2024, 11, 20, 15, 31, 47, tzinfo=datetime.timezone.utc)}]","sunank200 (Issue Creator) on (2024-11-11 23:49:40 UTC): The following PR: [https://github.com/apache/airflow/pull/43902](https://github.com/apache/airflow/pull/43902) renames the `execution_date` to `logical_date` across the codebase.

rawwar on (2024-11-20 14:39:26 UTC): @sunank200 , will there be another PR to remove logical_date from Fastapi endpoints as well?

sunank200 (Issue Creator) on (2024-11-20 15:23:19 UTC): @rawwar I think `logical_date` would be there to filter as part of FastAPI endpoints. But we solely identify `DagRun` by `run_id`.

uranusjr on (2024-11-20 15:31:47 UTC): We should remove it if the frontend can work without them.

"
2541582388,pull_request,closed,,Add git clone instruction to the begining of breeze setup,"

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",SamLiaoP,2024-09-23 05:04:19+00:00,[],2024-09-23 08:31:12+00:00,2024-09-23 08:31:08+00:00,https://github.com/apache/airflow/pull/42403,"[('area:dev-tools', '')]","[{'comment_id': 2367245028, 'issue_id': 2541582388, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 23, 5, 4, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2367546946, 'issue_id': 2541582388, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 23, 8, 31, 10, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-23 05:04:24 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-23 08:31:10 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2541226848,pull_request,closed,,"Adjusted dev container to be modern, and fixed it to actually work.","<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
I want in this PR to fix and work on the devcontainer for easier development.
Things I have done:

- Fixed `initializeCommand`.
- Added extentions.
- Moved the extentions and settings to `customizations.vscode`.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Avihais12344,2024-09-22 19:36:17+00:00,[],2024-11-28 00:16:22+00:00,2024-11-28 00:16:22+00:00,https://github.com/apache/airflow/pull/42400,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:serialization', ''), ('area:API', ""Airflow's REST/HTTP API"")]","[{'comment_id': 2384935754, 'issue_id': 2541226848, 'author': 'potiuk', 'body': ""Seconding Jens' comments. Also you have to make sure it works for codespaces. Did you test it with codespaces @Avihais12344  ?"", 'created_at': datetime.datetime(2024, 10, 1, 6, 48, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2393091297, 'issue_id': 2541226848, 'author': 'Avihais12344', 'body': ""> Seconding Jens' comments. Also you have to make sure it works for codespaces. Did you test it with codespaces @Avihais12344 ?\r\n\r\nNo, but I need to do it, thanks for reminding me."", 'created_at': datetime.datetime(2024, 10, 4, 8, 4, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2393139913, 'issue_id': 2541226848, 'author': 'Avihais12344', 'body': '> I was reading the PR description but am missing some context or bug ticket.\r\n> \r\n> I personally have seen VSCode sometimes broken (and basically gave up using personally) - but can you please describe the error before and how to test?\r\n> \r\n> What I do not understand, with your PR the initializationCommand is commented-out. Why?\r\n\r\nThe problem I had is that the `initializeCommand` just failed my devcontainer, so I had to remove it to make it work.', 'created_at': datetime.datetime(2024, 10, 4, 8, 30, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2394837324, 'issue_id': 2541226848, 'author': 'potiuk', 'body': '>  The problem I had is that the initializeCommand just failed my devcontainer, so I had to remove it to make it work.\r\n\r\nSo basically this PR implements a change that you have no idea what is doing other than that it fixes your particular case (which might or might not be something special for your environment - you have basically no idea ?\r\n\r\nAm I reading it right?', 'created_at': datetime.datetime(2024, 10, 5, 0, 56, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2396704096, 'issue_id': 2541226848, 'author': 'Avihais12344', 'body': ""> > Seconding Jens' comments. Also you have to make sure it works for codespaces. Did you test it with codespaces @Avihais12344 ?\r\n> \r\n> No, but I need to do it, thanks for reminding me.\r\n\r\nI have tested it with codespace, and it seems to work."", 'created_at': datetime.datetime(2024, 10, 7, 11, 47, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2396709253, 'issue_id': 2541226848, 'author': 'Avihais12344', 'body': '> > The problem I had is that the initializeCommand just failed my devcontainer, so I had to remove it to make it work.\r\n> \r\n> So basically this PR implements a change that you have no idea what is doing other than that it fixes your particular case (which might or might not be something special for your environment - you have basically no idea ?\r\n> \r\n> Am I reading it right?\r\n\r\nNot exactly, removing the command have fixed the problem. But I have commented out the problem, and not removed it, because I wanted to leave it for people if they encounter the problem described there. They would at least have a solution, instead of nothing.\r\n\r\nI think that it would keep the conversation under the [thread](https://github.com/apache/airflow/pull/42400#discussion_r1790070294), as it talkes about the same thing.', 'created_at': datetime.datetime(2024, 10, 7, 11, 49, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2492612664, 'issue_id': 2541226848, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 11, 22, 0, 16, 27, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-01 06:48:45 UTC): Seconding Jens' comments. Also you have to make sure it works for codespaces. Did you test it with codespaces @Avihais12344  ?

Avihais12344 (Issue Creator) on (2024-10-04 08:04:47 UTC): No, but I need to do it, thanks for reminding me.

Avihais12344 (Issue Creator) on (2024-10-04 08:30:05 UTC): The problem I had is that the `initializeCommand` just failed my devcontainer, so I had to remove it to make it work.

potiuk on (2024-10-05 00:56:41 UTC): So basically this PR implements a change that you have no idea what is doing other than that it fixes your particular case (which might or might not be something special for your environment - you have basically no idea ?

Am I reading it right?

Avihais12344 (Issue Creator) on (2024-10-07 11:47:17 UTC): I have tested it with codespace, and it seems to work.

Avihais12344 (Issue Creator) on (2024-10-07 11:49:51 UTC): Not exactly, removing the command have fixed the problem. But I have commented out the problem, and not removed it, because I wanted to leave it for people if they encounter the problem described there. They would at least have a solution, instead of nothing.

I think that it would keep the conversation under the [thread](https://github.com/apache/airflow/pull/42400#discussion_r1790070294), as it talkes about the same thing.

github-actions[bot] on (2024-11-22 00:16:27 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2541102100,pull_request,closed,,Add heartbeat metric for DAG processor ,"

closes: #42380 


",rawwar,2024-09-22 14:17:25+00:00,[],2024-10-01 21:59:54+00:00,2024-10-01 21:59:54+00:00,https://github.com/apache/airflow/pull/42398,"[('area:Scheduler', 'including HA (high availability) scheduler')]","[{'comment_id': 2367261286, 'issue_id': 2541102100, 'author': 'rawwar', 'body': ""I've tested it locally with a standalone dag processor and its emitting the heartbeat for dag processor:\r\n![image](https://github.com/user-attachments/assets/b84ff561-51d7-4848-9e45-b02c4ddb9118)"", 'created_at': datetime.datetime(2024, 9, 23, 5, 23, 37, tzinfo=datetime.timezone.utc)}]","rawwar (Issue Creator) on (2024-09-23 05:23:37 UTC): I've tested it locally with a standalone dag processor and its emitting the heartbeat for dag processor:
![image](https://github.com/user-attachments/assets/b84ff561-51d7-4848-9e45-b02c4ddb9118)

"
2541081851,pull_request,closed,,Add and improve coverage for new UI,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Add configuration for running test coverage locally for the new UI. Also added tests for the `ChakraWrapper` and `RouterWrapper`.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",DjVinnii,2024-09-22 13:28:20+00:00,[],2024-10-04 15:01:48+00:00,2024-09-23 14:14:02+00:00,https://github.com/apache/airflow/pull/42397,"[('area:dev-tools', ''), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-38', 'Modern Web Application')]",[],
2540438266,pull_request,closed,,Enabling TLS arguments for FastAPI,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Passing SSL arguments down to process invocation for `fastapi-api`.

Have erred to leave a couple things untouched (for the moment at least). 
- The debug branch as invoking via `gunicorn` has some odd logs (https://github.com/apache/airflow/pull/41896). Have assumed the intent for now is to keep debug using `fastapi`. `fastapi` cli does not seem to have flags for SSL/TLS.
- `airflow/airflow/cli/commands/internal_api_command.py`, have inferred from https://github.com/apache/airflow/pull/41896 that they're kinda separate

related: [42359](https://github.com/apache/airflow/issues/42359)

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",JoshuaXOng,2024-09-21 17:50:24+00:00,[],2024-09-22 12:43:24+00:00,2024-09-22 12:43:21+00:00,https://github.com/apache/airflow/pull/42395,"[('area:CLI', ''), ('type:improvement', 'Changelog: Improvements')]","[{'comment_id': 2365267588, 'issue_id': 2540438266, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 21, 17, 50, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2366770247, 'issue_id': 2540438266, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 22, 12, 43, 23, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-21 17:50:28 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-22 12:43:23 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2540172838,pull_request,closed,,Add slack notification for canary build failures,"closes: https://github.com/apache/airflow/issues/42203

this PR should send message to this slack channel https://apache-airflow.slack.com/archives/C07MWFASWJ1 if the CI is failed.

after verification on the main branch we need to change the alerts to be sent to the internal-ci-cd channel.

<img width=""350"" alt=""image"" src=""https://github.com/user-attachments/assets/f4084baf-0278-456b-a77b-6651193d77d3"">



<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-09-21 10:40:03+00:00,[],2024-09-27 19:48:45+00:00,2024-09-27 12:07:49+00:00,https://github.com/apache/airflow/pull/42394,"[('area:dev-tools', '')]","[{'comment_id': 2379951073, 'issue_id': 2540172838, 'author': 'jscheffl', 'body': 'Seems we have a bug in the logic... with my limited Github actions knowledge... I assume dependecy is missing and therefore it is skipped as no failure is made at point of the task is activated and then decides to skip.\r\n\r\n![image](https://github.com/user-attachments/assets/929a1851-3b41-46eb-938c-0f8b8166fa0e)', 'created_at': datetime.datetime(2024, 9, 27, 19, 48, 44, tzinfo=datetime.timezone.utc)}]","jscheffl on (2024-09-27 19:48:44 UTC): Seems we have a bug in the logic... with my limited Github actions knowledge... I assume dependecy is missing and therefore it is skipped as no failure is made at point of the task is activated and then decides to skip.

![image](https://github.com/user-attachments/assets/929a1851-3b41-46eb-938c-0f8b8166fa0e)

"
2539858950,pull_request,closed,,Removing time folder from standard provider operators/sensors,"Removing time folder from standard provider operators/sensors.

https://github.com/apache/airflow/pull/42252#discussion_r1767996586

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-09-21 01:02:15+00:00,[],2025-02-06 11:46:34+00:00,2024-09-21 16:17:09+00:00,https://github.com/apache/airflow/pull/42392,"[('area:providers', ''), ('area:core-operators', 'Operators, Sensors and hooks within Core Airflow'), ('provider:standard', '')]",[],
2539709434,pull_request,closed,,Simple auth manager documentation,"Create documentation for simple auth manager.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-20 21:28:41+00:00,[],2024-09-24 15:13:53+00:00,2024-09-24 15:13:52+00:00,https://github.com/apache/airflow/pull/42390,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('kind:documentation', ''), ('provider:fab', '')]","[{'comment_id': 2365041338, 'issue_id': 2539709434, 'author': 'shahar1', 'body': 'Fails in static checks', 'created_at': datetime.datetime(2024, 9, 21, 7, 22, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2369007080, 'issue_id': 2539709434, 'author': 'vincbeck', 'body': ""It seems modifying docs from Airflow core and providers at the same time is challenging for the CI. It is complaining some document do not exist but they do (in the PR). Therefore, I created a PR for Airflow core only: #42418. Once this one is merged, I'll create another one for providers"", 'created_at': datetime.datetime(2024, 9, 23, 18, 6, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2369417204, 'issue_id': 2539709434, 'author': 'vincbeck', 'body': 'CI is green. I ended up removing references to Airflow core documentation from providers. Somehow, the CLI was complaining it could not find a page ... that exists', 'created_at': datetime.datetime(2024, 9, 23, 21, 21, 57, tzinfo=datetime.timezone.utc)}]","shahar1 on (2024-09-21 07:22:06 UTC): Fails in static checks

vincbeck (Issue Creator) on (2024-09-23 18:06:01 UTC): It seems modifying docs from Airflow core and providers at the same time is challenging for the CI. It is complaining some document do not exist but they do (in the PR). Therefore, I created a PR for Airflow core only: #42418. Once this one is merged, I'll create another one for providers

vincbeck (Issue Creator) on (2024-09-23 21:21:57 UTC): CI is green. I ended up removing references to Airflow core documentation from providers. Somehow, the CLI was complaining it could not find a page ... that exists

"
2539672661,pull_request,closed,,Improve CI workflows docs,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Proofread and DRY for the CI workflows docs.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",shahar1,2024-09-20 21:00:45+00:00,[],2024-10-01 21:56:38+00:00,2024-09-21 11:29:58+00:00,https://github.com/apache/airflow/pull/42389,"[('area:dev-tools', ''), ('type:doc-only', 'Changelog: Doc Only')]","[{'comment_id': 2387147156, 'issue_id': 2539672661, 'author': 'potiuk', 'body': 'Nice', 'created_at': datetime.datetime(2024, 10, 1, 21, 56, 37, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-01 21:56:37 UTC): Nice

"
2539648499,pull_request,closed,,Do not attempt to provide not stringified objects to UI via xcom if pickling is active,"With this PR the xcom will always be returned as string if XCom pickling is active. Like it was in Airflow 2.9.

closes: #42117
",jscheffl,2024-09-20 20:44:52+00:00,[],2024-09-25 21:59:33+00:00,2024-09-25 21:56:58+00:00,https://github.com/apache/airflow/pull/42388,"[('area:API', ""Airflow's REST/HTTP API""), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2365171178, 'issue_id': 2539648499, 'author': 'jkramer-ginkgo', 'body': 'It would be great to instead have the React JSON view enabled for JSON-serializable Xcom values, and fall back to old logic otherwise. I can try taking a crack at that next week.', 'created_at': datetime.datetime(2024, 9, 21, 12, 35, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2365257345, 'issue_id': 2539648499, 'author': 'jscheffl', 'body': '> It would be great to instead have the React JSON view enabled for JSON-serializable Xcom values, and fall back to old logic otherwise. I can try taking a crack at that next week.\r\n\r\nYeah. You can try. We can keep the PR open or you add another PR on top to improve.\r\n\r\nUnfortunately the JSON serialization is handled by the underlying framework such that the error is created post return. The only (simple) option that I see is to attempt a serialization and if this is OK then return is native, stryingify as fallback? But then the resulting object needs to be serialized multiple times. Mhm not really good.', 'created_at': datetime.datetime(2024, 9, 21, 17, 13, 34, tzinfo=datetime.timezone.utc)}]","jkramer-ginkgo on (2024-09-21 12:35:45 UTC): It would be great to instead have the React JSON view enabled for JSON-serializable Xcom values, and fall back to old logic otherwise. I can try taking a crack at that next week.

jscheffl (Issue Creator) on (2024-09-21 17:13:34 UTC): Yeah. You can try. We can keep the PR open or you add another PR on top to improve.

Unfortunately the JSON serialization is handled by the underlying framework such that the error is created post return. The only (simple) option that I see is to attempt a serialization and if this is OK then return is native, stryingify as fallback? But then the resulting object needs to be serialized multiple times. Mhm not really good.

"
2539564068,pull_request,closed,,Prepare docs for Sep 1st wave of providers,,eladkal,2024-09-20 19:47:09+00:00,[],2024-09-21 06:05:45+00:00,2024-09-21 06:05:43+00:00,https://github.com/apache/airflow/pull/42387,"[('area:providers', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues'), ('provider:celery', ''), ('provider:airbyte', ''), ('provider:alibaba', ''), ('provider:apache-spark', ''), ('provider:apache-livy', ''), ('provider:apache-flink', ''), ('provider:apache-hdfs', ''), ('provider:cloudant', ''), ('provider:apache-impala', '')]",[],
2539562737,pull_request,closed,,Split next_dagruns_to_examine function into two,"The behavior is different enough to merit two different functions.  In fact I noticed that we actually are using a bad index hint for the QUEUED case. And this becomes more apparent with introduction of backfill handling into scheduler, which is forthcoming.
",dstandish,2024-09-20 19:46:06+00:00,[],2024-09-24 17:30:07+00:00,2024-09-24 17:30:06+00:00,https://github.com/apache/airflow/pull/42386,"[('area:Scheduler', 'including HA (high availability) scheduler')]",[],
2539522741,pull_request,closed,,Make AlreadyExists a subclass of more general Conflict exception,"The 409 exception should be a bit more general.  There can be other types of conflicts.
",dstandish,2024-09-20 19:25:07+00:00,[],2024-09-23 20:20:27+00:00,2024-09-23 20:20:26+00:00,https://github.com/apache/airflow/pull/42385,"[('area:API', ""Airflow's REST/HTTP API"")]",[],
2539471445,pull_request,closed,,Reduce max length of pre-commit hooks,"This is just to ensure that we get each hook on a single line when running in split pane on macbook pro 14"".

E.g. avoids this ugliness

<img width=""698"" alt=""image"" src=""https://github.com/user-attachments/assets/7e7e4453-b20a-4fdb-8e74-49e35a4e0b5f"">

Where we need to add more details, we can use the `description` field.",dstandish,2024-09-20 19:00:12+00:00,[],2024-10-01 21:55:27+00:00,2024-09-20 20:29:48+00:00,https://github.com/apache/airflow/pull/42384,"[('area:dev-tools', '')]","[{'comment_id': 2387145798, 'issue_id': 2539471445, 'author': 'potiuk', 'body': 'nice', 'created_at': datetime.datetime(2024, 10, 1, 21, 55, 26, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-01 21:55:26 UTC): nice

"
2539409631,pull_request,closed,,Fix pre-commit for auto update of fab migration versions,"This fixes the pre-commit for updating the version in FAB migration and also updated the actual version as 1.4 since that's going to be the next version

At the same time, added Daniel's fix for airflow alembic.ini file

",ephraimbuddy,2024-09-20 18:24:11+00:00,[],2024-09-20 23:15:45+00:00,2024-09-20 23:15:45+00:00,https://github.com/apache/airflow/pull/42382,"[('area:providers', ''), ('area:dev-tools', ''), ('provider:fab', '')]","[{'comment_id': 2364291424, 'issue_id': 2539409631, 'author': 'eladkal', 'body': 'I will cut fab provider 1.4.0 later today', 'created_at': datetime.datetime(2024, 9, 20, 18, 25, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2364559382, 'issue_id': 2539409631, 'author': 'eladkal', 'body': 'static checks are failing', 'created_at': datetime.datetime(2024, 9, 20, 20, 20, 5, tzinfo=datetime.timezone.utc)}]","eladkal on (2024-09-20 18:25:21 UTC): I will cut fab provider 1.4.0 later today

eladkal on (2024-09-20 20:20:05 UTC): static checks are failing

"
2539265549,pull_request,closed,,Make migrations path relative to ini,"This makes it so that we can alembic commands from the root repo dir.

E.g.

```
alembic -c airflow/alembic.ini revision --autogenerate -m ""Do something""
```

Sometimes when running from airflow subfolder we get errors.
",dstandish,2024-09-20 17:07:47+00:00,[],2024-09-20 18:12:23+00:00,2024-09-20 18:10:57+00:00,https://github.com/apache/airflow/pull/42381,[],"[{'comment_id': 2364169052, 'issue_id': 2539265549, 'author': 'ephraimbuddy', 'body': 'I had instructed contributors to copy the airflow’s `alembic.ini` here https://github.com/apache/airflow/blob/main/contributing-docs/13_metadata_database_updates.rst#create-alembic-migration-scripts. Maybe we should also update there', 'created_at': datetime.datetime(2024, 9, 20, 17, 14, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2364180343, 'issue_id': 2539265549, 'author': 'dstandish', 'body': ""> I had instructed contributors to copy the airflow’s `alembic.ini` here https://github.com/apache/airflow/blob/main/contributing-docs/13_metadata_database_updates.rst#create-alembic-migration-scripts. Maybe we should also update there\r\n\r\nI don't really understand the implications re what that section is about and how this would impact that.  Can you possibly make a suggestion re what I should change?"", 'created_at': datetime.datetime(2024, 9, 20, 17, 22, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2364260746, 'issue_id': 2539265549, 'author': 'ephraimbuddy', 'body': ""> https://github.com/apache/airflow/blob/main/contributing-docs/13_metadata_database_updates.rst#create-alembic-migration-scripts\r\n\r\nThis line in the doc:\r\n`Replace the content of your application's alembic.ini file with Airflow's alembic.ini copy.`.\r\n\r\nI'm not sure it will work if copied over. WDYT?"", 'created_at': datetime.datetime(2024, 9, 20, 18, 5, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2364262930, 'issue_id': 2539265549, 'author': 'ephraimbuddy', 'body': 'We can also update the one at airflow/providers/fab/alembic.ini', 'created_at': datetime.datetime(2024, 9, 20, 18, 7, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2364272769, 'issue_id': 2539265549, 'author': 'dstandish', 'body': '> Tested and it works\r\n\r\nThanks a bunch Ephraim 🙏', 'created_at': datetime.datetime(2024, 9, 20, 18, 12, 21, tzinfo=datetime.timezone.utc)}]","ephraimbuddy on (2024-09-20 17:14:24 UTC): I had instructed contributors to copy the airflow’s `alembic.ini` here https://github.com/apache/airflow/blob/main/contributing-docs/13_metadata_database_updates.rst#create-alembic-migration-scripts. Maybe we should also update there

dstandish (Issue Creator) on (2024-09-20 17:22:06 UTC): I don't really understand the implications re what that section is about and how this would impact that.  Can you possibly make a suggestion re what I should change?

ephraimbuddy on (2024-09-20 18:05:54 UTC): This line in the doc:
`Replace the content of your application's alembic.ini file with Airflow's alembic.ini copy.`.

I'm not sure it will work if copied over. WDYT?

ephraimbuddy on (2024-09-20 18:07:25 UTC): We can also update the one at airflow/providers/fab/alembic.ini

dstandish (Issue Creator) on (2024-09-20 18:12:21 UTC): Thanks a bunch Ephraim 🙏

"
2539241734,pull_request,closed,,Fix pre-commit inserting airflow_version var,This was broken recently but simple fix.,dstandish,2024-09-20 16:52:31+00:00,[],2024-09-20 18:15:24+00:00,2024-09-20 18:15:21+00:00,https://github.com/apache/airflow/pull/42378,"[('area:dev-tools', '')]","[{'comment_id': 2364140254, 'issue_id': 2539241734, 'author': 'dstandish', 'body': '> My bad, overlooked when reviewed the recent PR :)\r\n\r\nnw easy to miss this one', 'created_at': datetime.datetime(2024, 9, 20, 16, 56, 35, tzinfo=datetime.timezone.utc)}]","dstandish (Issue Creator) on (2024-09-20 16:56:35 UTC): nw easy to miss this one

"
2539239706,pull_request,closed,,Minor fixups to FAB DB command docs,"Came to review #42352 a little too late unfortunately, these are my suggestions.",jedcunningham,2024-09-20 16:51:05+00:00,[],2024-09-20 18:02:53+00:00,2024-09-20 17:10:30+00:00,https://github.com/apache/airflow/pull/42377,"[('area:providers', ''), ('area:dev-tools', ''), ('kind:documentation', ''), ('provider:fab', '')]",[],
2539198617,pull_request,closed,,Remove redundant dag_id index on log table,This index is redundant since there's another one with dag_id as leading column.,dstandish,2024-09-20 16:25:33+00:00,[],2024-10-30 23:27:49+00:00,2024-09-20 19:05:03+00:00,https://github.com/apache/airflow/pull/42376,[],"[{'comment_id': 2448318329, 'issue_id': 2539198617, 'author': 'kaxil', 'body': 'I was reading about what the recommendation is around Multi-column indexes vs single -- and looks like it isn\'t as simple as I had initially thought that the multi-column index with a leading column can remove the need of a separate ""single-col"" index in all cases!\r\n\r\nFrom https://www.postgresql.org/docs/current/indexes-bitmap-scans.html:\r\n>In all but the simplest applications, there are various combinations of indexes that might be useful, and the database developer must make trade-offs to decide which indexes to provide. Sometimes multicolumn indexes are best, but sometimes it\'s better to create separate indexes and rely on the index-combination feature. For example, if your workload includes a mix of queries that sometimes involve only column x, sometimes only column y, and sometimes both columns, you might choose to create two separate indexes on x and y, relying on index combination to process the queries that use both columns. You could also create a multicolumn index on (x, y). This index would typically be more efficient than index combination for queries involving both columns, but as discussed in [Section 11.3](https://www.postgresql.org/docs/current/indexes-multicolumn.html), it would be almost useless for queries involving only y, so it should not be the only index. A combination of the multicolumn index and a separate index on y would serve reasonably well. For queries involving only x, the multicolumn index could be used, though it would be larger and hence slower than an index on x alone. The last alternative is to create all three indexes, but this is probably only reasonable if the table is searched much more often than it is updated and all three types of query are common. If one of the types of query is much less common than the others, you\'d probably settle for creating just the two indexes that best match the common types.', 'created_at': datetime.datetime(2024, 10, 30, 20, 33, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448383268, 'issue_id': 2539198617, 'author': 'jedcunningham', 'body': ""Interesting, TIL. Probably still a good general approach though, but yeah in some cases it could make sense to keep them around.\r\n\r\nThis table specifically is so write heavy, wouldn't be worth it :)"", 'created_at': datetime.datetime(2024, 10, 30, 21, 6, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448458540, 'issue_id': 2539198617, 'author': 'kaxil', 'body': ""> Interesting, TIL. Probably still a good general approach though, but yeah in some cases it could make sense to keep them around.\r\n> \r\n> This table specifically is so write heavy, wouldn't be worth it :)\r\n\r\nYeah, I was fixing some migrations issues and found similar indexes and I thought let me remove them and got curious what the recommendation -- and backtracked on mixing it with some of the changes I will have in a PR"", 'created_at': datetime.datetime(2024, 10, 30, 21, 34, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448591952, 'issue_id': 2539198617, 'author': 'dstandish', 'body': '> I was reading about what the recommendation is around Multi-column indexes vs single -- and looks like it isn\'t as simple as I had initially thought that the multi-column index with a leading column can remove the need of a separate ""single-col"" index in all cases!\r\n\r\nI did not really see anything in there that suggested that it\'s not true.\r\n\r\nIf you have index on x, y, the queries on x are covered by the index.  That\'s true.  Now, sure, an index on x alone be smaller. \r\n Yes. But it remains to be shown what difference that makes.', 'created_at': datetime.datetime(2024, 10, 30, 22, 40, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448602088, 'issue_id': 2539198617, 'author': 'kaxil', 'body': 'This sentence is the key there: ""**_For queries involving only x, the multicolumn index could be used, though it would be larger and hence slower than an index on x alone._** ""\r\n\r\nHow much slower? That depends on the dataset and access pattern.\r\n\r\nIn above, a multi-column index on (x, y) technically covers queries on x alone but the additional storage and scanning costs can impact performance, especially for high-traffic columns. A single-column index on x is smaller and offers a narrower scan range, which often improves I/O and cache usage, making a measurable difference in efficiency for large datasets. Again how much difference depends on the dataset and query patterns', 'created_at': datetime.datetime(2024, 10, 30, 22, 48, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448639951, 'issue_id': 2539198617, 'author': 'dstandish', 'body': ""right yeah i saw that.  i think that the default choice would be, don't add the redundant index unless you had a compelling reason.  that being a little bigger would make it measurably slower isn't surprising but that doesn't mean it's worth adding the redundant index.  i think the side proposing to add the redundant index would bear the burden to demonstrate the need for it.  the fact that one index can serve multiple query patterns is a great thing and we should take advantage of that where we can i think."", 'created_at': datetime.datetime(2024, 10, 30, 23, 9, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448646650, 'issue_id': 2539198617, 'author': 'dstandish', 'body': ""implication of that being, if you see this sort of thing, probably best to remove, don't you think?"", 'created_at': datetime.datetime(2024, 10, 30, 23, 15, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 2448662276, 'issue_id': 2539198617, 'author': 'kaxil', 'body': 'Agreed', 'created_at': datetime.datetime(2024, 10, 30, 23, 27, 48, tzinfo=datetime.timezone.utc)}]","kaxil on (2024-10-30 20:33:35 UTC): I was reading about what the recommendation is around Multi-column indexes vs single -- and looks like it isn't as simple as I had initially thought that the multi-column index with a leading column can remove the need of a separate ""single-col"" index in all cases!

From https://www.postgresql.org/docs/current/indexes-bitmap-scans.html:

jedcunningham on (2024-10-30 21:06:59 UTC): Interesting, TIL. Probably still a good general approach though, but yeah in some cases it could make sense to keep them around.

This table specifically is so write heavy, wouldn't be worth it :)

kaxil on (2024-10-30 21:34:27 UTC): Yeah, I was fixing some migrations issues and found similar indexes and I thought let me remove them and got curious what the recommendation -- and backtracked on mixing it with some of the changes I will have in a PR

dstandish (Issue Creator) on (2024-10-30 22:40:34 UTC): I did not really see anything in there that suggested that it's not true.

If you have index on x, y, the queries on x are covered by the index.  That's true.  Now, sure, an index on x alone be smaller. 
 Yes. But it remains to be shown what difference that makes.

kaxil on (2024-10-30 22:48:19 UTC): This sentence is the key there: ""**_For queries involving only x, the multicolumn index could be used, though it would be larger and hence slower than an index on x alone._** ""

How much slower? That depends on the dataset and access pattern.

In above, a multi-column index on (x, y) technically covers queries on x alone but the additional storage and scanning costs can impact performance, especially for high-traffic columns. A single-column index on x is smaller and offers a narrower scan range, which often improves I/O and cache usage, making a measurable difference in efficiency for large datasets. Again how much difference depends on the dataset and query patterns

dstandish (Issue Creator) on (2024-10-30 23:09:36 UTC): right yeah i saw that.  i think that the default choice would be, don't add the redundant index unless you had a compelling reason.  that being a little bigger would make it measurably slower isn't surprising but that doesn't mean it's worth adding the redundant index.  i think the side proposing to add the redundant index would bear the burden to demonstrate the need for it.  the fact that one index can serve multiple query patterns is a great thing and we should take advantage of that where we can i think.

dstandish (Issue Creator) on (2024-10-30 23:15:38 UTC): implication of that being, if you see this sort of thing, probably best to remove, don't you think?

kaxil on (2024-10-30 23:27:48 UTC): Agreed

"
2539174088,pull_request,closed,,Remove empty dirs,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-20 16:09:29+00:00,[],2024-09-20 16:55:01+00:00,2024-09-20 16:54:58+00:00,https://github.com/apache/airflow/pull/42375,[],[],
2539121628,pull_request,closed,,Remove empty dirs,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-20 15:41:23+00:00,[],2024-09-20 16:06:54+00:00,2024-09-20 16:04:56+00:00,https://github.com/apache/airflow/pull/42374,"[('area:providers', ''), ('provider:fab', '')]",[],
2538624660,pull_request,closed,,Removed unused and deprecated methods from fab security manager override module,Removed unused and deprecated methods from fab security manager override module,dirrao,2024-09-20 11:55:17+00:00,[],2024-09-25 19:44:14+00:00,2024-09-25 19:44:14+00:00,https://github.com/apache/airflow/pull/42362,"[('area:providers', ''), ('provider:fab', '')]","[{'comment_id': 2363962977, 'issue_id': 2538624660, 'author': 'vincbeck', 'body': 'That is provider changes, not Airflow. I am not sure we want a major release of fab provider?', 'created_at': datetime.datetime(2024, 9, 20, 15, 13, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2375108909, 'issue_id': 2538624660, 'author': 'vincbeck', 'body': 'Closing this one', 'created_at': datetime.datetime(2024, 9, 25, 19, 44, 14, tzinfo=datetime.timezone.utc)}]","vincbeck on (2024-09-20 15:13:16 UTC): That is provider changes, not Airflow. I am not sure we want a major release of fab provider?

vincbeck on (2024-09-25 19:44:14 UTC): Closing this one

"
2538301494,pull_request,closed,,KubernetesPodOperator never stops if credentials are refreshed,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

This is a follow-up of this PR: https://github.com/apache/airflow/pull/39325

With the above change, the tenacity retry mechanism was introduced while waiting pod completion. For long running tasks, in fact, k8s credentials could expire while the task is still running, we are therefore refreshing credentials and retrying. However this did not completely solve the issue due to the `stop_after_attempt(3)`: the job is still failing when credentials were expiring more than twice.

This PR attempts at fixing this issue by:
1) removing the `stop_after_attempt` logic
2) still failing the job in case credentials are invalid after refresh. we in fact still want to make sure the job doesn't run forever if it is producing 401s after refresh

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",paolo-moriello,2024-09-20 09:14:06+00:00,[],2024-09-30 10:55:18+00:00,2024-09-27 08:20:57+00:00,https://github.com/apache/airflow/pull/42361,"[('area:providers', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues')]",[],
2538220816,pull_request,closed,,Refactor ORM DAG insertion logic,"Basically using the same pattern as the dataset inserts. Making fk relation updates more readable.

The SQL queries CAN be made more efficient, but I decided to keep things as-is (not worse than before). These are likely not that big a deal.",uranusjr,2024-09-20 08:34:02+00:00,[],2024-09-23 08:34:49+00:00,2024-09-23 08:34:48+00:00,https://github.com/apache/airflow/pull/42358,"[('area:Scheduler', 'including HA (high availability) scheduler')]",[],
2537384010,pull_request,closed,,Add option in simple auth manager to disable authentication and allow everyone as admin,"

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-19 21:17:34+00:00,[],2024-09-23 15:06:19+00:00,2024-09-23 15:06:17+00:00,https://github.com/apache/airflow/pull/42355,[],[],
2537320627,pull_request,closed,,Adjust typing in Mongo hook to prevent mypy errors,"Schedules tests on main are broken because of typing problems in Mongo - which actually smell like a false-positive.

This PR tries to change typing hints to prevent a failure.

See for example: https://github.com/apache/airflow/actions/runs/10947632646/job/30397028401",jscheffl,2024-09-19 20:36:33+00:00,[],2024-09-19 21:00:12+00:00,2024-09-19 21:00:12+00:00,https://github.com/apache/airflow/pull/42354,"[('area:providers', ''), ('provider:mongo', '')]","[{'comment_id': 2362137693, 'issue_id': 2537320627, 'author': 'jscheffl', 'body': '> Just noticed this in another PR, good catch!\r\n\r\nNeed to run to bed, if you see it green before me, feel free to merge!', 'created_at': datetime.datetime(2024, 9, 19, 20, 42, 52, tzinfo=datetime.timezone.utc)}]","jscheffl (Issue Creator) on (2024-09-19 20:42:52 UTC): Need to run to bed, if you see it green before me, feel free to merge!

"
2537258879,pull_request,closed,,AWS System Test: EMR Container,"Ensure that the EMR cluster stays running for long enough for all the tasks in the DAG to complete their operations against the cluster.

This race condition was causing system test failures on remote container based executors.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",o-nikolas,2024-09-19 19:57:23+00:00,[],2024-09-19 21:36:06+00:00,2024-09-19 21:36:04+00:00,https://github.com/apache/airflow/pull/42353,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('area:system-tests', '')]",[],
2537014223,pull_request,closed,,Add documentation for FAB DB commands,"We recently separated FAB migration from Airflow's migration and added some commands for handling DB upgrade and downgrade in FAB. This PR adds user-facing documentation on how to upgrade and downgrade FAB and information about the different commands.

I also added documentation on how contributors can hook their application's migration into Airflow's migration.

The update_migration_references pre-commit was also updated to include FAB migrations.

",ephraimbuddy,2024-09-19 17:47:35+00:00,[],2024-09-20 16:38:08+00:00,2024-09-20 16:19:02+00:00,https://github.com/apache/airflow/pull/42352,"[('area:providers', ''), ('area:dev-tools', ''), ('kind:documentation', ''), ('provider:fab', '')]",[],
2536700372,pull_request,closed,,Use `selectinload` in trigger,"Backport #40487 in 2.10

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-19 15:30:26+00:00,[],2024-10-23 09:26:39+00:00,2024-09-19 17:23:43+00:00,https://github.com/apache/airflow/pull/42351,"[('kind:documentation', ''), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:Triggerer', '')]",[],
2536368940,pull_request,closed,,fix: update path handling in `get_dag_directory()` to return the absolute path of the symlink,"Somtimes, I use symlinks in my local environment, like this:

```bash
❯ ls -rtlh /opt/airflow/
total 0
lrwxrwxrwx 1 oboki oboki 39 Sep 19 21:24 dags -> /home/oboki/projects/oboki-airflow/dags
lrwxrwxrwx 1 oboki oboki 42 Sep 19 21:24 plugins -> /home/oboki/projects/oboki-airflow/plugins
```

In this case, the `get_dag_directory()` function follows the symlink and returns the original path, which causes issues.

To resolve this, it should return the absolute path of the symlink itself.

Even though `airflow.cfg` is set with `dags_folder = /opt/airflow/dags`, if that path is a symlink, it returns `/home/oboki/projects/oboki-airflow/dags`, leading to `dag_not_in_current_folder = True` and causing issues. (a valid DAG is periodically deactivated.)

I changed `manager.py` to use the absolute path of symlink itself instead of resolved one.
",oboki,2024-09-19 13:33:03+00:00,[],2024-11-23 00:16:19+00:00,2024-11-23 00:16:19+00:00,https://github.com/apache/airflow/pull/42350,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:Scheduler', 'including HA (high availability) scheduler')]","[{'comment_id': 2362244619, 'issue_id': 2536368940, 'author': 'afranzi', 'body': 'We are having the same issue using the `gitSync` in our K8s deployment 😢.\r\nAfter upgrading from 2.9.3 to 2.10.1, we started having the same issue, where the `dag_processor_manager` adds the DAGs but the scheduler removes them in the [code](https://github.com/apache/airflow/blob/2.10.1/airflow/dag_processing/manager.py#L535-L537) shared by @oboki.\r\n\r\nCould we include this PR in the 2.10.2 please?', 'created_at': datetime.datetime(2024, 9, 19, 21, 36, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2363521686, 'issue_id': 2536368940, 'author': 'ephraimbuddy', 'body': '> We are having the same issue using the `gitSync` in our K8s deployment 😢. After upgrading from 2.9.3 to 2.10.1, we started having the same issue, where the `dag_processor_manager` adds the DAGs but the scheduler removes them in the [code](https://github.com/apache/airflow/blob/2.10.1/airflow/dag_processing/manager.py#L535-L537) shared by @oboki.\r\n> \r\n> Could we include this PR in the 2.10.2 please?\r\n\r\nThe issue you had has been fixed in 2.10.2, which will be released later today. Makes me think that this PR is also a result of the same problem.', 'created_at': datetime.datetime(2024, 9, 20, 11, 34, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2363761674, 'issue_id': 2536368940, 'author': 'afranzi', 'body': '@ephraimbuddy even if the 2.10.2 is reverting the changes causing the issue, I believe this PR still adds value and robustness to airflow, so I believe it would be a good addition.', 'created_at': datetime.datetime(2024, 9, 20, 13, 38, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2363768367, 'issue_id': 2536368940, 'author': 'ephraimbuddy', 'body': ""> @ephraimbuddy even if the 2.10.2 is reverting the changes causing the issue, I believe this PR still adds value and robustness to airflow, so I believe it would be a good addition.\r\n\r\nThere's a similar change here: https://github.com/apache/airflow/pull/42142/files. So yeah, we will look into it"", 'created_at': datetime.datetime(2024, 9, 20, 13, 41, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2363848999, 'issue_id': 2536368940, 'author': 'afranzi', 'body': 'I believe this one would be cleaner than the other one you mentioned', 'created_at': datetime.datetime(2024, 9, 20, 14, 18, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387433075, 'issue_id': 2536368940, 'author': 'potiuk', 'body': ""See https://discuss.python.org/t/pathlib-absolute-vs-resolve/2573/17 - absolute() is undocumented and it might disappear any time, also I don't think it's behaviour is well defined."", 'created_at': datetime.datetime(2024, 10, 2, 1, 4, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2480862663, 'issue_id': 2536368940, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 11, 17, 0, 17, 10, tzinfo=datetime.timezone.utc)}]","afranzi on (2024-09-19 21:36:29 UTC): We are having the same issue using the `gitSync` in our K8s deployment 😢.
After upgrading from 2.9.3 to 2.10.1, we started having the same issue, where the `dag_processor_manager` adds the DAGs but the scheduler removes them in the [code](https://github.com/apache/airflow/blob/2.10.1/airflow/dag_processing/manager.py#L535-L537) shared by @oboki.

Could we include this PR in the 2.10.2 please?

ephraimbuddy on (2024-09-20 11:34:41 UTC): The issue you had has been fixed in 2.10.2, which will be released later today. Makes me think that this PR is also a result of the same problem.

afranzi on (2024-09-20 13:38:52 UTC): @ephraimbuddy even if the 2.10.2 is reverting the changes causing the issue, I believe this PR still adds value and robustness to airflow, so I believe it would be a good addition.

ephraimbuddy on (2024-09-20 13:41:44 UTC): There's a similar change here: https://github.com/apache/airflow/pull/42142/files. So yeah, we will look into it

afranzi on (2024-09-20 14:18:05 UTC): I believe this one would be cleaner than the other one you mentioned

potiuk on (2024-10-02 01:04:05 UTC): See https://discuss.python.org/t/pathlib-absolute-vs-resolve/2573/17 - absolute() is undocumented and it might disappear any time, also I don't think it's behaviour is well defined.

github-actions[bot] on (2024-11-17 00:17:10 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2536258606,pull_request,closed,,Rebuild pgbouncer image with newer version,"Bump base image because alpine 3.14 is end-of-live

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",robertvolkmann,2024-09-19 12:52:21+00:00,[],2024-11-04 18:32:33+00:00,2024-11-04 18:32:30+00:00,https://github.com/apache/airflow/pull/42349,"[('area:helm-chart', 'Airflow Helm Chart'), ('area:production-image', 'Production image improvements and fixes')]","[{'comment_id': 2360906256, 'issue_id': 2536258606, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 19, 12, 52, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453637295, 'issue_id': 2536258606, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 11, 4, 0, 16, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2455428743, 'issue_id': 2536258606, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 11, 4, 18, 32, 32, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-19 12:52:26 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

github-actions[bot] on (2024-11-04 00:16:01 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

boring-cyborg[bot] on (2024-11-04 18:32:32 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2535961012,pull_request,closed,,[helm] allow digest for pod_template image,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",josedev-union,2024-09-19 10:39:37+00:00,[],2024-09-19 20:14:22+00:00,2024-09-19 13:54:57+00:00,https://github.com/apache/airflow/pull/42348,"[('area:helm-chart', 'Airflow Helm Chart')]","[{'comment_id': 2360633179, 'issue_id': 2535961012, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 19, 10, 39, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2361057625, 'issue_id': 2535961012, 'author': 'josedev-union', 'body': ""I tested with this patch in staging env and realized that worker container image is decided by [`kubernetes.worker_container_repository`](https://airflow.apache.org/docs/apache-airflow/1.10.9/configurations-ref.html#worker-container-repository)  and [`kubernetes.worker_container_tag`.](https://airflow.apache.org/docs/apache-airflow/1.10.9/configurations-ref.html#worker-container-tag) instead of the ref in pod_template file.\r\n\r\nSo I don't think this is needed. My intention was to use digest without a certain tag for worker containers.\r\nI will close this PR now and tag all images and use `worker_container_tag`"", 'created_at': datetime.datetime(2024, 9, 19, 13, 54, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2362093580, 'issue_id': 2535961012, 'author': 'romsharon98', 'body': 'I think this is another way to get what you want.\r\nI think that your PR is needed and your changes are good and only ut is need.', 'created_at': datetime.datetime(2024, 9, 19, 20, 14, 21, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-19 10:39:41 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

josedev-union (Issue Creator) on (2024-09-19 13:54:57 UTC): I tested with this patch in staging env and realized that worker container image is decided by [`kubernetes.worker_container_repository`](https://airflow.apache.org/docs/apache-airflow/1.10.9/configurations-ref.html#worker-container-repository)  and [`kubernetes.worker_container_tag`.](https://airflow.apache.org/docs/apache-airflow/1.10.9/configurations-ref.html#worker-container-tag) instead of the ref in pod_template file.

So I don't think this is needed. My intention was to use digest without a certain tag for worker containers.
I will close this PR now and tag all images and use `worker_container_tag`

romsharon98 on (2024-09-19 20:14:21 UTC): I think this is another way to get what you want.
I think that your PR is needed and your changes are good and only ut is need.

"
2535845233,pull_request,closed,,Refactor system test for Campaign Manager 360,Refactored system test for Campaign Manager,moiseenkov,2024-09-19 09:50:26+00:00,[],2024-09-19 12:17:02+00:00,2024-09-19 12:17:01+00:00,https://github.com/apache/airflow/pull/42346,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', '')]",[],
2535708698,pull_request,closed,,add env support for migratedatabase job,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**

Issue Description: currently we don't support passing custom env values to migratedatabase unless its passed via .Values.env which is quite not flexible for user specific usecases

Resolution Done: This PR introduces env support for migratedatabase job to be passed as a standalone values migratedatabase 
",pgvishnuram,2024-09-19 08:49:50+00:00,[],2024-09-25 05:02:46+00:00,2024-09-25 05:02:45+00:00,https://github.com/apache/airflow/pull/42345,"[('area:helm-chart', 'Airflow Helm Chart')]","[{'comment_id': 2367433957, 'issue_id': 2535708698, 'author': 'pgvishnuram', 'body': '@jedcunningham i have added your recommendation is this mergeable', 'created_at': datetime.datetime(2024, 9, 23, 7, 34, 43, tzinfo=datetime.timezone.utc)}]","pgvishnuram (Issue Creator) on (2024-09-23 07:34:43 UTC): @jedcunningham i have added your recommendation is this mergeable

"
2535542804,pull_request,closed,,Refactor _register_dataset_changes,"~~Depends on #42245. Please review that PR first. This will be rebased when that one is merged.~~ Rebased. Ready!

This makes DatasetAliasModel only be created inside DatasetManager, similar to how DatasetModel is handled. The function create_dataset_aliases is added for this. DatasetAlias is also made to only be associated to a DatasetEvent in the manager (in function register_dataset_change). This function now takes an additional keyword argument `aliases` that is a list of dataset aliases associated to the DatasetEvent to be created.

All the dataset manager functions are also changed to only accept public-facing dataset classes, instead of ORM models.",uranusjr,2024-09-19 07:38:52+00:00,[],2024-09-25 01:50:46+00:00,2024-09-25 01:50:44+00:00,https://github.com/apache/airflow/pull/42343,"[('area:Scheduler', 'including HA (high availability) scheduler')]",[],
2535469002,pull_request,closed,,Add ability to create Flink Jobs in dataproc cluster,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",VladaZakharova,2024-09-19 07:01:27+00:00,[],2024-09-20 15:28:52+00:00,2024-09-20 15:28:51+00:00,https://github.com/apache/airflow/pull/42342,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', ''), ('kind:documentation', '')]","[{'comment_id': 2362189754, 'issue_id': 2535469002, 'author': 'shahar1', 'body': ""Rebasing to ensure that there's no random mongodb error (see #42354).\r\nWill be merged upon success."", 'created_at': datetime.datetime(2024, 9, 19, 21, 1, 52, tzinfo=datetime.timezone.utc)}]","shahar1 on (2024-09-19 21:01:52 UTC): Rebasing to ensure that there's no random mongodb error (see #42354).
Will be merged upon success.

"
2535354794,pull_request,closed,,Add better typing in the db clean utils,,jedcunningham,2024-09-19 05:53:19+00:00,[],2024-09-19 14:32:14+00:00,2024-09-19 14:32:12+00:00,https://github.com/apache/airflow/pull/42341,[],[],
2534510160,pull_request,closed,,[36842] Add pre-commit script to generate ER mermaid diagram from SQL…,"Closes: https://github.com/apache/airflow/issues/36842

Use [paracelsus](https://github.com/tedivm/paracelsus?tab=readme-ov-file#inject-mermaid-diagrams) to generate the `docs/apache-airflow/img/airflow_erd.svg` file based on SQLAlchemy models.

> NOTE: The same tool could be use to generate a mermaid code and inject it to a Markdown file but it seems like rst format is not supported yet.

Before
<img width=""1720"" alt=""image"" src=""https://github.com/user-attachments/assets/a3853af6-a22c-4988-8c16-babc7fcff7f5"">

After
<img width=""1720"" alt=""image"" src=""https://github.com/user-attachments/assets/a4f5fcab-00b9-459b-9c03-cc3a0f2187cc"">


<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",dennysreg,2024-09-18 19:22:30+00:00,[],2024-11-23 00:16:21+00:00,2024-11-23 00:16:21+00:00,https://github.com/apache/airflow/pull/42323,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:dev-tools', ''), ('kind:documentation', '')]","[{'comment_id': 2359236991, 'issue_id': 2534510160, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 18, 19, 22, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387342684, 'issue_id': 2534510160, 'author': 'potiuk', 'body': '@dennysreg - do you think you can rebase it and make it ready to be merged?', 'created_at': datetime.datetime(2024, 10, 2, 0, 43, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2480862681, 'issue_id': 2534510160, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 11, 17, 0, 17, 11, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-18 19:22:34 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-10-02 00:43:01 UTC): @dennysreg - do you think you can rebase it and make it ready to be merged?

github-actions[bot] on (2024-11-17 00:17:11 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2533958833,pull_request,closed,,Add more filters and search to get_dags endpoint,"Related to: https://github.com/apache/airflow/issues/42159

PR based on https://github.com/apache/airflow/pull/42320 that adds:

filters:
- `owners`

sort:
- `dag_display_name`
- `next_dagrun`

search:
- `dag_display_name_pattern`

Problem encountered:
- Mysql no support for `nullslast`
- Different ordering of `True` / `False` based on database implementation",pierrejeambrun,2024-09-18 14:49:13+00:00,['pierrejeambrun'],2024-09-24 09:24:56+00:00,2024-09-24 09:24:25+00:00,https://github.com/apache/airflow/pull/42321,"[('AIP-84', 'Modern Rest API')]",[],
2533930802,pull_request,closed,,FastAPI API Add test query params standardization an reusability,"Related to: https://github.com/apache/airflow/issues/42159

This will abstract the handling of common FIlters, Search and Sort query param so we do not have to copy and past the same `query.where(...)`  on all endpoints that are using this same logic.

This allows:
- To remove some logic from the views, and only keep http related thing. (serialization/deserialization, query param validation, etc...). Aim for a more layed and decouple AIP code. (hexagonal / onion architecture is an inspiration, but that's too early and not a priority). Cf the custom code removed from the `get_dags` view.
- Initialize some reusable logic for the db layer
- Will allow to add more complex filters that cannot be done today, especially on the `order_by` because we were using a sqlalchemy `text` clause that do not work with hybrid properties. (cf follow up PR to add ordering by `dag_display_name`)

The goal is to have that extended and have a library of `query params` that can be re-used accross all the RestAPI.",pierrejeambrun,2024-09-18 14:37:17+00:00,['pierrejeambrun'],2024-09-23 10:04:03+00:00,2024-09-23 10:04:01+00:00,https://github.com/apache/airflow/pull/42320,"[('AIP-84', 'Modern Rest API')]",[],
2533856820,pull_request,closed,,Add an ability to use scan queries via new YDB operator,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Add an ability to use YDB scan queries via new YDB operator
https://ydb.tech/docs/en/concepts/scan_query

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vgvoleg,2024-09-18 14:08:56+00:00,[],2024-10-04 01:51:40+00:00,2024-10-04 01:51:37+00:00,https://github.com/apache/airflow/pull/42311,"[('area:providers', ''), ('provider:ydb', '')]","[{'comment_id': 2358577100, 'issue_id': 2533856820, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 18, 14, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2389527052, 'issue_id': 2533856820, 'author': 'potiuk', 'body': ""> This makes changes to the vendored file that are not included in the upstream project https://github.com/ydb-platform/ydb-sqlalchemy/blob/main/ydb_sqlalchemy/dbapi/cursor.py -- we should submit the change there first please, or find a way to make this change that doesn't involve the vendored files diverging from the upstream project in terms of features.\r\n\r\nQuite agree with @ashb  on that one."", 'created_at': datetime.datetime(2024, 10, 2, 19, 32, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2390712145, 'issue_id': 2533856820, 'author': 'vgvoleg', 'body': ""> > This makes changes to the vendored file that are not included in the upstream project https://github.com/ydb-platform/ydb-sqlalchemy/blob/main/ydb_sqlalchemy/dbapi/cursor.py -- we should submit the change there first please, or find a way to make this change that doesn't involve the vendored files diverging from the upstream project in terms of features.\r\n> \r\n> Quite agree with @ashb on that one.\r\n\r\nThese changes are already on vendor side, I've just updated the version of copied files. We still have no separate package to import directly without any issues, the problem is described here https://github.com/apache/airflow/blob/3bb6d02107493af64c4ed1b5fb4a6b8448c29945/airflow/providers/ydb/hooks/_vendor/readme.md"", 'created_at': datetime.datetime(2024, 10, 3, 7, 27, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2391983959, 'issue_id': 2533856820, 'author': 'potiuk', 'body': '@ashb -> can you remove the ""require changes"" please?', 'created_at': datetime.datetime(2024, 10, 3, 17, 46, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2391986727, 'issue_id': 2533856820, 'author': 'ashb', 'body': ""I can't from my phone but please dismiss it if you can"", 'created_at': datetime.datetime(2024, 10, 3, 17, 48, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2392637447, 'issue_id': 2533856820, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 4, 1, 51, 39, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-18 14:09:00 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-10-02 19:32:34 UTC): Quite agree with @ashb  on that one.

vgvoleg (Issue Creator) on (2024-10-03 07:27:35 UTC): These changes are already on vendor side, I've just updated the version of copied files. We still have no separate package to import directly without any issues, the problem is described here https://github.com/apache/airflow/blob/3bb6d02107493af64c4ed1b5fb4a6b8448c29945/airflow/providers/ydb/hooks/_vendor/readme.md

potiuk on (2024-10-03 17:46:36 UTC): @ashb -> can you remove the ""require changes"" please?

ashb on (2024-10-03 17:48:06 UTC): I can't from my phone but please dismiss it if you can

boring-cyborg[bot] on (2024-10-04 01:51:39 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2533844594,pull_request,closed,,Fix GCP text to speech operator uri fetch,"- Fix acces to the uri attribute, if it's provided via the RecognitionAudio model.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",olegkachur-e,2024-09-18 14:03:56+00:00,[],2024-09-27 08:43:32+00:00,2024-09-27 08:43:31+00:00,https://github.com/apache/airflow/pull/42309,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]",[],
2533823892,pull_request,closed,,Fix cloud_build system tests,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",VladaZakharova,2024-09-18 13:55:34+00:00,[],2024-09-19 19:01:38+00:00,2024-09-19 19:01:38+00:00,https://github.com/apache/airflow/pull/42306,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', '')]",[],
2533508473,pull_request,closed,,Move FAB initialization to the FAB provider,"This moves the fab initialization codes to the FAB provider so we can have fewer FAB codes in core Airflow. This is in line with the preparation to remove FAB as a core dependency.

",ephraimbuddy,2024-09-18 11:45:16+00:00,[],2024-09-18 16:25:50+00:00,2024-09-18 16:25:41+00:00,https://github.com/apache/airflow/pull/42305,"[('provider:google', 'Google (including GCP) related issues'), ('area:webserver', 'Webserver related Issues'), ('area:providers', ''), ('area:API', ""Airflow's REST/HTTP API""), ('provider:fab', ''), ('AIP-79', '')]","[{'comment_id': 2358604417, 'issue_id': 2533508473, 'author': 'vincbeck', 'body': 'I am not sure this is what we want? The code you moved to the fab provider is code related to the old (current) UI, this code should be removed at some point but it should not be moved to the fab provider? Once the UI is complete (or close to be completed), we will be able to remove this code but, as per my understanding, we did no want to keep this code.', 'created_at': datetime.datetime(2024, 9, 18, 14, 17, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2358620639, 'issue_id': 2533508473, 'author': 'ephraimbuddy', 'body': '> I am not sure this is what we want? The code you moved to the fab provider is code related to the old (current) UI, this code should be removed at some point but it should not be moved to the fab provider? Once the UI is complete (or close to be completed), we will be able to remove this code but, as per my understanding, we did no want to keep this code.\r\n\r\nMy thinking was that FAB would still be available for use by whoever wanted it. What do you think, @jedcunningham?', 'created_at': datetime.datetime(2024, 9, 18, 14, 23, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2358698144, 'issue_id': 2533508473, 'author': 'jedcunningham', 'body': ""Yeah, moving it as-is like this and landing it in current provider releases probably isn't what we want. But long term, yes, we will need a cut down version of this that only adds FAB is the FAB auth manager or `appbuilder_views` are used from plugins."", 'created_at': datetime.datetime(2024, 9, 18, 14, 53, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2358913123, 'issue_id': 2533508473, 'author': 'ephraimbuddy', 'body': 'Closing this, to revisit after the new UI completion', 'created_at': datetime.datetime(2024, 9, 18, 16, 25, 41, tzinfo=datetime.timezone.utc)}]","vincbeck on (2024-09-18 14:17:01 UTC): I am not sure this is what we want? The code you moved to the fab provider is code related to the old (current) UI, this code should be removed at some point but it should not be moved to the fab provider? Once the UI is complete (or close to be completed), we will be able to remove this code but, as per my understanding, we did no want to keep this code.

ephraimbuddy (Issue Creator) on (2024-09-18 14:23:27 UTC): My thinking was that FAB would still be available for use by whoever wanted it. What do you think, @jedcunningham?

jedcunningham on (2024-09-18 14:53:29 UTC): Yeah, moving it as-is like this and landing it in current provider releases probably isn't what we want. But long term, yes, we will need a cut down version of this that only adds FAB is the FAB auth manager or `appbuilder_views` are used from plugins.

ephraimbuddy (Issue Creator) on (2024-09-18 16:25:41 UTC): Closing this, to revisit after the new UI completion

"
2533452392,pull_request,closed,,"add ""enable_tracemalloc"" to log memory usage in scheduler","## Why
add more information to ease the debugging process when receiving sigurs1

## What
log memory usage in the scheduler when handling sigurs1 if enable_tracemalloc is set

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-09-18 11:18:29+00:00,[],2024-09-24 11:20:48+00:00,2024-09-24 11:20:46+00:00,https://github.com/apache/airflow/pull/42304,"[('area:Executors-core', 'LocalExecutor & SequentialExecutor')]","[{'comment_id': 2362712586, 'issue_id': 2533452392, 'author': 'jedcunningham', 'body': 'Random thought: Maybe we move this tracemalloc behavior into sigusr1? Just seems like maybe having a debug dump like we do today in sigusr2 and keeping performance impacts to stuff in sigusr1 might be a better approach.', 'created_at': datetime.datetime(2024, 9, 20, 4, 0, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2363067458, 'issue_id': 2533452392, 'author': 'Lee-W', 'body': '> Random thought: Maybe we move this tracemalloc behavior into sigusr1? Just seems like maybe having a debug dump like we do today in sigusr2 and keeping performance impacts to stuff in sigusr1 might be a better approach.\r\n\r\nSounds good! Just move it to SIGUSR1. Another thing I just noticed is that this might not be helpful if we start when receiving a signal. We probably still need to start it before that. Do you think making it a config makes sense?', 'created_at': datetime.datetime(2024, 9, 20, 7, 53, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2370146560, 'issue_id': 2533452392, 'author': 'Lee-W', 'body': ""I'm thinking of merging this one later today if no one has more thoughts. Thanks!"", 'created_at': datetime.datetime(2024, 9, 24, 4, 47, 37, tzinfo=datetime.timezone.utc)}]","jedcunningham on (2024-09-20 04:00:42 UTC): Random thought: Maybe we move this tracemalloc behavior into sigusr1? Just seems like maybe having a debug dump like we do today in sigusr2 and keeping performance impacts to stuff in sigusr1 might be a better approach.

Lee-W (Issue Creator) on (2024-09-20 07:53:14 UTC): Sounds good! Just move it to SIGUSR1. Another thing I just noticed is that this might not be helpful if we start when receiving a signal. We probably still need to start it before that. Do you think making it a config makes sense?

Lee-W (Issue Creator) on (2024-09-24 04:47:37 UTC): I'm thinking of merging this one later today if no one has more thoughts. Thanks!

"
2532865928,pull_request,closed,,Add logging around listener,"Airflow does not currently have any logging for listeners, and only rely on individual listeners to log responsibly. This causes issues when a listener does not do it since it would have no trace at all in logs, and it is extremely difficult to find exactly what the offending component is (especially we would not even know a listener is at fault).

This uses pluggy's hok monitoring feature to add logs when Airflow is calling a hook, and when a hook finishes executing. This should allow us to more easily identify when a hook emits an unhandled exception (it'd trigger the 'before' logging but not 'after'), and also provide some context what's passed into the hook for debugging.

Ref: https://pluggy.readthedocs.io/en/stable/#call-monitoring

I also referenced how Datasette does this:
https://github.com/simonw/datasette/commit/232a30459babebece653795d136fb6516444ecf0",uranusjr,2024-09-18 06:43:43+00:00,[],2024-09-18 07:23:55+00:00,2024-09-18 07:23:53+00:00,https://github.com/apache/airflow/pull/42301,[],[],
2532707132,pull_request,closed,,Remove reference to 'scheduler_loop.jpg' in _run_scheduler_loop docstring,"The image 'scheduler_loop.jpg' was removed in PR #38438, but its reference remained in the docstring of '_run_scheduler_loop'. This commit removes the outdated image reference.

Confirmed that no other docstrings reference images removed in PR #38438.",wonseokyang-de,2024-09-18 05:00:02+00:00,[],2024-09-18 22:08:26+00:00,2024-09-18 14:19:36+00:00,https://github.com/apache/airflow/pull/42300,"[('area:Scheduler', 'including HA (high availability) scheduler')]",[],
2532289501,pull_request,closed,,Purge existing SLA implementation,"As discussed in the Airflow 3.0 dev calls, the first step for the new SLA system is stripping the existing implementation out.

I did this PR in multiple commits to try to make it more transparent.  In this PR:

1. Remove everything related to SLA in the code.
2. Add back the absolute minimum so that existing DAGs won't throw an exception.  @bbovenzi  said he can add a UI banner so any DAG which implements an SLA will get a notification that SLA is not working in 3.0, but we don't want all existing DAGs to start throwing exceptions left and right either.
3. Added a log message to models/dag which triggers if the DAG is init'ed with an ""sla_miss_callback"" 
4. Went through the docs directory and stripped out all references to the SLA feature.",ferruzzi,2024-09-17 22:31:06+00:00,[],2024-09-25 17:14:27+00:00,2024-09-25 17:14:25+00:00,https://github.com/apache/airflow/pull/42285,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:Scheduler', 'including HA (high availability) scheduler'), ('area:providers', ''), ('area:serialization', ''), ('kind:documentation', ''), ('provider:slack', ''), ('provider:pagerduty', ''), ('provider:smtp', ''), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]","[{'comment_id': 2359235958, 'issue_id': 2532289501, 'author': 'ferruzzi', 'body': '> I am a bit surprised that the carve-out of SLA just gains 1k LoC\r\n\r\nYeah.  It\'s an odd one.   I really expected this to be a much larger surgery with tendrils all over the place.  It wasn\'t as bad as I had feared;  28 files is pretty broad but a solid chunk of them are docs pages which just linked back tot he SLA concept page.\r\n\r\n> please add a newsfragment for the breaking change\r\n\r\nI should have known to do that, sorry. I\'ll add it.\r\n\r\n> There are is an SLA related configuration that I don\'t see removed in this PR?\r\n\r\nYeah, I may have missed that one.   I\'ll make another pass and see what I can find related to ""check_slas"" and prune it.\r\n\r\n> Maybe a sentence or two describing this feature as deprecated in 3.0? And that there are plans to add it back in 3.1?\r\n\r\nI\'ll come up with something.', 'created_at': datetime.datetime(2024, 9, 18, 19, 21, 54, tzinfo=datetime.timezone.utc)}]","ferruzzi (Issue Creator) on (2024-09-18 19:21:54 UTC): Yeah.  It's an odd one.   I really expected this to be a much larger surgery with tendrils all over the place.  It wasn't as bad as I had feared;  28 files is pretty broad but a solid chunk of them are docs pages which just linked back tot he SLA concept page.


I should have known to do that, sorry. I'll add it.


Yeah, I may have missed that one.   I'll make another pass and see what I can find related to ""check_slas"" and prune it.


I'll come up with something.

"
2532247862,pull_request,closed,,Pre commit script to validate template fields,"Adding CI script to check template fields in provider operators and sensors.

Raising new pr, I have created initial pr here #42230 , due to rebasing issues, its showing merged commits aswell in pr changes. 

Sorry for the double review 😞 


Retested again after changes:

<img width=""1433"" alt=""image"" src=""https://github.com/user-attachments/assets/da6254f0-f8a8-4b1c-b428-fb103babf65e"">

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-09-17 22:01:06+00:00,[],2024-10-01 06:32:22+00:00,2024-09-27 13:24:43+00:00,https://github.com/apache/airflow/pull/42284,"[('area:dev-tools', '')]","[{'comment_id': 2367843504, 'issue_id': 2532247862, 'author': 'gopidesupavan', 'body': 'There is one test failing not related to this change.', 'created_at': datetime.datetime(2024, 9, 23, 10, 42, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2378804833, 'issue_id': 2532247862, 'author': 'gopidesupavan', 'body': 'The tests are running fine after rebase.', 'created_at': datetime.datetime(2024, 9, 27, 9, 3, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2384910777, 'issue_id': 2532247862, 'author': 'potiuk', 'body': 'Nice!', 'created_at': datetime.datetime(2024, 10, 1, 6, 32, 21, tzinfo=datetime.timezone.utc)}]","gopidesupavan (Issue Creator) on (2024-09-23 10:42:16 UTC): There is one test failing not related to this change.

gopidesupavan (Issue Creator) on (2024-09-27 09:03:51 UTC): The tests are running fine after rebase.

potiuk on (2024-10-01 06:32:21 UTC): Nice!

"
2532164896,pull_request,closed,,Fix main. Disable sync role in FAB auth manager tests,"Fix main.

In #42004, auth managers are init before using them (rightfully so). In FAB auth manager, the `init` method add some permissions on the fly to roles. We need to  disable this mechanism in tests so that it does not conflict with them.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-17 21:09:44+00:00,[],2024-09-20 21:26:56+00:00,2024-09-18 04:33:13+00:00,https://github.com/apache/airflow/pull/42283,"[('area:providers', ''), ('provider:fab', '')]",[],
2531925782,pull_request,closed,, Update StatsD Image Tag from failed dependencies check (#42264),Backport PR #42264 to v2-10,jscheffl,2024-09-17 19:23:57+00:00,[],2024-09-17 20:23:29+00:00,2024-09-17 20:22:49+00:00,https://github.com/apache/airflow/pull/42281,"[('area:helm-chart', 'Airflow Helm Chart')]","[{'comment_id': 2356853155, 'issue_id': 2531925782, 'author': 'jscheffl', 'body': 'Oh, the change was in helm chart... backport ot 2.10 was not needed at all :-O (facepalm)', 'created_at': datetime.datetime(2024, 9, 17, 20, 23, 28, tzinfo=datetime.timezone.utc)}]","jscheffl (Issue Creator) on (2024-09-17 20:23:28 UTC): Oh, the change was in helm chart... backport ot 2.10 was not needed at all :-O (facepalm)

"
2531889942,pull_request,closed,,Handle `AUTH_ROLE_PUBLIC` in FAB auth manager,"`AUTH_ROLE_PUBLIC` is an option of FAB auth manager, it should not be handled in Airflow.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-17 19:06:40+00:00,[],2024-09-20 20:52:45+00:00,2024-09-20 20:52:43+00:00,https://github.com/apache/airflow/pull/42280,"[('area:webserver', 'Webserver related Issues'), ('area:providers', ''), ('area:API', ""Airflow's REST/HTTP API""), ('provider:fab', '')]","[{'comment_id': 2356873723, 'issue_id': 2531889942, 'author': 'vincbeck', 'body': '> We discussed in Airflow 3 Devcall that Provider changes and Core adjustments should not be mixed. Can you please separate the changes?\r\n> \r\n> As it seems dependencies between provider and core are adjusted - are you sure the provider will stay compatible with Airflow 2.9?\r\n\r\nYes, similar to #42042, both changes (providers and core) are interrelated and it is impossible to split them. I am basically moving some features from core to providers so the provider will be compatible with Airflow 2.9. The only incompatibility is Airflow 3 with current or older version of FAB (because the feature is neither in Airflow and providers) but we decided (see [comment](https://github.com/apache/airflow/pull/42042#issuecomment-2333313742)) that Airflow 3 will require last version of Fab', 'created_at': datetime.datetime(2024, 9, 17, 20, 36, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2361404135, 'issue_id': 2531889942, 'author': 'vincbeck', 'body': 'I cannot reproduce and understand why the compat tests are failing. I need to debug directly in the PR. Setting the PR in draft until I figure it out', 'created_at': datetime.datetime(2024, 9, 19, 15, 54, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2362022924, 'issue_id': 2531889942, 'author': 'jscheffl', 'body': '> I cannot reproduce and understand why the compat tests are failing. I need to debug directly in the PR. Setting the PR in draft until I figure it out\r\n\r\nHave you tried to run the compat tests local? Don\'t know how powerful your laptop is but for me this is a faster round trip.\r\n```\r\nbreeze testing tests --python 3.8 --run-in-parallel --parallel-test-types ""Providers[whatever_you_want]"" --use-packages-from-dist --package-format wheel --use-airflow-version ""2.8.4"" --airflow-constraints-reference constraints-2.8.4 --install-airflow-with-constraints --providers-skip-constraints --skip-providers ""cloudant fab""\r\n```', 'created_at': datetime.datetime(2024, 9, 19, 19, 31, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2362026700, 'issue_id': 2531889942, 'author': 'vincbeck', 'body': '> > I cannot reproduce and understand why the compat tests are failing. I need to debug directly in the PR. Setting the PR in draft until I figure it out\r\n> \r\n> Have you tried to run the compat tests local? Don\'t know how powerful your laptop is but for me this is a faster round trip.\r\n> \r\n> ```\r\n> breeze testing tests --python 3.8 --run-in-parallel --parallel-test-types ""Providers[whatever_you_want]"" --use-packages-from-dist --package-format wheel --use-airflow-version ""2.8.4"" --airflow-constraints-reference constraints-2.8.4 --install-airflow-with-constraints --providers-skip-constraints --skip-providers ""cloudant fab""\r\n> ```\r\n\r\nYep I did, it complains because the amazon provider package is not installed. I could not figure it out why. But I actually found out the reason why the tests are failing by debugging by pushing things and waiting the CI for feedback :D', 'created_at': datetime.datetime(2024, 9, 19, 19, 33, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2362139369, 'issue_id': 2531889942, 'author': 'vincbeck', 'body': 'CI is (finally) green!', 'created_at': datetime.datetime(2024, 9, 19, 20, 44, 7, tzinfo=datetime.timezone.utc)}]","vincbeck (Issue Creator) on (2024-09-17 20:36:02 UTC): Yes, similar to #42042, both changes (providers and core) are interrelated and it is impossible to split them. I am basically moving some features from core to providers so the provider will be compatible with Airflow 2.9. The only incompatibility is Airflow 3 with current or older version of FAB (because the feature is neither in Airflow and providers) but we decided (see [comment](https://github.com/apache/airflow/pull/42042#issuecomment-2333313742)) that Airflow 3 will require last version of Fab

vincbeck (Issue Creator) on (2024-09-19 15:54:37 UTC): I cannot reproduce and understand why the compat tests are failing. I need to debug directly in the PR. Setting the PR in draft until I figure it out

jscheffl on (2024-09-19 19:31:25 UTC): Have you tried to run the compat tests local? Don't know how powerful your laptop is but for me this is a faster round trip.
```
breeze testing tests --python 3.8 --run-in-parallel --parallel-test-types ""Providers[whatever_you_want]"" --use-packages-from-dist --package-format wheel --use-airflow-version ""2.8.4"" --airflow-constraints-reference constraints-2.8.4 --install-airflow-with-constraints --providers-skip-constraints --skip-providers ""cloudant fab""
```

vincbeck (Issue Creator) on (2024-09-19 19:33:46 UTC): Yep I did, it complains because the amazon provider package is not installed. I could not figure it out why. But I actually found out the reason why the tests are failing by debugging by pushing things and waiting the CI for feedback :D

vincbeck (Issue Creator) on (2024-09-19 20:44:07 UTC): CI is (finally) green!

"
2531672141,pull_request,closed,,Add schemas for backfill endpoint,"Part of AIP-78

Depends on https://github.com/apache/airflow/pull/42277
",dstandish,2024-09-17 17:11:26+00:00,[],2024-09-18 21:55:25+00:00,2024-09-18 21:55:23+00:00,https://github.com/apache/airflow/pull/42278,"[('area:API', ""Airflow's REST/HTTP API"")]","[{'comment_id': 2359379593, 'issue_id': 2531672141, 'author': 'dstandish', 'body': 'closes https://github.com/apache/airflow/issues/42332', 'created_at': datetime.datetime(2024, 9, 18, 20, 49, 54, tzinfo=datetime.timezone.utc)}]","dstandish (Issue Creator) on (2024-09-18 20:49:54 UTC): closes https://github.com/apache/airflow/issues/42332

"
2531670356,pull_request,closed,,Add backfill ORM models,"This is one of the first steps to implement AIP-78.

The structure of the models may change over time (1) as new data awareness capabilities or (2) as dictated by implementation in the scheduler.
",dstandish,2024-09-17 17:10:39+00:00,[],2024-09-18 20:48:14+00:00,2024-09-18 19:38:04+00:00,https://github.com/apache/airflow/pull/42277,"[('kind:documentation', ''), ('area:db-migrations', 'PRs with DB migration')]","[{'comment_id': 2359377052, 'issue_id': 2531670356, 'author': 'dstandish', 'body': 'closes https://github.com/apache/airflow/issues/42331', 'created_at': datetime.datetime(2024, 9, 18, 20, 48, 12, tzinfo=datetime.timezone.utc)}]","dstandish (Issue Creator) on (2024-09-18 20:48:12 UTC): closes https://github.com/apache/airflow/issues/42331

"
2531041673,pull_request,closed,,Changed type hinting for handler function,"Due to changes introduced in https://github.com/apache/airflow/pull/36205, we experienced breakage in our SQLExecuteQueryOperator. In short, our assumption was that the handler is able to also transform the data type returned from the query. For example our handler looked something like this:
```python
def custom_handler(cursor):
    results = fetch_all_handler(cursor)
    columns = [column[0] for column in cursor.description]
    result_dicts = [dict(zip(columns, record)) for record in results]
    return [SomeDataclass(col_a=d[“COL_A”]
``` 
As that was changed, that led to errors in our dags. We now moved to use the  `_process_output` method as we should’ve done in the first place, but we this type hint will prevent further confusion as to what are the constraints of the handler passed to the operator. ",Ariel2400,2024-09-17 12:33:20+00:00,[],2024-09-22 18:34:05+00:00,2024-09-22 18:34:01+00:00,https://github.com/apache/airflow/pull/42275,"[('area:providers', ''), ('provider:common-sql', '')]","[{'comment_id': 2355616890, 'issue_id': 2531041673, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 17, 12, 33, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2356188610, 'issue_id': 2531041673, 'author': 'nevcohen', 'body': ""How about a test that makes sure your use case doesn't fail now?\nso that it doesn't happen again"", 'created_at': datetime.datetime(2024, 9, 17, 15, 12, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2356267458, 'issue_id': 2531041673, 'author': 'Ariel2400', 'body': 'As the change includes only type hinting, I think it would be too restrictive to also enforce it as a test, as types in python are not strict', 'created_at': datetime.datetime(2024, 9, 17, 15, 34, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2356304330, 'issue_id': 2531041673, 'author': 'nevcohen', 'body': 'If @romsharon98 agrees with you, so no problem', 'created_at': datetime.datetime(2024, 9, 17, 15, 46, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2359400191, 'issue_id': 2531041673, 'author': 'romsharon98', 'body': '> If @romsharon98 agrees with you, so no problem\n\nI agree with @Ariel2400', 'created_at': datetime.datetime(2024, 9, 18, 21, 3, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2366908728, 'issue_id': 2531041673, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 22, 18, 34, 4, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-17 12:33:26 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

nevcohen on (2024-09-17 15:12:30 UTC): How about a test that makes sure your use case doesn't fail now?
so that it doesn't happen again

Ariel2400 (Issue Creator) on (2024-09-17 15:34:46 UTC): As the change includes only type hinting, I think it would be too restrictive to also enforce it as a test, as types in python are not strict

nevcohen on (2024-09-17 15:46:19 UTC): If @romsharon98 agrees with you, so no problem

romsharon98 on (2024-09-18 21:03:12 UTC): I agree with @Ariel2400

boring-cyborg[bot] on (2024-09-22 18:34:04 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2530886031,pull_request,closed,,uv version bump to 0.4.7,uv version bump from  0.4.1 to 0.4.7,dirrao,2024-09-17 11:21:25+00:00,['dirrao'],2024-09-25 16:12:30+00:00,2024-09-25 16:12:30+00:00,https://github.com/apache/airflow/pull/42274,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]","[{'comment_id': 2360778296, 'issue_id': 2530886031, 'author': 'topherinternational', 'body': 'Out of interest (I love uv) I took a quick look here and was able to reproduce the failing test locally. First the error:\r\n\r\n```\r\n+ uv pip install --python /usr/local/bin/python --resolution lowest-direct --upgrade --editable \'.[google]\'\r\n  error: Failed to download and build `pandas==0.1`\r\n    Caused by: Build backend failed to determine extra requires with `build_wheel()` with exit status: 1\r\n  --- stdout:\r\n  \r\n  --- stderr:\r\n  Traceback (most recent call last):\r\n    File ""<string>"", line 14, in <module>\r\n    File ""/tmp/.tmpKLzrjb/builds-v0/.tmpp1FCdI/lib/python3.8/site-packages/setuptools/build_meta.py"", line 332, in get_requires_for_build_wheel\r\n      return self._get_build_requires(config_settings, requirements=[])\r\n    File ""/tmp/.tmpKLzrjb/builds-v0/.tmpp1FCdI/lib/python3.8/site-packages/setuptools/build_meta.py"", line 302, in _get_build_requires\r\n      self.run_setup()\r\n    File ""/tmp/.tmpKLzrjb/builds-v0/.tmpp1FCdI/lib/python3.8/site-packages/setuptools/build_meta.py"", line 503, in run_setup\r\n      super().run_setup(setup_script=setup_script)\r\n    File ""/tmp/.tmpKLzrjb/builds-v0/.tmpp1FCdI/lib/python3.8/site-packages/setuptools/build_meta.py"", line 318, in run_setup\r\n      exec(code, locals())\r\n    File ""<string>"", line 5, in <module>\r\n  ModuleNotFoundError: No module named \'numpy\'\r\n```\r\n\r\nRepro steps for me (on an Intel OS X Mac w/ homebrew) were:\r\n1. Create and activate a fresh Python 3.8 environment\r\n2. Install uv\r\n3. Run the uv command args from the trace above (removing the system python marg)\r\n\r\n```\r\ncd <airflow repo directory>\r\npython3.8 -m venv venv38\r\nsource venv38/bin/activate\r\npip install uv==0.4.11\r\nsource venv38/bin/activate  \r\n# ^^ this repeat seemed necessary to point to the freshly-installed uv instead of the homebrew/system uv\r\nuv pip install  --resolution lowest-direct --upgrade --editable \'.[google]\'\r\n```', 'created_at': datetime.datetime(2024, 9, 19, 11, 52, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2360806857, 'issue_id': 2530886031, 'author': 'topherinternational', 'body': 'I also quickly experimented with lower uv versions, it looks like uv 0.4.7 is the last version without this error (0.4.8 and above fail with the numpy error).', 'created_at': datetime.datetime(2024, 9, 19, 12, 4, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2372358064, 'issue_id': 2530886031, 'author': 'topherinternational', 'body': ""Based on my research, I think uv 0.4.8 has a regression that breaks a change they added, ironically, for Airflow.\r\n\r\nhttps://github.com/astral-sh/uv/pull/4149 closed https://github.com/astral-sh/uv/issues/4136, which was requested by @potiuk. uv 0.4.8 included https://github.com/astral-sh/uv/pull/7226, which I've confirmed is the breaking commit via bisect testing.\r\n\r\nI'm going to file an issue on uv for this."", 'created_at': datetime.datetime(2024, 9, 24, 20, 47, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2372361951, 'issue_id': 2530886031, 'author': 'topherinternational', 'body': ""@dirrao I think you'll want to merge/rebase `main` again to get #42451 to clear the static checks errors (the branch is fine, main was busted)."", 'created_at': datetime.datetime(2024, 9, 24, 20, 50, 8, tzinfo=datetime.timezone.utc)}]","topherinternational on (2024-09-19 11:52:58 UTC): Out of interest (I love uv) I took a quick look here and was able to reproduce the failing test locally. First the error:

```
+ uv pip install --python /usr/local/bin/python --resolution lowest-direct --upgrade --editable '.[google]'
  error: Failed to download and build `pandas==0.1`
    Caused by: Build backend failed to determine extra requires with `build_wheel()` with exit status: 1
  --- stdout:
  
  --- stderr:
  Traceback (most recent call last):
    File ""<string>"", line 14, in <module>
    File ""/tmp/.tmpKLzrjb/builds-v0/.tmpp1FCdI/lib/python3.8/site-packages/setuptools/build_meta.py"", line 332, in get_requires_for_build_wheel
      return self._get_build_requires(config_settings, requirements=[])
    File ""/tmp/.tmpKLzrjb/builds-v0/.tmpp1FCdI/lib/python3.8/site-packages/setuptools/build_meta.py"", line 302, in _get_build_requires
      self.run_setup()
    File ""/tmp/.tmpKLzrjb/builds-v0/.tmpp1FCdI/lib/python3.8/site-packages/setuptools/build_meta.py"", line 503, in run_setup
      super().run_setup(setup_script=setup_script)
    File ""/tmp/.tmpKLzrjb/builds-v0/.tmpp1FCdI/lib/python3.8/site-packages/setuptools/build_meta.py"", line 318, in run_setup
      exec(code, locals())
    File ""<string>"", line 5, in <module>
  ModuleNotFoundError: No module named 'numpy'
```

Repro steps for me (on an Intel OS X Mac w/ homebrew) were:
1. Create and activate a fresh Python 3.8 environment
2. Install uv
3. Run the uv command args from the trace above (removing the system python marg)

```
cd <airflow repo directory>
python3.8 -m venv venv38
source venv38/bin/activate
pip install uv==0.4.11
source venv38/bin/activate  
# ^^ this repeat seemed necessary to point to the freshly-installed uv instead of the homebrew/system uv
uv pip install  --resolution lowest-direct --upgrade --editable '.[google]'
```

topherinternational on (2024-09-19 12:04:52 UTC): I also quickly experimented with lower uv versions, it looks like uv 0.4.7 is the last version without this error (0.4.8 and above fail with the numpy error).

topherinternational on (2024-09-24 20:47:52 UTC): Based on my research, I think uv 0.4.8 has a regression that breaks a change they added, ironically, for Airflow.

https://github.com/astral-sh/uv/pull/4149 closed https://github.com/astral-sh/uv/issues/4136, which was requested by @potiuk. uv 0.4.8 included https://github.com/astral-sh/uv/pull/7226, which I've confirmed is the breaking commit via bisect testing.

I'm going to file an issue on uv for this.

topherinternational on (2024-09-24 20:50:08 UTC): @dirrao I think you'll want to merge/rebase `main` again to get #42451 to clear the static checks errors (the branch is fine, main was busted).

"
2530646868,pull_request,closed,,fix: Correct docstring format in _get_template_context (#42244),"(cherry picked from commit 8fe286108720ba1f9a303c066022349d6656f735)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-09-17 09:49:49+00:00,[],2024-10-23 09:28:57+00:00,2024-09-17 10:33:54+00:00,https://github.com/apache/airflow/pull/42272,"[('type:misc/internal', 'Changelog: Misc changes that should appear in change log')]",[],
2530619776,pull_request,closed,,Add Couchbase provider,This PR will add support for airflow couchbase provider.,shyam-cb,2024-09-17 09:40:43+00:00,[],2024-10-16 09:05:18+00:00,2024-10-16 09:05:17+00:00,https://github.com/apache/airflow/pull/42271,"[('area:providers', '')]","[{'comment_id': 2355068665, 'issue_id': 2530619776, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 17, 9, 40, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2359298947, 'issue_id': 2530619776, 'author': 'vincbeck', 'body': 'There is a process to add a provider to Airflow, see the process [here](https://github.com/apache/airflow/blob/main/PROVIDERS.rst#accepting-new-community-providers)', 'created_at': datetime.datetime(2024, 9, 18, 19, 59, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2362842242, 'issue_id': 2530619776, 'author': 'shyam-cb', 'body': '@vincbeck I have created discussion thread https://lists.apache.org/thread/ff0r9ndbkrj6kyr5o8rpghrvg8n1c0c9', 'created_at': datetime.datetime(2024, 9, 20, 5, 14, 57, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-17 09:40:47 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

vincbeck on (2024-09-18 19:59:26 UTC): There is a process to add a provider to Airflow, see the process [here](https://github.com/apache/airflow/blob/main/PROVIDERS.rst#accepting-new-community-providers)

shyam-cb (Issue Creator) on (2024-09-20 05:14:57 UTC): @vincbeck I have created discussion thread https://lists.apache.org/thread/ff0r9ndbkrj6kyr5o8rpghrvg8n1c0c9

"
2530477825,pull_request,closed,,Bump dompurify from 2.2.9 to 2.5.6 in /airflow/www (#42263),(cherry picked from commit https://github.com/apache/airflow/commit/fc5f686e3a238b7e11034057e62524ce9f598b80),pierrejeambrun,2024-09-17 08:57:38+00:00,[],2024-10-23 09:36:35+00:00,2024-09-17 11:41:05+00:00,https://github.com/apache/airflow/pull/42270,"[('area:webserver', 'Webserver related Issues'), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2530231903,pull_request,closed,,Add unit test to catch timeout errors,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",VladaZakharova,2024-09-17 07:00:50+00:00,[],2024-09-18 19:56:02+00:00,2024-09-18 19:56:01+00:00,https://github.com/apache/airflow/pull/42269,[],[],
2530205304,pull_request,closed,,fix(helm): render global volumes and volume mounts into cleanup job (#40191),"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

closes: #40191 

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",dada-engineer,2024-09-17 06:45:58+00:00,[],2024-09-17 07:56:35+00:00,2024-09-17 07:56:35+00:00,https://github.com/apache/airflow/pull/42268,"[('area:helm-chart', 'Airflow Helm Chart')]","[{'comment_id': 2354686133, 'issue_id': 2530205304, 'author': 'dada-engineer', 'body': '@amoghrajesh', 'created_at': datetime.datetime(2024, 9, 17, 6, 47, 50, tzinfo=datetime.timezone.utc)}]","dada-engineer (Issue Creator) on (2024-09-17 06:47:50 UTC): @amoghrajesh

"
2529984477,pull_request,closed,,metrics timing consistency unit tests update,"metrics timing consistency unit tests update
related: https://github.com/apache/airflow/issues/39818, https://github.com/apache/airflow/pull/39908",dirrao,2024-09-17 04:52:33+00:00,['dirrao'],2024-09-17 07:11:38+00:00,2024-09-17 07:11:38+00:00,https://github.com/apache/airflow/pull/42267,[],[],
2529537849,pull_request,closed,,"In case a provider is not ready, also run lowest dependency tests","As I was adding the EdgeProvider package I noticed that Lowest Dependency Tests are not executed for Non-Ready providers. This PR adds testing for this as well.
Note: Pytests are executed in general for Non-Ready Providers.

@eladkal This is what we discussed on Friday in the CI/CD Meeting for Edge Provider",jscheffl,2024-09-16 21:34:32+00:00,[],2024-09-18 14:20:03+00:00,2024-09-18 14:20:03+00:00,https://github.com/apache/airflow/pull/42265,"[('area:dev-tools', '')]",[],
2529517893,pull_request,closed,,Update StatsD Image Tag from failed dependencies check,Fix failed CI tests on main in https://github.com/apache/airflow/actions/runs/10890709022/job/30220075985,jscheffl,2024-09-16 21:18:52+00:00,[],2024-09-17 08:20:35+00:00,2024-09-17 08:20:35+00:00,https://github.com/apache/airflow/pull/42264,"[('area:helm-chart', 'Airflow Helm Chart')]",[],
2529478608,pull_request,closed,,Bump dompurify from 2.2.9 to 2.5.6 in /airflow/www,"Bumps [dompurify](https://github.com/cure53/DOMPurify) from 2.2.9 to 2.5.6.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/cure53/DOMPurify/releases"">dompurify's releases</a>.</em></p>
<blockquote>
<h2>DOMPurify 2.5.6</h2>
<ul>
<li>Fixed an issue with the execution logic of attribute hooks to prevent bypasses, thanks <a href=""https://github.com/kevin-mizu""><code>@​kevin-mizu</code></a></li>
<li>Fixed a minor problem with the bower file pointing to the wrong dist path</li>
<li>Updated several development dependencies</li>
</ul>
<h2>DOMPurify 2.5.5</h2>
<ul>
<li>Fixed a minor issue with the dist paths in <code>bower.js</code>, thanks <a href=""https://github.com/HakumenNC""><code>@​HakumenNC</code></a></li>
<li>Fixed a minor issue with sanitizing HTML coming from copy&amp;paste Word content, thanks <a href=""https://github.com/kakao-bishop-cho""><code>@​kakao-bishop-cho</code></a></li>
</ul>
<h2>DOMPurify 2.5.4</h2>
<ul>
<li>Fixed a bug with latest <code>isNaN</code> checks affecting MSIE, thanks <a href=""https://github.com/tulach""><code>@​tulach</code></a></li>
<li>Fixed the tests for MSIE and fixed related test-runner</li>
</ul>
<h2>DOMPurify 2.5.3</h2>
<ul>
<li>Fixed several mXSS variations found by and thanks to <a href=""https://github.com/kevin-mizu""><code>@​kevin-mizu</code></a> &amp; <a href=""https://github.com/Ry0taK""><code>@​Ry0taK</code></a></li>
<li>Added better configurability for comment scrubbing default behavior</li>
<li>Added better hardening against Prototype Pollution attacks, thanks <a href=""https://github.com/kevin-mizu""><code>@​kevin-mizu</code></a></li>
<li>Fixed some smaller issues in README and other documentation</li>
</ul>
<h2>DOMPurify 2.5.2</h2>
<ul>
<li>Addressed and fixed a mXSS variation found by <a href=""https://github.com/kevin-mizu""><code>@​kevin-mizu</code></a></li>
<li>Addressed and fixed a mXSS variation found by <a href=""https://twitter.com/hash_kitten"">Adam Kues</a> of Assetnote</li>
<li>Updated tests for older Safari and Chrome versions</li>
</ul>
<h2>DOMPurify 2.5.1</h2>
<ul>
<li>Fixed an mXSS sanitizer bypass reported by <a href=""https://github.com/icesfont""><code>@​icesfont</code></a></li>
<li>Added new code to track element nesting depth</li>
<li>Added new code to enforce a maximum nesting depth of 255</li>
<li>Added coverage tests and necessary clobbering protections</li>
</ul>
<p><strong>Note that this is a security release and should be upgraded to immediately. Please also note that further releases may follow as the underlying vulnerability is apparently new and further variations may be discovered.</strong></p>
<h2>DOMPurify 2.5.0</h2>
<ul>
<li>Added new setting <code>SAFE_FOR_XML</code> to enable better control over comment scrubbing</li>
<li>Updated the LICENSE file to show the accurate year number</li>
<li>Updated several build and test dependencies</li>
</ul>
<h2>DOMPurify 2.4.9</h2>
<ul>
<li>Fixed another conditional bypass caused by Processing Instructions, thanks <a href=""https://github.com/Ry0taK""><code>@​Ry0taK</code></a></li>
<li>Fixed the regex for HTML Custom Element detection, thanks <a href=""https://github.com/AlekseySolovey3T""><code>@​AlekseySolovey3T</code></a></li>
</ul>
<h2>DOMPurify 2.4.8</h2>
<ul>
<li>Fixed two possible bypasses when sanitizing an XML document and later using it in HTML, thanks <a href=""https://github.com/Slonser""><code>@​Slonser</code></a></li>
</ul>
<h2>DOMPurify 2.4.7</h2>
<ul>
<li>Fixed a licensing issue spotted and reported by <a href=""https://github.com/george-thomas-hill""><code>@​george-thomas-hill</code></a></li>
</ul>
<h2>DOMPurify 2.4.6</h2>
<ul>
<li>Fixed a bypass in jsdom 22 in case the <code>noframes</code> element is permitted, thanks <a href=""https://github.com/leeN""><code>@​leeN</code></a></li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/cure53/DOMPurify/commit/d78f24171d7e1e6c20d8d6f496c8f8f66efb1ca3""><code>d78f241</code></a> chore: Preparing 2.5.6 release</li>
<li><a href=""https://github.com/cure53/DOMPurify/commit/38e8410970ea558befbb72d7579396abdb08a33f""><code>38e8410</code></a> fix: Added changes to 2.x regarding attribute value checks</li>
<li><a href=""https://github.com/cure53/DOMPurify/commit/9a7cd98bf0bee8690d6dedf7deeac8b6f9ee0f3d""><code>9a7cd98</code></a> See <a href=""https://redirect.github.com/cure53/DOMPurify/issues/961"">#961</a></li>
<li><a href=""https://github.com/cure53/DOMPurify/commit/de2545c445baa47d4aa40ece463ecf3a7688125e""><code>de2545c</code></a> chore: Preparing 2.5.5 release</li>
<li><a href=""https://github.com/cure53/DOMPurify/commit/f1e27e60d942244e4d0868829e4cb73b256421ec""><code>f1e27e6</code></a> chore: Also removed depth counter logic from 2.x branch for now</li>
<li><a href=""https://github.com/cure53/DOMPurify/commit/10c12610b15875ea09129c35fca28a886857434f""><code>10c1261</code></a> docs: Updated README ever so slightly</li>
<li><a href=""https://github.com/cure53/DOMPurify/commit/1c9288095c41f48c1a5dcfda72f615320b27b3ad""><code>1c92880</code></a> test: Fixed two more tests for MSIE11 and Edge 18</li>
<li><a href=""https://github.com/cure53/DOMPurify/commit/14012082720e48f7f9134d3c53f280ba4dba2058""><code>1401208</code></a> test: Fixed more tests for MSIE and Edge 18</li>
<li><a href=""https://github.com/cure53/DOMPurify/commit/2c6410a637eae71a51b2fa6d8cdd2bde7b2aa125""><code>2c6410a</code></a> test: Fixed several new tests for MSIE11 and Edge 18</li>
<li><a href=""https://github.com/cure53/DOMPurify/commit/2c9bca957c28bb73ecc9544cea379e41963276c4""><code>2c9bca9</code></a> test: Changed github config to include MSIE tests for 2.x</li>
<li>Additional commits viewable in <a href=""https://github.com/cure53/DOMPurify/compare/2.2.9...2.5.6"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=dompurify&package-manager=npm_and_yarn&previous-version=2.2.9&new-version=2.5.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/apache/airflow/network/alerts).

</details>",dependabot[bot],2024-09-16 20:53:36+00:00,[],2024-10-23 09:27:28+00:00,2024-09-17 08:53:27+00:00,https://github.com/apache/airflow/pull/42263,"[('area:webserver', 'Webserver related Issues'), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log'), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('area:dependencies', 'Issues related to dependencies problems'), ('javascript', 'Pull requests that update Javascript code')]",[],
2529307262,pull_request,closed,,Added create_limiter method to allow upgrade to Flask-AppBuilder 4.5.1,"Per instructions in the [fab/provider.yaml](https://github.com/apache/airflow/blob/30925c739b60d8a54d84c7c58a3ab854c167f2c1/airflow/providers/fab/provider.yaml#L50), updates have been made to override.py. This is the only difference in the security/manager.py file upstream between v4.5.0 and v4.5.1. This is seen as[ this commit is the only commit](https://github.com/dpgaspar/Flask-AppBuilder/commit/1a85de966bb689b59e95813cce7d2a369abee26e) in the [security/manager.py file history ](https://github.com/dpgaspar/Flask-AppBuilder/blob/1a85de966bb689b59e95813cce7d2a369abee26e/flask_appbuilder/security/manager.py)to have the 4.5.1 tag and the previous commits contain the v4.5.0 tag

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",jamie-albert,2024-09-16 19:33:25+00:00,[],2024-11-09 00:14:49+00:00,2024-11-09 00:14:49+00:00,https://github.com/apache/airflow/pull/42261,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:providers', ''), ('provider:fab', '')]","[{'comment_id': 2353753683, 'issue_id': 2529307262, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 16, 19, 33, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2358969222, 'issue_id': 2529307262, 'author': 'vincbeck', 'body': ""`create_limiter` is constructed in `airflow/www/security_manager.py` but it will most likely go away in Airflow 3. So I think it makes sense to put it where you did. Though, across the codebase we are calling `create_limiter` with no parameter, you might want to change that as well. That's the reason why unit tests are failing"", 'created_at': datetime.datetime(2024, 9, 18, 16, 51, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453235595, 'issue_id': 2529307262, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 11, 3, 0, 16, 44, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-16 19:33:31 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

vincbeck on (2024-09-18 16:51:46 UTC): `create_limiter` is constructed in `airflow/www/security_manager.py` but it will most likely go away in Airflow 3. So I think it makes sense to put it where you did. Though, across the codebase we are calling `create_limiter` with no parameter, you might want to change that as well. That's the reason why unit tests are failing

github-actions[bot] on (2024-11-03 00:16:44 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2529090684,pull_request,closed,,Deprecate `AutoMLBatchPredictOperator` and refactor AutoML system tests,"- Remove example_automl_model.py as obsolete.
- Move example hooks to example_automl_translation.py
- Update documentation
- Deprecate AutoMLPredictBatchOperator completely, as it cannot be used with translation model, previous usage has been already deprecated.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",olegkachur-e,2024-09-16 17:49:03+00:00,[],2024-09-27 08:30:02+00:00,2024-09-27 08:30:02+00:00,https://github.com/apache/airflow/pull/42260,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', ''), ('kind:documentation', '')]",[],
2529079768,pull_request,closed,,Fix google provider automl_img_obj_vision system test,"- provide proper dataset file and update resources
- delete redundant steps

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",olegkachur-e,2024-09-16 17:44:22+00:00,[],2024-09-18 19:51:22+00:00,2024-09-18 19:51:22+00:00,https://github.com/apache/airflow/pull/42259,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', '')]",[],
2529038008,pull_request,closed,,Fix google provider automl vision classification system test,"- provide new dataset
- delete redundant steps

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",olegkachur-e,2024-09-16 17:23:19+00:00,[],2024-09-18 19:26:34+00:00,2024-09-18 19:26:34+00:00,https://github.com/apache/airflow/pull/42257,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', '')]",[],
2528830890,pull_request,closed,,Fix documentation for cpu and memory usage (#42147),"Backport #42147 in `v2-10-test`

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-16 15:45:32+00:00,[],2024-10-23 09:29:50+00:00,2024-09-16 16:11:14+00:00,https://github.com/apache/airflow/pull/42256,"[('kind:documentation', ''), ('type:doc-only', 'Changelog: Doc Only')]","[{'comment_id': 2355610809, 'issue_id': 2528830890, 'author': 'shalberd', 'body': 'awesome, nice', 'created_at': datetime.datetime(2024, 9, 17, 12, 31, 39, tzinfo=datetime.timezone.utc)}]","shalberd on (2024-09-17 12:31:39 UTC): awesome, nice

"
2528453378,pull_request,closed,,Add new Google Search 360 Reporting Operators,"This PR will introduce new Operators for Google Search 360 service and remove the already failing operators.
Here is a bit of an explanation for clearer understanding;

The [previous Search Ads 360 Reporting API](https://developers.google.com/search-ads/v2/how-tos/reporting) (which is currently in use in google-provider) was already decommissioned on June 30, 2024 ([see deatils](https://developers.google.com/search-ads/v2/migration)). All new reporting development should use the [new Search Ads 360 Reporting API](https://developers.google.com/search-ads/reporting/overview).
Currently, the Reporting operators, sensors and hooks are failing due to the decommission. The new API is not a replacement for the old one, it has a different approach and APIs. Therefore, we needed to implement new operators and remove the old ones. This PR does **NOT** break any working DAG, because it replaces not working functionality with the new one.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",molcay,2024-09-16 13:18:34+00:00,[],2024-09-19 07:58:44+00:00,2024-09-19 05:36:06+00:00,https://github.com/apache/airflow/pull/42255,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', ''), ('kind:documentation', '')]","[{'comment_id': 2353993082, 'issue_id': 2528453378, 'author': 'eladkal', 'body': '> The [previous Search Ads 360 Reporting API](https://developers.google.com/search-ads/v2/how-tos/reporting) (which is currently in use in google-provider) was already decommissioned on June 30, 2024 ([see deatils](https://developers.google.com/search-ads/v2/migration)). All new reporting development should use the [new Search Ads 360 Reporting API](https://developers.google.com/search-ads/reporting/overview). Currently, the Reporting operators, sensors and hooks are failing due to the decommission. The new API is not a replacement for the old one, it has a different approach and APIs. Therefore, we needed to implement new operators and remove the old ones. This PR does **NOT** break any working DAG, because it replaces not working functionality with the new one.\r\n\r\nPlease insert this information at the top of the google provider changelog\r\nI will pick this note during release and assign this to the right place in the log.', 'created_at': datetime.datetime(2024, 9, 16, 20, 42, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2355032436, 'issue_id': 2528453378, 'author': 'molcay', 'body': '@eladkal I add a warning section to the CHANGELOG. I create a new section for the next minor version (10.23.0) and put the message as a warning.\r\n\r\nI also saw some other kind of sections like [`Breaking Changes`](https://github.com/apache/airflow/blob/main/airflow/providers/google/CHANGELOG.rst#breaking-changes-1). Do I need to do something like this? or Is the current version enough? WDYT?', 'created_at': datetime.datetime(2024, 9, 17, 9, 30, 57, tzinfo=datetime.timezone.utc)}]","eladkal on (2024-09-16 20:42:51 UTC): Please insert this information at the top of the google provider changelog
I will pick this note during release and assign this to the right place in the log.

molcay (Issue Creator) on (2024-09-17 09:30:57 UTC): @eladkal I add a warning section to the CHANGELOG. I create a new section for the next minor version (10.23.0) and put the message as a warning.

I also saw some other kind of sections like [`Breaking Changes`](https://github.com/apache/airflow/blob/main/airflow/providers/google/CHANGELOG.rst#breaking-changes-1). Do I need to do something like this? or Is the current version enough? WDYT?

"
2528160925,pull_request,closed,,Standard provider bash operator,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
Moving bash operators/sensors to standard provider
<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-09-16 11:09:59+00:00,[],2024-11-23 19:53:54+00:00,2024-10-09 11:40:39+00:00,https://github.com/apache/airflow/pull/42252,"[('area:providers', ''), ('area:dev-tools', ''), ('provider:openlineage', 'AIP-53'), ('provider:celery', '')]","[{'comment_id': 2360665234, 'issue_id': 2528160925, 'author': 'gopidesupavan', 'body': 'moving this bash operator to standard provider, has module path changes in systems test, integration tests.\r\n\r\nfailures in python client tests, i am thinking due to bashoperator path change, causing dag not loaded.\r\nChecking remaining tests.', 'created_at': datetime.datetime(2024, 9, 19, 10, 55, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2364640820, 'issue_id': 2528160925, 'author': 'gopidesupavan', 'body': 'Could you please help on this, kubernetes executor tests are failing with dag not found `example_kubernetes_executor ` and `example_bash_operator`. one option i tried copying the standard package to k8s build container, but its still failing with same reason.', 'created_at': datetime.datetime(2024, 9, 20, 21, 27, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2365077506, 'issue_id': 2528160925, 'author': 'gopidesupavan', 'body': 'Additional prod image tests also failing, as it doesnt have the standard provider. inside latest prod image pull.\r\n<img width=""1393"" alt=""image"" src=""https://github.com/user-attachments/assets/86f73ade-fe01-49e3-a18b-4bb1e9c0af23"">', 'created_at': datetime.datetime(2024, 9, 21, 9, 13, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2365183080, 'issue_id': 2528160925, 'author': 'gopidesupavan', 'body': '> Additional prod image tests also failing, as it doesnt have the standard provider. inside latest prod image pull. <img alt=""image"" width=""1393"" src=""https://private-user-images.githubusercontent.com/31437079/369608125-86f73ade-fe01-49e3-a18b-4bb1e9c0af23.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjY5MjQ2MTIsIm5iZiI6MTcyNjkyNDMxMiwicGF0aCI6Ii8zMTQzNzA3OS8zNjk2MDgxMjUtODZmNzNhZGUtZmUwMS00OWUzLWExOGItNGJiMWU5YzBhZjIzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA5MjElMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwOTIxVDEzMTE1MlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTNmMGVlODY3YmMzZTc1NzExMmNlOTdjYWMyNGRkMjgyYjRiMDJhNjIwMDViMjg3YTY4YzVjZjU5YzQ0YzhkZmUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.ongG0DAe36JwPInvy74AnBg_OU4gICmsEMd_OisBXks"">\r\n\r\nAny suggestions for these tests?', 'created_at': datetime.datetime(2024, 9, 21, 13, 15, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2365296145, 'issue_id': 2528160925, 'author': 'gopidesupavan', 'body': 'After reviewing the logs, it seems the reason the k8s tests are failing is due to the absence of the standard provider package in the image. This is because i guess the standard provider not included in the prod_image_installed_providers.txt file ?\r\n\r\nIs it okay to add standard provider in to that file?', 'created_at': datetime.datetime(2024, 9, 21, 19, 27, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2365331528, 'issue_id': 2528160925, 'author': 'jscheffl', 'body': '> After reviewing the logs, it seems the reason the k8s tests are failing is due to the absence of the standard provider package in the image. This is because i guess the standard provider not included in the prod_image_installed_providers.txt file ?\r\n> \r\n> Is it okay to add standard provider in to that file?\r\n\r\nYes. At least from the community discussion we always expected that the new ""standard"" provider will be a standard install and dependency. So adding to prod image would be the natural consequence. Hope that fixes the problems you had (and sorry for responding late,,,)', 'created_at': datetime.datetime(2024, 9, 21, 21, 47, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2365362544, 'issue_id': 2528160925, 'author': 'gopidesupavan', 'body': '> > After reviewing the logs, it seems the reason the k8s tests are failing is due to the absence of the standard provider package in the image. This is because i guess the standard provider not included in the prod_image_installed_providers.txt file ?\r\n> > Is it okay to add standard provider in to that file?\r\n> \r\n> Yes. At least from the community discussion we always expected that the new ""standard"" provider will be a standard install and dependency. So adding to prod image would be the natural consequence. Hope that fixes the problems you had (and sorry for responding late,,,)\r\n\r\nThank you :) , I am glad the debug helped me to understand how the ci workflow setups and working process.', 'created_at': datetime.datetime(2024, 9, 21, 23, 45, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2367396822, 'issue_id': 2528160925, 'author': 'gopidesupavan', 'body': 'Added standard provider to prod_image_installed_providers, but the CI pipeline is ignoring, might be its not in ready state to consider for constraints while building image? any suggestions.', 'created_at': datetime.datetime(2024, 9, 23, 7, 14, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2372497637, 'issue_id': 2528160925, 'author': 'gopidesupavan', 'body': ""The standard provider hasn't been released yet, which is why it's not being installed in the production build images. As a result, k8s and one Docker test are failing. As a temporary, I’ve updated these tests to be skipped until the standard provider is released and added to prod_image_installed_providers.txt. Could you please let me know if this approach is okay or if you have any other suggestions? :)\r\n\r\nI also tried updating prod_image_installed_providers.txt to check if it would install, but it’s still not working."", 'created_at': datetime.datetime(2024, 9, 24, 22, 27, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2400563438, 'issue_id': 2528160925, 'author': 'jscheffl', 'body': 'Oh, nooo, merge conflict - can you fix this? then LGTM!', 'created_at': datetime.datetime(2024, 10, 8, 18, 38, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2400573370, 'issue_id': 2528160925, 'author': 'gopidesupavan', 'body': '> Oh, nooo, merge conflict - can you fix this? then LGTM!\r\n\r\nyeah just resolved 3.8 removals 😄', 'created_at': datetime.datetime(2024, 10, 8, 18, 43, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2400903551, 'issue_id': 2528160925, 'author': 'gopidesupavan', 'body': '> > Oh, nooo, merge conflict - can you fix this? then LGTM!\r\n> \r\n> yeah just resolved 3.8 removals 😄\r\n\r\nThere is a test failing , but its not related to this. Would you be able to merge please?', 'created_at': datetime.datetime(2024, 10, 8, 22, 6, 32, tzinfo=datetime.timezone.utc)}]","gopidesupavan (Issue Creator) on (2024-09-19 10:55:59 UTC): moving this bash operator to standard provider, has module path changes in systems test, integration tests.

failures in python client tests, i am thinking due to bashoperator path change, causing dag not loaded.
Checking remaining tests.

gopidesupavan (Issue Creator) on (2024-09-20 21:27:51 UTC): Could you please help on this, kubernetes executor tests are failing with dag not found `example_kubernetes_executor ` and `example_bash_operator`. one option i tried copying the standard package to k8s build container, but its still failing with same reason.

gopidesupavan (Issue Creator) on (2024-09-21 09:13:04 UTC): Additional prod image tests also failing, as it doesnt have the standard provider. inside latest prod image pull.
<img width=""1393"" alt=""image"" src=""https://github.com/user-attachments/assets/86f73ade-fe01-49e3-a18b-4bb1e9c0af23"">

gopidesupavan (Issue Creator) on (2024-09-21 13:15:07 UTC): Any suggestions for these tests?

gopidesupavan (Issue Creator) on (2024-09-21 19:27:47 UTC): After reviewing the logs, it seems the reason the k8s tests are failing is due to the absence of the standard provider package in the image. This is because i guess the standard provider not included in the prod_image_installed_providers.txt file ?

Is it okay to add standard provider in to that file?

jscheffl on (2024-09-21 21:47:26 UTC): Yes. At least from the community discussion we always expected that the new ""standard"" provider will be a standard install and dependency. So adding to prod image would be the natural consequence. Hope that fixes the problems you had (and sorry for responding late,,,)

gopidesupavan (Issue Creator) on (2024-09-21 23:45:31 UTC): Thank you :) , I am glad the debug helped me to understand how the ci workflow setups and working process.

gopidesupavan (Issue Creator) on (2024-09-23 07:14:36 UTC): Added standard provider to prod_image_installed_providers, but the CI pipeline is ignoring, might be its not in ready state to consider for constraints while building image? any suggestions.

gopidesupavan (Issue Creator) on (2024-09-24 22:27:08 UTC): The standard provider hasn't been released yet, which is why it's not being installed in the production build images. As a result, k8s and one Docker test are failing. As a temporary, I’ve updated these tests to be skipped until the standard provider is released and added to prod_image_installed_providers.txt. Could you please let me know if this approach is okay or if you have any other suggestions? :)

I also tried updating prod_image_installed_providers.txt to check if it would install, but it’s still not working.

jscheffl on (2024-10-08 18:38:06 UTC): Oh, nooo, merge conflict - can you fix this? then LGTM!

gopidesupavan (Issue Creator) on (2024-10-08 18:43:46 UTC): yeah just resolved 3.8 removals 😄

gopidesupavan (Issue Creator) on (2024-10-08 22:06:32 UTC): There is a test failing , but its not related to this. Would you be able to merge please?

"
2528117144,pull_request,closed,,Mark VertexAI AutoMLText deprecation,"- Label deprecated items with deprecated decorator.
- Refactor vertex_ai AutoMLHook.create_auto_ml_text_training_job, to avoid calling get_auto_ml_text_training_job, to not trigger mypy errors after applying @deprecate on hook method.
- Update docs.
- Delete irrelevant system tests.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",olegkachur-e,2024-09-16 10:48:40+00:00,[],2024-09-19 19:27:22+00:00,2024-09-19 19:27:22+00:00,https://github.com/apache/airflow/pull/42251,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', ''), ('kind:documentation', '')]","[{'comment_id': 2355944451, 'issue_id': 2528117144, 'author': 'olegkachur-e', 'body': '> CI fails due to missing tests (`tests/always/test_project_structure.py::TestGoogleProviderProjectStructure::test_missing_examples`): https://github.com/apache/airflow/actions/runs/10882291445/job/30239557235?pr=42251\r\n\r\nThanks for highlighting this, as we deprecate this operator, added it to the `DEPRECATED_CLASSES`.', 'created_at': datetime.datetime(2024, 9, 17, 14, 8, 38, tzinfo=datetime.timezone.utc)}]","olegkachur-e (Issue Creator) on (2024-09-17 14:08:38 UTC): Thanks for highlighting this, as we deprecate this operator, added it to the `DEPRECATED_CLASSES`.

"
2528079396,pull_request,closed,,Fix google provider bigtable system test,"* ensure correct id strings
* assign proper id values

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",olegkachur-e,2024-09-16 10:30:48+00:00,[],2024-09-18 19:25:35+00:00,2024-09-18 19:25:31+00:00,https://github.com/apache/airflow/pull/42250,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', '')]","[{'comment_id': 2359241981, 'issue_id': 2528079396, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 18, 19, 25, 33, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-18 19:25:33 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2528021343,pull_request,closed,,allow dataset alias to add more than one dataset events (#42189),(cherry picked from commit a5d0a63d8784d7f4100a4770748c783261968e3c),utkarsharma2,2024-09-16 10:04:00+00:00,[],2024-09-17 11:00:45+00:00,2024-09-16 12:41:55+00:00,https://github.com/apache/airflow/pull/42247,"[('area:serialization', ''), ('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2527930295,pull_request,closed,,Fix main otel logger test,"Most likely related to:
https://github.com/apache/airflow/pull/39908

Some PRs CI are failing due to this test that was not updated accordingly:
- https://github.com/apache/airflow/pull/42198, https://github.com/apache/airflow/actions/runs/10879642741/job/30186159602?pr=42198

- https://github.com/apache/airflow/pull/42244",pierrejeambrun,2024-09-16 09:20:42+00:00,[],2024-09-16 12:02:18+00:00,2024-09-16 12:02:16+00:00,https://github.com/apache/airflow/pull/42246,[],[],
2527631616,pull_request,closed,,Refactor bulk_save_to_db,"This function collects information from DAG objects, and creates/updates database rows against them. However, it handles A LOT of information, reading a lot of objects, touching a lot of models. The function is not very readable.

A new module has been introduced in airflow.dag_processing.collection to encapsulate the logic previously in bulk_save_to_db.

Some loops are broken down into multiple loops, so each loop does not do too much (which leads to a lot of long-living variables that reduce readability). Not much is changed aside from that, just mostly splitting things into separate steps to make things clearer.",uranusjr,2024-09-16 06:43:49+00:00,[],2024-09-20 06:45:45+00:00,2024-09-20 06:45:43+00:00,https://github.com/apache/airflow/pull/42245,"[('area:Scheduler', 'including HA (high availability) scheduler')]","[{'comment_id': 2359715193, 'issue_id': 2527631616, 'author': 'uranusjr', 'body': 'Note of self: Submit another PR to refactor `_register_dataset_changes`. There are at least a few db optimisations we can do.', 'created_at': datetime.datetime(2024, 9, 19, 1, 11, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2359722286, 'issue_id': 2527631616, 'author': 'uranusjr', 'body': 'Also maybe we need a new method in DatasetManager for creating aliases. (Or even more for other things?)', 'created_at': datetime.datetime(2024, 9, 19, 1, 19, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2359780802, 'issue_id': 2527631616, 'author': 'uranusjr', 'body': 'Here we gooooooo', 'created_at': datetime.datetime(2024, 9, 19, 1, 41, 15, tzinfo=datetime.timezone.utc)}]","uranusjr (Issue Creator) on (2024-09-19 01:11:12 UTC): Note of self: Submit another PR to refactor `_register_dataset_changes`. There are at least a few db optimisations we can do.

uranusjr (Issue Creator) on (2024-09-19 01:19:21 UTC): Also maybe we need a new method in DatasetManager for creating aliases. (Or even more for other things?)

uranusjr (Issue Creator) on (2024-09-19 01:41:15 UTC): Here we gooooooo

"
2527594403,pull_request,closed,,fix: Correct docstring format in _get_template_context,Clarified parameter description for `dag` to improve documentation consistency.,wonseokyang-de,2024-09-16 06:18:57+00:00,[],2024-10-23 09:28:48+00:00,2024-09-17 09:41:34+00:00,https://github.com/apache/airflow/pull/42244,"[('type:misc/internal', 'Changelog: Misc changes that should appear in change log')]",[],
2526697468,pull_request,closed,,apply otel_service on metrics,"closes: #42210
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-09-15 02:09:18+00:00,[],2024-09-24 18:24:34+00:00,2024-09-24 12:37:30+00:00,https://github.com/apache/airflow/pull/42242,"[('type:bug-fix', 'Changelog: Bug Fixes'), ('affected_version:2.10', 'Issues Reported for 2.10')]","[{'comment_id': 2354694303, 'issue_id': 2526697468, 'author': 'romsharon98', 'body': '> Failure in the non-db tests\r\n\r\nRunning this test in main, and it failed with the same error:\r\n\r\n`FAILED tests/core/test_otel_logger.py::TestOtelMetrics::test_timer_start_and_stop_manually_send_true - assert 3140.0 == 3.14`\r\n\r\nMaybe @ferruzzi can help us figure it out?', 'created_at': datetime.datetime(2024, 9, 17, 6, 53, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2354720873, 'issue_id': 2526697468, 'author': 'romsharon98', 'body': 'This PR: https://github.com/apache/airflow/pull/42267 should fix the current failed tests', 'created_at': datetime.datetime(2024, 9, 17, 7, 9, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2356714622, 'issue_id': 2526697468, 'author': 'ferruzzi', 'body': '> This PR: #42267 should fix the current failed tests\r\n\r\nYeah, looks like you got it sorted out.   Looks like it was a side-effect of the PR which converted reporting timers from seconds to millis,', 'created_at': datetime.datetime(2024, 9, 17, 19, 20, 44, tzinfo=datetime.timezone.utc)}]","romsharon98 (Issue Creator) on (2024-09-17 06:53:10 UTC): Running this test in main, and it failed with the same error:

`FAILED tests/core/test_otel_logger.py::TestOtelMetrics::test_timer_start_and_stop_manually_send_true - assert 3140.0 == 3.14`

Maybe @ferruzzi can help us figure it out?

romsharon98 (Issue Creator) on (2024-09-17 07:09:43 UTC): This PR: https://github.com/apache/airflow/pull/42267 should fix the current failed tests

ferruzzi on (2024-09-17 19:20:44 UTC): Yeah, looks like you got it sorted out.   Looks like it was a side-effect of the PR which converted reporting timers from seconds to millis,

"
2526671270,pull_request,closed,,Add slack notification for canary build failures,"closes: [#42203](https://github.com/apache/airflow/issues/42203)

this PR should send message to this slack channel https://apache-airflow.slack.com/archives/C07MWFASWJ1 if the CI is failed.
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-09-15 00:27:42+00:00,[],2024-09-22 17:58:19+00:00,2024-09-22 17:58:19+00:00,https://github.com/apache/airflow/pull/42241,"[('area:dev-tools', '')]",[],
2526600846,pull_request,closed,,Added Novelis to the list of companies using apache airflow,Added Novelis to INTHEWILD.md,Rushabh-Garambha,2024-09-14 20:43:28+00:00,[],2024-09-15 04:50:13+00:00,2024-09-15 04:50:10+00:00,https://github.com/apache/airflow/pull/42239,[],"[{'comment_id': 2351146547, 'issue_id': 2526600846, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 14, 20, 43, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2351365417, 'issue_id': 2526600846, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 15, 4, 50, 12, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-14 20:43:32 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-15 04:50:12 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2526347031,pull_request,closed,,Add DevITJobs.com,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",MariaAbadi,2024-09-14 12:26:53+00:00,[],2024-09-15 04:51:27+00:00,2024-09-15 04:51:27+00:00,https://github.com/apache/airflow/pull/42236,[],[],
2526034701,pull_request,closed,,Fix docs to clarify airflow_local_settings.py behavior in 2.10.1,,Rustix69,2024-09-14 06:48:59+00:00,[],2024-10-25 19:42:41+00:00,2024-09-14 16:55:58+00:00,https://github.com/apache/airflow/pull/42235,"[('kind:documentation', '')]",[],
2526017449,pull_request,closed,,Fix docs to clarify airflow_local_settings.py behavior in 2.10.1  ,"This PR addresses an issue introduced in Airflow 2.10.1, where airflow_local_settings.py is no longer loaded from the dags/ directory as it's no longer included in sys.path during initialization. This update ensures users are informed to place airflow_local_settings.py in a directory that is part of sys.path, such as $AIRFLOW_HOME/config.

### Why this fix is necessary:
The breaking change in version 2.10.1 can cause unexpected behavior for users relying on local settings in the dags/ folder. By documenting this change and recommending the correct path for placing the file, this PR resolves confusion and prevents issues related to Airflow configuration.

### How this was tested:
This was tested by placing the airflow_local_settings.py file in both $AIRFLOW_HOME/dags/ and $AIRFLOW_HOME/config/, confirming that the latter is correctly loaded, while the former is no longer recognized.",Rustix69,2024-09-14 06:05:26+00:00,[],2024-09-14 06:25:02+00:00,2024-09-14 06:25:02+00:00,https://github.com/apache/airflow/pull/42234,[],"[{'comment_id': 2350864147, 'issue_id': 2526017449, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 14, 6, 5, 28, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-14 06:05:28 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

"
2525985386,pull_request,closed,,Fix doc,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",jishangarg,2024-09-14 04:27:27+00:00,[],2024-09-14 04:37:03+00:00,2024-09-14 04:37:03+00:00,https://github.com/apache/airflow/pull/42233,"[('kind:documentation', '')]",[],
2525904865,pull_request,closed,,FIX: Doc update - Airflow local settings no longer importable from dags folder,"
closes: #42156
related: #42156

",jishangarg,2024-09-14 00:57:36+00:00,[],2024-10-23 09:22:49+00:00,2024-10-01 06:32:59+00:00,https://github.com/apache/airflow/pull/42231,"[('kind:documentation', ''), ('type:doc-only', 'Changelog: Doc Only')]","[{'comment_id': 2350753413, 'issue_id': 2525904865, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 14, 0, 57, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2351042524, 'issue_id': 2525904865, 'author': 'jishangarg', 'body': 'can anyone please review?', 'created_at': datetime.datetime(2024, 9, 14, 15, 54, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2384911634, 'issue_id': 2525904865, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 1, 6, 33, 1, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-14 00:57:40 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

jishangarg (Issue Creator) on (2024-09-14 15:54:48 UTC): can anyone please review?

boring-cyborg[bot] on (2024-10-01 06:33:01 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2525896109,pull_request,closed,,CI script to check template fields,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
Adding CI script to check template fields in provider operators and sensors
<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-09-14 00:36:13+00:00,[],2024-11-02 13:06:06+00:00,2024-09-18 14:07:37+00:00,https://github.com/apache/airflow/pull/42230,"[('area:dev-tools', '')]","[{'comment_id': 2350747968, 'issue_id': 2525896109, 'author': 'gopidesupavan', 'body': 'cc: @ferruzzi \r\n\r\nA recent update to the #41848 template field caused a system test failure. To prevent similar issues, I started adding tests to verify all template fields. As suggested by ferruzzi in the discussion https://github.com/apache/airflow/pull/42183#issuecomment-2347025162, implementing a CI check would be a valuable addition to this process, so tried use ast and import modules approach. \r\n\r\nI am happy to take some suggestion and any alternatives :).', 'created_at': datetime.datetime(2024, 9, 14, 0, 46, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2350752453, 'issue_id': 2525896109, 'author': 'gopidesupavan', 'body': ""@potiuk Could you pleas help where to configure this script ?, Not sure how to configure this to CI level :) , I tried using a pre-commit hook, but it's encountering dependency issues. I've moved the script to a in_container to resolve these dependencies. or could you please direct me where to place this?"", 'created_at': datetime.datetime(2024, 9, 14, 0, 55, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2350753630, 'issue_id': 2525896109, 'author': 'gopidesupavan', 'body': 'cc: @o-nikolas', 'created_at': datetime.datetime(2024, 9, 14, 0, 58, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2351013940, 'issue_id': 2525896109, 'author': 'gopidesupavan', 'body': 'Have another question at present it reads the providers yaml files and validates all the template fields from operators/sensors, is it good idea to check all the providers everytime part of pre-commit ? or only providers changed part of that commit? Please suggest, what would be the best approach?', 'created_at': datetime.datetime(2024, 9, 14, 14, 36, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2351092456, 'issue_id': 2525896109, 'author': 'gopidesupavan', 'body': 'Am able to figure-out how to configure in pre-commit script with existing references, thank you really easy to refer and workout 😄', 'created_at': datetime.datetime(2024, 9, 14, 18, 23, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2353642113, 'issue_id': 2525896109, 'author': 'gopidesupavan', 'body': '> I assume you manually tested this an it\'s all working as expected?\r\n\r\nYes , sorry i would have posted some screenshots :) \r\n\r\n<img width=""1249"" alt=""image"" src=""https://github.com/user-attachments/assets/a2f09ad4-845e-4cb7-9960-655aeb67f29e"">\r\n\r\nError field operators:\r\n\r\n<img width=""790"" alt=""image"" src=""https://github.com/user-attachments/assets/3805fa03-469e-4f3b-961d-108a966ec9f2"">\r\n\r\n<img width=""872"" alt=""image"" src=""https://github.com/user-attachments/assets/5f2011d8-3a4e-42d2-83fa-82bebc3567c8"">\r\n\r\n<img width=""985"" alt=""image"" src=""https://github.com/user-attachments/assets/f812a6c5-f24f-4b46-8cd7-701248c504c3"">\r\n\r\n\r\nI hope the error message details is fine?', 'created_at': datetime.datetime(2024, 9, 16, 18, 36, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2356560020, 'issue_id': 2525896109, 'author': 'gopidesupavan', 'body': ""> 😍\r\n> \r\n> Other than Niko's suggestion for moving some duplicate code, and the need to rebase, I love it. Thanks for taking care of this!\r\n> \r\n> I saw you tagged Jarek with a question; he's going to be away for a couple weeks.\r\n\r\nThank you 😄 , sorry i didnt know Jarek away, have resolved it looking at some references in pre-commit config :)."", 'created_at': datetime.datetime(2024, 9, 17, 17, 53, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2356624059, 'issue_id': 2525896109, 'author': 'gopidesupavan', 'body': 'Can i get some help please? tests are failing , not sure exactly is it due to any intermittent issues in pipeline.', 'created_at': datetime.datetime(2024, 9, 17, 18, 29, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2356632765, 'issue_id': 2525896109, 'author': 'gopidesupavan', 'body': 'Sorry i messed up something while rebasing', 'created_at': datetime.datetime(2024, 9, 17, 18, 34, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2356975012, 'issue_id': 2525896109, 'author': 'gopidesupavan', 'body': 'Is it okay if i create new clean PR with referencing this one, due to some issues while doing rebase all the previous merged commits again showing in changes 😞 .', 'created_at': datetime.datetime(2024, 9, 17, 21, 33, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2356976101, 'issue_id': 2525896109, 'author': 'dstandish', 'body': '> Is it okay if i create new clean PR with referencing this one, due to some issues while doing rebase all the previous merged commits again showing in changes 😞 .\r\n\r\ngo for it', 'created_at': datetime.datetime(2024, 9, 17, 21, 34, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2357013737, 'issue_id': 2525896109, 'author': 'gopidesupavan', 'body': '> > Is it okay if i create new clean PR with referencing this one, due to some issues while doing rebase all the previous merged commits again showing in changes 😞 .\r\n> \r\n> go for it\r\n\r\nThank you. created new pr.', 'created_at': datetime.datetime(2024, 9, 17, 22, 2, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2358573442, 'issue_id': 2525896109, 'author': 'vincbeck', 'body': 'Close in favor of #42284', 'created_at': datetime.datetime(2024, 9, 18, 14, 7, 37, tzinfo=datetime.timezone.utc)}]","gopidesupavan (Issue Creator) on (2024-09-14 00:46:52 UTC): cc: @ferruzzi 

A recent update to the #41848 template field caused a system test failure. To prevent similar issues, I started adding tests to verify all template fields. As suggested by ferruzzi in the discussion https://github.com/apache/airflow/pull/42183#issuecomment-2347025162, implementing a CI check would be a valuable addition to this process, so tried use ast and import modules approach. 

I am happy to take some suggestion and any alternatives :).

gopidesupavan (Issue Creator) on (2024-09-14 00:55:27 UTC): @potiuk Could you pleas help where to configure this script ?, Not sure how to configure this to CI level :) , I tried using a pre-commit hook, but it's encountering dependency issues. I've moved the script to a in_container to resolve these dependencies. or could you please direct me where to place this?

gopidesupavan (Issue Creator) on (2024-09-14 00:58:13 UTC): cc: @o-nikolas

gopidesupavan (Issue Creator) on (2024-09-14 14:36:02 UTC): Have another question at present it reads the providers yaml files and validates all the template fields from operators/sensors, is it good idea to check all the providers everytime part of pre-commit ? or only providers changed part of that commit? Please suggest, what would be the best approach?

gopidesupavan (Issue Creator) on (2024-09-14 18:23:47 UTC): Am able to figure-out how to configure in pre-commit script with existing references, thank you really easy to refer and workout 😄

gopidesupavan (Issue Creator) on (2024-09-16 18:36:52 UTC): Yes , sorry i would have posted some screenshots :) 

<img width=""1249"" alt=""image"" src=""https://github.com/user-attachments/assets/a2f09ad4-845e-4cb7-9960-655aeb67f29e"">

Error field operators:

<img width=""790"" alt=""image"" src=""https://github.com/user-attachments/assets/3805fa03-469e-4f3b-961d-108a966ec9f2"">

<img width=""872"" alt=""image"" src=""https://github.com/user-attachments/assets/5f2011d8-3a4e-42d2-83fa-82bebc3567c8"">

<img width=""985"" alt=""image"" src=""https://github.com/user-attachments/assets/f812a6c5-f24f-4b46-8cd7-701248c504c3"">


I hope the error message details is fine?

gopidesupavan (Issue Creator) on (2024-09-17 17:53:26 UTC): Thank you 😄 , sorry i didnt know Jarek away, have resolved it looking at some references in pre-commit config :).

gopidesupavan (Issue Creator) on (2024-09-17 18:29:45 UTC): Can i get some help please? tests are failing , not sure exactly is it due to any intermittent issues in pipeline.

gopidesupavan (Issue Creator) on (2024-09-17 18:34:58 UTC): Sorry i messed up something while rebasing

gopidesupavan (Issue Creator) on (2024-09-17 21:33:17 UTC): Is it okay if i create new clean PR with referencing this one, due to some issues while doing rebase all the previous merged commits again showing in changes 😞 .

dstandish on (2024-09-17 21:34:05 UTC): go for it

gopidesupavan (Issue Creator) on (2024-09-17 22:02:42 UTC): Thank you. created new pr.

vincbeck on (2024-09-18 14:07:37 UTC): Close in favor of #42284

"
2525446146,pull_request,closed,,Sync v2-10-stable with v2-10-test(sync_v2_10_test) to release 2.10.2,Time for ``2.10.2rc1``!,ephraimbuddy,2024-09-13 18:41:56+00:00,[],2024-09-17 17:39:00+00:00,2024-09-17 17:18:30+00:00,https://github.com/apache/airflow/pull/42229,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:webserver', 'Webserver related Issues'), ('area:CLI', ''), ('area:dev-tools', ''), ('area:API', ""Airflow's REST/HTTP API""), ('kind:documentation', ''), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2525437434,pull_request,closed,,ECS Exec: Drop params that aren't compatible with EC2,"If using the ECS executor with the EC2 launch type, then platform_version and assign_public_ip are not applicable and cause the Boto call to fail.

fixes #41824 

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",o-nikolas,2024-09-13 18:35:51+00:00,[],2024-09-16 15:40:47+00:00,2024-09-16 05:56:17+00:00,https://github.com/apache/airflow/pull/42228,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]",[],
2525411933,pull_request,closed,,Fix MyPy Checks introduced by newer version of InfluxDB,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-13 18:20:13+00:00,[],2024-09-13 18:21:50+00:00,2024-09-13 18:21:50+00:00,https://github.com/apache/airflow/pull/42227,"[('area:providers', ''), ('provider:influxdb', '')]",[],
2525366447,pull_request,closed,,update requires,"cherry-pick:
https://github.com/apache/airflow/pull/42221
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-09-13 17:53:47+00:00,[],2024-10-23 09:30:44+00:00,2024-09-13 18:20:17+00:00,https://github.com/apache/airflow/pull/42223,"[('type:misc/internal', 'Changelog: Misc changes that should appear in change log')]",[],
2525339664,pull_request,closed,,Switch UI codegen to fastAPI spec,"Switch new UI to use fastAPI


---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-09-13 17:34:39+00:00,[],2024-09-20 09:23:58+00:00,2024-09-20 09:23:56+00:00,https://github.com/apache/airflow/pull/42222,"[('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('AIP-84', 'Modern Rest API')]",[],
2525310844,pull_request,closed,,update requires,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",romsharon98,2024-09-13 17:15:34+00:00,[],2024-10-23 09:30:35+00:00,2024-09-13 17:33:10+00:00,https://github.com/apache/airflow/pull/42221,"[('type:misc/internal', 'Changelog: Misc changes that should appear in change log')]","[{'comment_id': 2349588328, 'issue_id': 2525310844, 'author': 'eladkal', 'body': 'merging.\r\nthe failing static check for influxdb is not related (will be fixed separately in another PR)', 'created_at': datetime.datetime(2024, 9, 13, 17, 33, 1, tzinfo=datetime.timezone.utc)}]","eladkal on (2024-09-13 17:33:01 UTC): merging.
the failing static check for influxdb is not related (will be fixed separately in another PR)

"
2525263459,pull_request,closed,,"Revert ""Fix: DAGs are not marked as stale if the dags folder change"" (41433) (#41829) (#41893) 41829","Reverts commits 07af14ae75820a98b60ecffa2949ef7ad70bacab and 5e962ed7d3b8ffe360fef75edea581c65ebe0898. 

Already reverted in the main branch",ephraimbuddy,2024-09-13 16:49:37+00:00,[],2024-09-13 17:42:24+00:00,2024-09-13 17:20:24+00:00,https://github.com/apache/airflow/pull/42220,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2525018724,pull_request,closed,,Stabilize the order of tasks during serialization,"SerializedDagModel().dag_hash may change if the order of tasks is not fixed

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",millin,2024-09-13 14:44:55+00:00,[],2024-10-02 12:58:55+00:00,2024-10-02 00:44:04+00:00,https://github.com/apache/airflow/pull/42219,"[('area:serialization', '')]","[{'comment_id': 2351254518, 'issue_id': 2525018724, 'author': 'romsharon98', 'body': 'Does this change affect the UI?\r\nfor example if I have a few tasks in the same ""hierarchy"" this will change the order of them in the UI?', 'created_at': datetime.datetime(2024, 9, 15, 0, 44, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2352666023, 'issue_id': 2525018724, 'author': 'millin', 'body': '> Does this change affect the UI? for example if I have a few tasks in the same ""hierarchy"" this will change the order of them in the UI?\r\n\r\nNo, I checked Grid and Graph and it doesn\'t seem to affect them', 'created_at': datetime.datetime(2024, 9, 16, 11, 33, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2388580775, 'issue_id': 2525018724, 'author': 'dstandish', 'body': 'Hi I reverted this in https://github.com/apache/airflow/pull/42646 because it seems it broke some tests.\r\n\r\ne.g. tests/api_connexion/endpoints/test_task_instance_endpoint.py', 'created_at': datetime.datetime(2024, 10, 2, 12, 56, 55, tzinfo=datetime.timezone.utc)}]","romsharon98 on (2024-09-15 00:44:10 UTC): Does this change affect the UI?
for example if I have a few tasks in the same ""hierarchy"" this will change the order of them in the UI?

millin (Issue Creator) on (2024-09-16 11:33:12 UTC): No, I checked Grid and Graph and it doesn't seem to affect them

dstandish on (2024-10-02 12:56:55 UTC): Hi I reverted this in https://github.com/apache/airflow/pull/42646 because it seems it broke some tests.

e.g. tests/api_connexion/endpoints/test_task_instance_endpoint.py

"
2524987115,pull_request,closed,,Support session reuse in RedshiftDataOperator,"Recently, AWS [added](https://aws.amazon.com/about-aws/whats-new/2024/09/session-reuse-amazon-redshift-data-api/) [session reuse](https://docs.aws.amazon.com/redshift/latest/mgmt/data-api.html#data-api-calling-considerations-session-reuse) to the Redshift Data API. It allows to, say, create a temporary table in one statement, and select from it in a subsequent one.
I think it would be useful that `RedshiftDataOperator` supports this new feature.

# Decisions
- the hook and operator's `database` arguments now optional because when the session ID is provided, boto3 doesn't allow database to be specified. Because this becomes a named argument, I had to move it after `sql`. If users of the operator and hook rely on the position to pass the argument that could break things ⚠️ . Note that [boto3 only requires Sql](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/redshift-data/client/execute_statement.html).
- the hook now returns an object containing the statement ID and session ID instead of just a statement ID. I choose a `dataclass` instead of a dict to make it harder to make a mistake when indexing the keys. If users use the hook in their tasks or custom operators, this could also break things ⚠️ 
- fixed the typo in the `parse_statement_resposne` method. It's a public one. So, again, there is a risk of breaking change. ⚠️ 
- boto3's validation error messages are not very useful when the session ID is a non-UUID string, or if no database, workgroup or session ID was provided, so I added checks in the hook.

# To do
- [x] update docs
- [x] update changelog
- [x] update and run examples
  - [x] example_redshift.py
  - [x] example_redshift_s3_transfers.py

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",borismo,2024-09-13 14:29:50+00:00,[],2024-09-24 18:24:44+00:00,2024-09-24 18:22:54+00:00,https://github.com/apache/airflow/pull/42218,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]","[{'comment_id': 2359320645, 'issue_id': 2524987115, 'author': 'vincbeck', 'body': '@borismo Just checking in, are you working on this one?', 'created_at': datetime.datetime(2024, 9, 18, 20, 12, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2365365180, 'issue_id': 2524987115, 'author': 'borismo', 'body': ""@vincbeck , yes, but on my free time. I'll try to make some progress soon."", 'created_at': datetime.datetime(2024, 9, 21, 23, 55, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2366843351, 'issue_id': 2524987115, 'author': 'borismo', 'body': 'The `Compat 2.` checks fail if the test expects `execution_date=None` to be pushed to the Xcom.\r\n`Non-DB::3.8` and `All:LowestDeps-Postgres:12:3.8` fail when I add it.\r\nDoes anyone know how to solve this?', 'created_at': datetime.datetime(2024, 9, 22, 15, 39, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2368454692, 'issue_id': 2524987115, 'author': 'vincbeck', 'body': ""> The `Compat 2.` checks fail if the test expects `execution_date=None` to be pushed to the Xcom. `Non-DB::3.8` and `All:LowestDeps-Postgres:12:3.8` fail when I add it. Does anyone know how to solve this?\r\n\r\nInteresting, I'd like to see the error from compat tests. Could you solve the non-db tests please?"", 'created_at': datetime.datetime(2024, 9, 23, 14, 27, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2369986364, 'issue_id': 2524987115, 'author': 'borismo', 'body': '> Could you solve the non-db tests please?\r\n\r\nSure, done in https://github.com/apache/airflow/pull/42218/commits/87da7b95cef97998887c1f57fc230ff2fc930e5d', 'created_at': datetime.datetime(2024, 9, 24, 2, 30, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2371998988, 'issue_id': 2524987115, 'author': 'vincbeck', 'body': 'That worked :) Merging it now', 'created_at': datetime.datetime(2024, 9, 24, 18, 22, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2372003057, 'issue_id': 2524987115, 'author': 'vincbeck', 'body': '@eladkal This is a breaking change in Amazon provider package. So you know, the next release should be a major version bump. AWS team will take advantage of this to remove deprecated stuff from Amazon provider package', 'created_at': datetime.datetime(2024, 9, 24, 18, 24, 43, tzinfo=datetime.timezone.utc)}]","vincbeck on (2024-09-18 20:12:14 UTC): @borismo Just checking in, are you working on this one?

borismo (Issue Creator) on (2024-09-21 23:55:59 UTC): @vincbeck , yes, but on my free time. I'll try to make some progress soon.

borismo (Issue Creator) on (2024-09-22 15:39:44 UTC): The `Compat 2.` checks fail if the test expects `execution_date=None` to be pushed to the Xcom.
`Non-DB::3.8` and `All:LowestDeps-Postgres:12:3.8` fail when I add it.
Does anyone know how to solve this?

vincbeck on (2024-09-23 14:27:53 UTC): Interesting, I'd like to see the error from compat tests. Could you solve the non-db tests please?

borismo (Issue Creator) on (2024-09-24 02:30:10 UTC): Sure, done in https://github.com/apache/airflow/pull/42218/commits/87da7b95cef97998887c1f57fc230ff2fc930e5d

vincbeck on (2024-09-24 18:22:31 UTC): That worked :) Merging it now

vincbeck on (2024-09-24 18:24:43 UTC): @eladkal This is a breaking change in Amazon provider package. So you know, the next release should be a major version bump. AWS team will take advantage of this to remove deprecated stuff from Amazon provider package

"
2524952018,pull_request,closed,,"Revert ""Handle Example dags case when checking for missing files (#41856) (#41874)""","This reverts commit 5e962ed7d3b8ffe360fef75edea581c65ebe0898.

Already reverted in the main branch.",ephraimbuddy,2024-09-13 14:12:49+00:00,[],2024-09-13 17:42:13+00:00,2024-09-13 16:31:35+00:00,https://github.com/apache/airflow/pull/42217,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2524950683,pull_request,closed,,Update api endpoint documentation,"Based on https://github.com/apache/airflow/pull/42198

Only the last commit is relevant. ",pierrejeambrun,2024-09-13 14:12:10+00:00,['pierrejeambrun'],2024-09-16 15:22:25+00:00,2024-09-16 15:22:23+00:00,https://github.com/apache/airflow/pull/42216,"[('area:webserver', 'Webserver related Issues'), ('area:dev-tools', ''), ('area:API', ""Airflow's REST/HTTP API""), ('kind:documentation', ''), ('AIP-84', 'Modern Rest API')]",[],
2524358683,pull_request,closed,,fix: only treat null/undefined as falsy when rendering XComEntry (#42…,(cherry picked from commit https://github.com/apache/airflow/commit/ade9de12defdd2727d3308c7e34b28ba4f68d18f),pierrejeambrun,2024-09-13 09:31:07+00:00,[],2024-09-13 15:04:01+00:00,2024-09-13 14:49:56+00:00,https://github.com/apache/airflow/pull/42213,"[('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2524133551,pull_request,closed,,Added infoworks.io in INTOTHEWILD.md,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",pavansharma36,2024-09-13 07:52:32+00:00,[],2024-09-13 17:38:45+00:00,2024-09-13 17:38:37+00:00,https://github.com/apache/airflow/pull/42212,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2524110442,pull_request,closed,,Fix require_confirmation_dag_change (#42063),(cherry picked from commit https://github.com/apache/airflow/commit/9a1f9e90a5fd8fc1a0736d9d23dccefeb8614f39),pierrejeambrun,2024-09-13 07:41:40+00:00,[],2024-09-13 17:42:00+00:00,2024-09-13 16:04:54+00:00,https://github.com/apache/airflow/pull/42211,"[('area:webserver', 'Webserver related Issues'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2523973999,pull_request,closed,,Add `Alibaba Cloud EMR Serverless Spark` support in airflow-alibaba-provider,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

### PR Descriptions
* This PR aims to add `Alibaba Cloud EMR Serverless Spark`[1] support in airflow-alibaba-provider. 
* This PR adds related operators, hooks, tests, example dags and docs in airflow-alibaba-provider.
* Alibaba Cloud EMR Serverless Spark provides open sdk / api with public documentations [2].

[1] https://www.alibabacloud.com/help/en/emr/emr-serverless-spark/product-overview/what-is-emr-serverless-spark
[2] https://www.alibabacloud.com/help/en/emr/emr-serverless-spark/developer-reference/use-python-sdk-to-start-a-spark-task?spm=a2c63.p38356.0.0.5e1b2b1f7CCzl5",EricGao888,2024-09-13 06:24:42+00:00,[],2024-11-03 00:16:46+00:00,2024-11-03 00:16:46+00:00,https://github.com/apache/airflow/pull/42209,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:providers', ''), ('area:system-tests', ''), ('kind:documentation', ''), ('provider:alibaba', '')]","[{'comment_id': 2442910552, 'issue_id': 2523973999, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 10, 29, 0, 15, 30, tzinfo=datetime.timezone.utc)}]","github-actions[bot] on (2024-10-29 00:15:30 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2523923825,pull_request,closed,,Add extra and renderedTemplates as keys to skip camelCasing (#42206),Backport of #42206 to 2.10,jscheffl,2024-09-13 05:44:42+00:00,[],2024-09-13 17:41:30+00:00,2024-09-13 07:46:11+00:00,https://github.com/apache/airflow/pull/42208,"[('area:webserver', 'Webserver related Issues'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2523548442,pull_request,closed,,Add extra and renderedTemplates as keys to skip camelCasing,"After we stopped camelCasing xcomEntry.value, I realized we had a few other spots we may want to also skip.

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-09-13 00:01:51+00:00,[],2024-09-13 01:27:26+00:00,2024-09-13 01:27:25+00:00,https://github.com/apache/airflow/pull/42206,"[('area:webserver', 'Webserver related Issues'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2523108998,pull_request,closed,,"Fix problem, skip tests if only not compatible providers are tested a…","Following the advise from @potiuk I was splitting my contributions with the new edge provider.

Unfortunately tests with back-compat provider tests fail because:
- Edge provider is not compatible for old airflow versions lower than 2.10
- Therefore the Edge provider is excluded
- The test list is filtered for all skipped packages
- In case a PR is made _only_ for edge provider, no positivle list to test is left-over
- Pytest in this cases attempts to test _ALL_ tests - which obviously fail as not being compliant to old airflow versions

With this PR Breeze skips backcompat tests if after filtering of skipped no provider is left to test",jscheffl,2024-09-12 18:47:39+00:00,[],2024-09-12 21:06:31+00:00,2024-09-12 21:06:31+00:00,https://github.com/apache/airflow/pull/42204,"[('area:dev-tools', '')]",[],
2522946228,pull_request,closed,,Add template fields tests to AWS operators (2),"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
Adding template field tests to remaining AWS operators.

Part1: #42183
 
<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-09-12 17:19:17+00:00,[],2024-11-02 13:06:09+00:00,2024-09-15 05:00:34+00:00,https://github.com/apache/airflow/pull/42202,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]","[{'comment_id': 2347194477, 'issue_id': 2522946228, 'author': 'gopidesupavan', 'body': '> [#42183 (comment)](https://github.com/apache/airflow/pull/42183#issuecomment-2347025162)\r\n> \r\n> Same comment from @ferruzzi applies here\r\n\r\nSure, make sense to me , am thinking one option, pre-commit hook script. Will check and get back.', 'created_at': datetime.datetime(2024, 9, 12, 20, 36, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2351012821, 'issue_id': 2522946228, 'author': 'gopidesupavan', 'body': 'Have created PR #42230 here, it validates all the template fields from providers sensors/operators.', 'created_at': datetime.datetime(2024, 9, 14, 14, 32, 39, tzinfo=datetime.timezone.utc)}]","gopidesupavan (Issue Creator) on (2024-09-12 20:36:34 UTC): Sure, make sense to me , am thinking one option, pre-commit hook script. Will check and get back.

gopidesupavan (Issue Creator) on (2024-09-14 14:32:39 UTC): Have created PR #42230 here, it validates all the template fields from providers sensors/operators.

"
2522594916,pull_request,closed,,Fix: render non-null falsy XCom entries correctly in UI,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

Fixed issues described in https://github.com/apache/airflow/issues/42096, which were introduced in https://github.com/apache/airflow/commit/563bc494ab5c610c46a60b2fe6beed742e3d588e

",detvdl,2024-09-12 14:40:36+00:00,[],2024-09-13 09:31:39+00:00,2024-09-13 09:29:13+00:00,https://github.com/apache/airflow/pull/42199,"[('area:webserver', 'Webserver related Issues'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2346521254, 'issue_id': 2522594916, 'author': 'pierrejeambrun', 'body': ""Well funny enough I just left a comment [here](https://github.com/apache/airflow/pull/42152#discussion_r1756905594) on a very related null/undefined check.\r\n\r\nThis is a mistake that is common in our codebase when we do `!` and `!!` on falsy values unfortunately. We need to pay extra attention to that.\r\n\r\nAlso `NaN` is yet another case to handle (nullish coallescing will not handle that, we might need a common utility function).\r\n\r\nAlso do you mind explaining why we explicitely try to `isNaN` the value ? Coercion of isNaN is somewhat surprising, and I' m not sure what we are trying to actually check under the hood. Xcom values are bool, number, obj / null / undefined."", 'created_at': datetime.datetime(2024, 9, 12, 14, 50, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346624161, 'issue_id': 2522594916, 'author': 'detvdl', 'body': ""> Also do you mind explaining why we explicitely try to `isNaN` the value ? Coercion of isNaN is somewhat surprising, and I' m not sure what we are trying to actually check under the hood. Xcom values are bool, number, obj / null / undefined.\r\n\r\n`isNaN` returns True for both undefined or NaN so it was mostly a shortcut to check for both\r\n\r\nPerhaps more idiomatic would be to use the nullish coalescing here to more explicitly catch the first 2 cases (null and undefined) and explicitly call `isNan` on the right hand side?\r\n\r\n```js\r\nif (xcom.value ?? Number.isNaN(xcom.value))\r\n```\r\n\r\nFrom a quick peek at the code I figured both cases could be present exceptionally but I may be wrong, have only looked at the UI rendering for a few minutes.\r\n\r\nI pragmatically just tackled this specific issue as soon as I saw it, and got a PR out not to forget 🙂"", 'created_at': datetime.datetime(2024, 9, 12, 15, 34, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2348217633, 'issue_id': 2522594916, 'author': 'pierrejeambrun', 'body': ""```\r\nif (xcom.value ?? Number.isNaN(xcom.value))\r\n```\r\nIn that case if we have a value we will enter the loop.\r\n\r\nMaybe a simple:\r\n```\r\nxcom.value === undefined || xcom.value === null\r\n```\r\nWe can always add the `|| Number.isNaN(xcom.value` but I don't think we can actually have a `NaN` at this stage, but I'm not sure."", 'created_at': datetime.datetime(2024, 9, 13, 7, 22, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2348243693, 'issue_id': 2522594916, 'author': 'detvdl', 'body': ""> ```\r\n> if (xcom.value ?? Number.isNaN(xcom.value))\r\n> ```\r\n> \r\n> In that case if we have a value we will enter the loop.\r\n\r\nAh you're right, I hadn't stopped to think about that, good call!\r\n\r\n~~I don't know about the NaN either, let me spend a little more time checking if it can happen and I will come back to this~~\r\n\r\nAfter a quick peek, I can see that the XCom model value is serialized through `SQLAlchemySchema`'s `dump` method or similar, which should never produce any value that is then further parsed back to `NaN` in the jsonParse method shown in https://github.com/apache/airflow/commit/563bc494ab5c610c46a60b2fe6beed742e3d588e\r\n\r\nThere are ways to support NaN in those schemas for serialization (https://marshmallow.readthedocs.io/en/stable/upgrading.html#float-field-takes-a-new-allow-nan-parameter) but it's not the default, and nowhere in this codebase is it explicitly set (nor do I think Airflow uses a version of that dep which supports it)\r\n\r\nSo you're right @pierrejeambrun , just a plain `undefined` and `null` check should be fine and the most clear 🙂"", 'created_at': datetime.datetime(2024, 9, 13, 7, 36, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2348455633, 'issue_id': 2522594916, 'author': 'pierrejeambrun', 'body': 'Great, thanks for the investigation @detvdl', 'created_at': datetime.datetime(2024, 9, 13, 9, 17, 31, tzinfo=datetime.timezone.utc)}]","pierrejeambrun on (2024-09-12 14:50:58 UTC): Well funny enough I just left a comment [here](https://github.com/apache/airflow/pull/42152#discussion_r1756905594) on a very related null/undefined check.

This is a mistake that is common in our codebase when we do `!` and `!!` on falsy values unfortunately. We need to pay extra attention to that.

Also `NaN` is yet another case to handle (nullish coallescing will not handle that, we might need a common utility function).

Also do you mind explaining why we explicitely try to `isNaN` the value ? Coercion of isNaN is somewhat surprising, and I' m not sure what we are trying to actually check under the hood. Xcom values are bool, number, obj / null / undefined.

detvdl (Issue Creator) on (2024-09-12 15:34:02 UTC): `isNaN` returns True for both undefined or NaN so it was mostly a shortcut to check for both

Perhaps more idiomatic would be to use the nullish coalescing here to more explicitly catch the first 2 cases (null and undefined) and explicitly call `isNan` on the right hand side?

```js
if (xcom.value ?? Number.isNaN(xcom.value))
```

From a quick peek at the code I figured both cases could be present exceptionally but I may be wrong, have only looked at the UI rendering for a few minutes.

I pragmatically just tackled this specific issue as soon as I saw it, and got a PR out not to forget 🙂

pierrejeambrun on (2024-09-13 07:22:45 UTC): ```
if (xcom.value ?? Number.isNaN(xcom.value))
```
In that case if we have a value we will enter the loop.

Maybe a simple:
```
xcom.value === undefined || xcom.value === null
```
We can always add the `|| Number.isNaN(xcom.value` but I don't think we can actually have a `NaN` at this stage, but I'm not sure.

detvdl (Issue Creator) on (2024-09-13 07:36:20 UTC): Ah you're right, I hadn't stopped to think about that, good call!

~~I don't know about the NaN either, let me spend a little more time checking if it can happen and I will come back to this~~

After a quick peek, I can see that the XCom model value is serialized through `SQLAlchemySchema`'s `dump` method or similar, which should never produce any value that is then further parsed back to `NaN` in the jsonParse method shown in https://github.com/apache/airflow/commit/563bc494ab5c610c46a60b2fe6beed742e3d588e

There are ways to support NaN in those schemas for serialization (https://marshmallow.readthedocs.io/en/stable/upgrading.html#float-field-takes-a-new-allow-nan-parameter) but it's not the default, and nowhere in this codebase is it explicitly set (nor do I think Airflow uses a version of that dep which supports it)

So you're right @pierrejeambrun , just a plain `undefined` and `null` check should be fine and the most clear 🙂

pierrejeambrun on (2024-09-13 09:17:31 UTC): Great, thanks for the investigation @detvdl

"
2522593291,pull_request,closed,,Add fastapi migration done marker,"Follow up of: https://github.com/apache/airflow/pull/42196

You can just review the last commit. This is short one that add a no-op decorator to be able to mark endpoint as migrated over to the new FastAPI API.

The goal with this is to keep track of what is left to migrate and what is already migrated. There are a lot of endpoints and this will prevent maintainers from searching over the code base to get that information. The advantage of a decorator over docstring or comment is that it's code. (searchable by references, consistent in style, etc...).

Kind ask to contributors and reviewers of PR related to `AIP-84` please enforce the usage of this marker on PRs migrating endpoints :).
",pierrejeambrun,2024-09-12 14:39:57+00:00,['pierrejeambrun'],2024-09-16 12:48:03+00:00,2024-09-16 12:48:00+00:00,https://github.com/apache/airflow/pull/42198,"[('area:webserver', 'Webserver related Issues'), ('area:API', ""Airflow's REST/HTTP API""), ('AIP-84', 'Modern Rest API')]",[],
2522448178,pull_request,closed,,"Revert ""Fix: DAGs are not marked as stale if the dags folder change","Revert PR - #41433

This reverts commit 9f30a41874454696ae2b215b2d86cb9a62968006.
",utkarsharma2,2024-09-12 13:44:45+00:00,[],2024-09-12 18:48:37+00:00,2024-09-12 18:48:35+00:00,https://github.com/apache/airflow/pull/42197,"[('area:Scheduler', 'including HA (high availability) scheduler')]",[],
2522302938,pull_request,closed,,Migrate public get dags to fastapi,"Related to: https://github.com/apache/airflow/issues/42159

This is the first step to get the endpoint we need. This add the `get_dags` endpoint in the public part of the fastapi API. This is iso functional in terms of feature as to what we have on the current public api. Only difference is that permissions are not yet handled we would need https://github.com/apache/airflow/pull/42019.

Also I removed for now the `field` param allowing for partial response of only subfields. This is a bit harder to handle and changes dynamically the response model of the endpoint. Also this does not improve much because the full object is already loaded by the ORM, we just save some serialization and response size. (endpoint is paginated anyway). We can work on that if we need it.

A follow up PR will come to add new features to that endpoint as requested in the related issue to fulfill UI requirements.",pierrejeambrun,2024-09-12 12:46:46+00:00,['pierrejeambrun'],2024-10-02 20:36:41+00:00,2024-09-13 15:04:43+00:00,https://github.com/apache/airflow/pull/42196,"[('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes'), ('AIP-84', 'Modern Rest API')]","[{'comment_id': 2346330700, 'issue_id': 2522302938, 'author': 'bugraoz93', 'body': 'I like using the `Annotated` for receiving `session` as a parameter. Thanks for including the generic way of using the `session`!', 'created_at': datetime.datetime(2024, 9, 12, 13, 44, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346997176, 'issue_id': 2522302938, 'author': 'bbovenzi', 'body': ""Looks like Test OpenAPI client CI is trying to fetch endpoints that we haven't built yet?"", 'created_at': datetime.datetime(2024, 9, 12, 18, 43, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2347010576, 'issue_id': 2522302938, 'author': 'ephraimbuddy', 'body': ""> Looks like Test OpenAPI client CI is trying to fetch endpoints that we haven't built yet?\r\n\r\nRebasing will fix that. We did a revert that caused that. I just merged the final revert."", 'created_at': datetime.datetime(2024, 9, 12, 18, 49, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2348939489, 'issue_id': 2522302938, 'author': 'pierrejeambrun', 'body': 'CI should be green now, it took some time but there was issues with `lowest_dependency` tests, because we need [this fix](https://github.com/pydantic/pydantic/pull/8209) from pydantic that is in `2.6.0`.', 'created_at': datetime.datetime(2024, 9, 13, 13, 15, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2349173068, 'issue_id': 2522302938, 'author': 'pierrejeambrun', 'body': 'Unrelated mypy failure on providers, merging', 'created_at': datetime.datetime(2024, 9, 13, 15, 4, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2378868084, 'issue_id': 2522302938, 'author': 'pierrejeambrun', 'body': ""Added the breaking label, because the `fields` query param is not supported anymore. (for now). That means that the user will get a 'full' payload, even if he specifies some `fields` to get only a partial response. Theoretically receiving 'more' than expected is not breaking but maybe they have 'hard validation' with 'unknown = RAISES' that can break client side. And also this is an important enough functional change so we might want to bring that to the users attention.\r\n\r\nMight remove later if we implement it."", 'created_at': datetime.datetime(2024, 9, 27, 9, 37, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2389584485, 'issue_id': 2522302938, 'author': 'rawwar', 'body': '~~@pierrejeambrun , sorry for commenting on a merged PR. But, I see that `schedule_interval` ([Link](https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html#operation/get_dags)) is missing from `DAGModelResponse`  . Is this intentional?~~\r\n\r\nI just realised I am looking at the wrong ERD.', 'created_at': datetime.datetime(2024, 10, 2, 20, 8, 40, tzinfo=datetime.timezone.utc)}]","bugraoz93 on (2024-09-12 13:44:41 UTC): I like using the `Annotated` for receiving `session` as a parameter. Thanks for including the generic way of using the `session`!

bbovenzi on (2024-09-12 18:43:30 UTC): Looks like Test OpenAPI client CI is trying to fetch endpoints that we haven't built yet?

ephraimbuddy on (2024-09-12 18:49:55 UTC): Rebasing will fix that. We did a revert that caused that. I just merged the final revert.

pierrejeambrun (Issue Creator) on (2024-09-13 13:15:14 UTC): CI should be green now, it took some time but there was issues with `lowest_dependency` tests, because we need [this fix](https://github.com/pydantic/pydantic/pull/8209) from pydantic that is in `2.6.0`.

pierrejeambrun (Issue Creator) on (2024-09-13 15:04:31 UTC): Unrelated mypy failure on providers, merging

pierrejeambrun (Issue Creator) on (2024-09-27 09:37:09 UTC): Added the breaking label, because the `fields` query param is not supported anymore. (for now). That means that the user will get a 'full' payload, even if he specifies some `fields` to get only a partial response. Theoretically receiving 'more' than expected is not breaking but maybe they have 'hard validation' with 'unknown = RAISES' that can break client side. And also this is an important enough functional change so we might want to bring that to the users attention.

Might remove later if we implement it.

rawwar on (2024-10-02 20:08:40 UTC): ~~@pierrejeambrun , sorry for commenting on a merged PR. But, I see that `schedule_interval` ([Link](https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html#operation/get_dags)) is missing from `DAGModelResponse`  . Is this intentional?~~

I just realised I am looking at the wrong ERD.

"
2522118760,pull_request,closed,,"Revert ""Handle Example dags case when checking for missing files""",Reverts apache/airflow#41856,utkarsharma2,2024-09-12 11:23:07+00:00,[],2024-09-27 17:47:19+00:00,2024-09-12 13:33:24+00:00,https://github.com/apache/airflow/pull/42193,"[('area:Scheduler', 'including HA (high availability) scheduler')]",[],
2521081082,pull_request,closed,,Add Jens Scheffler for UI as contributor,"I'd like to volunteer (more) to UI work if possible and to be ""up-to-date"" I'd like to see the PRs currently made for Airflow 3. Therefore I'd like to ""join forces"".

Also adding myself as maintainer for the (new) edge provider",jscheffl,2024-09-12 00:51:39+00:00,[],2024-09-12 07:57:12+00:00,2024-09-12 07:57:12+00:00,https://github.com/apache/airflow/pull/42190,"[('area:dev-tools', '')]","[{'comment_id': 2345529729, 'issue_id': 2521081082, 'author': 'pierrejeambrun', 'body': 'great to hear 🎉', 'created_at': datetime.datetime(2024, 9, 12, 7, 56, 47, tzinfo=datetime.timezone.utc)}]","pierrejeambrun on (2024-09-12 07:56:47 UTC): great to hear 🎉

"
2521067294,pull_request,closed,,allow dataset alias to add more than one dataset events,"## Why
https://github.com/apache/airflow/issues/34206#issuecomment-2344108361

```python
@task(outlets=[DatasetAlias(""example-alias"")])
def produce_dataset_events(*, outlet_events):
    outlet_events[""example-alias""].add(Dataset(""dbt-cloud-table-1""))
    outlet_events[""example-alias""].add(Dataset(""dbt-cloud-table-2""))
```

could be confusing if only the second one create a dataset event

## What
Save all the datasets when `add` is invoked. 


<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-09-12 00:35:07+00:00,[],2024-09-17 11:00:39+00:00,2024-09-16 09:44:22+00:00,https://github.com/apache/airflow/pull/42189,"[('area:serialization', ''), ('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2520987009,pull_request,closed,, do not camelcase xcom entries (#42182),Backport of #42182,jscheffl,2024-09-11 23:26:54+00:00,[],2024-09-13 17:40:59+00:00,2024-09-11 23:57:42+00:00,https://github.com/apache/airflow/pull/42187,"[('area:webserver', 'Webserver related Issues'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2520957809,pull_request,closed,,add metastore table to record cross dag dependencies based on xcom and variable,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",julial-lyft,2024-09-11 23:15:28+00:00,[],2024-09-11 23:15:59+00:00,2024-09-11 23:15:44+00:00,https://github.com/apache/airflow/pull/42186,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]","[{'comment_id': 2344906071, 'issue_id': 2520957809, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 23, 15, 33, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 23:15:33 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

"
2520934661,pull_request,closed,,Page routing in new UI,"Use `react-router-dom` to set up page routing.

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-09-11 22:53:44+00:00,[],2024-09-13 16:43:43+00:00,2024-09-13 16:43:41+00:00,https://github.com/apache/airflow/pull/42185,"[('area:webserver', 'Webserver related Issues'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2346696218, 'issue_id': 2520934661, 'author': 'bbovenzi', 'body': ""> Maybe that's also the right moment to introduice code splitting. (As usually this is done at the router level https://werkzeug.palletsprojects.com/en/3.0.x/routing/#custom-converters).\r\n> \r\n> We can do that in a follow up PR if we prefer, normally this works nicely\r\n\r\nYes, we should definitely set that up soon. Although, I want to make it work on the React end. Let's try to keep Flask and React as separate as possible."", 'created_at': datetime.datetime(2024, 9, 12, 16, 5, 8, tzinfo=datetime.timezone.utc)}]","bbovenzi (Issue Creator) on (2024-09-12 16:05:08 UTC): Yes, we should definitely set that up soon. Although, I want to make it work on the React end. Let's try to keep Flask and React as separate as possible.

"
2520926948,pull_request,closed,,UI ESLint,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Using [my open-source ESLint configuration](https://github.com/loucyx/lou.codes/tree/main/packages/%40lou.codes/configs/rules) as a base, and updating to adapt to the code in Airflow UI, I:

- Added a `rules` directory in `airflow/ui` with `.js` files tackling different parts of the UI (Core rules, TypeScript rules, prettier rules and so on).
- Updated the prettier configuration.
- Added a `.vscode` settings file to organize imports and apply fixes in each explicit save.
- Upgraded some dependencies and added a few more plugins.

Feel free to explore each file inside `rules`, each rule has some documentation on top explaining what it does, I curated each and every one of them manually.

The PR is separated in 2 commits, one only has the configuration changes mentioned above, the other is the changes that had to be made to make the linter happy.

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",loucyx,2024-09-11 22:48:38+00:00,[],2024-09-16 17:03:43+00:00,2024-09-16 16:51:02+00:00,https://github.com/apache/airflow/pull/42184,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2344835319, 'issue_id': 2520926948, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 22, 48, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344992395, 'issue_id': 2520926948, 'author': 'bbovenzi', 'body': 'Looks like a bunch of pre-commit hooks are failing: https://github.com/apache/airflow/blob/main/contributing-docs/03_contributors_quick_start.rst#configuring-pre-commit', 'created_at': datetime.datetime(2024, 9, 11, 23, 56, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2345500916, 'issue_id': 2520926948, 'author': 'pierrejeambrun', 'body': 'What would be the advantage of using those rules compared to the classic airbnb/airbnb-prettier eslint presets that most of the projects use ?\r\n\r\nThis adds some boilerplate code and rules to maintain and might not be consistent with what people are used to.', 'created_at': datetime.datetime(2024, 9, 12, 7, 41, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346400337, 'issue_id': 2520926948, 'author': 'loucyx', 'body': '@pierrejeambrun leaving maintenance difficulty aside for a second, there are a lot of reasons for this approach:\r\n\r\n1. `eslint-config-airbnb` has been last updated 3 years ago (before ESLint `8.6.0` and TypeScript `4.6` were released, and we are in ESLint `9.10.0` and TypeScript `5.6`), so we would have to use outdated versions of ESLint or unnecessary compatibility layers.\r\n2. Airbnb\'s configuration is designed with deprecated environments in mind, for example they avoid Symbols or iterators because they are ""hard to polyfill"" and it hasn\'t been necessary to polyfill them for years.\r\n3. They also have rules around code style when we have Prettier for that already.\r\n4. They check for some things which are better handled by the type system instead of the linter.\r\n5. They have rules for jQuery 😱\r\n6. Having our own rules lets us be very strict and opinionated, which is a good thing when you want to keep code quality high and spot issues before they even happen.\r\n7. Every rule is in our control, meaning we can disable them, remove them and more adapting to our coding practices instead of having to override an existing configuration.\r\n8. Recommended settings and defaults exposed by plugins have changed in the past, so for consistency is always better to set all the rules we want.\r\n\r\nI understand the concern about adding ""boilerplate"" code, but is not much more boilerplate than what we would need extending existing rules maintained by somebody else. The difference being we have more control and we can keep it up to date. I\'ve been maintaining my own rules for years and is not hard at all as a single person, so as an active open-source project should be even easier. \r\n\r\nIf this is still a concern after all the things I said, one other thing we can do is create a new repo exclusively with the rules on it, and we would just import them and use them here. Something like `eslint-config-apache` maybe? 🤔', 'created_at': datetime.datetime(2024, 9, 12, 14, 5, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346419986, 'issue_id': 2520926948, 'author': 'loucyx', 'body': '> Looks like a bunch of pre-commit hooks are failing: https://github.com/apache/airflow/blob/main/contributing-docs/03_contributors_quick_start.rst#configuring-pre-commit\r\n\r\n@bbovenzi it was a casing issue. I renamed some files from `camelCase` to `PascalCase` and git didn\'t recognized the rename, so it worked just fine in my local but they were ""missing"" once pushed.', 'created_at': datetime.datetime(2024, 9, 12, 14, 13, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346567312, 'issue_id': 2520926948, 'author': 'pierrejeambrun', 'body': ""Thanks for the explanation, that's a faire point about ESLint airbnb.\r\n\r\nWhat about other mainstream more modern eslint config such as https://github.com/xojs/xo or similar ?\r\n\r\nWhat I mean is there are plenty of great open source projects that are doing this and will most likely do it better than us. I don't think we have specific requirements for airflow in terms of rules and all this is very opinionated. I don't want to argue with the community about why we chose certain rules and why we did not, and how we integrate or not new rules.\r\n\r\nTaking an external set of rule that is standard in the industry seems easier to me."", 'created_at': datetime.datetime(2024, 9, 12, 15, 9, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346630818, 'issue_id': 2520926948, 'author': 'loucyx', 'body': '> What I mean is there are plenty of great open source projects that are doing this and will most likely do it better than us.\r\n\r\nI don\'t think I agree with this point, ""better"" would be really subjective. `xo` for example is a new script that we would have to run _instead_ of `eslint` which I would say is ""not great"", and you have to configure _it_ instead of ESLint, so we add another abstraction layer on top of ESLint. This line in their README is particularly ""scary"":\r\n\r\n> No decision-making. No `.eslintrc` to manage. It just works!\r\n\r\nAnother popular one is [StandardJS](https://standardjs.com/) which makes similar promises and has a similar approach, but the config is even worse (for example no semicolons 😨). This packages are generally doing what we are doing here, but with opinions from someone else. So as I said before instead of ""configuring"" the linter, we end up ""undoing"" some configs to adapt them to us, and we still have to add some plugins on top to make it stricter for TS for example, which is generally not linted with best practices (saying this from my experience coding in TS since 2012).\r\n\r\n> I don\'t think we have specific requirements for airflow in terms of rules and all this is very opinionated.\r\n\r\nBeing opinionated was the intention of the PR. On top of the regular ""avoid foot guns"" settings that every recommended configuration out there has, we have some to enforce readability, perf and type quality. This last one is the ""strictest"" of the bunch, and the one that might feel most different from other configurations, but will also make mistakes with types less common (forbidding `any`, avoiding `null`, forbidding `@ts-ignore` or `@ts-nocheck`, etc.). Popular settings generally try to adjust to non TypeScript developers, but being a TypeScript project is better to keep it strict.\r\n\r\n> I don\'t want to argue with the community about why we chose certain rules and why we did not, and how we integrate or not new rules.\r\n\r\nThe argument then could be: Why did you used `xo` instead of `standardjs` for example. The community will always want to argue about style decisions. A good OS contributor will use whatever style is standardized by the maintainers (every time I did OS contributions, I used the existing settings of the repo, even when almost everybody uses spaces instead of tabs). The difference being if you get a bunch of devs asking for a linting rule to change, is easy because you ""own"" the rules.\r\n\r\n> Taking an external set of rule that is standard in the industry seems easier to me.\r\n\r\nIt\'s always easier to use code written by somebody else, yes, but things like ""settings"" (which is what ESLint rules are at the end of the day) should be something the maintainers themselves figure out. One common approach is to have the settings that you want to use in all your projects in a repo that you use as a scaffold (like I did while working at VMWare), or in a published package that you always include as a dependency (like I did with my `@lou.codes/configs`).\r\n\r\nAll that being said, I\'m happy to close the PR and let somebody else take a hit at figuring out what packages to use if this approach is not fit to folks in Airflow. I was asked to help with ESLint configuration, and this is the way I would do it.', 'created_at': datetime.datetime(2024, 9, 12, 15, 37, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346654985, 'issue_id': 2520926948, 'author': 'loucyx', 'body': ""Oh one other option we have that I didn't mentioned, is to use something else entirely, like [`oxc`](https://oxc.rs/docs/guide/usage/linter.html) which is based on Rust making it **REALLY** fast, tho it has way less rules and plugins than ESLint."", 'created_at': datetime.datetime(2024, 9, 12, 15, 48, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346668397, 'issue_id': 2520926948, 'author': 'bbovenzi', 'body': '> Oh one other option we have that I didn\'t mentioned, is to use something else entirely, like [`oxc`](https://oxc.rs/docs/guide/usage/linter.html) which is based on Rust making it **REALLY** fast, tho it has way less rules and plugins than ESLint.\r\n\r\nIt says right in its ""Info"" that it isn\'t an eslint replacement. So it looks like we could add it if linting ever becomes burdensome on the CI, but I don\'t want to optimize too early either.\r\n\r\nI don\'t mind having our own eslint rules defined like in this PR, especially since they all come with descriptions.', 'created_at': datetime.datetime(2024, 9, 12, 15, 54, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346671712, 'issue_id': 2520926948, 'author': 'loucyx', 'body': '@bbovenzi I also prefer ESLint over `oxc`, but I think it was worth mentioning as yet another option we have.', 'created_at': datetime.datetime(2024, 9, 12, 15, 55, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2347342929, 'issue_id': 2520926948, 'author': 'pierrejeambrun', 'body': 'We can try our own rules and see where this leads us. We can always update them or change for another tool later if we see fit.', 'created_at': datetime.datetime(2024, 9, 12, 22, 21, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2347359424, 'issue_id': 2520926948, 'author': 'bbovenzi', 'body': 'I was just running this locally. It looks like we need to eslintignore the `/dist` directory. Otherwise, lgtm', 'created_at': datetime.datetime(2024, 9, 12, 22, 37, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2347601782, 'issue_id': 2520926948, 'author': 'loucyx', 'body': ""@bbovenzi that's so weird! The patterns are:\r\n\r\n- `{rules,src}/**/*.{j,t}s{x,}`: All `.js`, `.ts`, `.jsx` and `.tsx` in `rules` and `src`.\r\n- `/*.{j,t}s{x,}`: All `.js`, `.ts`, `.jsx` and `.tsx` in the root folder.\r\n\r\nEverything else should be ignored. Tomorrow I'll try to `build` and see what I run into."", 'created_at': datetime.datetime(2024, 9, 13, 0, 29, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2348382179, 'issue_id': 2520926948, 'author': 'pierrejeambrun', 'body': 'I have a warning stating that our version of typescript is not supported. Our package.json specifies `""typescript"": ""^5.6.2""` while the project actually supports `<5.6.0`:\r\n\r\n![Screenshot 2024-09-13 at 10 43 15](https://github.com/user-attachments/assets/f8e8f1e7-1d8f-44bd-a8dd-90b2c33213cb)', 'created_at': datetime.datetime(2024, 9, 13, 8, 43, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2348390945, 'issue_id': 2520926948, 'author': 'loucyx', 'body': '@pierrejeambrun yup, a common warning when using `@typescript-eslint`. Generally staying in the same major and minor version is safe (if it was from `5.4.0` to `5.6.0` it would be a whole different story), and `5.6.2` has features that enable really good things such as iterator helper methods, which will make our code way cleaner when dealing with iterators and generators.', 'created_at': datetime.datetime(2024, 9, 13, 8, 48, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2348423875, 'issue_id': 2520926948, 'author': 'pierrejeambrun', 'body': ""> @pierrejeambrun yup, a common warning when using @typescript-eslint. Generally staying in the same major and minor version is safe (if it was from 5.4.0 to 5.6.0 it would be a whole different story), and 5.6.2 has features that enable really good things such as iterator helper methods, which will make our code way cleaner when dealing with iterators and generators.\r\n\r\nThen we have to wait for `typescript-eslint` to support `5.6.0`, we can champion for https://github.com/typescript-eslint/typescript-eslint/issues/9653. I think it's a matter of days, a PR is already out.\r\n\r\nOr we can downgrade temporary typescript in the meantime to get this merged. But I am -1 on using a typescript version that is not supported by the linter."", 'created_at': datetime.datetime(2024, 9, 13, 9, 3, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2348437079, 'issue_id': 2520926948, 'author': 'loucyx', 'body': '@pierrejeambrun I\'ll revert for now, but in my experience it has never been a problem, that was always a ""warning"" and just that.', 'created_at': datetime.datetime(2024, 9, 13, 9, 9, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2349816748, 'issue_id': 2520926948, 'author': 'loucyx', 'body': ""@bbovenzi FYI: I renamed `main.tsx` back to be all lower case, because it isn't a component and all references to that file were still in lowercase."", 'created_at': datetime.datetime(2024, 9, 13, 18, 31, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2349897449, 'issue_id': 2520926948, 'author': 'loucyx', 'body': '@bbovenzi I also fixed the linting of `dist`, now it only lints what it has to lint 😄', 'created_at': datetime.datetime(2024, 9, 13, 18, 52, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2351009273, 'issue_id': 2520926948, 'author': 'pierrejeambrun', 'body': 'Thanks a lot for addressing the comments, the PR is looking good. We have one gitignore left with the ‘.vscode’ removal.\r\n\r\nI’ll be able to try this locally on Monday (I’m on my phone atm), just to confirm that the errors I had previously are gone :)', 'created_at': datetime.datetime(2024, 9, 14, 14, 21, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2352444858, 'issue_id': 2520926948, 'author': 'pierrejeambrun', 'body': ""On my end if I do:\r\n```shell\r\nrm -rf node_modules/\r\npnpm install\r\npnpm lint\r\n```\r\n\r\nMust be something on my local conf i guess.\r\n\r\nLike it keeps trying to run on `dist` but it is excluded from the config 🤔. Is that something that you manage to reproduce ?\r\n![Screenshot 2024-09-16 at 11 41 22](https://github.com/user-attachments/assets/438e5c88-c888-4aab-9a1f-ce34beb8c71f)\r\n\r\n\r\npre-commit hook is also throwing that same error:\r\n`pre-commit run ts-compile-format-lint-ui --all-files`\r\n\r\nWeird even the CI command fails locally:\r\n```\r\nbreeze static-checks --all-files --show-diff-on-failure --color always --initialize-environment\r\n```\r\n\r\nI'll clean containers rebuild images and try again."", 'created_at': datetime.datetime(2024, 9, 16, 9, 42, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2352988462, 'issue_id': 2520926948, 'author': 'pierrejeambrun', 'body': 'Main was just fixed [here](https://github.com/apache/airflow/pull/42246), rebasing should solve the CI problem.', 'created_at': datetime.datetime(2024, 9, 16, 13, 51, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2353032946, 'issue_id': 2520926948, 'author': 'loucyx', 'body': ""@pierrejeambrun just in case I pushed a commit making the dist ignoring global, should make it so it doesn't run in the dist directory at all ^_^"", 'created_at': datetime.datetime(2024, 9, 16, 14, 8, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2353310728, 'issue_id': 2520926948, 'author': 'pierrejeambrun', 'body': ""Looking good, working locally. We still have one `.vscode` in gitignore removed that shouldn't, I think we can merge once we revert that small diff :)"", 'created_at': datetime.datetime(2024, 9, 16, 15, 56, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2353326243, 'issue_id': 2520926948, 'author': 'loucyx', 'body': '@pierrejeambrun there were 3 aperances of `.vscode` in `.gitignore`, the only one that remains removed is redundant:\r\n\r\n```\r\n.vscode/* # Everything in the `.vscode` folder (the folder will not be committed)\r\n!.vscode/extensions.json # Exclude `extensions.json`\r\n.vscode # Redundant ignore of `.vscode` folder\r\n```\r\n\r\nI just kept the last one removed, I can add it back, but the effect is the same afaik.', 'created_at': datetime.datetime(2024, 9, 16, 16, 1, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2353345921, 'issue_id': 2520926948, 'author': 'pierrejeambrun', 'body': 'Oh yes indeed, thanks for removing that useless ignore.', 'created_at': datetime.datetime(2024, 9, 16, 16, 9, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2353431905, 'issue_id': 2520926948, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 16, 16, 51, 4, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 22:48:42 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

bbovenzi on (2024-09-11 23:56:33 UTC): Looks like a bunch of pre-commit hooks are failing: https://github.com/apache/airflow/blob/main/contributing-docs/03_contributors_quick_start.rst#configuring-pre-commit

pierrejeambrun on (2024-09-12 07:41:58 UTC): What would be the advantage of using those rules compared to the classic airbnb/airbnb-prettier eslint presets that most of the projects use ?

This adds some boilerplate code and rules to maintain and might not be consistent with what people are used to.

loucyx (Issue Creator) on (2024-09-12 14:05:29 UTC): @pierrejeambrun leaving maintenance difficulty aside for a second, there are a lot of reasons for this approach:

1. `eslint-config-airbnb` has been last updated 3 years ago (before ESLint `8.6.0` and TypeScript `4.6` were released, and we are in ESLint `9.10.0` and TypeScript `5.6`), so we would have to use outdated versions of ESLint or unnecessary compatibility layers.
2. Airbnb's configuration is designed with deprecated environments in mind, for example they avoid Symbols or iterators because they are ""hard to polyfill"" and it hasn't been necessary to polyfill them for years.
3. They also have rules around code style when we have Prettier for that already.
4. They check for some things which are better handled by the type system instead of the linter.
5. They have rules for jQuery 😱
6. Having our own rules lets us be very strict and opinionated, which is a good thing when you want to keep code quality high and spot issues before they even happen.
7. Every rule is in our control, meaning we can disable them, remove them and more adapting to our coding practices instead of having to override an existing configuration.
8. Recommended settings and defaults exposed by plugins have changed in the past, so for consistency is always better to set all the rules we want.

I understand the concern about adding ""boilerplate"" code, but is not much more boilerplate than what we would need extending existing rules maintained by somebody else. The difference being we have more control and we can keep it up to date. I've been maintaining my own rules for years and is not hard at all as a single person, so as an active open-source project should be even easier. 

If this is still a concern after all the things I said, one other thing we can do is create a new repo exclusively with the rules on it, and we would just import them and use them here. Something like `eslint-config-apache` maybe? 🤔

loucyx (Issue Creator) on (2024-09-12 14:13:03 UTC): @bbovenzi it was a casing issue. I renamed some files from `camelCase` to `PascalCase` and git didn't recognized the rename, so it worked just fine in my local but they were ""missing"" once pushed.

pierrejeambrun on (2024-09-12 15:09:06 UTC): Thanks for the explanation, that's a faire point about ESLint airbnb.

What about other mainstream more modern eslint config such as https://github.com/xojs/xo or similar ?

What I mean is there are plenty of great open source projects that are doing this and will most likely do it better than us. I don't think we have specific requirements for airflow in terms of rules and all this is very opinionated. I don't want to argue with the community about why we chose certain rules and why we did not, and how we integrate or not new rules.

Taking an external set of rule that is standard in the industry seems easier to me.

loucyx (Issue Creator) on (2024-09-12 15:37:02 UTC): I don't think I agree with this point, ""better"" would be really subjective. `xo` for example is a new script that we would have to run _instead_ of `eslint` which I would say is ""not great"", and you have to configure _it_ instead of ESLint, so we add another abstraction layer on top of ESLint. This line in their README is particularly ""scary"":


Another popular one is [StandardJS](https://standardjs.com/) which makes similar promises and has a similar approach, but the config is even worse (for example no semicolons 😨). This packages are generally doing what we are doing here, but with opinions from someone else. So as I said before instead of ""configuring"" the linter, we end up ""undoing"" some configs to adapt them to us, and we still have to add some plugins on top to make it stricter for TS for example, which is generally not linted with best practices (saying this from my experience coding in TS since 2012).


Being opinionated was the intention of the PR. On top of the regular ""avoid foot guns"" settings that every recommended configuration out there has, we have some to enforce readability, perf and type quality. This last one is the ""strictest"" of the bunch, and the one that might feel most different from other configurations, but will also make mistakes with types less common (forbidding `any`, avoiding `null`, forbidding `@ts-ignore` or `@ts-nocheck`, etc.). Popular settings generally try to adjust to non TypeScript developers, but being a TypeScript project is better to keep it strict.


The argument then could be: Why did you used `xo` instead of `standardjs` for example. The community will always want to argue about style decisions. A good OS contributor will use whatever style is standardized by the maintainers (every time I did OS contributions, I used the existing settings of the repo, even when almost everybody uses spaces instead of tabs). The difference being if you get a bunch of devs asking for a linting rule to change, is easy because you ""own"" the rules.


It's always easier to use code written by somebody else, yes, but things like ""settings"" (which is what ESLint rules are at the end of the day) should be something the maintainers themselves figure out. One common approach is to have the settings that you want to use in all your projects in a repo that you use as a scaffold (like I did while working at VMWare), or in a published package that you always include as a dependency (like I did with my `@lou.codes/configs`).

All that being said, I'm happy to close the PR and let somebody else take a hit at figuring out what packages to use if this approach is not fit to folks in Airflow. I was asked to help with ESLint configuration, and this is the way I would do it.

loucyx (Issue Creator) on (2024-09-12 15:48:06 UTC): Oh one other option we have that I didn't mentioned, is to use something else entirely, like [`oxc`](https://oxc.rs/docs/guide/usage/linter.html) which is based on Rust making it **REALLY** fast, tho it has way less rules and plugins than ESLint.

bbovenzi on (2024-09-12 15:54:17 UTC): It says right in its ""Info"" that it isn't an eslint replacement. So it looks like we could add it if linting ever becomes burdensome on the CI, but I don't want to optimize too early either.

I don't mind having our own eslint rules defined like in this PR, especially since they all come with descriptions.

loucyx (Issue Creator) on (2024-09-12 15:55:58 UTC): @bbovenzi I also prefer ESLint over `oxc`, but I think it was worth mentioning as yet another option we have.

pierrejeambrun on (2024-09-12 22:21:13 UTC): We can try our own rules and see where this leads us. We can always update them or change for another tool later if we see fit.

bbovenzi on (2024-09-12 22:37:05 UTC): I was just running this locally. It looks like we need to eslintignore the `/dist` directory. Otherwise, lgtm

loucyx (Issue Creator) on (2024-09-13 00:29:23 UTC): @bbovenzi that's so weird! The patterns are:

- `{rules,src}/**/*.{j,t}s{x,}`: All `.js`, `.ts`, `.jsx` and `.tsx` in `rules` and `src`.
- `/*.{j,t}s{x,}`: All `.js`, `.ts`, `.jsx` and `.tsx` in the root folder.

Everything else should be ignored. Tomorrow I'll try to `build` and see what I run into.

pierrejeambrun on (2024-09-13 08:43:26 UTC): I have a warning stating that our version of typescript is not supported. Our package.json specifies `""typescript"": ""^5.6.2""` while the project actually supports `<5.6.0`:

![Screenshot 2024-09-13 at 10 43 15](https://github.com/user-attachments/assets/f8e8f1e7-1d8f-44bd-a8dd-90b2c33213cb)

loucyx (Issue Creator) on (2024-09-13 08:48:03 UTC): @pierrejeambrun yup, a common warning when using `@typescript-eslint`. Generally staying in the same major and minor version is safe (if it was from `5.4.0` to `5.6.0` it would be a whole different story), and `5.6.2` has features that enable really good things such as iterator helper methods, which will make our code way cleaner when dealing with iterators and generators.

pierrejeambrun on (2024-09-13 09:03:13 UTC): Then we have to wait for `typescript-eslint` to support `5.6.0`, we can champion for https://github.com/typescript-eslint/typescript-eslint/issues/9653. I think it's a matter of days, a PR is already out.

Or we can downgrade temporary typescript in the meantime to get this merged. But I am -1 on using a typescript version that is not supported by the linter.

loucyx (Issue Creator) on (2024-09-13 09:09:10 UTC): @pierrejeambrun I'll revert for now, but in my experience it has never been a problem, that was always a ""warning"" and just that.

loucyx (Issue Creator) on (2024-09-13 18:31:09 UTC): @bbovenzi FYI: I renamed `main.tsx` back to be all lower case, because it isn't a component and all references to that file were still in lowercase.

loucyx (Issue Creator) on (2024-09-13 18:52:39 UTC): @bbovenzi I also fixed the linting of `dist`, now it only lints what it has to lint 😄

pierrejeambrun on (2024-09-14 14:21:09 UTC): Thanks a lot for addressing the comments, the PR is looking good. We have one gitignore left with the ‘.vscode’ removal.

I’ll be able to try this locally on Monday (I’m on my phone atm), just to confirm that the errors I had previously are gone :)

pierrejeambrun on (2024-09-16 09:42:01 UTC): On my end if I do:
```shell
rm -rf node_modules/
pnpm install
pnpm lint
```

Must be something on my local conf i guess.

Like it keeps trying to run on `dist` but it is excluded from the config 🤔. Is that something that you manage to reproduce ?
![Screenshot 2024-09-16 at 11 41 22](https://github.com/user-attachments/assets/438e5c88-c888-4aab-9a1f-ce34beb8c71f)


pre-commit hook is also throwing that same error:
`pre-commit run ts-compile-format-lint-ui --all-files`

Weird even the CI command fails locally:
```
breeze static-checks --all-files --show-diff-on-failure --color always --initialize-environment
```

I'll clean containers rebuild images and try again.

pierrejeambrun on (2024-09-16 13:51:51 UTC): Main was just fixed [here](https://github.com/apache/airflow/pull/42246), rebasing should solve the CI problem.

loucyx (Issue Creator) on (2024-09-16 14:08:02 UTC): @pierrejeambrun just in case I pushed a commit making the dist ignoring global, should make it so it doesn't run in the dist directory at all ^_^

pierrejeambrun on (2024-09-16 15:56:14 UTC): Looking good, working locally. We still have one `.vscode` in gitignore removed that shouldn't, I think we can merge once we revert that small diff :)

loucyx (Issue Creator) on (2024-09-16 16:01:43 UTC): @pierrejeambrun there were 3 aperances of `.vscode` in `.gitignore`, the only one that remains removed is redundant:

```
.vscode/* # Everything in the `.vscode` folder (the folder will not be committed)
!.vscode/extensions.json # Exclude `extensions.json`
.vscode # Redundant ignore of `.vscode` folder
```

I just kept the last one removed, I can add it back, but the effect is the same afaik.

pierrejeambrun on (2024-09-16 16:09:58 UTC): Oh yes indeed, thanks for removing that useless ignore.

boring-cyborg[bot] on (2024-09-16 16:51:04 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2520836275,pull_request,closed,,Add template field tests to AWS operators part1,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
Adding template tests to operators, athena, bedrock, 
cloudformation, comprehend, datasync, dms, ec2, eks, emr.

I plan to submit smaller PRs to simplify the review , Separate PRs will be created for sensors and the remaining operators.
<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-09-11 21:41:06+00:00,[],2024-09-12 19:26:08+00:00,2024-09-12 04:02:02+00:00,https://github.com/apache/airflow/pull/42183,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]","[{'comment_id': 2344828482, 'issue_id': 2520836275, 'author': 'o-nikolas', 'body': ""This is basically checking if there are template fields which aren't present as fields on the operator object, right? What breakage happens if you have a template field that isn't present on the operator? Is it a silent failure or does something break catastrophically (e.g. runtime exception?)"", 'created_at': datetime.datetime(2024, 9, 11, 22, 41, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2345187196, 'issue_id': 2520836275, 'author': 'gopidesupavan', 'body': ""> This is basically checking if there are template fields which aren't present as fields on the operator object, right? What breakage happens if you have a template field that isn't present on the operator? Is it a silent failure or does something break catastrophically (e.g. runtime exception?)\r\n\r\nHi @o-nikolas , yes good question :) it fails at pre-task execution, ex: \r\n\r\nhere i have given someunknow_variable, in template fields, \r\n\r\n![image](https://github.com/user-attachments/assets/636e61aa-1adf-436d-81f8-26e2ce0a49cb)\r\n\r\n![image](https://github.com/user-attachments/assets/ec5131bf-59f3-4c00-afe5-7bef16ef441b)"", 'created_at': datetime.datetime(2024, 9, 12, 3, 19, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2345195586, 'issue_id': 2520836275, 'author': 'gopidesupavan', 'body': 'Recently while working on gluedatabrew changes #41848 , I made a mistake where the field name was provided incorrectly, causing it to fail during system tests. Thanks to @ferruzzi  :) fixing it here #42073.', 'created_at': datetime.datetime(2024, 9, 12, 3, 29, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2347025162, 'issue_id': 2520836275, 'author': 'ferruzzi', 'body': ""Thanks for doing this, and I'm sorry I missed the PR; it's been a busy week.  Do you think there would be any benefit in expanding this?  For example, it might be suitable for a project-level CI check that runs on every provider as part of the PR checks, then everyone can benefit from it.  \r\n\r\nBarring that, I wonder if we could move it into some BaseOperatorTests class that these can all inherit so we don't have to manually add it to every service file like this."", 'created_at': datetime.datetime(2024, 9, 12, 18, 58, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2347075167, 'issue_id': 2520836275, 'author': 'gopidesupavan', 'body': ""> Thanks for doing this, and I'm sorry I missed the PR; it's been a busy week. Do you think there would be any benefit in expanding this? For example, it might be suitable for a project-level CI check that runs on every provider as part of the PR checks, then everyone can benefit from it.\r\n> \r\n> Barring that, I wonder if we could move it into some BaseOperatorTests class that these can all inherit so we don't have to manually add it to every service file like this.\r\n\r\nMake sense, I can add pre-commit script to check using Python ast lib, I feel not possible for all operators , where some of the template_fields are object references example here: https://github.com/apache/airflow/blob/3bc2d3aef6c348e26775f4711ac593acfac9595e/airflow/providers/cncf/kubernetes/operators/job.py#L85, some of them might have to exclude \r\n\r\nIf this sounds Good I can get a pr we can discuss more"", 'created_at': datetime.datetime(2024, 9, 12, 19, 26, 7, tzinfo=datetime.timezone.utc)}]","o-nikolas on (2024-09-11 22:41:32 UTC): This is basically checking if there are template fields which aren't present as fields on the operator object, right? What breakage happens if you have a template field that isn't present on the operator? Is it a silent failure or does something break catastrophically (e.g. runtime exception?)

gopidesupavan (Issue Creator) on (2024-09-12 03:19:53 UTC): Hi @o-nikolas , yes good question :) it fails at pre-task execution, ex: 

here i have given someunknow_variable, in template fields, 

![image](https://github.com/user-attachments/assets/636e61aa-1adf-436d-81f8-26e2ce0a49cb)

![image](https://github.com/user-attachments/assets/ec5131bf-59f3-4c00-afe5-7bef16ef441b)

gopidesupavan (Issue Creator) on (2024-09-12 03:29:56 UTC): Recently while working on gluedatabrew changes #41848 , I made a mistake where the field name was provided incorrectly, causing it to fail during system tests. Thanks to @ferruzzi  :) fixing it here #42073.

ferruzzi on (2024-09-12 18:58:26 UTC): Thanks for doing this, and I'm sorry I missed the PR; it's been a busy week.  Do you think there would be any benefit in expanding this?  For example, it might be suitable for a project-level CI check that runs on every provider as part of the PR checks, then everyone can benefit from it.  

Barring that, I wonder if we could move it into some BaseOperatorTests class that these can all inherit so we don't have to manually add it to every service file like this.

gopidesupavan (Issue Creator) on (2024-09-12 19:26:07 UTC): Make sense, I can add pre-commit script to check using Python ast lib, I feel not possible for all operators , where some of the template_fields are object references example here: https://github.com/apache/airflow/blob/3bc2d3aef6c348e26775f4711ac593acfac9595e/airflow/providers/cncf/kubernetes/operators/job.py#L85, some of them might have to exclude 

If this sounds Good I can get a pr we can discuss more

"
2520742871,pull_request,closed,,do not camelcase xcom entries,"Skip applying camelCase to `value` when GETting an xcom entry.

Closes #42029

There are probably more places we want to skip camelCasing and in the new UI we are not camelCasing.

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-09-11 20:50:17+00:00,[],2024-09-11 23:24:25+00:00,2024-09-11 23:24:25+00:00,https://github.com/apache/airflow/pull/42182,"[('area:webserver', 'Webserver related Issues'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2520633550,pull_request,closed,,Adding How to commit to Contributor Quickstart,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Srabasti,2024-09-11 19:48:59+00:00,[],2024-09-17 19:16:23+00:00,2024-09-17 19:16:23+00:00,https://github.com/apache/airflow/pull/42181,"[('area:dev-tools', '')]","[{'comment_id': 2346769026, 'issue_id': 2520633550, 'author': 'ephraimbuddy', 'body': 'Conflicts...', 'created_at': datetime.datetime(2024, 9, 12, 16, 38, 23, tzinfo=datetime.timezone.utc)}]","ephraimbuddy on (2024-09-12 16:38:23 UTC): Conflicts...

"
2520627984,pull_request,closed,,"Add test case ""test_init_exception"" to BaseDatabricksHook","<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE


How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

This PR will add an initial unit test for the `BaseDatabricksHook` in the `databricks_base.py` file. This is meant to get things started so further tests can be added in the future. I am planning to come back and add more, so let me know if you need me to add them all in one go and I can work on that!

related: #35442

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bonniewhy,2024-09-11 19:45:34+00:00,[],2024-09-19 13:03:00+00:00,2024-09-19 10:32:14+00:00,https://github.com/apache/airflow/pull/42180,"[('area:providers', ''), ('provider:databricks', '')]","[{'comment_id': 2344569818, 'issue_id': 2520627984, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 19, 45, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 2354804616, 'issue_id': 2520627984, 'author': 'Lee-W', 'body': 'Overall looks good but need to get CI pass', 'created_at': datetime.datetime(2024, 9, 17, 7, 55, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2355812218, 'issue_id': 2520627984, 'author': 'bonniewhy', 'body': 'Thank you @Lee-W ! CI checks are passing now!', 'created_at': datetime.datetime(2024, 9, 17, 13, 31, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2357655446, 'issue_id': 2520627984, 'author': 'Lee-W', 'body': '@bonniewhy It is still failing. I think we need to fix `tests/always/test_project_structure.py::TestProjectStructure::test_providers_modules_should_have_tests`', 'created_at': datetime.datetime(2024, 9, 18, 6, 57, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2360618034, 'issue_id': 2520627984, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 19, 10, 32, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2360758348, 'issue_id': 2520627984, 'author': 'bonniewhy', 'body': ""@Lee-W Thank you for bearing with me! I don't think I waited long enough for the checks to complete. Excited to get my first contribution merged in. 🎉"", 'created_at': datetime.datetime(2024, 9, 19, 11, 42, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2360929603, 'issue_id': 2520627984, 'author': 'Lee-W', 'body': 'It took a long time for Airflow CI to check everything. No worries. Congratulations!', 'created_at': datetime.datetime(2024, 9, 19, 13, 2, 58, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 19:45:38 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

Lee-W on (2024-09-17 07:55:13 UTC): Overall looks good but need to get CI pass

bonniewhy (Issue Creator) on (2024-09-17 13:31:09 UTC): Thank you @Lee-W ! CI checks are passing now!

Lee-W on (2024-09-18 06:57:27 UTC): @bonniewhy It is still failing. I think we need to fix `tests/always/test_project_structure.py::TestProjectStructure::test_providers_modules_should_have_tests`

boring-cyborg[bot] on (2024-09-19 10:32:16 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

bonniewhy (Issue Creator) on (2024-09-19 11:42:50 UTC): @Lee-W Thank you for bearing with me! I don't think I waited long enough for the checks to complete. Excited to get my first contribution merged in. 🎉

Lee-W on (2024-09-19 13:02:58 UTC): It took a long time for Airflow CI to check everything. No worries. Congratulations!

"
2520611053,pull_request,closed,,Updating Tekmetric URL in Airflow User's List,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",ipsatrivedi,2024-09-11 19:35:30+00:00,[],2024-09-11 19:58:44+00:00,2024-09-11 19:58:44+00:00,https://github.com/apache/airflow/pull/42179,[],[],
2520606698,pull_request,closed,,Added new user under Bloomberg to INTHEWILD.md,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vfeldsher,2024-09-11 19:32:48+00:00,[],2024-09-11 19:59:17+00:00,2024-09-11 19:59:13+00:00,https://github.com/apache/airflow/pull/42178,[],"[{'comment_id': 2344549174, 'issue_id': 2520606698, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 19, 32, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344592364, 'issue_id': 2520606698, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 11, 19, 59, 16, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 19:32:51 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-11 19:59:16 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2520560016,pull_request,closed,,Added Autodesk to list of companies using Airflow In the wild,Added Autodesk to INTHEWILD.md,mevich,2024-09-11 19:11:16+00:00,[],2024-09-11 19:18:27+00:00,2024-09-11 19:18:24+00:00,https://github.com/apache/airflow/pull/42176,[],"[{'comment_id': 2344496087, 'issue_id': 2520560016, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 19, 11, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344521469, 'issue_id': 2520560016, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 11, 19, 18, 26, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 19:11:20 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-11 19:18:26 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2520545155,pull_request,closed,,(fix): HybridExecutor tasks of other executor rescheduled in kubernetes executor,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Closes: #42151 


<!-- Please keep an empty line above the dashes. -->
---
",pavansharma36,2024-09-11 19:06:53+00:00,[],2024-10-14 08:43:56+00:00,2024-10-14 08:43:55+00:00,https://github.com/apache/airflow/pull/42175,"[('area:providers', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues')]","[{'comment_id': 2409648726, 'issue_id': 2520545155, 'author': 'potiuk', 'body': 'Needs another rebase :(', 'created_at': datetime.datetime(2024, 10, 14, 1, 41, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2410473141, 'issue_id': 2520545155, 'author': 'pavansharma36', 'body': 'I think I messed up something, Will create new PR,\r\nSorry for false alarm everyone', 'created_at': datetime.datetime(2024, 10, 14, 8, 43, 55, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-10-14 01:41:06 UTC): Needs another rebase :(

pavansharma36 (Issue Creator) on (2024-10-14 08:43:55 UTC): I think I messed up something, Will create new PR,
Sorry for false alarm everyone

"
2520528220,pull_request,closed,,Adding Paypal. ,PayPal is a widely-used online payment system that allows individuals and businesses to send and receive money electronically. It offers a secure and convenient alternative to traditional payment methods like checks and money orders. We use airflow for date pipelines and in ML platform team.,kaddynator,2024-09-11 19:00:46+00:00,[],2024-10-26 20:25:51+00:00,2024-10-26 20:25:47+00:00,https://github.com/apache/airflow/pull/42174,[],"[{'comment_id': 2344452214, 'issue_id': 2520528220, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 19, 0, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344463169, 'issue_id': 2520528220, 'author': 'kaddynator', 'body': '@RNHTTR !', 'created_at': datetime.datetime(2024, 9, 11, 19, 4, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439652757, 'issue_id': 2520528220, 'author': 'eladkal', 'body': ""> @RNHTTR observed that some places have the format: a,b & c while some have a, b, c. Can be unified\r\n\r\nWe can always re-organize this if needed. I'll merge when CI is green"", 'created_at': datetime.datetime(2024, 10, 26, 16, 49, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439727016, 'issue_id': 2520528220, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 26, 20, 25, 50, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 19:00:50 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

kaddynator (Issue Creator) on (2024-09-11 19:04:42 UTC): @RNHTTR !

eladkal on (2024-10-26 16:49:55 UTC): We can always re-organize this if needed. I'll merge when CI is green

boring-cyborg[bot] on (2024-10-26 20:25:50 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2520527663,pull_request,closed,,adding airflowuser for bloomberg,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",skandala23,2024-09-11 19:00:28+00:00,[],2024-09-11 19:20:31+00:00,2024-09-11 19:20:28+00:00,https://github.com/apache/airflow/pull/42173,[],"[{'comment_id': 2344451687, 'issue_id': 2520527663, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 19, 0, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344525319, 'issue_id': 2520527663, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 11, 19, 20, 30, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 19:00:32 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-11 19:20:30 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2520504627,pull_request,closed,,Add Five9 to Airflow Company List,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Srabasti,2024-09-11 18:50:48+00:00,[],2024-09-11 19:40:20+00:00,2024-09-11 19:40:20+00:00,https://github.com/apache/airflow/pull/42172,[],[],
2520480659,pull_request,closed,,reformat summary commands,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",leoguzman,2024-09-11 18:41:41+00:00,[],2024-09-11 20:00:19+00:00,2024-09-11 20:00:16+00:00,https://github.com/apache/airflow/pull/42171,"[('area:dev-tools', '')]","[{'comment_id': 2344414956, 'issue_id': 2520480659, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 18, 41, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344441094, 'issue_id': 2520480659, 'author': 'leoguzman', 'body': '@RNHTTR @jedcunningham', 'created_at': datetime.datetime(2024, 9, 11, 18, 54, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344594051, 'issue_id': 2520480659, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 11, 20, 0, 18, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 18:41:45 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

leoguzman (Issue Creator) on (2024-09-11 18:54:57 UTC): @RNHTTR @jedcunningham

boring-cyborg[bot] on (2024-09-11 20:00:18 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2520474307,pull_request,closed,,Fix wrong casing in airbyte hook.,"Fixes: #42154

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-11 18:39:30+00:00,[],2024-09-11 21:26:04+00:00,2024-09-11 19:04:21+00:00,https://github.com/apache/airflow/pull/42170,"[('area:providers', ''), ('provider:airbyte', '')]","[{'comment_id': 2344414276, 'issue_id': 2520474307, 'author': 'potiuk', 'body': 'cc: @marcosmarxm', 'created_at': datetime.datetime(2024, 9, 11, 18, 41, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344428096, 'issue_id': 2520474307, 'author': 'potiuk', 'body': 'BTW. For the future @jscheffl  - it\'s best to avoid ""=="" pinning in our deps. It would likely be better to add `!=0.52.0` in the first PR (I will explain - using this example - on Friday).', 'created_at': datetime.datetime(2024, 9, 11, 18, 48, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344461857, 'issue_id': 2520474307, 'author': 'potiuk', 'body': 'Passed the airbyte tests - merging..', 'created_at': datetime.datetime(2024, 9, 11, 19, 4, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344730406, 'issue_id': 2520474307, 'author': 'marcosmarxm', 'body': ""I'm in contact with the team is responsible with the `airbyte-sdk` library. It shouldn't be changed but anyway. I'm going to keep an eye on it. Thanks a lot @potiuk and @jscheffl for the quick fix."", 'created_at': datetime.datetime(2024, 9, 11, 21, 26, 3, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-11 18:41:23 UTC): cc: @marcosmarxm

potiuk (Issue Creator) on (2024-09-11 18:48:01 UTC): BTW. For the future @jscheffl  - it's best to avoid ""=="" pinning in our deps. It would likely be better to add `!=0.52.0` in the first PR (I will explain - using this example - on Friday).

potiuk (Issue Creator) on (2024-09-11 19:04:18 UTC): Passed the airbyte tests - merging..

marcosmarxm on (2024-09-11 21:26:03 UTC): I'm in contact with the team is responsible with the `airbyte-sdk` library. It shouldn't be changed but anyway. I'm going to keep an eye on it. Thanks a lot @potiuk and @jscheffl for the quick fix.

"
2520466721,pull_request,closed,,Added BTIG to the list of companies using Apache Airflow,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",hikaruhk,2024-09-11 18:36:48+00:00,[],2024-09-11 19:01:48+00:00,2024-09-11 19:01:44+00:00,https://github.com/apache/airflow/pull/42169,[],"[{'comment_id': 2344404699, 'issue_id': 2520466721, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 18, 36, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344454169, 'issue_id': 2520466721, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 11, 19, 1, 46, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 18:36:51 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-11 19:01:46 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2520457980,pull_request,closed,,Adding Envestnet to Airflow Users List. We use Airflow for production workloads.,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",svellaiyan,2024-09-11 18:32:12+00:00,[],2024-09-11 19:19:14+00:00,2024-09-11 19:19:11+00:00,https://github.com/apache/airflow/pull/42168,[],"[{'comment_id': 2344396509, 'issue_id': 2520457980, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 18, 32, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344523279, 'issue_id': 2520457980, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 11, 19, 19, 13, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 18:32:16 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-11 19:19:13 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2520457763,pull_request,closed,,Adding Tekmetric to Users list,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",ipsatrivedi,2024-09-11 18:32:04+00:00,[],2024-09-11 19:19:03+00:00,2024-09-11 19:18:59+00:00,https://github.com/apache/airflow/pull/42167,[],"[{'comment_id': 2344396253, 'issue_id': 2520457763, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 18, 32, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344522960, 'issue_id': 2520457763, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 11, 19, 19, 2, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 18:32:08 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-11 19:19:02 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2520429980,pull_request,closed,,Add Ali Suleiman @ Credit Karma,Add Ali Suleiman @ Credit Karma to INTHEWILD.md,ali-suleiman-ck,2024-09-11 18:16:09+00:00,[],2024-11-03 00:16:47+00:00,2024-11-03 00:16:47+00:00,https://github.com/apache/airflow/pull/42166,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file')]","[{'comment_id': 2344367698, 'issue_id': 2520429980, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 18, 16, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442910569, 'issue_id': 2520429980, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 10, 29, 0, 15, 32, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 18:16:13 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

github-actions[bot] on (2024-10-29 00:15:32 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2520420290,pull_request,closed,,Added Datavant to the list of companies using Airflow,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",althati,2024-09-11 18:11:11+00:00,[],2024-09-11 18:35:57+00:00,2024-09-11 18:35:53+00:00,https://github.com/apache/airflow/pull/42165,[],"[{'comment_id': 2344358203, 'issue_id': 2520420290, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 18, 11, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344402726, 'issue_id': 2520420290, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 11, 18, 35, 55, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 18:11:14 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-11 18:35:55 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2520408357,pull_request,closed,,Added EnterpriseDB to the list of companies using Airflow,Added EnterpriseDB to the list of companies using Airflow.,kaydee-edb,2024-09-11 18:04:49+00:00,[],2024-09-11 18:35:26+00:00,2024-09-11 18:35:23+00:00,https://github.com/apache/airflow/pull/42163,[],"[{'comment_id': 2344346195, 'issue_id': 2520408357, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 18, 4, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344401702, 'issue_id': 2520408357, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 11, 18, 35, 26, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 18:04:53 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-11 18:35:26 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2520399082,pull_request,closed,,Added Aisera to the list of companies using Apache Airflow,"Added Aisera to INTHEWILD.md

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

related: #12012

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",mayankymailusfedu,2024-09-11 17:59:25+00:00,[],2024-09-11 18:19:48+00:00,2024-09-11 18:19:45+00:00,https://github.com/apache/airflow/pull/42162,[],"[{'comment_id': 2344336676, 'issue_id': 2520399082, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 17, 59, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344374185, 'issue_id': 2520399082, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 11, 18, 19, 47, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 17:59:28 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-11 18:19:47 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2520391212,pull_request,closed,,Added Electronic Arts to the list of companies using Apache Airflow,Added EA to NTHEWILD.md,yuan-glu,2024-09-11 17:54:38+00:00,[],2024-09-11 18:13:08+00:00,2024-09-11 18:11:16+00:00,https://github.com/apache/airflow/pull/42161,[],"[{'comment_id': 2344328041, 'issue_id': 2520391212, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 11, 17, 54, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344358335, 'issue_id': 2520391212, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 11, 18, 11, 19, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-11 17:54:41 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-11 18:11:19 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2519946418,pull_request,closed,,Pin airbyte-api to 0.51.0 (#42154),"Temporarily pin the apibyte-api version until provider is fixed

related: #42154 ",jscheffl,2024-09-11 14:40:56+00:00,[],2024-09-11 17:54:27+00:00,2024-09-11 16:48:39+00:00,https://github.com/apache/airflow/pull/42155,"[('area:providers', ''), ('provider:airbyte', '')]","[{'comment_id': 2344327613, 'issue_id': 2519946418, 'author': 'eladkal', 'body': 'cc @marcosmarxm can you help with fixing the problem?', 'created_at': datetime.datetime(2024, 9, 11, 17, 54, 26, tzinfo=datetime.timezone.utc)}]","eladkal on (2024-09-11 17:54:26 UTC): cc @marcosmarxm can you help with fixing the problem?

"
2519830769,pull_request,closed,,Fix vertex AI system tests,"Fix VertexAI system tests by providing public resources links
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",VladaZakharova,2024-09-11 13:56:49+00:00,[],2024-09-11 16:49:02+00:00,2024-09-11 16:49:02+00:00,https://github.com/apache/airflow/pull/42153,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', '')]",[],
2519776893,pull_request,closed,,Display tryNumber for failed and completed tasks in grid,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
This makes a small change to the task instance grid so that it is easy to see at a glance the number of attempts that were made for failed and successful tasks.

Only displayed if attempts > 1. Currently you have to click into each task to check this. 

It will look as follows:

<img width=""572"" alt=""image"" src=""https://github.com/user-attachments/assets/27e98540-b451-4cbe-81b2-5bc185d62c88"">

**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",atrbgithub,2024-09-11 13:36:43+00:00,[],2024-09-13 16:04:21+00:00,2024-09-13 16:04:21+00:00,https://github.com/apache/airflow/pull/42152,"[('area:webserver', 'Webserver related Issues'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2344004343, 'issue_id': 2519776893, 'author': 'bbovenzi', 'body': 'Someone else tried to do the same here: https://github.com/apache/airflow/pull/40166\r\n\r\nI am happy if we use an icon to say that the task took multiple tries. But the actual number should be in the tooltip.', 'created_at': datetime.datetime(2024, 9, 11, 15, 32, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344071975, 'issue_id': 2519776893, 'author': 'atrbgithub', 'body': '> Someone else tried to do the same here: #40166\r\n> \r\n> I am happy if we use an icon to say that the task took multiple tries. But the actual number should be in the tooltip.\r\n\r\nAh, I did not see that someone had tried to do this already. \r\n\r\nNot sure how this looks? \r\n\r\n<img width=""575"" alt=""image"" src=""https://github.com/user-attachments/assets/c85aced0-fcb6-4e71-9c78-c1a3641c02bf"">\r\n\r\nLooks ok in the new dark mode:\r\n\r\n<img width=""554"" alt=""image"" src=""https://github.com/user-attachments/assets/eb44014c-9269-4a59-be30-bb55f30e818d"">', 'created_at': datetime.datetime(2024, 9, 11, 16, 1, 42, tzinfo=datetime.timezone.utc)}]","bbovenzi on (2024-09-11 15:32:06 UTC): Someone else tried to do the same here: https://github.com/apache/airflow/pull/40166

I am happy if we use an icon to say that the task took multiple tries. But the actual number should be in the tooltip.

atrbgithub (Issue Creator) on (2024-09-11 16:01:42 UTC): Ah, I did not see that someone had tried to do this already. 

Not sure how this looks? 

<img width=""575"" alt=""image"" src=""https://github.com/user-attachments/assets/c85aced0-fcb6-4e71-9c78-c1a3641c02bf"">

Looks ok in the new dark mode:

<img width=""554"" alt=""image"" src=""https://github.com/user-attachments/assets/eb44014c-9269-4a59-be30-bb55f30e818d"">

"
2518158825,pull_request,closed,,Add Ryan Hamilton as ui codeowner,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-09-10 23:35:05+00:00,[],2024-09-10 23:49:17+00:00,2024-09-10 23:49:15+00:00,https://github.com/apache/airflow/pull/42150,"[('area:dev-tools', '')]",[],
2518143871,pull_request,closed,,Bump apache-airflow from 2.10.0 to 2.10.1 in /performance,"Bumps [apache-airflow](https://github.com/apache/airflow) from 2.10.0 to 2.10.1.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/apache/airflow/releases"">apache-airflow's releases</a>.</em></p>
<blockquote>
<h2>Apache Airflow 2.10.1</h2>
<h1>Significant Changes</h1>
<p>No significant changes.</p>
<h2>Bug Fixes</h2>
<ul>
<li>Handle Example dags case when checking for missing files (<a href=""https://redirect.github.com/apache/airflow/issues/41874"">#41874</a>)</li>
<li>Fix logout link in &quot;no roles&quot; error page (<a href=""https://redirect.github.com/apache/airflow/issues/41845"">#41845</a>)</li>
<li>Set end_date and duration for triggers completed with end_from_trigger as True. (<a href=""https://redirect.github.com/apache/airflow/issues/41834"">#41834</a>)</li>
<li>DAGs are not marked as stale if the dags folder change (<a href=""https://redirect.github.com/apache/airflow/issues/41829"">#41829</a>)</li>
<li>Fix compatibility with FAB provider versions &lt;1.3.0 (<a href=""https://redirect.github.com/apache/airflow/issues/41809"">#41809</a>)</li>
<li>Don't Fail LocalTaskJob on heartbeat (<a href=""https://redirect.github.com/apache/airflow/issues/41810"">#41810</a>)</li>
<li>Remove deprecation warning for cgitb in Plugins Manager (<a href=""https://redirect.github.com/apache/airflow/issues/41793"">#41793</a>)</li>
<li>Fix log for notifier(instance) without <strong>name</strong> (<a href=""https://redirect.github.com/apache/airflow/issues/41699"">#41699</a>)</li>
<li>Splitting syspath preparation into stages (<a href=""https://redirect.github.com/apache/airflow/issues/41694"">#41694</a>)</li>
<li>Adding url sanitization for extra links (<a href=""https://redirect.github.com/apache/airflow/issues/41680"">#41680</a>)</li>
<li>Fix InletEventsAccessors type stub (<a href=""https://redirect.github.com/apache/airflow/issues/41607"">#41607</a>)</li>
<li>Fix UI rendering when XCom is INT, FLOAT, BOOL or NULL (<a href=""https://redirect.github.com/apache/airflow/issues/41605"">#41605</a>)</li>
<li>Fix try selector refresh (<a href=""https://redirect.github.com/apache/airflow/issues/41503"">#41503</a>)</li>
<li>Incorrect try number subtraction producing invalid span id for OTEL airflow (<a href=""https://redirect.github.com/apache/airflow/issues/41535"">#41535</a>)</li>
<li>Add WebEncoder for trigger page rendering to avoid render failure (<a href=""https://redirect.github.com/apache/airflow/issues/41485"">#41485</a>)</li>
<li>Adding <code>tojson</code> filter to example_inlet_event_extra example dag (<a href=""https://redirect.github.com/apache/airflow/issues/41890"">#41890</a>)</li>
<li>Add backward compatibility check for executors that don't inherit BaseExecutor (<a href=""https://redirect.github.com/apache/airflow/issues/41927"">#41927</a>)</li>
</ul>
<h2>Miscellaneous</h2>
<ul>
<li>Bump webpack from 5.76.0 to 5.94.0 in /airflow/www (<a href=""https://redirect.github.com/apache/airflow/issues/41879"">#41879</a>)</li>
<li>Adding rel property to hyperlinks in logs (<a href=""https://redirect.github.com/apache/airflow/issues/41783"">#41783</a>)</li>
<li>Field Deletion Warning when editing Connections (<a href=""https://redirect.github.com/apache/airflow/issues/41504"">#41504</a>)</li>
<li>Make Scarf usage reporting in major+minor versions and counters in buckets (<a href=""https://redirect.github.com/apache/airflow/issues/41900"">#41900</a>)</li>
<li>Lower down universal-pathlib minimum to 0.2.2 (<a href=""https://redirect.github.com/apache/airflow/issues/41943"">#41943</a>)</li>
<li>Protect against None components of universal pathlib xcom backend (<a href=""https://redirect.github.com/apache/airflow/issues/41938"">#41938</a>)</li>
</ul>
<h2>Doc Only Changes</h2>
<ul>
<li>Remove Debian bullseye support (<a href=""https://redirect.github.com/apache/airflow/issues/41569"">#41569</a>)</li>
<li>Add an example for auth with <code>keycloak</code> (<a href=""https://redirect.github.com/apache/airflow/issues/41791"">#41791</a>)</li>
</ul>
</blockquote>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/apache/airflow/blob/main/RELEASE_NOTES.rst"">apache-airflow's changelog</a>.</em></p>
<blockquote>
<p>.. Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
&quot;License&quot;); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at</p>
<p>..   <a href=""http://www.apache.org/licenses/LICENSE-2.0"">http://www.apache.org/licenses/LICENSE-2.0</a></p>
<p>.. Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
&quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.</p>
<p>.. contents:: Apache Airflow Releases
:local:
:depth: 1</p>
<p>.. towncrier release notes start</p>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/apache/airflow/commit/854173176f372f6509800ed446286c32cb75045e""><code>8541731</code></a> Lower down universal-pathlib minimum to 0.2.2 (<a href=""https://redirect.github.com/apache/airflow/issues/41939"">#41939</a>) (<a href=""https://redirect.github.com/apache/airflow/issues/41943"">#41943</a>)</li>
<li><a href=""https://github.com/apache/airflow/commit/3304c2a548022ba9d8c40440a70b913cfa2ee79e""><code>3304c2a</code></a> Protect against None components of universal pathlib xcom backend (<a href=""https://redirect.github.com/apache/airflow/issues/41921"">#41921</a>) (#...</li>
<li><a href=""https://github.com/apache/airflow/commit/3273171c709ce2241927a35ea2d56507fd1da63a""><code>3273171</code></a> Update RELEASE_NOTES.rst</li>
<li><a href=""https://github.com/apache/airflow/commit/4cd17c0d601a9c8e6a005b3627ca467e6b0ddb93""><code>4cd17c0</code></a> Update version to 2.10.1.</li>
<li><a href=""https://github.com/apache/airflow/commit/6d8e88c0cda3923395807bd78655dcf26eff01aa""><code>6d8e88c</code></a> Add backcompat check for executors that don't inherit BaseExecutor (<a href=""https://redirect.github.com/apache/airflow/issues/41906"">#41906</a>) (...</li>
<li><a href=""https://github.com/apache/airflow/commit/d17797896ca6584a2b2992159358492716962605""><code>d177978</code></a> Upgrade UV to 0.4.1 (<a href=""https://redirect.github.com/apache/airflow/issues/41925"">#41925</a>) (<a href=""https://redirect.github.com/apache/airflow/issues/41926"">#41926</a>)</li>
<li><a href=""https://github.com/apache/airflow/commit/d4c2dd0f416417eb9eb5cba65279722bdc278fbf""><code>d4c2dd0</code></a> Update release command for Airflow 2 (<a href=""https://redirect.github.com/apache/airflow/issues/41907"">#41907</a>)</li>
<li><a href=""https://github.com/apache/airflow/commit/aafad2aeee926dd1a621e67bb49de0a6bf62fc03""><code>aafad2a</code></a> Make Scarf usage reporting in major+minor versions and counters in buckets (#...</li>
<li><a href=""https://github.com/apache/airflow/commit/fa03a3212019760c696fc2ea34a03c38ec0b72dd""><code>fa03a32</code></a> Skip test_scan_stale_dags_when_dag_folder_change in DB isolation mode (<a href=""https://redirect.github.com/apache/airflow/issues/41893"">#41893</a>...</li>
<li><a href=""https://github.com/apache/airflow/commit/09ec2616568f8a18e0d5fe408110fae06ddf748f""><code>09ec261</code></a> Adding tojson filter to example_inlet_event_extra example dag (<a href=""https://redirect.github.com/apache/airflow/issues/41873"">#41873</a>) (<a href=""https://redirect.github.com/apache/airflow/issues/41890"">#41890</a>)</li>
<li>Additional commits viewable in <a href=""https://github.com/apache/airflow/compare/2.10.0...2.10.1"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=apache-airflow&package-manager=pip&previous-version=2.10.0&new-version=2.10.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/apache/airflow/network/alerts).

</details>",dependabot[bot],2024-09-10 23:19:46+00:00,[],2024-09-11 16:49:24+00:00,2024-09-11 16:49:17+00:00,https://github.com/apache/airflow/pull/42149,"[('area:dependencies', 'Issues related to dependencies problems'), ('python', 'Pull requests that update Python code')]",[],
2518142386,pull_request,closed,,Actually move saml to amazon provider (mistakenly added in papermill),"Follow up after #42137 -> saml was added mistakenly to papermill, not amazon :(

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-10 23:18:00+00:00,[],2024-09-11 13:49:40+00:00,2024-09-11 13:49:39+00:00,https://github.com/apache/airflow/pull/42148,"[('area:providers', ''), ('full tests needed', 'We need to run full set of tests for this PR to merge'), ('provider:papermill', ''), ('all versions', 'If set, the CI build will be forced to use all versions of Python/K8S/DBs')]",[],
2518044916,pull_request,closed,,Fix documentation for cpu and memory usage metrics,"Fix incorrect documentation for metrics are reported in airflow/task/task_runner/standard_task_runner.py. The documentation suggests that ""percent"" is in the metric names when it is not.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",lucasmo,2024-09-10 22:22:12+00:00,[],2024-10-23 09:29:40+00:00,2024-09-13 23:05:25+00:00,https://github.com/apache/airflow/pull/42147,"[('kind:documentation', ''), ('type:doc-only', 'Changelog: Doc Only')]","[{'comment_id': 2342189931, 'issue_id': 2518044916, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 10, 22, 22, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2348293422, 'issue_id': 2518044916, 'author': 'shalberd', 'body': '@potiuk @thesuperzapper this seems like something very straight-forward and intuitive; can it not be reviewed, accepted, and merged?', 'created_at': datetime.datetime(2024, 9, 13, 8, 2, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2350669519, 'issue_id': 2518044916, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 13, 23, 5, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2350676421, 'issue_id': 2518044916, 'author': 'potiuk', 'body': ""Can you please create a backport as a (`cherry-pick -x` PR to `v2-10-test` if you want this released in 2.10 please ) @shalberd @lucasmo  - otherwise it will only be released in Airflow 3 (and I am going for holidays now so I won't have time for it)."", 'created_at': datetime.datetime(2024, 9, 13, 23, 7, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2353287372, 'issue_id': 2518044916, 'author': 'vincbeck', 'body': 'Backport in `v2-10-test`: #42256', 'created_at': datetime.datetime(2024, 9, 16, 15, 46, 2, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-10 22:22:15 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

shalberd on (2024-09-13 08:02:06 UTC): @potiuk @thesuperzapper this seems like something very straight-forward and intuitive; can it not be reviewed, accepted, and merged?

boring-cyborg[bot] on (2024-09-13 23:05:27 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

potiuk on (2024-09-13 23:07:27 UTC): Can you please create a backport as a (`cherry-pick -x` PR to `v2-10-test` if you want this released in 2.10 please ) @shalberd @lucasmo  - otherwise it will only be released in Airflow 3 (and I am going for holidays now so I won't have time for it).

vincbeck on (2024-09-16 15:46:02 UTC): Backport in `v2-10-test`: #42256

"
2517496506,pull_request,closed,,Fix task_instance and dag_run links from list views (#42138),"Backport https://github.com/apache/airflow/pull/42138 to 2.10 branch

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-09-10 19:16:01+00:00,[],2024-09-13 17:40:25+00:00,2024-09-10 22:32:27+00:00,https://github.com/apache/airflow/pull/42143,"[('area:webserver', 'Webserver related Issues'), ('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2517472728,pull_request,closed,,Don't resolve symbolic links for dag_directory,"related: https://github.com/apache/airflow/issues/42111

With the recent [fix](https://github.com/apache/airflow/pull/41874) we added a check that compares a `dag.fileloc` and `dag_directory` However, we never resolve the symbolic links in `dag.fileloc` but we do resolve them for `dag_directory`. But in helm charts that uses `gitSync` we use symbolic links like:
```
drwxrwsrwx 1 root    root  36 Sep 10 12:08 .
drwxrwxr-x 1 airflow root  60 Sep 10 12:04 ..
drwxr-sr-x 1   65533 root 182 Sep 10 12:08 .git
drwxr-sr-x 1   65533 root  80 Sep 10 12:08 .worktrees
lrwxrwxrwx 1   65533 root  51 Sep 10 12:08 repo -> .worktrees/99c104927b4b568d40d2331095c687817a580678
```
Which results in a discrepancy:
```
dag.fileloc:  /opt/airflow/dags/repo/src/test_dags_folder.py, 
dag_directory : /opt/airflow/dags/.worktrees/99c104927b4b568d40d2331095c687817a580678/src 
```
and leads to failure of the check added in the [PR](https://github.com/apache/airflow/pull/41874). This PR aims to resolve this issue by ignoring the  symbolic links in the `dag_directory` path.",utkarsharma2,2024-09-10 19:10:04+00:00,[],2024-12-15 00:18:35+00:00,2024-12-15 00:18:35+00:00,https://github.com/apache/airflow/pull/42142,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:Scheduler', 'including HA (high availability) scheduler')]","[{'comment_id': 2343750102, 'issue_id': 2517472728, 'author': 'potiuk', 'body': 'I think part of the problem is that we `cannot` resolve the path  from symbolic link - because the actual folder that symbolic link points to will be different after every commit. \r\n\r\nSo we need to find a way how to retain the original symbolic link when we we are parsing the files - but that one might be tricky as it will depend on the way how you actually got to the folder. \r\n\r\nAnother option is to only compare ""relative"" parts of the links. The thing is that - at least currently - fileloc / path will always be `rooted` at DAG_FOLDER - so what we really want to compare is the relative path from that - and a bit of complexity is that it\'s not entirely true for example dags.\r\n\r\nSo it\'s ... tricky.', 'created_at': datetime.datetime(2024, 9, 11, 13, 55, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344311480, 'issue_id': 2517472728, 'author': 'ephraimbuddy', 'body': '> I think part of the problem is that we `cannot` resolve the path from symbolic link - because the actual folder that symbolic link points to will be different after every commit.\r\n> \r\n> So we need to find a way how to retain the original symbolic link when we we are parsing the files - but that one might be tricky as it will depend on the way how you actually got to the folder.\r\n> \r\n> Another option is to only compare ""relative"" parts of the links. The thing is that - at least currently - fileloc / path will always be `rooted` at DAG_FOLDER - so what we really want to compare is the relative path from that - and a bit of complexity is that it\'s not entirely true for example dags.\r\n> \r\n> So it\'s ... tricky.\r\n\r\nShould we revert this change and target the fix for another release?', 'created_at': datetime.datetime(2024, 9, 11, 17, 45, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344354345, 'issue_id': 2517472728, 'author': 'potiuk', 'body': '> Should we revert this change and target the fix for another release?\r\n\r\nIf we can\'t find solution quickly, likely yes. \r\n\r\nBut I think what we should likely do is to understand that the abspath can contain "".worktrees"" and map them back to the ""symbolic link"" name and store them in both fileloc and directory - but it will likely need to come with some ""special case"" understanding - getting the DAG_FOLDER value and if we see that the the path does not contain DAG_FOLDER\r\n\r\n```\r\ndag.fileloc:  /opt/airflow/dags/repo/src/test_dags_folder.py, \r\ndag_directory : /opt/airflow/dags/.worktrees/99c104927b4b568d40d2331095c687817a580678/src \r\n```\r\n\r\nsmth like (pseudo-code):\r\n\r\n```python\r\nif not path.startswith(DAG_FOLDER):\r\n   # symbolic link for git-sync\r\n   split_the_paths\r\n   see where they start to differ (/opt/airflow/dags/ is common)\r\n   see that the next two follow `.worktrees\'  + ""looks_like_commit_hash""\r\n   replace "".worktrees""  + ""commit_hash"" with whatever next folder is in the DAG_FOLDER after `/opt/airflow/dags`\r\n```\r\n\r\nThat shoudl work if we make an assumption (which I think is pretty valid) that we have git-sync. It will not work, however is someone has symbolic links in their repos which are not git-sync created. \r\n\r\nIf there are other custom solutions where someone would also use symlinks to switch between folders more ""manually"" - might not work.\r\n\r\nThough I have not looked in details yet - at Airflow Summit, why really we get the problem in the first place - why dag_directory is ""resolved"" - maybe we can avoid it in general ?', 'created_at': datetime.datetime(2024, 9, 11, 18, 9, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346014383, 'issue_id': 2517472728, 'author': 'utkarsharma2', 'body': 'This looks more complicated than I initially thought. I agree with @ephraimbuddy that we should revert this PR and proceed with the release. That way we have more time to fix the issue properly.', 'created_at': datetime.datetime(2024, 9, 12, 11, 17, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346075027, 'issue_id': 2517472728, 'author': 'utkarsharma2', 'body': '> Though I have not looked in details yet - at Airflow Summit, why really we get the problem in the first place - why dag_directory is ""resolved"" - maybe we can avoid it in general ?\r\n\r\nI was also curious why we do it differently for fileloc and dag_directory. I didn\'t see anything in the initial [PR](https://github.com/apache/airflow/pull/25935/files#diff-827b7a469438ffd1b172ae295134a84c8a914c9ea4c9ea2a7d3de1f1d5aa6bb6) that introduced this method. \r\n\r\nAlso, the [scheduler command](https://github.com/apache/airflow/blame/35b4aa10e46b0a13f212adfcce4f28ba9823d8ef/airflow/utils/cli.py#L177) doesn\'t resolve the symbolic links initially.', 'created_at': datetime.datetime(2024, 9, 12, 11, 49, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2436995692, 'issue_id': 2517472728, 'author': 'belongwqz', 'body': 'first plan in 2.10.2, then 2.10.3, now 2.11.0, why ?', 'created_at': datetime.datetime(2024, 10, 25, 6, 36, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2438468282, 'issue_id': 2517472728, 'author': 'potiuk', 'body': ""> first plan in 2.10.2, then 2.10.3, now 2.11.0, why ?\r\n\r\nI guess, because it's difficult and no thig priority, but If you would like to step-in and attempt it - maybe you could help with it @belongwqz ?"", 'created_at': datetime.datetime(2024, 10, 25, 18, 1, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2529896427, 'issue_id': 2517472728, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 12, 10, 0, 16, 56, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-11 13:55:55 UTC): I think part of the problem is that we `cannot` resolve the path  from symbolic link - because the actual folder that symbolic link points to will be different after every commit. 

So we need to find a way how to retain the original symbolic link when we we are parsing the files - but that one might be tricky as it will depend on the way how you actually got to the folder. 

Another option is to only compare ""relative"" parts of the links. The thing is that - at least currently - fileloc / path will always be `rooted` at DAG_FOLDER - so what we really want to compare is the relative path from that - and a bit of complexity is that it's not entirely true for example dags.

So it's ... tricky.

ephraimbuddy on (2024-09-11 17:45:39 UTC): Should we revert this change and target the fix for another release?

potiuk on (2024-09-11 18:09:05 UTC): If we can't find solution quickly, likely yes. 

But I think what we should likely do is to understand that the abspath can contain "".worktrees"" and map them back to the ""symbolic link"" name and store them in both fileloc and directory - but it will likely need to come with some ""special case"" understanding - getting the DAG_FOLDER value and if we see that the the path does not contain DAG_FOLDER

```
dag.fileloc:  /opt/airflow/dags/repo/src/test_dags_folder.py, 
dag_directory : /opt/airflow/dags/.worktrees/99c104927b4b568d40d2331095c687817a580678/src 
```

smth like (pseudo-code):

```python
if not path.startswith(DAG_FOLDER):
   # symbolic link for git-sync
   split_the_paths
   see where they start to differ (/opt/airflow/dags/ is common)
   see that the next two follow `.worktrees'  + ""looks_like_commit_hash""
   replace "".worktrees""  + ""commit_hash"" with whatever next folder is in the DAG_FOLDER after `/opt/airflow/dags`
```

That shoudl work if we make an assumption (which I think is pretty valid) that we have git-sync. It will not work, however is someone has symbolic links in their repos which are not git-sync created. 

If there are other custom solutions where someone would also use symlinks to switch between folders more ""manually"" - might not work.

Though I have not looked in details yet - at Airflow Summit, why really we get the problem in the first place - why dag_directory is ""resolved"" - maybe we can avoid it in general ?

utkarsharma2 (Issue Creator) on (2024-09-12 11:17:27 UTC): This looks more complicated than I initially thought. I agree with @ephraimbuddy that we should revert this PR and proceed with the release. That way we have more time to fix the issue properly.

utkarsharma2 (Issue Creator) on (2024-09-12 11:49:26 UTC): I was also curious why we do it differently for fileloc and dag_directory. I didn't see anything in the initial [PR](https://github.com/apache/airflow/pull/25935/files#diff-827b7a469438ffd1b172ae295134a84c8a914c9ea4c9ea2a7d3de1f1d5aa6bb6) that introduced this method. 

Also, the [scheduler command](https://github.com/apache/airflow/blame/35b4aa10e46b0a13f212adfcce4f28ba9823d8ef/airflow/utils/cli.py#L177) doesn't resolve the symbolic links initially.

belongwqz on (2024-10-25 06:36:02 UTC): first plan in 2.10.2, then 2.10.3, now 2.11.0, why ?

potiuk on (2024-10-25 18:01:47 UTC): I guess, because it's difficult and no thig priority, but If you would like to step-in and attempt it - maybe you could help with it @belongwqz ?

github-actions[bot] on (2024-12-10 00:16:56 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2517401131,pull_request,closed,,Update ci.yml to address Issue #41932,"To modify the canary triggers after the code is committed to main or v2.x branches 
Issue : https://github.com/apache/airflow/issues/41932
@potiuk , can you review and approve if you feel that is good enough to close the issue.",pavansai1997,2024-09-10 18:53:58+00:00,[],2024-10-31 00:15:25+00:00,2024-10-31 00:15:25+00:00,https://github.com/apache/airflow/pull/42141,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:dev-tools', '')]","[{'comment_id': 2341777422, 'issue_id': 2517401131, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 10, 18, 54, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439071073, 'issue_id': 2517401131, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 10, 26, 0, 15, 11, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-10 18:54:02 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

github-actions[bot] on (2024-10-26 00:15:11 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2517106864,pull_request,closed,,New UI allow dag pause,"Add Switch to pause and unpause DAGs from the new UI DAGs List. Use react query cache to update the existing dags list result vs refetching the entire list on every change.

<img width=""821"" alt=""Screenshot 2024-09-10 at 10 30 09 AM"" src=""https://github.com/user-attachments/assets/4b75bf29-a609-4bc9-b486-4c09c268526a"">

Also:
- move the loading state to just the table and not its search/filter buttons.
- fix some nav button hover area and transition
- Datasets -> Assets
- Use timetable summary instead of the more verbose description

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-09-10 17:33:10+00:00,[],2024-09-30 08:32:39+00:00,2024-09-30 08:32:38+00:00,https://github.com/apache/airflow/pull/42140,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2342071070, 'issue_id': 2517106864, 'author': 'raphaelauv', 'body': '`Datasets -> Assets` :heart:', 'created_at': datetime.datetime(2024, 9, 10, 21, 51, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2343186678, 'issue_id': 2517106864, 'author': 'pierrejeambrun', 'body': 'Nice, I would just wait before merging this because in a bit I will completely remove the plug on the legacy API for the new UI and we will have to migrate the endpoints we need. (currently the list dags, and this adds patch dag)\r\n\r\nIf we add more and more using the legacy API, it will make things harder for me to do that switch because I will have to migrate more endpoints.', 'created_at': datetime.datetime(2024, 9, 11, 9, 57, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2382454702, 'issue_id': 2517106864, 'author': 'bbovenzi', 'body': 'Closing to redo with fastapi', 'created_at': datetime.datetime(2024, 9, 30, 8, 32, 38, tzinfo=datetime.timezone.utc)}]","raphaelauv on (2024-09-10 21:51:24 UTC): `Datasets -> Assets` :heart:

pierrejeambrun on (2024-09-11 09:57:52 UTC): Nice, I would just wait before merging this because in a bit I will completely remove the plug on the legacy API for the new UI and we will have to migrate the endpoints we need. (currently the list dags, and this adds patch dag)

If we add more and more using the legacy API, it will make things harder for me to do that switch because I will have to migrate more endpoints.

bbovenzi (Issue Creator) on (2024-09-30 08:32:38 UTC): Closing to redo with fastapi

"
2517086894,pull_request,closed,, Support multiline input for Params of type string in trigger UI form (#40414),Back-port  #40414 to Airflow 2.10 line,jscheffl,2024-09-10 17:26:54+00:00,[],2024-09-13 17:40:03+00:00,2024-09-10 19:10:52+00:00,https://github.com/apache/airflow/pull/42139,"[('area:webserver', 'Webserver related Issues'), ('kind:documentation', ''), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2516852434,pull_request,closed,,Fix task_instance and dag_run links from list views,"Fix links in dag_runs and task instances view.

When we use the redirection links for tasks or dag_run older that the `25` latest dag run the redirection does not work as expected.



Working on adding a few tests.

Closes: https://github.com/apache/airflow/issues/41406



Now clicking on an old dag run: (both from dag_run or task_instance page)
![Screenshot 2024-09-10 at 17 57 33](https://github.com/user-attachments/assets/119cda0d-0ac5-4b9a-9065-ce6f4b5558e3)

Now clicking on an old task instance:
![Screenshot 2024-09-10 at 17 57 59](https://github.com/user-attachments/assets/752ad8c6-e309-427a-acaa-401b4e5e57bd)


Before clicking on an old dag run:
![Screenshot 2024-09-10 at 17 59 33](https://github.com/user-attachments/assets/0305c75c-28ab-407e-b885-57ab687d7a52)

Before clicking on an old task instance:
![Screenshot 2024-09-10 at 18 00 21](https://github.com/user-attachments/assets/b452f7e3-cda8-452d-b497-2d34998360e8)



",pierrejeambrun,2024-09-10 15:55:53+00:00,[],2024-09-10 19:09:40+00:00,2024-09-10 19:09:38+00:00,https://github.com/apache/airflow/pull/42138,"[('area:webserver', 'Webserver related Issues'), ('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2516772666,pull_request,closed,,Make SAML a required dependency of Amazon provider,"Amazon provider with auth manager requires SAML onelogin import and it starts to be more and more problematic to skip the related tests for compatibility.

It seems appropriate to move saml to be a required dependency of Amazon provider in this case.

Since saml is only used by Amazon provider, we can also safely remove optional extra for it.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-10 15:22:29+00:00,[],2024-09-10 23:14:24+00:00,2024-09-10 16:31:39+00:00,https://github.com/apache/airflow/pull/42137,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('area:dev-tools', ''), ('area:system-tests', ''), ('provider:papermill', '')]",[],
2516722907,pull_request,closed,,"Add missing `role_id` parameter back to `auth_args` for hashicorp provider, remove bad deprecation message","<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
closes: #42125

Adds missing `role_id` parameter back to `auth_args` dict when hitting the `else` portion of the logic, i.e., when using an IAM role to get dynamic credentials instead of using a static access key and secret access key. This was broken when that `if-else` was modified by the following PR when support for this sort of dynamic credential usage was implemented (though probably never actually tested w/o a static key + access key): https://github.com/apache/airflow/pull/38536/files

Lastly, the `(deprecated)` message is removed from the UI when creating and editing a Vault connection. That parameter is only deprecated for the `approle` auth type and is REQUIRED for `aws_iam` auth, hence why we removed that here. Users adding that parameter when using the `approle` auth method will see a deprecation message/warning still in the logs so no need to confuse users utilizing `aws_iam` in the UI.

*this is a contribution to an open issue with the hashicorp provider, no core airflow files modified*

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",richard-iovanisci,2024-09-10 15:02:17+00:00,[],2024-11-07 00:14:56+00:00,2024-11-07 00:14:55+00:00,https://github.com/apache/airflow/pull/42134,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:providers', ''), ('provider:hashicorp', 'Hashicorp provider related issues')]","[{'comment_id': 2341168398, 'issue_id': 2516722907, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 10, 15, 2, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2341783268, 'issue_id': 2516722907, 'author': 'richard-iovanisci', 'body': 'Perhaps this example in the documentation for the VaultBackend should be updated to include `role_id` when building auth dict: https://airflow.apache.org/docs/apache-airflow-providers-hashicorp/stable/secrets-backends/hashicorp-vault.html#vault-authentication-with-aws-assume-role-sts', 'created_at': datetime.datetime(2024, 9, 10, 18, 56, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2341783848, 'issue_id': 2516722907, 'author': 'richard-iovanisci', 'body': 'cc @jordanbecketmoore ^^', 'created_at': datetime.datetime(2024, 9, 10, 18, 57, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346010346, 'issue_id': 2516722907, 'author': 'richard-iovanisci', 'body': '@hussein-awala, please let me know if anything critical is missing here... first time contributor 🫡', 'created_at': datetime.datetime(2024, 9, 12, 11, 15, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2452745359, 'issue_id': 2516722907, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 11, 2, 0, 14, 54, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-10 15:02:23 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

richard-iovanisci (Issue Creator) on (2024-09-10 18:56:49 UTC): Perhaps this example in the documentation for the VaultBackend should be updated to include `role_id` when building auth dict: https://airflow.apache.org/docs/apache-airflow-providers-hashicorp/stable/secrets-backends/hashicorp-vault.html#vault-authentication-with-aws-assume-role-sts

richard-iovanisci (Issue Creator) on (2024-09-10 18:57:07 UTC): cc @jordanbecketmoore ^^

richard-iovanisci (Issue Creator) on (2024-09-12 11:15:23 UTC): @hussein-awala, please let me know if anything critical is missing here... first time contributor 🫡

github-actions[bot] on (2024-11-02 00:14:54 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2516133364,pull_request,closed,,Fix typo in tableau.rst,"Missing letter in the ""Server"" word",andrii0yerko,2024-09-10 11:07:45+00:00,[],2024-09-10 15:51:39+00:00,2024-09-10 15:51:35+00:00,https://github.com/apache/airflow/pull/42131,"[('area:providers', ''), ('kind:documentation', ''), ('provider:tableau', '')]","[{'comment_id': 2340361762, 'issue_id': 2516133364, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 10, 11, 7, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2341328803, 'issue_id': 2516133364, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 10, 15, 51, 38, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-10 11:07:49 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-10 15:51:38 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2516063492,pull_request,closed,,Exclude partition from BigQuery table name,"- Bugfixed BigQuery table name splitting by excluding [partition](https://cloud.google.com/bigquery/docs/partitioned-tables#partition_decorators) name following after the ""$"".
- deprecated the function `split_tablename` which is identical to the method `BigQueryHook.split_tablename`.",moiseenkov,2024-09-10 10:35:38+00:00,[],2024-10-10 07:10:03+00:00,2024-09-11 16:52:19+00:00,https://github.com/apache/airflow/pull/42130,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2377321292, 'issue_id': 2516063492, 'author': 'nathadfield', 'body': 'I think I have discovered an issue with this commit that is affecting tasks that use the `BigQueryToBigQueryOperator` when copying a table into specific partition of another table.\r\n\r\nResults in an error like this.\r\n\r\n```\r\ngoogle.api_core.exceptions.BadRequest: 400 Failed to copy Non partitioned table to Column partitioned table: not supported.; reason: invalid, message: Failed to copy Non partitioned table to Column partitioned table: not supported.\r\n```\r\n\r\nI will dig into it more tomorrow and hopefully have a fix for it ASAP.', 'created_at': datetime.datetime(2024, 9, 26, 15, 39, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2377364087, 'issue_id': 2516063492, 'author': 'nathadfield', 'body': '@moiseenkov Why are we excluding the partition from the table_id?', 'created_at': datetime.datetime(2024, 9, 26, 15, 58, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2378632673, 'issue_id': 2516063492, 'author': 'moiseenkov', 'body': ""> @moiseenkov Why are we excluding the partition from the table_id?\r\n\r\nThe reason was that partitioning breaks integration of this operator with Google Cloud Dataplex when it is launched in Cloud Composer. Apparently, my fix introduced another bug, so we should probably revert it. Regarding the initial problem with integration, I think we can take care of it on the Cloud Composer's side. Sorry for troubling."", 'created_at': datetime.datetime(2024, 9, 27, 7, 47, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2378643021, 'issue_id': 2516063492, 'author': 'nathadfield', 'body': ""@moiseenkov No worries.  It's not your fault.  We should have better test coverage.  Do you want to revert it?"", 'created_at': datetime.datetime(2024, 9, 27, 7, 53, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2378649147, 'issue_id': 2516063492, 'author': 'moiseenkov', 'body': ""> @moiseenkov No worries. It's not your fault. We should have better test coverage. Do you want to revert it?\r\n\r\nThis PR contains one valuable deprecation which we'd like to keep. Thus we will introduce another PR that only reverts the breaking changes."", 'created_at': datetime.datetime(2024, 9, 27, 7, 57, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2378652151, 'issue_id': 2516063492, 'author': 'nathadfield', 'body': 'Sounds good!  I will actually look at adding a test to the `BigQueryToBigQueryOperator` for this scenario too.', 'created_at': datetime.datetime(2024, 9, 27, 7, 59, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2378683094, 'issue_id': 2516063492, 'author': 'moiseenkov', 'body': 'Thanks!', 'created_at': datetime.datetime(2024, 9, 27, 8, 7, 38, tzinfo=datetime.timezone.utc)}]","nathadfield on (2024-09-26 15:39:47 UTC): I think I have discovered an issue with this commit that is affecting tasks that use the `BigQueryToBigQueryOperator` when copying a table into specific partition of another table.

Results in an error like this.

```
google.api_core.exceptions.BadRequest: 400 Failed to copy Non partitioned table to Column partitioned table: not supported.; reason: invalid, message: Failed to copy Non partitioned table to Column partitioned table: not supported.
```

I will dig into it more tomorrow and hopefully have a fix for it ASAP.

nathadfield on (2024-09-26 15:58:56 UTC): @moiseenkov Why are we excluding the partition from the table_id?

moiseenkov (Issue Creator) on (2024-09-27 07:47:48 UTC): The reason was that partitioning breaks integration of this operator with Google Cloud Dataplex when it is launched in Cloud Composer. Apparently, my fix introduced another bug, so we should probably revert it. Regarding the initial problem with integration, I think we can take care of it on the Cloud Composer's side. Sorry for troubling.

nathadfield on (2024-09-27 07:53:54 UTC): @moiseenkov No worries.  It's not your fault.  We should have better test coverage.  Do you want to revert it?

moiseenkov (Issue Creator) on (2024-09-27 07:57:33 UTC): This PR contains one valuable deprecation which we'd like to keep. Thus we will introduce another PR that only reverts the breaking changes.

nathadfield on (2024-09-27 07:59:16 UTC): Sounds good!  I will actually look at adding a test to the `BigQueryToBigQueryOperator` for this scenario too.

moiseenkov (Issue Creator) on (2024-09-27 08:07:38 UTC): Thanks!

"
2516027764,pull_request,closed,,Deprecated configuration removed,Deprecated configuration removed,dirrao,2024-09-10 10:19:06+00:00,['dirrao'],2024-09-16 15:20:35+00:00,2024-09-16 15:20:35+00:00,https://github.com/apache/airflow/pull/42129,"[('area:providers', ''), ('provider:fab', ''), ('airflow3.0:candidate', 'Potential candidates for Airflow 3.0'), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]",[],
2515921719,pull_request,closed,,Restructure FastAPI API,"- Restructure the new api folder to include views folder `ui` for private endpoints and `public` for the public ones
- Rename the `UI API` api into a more generic `FASTAPI API` for development time.
- Adapted the openapi generation code and app code to have the `ui` endpoints included in the generated spec (useful for front-end code gen), but removed from the exposed fastapi docs/swagger. (I don't think private `ui` endpoint should appear in the `/docs`, otherwise users might be tempted to use them).

A follow up PR will come that will migrate the first legacy **public** endpoint to the new fastapi. (list dags).",pierrejeambrun,2024-09-10 09:33:57+00:00,[],2024-09-10 17:12:42+00:00,2024-09-10 17:12:40+00:00,https://github.com/apache/airflow/pull/42128,"[('area:CLI', ''), ('area:dev-tools', ''), ('AIP-84', 'Modern Rest API')]","[{'comment_id': 2341079964, 'issue_id': 2515921719, 'author': 'bbovenzi', 'body': 'Looks like we might need to add `fastapi` to the spellcheck ignore', 'created_at': datetime.datetime(2024, 9, 10, 14, 45, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2341106686, 'issue_id': 2515921719, 'author': 'pierrejeambrun', 'body': '> Looks like we might need to add fastapi to the spellcheck ignore\r\n\r\nYes done thanks.-', 'created_at': datetime.datetime(2024, 9, 10, 14, 50, 38, tzinfo=datetime.timezone.utc)}]","bbovenzi on (2024-09-10 14:45:29 UTC): Looks like we might need to add `fastapi` to the spellcheck ignore

pierrejeambrun (Issue Creator) on (2024-09-10 14:50:38 UTC): Yes done thanks.-

"
2515699465,pull_request,closed,,Deprecated database configuration removed,Deprecated database configuration removed,dirrao,2024-09-10 07:59:54+00:00,['dirrao'],2024-11-09 03:31:49+00:00,2024-09-17 14:37:25+00:00,https://github.com/apache/airflow/pull/42126,"[('area:core', ''), ('airflow3.0:candidate', 'Potential candidates for Airflow 3.0'), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]","[{'comment_id': 2462476840, 'issue_id': 2515699465, 'author': 'amoghrajesh', 'body': '@dirrao was this supposed to be targetted for 2.10.3 also?\r\ncc @zachliu', 'created_at': datetime.datetime(2024, 11, 7, 15, 8, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2466018550, 'issue_id': 2515699465, 'author': 'dirrao', 'body': '> @dirrao was this supposed to be targetted for 2.10.3 also?\r\n> cc @zachliu\r\n\r\n@amoghrajesh This was intended for Airflow 3.', 'created_at': datetime.datetime(2024, 11, 9, 3, 31, 48, tzinfo=datetime.timezone.utc)}]","amoghrajesh on (2024-11-07 15:08:49 UTC): @dirrao was this supposed to be targetted for 2.10.3 also?
cc @zachliu

dirrao (Issue Creator) on (2024-11-09 03:31:48 UTC): @amoghrajesh This was intended for Airflow 3.

"
2515305015,pull_request,closed,,Move Dags list state to url params,"Move sort, filter and pagination table state to url parameters


---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-09-10 03:16:04+00:00,[],2024-09-10 13:56:24+00:00,2024-09-10 13:56:22+00:00,https://github.com/apache/airflow/pull/42124,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2514915234,pull_request,closed,,Added functionality for creating links between batch objects through cross-references in Weaviate,"
Allows efficient creation of links between objects in batches, leveraging concurrent requests and configurable batch sizes.

Added comprehensive unit tests to validate the functionality.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",harjeevanmaan,2024-09-09 21:02:21+00:00,[],2024-09-29 15:40:37+00:00,2024-09-29 15:40:37+00:00,https://github.com/apache/airflow/pull/42122,"[('area:providers', ''), ('provider:weaviate', '')]",[],
2514846419,pull_request,closed,,docs: Remove outdated 'executor' reference from run() method docstring,"The `executor=None` keyword argument was intentionally removed in the `v2-10-test` branch. However, the method's docstring still references this argument, which is no longer present in the function signature. This PR removes the outdated reference to align the documentation with the current code implementation.",wonseokyang-de,2024-09-09 20:23:09+00:00,[],2024-09-10 17:27:53+00:00,2024-09-10 17:27:53+00:00,https://github.com/apache/airflow/pull/42121,[],[],
2514713883,pull_request,closed,,Improve DAGs table UI,"Add search, filter and sort buttons to the DAGs list. Only sort and toggling upaused DAGs works for now, the rest are disabled placeholders in order to build out the base UI.

Also adjust table row colors and add scrolling to table components where the table head stays sticky.

![Screenshot 2024-09-09 at 10 34 40 AM](https://github.com/user-attachments/assets/873b8b9f-84c0-4a4a-ba85-e7105e8f5336)

![Screenshot 2024-09-09 at 10 34 53 AM](https://github.com/user-attachments/assets/97f481e4-4f98-431a-bd8c-751e2c4f9255)

![dags_scroll](https://github.com/user-attachments/assets/2c2482fe-d6cc-416e-943a-d2a13c9f94c4)


---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-09-09 19:10:15+00:00,[],2024-09-10 03:03:43+00:00,2024-09-10 03:03:41+00:00,https://github.com/apache/airflow/pull/42119,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2514438634,pull_request,closed,,Log INFO not ERROR in schedule when task has failure,"You have to think about the context where this is emitted.  It is emitted in the scheduler.  It's not a scheduler error.
",dstandish,2024-09-09 16:48:36+00:00,[],2024-09-09 20:51:04+00:00,2024-09-09 20:51:02+00:00,https://github.com/apache/airflow/pull/42116,[],[],
2514392887,pull_request,closed,,Add `on_kill` to Databricks Workflow Operator,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
The Databricks Provider did not implement `on_kill` to cancel tasks generated by `_CreateDatabricksWorkflowOperator`. This led to data quality issues, where Airflow would report a cancellation due to timeout; however, the corresponding workflow task would continue to run on Databricks.

This PR implements `on_kill` for `_CreateDatabricksWorkflowOperator`.

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",R7L208,2024-09-09 16:25:10+00:00,[],2024-10-03 12:36:34+00:00,2024-10-03 12:36:30+00:00,https://github.com/apache/airflow/pull/42115,"[('area:providers', ''), ('provider:databricks', '')]","[{'comment_id': 2338556348, 'issue_id': 2514392887, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 9, 16, 25, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387284548, 'issue_id': 2514392887, 'author': 'R7L208', 'body': ""hey @pankajkoti - Any ETA on when you'd be able to review this PR? 🙏"", 'created_at': datetime.datetime(2024, 10, 1, 23, 57, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2388845200, 'issue_id': 2514392887, 'author': 'R7L208', 'body': 'Opened #42668 \r\n\r\n@pankajkoti @eladkal - can you please assign someone to review?', 'created_at': datetime.datetime(2024, 10, 2, 14, 43, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2388923468, 'issue_id': 2514392887, 'author': 'pankajkoti', 'body': '@R7L208 Can you please update the PR description based on the altered scope of this PR?', 'created_at': datetime.datetime(2024, 10, 2, 15, 9, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2389238957, 'issue_id': 2514392887, 'author': 'R7L208', 'body': ""@pankajkoti - it's been updated"", 'created_at': datetime.datetime(2024, 10, 2, 17, 36, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2389254977, 'issue_id': 2514392887, 'author': 'pankajkoti', 'body': '> @pankajkoti - it\'s been updated\r\n\r\n@R7L208 it\'s not. It mentions about DatabricksSqlHook queries (""SQL queries submitted by DatabricksSqlHook"") & using threading (""uses threading to cancel SQL queries submitted by DatabricksSqlHook.run()"") which we no longer have in this PR. Could you please re-read the description and update to what\'s limited to the scope of this PR.\r\n\r\nAlso, _CreateDatabricksWorkflowOperator does not rely on DatabricksSqlHook, but leverages DatabricksHook just in case you missed checking that :)', 'created_at': datetime.datetime(2024, 10, 2, 17, 45, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2389264100, 'issue_id': 2514392887, 'author': 'R7L208', 'body': '@pankajkoti - Apologies! I read PR title instead of PR description 🤦 \r\n\r\nPR description is now updated', 'created_at': datetime.datetime(2024, 10, 2, 17, 50, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2391311331, 'issue_id': 2514392887, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 3, 12, 36, 32, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-09 16:25:15 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

R7L208 (Issue Creator) on (2024-10-01 23:57:42 UTC): hey @pankajkoti - Any ETA on when you'd be able to review this PR? 🙏

R7L208 (Issue Creator) on (2024-10-02 14:43:45 UTC): Opened #42668 

@pankajkoti @eladkal - can you please assign someone to review?

pankajkoti on (2024-10-02 15:09:30 UTC): @R7L208 Can you please update the PR description based on the altered scope of this PR?

R7L208 (Issue Creator) on (2024-10-02 17:36:03 UTC): @pankajkoti - it's been updated

pankajkoti on (2024-10-02 17:45:26 UTC): @R7L208 it's not. It mentions about DatabricksSqlHook queries (""SQL queries submitted by DatabricksSqlHook"") & using threading (""uses threading to cancel SQL queries submitted by DatabricksSqlHook.run()"") which we no longer have in this PR. Could you please re-read the description and update to what's limited to the scope of this PR.

Also, _CreateDatabricksWorkflowOperator does not rely on DatabricksSqlHook, but leverages DatabricksHook just in case you missed checking that :)

R7L208 (Issue Creator) on (2024-10-02 17:50:58 UTC): @pankajkoti - Apologies! I read PR title instead of PR description 🤦 

PR description is now updated

boring-cyborg[bot] on (2024-10-03 12:36:32 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2514253464,pull_request,closed,,Fix details tab log url detection (#42104),"Backporting of https://github.com/apache/airflow/pull/42104

(cherry picked from commit https://github.com/apache/airflow/commit/b5439323927d81270db0a957a9e1c27dbbfe720b)",pierrejeambrun,2024-09-09 15:17:49+00:00,[],2024-09-09 17:25:04+00:00,2024-09-09 16:44:04+00:00,https://github.com/apache/airflow/pull/42114,"[('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
2514250019,pull_request,closed,,Fix failing compatibility test: importing missing saml for old airflows,"The Compatibility tests for AWS are failing after recent changes as they attempt to import saml library before skipping the tests when the import is missing.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-09 15:16:15+00:00,[],2024-09-09 20:15:30+00:00,2024-09-09 20:15:30+00:00,https://github.com/apache/airflow/pull/42113,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('area:system-tests', '')]",[],
2514111341,pull_request,closed,,fix indentation for unit test contribution docs,"The header levels in the unit test contribution docs have been messed up.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-09 14:19:59+00:00,[],2024-09-09 14:41:50+00:00,2024-09-09 14:41:48+00:00,https://github.com/apache/airflow/pull/42110,"[('area:dev-tools', '')]","[{'comment_id': 2338272845, 'issue_id': 2514111341, 'author': 'potiuk', 'body': 'Before: \r\n\r\n<img width=""418"" alt=""Screenshot 2024-09-09 at 07 23 36"" src=""https://github.com/user-attachments/assets/229b9df1-3684-4637-a565-db79eb0f8c29"">\r\n\r\nAfter:\r\n\r\n<img width=""389"" alt=""Screenshot 2024-09-09 at 07 24 19"" src=""https://github.com/user-attachments/assets/6bfcf32c-853e-4d88-ac5b-e6c2c17a218f"">', 'created_at': datetime.datetime(2024, 9, 9, 14, 25, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2338276812, 'issue_id': 2514111341, 'author': 'potiuk', 'body': 'Just in time for the upcoming contribution workshop @RNHTTR !', 'created_at': datetime.datetime(2024, 9, 9, 14, 27, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2338292934, 'issue_id': 2514111341, 'author': 'potiuk', 'body': '> Nice! I wonder how you noticed it :) \r\n\r\nThe table of contents is available in Github but you need to open it and it\'s not too discoverable, unfortunately, so no wonder you did not know :\r\n\r\n<img width=""2056"" alt=""Screenshot 2024-09-09 at 07 29 59"" src=""https://github.com/user-attachments/assets/17a8375c-d1f5-4418-a781-99b90969d024"">', 'created_at': datetime.datetime(2024, 9, 9, 14, 33, 27, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-09 14:25:28 UTC): Before: 

<img width=""418"" alt=""Screenshot 2024-09-09 at 07 23 36"" src=""https://github.com/user-attachments/assets/229b9df1-3684-4637-a565-db79eb0f8c29"">

After:

<img width=""389"" alt=""Screenshot 2024-09-09 at 07 24 19"" src=""https://github.com/user-attachments/assets/6bfcf32c-853e-4d88-ac5b-e6c2c17a218f"">

potiuk (Issue Creator) on (2024-09-09 14:27:09 UTC): Just in time for the upcoming contribution workshop @RNHTTR !

potiuk (Issue Creator) on (2024-09-09 14:33:27 UTC): The table of contents is available in Github but you need to open it and it's not too discoverable, unfortunately, so no wonder you did not know :

<img width=""2056"" alt=""Screenshot 2024-09-09 at 07 29 59"" src=""https://github.com/user-attachments/assets/17a8375c-d1f5-4418-a781-99b90969d024"">

"
2514082315,pull_request,closed,,Fix typo in plugins.rst (#42106),"Fix typo in plugins.rst (https://github.com/apache/airflow/pull/42106)
I'm not sure if my change is correct but I'm assuming the word `until` was missing in the sentence.

Otherwise that would mean that the plugin changes are never used right?

(cherry picked from commit https://github.com/apache/airflow/commit/b70e3d098576d0313f058951c98878f37854fbcc)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-09 14:08:13+00:00,[],2024-09-13 17:37:37+00:00,2024-09-09 15:23:47+00:00,https://github.com/apache/airflow/pull/42108,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:CLI', ''), ('area:dev-tools', ''), ('area:API', ""Airflow's REST/HTTP API""), ('area:production-image', 'Production image improvements and fixes'), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2514024067,pull_request,closed,,Fix typo in plugins.rst,"I'm not sure if my change is correct but I'm assuming the word `until` was missing in the sentence.

Otherwise that would mean that the plugin changes are never used right?",andres-lowrie,2024-09-09 13:46:35+00:00,[],2024-09-09 14:25:33+00:00,2024-09-09 14:06:48+00:00,https://github.com/apache/airflow/pull/42106,"[('area:plugins', ''), ('kind:documentation', '')]","[{'comment_id': 2338174880, 'issue_id': 2514024067, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 9, 13, 46, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2338226346, 'issue_id': 2514024067, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 9, 14, 6, 50, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-09 13:46:40 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-09 14:06:50 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2513995021,pull_request,closed,,Fix details tab log url detection,"Use the same regexp that we have for the legacy log page which is more complex and robust. This will also enforce consistancy between the two pages. Cf screenshot the url was not properly matched, `!((` was causing trouble.

### Before
![Screenshot 2024-09-09 at 15 33 19](https://github.com/user-attachments/assets/cb5cdb19-2b18-4d09-a66f-8e50f45ab41b)


### After
![Screenshot 2024-09-09 at 15 32 37](https://github.com/user-attachments/assets/a90eff14-1fa5-4c3c-babe-42727b25296c)
",pierrejeambrun,2024-09-09 13:35:35+00:00,[],2024-09-09 15:14:26+00:00,2024-09-09 15:14:24+00:00,https://github.com/apache/airflow/pull/42104,"[('area:webserver', 'Webserver related Issues'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2338157230, 'issue_id': 2513995021, 'author': 'pierrejeambrun', 'body': 'Needs to be backported', 'created_at': datetime.datetime(2024, 9, 9, 13, 39, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2338321233, 'issue_id': 2513995021, 'author': 'pierrejeambrun', 'body': ""Just added a test as well. There's a couple of html entity decimal code involved for the assertion to escape the `'` and `&`,I couldn't find a better way to assert this complex url in the test."", 'created_at': datetime.datetime(2024, 9, 9, 14, 43, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2338364160, 'issue_id': 2513995021, 'author': 'potiuk', 'body': ""> Just added a test as well. There's a couple of html entity decimal code involved for the assertion to escape the `'` and `&`,I couldn't find a better way to assert this complex url in the test.\r\n\r\nNice. \r\n\r\n```\r\nYou have problem - introduce regexp, now you have 2 problems.\r\n```\r\n\r\nVery apt."", 'created_at': datetime.datetime(2024, 9, 9, 15, 0, 30, tzinfo=datetime.timezone.utc)}]","pierrejeambrun (Issue Creator) on (2024-09-09 13:39:18 UTC): Needs to be backported

pierrejeambrun (Issue Creator) on (2024-09-09 14:43:17 UTC): Just added a test as well. There's a couple of html entity decimal code involved for the assertion to escape the `'` and `&`,I couldn't find a better way to assert this complex url in the test.

potiuk on (2024-09-09 15:00:30 UTC): Nice. 

```
You have problem - introduce regexp, now you have 2 problems.
```

Very apt.

"
2513992696,pull_request,open,,mark dag_run and ti as automatically injected,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Allow the usage of the mypy plugins to typecheck the `@task` annotated tasks. With this change it will be possible to avoid mypy complains when definiing a task like in https://airflow.apache.org/docs/apache-airflow/stable/tutorial/taskflow.html#accessing-context-variables-in-decorated-tasks with `ti` as an automatically injected parameter.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",ZeeD,2024-09-09 13:34:37+00:00,[],2024-12-18 11:16:21+00:00,,https://github.com/apache/airflow/pull/42103,"[('area:dev-tools', '')]","[{'comment_id': 2338145485, 'issue_id': 2513992696, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 9, 13, 34, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2338163457, 'issue_id': 2513992696, 'author': 'potiuk', 'body': 'cc: @uranusjr - as our MyPy / Typing expert - what do you think? That looks cool.', 'created_at': datetime.datetime(2024, 9, 9, 13, 41, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439071092, 'issue_id': 2513992696, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 10, 26, 0, 15, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2439346025, 'issue_id': 2513992696, 'author': 'ZeeD', 'body': 'Ho @potiuk @uranusjr \r\nDo You think this PR would be helpful?', 'created_at': datetime.datetime(2024, 10, 26, 5, 3, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2540264983, 'issue_id': 2513992696, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 12, 13, 0, 16, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2540455931, 'issue_id': 2513992696, 'author': 'ZeeD', 'body': 'Yet again... \r\n@potiuk @uranusjr\r\nDo You think this PR would be helpful?', 'created_at': datetime.datetime(2024, 12, 13, 3, 27, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2541203179, 'issue_id': 2513992696, 'author': 'potiuk', 'body': '@uranusjr -> WDYT? I think there were some plans for those MyPy checks but I know no details', 'created_at': datetime.datetime(2024, 12, 13, 11, 6, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2541203830, 'issue_id': 2513992696, 'author': 'potiuk', 'body': 'I rebased the PR BTW', 'created_at': datetime.datetime(2024, 12, 13, 11, 6, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2542996131, 'issue_id': 2513992696, 'author': 'ashb', 'body': 'Does this mypy plug-in get used outside of the airflow repo?\n\nCan you give an example of where this change helps mypy (I assume to not error in some cases)?', 'created_at': datetime.datetime(2024, 12, 14, 8, 10, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2543636639, 'issue_id': 2513992696, 'author': 'ZeeD', 'body': '@ashb I use a copy of this plugin in my project, to help me during the dag authoring.\r\n\r\nIn my case I relies on taskflow definition and I have a bunch of `@task` annotated functions, and I want to typecheck the task connections. A dummy example would be something like\r\n\r\n```python\r\n\r\n@task\r\ndef retrieve_url(dag_run: DagRun) -> str:\r\n    """"""something that uses dag_run.conf""""""\r\n    return dag_run.conf[\'url\']\r\n\r\n@task\r\ndef print_content(url: str) -> None:\r\n    """"""something that uses url from xcom""""""\r\n    print(request.get(url))\r\n\r\n@dag\r\ndef my_dag() -> DAG:\r\n   url = retrieve_url() # dag_run is not passed\r\n   print_content(url) # url is passed\r\n\r\nmy_dag()\r\n```\r\n\r\nwithout the plugin I would have had errors in the dag definition or rely on `**context` in the task witch is clumsy to use', 'created_at': datetime.datetime(2024, 12, 15, 9, 26, 51, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-09 13:34:41 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-09-09 13:41:56 UTC): cc: @uranusjr - as our MyPy / Typing expert - what do you think? That looks cool.

github-actions[bot] on (2024-10-26 00:15:13 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

ZeeD (Issue Creator) on (2024-10-26 05:03:18 UTC): Ho @potiuk @uranusjr 
Do You think this PR would be helpful?

github-actions[bot] on (2024-12-13 00:16:51 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

ZeeD (Issue Creator) on (2024-12-13 03:27:35 UTC): Yet again... 
@potiuk @uranusjr
Do You think this PR would be helpful?

potiuk on (2024-12-13 11:06:07 UTC): @uranusjr -> WDYT? I think there were some plans for those MyPy checks but I know no details

potiuk on (2024-12-13 11:06:29 UTC): I rebased the PR BTW

ashb on (2024-12-14 08:10:15 UTC): Does this mypy plug-in get used outside of the airflow repo?

Can you give an example of where this change helps mypy (I assume to not error in some cases)?

ZeeD (Issue Creator) on (2024-12-15 09:26:51 UTC): @ashb I use a copy of this plugin in my project, to help me during the dag authoring.

In my case I relies on taskflow definition and I have a bunch of `@task` annotated functions, and I want to typecheck the task connections. A dummy example would be something like

```python

@task
def retrieve_url(dag_run: DagRun) -> str:
    """"""something that uses dag_run.conf""""""
    return dag_run.conf['url']

@task
def print_content(url: str) -> None:
    """"""something that uses url from xcom""""""
    print(request.get(url))

@dag
def my_dag() -> DAG:
   url = retrieve_url() # dag_run is not passed
   print_content(url) # url is passed

my_dag()
```

without the plugin I would have had errors in the dag definition or rely on `**context` in the task witch is clumsy to use

"
2513942185,pull_request,closed,,Re-Add 'executor=None' argument in run() method,"Upon checking the blame history, I found that there were no specific changes that removed the executor=None keyword argument from this method. This argument was present in version 2.9, but for reasons that are unclear (or that I may have missed in my search), it seems to have been removed in the current version.

Interestingly, the docstring for the method still references the executor argument, which suggests a discrepancy between the code and its documentation. Given this inconsistency, I am submitting this PR to restore the executor=None argument, ensuring that the method signature aligns with its intended functionality and the existing documentation.",wonseokyang-de,2024-09-09 13:15:03+00:00,[],2024-09-09 20:18:40+00:00,2024-09-09 20:14:50+00:00,https://github.com/apache/airflow/pull/42102,[],"[{'comment_id': 2339008950, 'issue_id': 2513942185, 'author': 'wonseokyang-de', 'body': ""After further investigation, I found that the removal of `executor=None` was intentional in the `v2-10-test` branch. Therefore, I'm closing this PR and will open a new one to update the docstring to match the current method signature."", 'created_at': datetime.datetime(2024, 9, 9, 20, 18, 39, tzinfo=datetime.timezone.utc)}]","wonseokyang-de (Issue Creator) on (2024-09-09 20:18:39 UTC): After further investigation, I found that the removal of `executor=None` was intentional in the `v2-10-test` branch. Therefore, I'm closing this PR and will open a new one to update the docstring to match the current method signature.

"
2513887643,pull_request,closed,,Exclude universal-pathlib 0.2.4 as it breaks our integration (#42…,"…090)

Universal Pathlib 0.2.4 adds extra validation for Paths and our integration with local file paths Does not work with it. The 0.2.5 version fixes it.

Tracked in https://github.com/fsspec/universal_pathlib/issues/276

(cherry picked from commit 2517da47694f021ae43a07deb7d2e33d456baef4)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-09 12:52:16+00:00,[],2024-09-13 17:40:38+00:00,2024-09-11 19:05:33+00:00,https://github.com/apache/airflow/pull/42101,"[('type:misc/internal', 'Changelog: Misc changes that should appear in change log')]","[{'comment_id': 2338045273, 'issue_id': 2513887643, 'author': 'potiuk', 'body': 'Backport of #42090', 'created_at': datetime.datetime(2024, 9, 9, 12, 52, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344160313, 'issue_id': 2513887643, 'author': 'potiuk', 'body': ""Let's merge it :)"", 'created_at': datetime.datetime(2024, 9, 11, 16, 46, 36, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-09 12:52:37 UTC): Backport of #42090

potiuk (Issue Creator) on (2024-09-11 16:46:36 UTC): Let's merge it :)

"
2513659019,pull_request,closed,,Logging deprecated configuration removed,Logging deprecated configuration removed,dirrao,2024-09-09 11:12:02+00:00,['dirrao'],2024-09-11 23:45:07+00:00,2024-09-11 23:45:07+00:00,https://github.com/apache/airflow/pull/42100,"[('area:logging', ''), ('airflow3.0:candidate', 'Potential candidates for Airflow 3.0'), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]","[{'comment_id': 2339771185, 'issue_id': 2513659019, 'author': 'dirrao', 'body': 'Unrelated test is failing.', 'created_at': datetime.datetime(2024, 9, 10, 6, 24, 13, tzinfo=datetime.timezone.utc)}]","dirrao (Issue Creator) on (2024-09-10 06:24:13 UTC): Unrelated test is failing.

"
2513523990,pull_request,closed,,Fix the system test: `dataflow_native_java`,"This PR is adding a logic to use a shared folder for the `example_dataflow_native_java` system test.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",molcay,2024-09-09 10:09:58+00:00,[],2024-09-09 13:06:25+00:00,2024-09-09 13:06:25+00:00,https://github.com/apache/airflow/pull/42099,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', '')]",[],
2513454682,pull_request,closed,,Add openapi generation hook for UI API,"Add a new pre-commit hook and utility script to persist to file the FastAPI openapi spec.

This will be useful for a follow up PR that will generate front-end types and query based on that spec.

Also it is useful for reviewer to see the openapi spec to easily identify breaking change or assess the impact of a PR on the interface. Later on automatic breaking change detection could be enforced in the CI I suppose.

> Note: Excluded from apache licence because it is a generated file.",pierrejeambrun,2024-09-09 09:39:39+00:00,[],2024-09-09 13:10:25+00:00,2024-09-09 11:46:29+00:00,https://github.com/apache/airflow/pull/42098,"[('area:dev-tools', '')]","[{'comment_id': 2337920513, 'issue_id': 2513454682, 'author': 'potiuk', 'body': 'Cool. I found this one https://github.com/OpenAPITools/openapi-diff - maybe we can also (later when we get to be much closer) to employ that one to produce the diff ?', 'created_at': datetime.datetime(2024, 9, 9, 11, 55, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2338085908, 'issue_id': 2513454682, 'author': 'pierrejeambrun', 'body': ""Yes this would be really helpful to have this kind of tool added to the CI. I'll keep that in mind for later"", 'created_at': datetime.datetime(2024, 9, 9, 13, 10, 6, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-09 11:55:26 UTC): Cool. I found this one https://github.com/OpenAPITools/openapi-diff - maybe we can also (later when we get to be much closer) to employ that one to produce the diff ?

pierrejeambrun (Issue Creator) on (2024-09-09 13:10:06 UTC): Yes this would be really helpful to have this kind of tool added to the CI. I'll keep that in mind for later

"
2513370073,pull_request,closed,,AI-Driven Enhancement for Kerberos Authentication,"AI-Enabled Improvement of Kerberos Authentication 
 
 Summary 
 As a result of addition of new AI-driven metrics and the optimization of the codes drawn into the LFR (Learning Fair Representations) preprocessing algorithm, the algorithm has been advanced. Such updates are, for example, the possibility of calculating disparity ratios or an improved fixture management as well as parameterized testing. The script also contains some enhancements in the naming of the functions making them more readable as well as adhering to the Python standards. 
 
 Discussions 
 Pay attention to the fairness metrics and improve the testing LFR as a framework. 

 QA Instructions 
 Check calculation of the fairness metrics and test the LFR algorithm to a sufficient extent.
 
 Merge Plan 
 Make it a rule to read all the metrics and testing updates before merging in order to avoid making changes to the wrong file. 
 
Motivation and Context 
 It also guarantees that all the fairness concerns are taken care of by the incorporation of AI-generated metrics, besides the quality of the code being enhanced through the new testing procedure and other improvements in the script. 
 
 Types of Changes 
 Feature addition: Fairness metrics. 
 Testing enhancement: Advanced testing framework is that it has the provision to set up different test environments depending on the needs of testing. 
 Code improvement: Some of the improvements made are; better naming of functions and improved readability. 
 Here's a structured explanation for your pull request:Here's a structured explanation for your pull request: 
 
 Summary 
 This update improves Kerberos authentication since the update includes a detection of any anomaly using an AI system. The new model incorporates the IsolationForest to capture the anomalous pattern of the authentication which in turn increase security by identifying security threats. The examples are processed and normalized using the StandardScaler to the user behavior data that can be further analyzed for anomalies Detection of the system and it is monitored and analyzed for the improvement of the user behavior in real-time. 
 
 Related Issues 
 N/A 
 Discussions 
 This has to do with how the anomaly detection through AI enhances the security of Kerberos authentication. 
 QA Instructions 
 It is pertinent that one should test an anomaly detection under different set of authentication settings. 
 Merge Plan 
 Just make sure that anomaly detection is functional and has been tested before they are merged. 
 Motivation and Context 
 These advancements in anomaly detection can make Kerberos more secure and offers better protection with the integration of better more intelligent AI approach. 
 
 Types of Changes 
 Feature addition: AI based anomaly detection. 
 Security enhancement: Real-time monitoring and managing of user behavioral patterns and real time handling of abnormal activity. 
 


<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",RahulVadisetty91,2024-09-09 09:02:07+00:00,[],2024-10-31 00:15:26+00:00,2024-10-31 00:15:26+00:00,https://github.com/apache/airflow/pull/42097,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file')]","[{'comment_id': 2439071111, 'issue_id': 2513370073, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 10, 26, 0, 15, 14, tzinfo=datetime.timezone.utc)}]","github-actions[bot] on (2024-10-26 00:15:14 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2513077810,pull_request,closed,,Move DAGs table to a reusable DataTable component,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Move the DAGs Table to a reusable DataTable ui component that can be used for other tables as well.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",DjVinnii,2024-09-09 06:57:04+00:00,[],2024-09-10 09:21:17+00:00,2024-09-09 17:43:20+00:00,https://github.com/apache/airflow/pull/42095,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2337281360, 'issue_id': 2513077810, 'author': 'DjVinnii', 'body': 'By the way, I noticed coverage is not setup yet for the new UI. Any plans on doing this soon?', 'created_at': datetime.datetime(2024, 9, 9, 6, 58, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2337371757, 'issue_id': 2513077810, 'author': 'pierrejeambrun', 'body': ""Thank you for the PR,\r\n\r\nI don't think we planned on adding coverage for front-end tests in a near future but that might be a great addition indeed!\r\n\r\nThere are some static checks failure to fix. You can install these checks locally with pre-commit hook to help catch them earlier in the development phase and not have to wait for the CI. You can find more information in https://github.com/apache/airflow/blob/main/contributing-docs/03_contributors_quick_start.rst#configuring-pre-commit"", 'created_at': datetime.datetime(2024, 9, 9, 7, 46, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2337662648, 'issue_id': 2513077810, 'author': 'DjVinnii', 'body': ""Hi @pierrejeambrun! Thanks for the quick comment. The checks should be passing now, lets see if the CI succeeds.\r\n\r\n\r\n> I don't think we planned on adding coverage for front-end tests in a near future but that might be a great addition indeed!\r\n\r\nI'll try to implement this in the coming days, I think it is a good addition to have."", 'created_at': datetime.datetime(2024, 9, 9, 9, 54, 13, tzinfo=datetime.timezone.utc)}]","DjVinnii (Issue Creator) on (2024-09-09 06:58:22 UTC): By the way, I noticed coverage is not setup yet for the new UI. Any plans on doing this soon?

pierrejeambrun on (2024-09-09 07:46:01 UTC): Thank you for the PR,

I don't think we planned on adding coverage for front-end tests in a near future but that might be a great addition indeed!

There are some static checks failure to fix. You can install these checks locally with pre-commit hook to help catch them earlier in the development phase and not have to wait for the CI. You can find more information in https://github.com/apache/airflow/blob/main/contributing-docs/03_contributors_quick_start.rst#configuring-pre-commit

DjVinnii (Issue Creator) on (2024-09-09 09:54:13 UTC): Hi @pierrejeambrun! Thanks for the quick comment. The checks should be passing now, lets see if the CI succeeds.



I'll try to implement this in the coming days, I think it is a good addition to have.

"
2513044175,pull_request,closed,,Do not retry when task is cleared externally (#42093),"When the task is marked as success/failed externally and is cleared before the task instance receives SIGTERM, then we should not retry to ensure scheduling invariants (e.g. max_active_runs).

Closes #42093

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",jmaicher,2024-09-09 06:37:32+00:00,[],2024-10-30 00:15:30+00:00,2024-10-30 00:15:29+00:00,https://github.com/apache/airflow/pull/42094,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file')]","[{'comment_id': 2436555345, 'issue_id': 2513044175, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 10, 25, 0, 15, 27, tzinfo=datetime.timezone.utc)}]","github-actions[bot] on (2024-10-25 00:15:27 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2512582779,pull_request,closed,,AWS executors docs update,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
Currently the document has incorrect name under ecs configs.
<img width=""1163"" alt=""image"" src=""https://github.com/user-attachments/assets/9abb7835-6769-428b-90a3-0c8866314a26"">

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-09-08 21:30:43+00:00,[],2024-11-02 13:06:10+00:00,2024-09-09 20:27:49+00:00,https://github.com/apache/airflow/pull/42092,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('kind:documentation', '')]",[],
2512524483,pull_request,closed,,Add parent_model param in `UploadModelOperator`,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

closes: #41194 

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",jx2lee,2024-09-08 18:54:46+00:00,[],2024-09-09 13:32:04+00:00,2024-09-09 13:32:04+00:00,https://github.com/apache/airflow/pull/42091,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', '')]",[],
2512428561,pull_request,closed,,Exclude universal-pathlib 0.2.4 as it breaks our integration,"Universal Pathlib 0.2.4 adds extra validation for Paths and our integration with local file paths Does not work with it.

Tracked in https://github.com/fsspec/universal_pathlib/issues/276

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-08 14:56:36+00:00,[],2024-09-09 12:50:31+00:00,2024-09-09 12:50:29+00:00,https://github.com/apache/airflow/pull/42090,[],"[{'comment_id': 2336718576, 'issue_id': 2512428561, 'author': 'potiuk', 'body': 'Example failures in https://github.com/apache/airflow/actions/runs/10758063762/job/29832946513#step:7:5018', 'created_at': datetime.datetime(2024, 9, 8, 15, 2, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2337814465, 'issue_id': 2512428561, 'author': 'potiuk', 'body': 'Changed to !=0.2.4 since the issue is solved in 0.2.5 already :)', 'created_at': datetime.datetime(2024, 9, 9, 11, 5, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2338040619, 'issue_id': 2512428561, 'author': 'potiuk', 'body': 'Random k8S failure. Merging.', 'created_at': datetime.datetime(2024, 9, 9, 12, 50, 25, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-08 15:02:07 UTC): Example failures in https://github.com/apache/airflow/actions/runs/10758063762/job/29832946513#step:7:5018

potiuk (Issue Creator) on (2024-09-09 11:05:51 UTC): Changed to !=0.2.4 since the issue is solved in 0.2.5 already :)

potiuk (Issue Creator) on (2024-09-09 12:50:25 UTC): Random k8S failure. Merging.

"
2512270113,pull_request,closed,,Autofix default deferrable with LibCST,"backport https://github.com/apache/airflow/pull/41984 and https://github.com/apache/airflow/pull/42083

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-09-08 08:43:19+00:00,[],2024-09-13 17:37:22+00:00,2024-09-08 10:08:41+00:00,https://github.com/apache/airflow/pull/42089,"[('area:dev-tools', ''), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log')]",[],
2512207613,pull_request,closed,,Deprecated metrics configuration removed,Deprecated metrics configuration removed,dirrao,2024-09-08 05:31:26+00:00,['dirrao'],2024-09-09 14:11:40+00:00,2024-09-09 14:11:40+00:00,https://github.com/apache/airflow/pull/42088,"[('area:metrics', ''), ('airflow3.0:candidate', 'Potential candidates for Airflow 3.0'), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]",[],
2512101647,pull_request,closed,,Adding support for volume configurations in ECSRunTaskOperator,Adding support for passing volume configurations to the ECS capacity provider,srehman420,2024-09-07 22:35:00+00:00,[],2024-09-11 19:25:59+00:00,2024-09-11 19:25:55+00:00,https://github.com/apache/airflow/pull/42087,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]","[{'comment_id': 2336470409, 'issue_id': 2512101647, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 7, 22, 35, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2339063307, 'issue_id': 2512101647, 'author': 'vincbeck', 'body': 'Static checks are failing, could you please fix them? See [documentation ](https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst)', 'created_at': datetime.datetime(2024, 9, 9, 20, 49, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344537355, 'issue_id': 2512101647, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 11, 19, 25, 57, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-07 22:35:04 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

vincbeck on (2024-09-09 20:49:52 UTC): Static checks are failing, could you please fix them? See [documentation ](https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst)

boring-cyborg[bot] on (2024-09-11 19:25:57 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2512093922,pull_request,closed,,"Extended delete_collections functionality to handle property, contains_any, and  contains_all operations that was introduced in Weaviate Provider v1.21","Extended delete_collections functionality to handle property, contains_any, and

contains_all operations that was introduced in Weaviate Provider v1.21

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",harjeevanmaan,2024-09-07 22:04:32+00:00,[],2024-09-29 13:59:40+00:00,2024-09-29 13:50:40+00:00,https://github.com/apache/airflow/pull/42086,"[('area:providers', ''), ('provider:weaviate', '')]",[],
2512084738,pull_request,closed,, Update security_model.rst to clear unauthenticated endpoints exceptions (#42057),Backport of #42057,jscheffl,2024-09-07 21:30:03+00:00,[],2024-09-13 17:36:19+00:00,2024-09-08 03:47:40+00:00,https://github.com/apache/airflow/pull/42085,"[('kind:documentation', ''), ('type:doc-only', 'Changelog: Doc Only')]",[],
2512081826,pull_request,closed,,Change compat tests to use new Airflow 2.10.1,Adding alongside to #42068 - do we have an automation or checklist where we might need to add the backcompat tests?,jscheffl,2024-09-07 21:18:26+00:00,[],2024-09-08 03:45:55+00:00,2024-09-08 03:45:55+00:00,https://github.com/apache/airflow/pull/42084,"[('area:dev-tools', '')]",[],
2511794100,pull_request,closed,,ci(pre-commit): lower minimum libcst version to 1.1.0 for python 3.8 support,"https://github.com/apache/airflow/pull/41984#issuecomment-2335482708
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-09-07 15:43:57+00:00,[],2024-09-08 08:26:11+00:00,2024-09-08 08:26:09+00:00,https://github.com/apache/airflow/pull/42083,"[('area:dev-tools', '')]","[{'comment_id': 2335660259, 'issue_id': 2511794100, 'author': 'gopidesupavan', 'body': 'Thanks @Lee-W for this, my local builds was started failing on 3.8 hatch env, so then decided to upgrade to higher version :).', 'created_at': datetime.datetime(2024, 9, 7, 15, 54, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2336453106, 'issue_id': 2511794100, 'author': 'jscheffl', 'body': 'Can you please also back-port to `v2-10-test` branch when merging?', 'created_at': datetime.datetime(2024, 9, 7, 21, 8, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2336596201, 'issue_id': 2511794100, 'author': 'Lee-W', 'body': ""sure, just found out I forgot to backport #41984 as well 🤦\u200d♂️ I'll backport both of them!"", 'created_at': datetime.datetime(2024, 9, 8, 8, 26, 3, tzinfo=datetime.timezone.utc)}]","gopidesupavan on (2024-09-07 15:54:45 UTC): Thanks @Lee-W for this, my local builds was started failing on 3.8 hatch env, so then decided to upgrade to higher version :).

jscheffl on (2024-09-07 21:08:58 UTC): Can you please also back-port to `v2-10-test` branch when merging?

Lee-W (Issue Creator) on (2024-09-08 08:26:03 UTC): sure, just found out I forgot to backport #41984 as well 🤦‍♂️ I'll backport both of them!

"
2511787539,pull_request,closed,,Use FOR KEY SHARE UPDATE instead of FOR UPDATE,"Pretty sure we are taking a stronger lock than we need to.

Why this matters:

Taking the weaker lock FOR KEY SHARE UPDATE allows other tables to do concurrent inserts with fks to the locked row.   This matters e.g. when we insert a task reschedule that keys to dag run.  

Right now we wait (before inserting reschedule) to be able to lock the row on dag run.  But if you have many failures close in time this can be trouble.  And it's unnecessary since we're just inserting a row with a fk to dag run.  But logic was added to fully lock the dag run because there were reported deadlocks.  But if we use the weaker lock in the first place, that would not be an issue.

And since, as far as i know, we're not ever going to change the key of the locked row, it should always be safe to do this.

Here's some relevant docs https://www.postgresql.org/docs/current/explicit-locking.html#LOCKING-ROWS

And this table shows which types of locks conflict with which.

<img width=""633"" alt=""image"" src=""https://github.com/user-attachments/assets/f428db6f-aa4f-482d-b0f7-69e5c697d032"">

Interactive testing notes:
* ran a few dags with 2 schedulers.  seemed to work fine.

cc @seanmuth @nsAstro ",dstandish,2024-09-07 15:39:34+00:00,[],2024-11-26 17:31:37+00:00,2024-11-26 17:31:34+00:00,https://github.com/apache/airflow/pull/42082,[],"[{'comment_id': 2344766279, 'issue_id': 2511787539, 'author': 'seanmuth', 'body': ""Can provide more details tomorrow, but I was able to reproduce an issue seen at Astronomer due to this aggressive locking.\r\n\r\nWith a DAG with 1000 FileSensors set to `reschedule` mode, and 10 tries. Launching 5 runs of this DAG tanks the scheduler's heartbeat, as soon as the sensor tasks begin rescheduling. SQL statements back up, all waiting for tuple locks on the same `dag_run` record. The scheduler then also gets stuck waiting behind these lock statements, and it starts missing heartbeats.\r\n\r\nPlanning to patch this PR in tomorrow morning to test its effects."", 'created_at': datetime.datetime(2024, 9, 11, 21, 51, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2400544374, 'issue_id': 2511787539, 'author': 'kaxil', 'body': ""> Can provide more details tomorrow, but I was able to reproduce an issue seen at Astronomer due to this aggressive locking.\r\n> \r\n> With a DAG with 1000 FileSensors set to `reschedule` mode, and 10 tries. Launching 5 runs of this DAG tanks the scheduler's heartbeat, as soon as the sensor tasks begin rescheduling. SQL statements back up, all waiting for tuple locks on the same `dag_run` record. The scheduler then also gets stuck waiting behind these lock statements, and it starts missing heartbeats.\r\n> \r\n> Planning to patch this PR in tomorrow morning to test its effects.\r\n\r\n@seanmuth Any update on the results of this patch?"", 'created_at': datetime.datetime(2024, 10, 8, 18, 27, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445962262, 'issue_id': 2511787539, 'author': 'prabhusneha', 'body': ""The changes LGTM. \r\nI don't see any issues for MySQL."", 'created_at': datetime.datetime(2024, 10, 30, 6, 16, 1, tzinfo=datetime.timezone.utc)}]","seanmuth on (2024-09-11 21:51:28 UTC): Can provide more details tomorrow, but I was able to reproduce an issue seen at Astronomer due to this aggressive locking.

With a DAG with 1000 FileSensors set to `reschedule` mode, and 10 tries. Launching 5 runs of this DAG tanks the scheduler's heartbeat, as soon as the sensor tasks begin rescheduling. SQL statements back up, all waiting for tuple locks on the same `dag_run` record. The scheduler then also gets stuck waiting behind these lock statements, and it starts missing heartbeats.

Planning to patch this PR in tomorrow morning to test its effects.

kaxil on (2024-10-08 18:27:46 UTC): @seanmuth Any update on the results of this patch?

prabhusneha on (2024-10-30 06:16:01 UTC): The changes LGTM. 
I don't see any issues for MySQL.

"
2511644972,pull_request,closed,,Standard provider python operator,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
Moving python operators/sensors to standard provider
<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-09-07 13:21:22+00:00,[],2024-10-31 10:46:03+00:00,2024-10-31 10:44:46+00:00,https://github.com/apache/airflow/pull/42081,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('area:dev-tools', ''), ('provider:docker', ''), ('provider:celery', ''), ('provider:apache-spark', '')]","[{'comment_id': 2351527310, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': 'cc: @romsharon98', 'created_at': datetime.datetime(2024, 9, 15, 10, 34, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2408694864, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': ""Some of the tests are failing due to compatibility issues. It appears that the changes related to the `triggering_asset_events `event are associated with Airflow 3.0.0. Since we're transitioning the Python operator into the providers' ecosystem, the standard provider now requires a minimum Airflow version of 2.10.0. As a result, the compatibility tests for version 2.10.1 are failing. Any suggestions ? \r\n\r\n\r\n https://github.com/apache/airflow/actions/runs/11308098417/job/31450685352?pr=42081#step:11:12372"", 'created_at': datetime.datetime(2024, 10, 12, 20, 42, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2408698272, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': '@potiuk It appears that this PR needs to be initiated from the Apache repository, or it should be someone with committer privileges. The PR involves modifications in the `dev/breeze` and `dev/tests_common/test_utils/compat.py` sections, but it seems that the CI process is overriding these scripts with those from the main branch, which could be causing some issues. \r\n\r\nHere it is removing https://github.com/apache/airflow/actions/runs/11308098408/job/31450591466#step:4:219\r\n\r\nhttps://github.com/apache/airflow/pull/42081/files#diff-cbadf25516149c7fe3d19e45b5b03789f4bb93bd6d837eaa365dfd0ffb771a0fR55\r\n\r\nFor `dev/tests_common/test_utils/compat.py` have workaround but dont like this, i have imported operators with try/catch like this https://github.com/apache/airflow/pull/42081/files#diff-a842cdd5bcf15ce8859d6115b48853c3ac654701a3279bce73969be8922dbbe8R47. these imports can be replaced using compat.\r\n\r\nAny thoughts please ?', 'created_at': datetime.datetime(2024, 10, 12, 20, 59, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2408786527, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': '> @potiuk It appears that this PR needs to be initiated from the Apache repository, or it should be someone with committer privileges. The PR involves modifications in the `dev/breeze` and `dev/tests_common/test_utils/compat.py` sections, but it seems that the CI process is overriding these scripts with those from the main branch, which could be causing some issues.\r\n> \r\n> Here it is removing https://github.com/apache/airflow/actions/runs/11308098408/job/31450591466#step:4:219\r\n> \r\n> https://github.com/apache/airflow/pull/42081/files#diff-cbadf25516149c7fe3d19e45b5b03789f4bb93bd6d837eaa365dfd0ffb771a0fR55\r\n> \r\n> For `dev/tests_common/test_utils/compat.py` have workaround but dont like this, i have imported operators with try/catch like this https://github.com/apache/airflow/pull/42081/files#diff-a842cdd5bcf15ce8859d6115b48853c3ac654701a3279bce73969be8922dbbe8R47. these imports can be replaced using compat.\r\n> \r\n> Any thoughts please ?\r\n\r\nlooks like the tests are going through fine now.\r\n\r\n> @potiuk It appears that this PR needs to be initiated from the Apache repository, or it should be someone with committer privileges. The PR involves modifications in the `dev/breeze` and `dev/tests_common/test_utils/compat.py` sections, but it seems that the CI process is overriding these scripts with those from the main branch, which could be causing some issues.\r\n> \r\n> Here it is removing https://github.com/apache/airflow/actions/runs/11308098408/job/31450591466#step:4:219\r\n> \r\n> https://github.com/apache/airflow/pull/42081/files#diff-cbadf25516149c7fe3d19e45b5b03789f4bb93bd6d837eaa365dfd0ffb771a0fR55\r\n> \r\n> For `dev/tests_common/test_utils/compat.py` have workaround but dont like this, i have imported operators with try/catch like this https://github.com/apache/airflow/pull/42081/files#diff-a842cdd5bcf15ce8859d6115b48853c3ac654701a3279bce73969be8922dbbe8R47. these imports can be replaced using compat.\r\n> \r\n> Any thoughts please ?\r\n\r\nlooks like tests are running..now..', 'created_at': datetime.datetime(2024, 10, 13, 2, 8, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2408908438, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': 'Compat tests 2.10.1 failing because python operator has changes related to airflow 3.0.0, should i update back changes to support in 2.10.X?', 'created_at': datetime.datetime(2024, 10, 13, 9, 52, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2409035816, 'issue_id': 2511644972, 'author': 'potiuk', 'body': '> Compat tests 2.10.1 failing because python operator has changes related to airflow 3.0.0, should i update back changes to support in 2.10.X?\r\n\r\nIt looks like it\'s more of ""unit test compatibility"" than backporting it. I think in this case simply tests should be fixed to be able to handle past providers. We do not need to backport this change, but we need to make sure that the assertions work when `airflow` is installed from ""2.10.1""', 'created_at': datetime.datetime(2024, 10, 13, 16, 12, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2409085753, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': '> > Compat tests 2.10.1 failing because python operator has changes related to airflow 3.0.0, should i update back changes to support in 2.10.X?\r\n> \r\n> It looks like it\'s more of ""unit test compatibility"" than backporting it. I think in this case simply tests should be fixed to be able to handle past providers. We do not need to backport this change, but we need to make sure that the assertions work when `airflow` is installed from ""2.10.1""\r\n\r\nthanks jarek, When installing Airflow 2.10.1, the Python operator is included as part of the core package. Should assertions be checked against the core Python operator (i.e., airflow.operators.python) or against airflow.providers.standard.operators.python? Opting for the former would require code changes due to the adjustments already made for Airflow 3. Do you agree that if Airflow 2.10.1 is installed, validation tests should be conducted on airflow.operators.python, as long as the tests remain compatible?', 'created_at': datetime.datetime(2024, 10, 13, 18, 54, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2409099776, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': '> > > Compat tests 2.10.1 failing because python operator has changes related to airflow 3.0.0, should i update back changes to support in 2.10.X?\r\n> > \r\n> > \r\n> > It looks like it\'s more of ""unit test compatibility"" than backporting it. I think in this case simply tests should be fixed to be able to handle past providers. We do not need to backport this change, but we need to make sure that the assertions work when `airflow` is installed from ""2.10.1""\r\n> \r\n> thanks jarek, When installing Airflow 2.10.1, the Python operator is included as part of the core package. Should assertions be checked against the core Python operator (i.e., airflow.operators.python) or against airflow.providers.standard.operators.python? Opting for the former would require code changes due to the adjustments already made for Airflow 3. Do you agree that if Airflow 2.10.1 is installed, validation tests should be conducted on airflow.operators.python, as long as the tests remain compatible?\r\n\r\nah i got it what you mean by \'assertions work\', need to make some adjustments in the python operator tests related to new feature updates. hope that works..', 'created_at': datetime.datetime(2024, 10, 13, 19, 40, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2409662458, 'issue_id': 2511644972, 'author': 'potiuk', 'body': '> ah i got it what you mean by \'assertions work\', need to make some adjustments in the python operator tests related to new feature updates. hope that works..\r\n\r\nYes. Some examples and detailed explanation on how to do this ""test_compatibility"" are here: https://github.com/apache/airflow/blob/main/contributing-docs/testing/unit_tests.rst#implementing-compatibility-for-provider-tests-for-older-airflow-versions', 'created_at': datetime.datetime(2024, 10, 14, 1, 46, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2415269290, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': 'I believe we have to move these scripts as well into standard provider `airflow/utils/python_virtualenv.py`  `airflow/utils/python_virtualenv_script.jinja2` ?', 'created_at': datetime.datetime(2024, 10, 15, 22, 19, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2415944090, 'issue_id': 2511644972, 'author': 'potiuk', 'body': '> I believe we have to move these scripts as well into standard provider `airflow/utils/python_virtualenv.py` `airflow/utils/python_virtualenv_script.jinja2` ?\r\n\r\nYes. Absolutely.', 'created_at': datetime.datetime(2024, 10, 16, 7, 26, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2416061257, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': '> > I believe we have to move these scripts as well into standard provider `airflow/utils/python_virtualenv.py` `airflow/utils/python_virtualenv_script.jinja2` ?\r\n> \r\n> Yes. Absolutely.\r\n\r\ncool, Thank you :)', 'created_at': datetime.datetime(2024, 10, 16, 8, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441106974, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': '> Just one thing about compat provider reuse.\r\n\r\nyeah am updating imports to use compat.', 'created_at': datetime.datetime(2024, 10, 28, 9, 56, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2441552001, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': '> > Just one thing about compat provider reuse.\r\n> \r\n> yeah am updating imports to use compat.\r\n\r\nI\'ve added the imports to the compat provider, but I\'ve noticed test failures occurring in selective checks. This is likely because all provider imports are now referenced directly from the compat provider. So, when we revert to standard provider direct imports, we may need to update all the selective check tests accordingly.\r\n\r\n<img width=""1775"" alt=""image"" src=""https://github.com/user-attachments/assets/75e0d37e-d596-4b6d-9df4-ab03b3b1d738"">\r\n\r\nIs it worth adding to compat provider now?', 'created_at': datetime.datetime(2024, 10, 28, 13, 12, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442051787, 'issue_id': 2511644972, 'author': 'potiuk', 'body': '> > > Just one thing about compat provider reuse.\r\n> > \r\n> > \r\n> > yeah am updating imports to use compat.\r\n> \r\n> I\'ve added the imports to the compat provider, but I\'ve noticed test failures occurring in selective checks. This is likely because all provider imports are now referenced directly from the compat provider. So, when we revert to standard provider direct imports, we may need to update all the selective check tests accordingly.\r\n> \r\n\r\nNo - it\'s ok - you need to fix the tests accordingly. Those tests are testing whether the right set of ""dependent"" providers are selected when selective checks is running - so when you start depending on the standard provider and when standard provider depends on some other provider., the tests start to expect changes in the depednencies, so what needs to be done is to update the tests to reflect that.', 'created_at': datetime.datetime(2024, 10, 28, 16, 22, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442053832, 'issue_id': 2511644972, 'author': 'potiuk', 'body': ""And it's not that difficult, most of the code is common in constants, and some other could be replaced with search/replace."", 'created_at': datetime.datetime(2024, 10, 28, 16, 23, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442063825, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': '> > > > Just one thing about compat provider reuse.\r\n> > > \r\n> > > \r\n> > > yeah am updating imports to use compat.\r\n> > \r\n> > \r\n> > I\'ve added the imports to the compat provider, but I\'ve noticed test failures occurring in selective checks. This is likely because all provider imports are now referenced directly from the compat provider. So, when we revert to standard provider direct imports, we may need to update all the selective check tests accordingly.\r\n> \r\n> No - it\'s ok - you need to fix the tests accordingly. Those tests are testing whether the right set of ""dependent"" providers are selected when selective checks is running - so when you start depending on the standard provider and when standard provider depends on some other provider., the tests start to expect changes in the depednencies, so what needs to be done is to update the tests to reflect that.\r\n\r\nSure , thanks jarek. Will push the changes..', 'created_at': datetime.datetime(2024, 10, 28, 16, 27, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442226241, 'issue_id': 2511644972, 'author': 'potiuk', 'body': 'BTW. ... some conflicts to solve - so you need to rebase too', 'created_at': datetime.datetime(2024, 10, 28, 17, 39, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2442960571, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': '> BTW. ... some conflicts to solve - so you need to rebase too\r\n\r\nThanks jarek, finally this is green now.', 'created_at': datetime.datetime(2024, 10, 29, 1, 7, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2449407550, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': 'One failure related to spell check this will fix https://github.com/apache/airflow/pull/43538', 'created_at': datetime.datetime(2024, 10, 31, 9, 26, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2449408227, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': 'Are we good to merge this ? 😄', 'created_at': datetime.datetime(2024, 10, 31, 9, 27, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2449537618, 'issue_id': 2511644972, 'author': 'potiuk', 'body': ""Go ahead and do the honors @gopidesupavan -> That's an interesting one as first(?) serious one to merge as a committer.. Don't be shy. We can always revert it if it breaks things ;)"", 'created_at': datetime.datetime(2024, 10, 31, 10, 35, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2449556085, 'issue_id': 2511644972, 'author': 'gopidesupavan', 'body': ""> Go ahead and do the honors @gopidesupavan -> That's an interesting one as first(?) serious one to merge as a committer.. Don't be shy. We can always revert it if it breaks things ;)\r\n\r\nwoohoooo merged thank you all for the help and review here, really appreciate it 😄"", 'created_at': datetime.datetime(2024, 10, 31, 10, 46, 2, tzinfo=datetime.timezone.utc)}]","gopidesupavan (Issue Creator) on (2024-09-15 10:34:43 UTC): cc: @romsharon98

gopidesupavan (Issue Creator) on (2024-10-12 20:42:06 UTC): Some of the tests are failing due to compatibility issues. It appears that the changes related to the `triggering_asset_events `event are associated with Airflow 3.0.0. Since we're transitioning the Python operator into the providers' ecosystem, the standard provider now requires a minimum Airflow version of 2.10.0. As a result, the compatibility tests for version 2.10.1 are failing. Any suggestions ? 


 https://github.com/apache/airflow/actions/runs/11308098417/job/31450685352?pr=42081#step:11:12372

gopidesupavan (Issue Creator) on (2024-10-12 20:59:33 UTC): @potiuk It appears that this PR needs to be initiated from the Apache repository, or it should be someone with committer privileges. The PR involves modifications in the `dev/breeze` and `dev/tests_common/test_utils/compat.py` sections, but it seems that the CI process is overriding these scripts with those from the main branch, which could be causing some issues. 

Here it is removing https://github.com/apache/airflow/actions/runs/11308098408/job/31450591466#step:4:219

https://github.com/apache/airflow/pull/42081/files#diff-cbadf25516149c7fe3d19e45b5b03789f4bb93bd6d837eaa365dfd0ffb771a0fR55

For `dev/tests_common/test_utils/compat.py` have workaround but dont like this, i have imported operators with try/catch like this https://github.com/apache/airflow/pull/42081/files#diff-a842cdd5bcf15ce8859d6115b48853c3ac654701a3279bce73969be8922dbbe8R47. these imports can be replaced using compat.

Any thoughts please ?

gopidesupavan (Issue Creator) on (2024-10-13 02:08:25 UTC): looks like the tests are going through fine now.


looks like tests are running..now..

gopidesupavan (Issue Creator) on (2024-10-13 09:52:07 UTC): Compat tests 2.10.1 failing because python operator has changes related to airflow 3.0.0, should i update back changes to support in 2.10.X?

potiuk on (2024-10-13 16:12:39 UTC): It looks like it's more of ""unit test compatibility"" than backporting it. I think in this case simply tests should be fixed to be able to handle past providers. We do not need to backport this change, but we need to make sure that the assertions work when `airflow` is installed from ""2.10.1""

gopidesupavan (Issue Creator) on (2024-10-13 18:54:15 UTC): thanks jarek, When installing Airflow 2.10.1, the Python operator is included as part of the core package. Should assertions be checked against the core Python operator (i.e., airflow.operators.python) or against airflow.providers.standard.operators.python? Opting for the former would require code changes due to the adjustments already made for Airflow 3. Do you agree that if Airflow 2.10.1 is installed, validation tests should be conducted on airflow.operators.python, as long as the tests remain compatible?

gopidesupavan (Issue Creator) on (2024-10-13 19:40:12 UTC): ah i got it what you mean by 'assertions work', need to make some adjustments in the python operator tests related to new feature updates. hope that works..

potiuk on (2024-10-14 01:46:42 UTC): Yes. Some examples and detailed explanation on how to do this ""test_compatibility"" are here: https://github.com/apache/airflow/blob/main/contributing-docs/testing/unit_tests.rst#implementing-compatibility-for-provider-tests-for-older-airflow-versions

gopidesupavan (Issue Creator) on (2024-10-15 22:19:35 UTC): I believe we have to move these scripts as well into standard provider `airflow/utils/python_virtualenv.py`  `airflow/utils/python_virtualenv_script.jinja2` ?

potiuk on (2024-10-16 07:26:12 UTC): Yes. Absolutely.

gopidesupavan (Issue Creator) on (2024-10-16 08:18:00 UTC): cool, Thank you :)

gopidesupavan (Issue Creator) on (2024-10-28 09:56:08 UTC): yeah am updating imports to use compat.

gopidesupavan (Issue Creator) on (2024-10-28 13:12:10 UTC): I've added the imports to the compat provider, but I've noticed test failures occurring in selective checks. This is likely because all provider imports are now referenced directly from the compat provider. So, when we revert to standard provider direct imports, we may need to update all the selective check tests accordingly.

<img width=""1775"" alt=""image"" src=""https://github.com/user-attachments/assets/75e0d37e-d596-4b6d-9df4-ab03b3b1d738"">

Is it worth adding to compat provider now?

potiuk on (2024-10-28 16:22:36 UTC): No - it's ok - you need to fix the tests accordingly. Those tests are testing whether the right set of ""dependent"" providers are selected when selective checks is running - so when you start depending on the standard provider and when standard provider depends on some other provider., the tests start to expect changes in the depednencies, so what needs to be done is to update the tests to reflect that.

potiuk on (2024-10-28 16:23:25 UTC): And it's not that difficult, most of the code is common in constants, and some other could be replaced with search/replace.

gopidesupavan (Issue Creator) on (2024-10-28 16:27:29 UTC): Sure , thanks jarek. Will push the changes..

potiuk on (2024-10-28 17:39:10 UTC): BTW. ... some conflicts to solve - so you need to rebase too

gopidesupavan (Issue Creator) on (2024-10-29 01:07:45 UTC): Thanks jarek, finally this is green now.

gopidesupavan (Issue Creator) on (2024-10-31 09:26:56 UTC): One failure related to spell check this will fix https://github.com/apache/airflow/pull/43538

gopidesupavan (Issue Creator) on (2024-10-31 09:27:18 UTC): Are we good to merge this ? 😄

potiuk on (2024-10-31 10:35:32 UTC): Go ahead and do the honors @gopidesupavan -> That's an interesting one as first(?) serious one to merge as a committer.. Don't be shy. We can always revert it if it breaks things ;)

gopidesupavan (Issue Creator) on (2024-10-31 10:46:02 UTC): woohoooo merged thank you all for the help and review here, really appreciate it 😄

"
2511566489,pull_request,closed,,Fix consistent return response from PubSubPullSensor,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
closes: #41877

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-09-07 09:40:14+00:00,[],2024-11-02 13:05:53+00:00,2024-10-02 06:59:17+00:00,https://github.com/apache/airflow/pull/42080,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2370966608, 'issue_id': 2511566489, 'author': 'Lee-W', 'body': ""One thing I just think of @eladkal do you think it's a breaking change? as we change the trigger here"", 'created_at': datetime.datetime(2024, 9, 24, 11, 14, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387466791, 'issue_id': 2511566489, 'author': 'potiuk', 'body': ""> One thing I just think of @eladkal do you think it's a breaking change? as we change the trigger here\r\n\r\nIMHO we can treat it as a bugfix."", 'created_at': datetime.datetime(2024, 10, 2, 1, 36, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387467620, 'issue_id': 2511566489, 'author': 'potiuk', 'body': 'But it would be nice to add a note at the top of the CHANGELOG explaining the change expected.', 'created_at': datetime.datetime(2024, 10, 2, 1, 37, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387702886, 'issue_id': 2511566489, 'author': 'Lee-W', 'body': ""Yep, it sounds more like a bug fix to me, but I would like to be cautious. I'll merge it later today if no one object."", 'created_at': datetime.datetime(2024, 10, 2, 6, 12, 59, tzinfo=datetime.timezone.utc)}]","Lee-W on (2024-09-24 11:14:06 UTC): One thing I just think of @eladkal do you think it's a breaking change? as we change the trigger here

potiuk on (2024-10-02 01:36:07 UTC): IMHO we can treat it as a bugfix.

potiuk on (2024-10-02 01:37:07 UTC): But it would be nice to add a note at the top of the CHANGELOG explaining the change expected.

Lee-W on (2024-10-02 06:12:59 UTC): Yep, it sounds more like a bug fix to me, but I would like to be cautious. I'll merge it later today if no one object.

"
2511496543,pull_request,closed,,Use functools.update_wrapper on task decorator,"Same as #42041 but different approach.

@fritz-astronomer ",uranusjr,2024-09-07 06:20:16+00:00,[],2024-09-08 05:03:32+00:00,2024-09-08 05:03:30+00:00,https://github.com/apache/airflow/pull/42079,[],[],
2511045374,pull_request,closed,,Add new type of exception to catch timeout (#42064),"(cherry picked from commit abe5f7c68bda057396744cb70c43e9cb83c02aac)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-06 19:08:08+00:00,[],2024-09-13 17:35:51+00:00,2024-09-06 19:53:35+00:00,https://github.com/apache/airflow/pull/42078,"[('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2334660679, 'issue_id': 2511045374, 'author': 'potiuk', 'body': 'Backport of #42064', 'created_at': datetime.datetime(2024, 9, 6, 19, 8, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334661006, 'issue_id': 2511045374, 'author': 'potiuk', 'body': 'cc: @VladaZakharova', 'created_at': datetime.datetime(2024, 9, 6, 19, 8, 37, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-06 19:08:23 UTC): Backport of #42064

potiuk (Issue Creator) on (2024-09-06 19:08:37 UTC): cc: @VladaZakharova

"
2510932302,pull_request,closed,,Rename `--extras` to `--airflow-extras` from `breeze prod-image build` command,"
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-06 17:51:13+00:00,[],2024-09-06 21:24:21+00:00,2024-09-06 21:24:19+00:00,https://github.com/apache/airflow/pull/42077,"[('area:dev-tools', '')]","[{'comment_id': 2334562171, 'issue_id': 2510932302, 'author': 'ferruzzi', 'body': 'Looks like --extras was replaced with --airflow-extras in https://github.com/apache/airflow/pull/23562 [here](https://github.com/apache/airflow/pull/23562/files#diff-ee5066dbc80cf551a440261fe04ef9b781a910ceb5717f392bb630d14b87c08aL230) so rather than remove it, maybe just update the correct new flag?', 'created_at': datetime.datetime(2024, 9, 6, 17, 58, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334567602, 'issue_id': 2510932302, 'author': 'vincbeck', 'body': ""> Looks like --extras was replaced with --airflow-extras in #23562 [here](https://github.com/apache/airflow/pull/23562/files#diff-ee5066dbc80cf551a440261fe04ef9b781a910ceb5717f392bb630d14b87c08aL230) so rather than remove it, maybe just update the correct new flag?\r\n\r\nYou're right, nice catch! The difference between `airflow-extras` and `--additional-airflow-extras` is not clear to me though"", 'created_at': datetime.datetime(2024, 9, 6, 18, 1, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334574624, 'issue_id': 2510932302, 'author': 'ferruzzi', 'body': ""> The difference between airflow-extras and --additional-airflow-extras is not clear to me though\r\n\r\nYeah, I'm not 100% on the distinction there, but based on the documentation changes in that PR I linked I'm fairly confident that --airflow-extras was a direct replacement for -extras.\r\n\r\nI _think_ --additional* is supposed to append to the existing --airflow-extras, but I'm not sure."", 'created_at': datetime.datetime(2024, 9, 6, 18, 6, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334612462, 'issue_id': 2510932302, 'author': 'vincbeck', 'body': 'Fixed :)', 'created_at': datetime.datetime(2024, 9, 6, 18, 33, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334642140, 'issue_id': 2510932302, 'author': 'potiuk', 'body': ""> Yeah, I'm not 100% on the distinction there, but based on the documentation changes in that PR I linked I'm fairly confident that --airflow-extras was a direct replacement for -extras.\r\n> \r\n> I _think_ --additional* is supposed to append to the existing --airflow-extras, but I'm not sure.\r\n\r\nThat was exactly the intention :). Any improvement to wording to explain it better is most welcome."", 'created_at': datetime.datetime(2024, 9, 6, 18, 55, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334656512, 'issue_id': 2510932302, 'author': 'ferruzzi', 'body': ""Some checks aren't passing, but they don't look related.   Feel free to merge once those go green."", 'created_at': datetime.datetime(2024, 9, 6, 19, 5, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334729687, 'issue_id': 2510932302, 'author': 'vincbeck', 'body': ""> > Yeah, I'm not 100% on the distinction there, but based on the documentation changes in that PR I linked I'm fairly confident that --airflow-extras was a direct replacement for -extras.\r\n> > I _think_ --additional* is supposed to append to the existing --airflow-extras, but I'm not sure.\r\n> \r\n> That was exactly the intention :). Any improvement to wording to explain it better is most welcome.\r\n\r\nI meant what is the value of having `--airflow-extras` and `--additional-airflow-extras` and not only one. What is the difference between `breeze prod-image build --airflow-extras extra1 --additional-airflow-extras extra2` and `breeze prod-image build --airflow-extras extra1,extra2`? It is more for my curiosity than a concern :)"", 'created_at': datetime.datetime(2024, 9, 6, 20, 1, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334736695, 'issue_id': 2510932302, 'author': 'potiuk', 'body': ""--additional is when you want to add one or two providers to the default ones\n\n--extraa is when you want to change the  base set of extras\n\nThis makes a difference for example when you build slim image. Default PROD dockerfile adds about 20 or so extras (commonly used providers - Amazon, Google, etc.) . Slim image had only the pre installed providers which means that --extras is empty.\n\n\nSo in short : use --additional when you want to extend 'reference' image. Use --extras when you want to slim-down the basic set of extras that the reference image has"", 'created_at': datetime.datetime(2024, 9, 6, 20, 7, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334830615, 'issue_id': 2510932302, 'author': 'vincbeck', 'body': ""> --additional is when you want to add one or two providers to the default ones\r\n> \r\n> --extraa is when you want to change the base set of extras\r\n> \r\n> This makes a difference for example when you build slim image. Default PROD dockerfile adds about 20 or so extras (commonly used providers - Amazon, Google, etc.) . Slim image had only the pre installed providers which means that --extras is empty.\r\n> \r\n> So in short : use --additional when you want to extend 'reference' image. Use --extras when you want to slim-down the basic set of extras that the reference image has\r\n\r\nThat makes perfect sense! Thanks!"", 'created_at': datetime.datetime(2024, 9, 6, 21, 24, 15, tzinfo=datetime.timezone.utc)}]","ferruzzi on (2024-09-06 17:58:13 UTC): Looks like --extras was replaced with --airflow-extras in https://github.com/apache/airflow/pull/23562 [here](https://github.com/apache/airflow/pull/23562/files#diff-ee5066dbc80cf551a440261fe04ef9b781a910ceb5717f392bb630d14b87c08aL230) so rather than remove it, maybe just update the correct new flag?

vincbeck (Issue Creator) on (2024-09-06 18:01:50 UTC): You're right, nice catch! The difference between `airflow-extras` and `--additional-airflow-extras` is not clear to me though

ferruzzi on (2024-09-06 18:06:23 UTC): Yeah, I'm not 100% on the distinction there, but based on the documentation changes in that PR I linked I'm fairly confident that --airflow-extras was a direct replacement for -extras.

I _think_ --additional* is supposed to append to the existing --airflow-extras, but I'm not sure.

vincbeck (Issue Creator) on (2024-09-06 18:33:46 UTC): Fixed :)

potiuk on (2024-09-06 18:55:30 UTC): That was exactly the intention :). Any improvement to wording to explain it better is most welcome.

ferruzzi on (2024-09-06 19:05:30 UTC): Some checks aren't passing, but they don't look related.   Feel free to merge once those go green.

vincbeck (Issue Creator) on (2024-09-06 20:01:46 UTC): I meant what is the value of having `--airflow-extras` and `--additional-airflow-extras` and not only one. What is the difference between `breeze prod-image build --airflow-extras extra1 --additional-airflow-extras extra2` and `breeze prod-image build --airflow-extras extra1,extra2`? It is more for my curiosity than a concern :)

potiuk on (2024-09-06 20:07:09 UTC): --additional is when you want to add one or two providers to the default ones

--extraa is when you want to change the  base set of extras

This makes a difference for example when you build slim image. Default PROD dockerfile adds about 20 or so extras (commonly used providers - Amazon, Google, etc.) . Slim image had only the pre installed providers which means that --extras is empty.


So in short : use --additional when you want to extend 'reference' image. Use --extras when you want to slim-down the basic set of extras that the reference image has

vincbeck (Issue Creator) on (2024-09-06 21:24:15 UTC): That makes perfect sense! Thanks!

"
2510838795,pull_request,closed,,Using dedent in the Sagemaker system test,Just a style change to make it a little easier to read;  I wasn't familiar with dedent() when I initially wrote the test.  Ran the test locally and it still passes.,ferruzzi,2024-09-06 16:50:17+00:00,[],2024-09-06 19:16:18+00:00,2024-09-06 19:16:18+00:00,https://github.com/apache/airflow/pull/42076,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('area:system-tests', '')]",[],
2510811899,pull_request,closed,,Update example_python_operator.py,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
The imports referenced here are at the function-level, not he module level. I think this is a typo?
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kmdupr33,2024-09-06 16:34:51+00:00,[],2024-09-06 19:15:57+00:00,2024-09-06 19:15:53+00:00,https://github.com/apache/airflow/pull/42075,[],"[{'comment_id': 2334428364, 'issue_id': 2510811899, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 6, 16, 34, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334670630, 'issue_id': 2510811899, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 6, 19, 15, 55, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-06 16:34:55 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

boring-cyborg[bot] on (2024-09-06 19:15:55 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2510769812,pull_request,closed,,Add google-cloud-spanner[testing] extra to devel-dependencies,"Related: apache/airflow#42011
See: googleapis/python-spanner#1193

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

@potiuk, I know you said you guys would run with this one, really wanted to contribute tho!

~~I left your prior changes from https://github.com/apache/airflow/pull/42011 as google did not yank the 3.49.0 release of python-spanner.~~

Adds google-cloud-spanner[testing] to devel-dependencies in google the provider yaml

related: https://github.com/apache/airflow/pull/42011
See: https://github.com/googleapis/python-spanner/issues/1193


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",rbarrette,2024-09-06 16:10:15+00:00,[],2024-09-07 14:26:44+00:00,2024-09-07 14:26:44+00:00,https://github.com/apache/airflow/pull/42074,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2335043486, 'issue_id': 2510769812, 'author': 'rbarrette', 'body': 'Noticed the 3.49.0 python-spanner release has been yanked, updated dependencies accordingly.', 'created_at': datetime.datetime(2024, 9, 7, 5, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2335243255, 'issue_id': 2510769812, 'author': 'rbarrette', 'body': '> We don\'t need to do anything here:\r\n> \r\n> * exclusion is fine, regardless of the release being yanked\r\n> * for now at least 3.49.1 does not have ""testing"" extra any more - the interceptor has been moved back into ""Required"" section.\r\n\r\nYou\'re right. I should have verified the release matched up with the proposed changes in the googleapis/python-spanner#1193. Valuable lesson here for me. Thanks for the patience @potiuk. Closing this.', 'created_at': datetime.datetime(2024, 9, 7, 14, 26, 44, tzinfo=datetime.timezone.utc)}]","rbarrette (Issue Creator) on (2024-09-07 05:01:00 UTC): Noticed the 3.49.0 python-spanner release has been yanked, updated dependencies accordingly.

rbarrette (Issue Creator) on (2024-09-07 14:26:44 UTC): You're right. I should have verified the release matched up with the proposed changes in the googleapis/python-spanner#1193. Valuable lesson here for me. Thanks for the patience @potiuk. Closing this.

"
2510725000,pull_request,closed,,Fix GlueDataBrewStartJobOperator template fields,"Typo in the template fields introduced in https://github.com/apache/airflow/pull/41848 broke the operator and caused the example_glue_databrew system test to start failing.

",ferruzzi,2024-09-06 15:45:51+00:00,[],2024-09-06 16:04:40+00:00,2024-09-06 16:04:38+00:00,https://github.com/apache/airflow/pull/42073,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]",[],
2510602698,pull_request,closed,,Add google-cloud-spanner[testing] extra to devel-dependencies,"Related: apache/airflow#42011
See: googleapis/python-spanner#1193

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

@potiuk, I know you said you guys would run with this one, really wanted to contribute tho!

I left your prior changes from #42011 as google did not yank the 3.49.0 release of python-spanner. 

Adds  google-cloud-spanner[testing] to devel-dependencies in google the provider yaml

related: #42011
See: googleapis/python-spanner#1193

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",rbarrette,2024-09-06 14:44:00+00:00,[],2024-09-06 16:06:02+00:00,2024-09-06 14:53:14+00:00,https://github.com/apache/airflow/pull/42072,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2334237967, 'issue_id': 2510602698, 'author': 'rbarrette', 'body': 'Will fix the build and reopen', 'created_at': datetime.datetime(2024, 9, 6, 14, 53, 15, tzinfo=datetime.timezone.utc)}]","rbarrette (Issue Creator) on (2024-09-06 14:53:15 UTC): Will fix the build and reopen

"
2510317949,pull_request,closed,,Chart: Default airflow version to 2.10.1,,utkarsharma2,2024-09-06 12:25:35+00:00,[],2025-02-05 15:51:59+00:00,2024-09-06 20:43:04+00:00,https://github.com/apache/airflow/pull/42069,"[('area:helm-chart', 'Airflow Helm Chart')]",[],
2510296604,pull_request,closed,,Airflow 2.10.1 has been released,,utkarsharma2,2024-09-06 12:13:42+00:00,[],2024-09-11 19:44:58+00:00,2024-09-11 19:44:57+00:00,https://github.com/apache/airflow/pull/42068,"[('area:dev-tools', ''), ('kind:documentation', ''), ('area:production-image', 'Production image improvements and fixes')]",[],
2510249204,pull_request,closed,,Update teradata.py - add Active Directory support in Teradata hook,Update teradata.py - add Active Directory support in Teradata hook,EvgenyNik,2024-09-06 11:46:43+00:00,[],2024-10-29 00:15:35+00:00,2024-10-29 00:15:35+00:00,https://github.com/apache/airflow/pull/42067,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:providers', ''), ('provider:teradata', '')]","[{'comment_id': 2333879481, 'issue_id': 2510249204, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 6, 11, 46, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334664501, 'issue_id': 2510249204, 'author': 'potiuk', 'body': 'Unit test update to cover this change is needed', 'created_at': datetime.datetime(2024, 9, 6, 19, 11, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2427963808, 'issue_id': 2510249204, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 10, 22, 0, 15, 17, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-06 11:46:48 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-09-06 19:11:09 UTC): Unit test update to cover this change is needed

github-actions[bot] on (2024-10-22 00:15:17 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2510231345,pull_request,closed,,"Try to make dataset objects totally unhashable, redux","Re-post of @uranusjr 's change in #42054, with a bug fixed and tests added.

Original PR description:

> Using the hash property on Dataset (and DatasetAlias) is problematic since subclassing is a possibility, and user code may not correctly implement hashing for Airflow’s purposes.

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",topherinternational,2024-09-06 11:35:40+00:00,[],2024-09-07 07:01:46+00:00,2024-09-07 07:01:46+00:00,https://github.com/apache/airflow/pull/42066,"[('full tests needed', 'We need to run full set of tests for this PR to merge'), ('area:lineage', '')]","[{'comment_id': 2333863003, 'issue_id': 2510231345, 'author': 'topherinternational', 'body': ""@potiuk here's something?"", 'created_at': datetime.datetime(2024, 9, 6, 11, 35, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333871893, 'issue_id': 2510231345, 'author': 'uranusjr', 'body': ""This wasn't covered by a test? We should add one."", 'created_at': datetime.datetime(2024, 9, 6, 11, 41, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333877212, 'issue_id': 2510231345, 'author': 'uranusjr', 'body': 'This should also include the previous changes since they were reverted.', 'created_at': datetime.datetime(2024, 9, 6, 11, 45, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333881083, 'issue_id': 2510231345, 'author': 'topherinternational', 'body': ""> This wasn't covered by a test? We should add one.\r\n\r\nWell it's revealed by some provider tests that look like they weren't run in #42054's checks.\r\n\r\nI think the challenge is that this is arg defaults all the way down, there's a long chain of `func(kwargs, extra=None)` calls that would all need tests to detect if a call that passed no extras produced a dataset object that matched `Dataset(args)` (w/o an `extra` arg)."", 'created_at': datetime.datetime(2024, 9, 6, 11, 47, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333882074, 'issue_id': 2510231345, 'author': 'topherinternational', 'body': '> This should also include the previous changes since they were reverted.\r\n\r\nI opened this PR before @potiuk reverted 😓', 'created_at': datetime.datetime(2024, 9, 6, 11, 48, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333897091, 'issue_id': 2510231345, 'author': 'topherinternational', 'body': '@uranusjr idk where the dataset `factory` signature is documented, but it should be documented that the `extra` kwarg should be changed from None to {}.\r\n\r\ne.g. here is the common/io/file one:\r\n`def create_dataset(*, path: str, extra=None) -> Dataset:`\r\n\r\nWhen #42054 is re-implemented it should be swapped to\r\n\r\n`def create_dataset(*, path: str, extra={}) -> Dataset:`\r\n\r\nand so forth for others.', 'created_at': datetime.datetime(2024, 9, 6, 11, 58, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333933159, 'issue_id': 2510231345, 'author': 'uranusjr', 'body': '> def create_dataset(*, path: str, extra={}) -> Dataset:\r\n\r\nCan’t do this because Python… https://docs.python-guide.org/writing/gotchas/#mutable-default-arguments\r\n\r\nKeeping the default as None and changing it to `{}` should be the way to do. I think I’ll add post-processing code in Dataset so None is converted automatically to `{}` so the interface does not change. (Once the Dataset class is created, there shouldn’t be compatible issues.)', 'created_at': datetime.datetime(2024, 9, 6, 12, 20, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333945799, 'issue_id': 2510231345, 'author': 'uranusjr', 'body': 'I’ve re-applied the previous changes here, and also added a fix so callers (including HookLineageCollector) can continue to pass in a None. It will be converted automatically to a dict.\r\n\r\nCan you work on a test to cover the `dataset_factory` code path?', 'created_at': datetime.datetime(2024, 9, 6, 12, 28, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334489099, 'issue_id': 2510231345, 'author': 'topherinternational', 'body': ""> I’ve re-applied the previous changes here, and also added a fix so callers (including HookLineageCollector) can continue to pass in a None. It will be converted automatically to a dict.\r\n> \r\n> Can you work on a test to cover the `dataset_factory` code path?\r\n\r\nI removed my original change, I think it's best if we keep the call stack as it is and use your fix that coerces the None to {} only in the Dataset constructor, less confusing and easier to test that way imo.\r\n\r\nI added more tests to create_dataset that cover the dataset_factory API (uri, kwargs, missing factory, and factory exception are covered)."", 'created_at': datetime.datetime(2024, 9, 6, 17, 12, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334674109, 'issue_id': 2510231345, 'author': 'potiuk', 'body': 'I added ""full-tests-needed"" label and closed/reopened to re-run all tests', 'created_at': datetime.datetime(2024, 9, 6, 19, 18, 42, tzinfo=datetime.timezone.utc)}]","topherinternational (Issue Creator) on (2024-09-06 11:35:58 UTC): @potiuk here's something?

uranusjr on (2024-09-06 11:41:54 UTC): This wasn't covered by a test? We should add one.

uranusjr on (2024-09-06 11:45:18 UTC): This should also include the previous changes since they were reverted.

topherinternational (Issue Creator) on (2024-09-06 11:47:51 UTC): Well it's revealed by some provider tests that look like they weren't run in #42054's checks.

I think the challenge is that this is arg defaults all the way down, there's a long chain of `func(kwargs, extra=None)` calls that would all need tests to detect if a call that passed no extras produced a dataset object that matched `Dataset(args)` (w/o an `extra` arg).

topherinternational (Issue Creator) on (2024-09-06 11:48:28 UTC): I opened this PR before @potiuk reverted 😓

topherinternational (Issue Creator) on (2024-09-06 11:58:22 UTC): @uranusjr idk where the dataset `factory` signature is documented, but it should be documented that the `extra` kwarg should be changed from None to {}.

e.g. here is the common/io/file one:
`def create_dataset(*, path: str, extra=None) -> Dataset:`

When #42054 is re-implemented it should be swapped to

`def create_dataset(*, path: str, extra={}) -> Dataset:`

and so forth for others.

uranusjr on (2024-09-06 12:20:28 UTC): Can’t do this because Python… https://docs.python-guide.org/writing/gotchas/#mutable-default-arguments

Keeping the default as None and changing it to `{}` should be the way to do. I think I’ll add post-processing code in Dataset so None is converted automatically to `{}` so the interface does not change. (Once the Dataset class is created, there shouldn’t be compatible issues.)

uranusjr on (2024-09-06 12:28:07 UTC): I’ve re-applied the previous changes here, and also added a fix so callers (including HookLineageCollector) can continue to pass in a None. It will be converted automatically to a dict.

Can you work on a test to cover the `dataset_factory` code path?

topherinternational (Issue Creator) on (2024-09-06 17:12:03 UTC): I removed my original change, I think it's best if we keep the call stack as it is and use your fix that coerces the None to {} only in the Dataset constructor, less confusing and easier to test that way imo.

I added more tests to create_dataset that cover the dataset_factory API (uri, kwargs, missing factory, and factory exception are covered).

potiuk on (2024-09-06 19:18:42 UTC): I added ""full-tests-needed"" label and closed/reopened to re-run all tests

"
2510220677,pull_request,closed,,"Revert ""Try to make dataset objects totally unhashable (#42054)""","This reverts commit 1c4a00bb4e15de083aea0c2a0ffe14ea97955c70.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-06 11:29:11+00:00,[],2024-09-06 11:33:33+00:00,2024-09-06 11:33:32+00:00,https://github.com/apache/airflow/pull/42065,"[('full tests needed', 'We need to run full set of tests for this PR to merge'), ('area:lineage', '')]",[],
2510219998,pull_request,closed,,Add new type of exception to catch timeout,"With old logic every ImportError that was raised by Timeout of reading the DAG was not stored in database and as a result, was not exposed to UI.
This PR adds additional Exception type to be catch, that will ensure that AirflowTaskTimeout exception will be also caught and stored in DB as other normal Import errors.

Closes #41976 
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",VladaZakharova,2024-09-06 11:28:45+00:00,[],2024-09-12 08:17:03+00:00,2024-09-06 19:04:06+00:00,https://github.com/apache/airflow/pull/42064,[],"[{'comment_id': 2334654858, 'issue_id': 2510219998, 'author': 'potiuk', 'body': 'Thanks @VladaZakharova !', 'created_at': datetime.datetime(2024, 9, 6, 19, 4, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2345526681, 'issue_id': 2510219998, 'author': 'kosteev', 'body': 'I am pretty sure it works, just to double confirm.\r\n\r\nBriefly looking the code it looks like AirflowTaskTimeout will be raised in context manager ""timeout"" outside of ""parse"" method:\r\nhttps://github.com/apache/airflow/blob/f9d03151977661e2d84a0718ca2276bc6dba406c/airflow/models/dagbag.py#L381\r\nWill be AirflowTaskTimeout be catched really by try/except in the ""parse"" method?\r\n\r\nAlso, would be good to have unit test for this. To prevent regression and also avoid e.g. doubts that I raise in this question:)\r\n\r\n@VladaZakharova @potiuk', 'created_at': datetime.datetime(2024, 9, 12, 7, 55, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2345572462, 'issue_id': 2510219998, 'author': 'VladaZakharova', 'body': 'Hi! \r\nYes, good question, thank you for pointing this out. According to my tests this exception is indeed caught and on UI we can see the output of the actual error of Timeout:\r\n![Screenshot 2024-09-12 10 14 50](https://github.com/user-attachments/assets/6c93a774-a907-4ab0-a080-334114fc3084)\r\n\r\nI will add a unit test for this in a separate PR\r\nThank you!', 'created_at': datetime.datetime(2024, 9, 12, 8, 17, 3, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-06 19:04:15 UTC): Thanks @VladaZakharova !

kosteev on (2024-09-12 07:55:19 UTC): I am pretty sure it works, just to double confirm.

Briefly looking the code it looks like AirflowTaskTimeout will be raised in context manager ""timeout"" outside of ""parse"" method:
https://github.com/apache/airflow/blob/f9d03151977661e2d84a0718ca2276bc6dba406c/airflow/models/dagbag.py#L381
Will be AirflowTaskTimeout be catched really by try/except in the ""parse"" method?

Also, would be good to have unit test for this. To prevent regression and also avoid e.g. doubts that I raise in this question:)

@VladaZakharova @potiuk

VladaZakharova (Issue Creator) on (2024-09-12 08:17:03 UTC): Hi! 
Yes, good question, thank you for pointing this out. According to my tests this exception is indeed caught and on UI we can see the output of the actual error of Timeout:
![Screenshot 2024-09-12 10 14 50](https://github.com/user-attachments/assets/6c93a774-a907-4ab0-a080-334114fc3084)

I will add a unit test for this in a separate PR
Thank you!

"
2510215208,pull_request,closed,,Fix require_confirmation_dag_change,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Currently `require_confirmation_dag_change` seems to have no effect on pause/resume switch, triggering the switch will cause confirmation window to show up regardless. 

This is caused by JS type conversions. In current version with `data-require-confirmation=""{{ appbuilder.require_confirmation_dag_change }}""` resulting value on JS side in [onChange](https://github.com/apache/airflow/blob/main/airflow/www/static/js/dag.js#L58) function has `String` type and does not automatically converts to boolean, which causes incorrect check:
```js
...
const requireConfirmation = $input.data(""require-confirmation"");  // has String type, non-empty
if (requireConfirmation) { // evaluates to true on non-empty strings
...
```

Adding `lower` on jinja side does the trick and seems like simplest fix, resulting string successfully converts to boolean. After that confirmation window shows up only when passing `True` to `require_confirmation_dag_change`.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",sowow359,2024-09-06 11:26:00+00:00,[],2024-09-13 09:23:04+00:00,2024-09-12 14:56:02+00:00,https://github.com/apache/airflow/pull/42063,"[('area:webserver', 'Webserver related Issues'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2333848103, 'issue_id': 2510215208, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 6, 11, 26, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2338442838, 'issue_id': 2510215208, 'author': 'pierrejeambrun', 'body': 'Thank you for the pull request.\r\n\r\nThat seems a little odd that the normal string ""Something"" is considered a string (most things are then truthy), but casting it to lower somehow convert that to a boolean, I would think that this would remain a string `something` and the problem would stay.\r\n\r\n~~I\'ll take a closer look tomorrow.~~ I couldn\'t find the time today, I\'ll check it the next few days, thank you for your patience.', 'created_at': datetime.datetime(2024, 9, 9, 15, 33, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2343175943, 'issue_id': 2510215208, 'author': 'pierrejeambrun', 'body': 'Ok, as I recall html attribute values are string, therefore, we end up with `attribute=\'True\'` or `attribute=\'False\'`.\r\n\r\nWhich does not work indeed, both are truthy.\r\n\r\nJquery `has` method is smart enought to convert a js string bool into an actual bool (\'true\', \'false\'), but he does not recognize python bool of course i.e \'True\' \'False\' which remain strings. This is why casting to lower solves the issue.\r\n\r\nThe problem is that this is too implicit. People reading that code will not understand why it\'s here in a couple of weeks and will have to get back here. I would prefer something more explicit like we do with `checked` attribute. Also usually the convention is `if a boolean attribute is present then it\'s true, otherwise it\'s false, independently of its value`. For instance just `checked` is enough, no need to `checked=\'true\'`.\r\n\r\nI would only set the attribute if True like this:\r\n```\r\n     {{ ""data-require-confirmation"" if appbuilder.require_confirmation_dag_change else """" }}\r\n```\r\n\r\nThen adapt the jquery query to check if the attribute is set or not, something like:\r\n\r\n```\r\n  const requireConfirmation = $input.is(""[data-require-confirmation]"");\r\n```', 'created_at': datetime.datetime(2024, 9, 11, 9, 52, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346534559, 'issue_id': 2510215208, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 12, 14, 56, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346825724, 'issue_id': 2510215208, 'author': 'bbovenzi', 'body': ""We'll need to cherry pick this for `v2-10-test`."", 'created_at': datetime.datetime(2024, 9, 12, 17, 9, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2347332695, 'issue_id': 2510215208, 'author': 'pierrejeambrun', 'body': 'Yes! I’ll open the PR tomorrow\r\n\r\nedit: https://github.com/apache/airflow/pull/42211', 'created_at': datetime.datetime(2024, 9, 12, 22, 11, 49, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-06 11:26:05 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

pierrejeambrun on (2024-09-09 15:33:23 UTC): Thank you for the pull request.

That seems a little odd that the normal string ""Something"" is considered a string (most things are then truthy), but casting it to lower somehow convert that to a boolean, I would think that this would remain a string `something` and the problem would stay.

~~I'll take a closer look tomorrow.~~ I couldn't find the time today, I'll check it the next few days, thank you for your patience.

pierrejeambrun on (2024-09-11 09:52:44 UTC): Ok, as I recall html attribute values are string, therefore, we end up with `attribute='True'` or `attribute='False'`.

Which does not work indeed, both are truthy.

Jquery `has` method is smart enought to convert a js string bool into an actual bool ('true', 'false'), but he does not recognize python bool of course i.e 'True' 'False' which remain strings. This is why casting to lower solves the issue.

The problem is that this is too implicit. People reading that code will not understand why it's here in a couple of weeks and will have to get back here. I would prefer something more explicit like we do with `checked` attribute. Also usually the convention is `if a boolean attribute is present then it's true, otherwise it's false, independently of its value`. For instance just `checked` is enough, no need to `checked='true'`.

I would only set the attribute if True like this:
```
     {{ ""data-require-confirmation"" if appbuilder.require_confirmation_dag_change else """" }}
```

Then adapt the jquery query to check if the attribute is set or not, something like:

```
  const requireConfirmation = $input.is(""[data-require-confirmation]"");
```

boring-cyborg[bot] on (2024-09-12 14:56:05 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

bbovenzi on (2024-09-12 17:09:43 UTC): We'll need to cherry pick this for `v2-10-test`.

pierrejeambrun on (2024-09-12 22:11:49 UTC): Yes! I’ll open the PR tomorrow

edit: https://github.com/apache/airflow/pull/42211

"
2510214985,pull_request,closed,,airflow 3 deprecations removed from trigger_dagrun operator and serialized_objects,airflow 3 deprecations removed from trigger_dagrun operator and serialized_objects,dirrao,2024-09-06 11:25:51+00:00,['dirrao'],2024-09-06 19:02:35+00:00,2024-09-06 19:02:35+00:00,https://github.com/apache/airflow/pull/42062,"[('area:serialization', ''), ('area:core-operators', 'Operators, Sensors and hooks within Core Airflow'), ('airflow3.0:candidate', 'Potential candidates for Airflow 3.0')]",[],
2510151666,pull_request,closed,,"Deprecated configuration stalled_task_timeout, task_adoption_timeout and worker_pods_pending_timeout removed","Deprecated configuration stalled_task_timeout, task_adoption_timeout and worker_pods_pending_timeout removed",dirrao,2024-09-06 10:48:21+00:00,['dirrao'],2024-09-09 14:12:30+00:00,2024-09-09 14:12:30+00:00,https://github.com/apache/airflow/pull/42060,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('kind:documentation', ''), ('airflow3.0:candidate', 'Potential candidates for Airflow 3.0'), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]",[],
2509844218,pull_request,closed,,chore: bump OL provider dependencies versions,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
Just a regular bump of the OpenLineage libraries to take advantage of latest features.


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kacpermuda,2024-09-06 08:32:01+00:00,[],2024-09-12 17:28:36+00:00,2024-09-10 15:02:13+00:00,https://github.com/apache/airflow/pull/42059,"[('area:providers', ''), ('full tests needed', 'We need to run full set of tests for this PR to merge'), ('provider:openlineage', 'AIP-53')]","[{'comment_id': 2333816154, 'issue_id': 2509844218, 'author': 'potiuk', 'body': 'I am afraid latest openlineage release broke main - see here https://github.com/apache/airflow/actions/runs/10734311195/job/29769445166', 'created_at': datetime.datetime(2024, 9, 6, 11, 5, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333816496, 'issue_id': 2509844218, 'author': 'potiuk', 'body': 'cc: @kacpermuda @mobuchowski', 'created_at': datetime.datetime(2024, 9, 6, 11, 5, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333839573, 'issue_id': 2509844218, 'author': 'topherinternational', 'body': ""> I am afraid latest openlineage release broke main - see here https://github.com/apache/airflow/actions/runs/10734311195/job/29769445166\r\n\r\nI saw the same failures in a branch I'm working on, I think #42054's change to the Dataset `extra` field is the problem? A bunch of tests that expect the default val to be `None` are failing bc the default is now `{}`."", 'created_at': datetime.datetime(2024, 9, 6, 11, 20, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333845489, 'issue_id': 2509844218, 'author': 'kacpermuda', 'body': ""Yes, i don't think the OL is to blame here 😄"", 'created_at': datetime.datetime(2024, 9, 6, 11, 24, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333850849, 'issue_id': 2509844218, 'author': 'potiuk', 'body': ""> Yes, i don't think the OL is to blame here 😄\r\n\r\nUps"", 'created_at': datetime.datetime(2024, 9, 6, 11, 28, 1, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-06 11:05:32 UTC): I am afraid latest openlineage release broke main - see here https://github.com/apache/airflow/actions/runs/10734311195/job/29769445166

potiuk on (2024-09-06 11:05:46 UTC): cc: @kacpermuda @mobuchowski

topherinternational on (2024-09-06 11:20:31 UTC): I saw the same failures in a branch I'm working on, I think #42054's change to the Dataset `extra` field is the problem? A bunch of tests that expect the default val to be `None` are failing bc the default is now `{}`.

kacpermuda (Issue Creator) on (2024-09-06 11:24:20 UTC): Yes, i don't think the OL is to blame here 😄

potiuk on (2024-09-06 11:28:01 UTC): Ups

"
2509842540,pull_request,closed,,Fix simple typo in the documentation.,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->

---

There are no `self` in constructors.

https://airflow.apache.org/docs/apache-airflow/stable/howto/custom-operator.html#limitations


Before:

```python
class HelloOperator(BaseOperator):
    template_fields = (""field_a"", ""field_b"")

    def __init__(field_a, field_b) -> None:
        self.field_b = field_b
```

After:

```python
class HelloOperator(BaseOperator):
    template_fields = (""field_a"", ""field_b"")

    def __init__(self, field_a, field_b) -> None:
        self.field_b = field_b
```


",mf-hyunsoo-kang,2024-09-06 08:31:10+00:00,[],2024-09-10 17:15:51+00:00,2024-09-10 17:15:47+00:00,https://github.com/apache/airflow/pull/42058,"[('kind:documentation', ''), ('type:doc-only', 'Changelog: Doc Only')]","[{'comment_id': 2333529702, 'issue_id': 2509842540, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 6, 8, 31, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2339522509, 'issue_id': 2509842540, 'author': 'jscheffl', 'body': 'Still some failures in static checks. Have you tried running `pre-commit` in your workspace or `breeze static-checks`?', 'created_at': datetime.datetime(2024, 9, 10, 3, 12, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2339547698, 'issue_id': 2509842540, 'author': 'mf-hyunsoo-kang', 'body': ""Sorry, I didn't push the changes.\r\n\r\n`field_a` and `field_b` are renamed to `foo` and `bar`, since they have more consistency with other documentations and they have shorter length not to bother formatter(see below).\r\n\r\nBefore:\r\n\r\n```python\r\ndef __init__(\r\n                self, field_b, **kwargs\r\n            ) -> None:  # should be def __init__(self, field_a, field_b, **kwargs)\r\n```\r\n\r\nAfter:\r\n\r\n```python\r\ndef __init__(self, bar, **kwargs) -> None:  # should be def __init__(self, foo, bar, **kwargs)\r\n```"", 'created_at': datetime.datetime(2024, 9, 10, 3, 44, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2341528258, 'issue_id': 2509842540, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 10, 17, 15, 49, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-06 08:31:14 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

jscheffl on (2024-09-10 03:12:06 UTC): Still some failures in static checks. Have you tried running `pre-commit` in your workspace or `breeze static-checks`?

mf-hyunsoo-kang (Issue Creator) on (2024-09-10 03:44:02 UTC): Sorry, I didn't push the changes.

`field_a` and `field_b` are renamed to `foo` and `bar`, since they have more consistency with other documentations and they have shorter length not to bother formatter(see below).

Before:

```python
def __init__(
                self, field_b, **kwargs
            ) -> None:  # should be def __init__(self, field_a, field_b, **kwargs)
```

After:

```python
def __init__(self, bar, **kwargs) -> None:  # should be def __init__(self, foo, bar, **kwargs)
```

boring-cyborg[bot] on (2024-09-10 17:15:49 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2509598290,pull_request,closed,,Update security_model.rst to clear unauthenticated endpoints exceptions,"Fixing confusion on exception to unauthenticated endpoints.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",saurabhb-dev,2024-09-06 06:08:37+00:00,[],2024-09-07 21:29:44+00:00,2024-09-07 21:26:34+00:00,https://github.com/apache/airflow/pull/42057,"[('kind:documentation', '')]","[{'comment_id': 2333314063, 'issue_id': 2509598290, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 6, 6, 8, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333325572, 'issue_id': 2509598290, 'author': 'potiuk', 'body': 'spellling needs fixing :)', 'created_at': datetime.datetime(2024, 9, 6, 6, 18, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333331556, 'issue_id': 2509598290, 'author': 'saurabhb-dev', 'body': 'Fixed the spell and grammar mistakes.', 'created_at': datetime.datetime(2024, 9, 6, 6, 23, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2336456690, 'issue_id': 2509598290, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 7, 21, 26, 36, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-06 06:08:42 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-09-06 06:18:11 UTC): spellling needs fixing :)

saurabhb-dev (Issue Creator) on (2024-09-06 06:23:10 UTC): Fixed the spell and grammar mistakes.

boring-cyborg[bot] on (2024-09-07 21:26:36 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2509565833,pull_request,closed,,Add note about dataclasses and attrs to XComs page (#42045),"* Add note about dataclasses and attrs to XComs page

The [XCom page](https://airflow.apache.org/docs/apache-airflow/stable/core-concepts/xcoms.html) doesn't make explicit reference to `dataclass` and `attrs.define`, although the TaskFlow page does. This adds a note for those looking at the possible limitations of XCom types with a reference to where XCom type constraints are also discussed.

(cherry picked from commit 9a5f27f6dc560dcf456cabb793a32a61eab98dea)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-06 05:43:33+00:00,[],2024-09-13 17:33:54+00:00,2024-09-06 06:36:53+00:00,https://github.com/apache/airflow/pull/42056,"[('kind:documentation', ''), ('type:doc-only', 'Changelog: Doc Only')]","[{'comment_id': 2333275300, 'issue_id': 2509565833, 'author': 'potiuk', 'body': 'Backport #42045', 'created_at': datetime.datetime(2024, 9, 6, 5, 43, 52, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-06 05:43:52 UTC): Backport #42045

"
2509472783,pull_request,closed,,Rewrite how DAG to dataset / dataset alias are stored,"backport https://github.com/apache/airflow/pull/41987

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-09-06 04:11:18+00:00,[],2024-09-13 17:35:00+00:00,2024-09-06 06:41:30+00:00,https://github.com/apache/airflow/pull/42055,"[('type:bug-fix', 'Changelog: Bug Fixes')]",[],
2509471933,pull_request,closed,,Try to make dataset objects totally unhashable,"Using the hash property on Dataset (and DatasetAlias) is problematic since subclassing is a possibility, and user code may not correctly implement hashing for Airflow’s purposes.",uranusjr,2024-09-06 04:10:21+00:00,[],2024-09-06 11:41:18+00:00,2024-09-06 07:16:53+00:00,https://github.com/apache/airflow/pull/42054,[],"[{'comment_id': 2333327534, 'issue_id': 2509471933, 'author': 'uranusjr', 'body': 'This should generally not affect too many usages, but there’s no harm adding a note I guess. We can’t tell how those are used…', 'created_at': datetime.datetime(2024, 9, 6, 6, 19, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333858910, 'issue_id': 2509471933, 'author': 'potiuk', 'body': 'cc: @uranusjr @Lee-W -> we revert it for now as it causes some tests involving open-lineage (in amazon and common.io providers) to fail - see https://github.com/apache/airflow/pull/42059 discussion. Apparently there is an implicit dependency betweeen datasets implementation and amazon/common.io tests\r\n\r\nPlease re-do it and add ""full tests needed"" label for this change to make sure all the tests are passing.', 'created_at': datetime.datetime(2024, 9, 6, 11, 33, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333871021, 'issue_id': 2509471933, 'author': 'kacpermuda', 'body': 'I think the OpenLineage is not involved here, but the hook level lineage collection is causing different providers to create datasets, so there is a dependency there.', 'created_at': datetime.datetime(2024, 9, 6, 11, 41, 17, tzinfo=datetime.timezone.utc)}]","uranusjr (Issue Creator) on (2024-09-06 06:19:54 UTC): This should generally not affect too many usages, but there’s no harm adding a note I guess. We can’t tell how those are used…

potiuk on (2024-09-06 11:33:13 UTC): cc: @uranusjr @Lee-W -> we revert it for now as it causes some tests involving open-lineage (in amazon and common.io providers) to fail - see https://github.com/apache/airflow/pull/42059 discussion. Apparently there is an implicit dependency betweeen datasets implementation and amazon/common.io tests

Please re-do it and add ""full tests needed"" label for this change to make sure all the tests are passing.

kacpermuda on (2024-09-06 11:41:17 UTC): I think the OpenLineage is not involved here, but the hook level lineage collection is causing different providers to create datasets, so there is a dependency there.

"
2509068775,pull_request,closed,,AIP-69: Add leftover glue of all pieces to Edge Provider,"This PR is a split of https://github.com/apache/airflow/pull/41729 and builds on-top of the following pieces as slices of the overall MVP implementation - to make review easier:

- https://github.com/apache/airflow/pull/42046
- https://github.com/apache/airflow/pull/42047
- #42048
- #42049
- #42050 

It only contains the leftovers needed to complete the MVP - basically all ""glue"" that is not working or fitting to the pieces of the linkes PRs. If you want to see glue only, please take a look to the LAST commit only,",jscheffl,2024-09-05 23:53:25+00:00,[],2024-10-18 00:32:01+00:00,2024-10-18 00:17:00+00:00,https://github.com/apache/airflow/pull/42051,"[('area:providers', ''), ('area:dev-tools', ''), ('AIP-69', 'Edge Executor')]",[],
2509050906,pull_request,closed,,AIP-69: Add CLI to Edge Provider,"This PR is a split of https://github.com/apache/airflow/pull/41729 and builds on-top of https://github.com/apache/airflow/pull/42046 and https://github.com/apache/airflow/pull/42047 to make review easier.

It only contains the new Edge CLI functions needed of the edge provider package - the CLI is needed to run the worker on the remote site. The first commit is from the other base PRs and if this is merged will go-away on rebase. If you want to see Executor implementation only, please take a look to the second commit only,",jscheffl,2024-09-05 23:41:42+00:00,[],2024-09-24 20:49:36+00:00,2024-09-24 20:49:36+00:00,https://github.com/apache/airflow/pull/42050,"[('area:providers', ''), ('area:dev-tools', ''), ('kind:documentation', ''), ('AIP-69', 'Edge Executor')]",[],
2509040655,pull_request,closed,,AIP-69: Add API and Plugin to Edge Provider,"This PR is a split of https://github.com/apache/airflow/pull/41729 and builds on-top of https://github.com/apache/airflow/pull/42046 and https://github.com/apache/airflow/pull/42047 to make review easier.

It only contains the new Edge API endpoint and UI Plugin functions needed of the edge provider package. The first commit is from the other base PRs and if this is merged will go-away on rebase. If you want to see Executor implementation only, please take a look to the second commit only,",jscheffl,2024-09-05 23:34:37+00:00,[],2024-10-03 09:41:51+00:00,2024-10-03 09:41:51+00:00,https://github.com/apache/airflow/pull/42049,"[('area:providers', ''), ('area:dev-tools', ''), ('AIP-69', 'Edge Executor')]",[],
2509008529,pull_request,closed,,AIP-69: Add Executor to Edge Provider,"This PR is a split of https://github.com/apache/airflow/pull/41729 and builds on-top of https://github.com/apache/airflow/pull/42046 and #42047 to make review easier.

It only contains the new Edge Executor functions needed of the edge provider package. The first commit is from the other base PRs and if this is merged will go-away on rebase. If you want to see Executor implementation only, please take a look to the second commit only,",jscheffl,2024-09-05 23:21:50+00:00,[],2024-10-17 21:59:45+00:00,2024-10-17 21:38:12+00:00,https://github.com/apache/airflow/pull/42048,"[('area:providers', ''), ('area:dev-tools', ''), ('kind:documentation', ''), ('AIP-69', 'Edge Executor')]","[{'comment_id': 2420554519, 'issue_id': 2509008529, 'author': 'jscheffl', 'body': ""> Pre-emptively approving, but please either address https://github.com/apache/airflow/pull/42048/files#r1805240595 or tell me why it's not a problem.\r\n\r\nCan confirm both: Addressed it and it is not a problem!"", 'created_at': datetime.datetime(2024, 10, 17, 20, 53, 41, tzinfo=datetime.timezone.utc)}]","jscheffl (Issue Creator) on (2024-10-17 20:53:41 UTC): Can confirm both: Addressed it and it is not a problem!

"
2508987767,pull_request,closed,,AIP-69: Adding Edge Provider DB Models,"This PR is a split of https://github.com/apache/airflow/pull/41729 and builds on-top of #42046 to make review easier.

It only contains the DB models needed of the edge provider package w/o any functions.",jscheffl,2024-09-05 23:07:28+00:00,[],2024-09-16 19:55:57+00:00,2024-09-16 19:55:57+00:00,https://github.com/apache/airflow/pull/42047,"[('area:providers', ''), ('area:dev-tools', ''), ('kind:documentation', ''), ('AIP-69', 'Edge Executor')]",[],
2508959427,pull_request,closed,,AIP-69: Adding Empty Edge Provider Package,"This PR is a split of #41729 to make review easier.

It only contains the basic skeleton of the edge provider package w/o any functions. Only the boilerplate.",jscheffl,2024-09-05 22:51:38+00:00,[],2024-09-11 22:27:56+00:00,2024-09-11 22:27:56+00:00,https://github.com/apache/airflow/pull/42046,"[('area:providers', ''), ('area:dev-tools', ''), ('kind:documentation', ''), ('AIP-69', 'Edge Executor')]",[],
2508945339,pull_request,closed,,Add note about dataclasses and attrs to XComs page,"The [XCom page](https://airflow.apache.org/docs/apache-airflow/stable/core-concepts/xcoms.html) doesn't make explicit reference to `dataclass` and `attrs.define`, although the TaskFlow page does. This adds a note for those looking at the possible limitations of XCom types with a reference to where XCom type constraints are also discussed.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",AetherUnbound,2024-09-05 22:44:38+00:00,[],2024-09-06 15:39:25+00:00,2024-09-06 05:42:24+00:00,https://github.com/apache/airflow/pull/42045,"[('kind:documentation', '')]",[],
2508927475,pull_request,closed,,Avoid joinedload loading with one-to-many relations in dag bulk write…,"Currently we are using joinedload on a lot of relations to dag in the query that locks the dag row.  This could potentially result in join explosion if we were dealing with significant numbers of dags (e.g. dag factory) along with many dag tags or dataset references.

There's not really a good reason to load eagerly in this way.  So let's not do it.

<img width=""784"" alt=""image"" src=""https://github.com/user-attachments/assets/284c470c-69cb-410a-a3ab-0e4bfd1fca1b"">

tagging @Lee-W and @uranusjr  just for vis since dataset alias was a recent addition to this query.

@seanmuth fyi in case curious",dstandish,2024-09-05 22:38:10+00:00,[],2024-11-25 00:16:37+00:00,2024-11-25 00:16:37+00:00,https://github.com/apache/airflow/pull/42044,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file')]","[{'comment_id': 2333451103, 'issue_id': 2508927475, 'author': 'uranusjr', 'body': 'But don’t this make those rows not locked and can cause race conditions when accessed elsewhere?', 'created_at': datetime.datetime(2024, 9, 6, 7, 45, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334338328, 'issue_id': 2508927475, 'author': 'dstandish', 'body': ""> But don’t this make those rows not locked and can cause race conditions when accessed elsewhere?\r\n\r\nYou mean the rows in the joined tables?  No we don't lock those as it is, because we specify `of=DagModel`."", 'created_at': datetime.datetime(2024, 9, 6, 15, 42, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2482366258, 'issue_id': 2508927475, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 11, 18, 9, 13, 39, tzinfo=datetime.timezone.utc)}]","uranusjr on (2024-09-06 07:45:43 UTC): But don’t this make those rows not locked and can cause race conditions when accessed elsewhere?

dstandish (Issue Creator) on (2024-09-06 15:42:06 UTC): You mean the rows in the joined tables?  No we don't lock those as it is, because we specify `of=DagModel`.

github-actions[bot] on (2024-11-18 09:13:39 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2508747038,pull_request,closed,,Retry Test Airflow Release Step Multiple Times ,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
closes: #42025
* Script added for retrying non-interactive commands.
* The script is used for retrying breeze commands under `Test Airflow Release Step` 3 times

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bugraoz93,2024-09-05 21:19:58+00:00,[],2024-09-09 11:05:20+00:00,2024-09-09 11:05:20+00:00,https://github.com/apache/airflow/pull/42043,"[('area:dev-tools', '')]","[{'comment_id': 2332994908, 'issue_id': 2508747038, 'author': 'bugraoz93', 'body': ""The script the resulting permission denied. I have checked the other scripts such as `install_breeze.sh` but there wasn't any special case. I have started thinking I don't have enough permissions to include custom scripts for security purposes to not inject anything harmful."", 'created_at': datetime.datetime(2024, 9, 6, 1, 18, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2336531956, 'issue_id': 2508747038, 'author': 'potiuk', 'body': ""It's likely about executable permission for the script"", 'created_at': datetime.datetime(2024, 9, 8, 3, 38, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2336532037, 'issue_id': 2508747038, 'author': 'potiuk', 'body': '`chnod a+x script.sh`', 'created_at': datetime.datetime(2024, 9, 8, 3, 38, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2336628591, 'issue_id': 2508747038, 'author': 'bugraoz93', 'body': ""I thought the same at the beginning either executable permissions or ownership of the file was not exactly correct, I checked how you included the `scripts/ci/testing/run_integration_tests_with_retry.sh` file into the `integration-tests` since the approach should be pretty much the same. #39913 In this one, I couldn't find any trace of `chmod` included for the script somewhere in the project and the `integration-tests` step worked. So I assumed the scripts were included in the CI image without specifying permission of the file. I may be missing something :thinking:"", 'created_at': datetime.datetime(2024, 9, 8, 10, 15, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2336655725, 'issue_id': 2508747038, 'author': 'potiuk', 'body': '> So I assumed the scripts were included in the CI image without specifying permission of the file. I may be missing something \r\n\r\nThere is no ""trace"" when you look at the file ""content"" - you need to see at the git file status a bit mre deeply. See for example accepted answer in https://stackoverflow.com/questions/46175753/how-do-i-see-the-permission-of-a-file-in-git - you need to manually set ""chmod a+x"" on the file, then add the file again and you will see that permissions of the file in git are diferent than the permission of other files:\r\n\r\nYou can also see it locally. When I check out your PR, I see:\r\n\r\n```\r\n[jarek:~/code/airflow] retry-test-Airflow-release-step+ ± ls -la scripts/ci/testing\r\ntotal 48\r\ndrwxr-xr-x   6 jarek  staff    192 Sep  8 04:45 .\r\ndrwxr-xr-x  15 jarek  staff    480 Aug 27 14:13 ..\r\n-rw-r--r--   1 jarek  staff   2258 Sep  8 04:45 run_breeze_command_with_retries.sh\r\n-rwxr-xr-x   1 jarek  staff   1719 Aug 27 14:13 run_integration_tests_with_retry.sh\r\n-rwxr-xr-x   1 jarek  staff  10839 Aug 27 14:13 summarize_captured_warnings.py\r\n-rwxr-xr-x   1 jarek  staff   3859 Aug 27 14:13 summarize_junit_failures.py\r\n```\r\n\r\nas you see - comparing to other scripts in the folder, your script misses the ""executable"" bit - and the problem is that this executable bit is not stored in `git`.\r\n\r\n\r\nSo in this case:\r\n\r\n```bash\r\nchmod a+x ./scripts/testing/run_breeze_command_with_retries.sh\r\ngit add ./scripts/testing/run_breeze_command_with_retries.sh\r\ngit commit --amend\r\n```\r\n\r\nshould do the job.\r\n\r\nYou will see after `git add` that even if the content of the file did not change, the ""executable bit"" did - and git wil offer you to modify the executable bit for that file when you commit it.', 'created_at': datetime.datetime(2024, 9, 8, 11, 50, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2336658325, 'issue_id': 2508747038, 'author': 'bugraoz93', 'body': 'Thanks for the detailed answer! I thought this was somehow an automated process. How should I miss that :facepalm:', 'created_at': datetime.datetime(2024, 9, 8, 11, 59, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2336711522, 'issue_id': 2508747038, 'author': 'bugraoz93', 'body': 'Awesome! Many thanks!', 'created_at': datetime.datetime(2024, 9, 8, 14, 41, 3, tzinfo=datetime.timezone.utc)}]","bugraoz93 (Issue Creator) on (2024-09-06 01:18:12 UTC): The script the resulting permission denied. I have checked the other scripts such as `install_breeze.sh` but there wasn't any special case. I have started thinking I don't have enough permissions to include custom scripts for security purposes to not inject anything harmful.

potiuk on (2024-09-08 03:38:01 UTC): It's likely about executable permission for the script

potiuk on (2024-09-08 03:38:30 UTC): `chnod a+x script.sh`

bugraoz93 (Issue Creator) on (2024-09-08 10:15:59 UTC): I thought the same at the beginning either executable permissions or ownership of the file was not exactly correct, I checked how you included the `scripts/ci/testing/run_integration_tests_with_retry.sh` file into the `integration-tests` since the approach should be pretty much the same. #39913 In this one, I couldn't find any trace of `chmod` included for the script somewhere in the project and the `integration-tests` step worked. So I assumed the scripts were included in the CI image without specifying permission of the file. I may be missing something :thinking:

potiuk on (2024-09-08 11:50:13 UTC): There is no ""trace"" when you look at the file ""content"" - you need to see at the git file status a bit mre deeply. See for example accepted answer in https://stackoverflow.com/questions/46175753/how-do-i-see-the-permission-of-a-file-in-git - you need to manually set ""chmod a+x"" on the file, then add the file again and you will see that permissions of the file in git are diferent than the permission of other files:

You can also see it locally. When I check out your PR, I see:

```
[jarek:~/code/airflow] retry-test-Airflow-release-step+ ± ls -la scripts/ci/testing
total 48
drwxr-xr-x   6 jarek  staff    192 Sep  8 04:45 .
drwxr-xr-x  15 jarek  staff    480 Aug 27 14:13 ..
-rw-r--r--   1 jarek  staff   2258 Sep  8 04:45 run_breeze_command_with_retries.sh
-rwxr-xr-x   1 jarek  staff   1719 Aug 27 14:13 run_integration_tests_with_retry.sh
-rwxr-xr-x   1 jarek  staff  10839 Aug 27 14:13 summarize_captured_warnings.py
-rwxr-xr-x   1 jarek  staff   3859 Aug 27 14:13 summarize_junit_failures.py
```

as you see - comparing to other scripts in the folder, your script misses the ""executable"" bit - and the problem is that this executable bit is not stored in `git`.


So in this case:

```bash
chmod a+x ./scripts/testing/run_breeze_command_with_retries.sh
git add ./scripts/testing/run_breeze_command_with_retries.sh
git commit --amend
```

should do the job.

You will see after `git add` that even if the content of the file did not change, the ""executable bit"" did - and git wil offer you to modify the executable bit for that file when you commit it.

bugraoz93 (Issue Creator) on (2024-09-08 11:59:55 UTC): Thanks for the detailed answer! I thought this was somehow an automated process. How should I miss that :facepalm:

bugraoz93 (Issue Creator) on (2024-09-08 14:41:03 UTC): Awesome! Many thanks!

"
2508633595,pull_request,closed,,Move `is_active` user property to FAB auth manager,"Clean up.

`is_active` is a property from FAB auth manager. We should not take care of it in Airflow but in FAB auth manager.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-05 20:14:45+00:00,[],2024-09-12 17:42:16+00:00,2024-09-12 17:42:14+00:00,https://github.com/apache/airflow/pull/42042,"[('area:webserver', 'Webserver related Issues'), ('area:providers', ''), ('provider:fab', '')]","[{'comment_id': 2333313742, 'issue_id': 2508633595, 'author': 'potiuk', 'body': 'I guess this means that Airlfow 3 will not work with earlier version of the FAB provider?  Which I think is fine (I think it\'s quite a reasonable assumption that only ""latest"" version of FAB provider will work with Airflow 3), but it means that we have to bump version of the provider in the same PR and add fab_provider>= limit in preinstalled providers.', 'created_at': datetime.datetime(2024, 9, 6, 6, 8, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334179826, 'issue_id': 2508633595, 'author': 'vincbeck', 'body': '> I guess this means that Airlfow 3 will not work with earlier version of the FAB provider? Which I think is fine (I think it\'s quite a reasonable assumption that only ""latest"" version of FAB provider will work with Airflow 3), but it means that we have to bump version of the provider in the same PR and add fab_provider>= limit in preinstalled providers.\r\n\r\nThat\'s true, in that case an inactive user will be able to log in in Airflow 3 with earlier version of FAB. I am not sure if this inactive user feature is widely used but I guess to be on the safe side we can do what you propose', 'created_at': datetime.datetime(2024, 9, 6, 14, 25, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334238091, 'issue_id': 2508633595, 'author': 'vincbeck', 'body': '> I guess this means that Airlfow 3 will not work with earlier version of the FAB provider? Which I think is fine (I think it\'s quite a reasonable assumption that only ""latest"" version of FAB provider will work with Airflow 3), but it means that we have to bump version of the provider in the same PR and add fab_provider>= limit in preinstalled providers.\r\n\r\nDone, please take a look to double check', 'created_at': datetime.datetime(2024, 9, 6, 14, 53, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334336251, 'issue_id': 2508633595, 'author': 'vincbeck', 'body': '> I guess this means that Airlfow 3 will not work with earlier version of the FAB provider? Which I think is fine (I think it\'s quite a reasonable assumption that only ""latest"" version of FAB provider will work with Airflow 3), but it means that we have to bump version of the provider in the same PR and add fab_provider>= limit in preinstalled providers.\r\n\r\nActually, does not it makes sense to do that before releasing Airflow 3? Several releases of FAB provider will happen before Airflow 3 is released, thus we might want to do it just before releasing Airflow 3 and set the latest FAB provider version?', 'created_at': datetime.datetime(2024, 9, 6, 15, 40, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334833528, 'issue_id': 2508633595, 'author': 'vincbeck', 'body': 'Converting the PR to draft to avoid accidental merging', 'created_at': datetime.datetime(2024, 9, 6, 21, 26, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2339034048, 'issue_id': 2508633595, 'author': 'vincbeck', 'body': '> > I guess this means that Airlfow 3 will not work with earlier version of the FAB provider? Which I think is fine (I think it\'s quite a reasonable assumption that only ""latest"" version of FAB provider will work with Airflow 3), but it means that we have to bump version of the provider in the same PR and add fab_provider>= limit in preinstalled providers.\r\n> \r\n> Actually, does not it makes sense to do that before releasing Airflow 3? Several releases of FAB provider will happen before Airflow 3 is released, thus we might want to do it just before releasing Airflow 3 and set the latest FAB provider version?\r\n\r\nWDYT @potiuk ?', 'created_at': datetime.datetime(2024, 9, 9, 20, 32, 48, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-06 06:08:25 UTC): I guess this means that Airlfow 3 will not work with earlier version of the FAB provider?  Which I think is fine (I think it's quite a reasonable assumption that only ""latest"" version of FAB provider will work with Airflow 3), but it means that we have to bump version of the provider in the same PR and add fab_provider>= limit in preinstalled providers.

vincbeck (Issue Creator) on (2024-09-06 14:25:05 UTC): That's true, in that case an inactive user will be able to log in in Airflow 3 with earlier version of FAB. I am not sure if this inactive user feature is widely used but I guess to be on the safe side we can do what you propose

vincbeck (Issue Creator) on (2024-09-06 14:53:18 UTC): Done, please take a look to double check

vincbeck (Issue Creator) on (2024-09-06 15:40:52 UTC): Actually, does not it makes sense to do that before releasing Airflow 3? Several releases of FAB provider will happen before Airflow 3 is released, thus we might want to do it just before releasing Airflow 3 and set the latest FAB provider version?

vincbeck (Issue Creator) on (2024-09-06 21:26:59 UTC): Converting the PR to draft to avoid accidental merging

vincbeck (Issue Creator) on (2024-09-09 20:32:48 UTC): WDYT @potiuk ?

"
2508564130,pull_request,closed,,Add `__doc__` property to `@task`,"Adds `__doc__` property to `@task` decorators via `_TaskDecorator`
This is helpful to use things like [doctests](https://docs.python.org/3/library/doctest.html)

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",fritz-astronomer,2024-09-05 19:29:31+00:00,[],2024-09-07 04:54:56+00:00,2024-09-07 04:54:56+00:00,https://github.com/apache/airflow/pull/42041,[],"[{'comment_id': 2333365626, 'issue_id': 2508564130, 'author': 'uranusjr', 'body': 'Probably better to use `functools.update_wrapper` if possible. It covers more than `__doc__`.', 'created_at': datetime.datetime(2024, 9, 6, 6, 49, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334688000, 'issue_id': 2508564130, 'author': 'fritz-astronomer', 'body': ""@uranusjr was thinking that too (had recently used it for something else, which made me think to do this in the first place) but couldn't quite figure out how to do it without groking more of that section of the code - that class doesn't have an __init__, and I was using it functionally, but that's an object :/"", 'created_at': datetime.datetime(2024, 9, 6, 19, 29, 47, tzinfo=datetime.timezone.utc)}]","uranusjr on (2024-09-06 06:49:44 UTC): Probably better to use `functools.update_wrapper` if possible. It covers more than `__doc__`.

fritz-astronomer (Issue Creator) on (2024-09-06 19:29:47 UTC): @uranusjr was thinking that too (had recently used it for something else, which made me think to do this in the first place) but couldn't quite figure out how to do it without groking more of that section of the code - that class doesn't have an __init__, and I was using it functionally, but that's an object :/

"
2508049035,pull_request,closed,,Fix dev_mode check in init_react_ui,"We had a bug when checking the dev_mode environment variable when figuring out which html file to load the UI from. It was always true, so the index html would try to read from a dev server which wasn't running.

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-09-05 15:00:06+00:00,[],2024-09-05 15:27:31+00:00,2024-09-05 15:27:29+00:00,https://github.com/apache/airflow/pull/42036,"[('area:webserver', 'Webserver related Issues')]",[],
2508008352,pull_request,closed,,update google-cloud-spanner to include testing extras,"See: https://github.com/googleapis/python-spanner/issues/1193
",rbarrette,2024-09-05 14:43:24+00:00,[],2024-09-05 16:16:27+00:00,2024-09-05 16:16:27+00:00,https://github.com/apache/airflow/pull/42035,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2331884572, 'issue_id': 2508008352, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 5, 14, 43, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2332144854, 'issue_id': 2508008352, 'author': 'potiuk', 'body': 'As explained in https://github.com/googleapis/python-spanner/issues/1193#issuecomment-2332141256 this is a wrong fix. We rather wait until spanner team solves the problem and make it consistently - either ""test"" dependency (and not required) or ""regular"" dependency available in ""Requires"" section. The current solution with excluding the buggy version of spanner is good for now. Let\'s what will be the final solution for the future version of spanner library.', 'created_at': datetime.datetime(2024, 9, 5, 16, 16, 25, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-05 14:43:28 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-09-05 16:16:25 UTC): As explained in https://github.com/googleapis/python-spanner/issues/1193#issuecomment-2332141256 this is a wrong fix. We rather wait until spanner team solves the problem and make it consistently - either ""test"" dependency (and not required) or ""regular"" dependency available in ""Requires"" section. The current solution with excluding the buggy version of spanner is good for now. Let's what will be the final solution for the future version of spanner library.

"
2508000824,pull_request,closed,,Test,"This check is part of a CI/CD security bug responsible disclosure process, adhering to a non-intrusive approach in full compliance with the terms of your Vulnerability Disclosure Program (VDP) or Bug Bounty Program (BBP). Any successful exploit will be reported ethically through your VDP or BBP. If you have any questions, please feel free to contact me via my GitHub email or through the contact information provided in the OSS CLA.",shaikhyaser,2024-09-05 14:40:20+00:00,[],2024-09-05 16:44:16+00:00,2024-09-05 14:40:28+00:00,https://github.com/apache/airflow/pull/42034,"[('area:dev-tools', '')]","[{'comment_id': 2332184617, 'issue_id': 2508000824, 'author': 'potiuk', 'body': 'Thanks for explaining your intention. \r\n\r\nPlease ideally in the future please reach out to the email explained in our security policy in the repository announcing your intentions.', 'created_at': datetime.datetime(2024, 9, 5, 16, 36, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2332192223, 'issue_id': 2508000824, 'author': 'potiuk', 'body': 'Because even if you are doing that in the PR, we might report you to github as a preventive action - which we already did a few times with others', 'created_at': datetime.datetime(2024, 9, 5, 16, 40, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2332198271, 'issue_id': 2508000824, 'author': 'shaikhyaser', 'body': '> Thanks for explaining your intention.\r\n> \r\n> Please ideally in the future please reach out to the email explained in our security policy in the repository announcing your intentions.\r\n\r\nHi @potiuk, Sure. Will do. Thank you!', 'created_at': datetime.datetime(2024, 9, 5, 16, 44, 15, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-05 16:36:36 UTC): Thanks for explaining your intention. 

Please ideally in the future please reach out to the email explained in our security policy in the repository announcing your intentions.

potiuk on (2024-09-05 16:40:41 UTC): Because even if you are doing that in the PR, we might report you to github as a preventive action - which we already did a few times with others

shaikhyaser (Issue Creator) on (2024-09-05 16:44:15 UTC): Hi @potiuk, Sure. Will do. Thank you!

"
2507616712,pull_request,closed,,"Fix mock assertion in Livy test, for real this time","Followup to #42027.
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",topherinternational,2024-09-05 12:16:38+00:00,[],2024-09-05 12:37:20+00:00,2024-09-05 12:36:33+00:00,https://github.com/apache/airflow/pull/42030,"[('area:providers', ''), ('provider:apache-livy', '')]","[{'comment_id': 2331372095, 'issue_id': 2507616712, 'author': 'topherinternational', 'body': '@potiuk that method typo was masking two logic errors in this test function, fixed here.', 'created_at': datetime.datetime(2024, 9, 5, 12, 17, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2331475361, 'issue_id': 2507616712, 'author': 'potiuk', 'body': 'Thank you !', 'created_at': datetime.datetime(2024, 9, 5, 12, 36, 50, tzinfo=datetime.timezone.utc)}]","topherinternational (Issue Creator) on (2024-09-05 12:17:22 UTC): @potiuk that method typo was masking two logic errors in this test function, fixed here.

potiuk on (2024-09-05 12:36:50 UTC): Thank you !

"
2507531062,pull_request,closed,,test: make flaky OL test wait for future callback done,Attempt to fix https://github.com/apache/airflow/issues/42020,mobuchowski,2024-09-05 11:34:11+00:00,[],2024-10-02 21:44:32+00:00,2024-09-05 20:59:53+00:00,https://github.com/apache/airflow/pull/42028,"[('area:providers', ''), ('provider:openlineage', 'AIP-53')]","[{'comment_id': 2331301721, 'issue_id': 2507531062, 'author': 'potiuk', 'body': '👀', 'created_at': datetime.datetime(2024, 9, 5, 11, 40, 42, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-05 11:40:42 UTC): 👀

"
2507488135,pull_request,closed,,Fix mock assertion in Livy test,"Looks like #41658 introduced a typo in mock assertion code, `not_called()` instead of `assert_not_called()`.

This passed in Python 3.8-3.11, but Mock in 3.12 threw an error which killed 3.12 tests e.g. in #41555:

```
FAILED tests/providers/apache/livy/hooks/test_livy.py::TestLivyDbHook::test_post_batch_calls_get_conn_if_no_batch_id - AttributeError: 'not_called' is not a valid assertion. Use a spec for the mock if 'not_called' is meant to be an attribute.
```

(I guess unittest.mock in 3.12 auto-detects when you intended to assert.)

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",topherinternational,2024-09-05 11:12:50+00:00,[],2024-09-05 11:33:33+00:00,2024-09-05 11:17:44+00:00,https://github.com/apache/airflow/pull/42027,"[('area:providers', ''), ('provider:apache-livy', '')]","[{'comment_id': 2331262282, 'issue_id': 2507488135, 'author': 'potiuk', 'body': 'Thanks - yeah - this is common problem for Python 3.12. Possibly we should add some static check for that.', 'created_at': datetime.datetime(2024, 9, 5, 11, 18, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2331269535, 'issue_id': 2507488135, 'author': 'potiuk', 'body': ""The problem is that  I have not seen any ready-to-use ruff or other rule for that, only Python 3.12 will start to raise those exceptions:\r\n\r\n```\r\nFAILED tests/providers/apache/livy/hooks/test_livy.py::TestLivyDbHook::test_post_batch_calls_get_conn_if_no_batch_id - AttributeError: \r\n'not_called' is not a valid assertion. Use a spec for the mock if 'not_called' is meant to be an attribute.\r\n```\r\n\r\nNot sure if we can automate it for Python 3.8 (and soon Python 3.9) automatically ?"", 'created_at': datetime.datetime(2024, 9, 5, 11, 22, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2331289300, 'issue_id': 2507488135, 'author': 'potiuk', 'body': 'I created an issue in `ruff` repo: https://github.com/astral-sh/ruff/issues/13252', 'created_at': datetime.datetime(2024, 9, 5, 11, 33, 31, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-05 11:18:10 UTC): Thanks - yeah - this is common problem for Python 3.12. Possibly we should add some static check for that.

potiuk on (2024-09-05 11:22:18 UTC): The problem is that  I have not seen any ready-to-use ruff or other rule for that, only Python 3.12 will start to raise those exceptions:

```
FAILED tests/providers/apache/livy/hooks/test_livy.py::TestLivyDbHook::test_post_batch_calls_get_conn_if_no_batch_id - AttributeError: 
'not_called' is not a valid assertion. Use a spec for the mock if 'not_called' is meant to be an attribute.
```

Not sure if we can automate it for Python 3.8 (and soon Python 3.9) automatically ?

potiuk on (2024-09-05 11:33:31 UTC): I created an issue in `ruff` repo: https://github.com/astral-sh/ruff/issues/13252

"
2507460929,pull_request,closed,,Update dags.rst (#41999),"Bacport #41999 

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-05 10:59:35+00:00,[],2024-09-13 18:39:12+00:00,2024-09-05 18:49:55+00:00,https://github.com/apache/airflow/pull/42026,"[('kind:documentation', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2507194355,pull_request,closed,,Rename Dataset database tables as Asset,"As part of https://github.com/apache/airflow/issues/42307

---

* Rename table ``dataset_alias_dataset`` as ``asset_alias_asset``
    * Rename column ``dataset_id`` as ``dataset_id``
    * Rename index ``idx_dataset_alias_dataset_alias_id`` as ``idx_asset_alias_asset_alias_id``
    * Rename index ``idx_dataset_alias_dataset_alias_dataset_id`` as ``idx_asset_alias_asset_asset_id``
    * Rename foreign key ``dataset_alias_dataset_alias_id_fkey`` as ``asset_alias_asset_alias_id_fk_key``
    * Rename foreign key ``dataset_alias_dataset_dataset_id_fkey`` as ``asset_alias_asset_asset_id_fk_key``

* Rename table ``dataset_alias_dataset_event`` as ``asset_alias_asset_event``
    * Rename index ``idx_dataset_alias_dataset_event_alias_id`` as ``idx_asset_alias_asset_event_alias_id``
    * Rename index ``idx_dataset_alias_dataset_event_alias_id`` as ``idx_asset_alias_asset_event_event_id``
    * Rename foreign key ``dataset_alias_dataset_event_alias_id_fkey`` as ``asset_alias_asset_event_asset_id_fkey``
    * Rename foreign key ``dataset_alias_dataset_event_event_id_fkey`` as ``asset_alias_asset_event_event_id_fk_key``

* Rename table ``dataset_alias`` as ``asset_alias``
    * Rename index ``idx_dataset_alias_name_unique`` as ``idx_asset_alias_name_unique``

* Rename table ``dataset`` as ``asset``

    * Rename index ``idx_dataset_name_uri_unique`` as ``idx_asset_name_uri_unique``

* Rename table ``dag_schedule_dataset_alias_reference`` as ``dag_schedule_asset_alias_reference``
    * Rename index ``idx_dag_schedule_dataset_alias_reference_dag_id`` as ``idx_dag_schedule_asset_alias_reference_dag_id``
    * Rename primary key ``dsdar_pkey`` as ``asaar_pkey``
    * Rename foreign key ``dsdar_dataset_fkey`` as ``dsaar_asset_alias_fkey``
    * Rename foreign key ``dsdar_dag_id_fkey`` as ``dsaar_dag_fkey``

* Rename table ``dag_schedule_dataset_reference`` as ``dag_schedule_asset_reference``
    * Rename column ``dataset_id`` as ``dataset_id``
    * Rename index ``idx_dag_schedule_dataset_reference_dag_id`` as ``idx_dag_schedule_asset_reference_dag_id``
    * Rename primary key ``dsdr_pkey`` as ``dsar_pkey``
    * Rename foreign key ``dsdr_dag_id_fkey`` as ``dsar_dag_id_fkey``
    * Rename foreign key ``dsdr_dataset_fkey`` as ``dsar_asset_fkey``

* Rename table ``task_outlet_dataset_reference`` as ``task_outlet_asset_reference``
    * Rename column ``dataset_id`` as ``dataset_id``
    * Rename index ``idx_task_outlet_dataset_reference_dag_id`` as ``idx_task_outlet_asset_reference_dag_id``
    * Rename primary key ``todr_pkey`` as ``toar_pkey``
    * Rename foreign key ``todr_dag_id_fkey`` as ``toar_dag_id_fkey``
    * Rename foreign key ``todr_dataset_fkey`` as ``toar_asset_fkey``

* Rename table ``dataset_dag_run_queue`` as ``asset_dag_run_queue``
    * Rename column ``dataset_id`` as ``dataset_id``
    * Rename index ``idx_dataset_dag_run_queue_target_dag_id`` as ``idx_asset_dag_run_queue_target_dag_id``
    * Rename primary key ``datasetdagrunqueue_pkey`` as ``assetdagrunqueue_pkey``
    * Rename foreign key ``ddrq_dag_fkey`` as ``adrq_dag_fkey``
    * Rename foreign key ``ddrq_dataset_fkey`` as ``adrq_dag_fkey``

* Rename table ``dagrun_dataset_event`` as ``dagrun_asset_event``
    * Rename index ``idx_dagrun_dataset_events_dag_run_id`` as ``idx_dagrun_asset_events_dag_run_id``
    * Rename index ``idx_dagrun_dataset_events_event_id`` as ``idx_dagrun_asset_events_event_id``
    * Rename foreign key ``dagrun_dataset_event_event_id_fkey`` as ``dagrun_asset_event_dag_run_id_fkey``
    * Rename foreign key ``dagrun_dataset_event_dag_run_id_fkey`` as ``dagrun_asset_event_event_id_fkey``

* Rename table ``dataset_event`` as ``asset_event``
    * Rename column ``dataset_id`` as ``dataset_id``
    * Rename index ``idx_dataset_id_timestamp`` as ``idx_asset_id_timestamp``

* Rename column ``dataset_expression`` in ``dag`` table as ``asset_expression``
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-09-05 08:57:37+00:00,[],2024-10-21 10:44:16+00:00,2024-10-21 10:44:13+00:00,https://github.com/apache/airflow/pull/42023,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:dev-tools', ''), ('area:API', ""Airflow's REST/HTTP API""), ('area:lineage', ''), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes'), ('AIP-74', 'Dataset -> Asset'), ('legacy ui', 'Whether legacy UI change should be allowed in PR'), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2425429392, 'issue_id': 2507194355, 'author': 'uranusjr', 'body': ""Code looks good to me, the news and API docs need some tweaks. Feel free to merge once you've addressed them."", 'created_at': datetime.datetime(2024, 10, 21, 2, 28, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2426300672, 'issue_id': 2507194355, 'author': 'Lee-W', 'body': 'I just address the comments from TP. The last CI failure was due to WTforms issue being fixed in https://github.com/pallets-eco/wtforms/pull/862 (same as https://github.com/apache/airflow/pull/43205#issuecomment-2426193185) \r\n\r\nWill merge this one', 'created_at': datetime.datetime(2024, 10, 21, 10, 42, 41, tzinfo=datetime.timezone.utc)}]","uranusjr on (2024-10-21 02:28:12 UTC): Code looks good to me, the news and API docs need some tweaks. Feel free to merge once you've addressed them.

Lee-W (Issue Creator) on (2024-10-21 10:42:41 UTC): I just address the comments from TP. The last CI failure was due to WTforms issue being fixed in https://github.com/pallets-eco/wtforms/pull/862 (same as https://github.com/apache/airflow/pull/43205#issuecomment-2426193185) 

Will merge this one

"
2507160252,pull_request,closed,,Mark test_listener_logs_failed_serialization as flaky,"Making it stable is tracked in #42020

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-05 08:43:22+00:00,[],2024-09-05 08:52:23+00:00,2024-09-05 08:52:22+00:00,https://github.com/apache/airflow/pull/42022,"[('area:providers', ''), ('provider:openlineage', 'AIP-53')]","[{'comment_id': 2330962952, 'issue_id': 2507160252, 'author': 'kacpermuda', 'body': ""@mobuchowski I think that's the one test that caused trouble before :)"", 'created_at': datetime.datetime(2024, 9, 5, 8, 49, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2330967912, 'issue_id': 2507160252, 'author': 'potiuk', 'body': 'Yeah. I saw quite a few failures of that one recently - tracking in https://github.com/apache/airflow/issues/42020 :D', 'created_at': datetime.datetime(2024, 9, 5, 8, 52, 19, tzinfo=datetime.timezone.utc)}]","kacpermuda on (2024-09-05 08:49:52 UTC): @mobuchowski I think that's the one test that caused trouble before :)

potiuk (Issue Creator) on (2024-09-05 08:52:19 UTC): Yeah. I saw quite a few failures of that one recently - tracking in https://github.com/apache/airflow/issues/42020 :D

"
2507159702,pull_request,closed,,draft: run CI for 40171,,mobuchowski,2024-09-05 08:43:07+00:00,[],2024-09-05 11:07:16+00:00,2024-09-05 11:07:16+00:00,https://github.com/apache/airflow/pull/42021,"[('area:providers', ''), ('kind:documentation', ''), ('provider:common-sql', ''), ('provider:postgres', '')]",[],
2507129684,pull_request,closed,,UI Rest API authentication,"## What does this PR do

Add support for `basic_auth` backend to the new UI Rest API. Add relevant permissions helper and tests. The goal for this is first to show how permissions and auth can be handled in FastAPI and also have a small working POC for us to be able to then work on the front end. (And be able to migrate existing endpoints **with** appropriate permission decorators and write test against that as well).

Goal:
- Allow the endpoint migrations to be ported with the appropriate permissions and tested, to not loose them in transit
- Use this PR as a preliminary work to discuss and see how FastAPI can integrate our permission/auth code, make a POC with the `basic_auth` backend.


## What this PR does not do
After some digging in the last two days, I find that our `auth_backends` implementations, `auth_manager` init code, `BaseAuthManager` and more importantly `FabAuthManager` etc. are tightly coupled to flask. For instance the way we read webserver config file from python with `from_pyfile`, check app config with `app.config`, access global flask object from within an app context `g`, `request`, `get_current_user`, `flask_login`, `current_app`, all of that does not work without flask.

This PR does not rewrite all that code to be `Flask` / webserver framework agnostic and usable with FastAPI because the effort is too high at the moment and this is not what I am trying to demonstrate with this PR.

We basically use the `flask_app` init code to initialize correctly all the different helper classes, and I added a few checks here and there to make the basic auth work outside of a Flask app context.


![Screenshot 2024-09-05 at 10 25 18](https://github.com/user-attachments/assets/983c5007-1382-47fa-83c9-0122ce7d4886)
![Screenshot 2024-09-05 at 10 25 52](https://github.com/user-attachments/assets/6d6e4dab-bad9-4ad3-904c-3c49ea6554eb)
![Screenshot 2024-09-05 at 10 28 26](https://github.com/user-attachments/assets/27143305-d028-49b1-b2d5-93108914ec16)
",pierrejeambrun,2024-09-05 08:28:36+00:00,[],2024-10-01 21:34:34+00:00,2024-10-01 21:34:34+00:00,https://github.com/apache/airflow/pull/42019,"[('area:webserver', 'Webserver related Issues'), ('area:providers', ''), ('provider:fab', ''), ('AIP-84', 'Modern Rest API')]","[{'comment_id': 2330921873, 'issue_id': 2507129684, 'author': 'pierrejeambrun', 'body': ""cc: @vincbeck @jedcunningham  I know you both are working on the FAB / auth / permissions part, might use your input. (maybe there's an easier way of making that work)"", 'created_at': datetime.datetime(2024, 9, 5, 8, 29, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2331149944, 'issue_id': 2507129684, 'author': 'pierrejeambrun', 'body': 'Well the CI is not happy, working on it.', 'created_at': datetime.datetime(2024, 9, 5, 10, 17, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2331715207, 'issue_id': 2507129684, 'author': 'pierrejeambrun', 'body': 'Maybe we can leverage that new `SimpleAuthManager` indeed https://github.com/apache/airflow/pull/42004', 'created_at': datetime.datetime(2024, 9, 5, 13, 40, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2331771663, 'issue_id': 2507129684, 'author': 'potiuk', 'body': '> Maybe we can leverage that new `SimpleAuthManager` indeed #42004\r\n\r\nYep. That would be strongly preferred I think and main idea behind implementing it by @vincbeck', 'created_at': datetime.datetime(2024, 9, 5, 14, 3, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387116868, 'issue_id': 2507129684, 'author': 'vincbeck', 'body': ""I'll close this one in favor of #42634"", 'created_at': datetime.datetime(2024, 10, 1, 21, 34, 34, tzinfo=datetime.timezone.utc)}]","pierrejeambrun (Issue Creator) on (2024-09-05 08:29:32 UTC): cc: @vincbeck @jedcunningham  I know you both are working on the FAB / auth / permissions part, might use your input. (maybe there's an easier way of making that work)

pierrejeambrun (Issue Creator) on (2024-09-05 10:17:18 UTC): Well the CI is not happy, working on it.

pierrejeambrun (Issue Creator) on (2024-09-05 13:40:28 UTC): Maybe we can leverage that new `SimpleAuthManager` indeed https://github.com/apache/airflow/pull/42004

potiuk on (2024-09-05 14:03:29 UTC): Yep. That would be strongly preferred I think and main idea behind implementing it by @vincbeck

vincbeck on (2024-10-01 21:34:34 UTC): I'll close this one in favor of #42634

"
2507089271,pull_request,closed,,Fix typo in error stack trace formatting for clearer output,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

Fix a typo in error stack trace formatting by replacing ""\\\n"" joins with [`traceback.format_exc()`](https://docs.python.org/3/library/traceback.html#traceback.format_exc). The previous implementation used ""\\\n"" to join lines, resulting in ""\n"" printed at the beginning of the lines. Fixing it by joining on ""\n"" would just  add unnecessary line breaks and extra spacing in the stack trace. Since traceback functions already handle line breaks, this fix ensures proper formatting without redundant joins.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",aboitreaud,2024-09-05 08:09:42+00:00,[],2024-09-23 14:30:05+00:00,2024-09-23 14:27:54+00:00,https://github.com/apache/airflow/pull/42017,"[('area:providers', ''), ('provider:openlineage', 'AIP-53')]","[{'comment_id': 2330883288, 'issue_id': 2507089271, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 5, 8, 9, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344685813, 'issue_id': 2507089271, 'author': 'JDarDagran', 'body': '@kacpermuda could you please comment on that? I can see you made current join in https://github.com/apache/airflow/pull/39813', 'created_at': datetime.datetime(2024, 9, 11, 20, 55, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2346876897, 'issue_id': 2507089271, 'author': 'kacpermuda', 'body': ""Hey @aboitreaud , thanks for the PR ! Apart from the problem you described with the formatting, you are not passing the exception object anymore to the formatting func. I'm thinking if there possibly is some edge case, where we the last exception raised is **not** the one that we have here in the adapter. Have you considered it here?"", 'created_at': datetime.datetime(2024, 9, 12, 17, 37, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2348358162, 'issue_id': 2507089271, 'author': 'aboitreaud', 'body': 'Hi @kacpermuda and @uranusjr and thanks for your comments!\r\nGood catch, and thanks for pointing that out! I hadn’t fully considered the possibility of an edge case where the last exception raised might not be the one we have here in the adapter. To address this, I’m reverting back to using `traceback.format_exception(error)` instead of relying on `traceback.format_exc()`. This ensures we are handling the correct exception in all cases.\r\n\r\nHowever, I don\'t think that joining on ""\\n"" is necessary, here is of what the stack trace would look like:\r\n- the **old output**, by joining on ""\\\\\\n"": \r\n```\r\nTraceback (most recent call last):\r\n\\n  File ""example.py"", line 6, in cause_error\r\n    result = 1 / 0\r\n\\nZeroDivisionError: division by zero\r\n```\r\n-  by joining on ""\\n"": \r\n```\r\nTraceback (most recent call last):\r\n\r\n  File ""example.py"", line 6, in cause_error\r\n    result = 1 / 0\r\n\r\nZeroDivisionError: division by zero\r\n```\r\n- the **new output**, by joining on """":\r\n```\r\nTraceback (most recent call last):\r\n  File ""example.py"", line 6, in cause_error\r\n    result = 1 / 0\r\nZeroDivisionError: division by zero\r\n```', 'created_at': datetime.datetime(2024, 9, 13, 8, 31, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2355584054, 'issue_id': 2507089271, 'author': 'aboitreaud', 'body': ""@uranusjr could I please also get your approval following Kacper's please ?"", 'created_at': datetime.datetime(2024, 9, 17, 12, 23, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2368044446, 'issue_id': 2507089271, 'author': 'aboitreaud', 'body': '👊 Gentle bump here @uranusjr @mobuchowski, could I get a code owner review please ?', 'created_at': datetime.datetime(2024, 9, 23, 12, 15, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2368454849, 'issue_id': 2507089271, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 23, 14, 27, 57, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-05 08:09:46 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

JDarDagran on (2024-09-11 20:55:58 UTC): @kacpermuda could you please comment on that? I can see you made current join in https://github.com/apache/airflow/pull/39813

kacpermuda on (2024-09-12 17:37:33 UTC): Hey @aboitreaud , thanks for the PR ! Apart from the problem you described with the formatting, you are not passing the exception object anymore to the formatting func. I'm thinking if there possibly is some edge case, where we the last exception raised is **not** the one that we have here in the adapter. Have you considered it here?

aboitreaud (Issue Creator) on (2024-09-13 08:31:20 UTC): Hi @kacpermuda and @uranusjr and thanks for your comments!
Good catch, and thanks for pointing that out! I hadn’t fully considered the possibility of an edge case where the last exception raised might not be the one we have here in the adapter. To address this, I’m reverting back to using `traceback.format_exception(error)` instead of relying on `traceback.format_exc()`. This ensures we are handling the correct exception in all cases.

However, I don't think that joining on ""\n"" is necessary, here is of what the stack trace would look like:
- the **old output**, by joining on ""\\\n"": 
```
Traceback (most recent call last):
\n  File ""example.py"", line 6, in cause_error
    result = 1 / 0
\nZeroDivisionError: division by zero
```
-  by joining on ""\n"": 
```
Traceback (most recent call last):

  File ""example.py"", line 6, in cause_error
    result = 1 / 0

ZeroDivisionError: division by zero
```
- the **new output**, by joining on """":
```
Traceback (most recent call last):
  File ""example.py"", line 6, in cause_error
    result = 1 / 0
ZeroDivisionError: division by zero
```

aboitreaud (Issue Creator) on (2024-09-17 12:23:20 UTC): @uranusjr could I please also get your approval following Kacper's please ?

aboitreaud (Issue Creator) on (2024-09-23 12:15:57 UTC): 👊 Gentle bump here @uranusjr @mobuchowski, could I get a code owner review please ?

boring-cyborg[bot] on (2024-09-23 14:27:57 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2506440762,pull_request,closed,,Improve docs on markdown docs in DAGs (#42012),Backport of #42012 to v2.10,jscheffl,2024-09-04 22:53:19+00:00,[],2024-09-13 17:33:05+00:00,2024-09-04 23:14:34+00:00,https://github.com/apache/airflow/pull/42013,"[('kind:documentation', ''), ('type:doc-only', 'Changelog: Doc Only')]",[],
2506420795,pull_request,closed,,Improve docs on markdown docs in DAGs,"Improve documentation to current code, no template files anymore and some more precision how MD files are used.

related: #41886 
",jscheffl,2024-09-04 22:32:37+00:00,[],2024-09-04 22:59:27+00:00,2024-09-04 22:51:02+00:00,https://github.com/apache/airflow/pull/42012,"[('kind:documentation', '')]",[],
2506364545,pull_request,closed,,Exclude google-cloud-spanner 3.49.0,"Google Cloud Spanner library released today has a missing grpc_intercept module.

See: https://github.com/googleapis/python-spanner/issues/1193

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-04 21:48:18+00:00,[],2024-09-04 21:57:18+00:00,2024-09-04 21:57:17+00:00,https://github.com/apache/airflow/pull/42011,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]",[],
2506312447,pull_request,closed,,Add codeowners for new UI,"Add myself and @pierrejeambrun as codeowners for the `airflow/ui` directory


---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-09-04 21:10:38+00:00,[],2024-09-04 21:40:01+00:00,2024-09-04 21:39:59+00:00,https://github.com/apache/airflow/pull/42010,"[('area:dev-tools', '')]",[],
2506194495,pull_request,closed,,Refactor new UI Nav,"Redesign the navigation bar in the new UI from the top to the left hand side. A big downside of the legacy UI was too many navs and banners pushing the useful page content halfway down the page.

Dark Mode:
<img width=""1158"" alt=""Screenshot 2024-09-04 at 4 08 54 PM"" src=""https://github.com/user-attachments/assets/3666a756-a2d0-49e6-a0a0-845c6066f3a5"">

Light Mode:
<img width=""1129"" alt=""Screenshot 2024-09-04 at 4 08 58 PM"" src=""https://github.com/user-attachments/assets/1c5395a5-1469-4923-9f21-e8f4064f57a1"">



---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-09-04 20:15:14+00:00,[],2024-09-05 13:13:01+00:00,2024-09-05 13:13:00+00:00,https://github.com/apache/airflow/pull/42009,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2330257175, 'issue_id': 2506194495, 'author': 'eladkal', 'body': 'Very nice!\r\n\r\nI see you decided to drop the tags and owner from the default view but choose to have description. I think tags and owner are better to display first and description can be opened when clicking on the expand arrow', 'created_at': datetime.datetime(2024, 9, 4, 22, 24, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2330259584, 'issue_id': 2506194495, 'author': 'bbovenzi', 'body': '> Very nice!\r\n> \r\n> I see you decided to drop the tags and owner from the default view but choose to have description. I think tags and owner are better to display first and description can be opened when clicking on the expand arrow\r\n\r\nOh. Ignore the dags table for now. It was a placeholder. It is going to be redesigned. And everything you just said is already in the works.', 'created_at': datetime.datetime(2024, 9, 4, 22, 26, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2330265074, 'issue_id': 2506194495, 'author': 'potiuk', 'body': 'Nice indeed. And bold. And I love it.', 'created_at': datetime.datetime(2024, 9, 4, 22, 32, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2330488516, 'issue_id': 2506194495, 'author': 'eladkal', 'body': '> Oh. Ignore the dags table for now. It was a placeholder. It is going to be redesigned. And everything you just said is already in the works.\r\n\r\nSuper cool!', 'created_at': datetime.datetime(2024, 9, 5, 2, 43, 42, tzinfo=datetime.timezone.utc)}]","eladkal on (2024-09-04 22:24:29 UTC): Very nice!

I see you decided to drop the tags and owner from the default view but choose to have description. I think tags and owner are better to display first and description can be opened when clicking on the expand arrow

bbovenzi (Issue Creator) on (2024-09-04 22:26:51 UTC): Oh. Ignore the dags table for now. It was a placeholder. It is going to be redesigned. And everything you just said is already in the works.

potiuk on (2024-09-04 22:32:02 UTC): Nice indeed. And bold. And I love it.

eladkal on (2024-09-05 02:43:42 UTC): Super cool!

"
2505957092,pull_request,closed,,"add argument to python operator, test code of it","closes: #41093 

At present, it is only possible for all python tasks to execute in a new interpreter for every execution globally via this setting: 

[https://airflow.apache.org/docs/apache-airflow/stable/configurations-ref.html#execute-tasks-new-python-interpreter]

gitHub discussion: #40956

This PR aims to control this behavior at the task level for a single task execution. The argument `execute_tasks_new_python_interpreter` is added to `PythonOperator.`

Setting the environment variable `AIRFLOW__CORE__EXECUTE_TASKS_NEW_PYTHON_INTERPRETER=True` will override the default configuration file value (which is False) and execute the task in a new interpreter.












 



<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Prab-27,2024-09-04 17:46:18+00:00,[],2024-09-04 21:08:25+00:00,2024-09-04 18:24:09+00:00,https://github.com/apache/airflow/pull/42007,"[('area:core-operators', 'Operators, Sensors and hooks within Core Airflow')]","[{'comment_id': 2329648515, 'issue_id': 2505957092, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 4, 17, 46, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2329710643, 'issue_id': 2505957092, 'author': 'potiuk', 'body': 'Did you test it? \r\n\r\nAs I understand how thngs work This is not going to work. ""Execute task using new python interpreter"" configuration is evaluated long before the operator is instantiated.\r\n\r\nSo I believe this is just a wishful thinking it will work this wayl', 'created_at': datetime.datetime(2024, 9, 4, 18, 23, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2329713631, 'issue_id': 2505957092, 'author': 'potiuk', 'body': 'Closing it actually - unless I am entirely wrong and someone will show how it can work.', 'created_at': datetime.datetime(2024, 9, 4, 18, 25, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2329899567, 'issue_id': 2505957092, 'author': 'Prab-27', 'body': 'I have modified my PR description regarding the query. I agree - “configuration is evaluated long before the operator is instantiated.” \r\n\r\nHowever, we can override this configuration value when the task is instantiated by using the environment variable `AIRFLOW__CORE__EXECUTE_TASKS_NEW_PYTHON_INTERPRETER = True` added to the arguments of ` PythonOperator.`\r\n\r\nyes , I have tested this, and the environment variable can override the configuration correctly.', 'created_at': datetime.datetime(2024, 9, 4, 20, 20, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2330012857, 'issue_id': 2505957092, 'author': 'potiuk', 'body': 'The environment variable is set, but it does not mean the new interpreter is spawned when you run the task. This is not tested. And IMHO - has no chance to work - precisely because for it to work, the new interpreter should be spawned before PythonOperator is instantiated.', 'created_at': datetime.datetime(2024, 9, 4, 20, 51, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2330034785, 'issue_id': 2505957092, 'author': 'potiuk', 'body': 'Spawning new interpreter happens in local_task_runner - long before there is even a chance to tun `_init_` of the operator where you would set the variable. \r\n\r\nCan you show a proof and test that the new proython interpreter is started when you run the task in Airlfow?', 'created_at': datetime.datetime(2024, 9, 4, 20, 54, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2330123598, 'issue_id': 2505957092, 'author': 'Prab-27', 'body': 'Oh, that’s how it works. Sure, I will try to do it and understand how it works. If it runs successfully, I’ll get back to you.', 'created_at': datetime.datetime(2024, 9, 4, 21, 8, 24, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-04 17:46:22 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-09-04 18:23:19 UTC): Did you test it? 

As I understand how thngs work This is not going to work. ""Execute task using new python interpreter"" configuration is evaluated long before the operator is instantiated.

So I believe this is just a wishful thinking it will work this wayl

potiuk on (2024-09-04 18:25:03 UTC): Closing it actually - unless I am entirely wrong and someone will show how it can work.

Prab-27 (Issue Creator) on (2024-09-04 20:20:47 UTC): I have modified my PR description regarding the query. I agree - “configuration is evaluated long before the operator is instantiated.” 

However, we can override this configuration value when the task is instantiated by using the environment variable `AIRFLOW__CORE__EXECUTE_TASKS_NEW_PYTHON_INTERPRETER = True` added to the arguments of ` PythonOperator.`

yes , I have tested this, and the environment variable can override the configuration correctly.

potiuk on (2024-09-04 20:51:49 UTC): The environment variable is set, but it does not mean the new interpreter is spawned when you run the task. This is not tested. And IMHO - has no chance to work - precisely because for it to work, the new interpreter should be spawned before PythonOperator is instantiated.

potiuk on (2024-09-04 20:54:21 UTC): Spawning new interpreter happens in local_task_runner - long before there is even a chance to tun `_init_` of the operator where you would set the variable. 

Can you show a proof and test that the new proython interpreter is started when you run the task in Airlfow?

Prab-27 (Issue Creator) on (2024-09-04 21:08:24 UTC): Oh, that’s how it works. Sure, I will try to do it and understand how it works. If it runs successfully, I’ll get back to you.

"
2505867146,pull_request,open,,Implement on_killed support for tasks during DAG run timeout,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---

* This is a PR to fix Test workflow issues in the previous [PR](https://github.com/apache/airflow/pull/41627).

This PR addresses issue #41036 by adding support for the `on_killed` callback on tasks that are still running when a DAG run reaches its timeout.

Key changes:

1. Added a new configuration option `call_on_kill_on_dagrun_timeout` to control whether tasks should be killed when a DAG run times out (default: True).
2. Updated logic in `_schedule_dag_run` to call task `on_kill` if  `call_on_kill_on_dagrun_timeout` is enabled.

closes: https://github.com/apache/airflow/issues/41036

Testing:
- Added unit test for the new timeout handling logic
- Verified that the new configuration option works as expected
",MRLab12,2024-09-04 16:53:10+00:00,[],2024-12-23 15:20:10+00:00,,https://github.com/apache/airflow/pull/42005,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:serialization', ''), ('area:API', ""Airflow's REST/HTTP API""), ('legacy api', 'Whether legacy API changes should be allowed in PR')]","[{'comment_id': 2331922613, 'issue_id': 2505867146, 'author': 'MRLab12', 'body': ""After the last test fix I did there, I'm thinking what would the correct default behavior for this feature should be? Currently it's default True, but if we want to normally just skip the TI, then the default should be False."", 'created_at': datetime.datetime(2024, 9, 5, 14, 51, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2357090849, 'issue_id': 2505867146, 'author': 'MRLab12', 'body': '@RNHTTR Checking in here, have you gotten a chance to look at these changes?', 'created_at': datetime.datetime(2024, 9, 17, 23, 2, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2395116425, 'issue_id': 2505867146, 'author': 'MRLab12', 'body': ""I had a conflict and made a mistake when pushing the commits again. After getting the commits pushed, the build is failing with the error: `Please ask maintainer to assign the 'legacy api' label to the PR in order to continue` . Is this correct?"", 'created_at': datetime.datetime(2024, 10, 5, 16, 54, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2458603625, 'issue_id': 2505867146, 'author': 'MRLab12', 'body': ""Looks like there has been an extensive change that was merged recently [here](https://github.com/apache/airflow/pull/43076) that changed how the DAG properties are defined. I'm going through the changes in the PR, but would the changes from here go in Airflow's core rather than in the Task SDK?\r\n\r\nTrying to fix the merge conflict and a bit confused in where the properties go now."", 'created_at': datetime.datetime(2024, 11, 6, 2, 26, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2559891820, 'issue_id': 2505867146, 'author': 'RNHTTR', 'body': ""@MRLab12 I think they definitely need to go into the Task SDK, because that's what users will interface with. Because the models inherit from their associated SDK objects ([example](https://github.com/apache/airflow/blob/main/airflow/models/dag.py#L313)), I don't think you need to duplicate them there unless you'll be explicitly writing code at the model level, which I don't _think_ is necessary."", 'created_at': datetime.datetime(2024, 12, 23, 15, 20, 8, tzinfo=datetime.timezone.utc)}]","MRLab12 (Issue Creator) on (2024-09-05 14:51:21 UTC): After the last test fix I did there, I'm thinking what would the correct default behavior for this feature should be? Currently it's default True, but if we want to normally just skip the TI, then the default should be False.

MRLab12 (Issue Creator) on (2024-09-17 23:02:21 UTC): @RNHTTR Checking in here, have you gotten a chance to look at these changes?

MRLab12 (Issue Creator) on (2024-10-05 16:54:35 UTC): I had a conflict and made a mistake when pushing the commits again. After getting the commits pushed, the build is failing with the error: `Please ask maintainer to assign the 'legacy api' label to the PR in order to continue` . Is this correct?

MRLab12 (Issue Creator) on (2024-11-06 02:26:48 UTC): Looks like there has been an extensive change that was merged recently [here](https://github.com/apache/airflow/pull/43076) that changed how the DAG properties are defined. I'm going through the changes in the PR, but would the changes from here go in Airflow's core rather than in the Task SDK?

Trying to fix the merge conflict and a bit confused in where the properties go now.

RNHTTR on (2024-12-23 15:20:08 UTC): @MRLab12 I think they definitely need to go into the Task SDK, because that's what users will interface with. Because the models inherit from their associated SDK objects ([example](https://github.com/apache/airflow/blob/main/airflow/models/dag.py#L313)), I don't think you need to duplicate them there unless you'll be explicitly writing code at the model level, which I don't _think_ is necessary.

"
2505780087,pull_request,closed,,Implement `SimpleAuthManager`,"Implement the simple auth manager intended to be used in Airflow 3. For more information about the simple auth manager, see #41683.

Login form
![Screenshot 2024-09-04 at 3 44 47 PM](https://github.com/user-attachments/assets/183577f8-9938-40b9-bc43-c6b11e9670b2)

Login form (dark mode)
![Screenshot 2024-09-04 at 11 55 19 AM](https://github.com/user-attachments/assets/8afa709b-1bae-4901-833c-50b478d99d49)

Error message when wrong credentials
![Screenshot 2024-09-04 at 11 58 37 AM](https://github.com/user-attachments/assets/b20052f1-2bfd-423e-a956-6a311c492847)

What is not part of this PR and will be done in follow-up PRs:
- The feature in simple auth manager disabling the authentication and allowing everyone with all permissions
- Documentation
- Setting the simple auth manager as default in Airflow
- Update tests to rely on simple auth manager and no longer on FAB auth manager (besides FAB auth manager tests of course)
- Add warning message in the UI letting the user knows this is for development purposes only

This simple auth manager is required for completion of AIP-79.

Other note:
- The simple auth manager uses Flask app builder to register a view to Airflow environment. This is how it is done today in auth managers to register custom views. This will change in the future and will likely leverage the mechanism provided by AIP-68 to create new views in the Airflow environment through plugins

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",vincbeck,2024-09-04 16:10:23+00:00,[],2024-09-17 16:24:28+00:00,2024-09-17 16:24:26+00:00,https://github.com/apache/airflow/pull/42004,"[('area:webserver', 'Webserver related Issues'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2331846548, 'issue_id': 2505780087, 'author': 'vincbeck', 'body': '> I am not 100% convinced if webserver config is the right way - IMHO having a toml-based structured configuration might be better (but it will be future work as you mentioned).\r\n\r\n100% agree with you. I dont like it either but it is more a temporary solution. Whenever we switch the Airflow config to TOML, my intention is to leverage it', 'created_at': datetime.datetime(2024, 9, 5, 14, 31, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2353790255, 'issue_id': 2505780087, 'author': 'vincbeck', 'body': ""> Pure-reading the code looks good - as integration in breeze will come later - what is the esiest way to test (locally)? Would like to see it pre.merge on my laptop once :-D\r\n\r\n`export AIRFLOW__CORE__AUTH_MANAGER='airflow.auth.managers.simple.simple_auth_manager.SimpleAuthManager'` :)"", 'created_at': datetime.datetime(2024, 9, 16, 19, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2353907256, 'issue_id': 2505780087, 'author': 'jscheffl', 'body': ""> > Pure-reading the code looks good - as integration in breeze will come later - what is the esiest way to test (locally)? Would like to see it pre.merge on my laptop once :-D\r\n> \r\n> `export AIRFLOW__CORE__AUTH_MANAGER='airflow.auth.managers.simple.simple_auth_manager.SimpleAuthManager'` :)\r\n\r\nRTFM :-D Besides one small nit in the example is working for the legacy UI.\r\nNOT working for the new UI though. But would rather blame the new UI and not the simple login manager?"", 'created_at': datetime.datetime(2024, 9, 16, 20, 24, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2353957453, 'issue_id': 2505780087, 'author': 'vincbeck', 'body': ""> > > Pure-reading the code looks good - as integration in breeze will come later - what is the esiest way to test (locally)? Would like to see it pre.merge on my laptop once :-D\r\n> > \r\n> > \r\n> > `export AIRFLOW__CORE__AUTH_MANAGER='airflow.auth.managers.simple.simple_auth_manager.SimpleAuthManager'` :)\r\n> \r\n> RTFM :-D Besides one small nit in the example is working for the legacy UI. NOT working for the new UI though. But would rather blame the new UI and not the simple login manager?\r\n\r\nYep, waiting for AIP-68 :)"", 'created_at': datetime.datetime(2024, 9, 16, 20, 33, 30, tzinfo=datetime.timezone.utc)}]","vincbeck (Issue Creator) on (2024-09-05 14:31:31 UTC): 100% agree with you. I dont like it either but it is more a temporary solution. Whenever we switch the Airflow config to TOML, my intention is to leverage it

vincbeck (Issue Creator) on (2024-09-16 19:53:00 UTC): `export AIRFLOW__CORE__AUTH_MANAGER='airflow.auth.managers.simple.simple_auth_manager.SimpleAuthManager'` :)

jscheffl on (2024-09-16 20:24:03 UTC): RTFM :-D Besides one small nit in the example is working for the legacy UI.
NOT working for the new UI though. But would rather blame the new UI and not the simple login manager?

vincbeck (Issue Creator) on (2024-09-16 20:33:30 UTC): Yep, waiting for AIP-68 :)

"
2505705248,pull_request,closed,,Implement on_killed support for tasks during DAG run timeout,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---

*This is a new PR to fix an issue with the Tests workflow (old [PR](https://github.com/apache/airflow/pull/41627))

This PR addresses issue #41036 by adding support for the `on_killed` callback on tasks that are still running when a DAG run reaches its timeout.

Key changes:

1. Added a new configuration option `call_on_kill_on_dagrun_timeout` to control whether tasks should be killed when a DAG run times out (default: False).
2. Updated logic in `_schedule_dag_run` to call task `on_kill` if  `call_on_kill_on_dagrun_timeout` is enabled.

closes: https://github.com/apache/airflow/issues/41036

Testing:
- Added unit test for the new timeout handling logic
- Verified that the new configuration option works as expected
",MRLab12,2024-09-04 15:33:38+00:00,[],2024-09-04 15:44:22+00:00,2024-09-04 15:44:18+00:00,https://github.com/apache/airflow/pull/42002,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:serialization', ''), ('area:API', ""Airflow's REST/HTTP API"")]",[],
2505604705,pull_request,closed,,Fix issue generation failing after deleting a PR,"Seems that #41416 PR has been somehow (?) deleted and when we try to generate issue links for it, the issue generation fails (and it is not an issue as well). This change should workaround that by skipping the PR.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-04 14:56:11+00:00,[],2024-09-04 15:31:27+00:00,2024-09-04 15:31:25+00:00,https://github.com/apache/airflow/pull/42001,"[('area:dev-tools', '')]","[{'comment_id': 2329296732, 'issue_id': 2505604705, 'author': 'Lee-W', 'body': 'Thanks @potiuk . This seems to block the ci for a while', 'created_at': datetime.datetime(2024, 9, 4, 14, 57, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2329302919, 'issue_id': 2505604705, 'author': 'potiuk', 'body': '> Thanks @potiuk . This seems to block the ci for a while\r\n\r\nYeah - see slack. Looks like the PR in question is `gone` - same as the contributor who created it. I will take a close look at the PR if there is nothing `suspicious` there. The account could be deleted by GitHubs ""malware"" automation detection, so let\'s see if there was something **strange** there .\r\n\r\nHappened for the first time ever to see PR that is basically `gone`', 'created_at': datetime.datetime(2024, 9, 4, 15, 0, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2329310462, 'issue_id': 2505604705, 'author': 'potiuk', 'body': 'Nothing suspicious.', 'created_at': datetime.datetime(2024, 9, 4, 15, 3, 17, tzinfo=datetime.timezone.utc)}]","Lee-W on (2024-09-04 14:57:47 UTC): Thanks @potiuk . This seems to block the ci for a while

potiuk (Issue Creator) on (2024-09-04 15:00:14 UTC): Yeah - see slack. Looks like the PR in question is `gone` - same as the contributor who created it. I will take a close look at the PR if there is nothing `suspicious` there. The account could be deleted by GitHubs ""malware"" automation detection, so let's see if there was something **strange** there .

Happened for the first time ever to see PR that is basically `gone`

potiuk (Issue Creator) on (2024-09-04 15:03:17 UTC): Nothing suspicious.

"
2505587129,pull_request,closed,,Refresh images manually can now be done per-platform,"The process of refreshing images manually used to refresh separate images ""per platform"" - but assumed we refresh both platforms.

This PR allows to refresh the multi-platform images separately per ech platform (since currently we only refresh AMD in canary builds, we can refresh images manually for ARM onlyi using MacBooks)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-04 14:49:31+00:00,[],2024-09-05 09:11:44+00:00,2024-09-05 09:11:42+00:00,https://github.com/apache/airflow/pull/42000,"[('area:dev-tools', '')]",[],
2505542057,pull_request,closed,,Fix level of a section in the DAGs documentation,"Change _""Setup and teardown""_ section's level in the document.
It seems like it should be under _""Control Flow""_ section.
The current state causes confusion, thus I propose to move the section one level above.
",marbrex,2024-09-04 14:31:16+00:00,[],2024-09-05 10:57:59+00:00,2024-09-05 10:57:55+00:00,https://github.com/apache/airflow/pull/41999,"[('kind:documentation', ''), ('type:doc-only', 'Changelog: Doc Only')]","[{'comment_id': 2331224798, 'issue_id': 2505542057, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 5, 10, 57, 58, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-05 10:57:58 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2505413757,pull_request,closed,,Minor fixes to ensure successful Vertex AI LLMops pipeline,"- **SupervisedFineTuningTrainOperator**: As of today, google-cloud-aiplatform package does not support SupervisedFineTuningJob type, so choosing to return summary metrics instead
- minor code documentation fixes
- ensuring param consistency across operators
- ensuring successful tests


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",CYarros10,2024-09-04 13:40:15+00:00,[],2024-12-09 14:54:01+00:00,2024-09-19 19:40:23+00:00,https://github.com/apache/airflow/pull/41997,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]",[],
2505412683,pull_request,closed,,Raise SystemExit if breeze test specifies a directory that is also ignored,"Followup to #41967 and parallel to #41991 

My proposal is that we remove the behavior that detected an `--ignore` switch and removed the pytest directory arg, and instead fail out of the test call when this scenario is detected.

Pytest prioritizes the test arg over the ignore switch, so this code was inverting the way pytest expects to be used which creates complexity when reasoning about breeze and the CI test suites. Also, with #41991, we should be not calling these kinds of scenarios anyway, and raising an error will help us locate any straggler cases.

IOW, the command `pytest tests/providers/alpha --ignore=tests/providers/alpha` will run the tests in `tests/providers/alpha` (the ignore is ignored). Our change in #40037 attempted to override this behavior and prioritize the ignore switch; it is simpler to understand the system if we detect these scenarios upstream instead of force-fitting the reverse of how pytest wants to work.

This change refactors the `_run_test` function in the following ways:
- All arguments for docker down and docker run commands are built before any docker calls are made
- A check is made to see if any pytest directory arg is also specified in an `--ignore=<dir>` switch; if so, a system exit is initiated
- Some argument construction steps are moved into dedicated functions for readability and testability

Tests have been added to verify the exit functionality and also validate some of the collaborator calls. I didn't feel the need to test the entire control flow.

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",topherinternational,2024-09-04 13:39:50+00:00,[],2024-11-04 00:16:04+00:00,2024-11-04 00:16:04+00:00,https://github.com/apache/airflow/pull/41996,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:dev-tools', '')]","[{'comment_id': 2341182606, 'issue_id': 2505412683, 'author': 'potiuk', 'body': 'I am at the Airflow Summit - not sure if I will be able to take a look before my holidays after :(', 'created_at': datetime.datetime(2024, 9, 10, 15, 5, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2341184435, 'issue_id': 2505412683, 'author': 'potiuk', 'body': 'I am at the Airflow Summit - not sure if I will be able to take a look before my holidays after :(', 'created_at': datetime.datetime(2024, 9, 10, 15, 5, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445551611, 'issue_id': 2505412683, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 10, 30, 0, 15, 30, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-10 15:05:15 UTC): I am at the Airflow Summit - not sure if I will be able to take a look before my holidays after :(

potiuk on (2024-09-10 15:05:36 UTC): I am at the Airflow Summit - not sure if I will be able to take a look before my holidays after :(

github-actions[bot] on (2024-10-30 00:15:30 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2505367270,pull_request,closed,,Handle relative paths when sanitizing URLs,"In the initial PR(https://github.com/apache/airflow/pull/41665) we didn't handle the relative path in URL which led to issue(https://github.com/apache/airflow/issues/41977). This PR aims at handling the relative path case when sanitizing URLs

The issue is fixed with current change:
<img width=""1728"" alt=""Screenshot 2024-09-04 at 6 53 13 PM"" src=""https://github.com/user-attachments/assets/eee32189-742b-4cc0-b7e7-b7435641cf05"">

",utkarsharma2,2024-09-04 13:22:51+00:00,[],2024-12-20 13:18:09+00:00,2024-09-04 16:58:41+00:00,https://github.com/apache/airflow/pull/41995,"[('area:webserver', 'Webserver related Issues'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2329120105, 'issue_id': 2505367270, 'author': 'utkarsharma2', 'body': 'Not entirely sure where to add test cases, if someone can point me to it?', 'created_at': datetime.datetime(2024, 9, 4, 13, 47, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2329221409, 'issue_id': 2505367270, 'author': 'potiuk', 'body': 'Not sure if we have some tests for this one ? @pierrejeambrun @bbovenzi  ?', 'created_at': datetime.datetime(2024, 9, 4, 14, 27, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2332004702, 'issue_id': 2505367270, 'author': 'eladkal', 'body': '@utkarsharma2 This will target 2.10.2?', 'created_at': datetime.datetime(2024, 9, 5, 15, 23, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2332169416, 'issue_id': 2505367270, 'author': 'potiuk', 'body': 'I marked it so - but this was I think what we agreed on, that it is not going to cancel rc1', 'created_at': datetime.datetime(2024, 9, 5, 16, 28, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2332325820, 'issue_id': 2505367270, 'author': 'utkarsharma2', 'body': 'Thanks @potiuk, yes this belongs to 2.10.2.', 'created_at': datetime.datetime(2024, 9, 5, 17, 55, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2553032777, 'issue_id': 2505367270, 'author': 'mfatemipour', 'body': 'Hi, Could we have this in 2.10 ?', 'created_at': datetime.datetime(2024, 12, 19, 8, 12, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2553386763, 'issue_id': 2505367270, 'author': 'potiuk', 'body': 'It is already released in 2.10.2 - have you checked it @mfatemipour ? Can you please verify it in release notes and upgrade (2.10.4 is now available)/ test locally and confirm that it works? If not, open a new issue describing the problem you have.\r\n\r\nThanks for your help in advance.', 'created_at': datetime.datetime(2024, 12, 19, 10, 41, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2554358777, 'issue_id': 2505367270, 'author': 'gpadavala', 'body': 'I am on 2.10.3 and this is still happening, on checking it looks like the fix is not in the releases, the code is visible in the main branch but not in the tags 2.10.4  / 2.10.3', 'created_at': datetime.datetime(2024, 12, 19, 14, 39, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2554453967, 'issue_id': 2505367270, 'author': 'potiuk', 'body': ""> I am on 2.10.3 and this is still happening, on checking it looks like the fix is not in the releases, the code is visible in the main branch but not in the tags 2.10.4 / 2.10.3\r\n\r\nInteresting: @utkarsharma2 -> it's marked with 2.10.2 milestone, but yes it seems it's not cherry-picked there."", 'created_at': datetime.datetime(2024, 12, 19, 14, 57, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2554456705, 'issue_id': 2505367270, 'author': 'potiuk', 'body': 'I changed milestone to 2.10.5 and will cherry-pick it for 2.10.5', 'created_at': datetime.datetime(2024, 12, 19, 14, 57, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 2554458054, 'issue_id': 2505367270, 'author': 'potiuk', 'body': 'But it would be great to find what happened :)', 'created_at': datetime.datetime(2024, 12, 19, 14, 57, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2556973010, 'issue_id': 2505367270, 'author': 'utkarsharma2', 'body': '> But it would be great to find what happened :)\r\n\r\nI think I missed backporting it, somehow. I will investigate more. :/\r\n\r\nThanks for the backporting it.', 'created_at': datetime.datetime(2024, 12, 20, 13, 8, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2556989150, 'issue_id': 2505367270, 'author': 'potiuk', 'body': ""> I think I missed backporting it, somehow. I will investigate more. :/\r\n\r\nYeah. Could be also some tooling issue of ours :(. I think we should do some extra scrutiny for 2.10.5 (with @kaxil on board as well). This is actually the problem with release management tools, that when they work, we start trusting them and stop checking and validating things, bue it's pretty natural that some refactorings introduce some new cases - including edge cases, so once in a while we should pretty manually verify all the steps of release process, otherwise we might miss something.\r\n\r\nHaving this check for 2.10.5 might be a good idea to do it in preparation for 3.0.0 (though there we will have to do extra-extra-scrutiny as there will be MANY NEW THINGS). At least if we find and fix some things in 2.10.5 we will have less to do when 3.0.0 comes."", 'created_at': datetime.datetime(2024, 12, 20, 13, 17, 47, tzinfo=datetime.timezone.utc)}]","utkarsharma2 (Issue Creator) on (2024-09-04 13:47:32 UTC): Not entirely sure where to add test cases, if someone can point me to it?

potiuk on (2024-09-04 14:27:48 UTC): Not sure if we have some tests for this one ? @pierrejeambrun @bbovenzi  ?

eladkal on (2024-09-05 15:23:49 UTC): @utkarsharma2 This will target 2.10.2?

potiuk on (2024-09-05 16:28:09 UTC): I marked it so - but this was I think what we agreed on, that it is not going to cancel rc1

utkarsharma2 (Issue Creator) on (2024-09-05 17:55:17 UTC): Thanks @potiuk, yes this belongs to 2.10.2.

mfatemipour on (2024-12-19 08:12:56 UTC): Hi, Could we have this in 2.10 ?

potiuk on (2024-12-19 10:41:59 UTC): It is already released in 2.10.2 - have you checked it @mfatemipour ? Can you please verify it in release notes and upgrade (2.10.4 is now available)/ test locally and confirm that it works? If not, open a new issue describing the problem you have.

Thanks for your help in advance.

gpadavala on (2024-12-19 14:39:15 UTC): I am on 2.10.3 and this is still happening, on checking it looks like the fix is not in the releases, the code is visible in the main branch but not in the tags 2.10.4  / 2.10.3

potiuk on (2024-12-19 14:57:07 UTC): Interesting: @utkarsharma2 -> it's marked with 2.10.2 milestone, but yes it seems it's not cherry-picked there.

potiuk on (2024-12-19 14:57:38 UTC): I changed milestone to 2.10.5 and will cherry-pick it for 2.10.5

potiuk on (2024-12-19 14:57:54 UTC): But it would be great to find what happened :)

utkarsharma2 (Issue Creator) on (2024-12-20 13:08:44 UTC): I think I missed backporting it, somehow. I will investigate more. :/

Thanks for the backporting it.

potiuk on (2024-12-20 13:17:47 UTC): Yeah. Could be also some tooling issue of ours :(. I think we should do some extra scrutiny for 2.10.5 (with @kaxil on board as well). This is actually the problem with release management tools, that when they work, we start trusting them and stop checking and validating things, bue it's pretty natural that some refactorings introduce some new cases - including edge cases, so once in a while we should pretty manually verify all the steps of release process, otherwise we might miss something.

Having this check for 2.10.5 might be a good idea to do it in preparation for 3.0.0 (though there we will have to do extra-extra-scrutiny as there will be MANY NEW THINGS). At least if we find and fix some things in 2.10.5 we will have less to do when 3.0.0 comes.

"
2505075821,pull_request,closed,,Add back migrations from 2.7.0,"Previously, we removed all these migrations. However, there are concerns that we should make it possible for people to upgrade from 2.7.0 to 3.0.0. This PR brings back such a possibility

",ephraimbuddy,2024-09-04 11:29:42+00:00,[],2024-09-05 07:28:18+00:00,2024-09-05 07:28:16+00:00,https://github.com/apache/airflow/pull/41994,"[('area:dev-tools', ''), ('area:db-migrations', 'PRs with DB migration')]",[],
2505068621,pull_request,closed,,"Revert ""Adding url sanitisation for extra links""","Reverts apache/airflow#41665

In the original PR, we considered absolute paths, but we also need to account for relative paths, as this is leading to [issue](https://github.com/apache/airflow/issues/41977). I tried to explore the possible option to extend the check to relative paths but couldn't find any good options as they can vary a lot(especially strings like `page.html`) 

### Possible relative paths
Relative to Current Directory:

    page.html – Points to a file page.html in the current directory.
    images/logo.png – Points to an images folder and the logo.png file within the current directory.

Relative to Parent Directory:

    ../about.html – Points to about.html in the parent directory.
    ../assets/styles.css – Points to styles.css in the assets folder in the parent directory.

Relative to the Root Directory:

    /index.html – Points to index.html in the root directory of the site.
    /css/styles.css – Points to the styles.css file in the css folder within the root directory.

Relative to the Current Path:

    ./file.html – Points to file.html in the current directory (same as file.html).
    ./folder/page.html – Points to page.html in the folder within the current directory.

Relative URL with Anchor (Fragment Identifier):

    #section1 – Points to the element with the id=""section1"" within the current page.
    page.html#header – Points to the #header within the page.html.

Relative URL with Query String:

    search.html?q=term – Points to search.html with a query parameter q=term.
    ./view.php?id=123 – Points to view.php in the current directory with a query parameter id=123.

cc: @amoghrajesh @potiuk ",utkarsharma2,2024-09-04 11:26:39+00:00,[],2024-10-02 21:44:33+00:00,2024-09-04 13:30:34+00:00,https://github.com/apache/airflow/pull/41993,"[('area:webserver', 'Webserver related Issues'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2328690532, 'issue_id': 2505068621, 'author': 'potiuk', 'body': 'I think we should fix it, not revert', 'created_at': datetime.datetime(2024, 9, 4, 11, 30, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328694071, 'issue_id': 2505068621, 'author': 'potiuk', 'body': 'The right sanitization should be:\r\n\r\n* https:// - like now\r\n\r\nor\r\n\r\nno schema', 'created_at': datetime.datetime(2024, 9, 4, 11, 32, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328769213, 'issue_id': 2505068621, 'author': 'ephraimbuddy', 'body': ""> I think we should fix it, not revert\r\n\r\nAlso, I think we shouldn't have rc2 because of this. WDYT?"", 'created_at': datetime.datetime(2024, 9, 4, 11, 57, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328804370, 'issue_id': 2505068621, 'author': 'potiuk', 'body': ""> > I think we should fix it, not revert\r\n> \r\n> Also, I think we shouldn't have rc2 because of this. WDYT?\r\n\r\nAgreed,"", 'created_at': datetime.datetime(2024, 9, 4, 12, 10, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2329061900, 'issue_id': 2505068621, 'author': 'utkarsharma2', 'body': 'Ya, I too think this is not a blocker for RC1. \r\n\r\nClosing it in favor of PR - https://github.com/apache/airflow/pull/41995', 'created_at': datetime.datetime(2024, 9, 4, 13, 30, 34, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-04 11:30:58 UTC): I think we should fix it, not revert

potiuk on (2024-09-04 11:32:02 UTC): The right sanitization should be:

* https:// - like now

or

no schema

ephraimbuddy on (2024-09-04 11:57:51 UTC): Also, I think we shouldn't have rc2 because of this. WDYT?

potiuk on (2024-09-04 12:10:01 UTC): Agreed,

utkarsharma2 (Issue Creator) on (2024-09-04 13:30:34 UTC): Ya, I too think this is not a blocker for RC1. 

Closing it in favor of PR - https://github.com/apache/airflow/pull/41995

"
2504980763,pull_request,closed,,Automate exclusion of providers in lowest-dependency tests,"The ""lowest"" dependency tests had ""hard-coded"" exclusion for those providers that were excluded in specific python versions.

This change automates it:

* selective checks produce dictionary python -> excluded versions
* the dictionary (as string) is passed to unit tests in actions
* the dictionary (as string) is passed to breeze container as EXCLUDED_PROVIDERS variable
* ""is_provider_excluded.py"" checks if the provider is excluded and exits with success if so

Related: #41555

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-04 10:48:22+00:00,[],2024-09-04 20:46:22+00:00,2024-09-04 20:46:20+00:00,https://github.com/apache/airflow/pull/41991,"[('area:dev-tools', ''), ('full tests needed', 'We need to run full set of tests for this PR to merge'), ('include success outputs', 'Whether to include success outputs in test results'), ('all versions', 'If set, the CI build will be forced to use all versions of Python/K8S/DBs')]","[{'comment_id': 2328667520, 'issue_id': 2504980763, 'author': 'potiuk', 'body': 'That one should also speed up ""lowest dependencies"" test in main - because we - erroneously excluded `papermill` from Python 3.12 (where Papermill had been added back a while ago) while we did not exclude apache.beam, so apache.beam tests actually (due to the way how the scripts work) would run ALL tests in a single thread.', 'created_at': datetime.datetime(2024, 9, 4, 11, 24, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328761652, 'issue_id': 2504980763, 'author': 'topherinternational', 'body': 'I think the followup to #41967 I am writing will also address this problem.', 'created_at': datetime.datetime(2024, 9, 4, 11, 55, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328774139, 'issue_id': 2504980763, 'author': 'potiuk', 'body': '> I think the followup to #41967 I am writing will also address this problem.\r\n\r\nWe can compare and choose better one :)', 'created_at': datetime.datetime(2024, 9, 4, 11, 59, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328972185, 'issue_id': 2504980763, 'author': 'potiuk', 'body': 'Actually this one also solves ""main"" failures of Python 3.12 ""Lowest dependencies"" tests that I\'ve seen recently!', 'created_at': datetime.datetime(2024, 9, 4, 13, 2, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2329089473, 'issue_id': 2504980763, 'author': 'topherinternational', 'body': '> > I think the followup to #41967 I am writing will also address this problem.\r\n> \r\n> We can compare and choose better one :)\r\n\r\nOr we can have defense in depth :D', 'created_at': datetime.datetime(2024, 9, 4, 13, 37, 49, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-04 11:24:59 UTC): That one should also speed up ""lowest dependencies"" test in main - because we - erroneously excluded `papermill` from Python 3.12 (where Papermill had been added back a while ago) while we did not exclude apache.beam, so apache.beam tests actually (due to the way how the scripts work) would run ALL tests in a single thread.

topherinternational on (2024-09-04 11:55:11 UTC): I think the followup to #41967 I am writing will also address this problem.

potiuk (Issue Creator) on (2024-09-04 11:59:37 UTC): We can compare and choose better one :)

potiuk (Issue Creator) on (2024-09-04 13:02:21 UTC): Actually this one also solves ""main"" failures of Python 3.12 ""Lowest dependencies"" tests that I've seen recently!

topherinternational on (2024-09-04 13:37:49 UTC): Or we can have defense in depth :D

"
2504824407,pull_request,closed,,Remove Python 3.12 exclusion for Apache Beam,"After https://github.com/apache/beam/issues/29149 has been fixed and Apache Beam 2.59.0 released we can finally unblock Apache Beam provider for Python 3.12 - mainly because requests is no longer limited so that Apache Beam does not conflict with few other dependencies.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-04 09:43:12+00:00,[],2024-12-11 00:16:48+00:00,2024-12-11 00:16:48+00:00,https://github.com/apache/airflow/pull/41990,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:providers', ''), ('provider:apache-beam', ''), ('upgrade to newer dependencies', 'If set, upgrade to newer dependencies is forced')]","[{'comment_id': 2328400526, 'issue_id': 2504824407, 'author': 'potiuk', 'body': 'This one waits for Apache Beaam 2.59.0 release. This will likely happen next week (this weeak Beam Summit makes it difficult to complete all the tests - see  https://github.com/apache/beam/pull/32284', 'created_at': datetime.datetime(2024, 9, 4, 9, 45, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387133898, 'issue_id': 2504824407, 'author': 'potiuk', 'body': 'Unfortunately latest Apache Beam has too strict `dill` version specfication - the dill dependency used by beam breaks our Python Virtualenv dill support - so we need to wait until they solved. Created an issue in Apache Beam repository for that one. https://github.com/apache/beam/issues/32617', 'created_at': datetime.datetime(2024, 10, 1, 21, 46, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2521796165, 'issue_id': 2504824407, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 12, 6, 0, 16, 38, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-04 09:45:04 UTC): This one waits for Apache Beaam 2.59.0 release. This will likely happen next week (this weeak Beam Summit makes it difficult to complete all the tests - see  https://github.com/apache/beam/pull/32284

potiuk (Issue Creator) on (2024-10-01 21:46:28 UTC): Unfortunately latest Apache Beam has too strict `dill` version specfication - the dill dependency used by beam breaks our Python Virtualenv dill support - so we need to wait until they solved. Created an issue in Apache Beam repository for that one. https://github.com/apache/beam/issues/32617

github-actions[bot] on (2024-12-06 00:16:38 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2504649436,pull_request,closed,,Rewrite how dag to dataset / dataset alias are stored,"## Why

If someone subclasses a dataset or a dataset alias and makes it unhashable. The dag ref will not be able to be handled.

## What
Save the data needed as `(type, URI or name)` format in dag ref


<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-09-04 08:26:39+00:00,[],2024-09-06 04:07:33+00:00,2024-09-06 04:06:44+00:00,https://github.com/apache/airflow/pull/41987,[],"[{'comment_id': 2328328553, 'issue_id': 2504649436, 'author': 'uranusjr', 'body': 'Doesn’t `Dataset` do this automatically? We shouldn’t let an unsanitised URI get into the system in the first place.\r\n\r\nhttps://github.com/apache/airflow/blob/cb7697ff0b9df0a84bb56a6d36f9f184cde36949/airflow/datasets/__init__.py#L248-L251', 'created_at': datetime.datetime(2024, 9, 4, 9, 11, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328337318, 'issue_id': 2504649436, 'author': 'Lee-W', 'body': '> Doesn’t `Dataset` do this automatically? We shouldn’t let an unsanitised URI get into the system in the first place.\r\n> \r\n> https://github.com/apache/airflow/blob/cb7697ff0b9df0a84bb56a6d36f9f184cde36949/airflow/datasets/__init__.py#L248-L251\r\n\r\nYep, but `new_datasets` are `DatasetModel`s instead of `Dataset`', 'created_at': datetime.datetime(2024, 9, 4, 9, 15, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328343935, 'issue_id': 2504649436, 'author': 'uranusjr', 'body': 'I was thinking it’s weird we’re using DatasetModel here… (DatasetManager actually converts them back to Dataset for a user hook too)\r\n\r\nI was having problems with this function when adding `name` too. Let me rewrite this entire function a bit.', 'created_at': datetime.datetime(2024, 9, 4, 9, 18, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328356517, 'issue_id': 2504649436, 'author': 'Lee-W', 'body': '> I was thinking it’s weird we’re using DatasetModel here… (DatasetManager actually converts them back to Dataset for a user hook too)\r\n> \r\n> I was having problems with this function when adding `name` too. Let me rewrite this entire function a bit.\r\n\r\nI think the main reason is that we need to check the stored dataset models. Do you want me to continue working on this one? Or wait for your PR? Without it, some edges cases might fail', 'created_at': datetime.datetime(2024, 9, 4, 9, 23, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328390603, 'issue_id': 2504649436, 'author': 'uranusjr', 'body': 'Hmm, wait, this still does not make sense even considering we’re using DatasetModel. `d` here is a `Dataset`, so `d.uri` should have already gone through `_sanitize_uri` when `d` is created. Is `converter` somehow not functioning the way it’s assumed to? Is there a bug somewhere else?\r\n\r\nIt’s probably best to come up with a test case here first to identify the actual issue. I don’t think calling `_sanitize_uri` is the correct thing to do, but it’s difficult to tell what the right thing is without an actual bug.', 'created_at': datetime.datetime(2024, 9, 4, 9, 40, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328399791, 'issue_id': 2504649436, 'author': 'Lee-W', 'body': ""> Hmm, wait, this still does not make sense even considering we’re using DatasetModel. `d` here is a `Dataset`, so `d.uri` should have already gone through `_sanitize_uri` when `d` is created. Is `converter` somehow not functioning the way it’s assumed to? Is there a bug somewhere else?\r\n> \r\n> It’s probably best to come up with a test case here first to identify the actual issue. I don’t think calling `_sanitize_uri` is the correct thing to do, but it’s difficult to tell what the right thing is without an actual bug.\r\n\r\nhttps://github.com/astronomer/astro-sdk/blob/main/python-sdk/example_dags/example_datasets.py\r\n\r\nThis is the DAG that fails and yep, I think the solution is incorrect and that's why I convert it to draft again"", 'created_at': datetime.datetime(2024, 9, 4, 9, 44, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328529306, 'issue_id': 2504649436, 'author': 'Lee-W', 'body': 'I think I found the root cause. will push in short', 'created_at': datetime.datetime(2024, 9, 4, 10, 38, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328596934, 'issue_id': 2504649436, 'author': 'Lee-W', 'body': '> Hmm, wait, this still does not make sense even considering we’re using DatasetModel. `d` here is a `Dataset`, so `d.uri` should have already gone through `_sanitize_uri` when `d` is created. Is `converter` somehow not functioning the way it’s assumed to? Is there a bug somewhere else?\r\n> \r\n> It’s probably best to come up with a test case here first to identify the actual issue. I don’t think calling `_sanitize_uri` is the correct thing to do, but it’s difficult to tell what the right thing is without an actual bug.\r\n\r\nThis was due to some dataset/dataset alias subclass might not be hashable. I rewrote how the dag ref was handled.', 'created_at': datetime.datetime(2024, 9, 4, 11, 3, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2331229808, 'issue_id': 2504649436, 'author': 'uranusjr', 'body': 'If this is already passing, maybe we can also try to merge it first and do the related changes in a different PR. Do you think this is ready to be merged?', 'created_at': datetime.datetime(2024, 9, 5, 11, 0, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2331235262, 'issue_id': 2504649436, 'author': 'Lee-W', 'body': '> If this is already passing, maybe we can also try to merge it first and do the related changes in a different PR. Do you think this is ready to be merged?\r\n\r\nYep, I think this one is ready to be merged', 'created_at': datetime.datetime(2024, 9, 5, 11, 3, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333193896, 'issue_id': 2504649436, 'author': 'uranusjr', 'body': 'Meh, I’m going to just merge this since I have plans to refactor the entire function anyway. I can change the thing I want when that happens.', 'created_at': datetime.datetime(2024, 9, 6, 4, 6, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333194974, 'issue_id': 2504649436, 'author': 'Lee-W', 'body': ""Thanks! @uranusjr I think this fix is needed for 2.10 so I'm going to backport now"", 'created_at': datetime.datetime(2024, 9, 6, 4, 7, 32, tzinfo=datetime.timezone.utc)}]","uranusjr on (2024-09-04 09:11:27 UTC): Doesn’t `Dataset` do this automatically? We shouldn’t let an unsanitised URI get into the system in the first place.

https://github.com/apache/airflow/blob/cb7697ff0b9df0a84bb56a6d36f9f184cde36949/airflow/datasets/__init__.py#L248-L251

Lee-W (Issue Creator) on (2024-09-04 09:15:01 UTC): Yep, but `new_datasets` are `DatasetModel`s instead of `Dataset`

uranusjr on (2024-09-04 09:18:09 UTC): I was thinking it’s weird we’re using DatasetModel here… (DatasetManager actually converts them back to Dataset for a user hook too)

I was having problems with this function when adding `name` too. Let me rewrite this entire function a bit.

Lee-W (Issue Creator) on (2024-09-04 09:23:50 UTC): I think the main reason is that we need to check the stored dataset models. Do you want me to continue working on this one? Or wait for your PR? Without it, some edges cases might fail

uranusjr on (2024-09-04 09:40:11 UTC): Hmm, wait, this still does not make sense even considering we’re using DatasetModel. `d` here is a `Dataset`, so `d.uri` should have already gone through `_sanitize_uri` when `d` is created. Is `converter` somehow not functioning the way it’s assumed to? Is there a bug somewhere else?

It’s probably best to come up with a test case here first to identify the actual issue. I don’t think calling `_sanitize_uri` is the correct thing to do, but it’s difficult to tell what the right thing is without an actual bug.

Lee-W (Issue Creator) on (2024-09-04 09:44:43 UTC): https://github.com/astronomer/astro-sdk/blob/main/python-sdk/example_dags/example_datasets.py

This is the DAG that fails and yep, I think the solution is incorrect and that's why I convert it to draft again

Lee-W (Issue Creator) on (2024-09-04 10:38:50 UTC): I think I found the root cause. will push in short

Lee-W (Issue Creator) on (2024-09-04 11:03:55 UTC): This was due to some dataset/dataset alias subclass might not be hashable. I rewrote how the dag ref was handled.

uranusjr on (2024-09-05 11:00:39 UTC): If this is already passing, maybe we can also try to merge it first and do the related changes in a different PR. Do you think this is ready to be merged?

Lee-W (Issue Creator) on (2024-09-05 11:03:32 UTC): Yep, I think this one is ready to be merged

uranusjr on (2024-09-06 04:06:24 UTC): Meh, I’m going to just merge this since I have plans to refactor the entire function anyway. I can change the thing I want when that happens.

Lee-W (Issue Creator) on (2024-09-06 04:07:32 UTC): Thanks! @uranusjr I think this fix is needed for 2.10 so I'm going to backport now

"
2504232596,pull_request,closed,,add missing unit tests for mongo providers,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
This PR adds a simple tests for MongoSensor.

Part of https://github.com/apache/airflow/issues/35442


---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",HaKkaz,2024-09-04 03:38:32+00:00,[],2024-09-09 13:01:40+00:00,2024-09-09 13:01:21+00:00,https://github.com/apache/airflow/pull/41986,"[('area:providers', ''), ('provider:mongo', '')]","[{'comment_id': 2327849688, 'issue_id': 2504232596, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 4, 3, 38, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2330304330, 'issue_id': 2504232596, 'author': 'potiuk', 'body': 'Statiic checks failing', 'created_at': datetime.datetime(2024, 9, 4, 23, 13, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333979236, 'issue_id': 2504232596, 'author': 'HaKkaz', 'body': ""It failed again, but I'll fix it.\r\nI'm not sure why the CI failed on the Amazon provider. The changes I made are not related to any Amazon provider files."", 'created_at': datetime.datetime(2024, 9, 6, 12, 48, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2335157601, 'issue_id': 2504232596, 'author': 'potiuk', 'body': 'But static checks now are definitely mongo. And can be automatically fixed by pre-commit if you install it.', 'created_at': datetime.datetime(2024, 9, 7, 11, 24, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2337025148, 'issue_id': 2504232596, 'author': 'HaKkaz', 'body': 'I installed pre-commit and breeze env in local and passed static checks and non-db tests.\r\nPlease review it again, thank you very muck.', 'created_at': datetime.datetime(2024, 9, 9, 3, 9, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2338066035, 'issue_id': 2504232596, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 9, 13, 1, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2338066620, 'issue_id': 2504232596, 'author': 'potiuk', 'body': 'Cool. Congrats on the first contribution!', 'created_at': datetime.datetime(2024, 9, 9, 13, 1, 38, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-04 03:38:36 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-09-04 23:13:08 UTC): Statiic checks failing

HaKkaz (Issue Creator) on (2024-09-06 12:48:37 UTC): It failed again, but I'll fix it.
I'm not sure why the CI failed on the Amazon provider. The changes I made are not related to any Amazon provider files.

potiuk on (2024-09-07 11:24:51 UTC): But static checks now are definitely mongo. And can be automatically fixed by pre-commit if you install it.

HaKkaz (Issue Creator) on (2024-09-09 03:09:56 UTC): I installed pre-commit and breeze env in local and passed static checks and non-db tests.
Please review it again, thank you very muck.

boring-cyborg[bot] on (2024-09-09 13:01:23 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

potiuk on (2024-09-09 13:01:38 UTC): Cool. Congrats on the first contribution!

"
2504171278,pull_request,closed,,Correct scheduled slots documentation and missing open telemetry span (#41899),"* Correct documentation for pool.scheduled_slots metrics

* Add missing pool.scheduled_slots telemetry span

(cherry picked from commit 0a816c6f0b500e1b0515452e38e3446412f3e8e3)

This cherry-picks #41899.",jedcunningham,2024-09-04 02:39:54+00:00,[],2024-09-13 17:32:53+00:00,2024-09-04 03:14:25+00:00,https://github.com/apache/airflow/pull/41985,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('kind:documentation', ''), ('type:doc-only', 'Changelog: Doc Only')]",[],
2504081922,pull_request,closed,,ci: auto fix default_deferrable value with LibCST,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-09-04 01:04:39+00:00,[],2024-09-26 12:35:32+00:00,2024-09-06 14:58:48+00:00,https://github.com/apache/airflow/pull/41984,"[('area:dev-tools', '')]","[{'comment_id': 2335482708, 'issue_id': 2504081922, 'author': 'bugraoz93', 'body': 'Hello @Lee-W, I have got an error about the hook introduced in this PR not being able to be installed via `Python 3.8`. I think it\'s due to `""libcst>=1.4.0""`. \r\nI know `Python 3.8` is nearly EOL, so in Airflow 3, the decision was to delete EOL Python versions. Until the Airflow 3 release date, `Python 3.8` will lose support.\r\nDoes this mean we should start developing at least in `Python 3.9`? \r\n\r\n>Which Python version should we support in Airflow 3?\r\n    The consensus was to keep things as-is i.e following the current [Python-support policy](https://github.com/apache/airflow?tab=readme-ov-file#support-for-python-and-kubernetes-versions) where we would remove the support for a Python version when it is EOL.', 'created_at': datetime.datetime(2024, 9, 7, 15, 23, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2335604971, 'issue_id': 2504081922, 'author': 'Lee-W', 'body': ""it's something I missed. just created a pr for the fix https://github.com/apache/airflow/pull/42083 Thanks @bugraoz93 !"", 'created_at': datetime.datetime(2024, 9, 7, 15, 44, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2335630388, 'issue_id': 2504081922, 'author': 'bugraoz93', 'body': 'Thanks, @Lee-W!', 'created_at': datetime.datetime(2024, 9, 7, 15, 48, 49, tzinfo=datetime.timezone.utc)}]","bugraoz93 on (2024-09-07 15:23:32 UTC): Hello @Lee-W, I have got an error about the hook introduced in this PR not being able to be installed via `Python 3.8`. I think it's due to `""libcst>=1.4.0""`. 
I know `Python 3.8` is nearly EOL, so in Airflow 3, the decision was to delete EOL Python versions. Until the Airflow 3 release date, `Python 3.8` will lose support.
Does this mean we should start developing at least in `Python 3.9`? 

    The consensus was to keep things as-is i.e following the current [Python-support policy](https://github.com/apache/airflow?tab=readme-ov-file#support-for-python-and-kubernetes-versions) where we would remove the support for a Python version when it is EOL.

Lee-W (Issue Creator) on (2024-09-07 15:44:15 UTC): it's something I missed. just created a pr for the fix https://github.com/apache/airflow/pull/42083 Thanks @bugraoz93 !

bugraoz93 on (2024-09-07 15:48:49 UTC): Thanks, @Lee-W!

"
2502606221,pull_request,closed,,Metrics basic deprecated validators removed in favor of pattern matching,"Metrics basic deprecated validators (AllowListValidator and BlockListValidator) removed in favor of pattern matching
",dirrao,2024-09-03 11:16:43+00:00,['dirrao'],2024-09-17 19:21:21+00:00,2024-09-17 19:21:21+00:00,https://github.com/apache/airflow/pull/41975,"[('area:metrics', ''), ('airflow3.0:candidate', 'Potential candidates for Airflow 3.0'), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]","[{'comment_id': 2339653222, 'issue_id': 2502606221, 'author': 'dirrao', 'body': ""@potiuk / @eladkal \r\nI'm awaiting final approval to proceed with the merge. Could you please take a look when you get a chance?"", 'created_at': datetime.datetime(2024, 9, 10, 5, 28, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2344573467, 'issue_id': 2502606221, 'author': 'potiuk', 'body': 'Needs to resolve conflict now.', 'created_at': datetime.datetime(2024, 9, 11, 19, 47, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2345227972, 'issue_id': 2502606221, 'author': 'dirrao', 'body': '> Needs to resolve conflict now.\r\n\r\nDone.', 'created_at': datetime.datetime(2024, 9, 12, 4, 8, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2355303374, 'issue_id': 2502606221, 'author': 'dirrao', 'body': ""@eladkal \r\nI'm waiting for the final review and merge."", 'created_at': datetime.datetime(2024, 9, 17, 10, 50, 11, tzinfo=datetime.timezone.utc)}]","dirrao (Issue Creator) on (2024-09-10 05:28:39 UTC): @potiuk / @eladkal 
I'm awaiting final approval to proceed with the merge. Could you please take a look when you get a chance?

potiuk on (2024-09-11 19:47:50 UTC): Needs to resolve conflict now.

dirrao (Issue Creator) on (2024-09-12 04:08:02 UTC): Done.

dirrao (Issue Creator) on (2024-09-17 10:50:11 UTC): @eladkal 
I'm waiting for the final review and merge.

"
2502465467,pull_request,closed,,fix SSH key permissions and ownership in sync container,"Using the **helm chart** I was unable to get SSH-based git sync to run. Debugging lead to two issues:

- The secret is mounted as `root`, with permissions `0660`, which makes it unreadable for git-sync default user 65533.
- If switching to user `root` (which I did not want to do), the SSH key file is still mounted as `0660`, which makes SSH complain and ignore it.

That fix uses the init-container to fix the SSH key permissions (ownership, and file mode `0400`), which should now work with any user without any k8s-yaml-fu-magic :) .

Also, mounting secrets with non-root _ownership_ (not: group ownership) [seems impossible ATM](https://github.com/kubernetes/kubernetes/issues/81089).

If there in fact _is_ a solution for this, I would be very interested in some example helm values file config :) . I was – as mentioned – unable to create it.

**Update: some reasoning additions below**

* I found [this documentation](https://github.com/kubernetes/git-sync/blob/master/docs/ssh.md#full-example) to be incorrect in that it seems not possible to run as non-root-user, ...
* ... as I tried to replicate in [this little k8s test case](https://gist.github.com/flypenguin/6d6ca3b0757ca0f5e16f081a934b56a8).

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",flypenguin,2024-09-03 10:09:24+00:00,[],2024-11-04 00:16:05+00:00,2024-11-04 00:16:05+00:00,https://github.com/apache/airflow/pull/41974,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('area:helm-chart', 'Airflow Helm Chart')]","[{'comment_id': 2326129484, 'issue_id': 2502465467, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 3, 10, 9, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2445551640, 'issue_id': 2502465467, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 10, 30, 0, 15, 32, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-03 10:09:28 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

github-actions[bot] on (2024-10-30 00:15:32 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2502452153,pull_request,closed,,V3.1,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",legmac,2024-09-03 10:03:25+00:00,[],2024-09-03 10:08:44+00:00,2024-09-03 10:08:43+00:00,https://github.com/apache/airflow/pull/41973,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes')]","[{'comment_id': 2326116267, 'issue_id': 2502452153, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 3, 10, 3, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2326127962, 'issue_id': 2502452153, 'author': 'hussein-awala', 'body': ""If you're trying to test something, you can create a PR in your fork."", 'created_at': datetime.datetime(2024, 9, 3, 10, 8, 43, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-03 10:03:30 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

hussein-awala on (2024-09-03 10:08:43 UTC): If you're trying to test something, you can create a PR in your fork.

"
2502020969,pull_request,closed,,removing the regexpattern,"closes: #32360 

This PR contains fix that removes the regex pattern in the API and is a breakable change.
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Bowrna,2024-09-03 06:25:33+00:00,[],2024-10-16 06:26:05+00:00,2024-10-15 00:44:18+00:00,https://github.com/apache/airflow/pull/41971,"[('area:API', ""Airflow's REST/HTTP API""), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]","[{'comment_id': 2410925647, 'issue_id': 2502020969, 'author': 'Bowrna', 'body': '@pierrejeambrun https://github.com/apache/airflow/issues/32360#issuecomment-2410314978\r\n\r\nBased on your comment here, do you think these PR changes are not relevant as we are not doing direct regex pattern matching here?', 'created_at': datetime.datetime(2024, 10, 14, 11, 26, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2411059440, 'issue_id': 2502020969, 'author': 'pierrejeambrun', 'body': ""Yes, I am not sure those change are relevant anymore, but let's hear others first and see what they think :)"", 'created_at': datetime.datetime(2024, 10, 14, 12, 15, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2412596470, 'issue_id': 2502020969, 'author': 'potiuk', 'body': ""Yeah. @pierrejeambrun was right... Let's close that one. Sorry @Bowrna - I should have been more dilligent when I created the issue."", 'created_at': datetime.datetime(2024, 10, 15, 0, 44, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2415837254, 'issue_id': 2502020969, 'author': 'Bowrna', 'body': '@potiuk I will explore other issues to solve. I have been inactive for sometime here. I hope to become more active in the coming weeks and solving more issues :)', 'created_at': datetime.datetime(2024, 10, 16, 6, 26, 4, tzinfo=datetime.timezone.utc)}]","Bowrna (Issue Creator) on (2024-10-14 11:26:02 UTC): @pierrejeambrun https://github.com/apache/airflow/issues/32360#issuecomment-2410314978

Based on your comment here, do you think these PR changes are not relevant as we are not doing direct regex pattern matching here?

pierrejeambrun on (2024-10-14 12:15:03 UTC): Yes, I am not sure those change are relevant anymore, but let's hear others first and see what they think :)

potiuk on (2024-10-15 00:44:18 UTC): Yeah. @pierrejeambrun was right... Let's close that one. Sorry @Bowrna - I should have been more dilligent when I created the issue.

Bowrna (Issue Creator) on (2024-10-16 06:26:04 UTC): @potiuk I will explore other issues to solve. I have been inactive for sometime here. I hope to become more active in the coming weeks and solving more issues :)

"
2501815511,pull_request,closed,,Add warning that listeners can be dangerous,"They aren't necessarily dangerous, but simply due to the way they are integrated into Airflow, their side effects can be pretty impactful.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-09-03 02:41:24+00:00,[],2024-09-03 04:57:00+00:00,2024-09-03 02:55:56+00:00,https://github.com/apache/airflow/pull/41968,"[('kind:documentation', ''), ('type:doc-only', 'Changelog: Doc Only')]","[{'comment_id': 2325497536, 'issue_id': 2501815511, 'author': 'Lee-W', 'body': 'port https://github.com/apache/airflow/pull/41966 \r\n\r\ncc @jedcunningham', 'created_at': datetime.datetime(2024, 9, 3, 2, 41, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2325602105, 'issue_id': 2501815511, 'author': 'potiuk', 'body': 'Nice!', 'created_at': datetime.datetime(2024, 9, 3, 4, 56, 59, tzinfo=datetime.timezone.utc)}]","Lee-W (Issue Creator) on (2024-09-03 02:41:42 UTC): port https://github.com/apache/airflow/pull/41966 

cc @jedcunningham

potiuk on (2024-09-03 04:56:59 UTC): Nice!

"
2501683359,pull_request,closed,,Fix `--ignore`-related clobbering when breeze tests providers,"During #41555 we found two subtle bugs in how Breeze prepares pytest arguments when testing providers. This change fixes one of those bugs, and adds a test for another one which should be fixed in a future PR as it probably requires a refactor.

Both bugs stem from Breeze's attempt to force-skip a provider test if it is supposed to be ignored (#40037) - the code looks for pytest suite args that are also ignored, e.g. ""`tests/providers/myprovider`"" and ""`--ignore=tests/providers/myprovider`"". When these are found, the suite arg is removed from the pytest args (normal pytest behavior prioritizes a suite arg over an ignore switch, and runs the suite tests anyway).

NB: the bug 1 tests and code were written in a TDD style - the first commit adds the suspension/exclusion tests that need to succeed, the second commit fixes the production code so the tests go green. The primary-arg test is always green and demonstrates the bug 2 behavior.

### Bug 1: 

a. If a provider is marked for removal in compat checks (in the `BASE_PROVIDERS_COMPATIBILITY_CHECKS` global), Breeze adds an ignore switch to the `extra_pytest_args` of the form `--ignore=tests/providers/<provider-id>`

b. If a provider is marked as excluded on Python 3.8 (or suspended), Breeze adds 3 ignore switches for unit, system and integration tests; these switches do _not_ use the `=` to connect key and value and so each ignore is two separate arguments, e.g. `--ignore tests/providers/<provider-id>`

-> When the force-skip code sees the `--ignore=...` switch from (a), it finds the ""matching"" `tests/providers/<provider-id>` argument and thinks it is the test suite argument, when it is really the value for the ignore switch from (b). This leaves a dangling `--ignore` switch key without a value, causing pytest to fail the command.

The change looks like this (omitting other irrelevant arguments):

`tests/providers --ignore tests/providers/myprovider --ignore tests/system/providers/myprovider --ignore tests/integration/providers/myprovider --ignore=tests/providers/myprovider`

becomes

`tests/providers --ignore --ignore tests/system/providers/myprovider --ignore tests/integration/providers/myprovider --ignore=tests/providers/myprovider`

The result is an invalid pytest command and a test failure.

#### Fix
The simplest and safest fix is to make the exclusion switches (b above) conform to `key=value` switch format. This way, the ignore statement cannot be mistakenly read as a suite arg and removed from the command.

This fix is done in this PR.

### Bug 2:
Bug 2 comes from a combination of the existing force-skip code and behavior introduced by the fix to bug 1.

In lowest-direct-dependency tests, providers are tested individually, with each provider getting its own pytest command testing its specific tests directory. As mentioned above in (b), any excluded provider results in 3 ignore switches being added to the pytest command. 

In this scenario, the force-skip code causes the suite arg itself to be removed from the pytest command:

`tests/providers/myprovider --ignore=tests/providers/myprovider --ignore=tests/system/providers/myprovider --ignore tests/integration/providers/myprovider`

becomes

`tests/providers/myprovider --ignore=tests/providers/myprovider --ignore=tests/system/providers/myprovider --ignore tests/integration/providers/myprovider`

This is a valid pytest command, which tests every test pytest can find. The intended provider is excluded, as expected, but we also expected no other tests to be run instead of running the rest of the world.

#### Fix
This fix is marked as a todo in the test code. Probably it requires refactoring the `_run_test` function so that it can skip running a test entirely; it seems like a skip is the best option for a situation where a specific test suite is expected to be run but also expected to be ignored. (Another nice part of the refactor would be splitting out the argument-generating code into functions, so args could be tested without calling `_run_test`).
",topherinternational,2024-09-02 23:28:21+00:00,[],2024-09-03 13:28:38+00:00,2024-09-03 05:31:13+00:00,https://github.com/apache/airflow/pull/41967,"[('area:dev-tools', '')]","[{'comment_id': 2325619594, 'issue_id': 2501683359, 'author': 'topherinternational', 'body': '> Nice! Thanks for being so dilligent. Are you going to do the refactor for `#2` or would you like for me to take a stab on it :) ?\r\n\r\nI can do it, already sketched out a couple of the tests.', 'created_at': datetime.datetime(2024, 9, 3, 5, 16, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2325634839, 'issue_id': 2501683359, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 3, 5, 31, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2325635202, 'issue_id': 2501683359, 'author': 'potiuk', 'body': 'Very cool ! Thanks for looking so closely at this one :)', 'created_at': datetime.datetime(2024, 9, 3, 5, 31, 33, tzinfo=datetime.timezone.utc)}]","topherinternational (Issue Creator) on (2024-09-03 05:16:45 UTC): I can do it, already sketched out a couple of the tests.

boring-cyborg[bot] on (2024-09-03 05:31:15 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

potiuk on (2024-09-03 05:31:33 UTC): Very cool ! Thanks for looking so closely at this one :)

"
2501640504,pull_request,closed,,Add warning that listeners can be dangerous,"They are necessarily dangerous, but simply due to the way they are integrated into Airflow, their side effects can be pretty impactful.

![Screenshot 2024-09-02 at 4 25 22 PM](https://github.com/user-attachments/assets/704cbbb7-7d6c-4f8e-82a7-96f020d072b1)
",jedcunningham,2024-09-02 22:28:24+00:00,[],2024-09-03 02:39:16+00:00,2024-09-03 02:39:14+00:00,https://github.com/apache/airflow/pull/41966,"[('kind:documentation', '')]",[],
2501626189,pull_request,closed,,Deprecate ``--tree`` flag for ``tasks list`` cli command,"This also deprecates the public helper functions that powered it. These will all be removed in Airflow 3 in favor of `dags show`.

Note that I didn't force a warning when `--tree` is used - that cli command is marked to suppress warnings and logging, and forcing it felt more like a breaking change to me.

Related to #41505.  Airflow 3 removal is in #41964.",jedcunningham,2024-09-02 22:06:12+00:00,[],2024-09-13 17:32:39+00:00,2024-09-03 01:40:47+00:00,https://github.com/apache/airflow/pull/41965,"[('area:CLI', ''), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log')]",[],
2501574313,pull_request,closed,,Remove `--tree` flag from `airflow tasks list` command,"This also removes `DAG.tree_view` and `DAG.get_tree_view`. The format of the output from these can be expensive to generate and extremely large, depending on the DAG. Users are better off using `airflow dag show` instead.

(2.10 PR incoming for marking these as deprecated and adding a warning to the help text)

Related to #41505.",jedcunningham,2024-09-02 20:54:39+00:00,[],2024-09-02 22:29:52+00:00,2024-09-02 22:29:50+00:00,https://github.com/apache/airflow/pull/41964,"[('area:CLI', ''), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]",[],
2501538554,pull_request,closed,,Add TODOs in providers code for Subdag code removal,"Follow-up of https://github.com/apache/airflow/pull/41390#discussion_r1721684927

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kaxil,2024-09-02 20:12:38+00:00,[],2024-09-02 21:26:43+00:00,2024-09-02 21:26:42+00:00,https://github.com/apache/airflow/pull/41963,"[('area:providers', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues'), ('provider:fab', '')]",[],
2501482675,pull_request,closed,,Switch to using emulation for image building (#41959),"Until we can use ARM hardware to build images with the new ARC architecture https://github.com/apache/airflow/issues/41935 we switch image building to emulated builds. They are 10x slower but it's better than nothing.

(cherry picked from commit 8267c332b8d3756e1293e477517102abb292679e)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-02 19:10:41+00:00,[],2024-09-03 05:02:15+00:00,2024-09-03 05:02:13+00:00,https://github.com/apache/airflow/pull/41962,"[('area:dev-tools', '')]","[{'comment_id': 2325217592, 'issue_id': 2501482675, 'author': 'potiuk', 'body': 'Backporting #41959', 'created_at': datetime.datetime(2024, 9, 2, 19, 10, 56, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-02 19:10:56 UTC): Backporting #41959

"
2501477151,pull_request,closed,,AIP-59-performance-dags,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->

Part of AIP-59. The change is focused on introducing a simple framework that constructs DAGs of different size and shape that will be used in evaluation of performance.

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bjankie1,2024-09-02 19:04:55+00:00,[],2024-09-10 23:19:02+00:00,2024-09-10 23:19:02+00:00,https://github.com/apache/airflow/pull/41961,[],"[{'comment_id': 2325689455, 'issue_id': 2501477151, 'author': 'uranusjr', 'body': 'Lots of linter errors need to be fixed, but code-wise looks good to me.', 'created_at': datetime.datetime(2024, 9, 3, 6, 19, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2325754744, 'issue_id': 2501477151, 'author': 'potiuk', 'body': 'I thnk it also needs a bit cleanup for outdated stuff - generally modernising the code and see what can be reused from plain Airflow 2 perspective. \r\n\r\nAlso possibly we should renamae the ""elastic"" dag into something else (`flexible` maybe?) - for me `elastic` is a bit confusing with `elasticsearch` and I was wondering for a while why we copied things from there.', 'created_at': datetime.datetime(2024, 9, 3, 7, 5, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328190415, 'issue_id': 2501477151, 'author': 'bjankie1', 'body': '> I thnk it also needs a bit cleanup for outdated stuff - generally modernising the code and see what can be reused from plain Airflow 2 perspective.\r\n> \r\n> Also possibly we should renamae the ""elastic"" dag into something else (`flexible` maybe?) - for me `elastic` is a bit confusing with `elasticsearch` and I was wondering for a while why we copied things from there.\r\n\r\nRenamed to `performance_dag`.  I will look for some other opportunities to modernize the code. I\'d also welcome your suggestions for that.', 'created_at': datetime.datetime(2024, 9, 4, 8, 5, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328200895, 'issue_id': 2501477151, 'author': 'potiuk', 'body': ""> Renamed to performance_dag. I will look for some other opportunities to modernize the code. I'd also welcome your suggestions for that.\r\n\r\nI think just passing pre-commits / linting is going to be a good step :D. Yeah. Performance_dag is a good idea."", 'created_at': datetime.datetime(2024, 9, 4, 8, 11, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333328615, 'issue_id': 2501477151, 'author': 'bjankie1', 'body': '@potiuk checks are passing :)', 'created_at': datetime.datetime(2024, 9, 6, 6, 20, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2333361403, 'issue_id': 2501477151, 'author': 'uranusjr', 'body': 'One check is not.', 'created_at': datetime.datetime(2024, 9, 6, 6, 46, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2338062722, 'issue_id': 2501477151, 'author': 'potiuk', 'body': 'Yeah. We need more static check fixes for that one.', 'created_at': datetime.datetime(2024, 9, 9, 13, 0, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2339246753, 'issue_id': 2501477151, 'author': 'bjankie1', 'body': '> Yeah. We need more static check fixes for that one.\r\n\r\nFixed all of them I believe except for `assert` in the test complains. I believe it requires a check modification to exclude it in this folder.', 'created_at': datetime.datetime(2024, 9, 9, 22, 14, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2339311664, 'issue_id': 2501477151, 'author': 'potiuk', 'body': 'Yeah you can exclude them in this PR. This is easiest and makes most sense', 'created_at': datetime.datetime(2024, 9, 9, 23, 14, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2340770105, 'issue_id': 2501477151, 'author': 'bjankie1', 'body': '> One check is not.\r\n\r\nfixed', 'created_at': datetime.datetime(2024, 9, 10, 13, 23, 6, tzinfo=datetime.timezone.utc)}]","uranusjr on (2024-09-03 06:19:29 UTC): Lots of linter errors need to be fixed, but code-wise looks good to me.

potiuk on (2024-09-03 07:05:22 UTC): I thnk it also needs a bit cleanup for outdated stuff - generally modernising the code and see what can be reused from plain Airflow 2 perspective. 

Also possibly we should renamae the ""elastic"" dag into something else (`flexible` maybe?) - for me `elastic` is a bit confusing with `elasticsearch` and I was wondering for a while why we copied things from there.

bjankie1 (Issue Creator) on (2024-09-04 08:05:58 UTC): Renamed to `performance_dag`.  I will look for some other opportunities to modernize the code. I'd also welcome your suggestions for that.

potiuk on (2024-09-04 08:11:10 UTC): I think just passing pre-commits / linting is going to be a good step :D. Yeah. Performance_dag is a good idea.

bjankie1 (Issue Creator) on (2024-09-06 06:20:52 UTC): @potiuk checks are passing :)

uranusjr on (2024-09-06 06:46:49 UTC): One check is not.

potiuk on (2024-09-09 13:00:03 UTC): Yeah. We need more static check fixes for that one.

bjankie1 (Issue Creator) on (2024-09-09 22:14:05 UTC): Fixed all of them I believe except for `assert` in the test complains. I believe it requires a check modification to exclude it in this folder.

potiuk on (2024-09-09 23:14:28 UTC): Yeah you can exclude them in this PR. This is easiest and makes most sense

bjankie1 (Issue Creator) on (2024-09-10 13:23:06 UTC): fixed

"
2501379180,pull_request,closed,,"Revert ""Provider fab auth manager deprecated methods removed (#41720)""","This reverts commit b0391838c142bebdf178ba030c45db16b1f1f33b.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-02 17:33:10+00:00,[],2024-09-02 18:01:43+00:00,2024-09-02 18:01:41+00:00,https://github.com/apache/airflow/pull/41960,"[('area:providers', ''), ('provider:fab', '')]","[{'comment_id': 2325136976, 'issue_id': 2501379180, 'author': 'potiuk', 'body': 'Those deprecations in FAB provider are not Airflow 2 compatible (and many of those methods are just ""extracted"" from Airflow 2 - so it should be reverted until we make Airflow-3 version of FAB.', 'created_at': datetime.datetime(2024, 9, 2, 17, 34, 7, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-02 17:34:07 UTC): Those deprecations in FAB provider are not Airflow 2 compatible (and many of those methods are just ""extracted"" from Airflow 2 - so it should be reverted until we make Airflow-3 version of FAB.

"
2501370816,pull_request,closed,,Switch to using emulation for image building,"Until we can use ARM hardware to build images with the new ARC architecture https://github.com/apache/airflow/issues/41935 we switch image building to emulated builds. They are 10x slower but it's better than nothing.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-02 17:24:51+00:00,[],2024-09-02 19:09:25+00:00,2024-09-02 19:09:24+00:00,https://github.com/apache/airflow/pull/41959,"[('area:dev-tools', '')]",[],
2501181490,pull_request,closed,,feat: Add supported hooks to OpenLineage docs,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
As Hook Level Lineage (AIP-62) is now live, we should update OpenLineage docs by adding supported hooks.

Also, here is a preview of the change:
Before:
![image](https://github.com/user-attachments/assets/a432b60e-aebe-4524-af68-fafd45e59340)

After:
![image](https://github.com/user-attachments/assets/f621526d-f24c-48f4-8777-ed2fdd2b7f69)


Side notes:

For now, we only check for classes for full calls like `get_hook_lineage_collector().add_input_dataset(...)` or `get_hook_lineage_collector().add_output_dataset(...)`. Any other call will not be detected. Statically detecting these calls is challenging, so for now we should probably leave it like this, on a best effort basis with an important notice at the top.

Also, I don't think we can cross reference that with OL translators provided for schema in all providers and detect which hook has OL translator provided. We can assume that when adding hook level lineage, one will try to add ol translator as well. I'll try to work on some most popular hooks soon.

<!-- Please keep an empty line above the dashes. -->

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kacpermuda,2024-09-02 15:04:49+00:00,[],2024-10-22 18:21:03+00:00,2024-10-22 17:10:05+00:00,https://github.com/apache/airflow/pull/41958,"[('area:providers', ''), ('kind:documentation', ''), ('provider:openlineage', 'AIP-53')]","[{'comment_id': 2429131483, 'issue_id': 2501181490, 'author': 'kacpermuda', 'body': ""Adjusted the doc to work with both new `add_*_asset` and old `add_*_dataset` methods, as different providers may use different ones. IMHO it's ready to be merged."", 'created_at': datetime.datetime(2024, 10, 22, 12, 20, 21, tzinfo=datetime.timezone.utc)}]","kacpermuda (Issue Creator) on (2024-10-22 12:20:21 UTC): Adjusted the doc to work with both new `add_*_asset` and old `add_*_dataset` methods, as different providers may use different ones. IMHO it's ready to be merged.

"
2501118025,pull_request,closed,,UI API Add views tests,Small PR that adds sample tests for views of the new UI API.,pierrejeambrun,2024-09-02 14:32:52+00:00,['pierrejeambrun'],2024-09-04 20:00:58+00:00,2024-09-03 08:27:41+00:00,https://github.com/apache/airflow/pull/41957,"[('AIP-84', 'Modern Rest API')]","[{'comment_id': 2324891810, 'issue_id': 2501118025, 'author': 'pierrejeambrun', 'body': 'I need to add the CI integration. (i.e extends the API test suite)', 'created_at': datetime.datetime(2024, 9, 2, 14, 34, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2325165526, 'issue_id': 2501118025, 'author': 'bugraoz93', 'body': ""@bbovenzi @pierrejeambrun @potiuk What will be our strategy for migrating the API endpoints to the new UI API? Are we planning to do a lift and shift or are we planning to change some parts while moving them? I think we can start migrating API endpoints after this PR. Please correct me if I am wrong, we don't need to wait for follow-up work items listed here https://github.com/apache/airflow/pull/41798#issue-2489687636. We can test the endpoints locally in parallel with those works. I wanted to align with you before starting work on migrating endpoints to the UI API."", 'created_at': datetime.datetime(2024, 9, 2, 18, 8, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2325174195, 'issue_id': 2501118025, 'author': 'potiuk', 'body': ""> What will be our strategy for migrating the API endpoints\r\n\r\nI think it's a good topic to discuss at the next dev call (this Thursday)"", 'created_at': datetime.datetime(2024, 9, 2, 18, 17, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2325806974, 'issue_id': 2501118025, 'author': 'pierrejeambrun', 'body': ""[bugraoz93](https://github.com/bugraoz93) I would say that the initial idea is to just migrate existing endpoints to the new API (FastAPI), modifying only endpoints if necessary so we can re-wire the old UI on new endpoints and be sure that things are working as expected. Also this will minimize the migration effort and limit code duplication because at this point we can just delete the legacy endpoint.\r\n\r\nThen we can take airflow 3 opportunity to bring any breaking change that we need for improvements / refactoring etc.\r\n\r\n\r\nI am not sur we are fully ready to start the migration yet. Very close for 'private' endpoints i.e `/objects` but for the public one I will still need to figure out the `auto-generation` part of front end code. (types).\r\n\r\nI would say that we can start migrating once:\r\n- Permissions are handled in the new API so we can also move the existing permission set to the new UI API\r\n- UI is re-wired on this new API (so we can safely delete the old endpoint and minimize code duplication)\r\n- front-end codegen works\r\n\r\nYou can keep following PRs with `AIP-84` tag to stay updated, that should come in the next few days.\r\n\r\n> I think it's a good topic to discuss at the next dev call (this Thursday)\r\n\r\n\r\nI'll write the documentation down, If we are happy with it and agree with the general strategy I can present it to the rest of the community. (This thurday if I manage to do it before then or at the next call)"", 'created_at': datetime.datetime(2024, 9, 3, 7, 36, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2325847567, 'issue_id': 2501118025, 'author': 'potiuk', 'body': ""> I'll write the documentation down, If we are happy with it and agree with the general strategy I can present it to the rest of the community. (This thurday if I manage to do it before then or at the next call)\r\n\r\nFantastic !"", 'created_at': datetime.datetime(2024, 9, 3, 7, 58, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2325848950, 'issue_id': 2501118025, 'author': 'potiuk', 'body': 'And even if we have no write-up - we can just intiate the discussion and outline the idea this Thursday', 'created_at': datetime.datetime(2024, 9, 3, 7, 59, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2327551827, 'issue_id': 2501118025, 'author': 'bugraoz93', 'body': '@pierrejeambrun Awesome! Rewiring is a great idea to reduce duplication and minimize effort. I will follow up on PRs. Thanks for the details!', 'created_at': datetime.datetime(2024, 9, 3, 22, 29, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2328112207, 'issue_id': 2501118025, 'author': 'pierrejeambrun', 'body': ""Well there's been follow up on that `re-wiring` thing, we discussed with Brent and we will most likely keep the old endpoints with the old UI working for airflow 3 development, without re-wiring there because we want to modify/break some endpoints and that would require effort on updating the old UI (that will be deleted soon anyway).\r\n\r\nSo the idea will be to follow the same strategy that we have for front-end views. Duplicate, limit contributions on the old RestAPI and make the new UI Rest API rich enough so the old one can then be deleted.\r\n\r\nBrent already wrote something here https://github.com/apache/airflow/pull/41903 if you want more details.\r\n\r\nWe will suggest that on the airflow 3 community dev call this thursday and see what others think about that."", 'created_at': datetime.datetime(2024, 9, 4, 7, 25, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2329124923, 'issue_id': 2501118025, 'author': 'bbovenzi', 'body': '@bugraoz93 I just started a thread in the dev list too. Trying to get the old UI to use the new rest API will create a lot of work for us that we will just have to delete soon, especially if we want to redesign some endpoints. So I think the best course of action is to have duplicate code for a short time.', 'created_at': datetime.datetime(2024, 9, 4, 13, 49, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2329868009, 'issue_id': 2501118025, 'author': 'bugraoz93', 'body': '@bbovenzi @pierrejeambrun Amazing, thanks both! Yeah, I agree with both of you, if we are going to make changes then it would be hard to keep up. We will benefit from defining these things, at least from a higher level.', 'created_at': datetime.datetime(2024, 9, 4, 20, 0, 57, tzinfo=datetime.timezone.utc)}]","pierrejeambrun (Issue Creator) on (2024-09-02 14:34:01 UTC): I need to add the CI integration. (i.e extends the API test suite)

bugraoz93 on (2024-09-02 18:08:15 UTC): @bbovenzi @pierrejeambrun @potiuk What will be our strategy for migrating the API endpoints to the new UI API? Are we planning to do a lift and shift or are we planning to change some parts while moving them? I think we can start migrating API endpoints after this PR. Please correct me if I am wrong, we don't need to wait for follow-up work items listed here https://github.com/apache/airflow/pull/41798#issue-2489687636. We can test the endpoints locally in parallel with those works. I wanted to align with you before starting work on migrating endpoints to the UI API.

potiuk on (2024-09-02 18:17:08 UTC): I think it's a good topic to discuss at the next dev call (this Thursday)

pierrejeambrun (Issue Creator) on (2024-09-03 07:36:29 UTC): [bugraoz93](https://github.com/bugraoz93) I would say that the initial idea is to just migrate existing endpoints to the new API (FastAPI), modifying only endpoints if necessary so we can re-wire the old UI on new endpoints and be sure that things are working as expected. Also this will minimize the migration effort and limit code duplication because at this point we can just delete the legacy endpoint.

Then we can take airflow 3 opportunity to bring any breaking change that we need for improvements / refactoring etc.


I am not sur we are fully ready to start the migration yet. Very close for 'private' endpoints i.e `/objects` but for the public one I will still need to figure out the `auto-generation` part of front end code. (types).

I would say that we can start migrating once:
- Permissions are handled in the new API so we can also move the existing permission set to the new UI API
- UI is re-wired on this new API (so we can safely delete the old endpoint and minimize code duplication)
- front-end codegen works

You can keep following PRs with `AIP-84` tag to stay updated, that should come in the next few days.



I'll write the documentation down, If we are happy with it and agree with the general strategy I can present it to the rest of the community. (This thurday if I manage to do it before then or at the next call)

potiuk on (2024-09-03 07:58:53 UTC): Fantastic !

potiuk on (2024-09-03 07:59:37 UTC): And even if we have no write-up - we can just intiate the discussion and outline the idea this Thursday

bugraoz93 on (2024-09-03 22:29:08 UTC): @pierrejeambrun Awesome! Rewiring is a great idea to reduce duplication and minimize effort. I will follow up on PRs. Thanks for the details!

pierrejeambrun (Issue Creator) on (2024-09-04 07:25:22 UTC): Well there's been follow up on that `re-wiring` thing, we discussed with Brent and we will most likely keep the old endpoints with the old UI working for airflow 3 development, without re-wiring there because we want to modify/break some endpoints and that would require effort on updating the old UI (that will be deleted soon anyway).

So the idea will be to follow the same strategy that we have for front-end views. Duplicate, limit contributions on the old RestAPI and make the new UI Rest API rich enough so the old one can then be deleted.

Brent already wrote something here https://github.com/apache/airflow/pull/41903 if you want more details.

We will suggest that on the airflow 3 community dev call this thursday and see what others think about that.

bbovenzi on (2024-09-04 13:49:12 UTC): @bugraoz93 I just started a thread in the dev list too. Trying to get the old UI to use the new rest API will create a lot of work for us that we will just have to delete soon, especially if we want to redesign some endpoints. So I think the best course of action is to have duplicate code for a short time.

bugraoz93 on (2024-09-04 20:00:57 UTC): @bbovenzi @pierrejeambrun Amazing, thanks both! Yeah, I agree with both of you, if we are going to make changes then it would be hard to keep up. We will benefit from defining these things, at least from a higher level.

"
2500862611,pull_request,closed,,Enable HPA for Airflow Webserver,"closes [#41876](https://github.com/apache/airflow/issues/41876)
Add a Horizontal Pod Autoscaler (HPA) to the webserver for hight loads of users.",JoaVirtudes19,2024-09-02 12:33:22+00:00,[],2024-09-18 14:22:54+00:00,2024-09-18 14:21:02+00:00,https://github.com/apache/airflow/pull/41955,"[('area:helm-chart', 'Airflow Helm Chart')]","[{'comment_id': 2324653419, 'issue_id': 2500862611, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 2, 12, 33, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2337456377, 'issue_id': 2500862611, 'author': 'JoaVirtudes19', 'body': '@jedcunningham @hussein-awala', 'created_at': datetime.datetime(2024, 9, 9, 8, 25, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2358614557, 'issue_id': 2500862611, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 18, 14, 21, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2358619235, 'issue_id': 2500862611, 'author': 'jedcunningham', 'body': 'Thanks @JoaVirtudes19! Congrats on yours first PR 🎉', 'created_at': datetime.datetime(2024, 9, 18, 14, 22, 53, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-02 12:33:26 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

JoaVirtudes19 (Issue Creator) on (2024-09-09 08:25:53 UTC): @jedcunningham @hussein-awala

boring-cyborg[bot] on (2024-09-18 14:21:04 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

jedcunningham on (2024-09-18 14:22:53 UTC): Thanks @JoaVirtudes19! Congrats on yours first PR 🎉

"
2500860629,pull_request,closed,,Skip database isolation case for task mapping taskinstance tests (#41954),"Cherry-picked commits - 0f35c53cc8b1915ddaeb7843fa2d82b6973b34d6,  0f35c53cc8b1915ddaeb7843fa2d82b6973b34d6",utkarsharma2,2024-09-02 12:32:29+00:00,[],2024-09-17 11:06:54+00:00,2024-09-03 19:36:09+00:00,https://github.com/apache/airflow/pull/41954,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]","[{'comment_id': 2324719870, 'issue_id': 2500860629, 'author': 'ephraimbuddy', 'body': 'Conflict', 'created_at': datetime.datetime(2024, 9, 2, 13, 6, 25, tzinfo=datetime.timezone.utc)}]","ephraimbuddy on (2024-09-02 13:06:25 UTC): Conflict

"
2500841758,pull_request,closed,,Simpler task retrieval for taskinstance test (#41389),"The test has been updated for DB isolation but the retrieval of task was not intuitive and it could lead to flaky tests possibly

(cherry picked from commit f25adf14ad486bac818fe3fdcd61eb3355e8ec9b)

",ephraimbuddy,2024-09-02 12:24:28+00:00,[],2024-09-17 11:08:55+00:00,2024-09-02 13:05:28+00:00,https://github.com/apache/airflow/pull/41953,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]","[{'comment_id': 2324634420, 'issue_id': 2500841758, 'author': 'ephraimbuddy', 'body': 'Already in v2-10-stable but not in v2-10-test following the python client release where some backports were done just for the sync PR', 'created_at': datetime.datetime(2024, 9, 2, 12, 25, 23, tzinfo=datetime.timezone.utc)}]","ephraimbuddy (Issue Creator) on (2024-09-02 12:25:23 UTC): Already in v2-10-stable but not in v2-10-test following the python client release where some backports were done just for the sync PR

"
2500832000,pull_request,closed,,Fix tests/models/test_variable.py for database isolation mode (#41414),"* Fix tests/models/test_variable.py for database isolation mode

* Review feedback

(cherry picked from commit 736ebfe3fe2bd67406d5a50dacbfa1e43767d4ce)

",ephraimbuddy,2024-09-02 12:20:17+00:00,[],2024-09-13 17:32:23+00:00,2024-09-02 14:25:29+00:00,https://github.com/apache/airflow/pull/41952,"[('area:serialization', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]","[{'comment_id': 2324635378, 'issue_id': 2500832000, 'author': 'ephraimbuddy', 'body': 'Already in v2-10-stable but not in v2-10-test following the python client release where some backports were done just for the sync PR', 'created_at': datetime.datetime(2024, 9, 2, 12, 25, 51, tzinfo=datetime.timezone.utc)}]","ephraimbuddy (Issue Creator) on (2024-09-02 12:25:51 UTC): Already in v2-10-stable but not in v2-10-test following the python client release where some backports were done just for the sync PR

"
2500826589,pull_request,closed,,Skipping tests for db isolation because similar tests were skipped (#…,"…41450)

(cherry picked from commit e94b508b946471420488cc466d92301b54b4c5ae)
",utkarsharma2,2024-09-02 12:17:56+00:00,[],2024-09-02 14:27:25+00:00,2024-09-02 14:27:25+00:00,https://github.com/apache/airflow/pull/41951,"[('area:core-operators', 'Operators, Sensors and hooks within Core Airflow')]",[],
2500789608,pull_request,closed,,chore: Update Marquez version in openlineage integration,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->
Just updating Marquez image to latest, so the breeze with `--integration openlineage` uses new Marquez features.


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",kacpermuda,2024-09-02 12:01:17+00:00,[],2024-09-02 12:42:06+00:00,2024-09-02 12:41:02+00:00,https://github.com/apache/airflow/pull/41950,"[('area:dev-tools', '')]",[],
2500206862,pull_request,closed,,Remove system test for deprecated Google analytics operators,"This PR removed system tests for deprecated Google Analytics operators.

The API is decommissioned and no longer responds. Deprecated operators and hooks are planned for removal.",moiseenkov,2024-09-02 07:24:21+00:00,[],2024-09-02 11:14:08+00:00,2024-09-02 11:14:08+00:00,https://github.com/apache/airflow/pull/41946,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', ''), ('kind:documentation', '')]",[],
2500100801,pull_request,closed,,Lower down universal-pathlib minimum to 0.2.2 (#41939),"Beacause we pinned universal-pathlib to 0.2.2 in 2.10.0 adding >= 0.2.3 conflicts with currently released PyPI packages. We shoudl lower it down in order to allow PyPI constraints to not be conflicting

(cherry picked from commit 351961caf46e32f10e61691ca6d88d55db1e4d70)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-02 06:21:39+00:00,[],2024-09-02 07:49:21+00:00,2024-09-02 07:01:19+00:00,https://github.com/apache/airflow/pull/41943,"[('type:misc/internal', 'Changelog: Misc changes that should appear in change log')]","[{'comment_id': 2323905653, 'issue_id': 2500100801, 'author': 'potiuk', 'body': 'Backport of #41939', 'created_at': datetime.datetime(2024, 9, 2, 6, 22, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323907533, 'issue_id': 2500100801, 'author': 'potiuk', 'body': 'If we manage to merge it before release of 2.10.1 - that one could go to 2.10.1 @utkarsharma2 - It would be actually great because the `== pinning` that we have in 2.10.0 is likely a bad idea for all kinds of constraint generation.', 'created_at': datetime.datetime(2024, 9, 2, 6, 23, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323954528, 'issue_id': 2500100801, 'author': 'utkarsharma2', 'body': '> If we manage to merge it before release of 2.10.1 - that one could go to 2.10.1 @utkarsharma2 - It would be actually great because the `== pinning` that we have in 2.10.0 is likely a bad idea for all kinds of constraint generation.\r\n\r\nSure @potiuk, I too think we should include it. I will just wait for this PR to be merged.', 'created_at': datetime.datetime(2024, 9, 2, 6, 56, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323957026, 'issue_id': 2500100801, 'author': 'potiuk', 'body': 'Ah we need also the other backport first :( (removed override param)', 'created_at': datetime.datetime(2024, 9, 2, 6, 58, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323957715, 'issue_id': 2500100801, 'author': 'potiuk', 'body': 'https://github.com/apache/airflow/pull/41938', 'created_at': datetime.datetime(2024, 9, 2, 6, 58, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323962462, 'issue_id': 2500100801, 'author': 'potiuk', 'body': 'Merged both', 'created_at': datetime.datetime(2024, 9, 2, 7, 1, 27, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-02 06:22:23 UTC): Backport of #41939

potiuk (Issue Creator) on (2024-09-02 06:23:47 UTC): If we manage to merge it before release of 2.10.1 - that one could go to 2.10.1 @utkarsharma2 - It would be actually great because the `== pinning` that we have in 2.10.0 is likely a bad idea for all kinds of constraint generation.

utkarsharma2 on (2024-09-02 06:56:44 UTC): Sure @potiuk, I too think we should include it. I will just wait for this PR to be merged.

potiuk (Issue Creator) on (2024-09-02 06:58:12 UTC): Ah we need also the other backport first :( (removed override param)

potiuk (Issue Creator) on (2024-09-02 06:58:36 UTC): https://github.com/apache/airflow/pull/41938

potiuk (Issue Creator) on (2024-09-02 07:01:27 UTC): Merged both

"
2499858288,pull_request,closed,,ci: improve check_deferrable_default script to cover positional variables,"
backport  #41924 
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-09-02 02:22:53+00:00,[],2024-09-02 09:10:11+00:00,2024-09-02 09:10:09+00:00,https://github.com/apache/airflow/pull/41942,"[('area:dev-tools', '')]",[],
2499771234,pull_request,closed,,Validate aws service exceptions in waiters,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
closes: #41918

At present, we lack validation for some common AWS errors.

For common Step Function errors, refer to this link:
https://docs.aws.amazon.com/step-functions/latest/apireference/CommonErrors.html

Other AWS services may have additional common errors.

When a waiter encounters an error response from API calls, the waiter model in botocore generates a waiter error, as shown here:
https://github.com/boto/botocore/blob/develop/botocore/waiter.py#L361

This PR aims to capture such errors in the async_wait and wait methods.

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-09-02 00:30:42+00:00,[],2024-09-25 20:13:06+00:00,2024-09-04 15:15:46+00:00,https://github.com/apache/airflow/pull/41941,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', '')]",[],
2499707212,pull_request,closed,,Add RunEvaluationOperator for Google Vertex AI Rapid Evaluation API,"The Gen AI Evaluation Service lets you evaluate your large language models (LLMs), both pointwise and pairwise, across several metrics, with your own criteria. You can provide inference-time inputs, LLM responses and additional parameters, and the Gen AI Evaluation Service returns metrics specific to the evaluation task.

Metrics include model-based metrics, such as PointwiseMetric and PairwiseMetric, and in-memory computed metrics, such as rouge, bleu, and tool function-call metrics. PointwiseMetric and PairwiseMetric are generic model-based metrics that you can customize with your own criteria. Because the service takes the prediction results directly from models as input, the evaluation service can perform both inference and subsequent evaluation on all models supported by Vertex AI.

For more information on evaluating a model, see [Generative AI evaluation service overview](https://cloud.google.com/vertex-ai/generative-ai/docs/models/evaluation-overview).

Can be used as part of a larger LLMops DAG:

Training Dataset Lands --> GCSObjectExistenceSensor --> [SupervisedFineTuningTrainOperator](https://github.com/apache/airflow/blob/0f5c25b416f23c6fdc2ab20cba6a147eccaabe2d/airflow/providers/google/cloud/operators/vertex_ai/generative_model.py#L577) --> **RunEvaluationOperator** --> [CountTokensOperator](https://github.com/apache/airflow/pull/41908) --> [GenerativeModelGenerateContentOperator](https://github.com/apache/airflow/blob/0f5c25b416f23c6fdc2ab20cba6a147eccaabe2d/airflow/providers/google/cloud/operators/vertex_ai/generative_model.py#L502)

**Note: Fixes/Replaces closed [PR 41919](https://github.com/apache/airflow/pull/41919)**

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",CYarros10,2024-09-01 22:11:30+00:00,[],2024-12-09 14:54:02+00:00,2024-09-02 11:14:42+00:00,https://github.com/apache/airflow/pull/41940,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', ''), ('kind:documentation', '')]",[],
2499676639,pull_request,closed,,Lower down universal-pathlib minimum to 0.2.2,"Beacause we pinned universal-pathlib to 0.2.2 in 2.10.0 adding >= 0.2.3 conflicts with currently released PyPI packages. We shoudl lower it down in order to allow PyPI constraints to not be conflicting

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-01 20:49:44+00:00,[],2024-09-02 07:49:04+00:00,2024-09-02 05:59:11+00:00,https://github.com/apache/airflow/pull/41939,"[('type:misc/internal', 'Changelog: Misc changes that should appear in change log')]","[{'comment_id': 2323492854, 'issue_id': 2499676639, 'author': 'potiuk', 'body': 'Actually - we need to lower-down the min version on universal-pathlib because it was pinned to 0.2.2 in 2.10.0', 'created_at': datetime.datetime(2024, 9, 1, 20, 50, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323492959, 'issue_id': 2499676639, 'author': 'potiuk', 'body': 'Follow-up after #41921', 'created_at': datetime.datetime(2024, 9, 1, 20, 51, 4, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-01 20:50:37 UTC): Actually - we need to lower-down the min version on universal-pathlib because it was pinned to 0.2.2 in 2.10.0

potiuk (Issue Creator) on (2024-09-01 20:51:04 UTC): Follow-up after #41921

"
2499666721,pull_request,closed,,Protect against None components of universal pathlib xcom backend (#4…,"…1921)

fixes: #41723
(cherry picked from commit 7a75f0a2bc6f964a943db98946ce652c43942180)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-01 20:23:26+00:00,[],2024-09-02 07:47:51+00:00,2024-09-02 07:00:18+00:00,https://github.com/apache/airflow/pull/41938,"[('area:providers', ''), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log'), ('provider:common-io', '')]","[{'comment_id': 2323486296, 'issue_id': 2499666721, 'author': 'potiuk', 'body': 'Backport of #41921 to v2-10-test. I marked the original PR to be for 2.10.2 - as there is no particular need to add it in 2.10.1 but if we do any more additions to 2.10.1 it could also be added there @utkarsharma2', 'created_at': datetime.datetime(2024, 9, 1, 20, 24, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323493385, 'issue_id': 2499666721, 'author': 'potiuk', 'body': 'This will need to be followed up with https://github.com/apache/airflow/pull/41939 backport as well.', 'created_at': datetime.datetime(2024, 9, 1, 20, 52, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323908197, 'issue_id': 2499666721, 'author': 'potiuk', 'body': 'Closing in favour of #41943', 'created_at': datetime.datetime(2024, 9, 2, 6, 24, 17, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-01 20:24:55 UTC): Backport of #41921 to v2-10-test. I marked the original PR to be for 2.10.2 - as there is no particular need to add it in 2.10.1 but if we do any more additions to 2.10.1 it could also be added there @utkarsharma2

potiuk (Issue Creator) on (2024-09-01 20:52:51 UTC): This will need to be followed up with https://github.com/apache/airflow/pull/41939 backport as well.

potiuk (Issue Creator) on (2024-09-02 06:24:17 UTC): Closing in favour of #41943

"
2499558213,pull_request,closed,,Move projects metadata for SBOM export to Google Spreadsheet,"Move the ""known"" project's metadata to a metadata spreadsheet where we will be able to maintain it without having to modify the code in breeze. This allows to regenerate SBOM export any time with updated metadata and allows it to be edited and maintained manually.

This also means that the CSV option should be removed (since we are now rely on Google Spreadsheet anyway). The code has been refactored to move things around betwen cdxgen/sbom/ne projects_google_spreadsheet modules.

Added rich progress to track the advancements of tasks.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-01 16:07:00+00:00,[],2024-09-03 09:10:31+00:00,2024-09-03 09:10:29+00:00,https://github.com/apache/airflow/pull/41930,"[('area:dev-tools', '')]","[{'comment_id': 2323497665, 'issue_id': 2499558213, 'author': 'potiuk', 'body': 'BTW. Anyone from the PMC/ Committers who would like to get write access to the ""Metadata"" spreadsheet https://docs.google.com/spreadsheets/d/1Hg6_B_irfnqNltnu1OUmt7Ph-K6x-DTWF7GZ5t-G0iI/edit?gid=0#gid=0 -> let me know.', 'created_at': datetime.datetime(2024, 9, 1, 21, 8, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2325244362, 'issue_id': 2499558213, 'author': 'potiuk', 'body': ':)', 'created_at': datetime.datetime(2024, 9, 2, 19, 45, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2325928503, 'issue_id': 2499558213, 'author': 'potiuk', 'body': '> Glad to see SBOMs are getting some great improvement\r\n\r\nIndeed. With thos changes we are getting to the next level - from just ""reporting as things are"" to ""makins some actionable steps out of those"". I will tell more about it on Thu and even more at the Airflow Summit keynote, but it progresses quite nicely with ""security state"" of Airflow f I look back where we were a year ago....', 'created_at': datetime.datetime(2024, 9, 3, 8, 38, 28, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-01 21:08:30 UTC): BTW. Anyone from the PMC/ Committers who would like to get write access to the ""Metadata"" spreadsheet https://docs.google.com/spreadsheets/d/1Hg6_B_irfnqNltnu1OUmt7Ph-K6x-DTWF7GZ5t-G0iI/edit?gid=0#gid=0 -> let me know.

potiuk (Issue Creator) on (2024-09-02 19:45:50 UTC): :)

potiuk (Issue Creator) on (2024-09-03 08:38:28 UTC): Indeed. With thos changes we are getting to the next level - from just ""reporting as things are"" to ""makins some actionable steps out of those"". I will tell more about it on Thu and even more at the Airflow Summit keynote, but it progresses quite nicely with ""security state"" of Airflow f I look back where we were a year ago....

"
2499557102,pull_request,closed,,Docstring update in AsyncKubernetesHook,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
Update docstring in AsyncKubernetesHook
<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-09-01 16:04:42+00:00,[],2024-11-02 13:06:20+00:00,2024-09-02 11:36:27+00:00,https://github.com/apache/airflow/pull/41929,"[('area:providers', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues')]",[],
2499534642,pull_request,closed,,[Fix #41763]: Redundant forward slash in SFTPToGCSOperator when destination_path is not specified or have default value,"If the destination path is not specified, it defaults to an empty string. As a result, replacing base_path with an empty string is ineffective, causing the destination to retain the ""/"" prefix, if it has.

closes: #41763
related: #41763 
",Mayuresh16,2024-09-01 15:20:52+00:00,[],2024-09-02 14:16:57+00:00,2024-09-02 14:16:54+00:00,https://github.com/apache/airflow/pull/41928,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]","[{'comment_id': 2323391648, 'issue_id': 2499534642, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 9, 1, 15, 20, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2324843842, 'issue_id': 2499534642, 'author': 'Mayuresh16', 'body': '@potiuk  @romsharon98 @moiseenkov  Please merge the code if it looks good to you.', 'created_at': datetime.datetime(2024, 9, 2, 14, 8, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2324859724, 'issue_id': 2499534642, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 2, 14, 16, 56, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-09-01 15:20:56 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

Mayuresh16 (Issue Creator) on (2024-09-02 14:08:42 UTC): @potiuk  @romsharon98 @moiseenkov  Please merge the code if it looks good to you.

boring-cyborg[bot] on (2024-09-02 14:16:56 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2499444900,pull_request,closed,,Add backcompat check for executors that don't inherit BaseExecutor (#…,"…41906)

(cherry picked from commit f168d0aedbc73b86b1bb0e7fb38cad4ce5a66621)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-01 12:37:27+00:00,[],2024-09-01 15:35:34+00:00,2024-09-01 14:32:55+00:00,https://github.com/apache/airflow/pull/41927,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2323322629, 'issue_id': 2499444900, 'author': 'potiuk', 'body': 'Backport of #41906', 'created_at': datetime.datetime(2024, 9, 1, 12, 37, 59, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-01 12:37:59 UTC): Backport of #41906

"
2499404392,pull_request,closed,,Upgrade UV to 0.4.1 (#41925),"(cherry picked from commit 9cfc6dfe6eac9bc241783ca580a26875cac742ac)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-01 11:18:03+00:00,[],2024-09-01 15:34:06+00:00,2024-09-01 11:20:51+00:00,https://github.com/apache/airflow/pull/41926,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes'), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]","[{'comment_id': 2323294532, 'issue_id': 2499404392, 'author': 'potiuk', 'body': 'Backport of #41925', 'created_at': datetime.datetime(2024, 9, 1, 11, 18, 44, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-09-01 11:18:44 UTC): Backport of #41925

"
2499381991,pull_request,closed,,Upgrade UV to 0.4.1,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-01 10:40:55+00:00,[],2024-09-01 15:31:39+00:00,2024-09-01 11:16:29+00:00,https://github.com/apache/airflow/pull/41925,"[('area:dev-tools', ''), ('area:production-image', 'Production image improvements and fixes'), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2499379838,pull_request,closed,,ci: improve check_deferrable_default script to cover positional variables,"## Why

The original scripts might miss the case that the `deferable` argument is set as a positional argument. The following is an example operator that will pass this check.

```python
from __future__ import annotations

from airflow.models.baseoperator import BaseOperator


class ExampleOperator(BaseOperator):
    def __init__(self, /, deferrable, *, a=1, **kwargs) -> None:
        super().__init__(**kwargs)
```

## What
* add posonlyargs into check
* Check whether the argument default is not None when the argument is `deferrable`

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Lee-W,2024-09-01 10:37:15+00:00,[],2024-09-01 11:16:12+00:00,2024-09-01 11:16:12+00:00,https://github.com/apache/airflow/pull/41924,"[('area:dev-tools', '')]",[],
2499366575,pull_request,closed,, [Task] add UT for rotate log setting in worker task,"Previously I added a feature to support limit log size for a worker task. https://github.com/apache/airflow/pull/41064

This PR is to add a UT for it to test it and limit the future unaware changes.

",HuanjieGuo,2024-09-01 10:14:24+00:00,[],2024-09-01 14:37:54+00:00,2024-09-01 14:33:41+00:00,https://github.com/apache/airflow/pull/41923,"[('kind:documentation', '')]","[{'comment_id': 2323296134, 'issue_id': 2499366575, 'author': 'potiuk', 'body': 'Needs static check fixes', 'created_at': datetime.datetime(2024, 9, 1, 11, 23, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323310795, 'issue_id': 2499366575, 'author': 'potiuk', 'body': 'Still some ruff changes. Installign pre-commit and running it is the best way to automatically fix those errors when committing', 'created_at': datetime.datetime(2024, 9, 1, 12, 6, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323369849, 'issue_id': 2499366575, 'author': 'HuanjieGuo', 'body': '> Still some ruff changes. Installign pre-commit and running it is the best way to automatically fix those errors when committing\r\n\r\nYep, I just remembered to run the  ` ruff format` and forgot to run the `pre-commit`, have installed it and will run them both next time.', 'created_at': datetime.datetime(2024, 9, 1, 14, 37, 53, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-01 11:23:09 UTC): Needs static check fixes

potiuk on (2024-09-01 12:06:24 UTC): Still some ruff changes. Installign pre-commit and running it is the best way to automatically fix those errors when committing

HuanjieGuo (Issue Creator) on (2024-09-01 14:37:53 UTC): Yep, I just remembered to run the  ` ruff format` and forgot to run the `pre-commit`, have installed it and will run them both next time.

"
2499163470,pull_request,closed,,Protect against None components of universal pathlib xcom backend,"fixes: #41723

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-09-01 02:18:32+00:00,[],2024-09-02 07:48:40+00:00,2024-09-01 20:18:13+00:00,https://github.com/apache/airflow/pull/41921,"[('area:providers', ''), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log'), ('provider:common-io', '')]","[{'comment_id': 2323438156, 'issue_id': 2499163470, 'author': 'ap--', 'body': 'Regarding the `overwrite` argument in `rename`: The implementation of `UPath.rename` relies on `AbstractFileSystem.mv`. Below is a report for a selection of available fsspec filesystems, showing if they rely on the default implementation or if they override the method.\r\n\r\n**tldr:** the default and most custom implementations throw away extra keyword arguments. The only one in this list that doesn\'t is `SMBFileSystem`, but it seems there\'s no overwrite keyword argument further down in `smbclient.rename` either. So unless you use a fsspec filesystem that is not listed here and requires the `overwrite` kwarg, it should be safe to remove.\r\n\r\nSee below for details on the different rename implementations:\r\n\r\n\r\n# fsspec subclasses: customized method report for \'mv\'\r\n<details>\r\n\r\n<summary>Click to see the environment used to generate the report</summary>\r\n\r\n```\r\nadlfs==2024.7.0\r\naenum==3.1.15\r\naiobotocore==2.14.0\r\naiofile==3.8.8\r\naiohappyeyeballs==2.4.0\r\naiohttp==3.10.5\r\naiohttp-retry==2.8.3\r\naioitertools==0.11.0\r\naiooss2==0.2.10\r\naiosignal==1.3.1\r\naliyun-python-sdk-core==2.15.2\r\naliyun-python-sdk-kms==2.16.5\r\namqp==5.2.0\r\nannotated-types==0.7.0\r\nantlr4-python3-runtime==4.9.3\r\nanyio==4.4.0\r\nappdirs==1.4.4\r\nasyncssh==2.16.0\r\natpublic==5.0\r\nattrs==24.2.0\r\nazure-core==1.30.2\r\nazure-datalake-store==0.0.53\r\nazure-identity==1.17.1\r\nazure-storage-blob==12.22.0\r\nbcrypt==4.2.0\r\nbilliard==4.2.0\r\nbotocore==1.35.7\r\nboxfs==0.3.0\r\nboxsdk==3.13.0\r\ncachetools==5.5.0\r\ncaio==0.9.17\r\ncelery==5.4.0\r\ncertifi==2024.8.30\r\ncffi==1.17.0\r\ncharset-normalizer==3.3.2\r\ncircuitbreaker==2.0.0\r\nclick==8.1.7\r\nclick-didyoumean==0.3.1\r\nclick-plugins==1.1.1\r\nclick-repl==0.3.0\r\ncloudpickle==3.0.0\r\ncolorama==0.4.6\r\nconfigobj==5.0.8\r\ncrcmod==1.7\r\ncryptography==42.0.8\r\ndask==2024.8.2\r\ndecorator==5.1.1\r\ndictdiffer==0.9.0\r\ndiskcache==5.6.3\r\ndistributed==2024.8.2\r\ndistro==1.9.0\r\ndocker-pycreds==0.4.0\r\ndpath==2.2.0\r\ndropbox==12.0.2\r\ndropboxdrivefs==1.4.1\r\ndulwich==0.22.1\r\ndvc==3.53.1\r\ndvc-data==3.15.2\r\ndvc-http==2.32.0\r\ndvc-objects==5.1.0\r\ndvc-render==1.0.2\r\ndvc-studio-client==0.21.0\r\ndvc-task==0.4.0\r\nentrypoints==0.4\r\nfilelock==3.15.4\r\nflatten-dict==0.4.2\r\nflufl.lock==8.1.0\r\nfrozenlist==1.4.1\r\nfsspec==2024.6.1\r\nfsspec_xrootd==0.3.0\r\nfuncy==2.0\r\ngcsfs==2024.6.1\r\ngitdb==4.0.11\r\nGitPython==3.1.43\r\ngoogle-api-core==2.19.2\r\ngoogle-auth==2.34.0\r\ngoogle-auth-oauthlib==1.2.1\r\ngoogle-cloud-core==2.4.1\r\ngoogle-cloud-storage==2.18.2\r\ngoogle-crc32c==1.5.0\r\ngoogle-resumable-media==2.7.2\r\ngoogleapis-common-protos==1.65.0\r\ngrandalf==0.8\r\ngto==1.7.1\r\nh11==0.14.0\r\nhttpcore==1.0.5\r\nhttpx==0.27.2\r\nhuggingface-hub==0.23.5\r\nhydra-core==1.3.2\r\nidna==3.8\r\nisodate==0.6.1\r\niterative-telemetry==0.0.8\r\nJinja2==3.1.4\r\njmespath==0.10.0\r\nkombu==5.4.0\r\nlakefs==0.7.1\r\nlakefs-sdk==1.32.1\r\nlakefs-spec==0.10.0\r\nlocket==1.0.0\r\nmarkdown-it-py==3.0.0\r\nMarkupSafe==2.1.5\r\nmdurl==0.1.2\r\nmorefs==0.2.2\r\nmsal==1.30.0\r\nmsal-extensions==1.2.0\r\nmsgpack==1.0.8\r\nmultidict==6.0.5\r\nnetworkx==3.3\r\nnumpy==2.1.0\r\noauthlib==3.2.2\r\noci==2.133.0\r\nocifs==1.3.1\r\nomegaconf==2.3.0\r\norjson==3.10.7\r\noss2==2.18.1\r\nossfs==2023.12.0\r\npackaging==24.1\r\nparamiko==3.4.1\r\npartd==1.4.2\r\npathspec==0.12.1\r\nplatformdirs==3.11.0\r\nply==3.11\r\nportalocker==2.10.1\r\nprompt_toolkit==3.0.47\r\nproto-plus==1.24.0\r\nprotobuf==5.28.0\r\npsutil==6.0.0\r\npyarrow==17.0.0\r\npyasn1==0.6.0\r\npyasn1_modules==0.4.0\r\npycparser==2.22\r\npycryptodome==3.20.0\r\npydantic==2.8.2\r\npydantic_core==2.20.1\r\npydot==3.0.1\r\npygit2==1.15.1\r\nPygments==2.18.0\r\npygtrie==2.5.0\r\nPyJWT==2.9.0\r\nPyNaCl==1.5.0\r\npyOpenSSL==24.2.1\r\npyparsing==3.1.4\r\npyspnego==0.11.1\r\npython-dateutil==2.9.0.post0\r\npytz==2024.1\r\nPyYAML==6.0.2\r\nrequests==2.32.3\r\nrequests-oauthlib==2.0.0\r\nrequests-toolbelt==1.0.0\r\nrich==13.8.0\r\nrsa==4.9\r\nruamel.yaml==0.18.6\r\nruamel.yaml.clib==0.2.8\r\ns3fs==2024.6.1\r\nscmrepo==3.3.7\r\nsemver==3.0.2\r\nsentry-sdk==2.13.0\r\nsetproctitle==1.3.3\r\nsetuptools==74.0.0\r\nshellingham==1.5.4\r\nshortuuid==1.0.13\r\nshtab==1.7.1\r\nsix==1.16.0\r\nsmbprotocol==1.14.0\r\nsmmap==5.0.1\r\nsniffio==1.3.1\r\nsortedcontainers==2.4.0\r\nsqltrie==0.11.1\r\nstone==3.3.1\r\ntabulate==0.9.0\r\ntblib==3.0.0\r\ntomlkit==0.13.2\r\ntoolz==0.12.1\r\ntornado==6.4.1\r\ntqdm==4.66.5\r\ntyper==0.12.5\r\ntyping_extensions==4.12.2\r\ntzdata==2024.1\r\nurllib3==2.0.7\r\nvine==5.1.0\r\nvoluptuous==0.15.2\r\nwandb==0.17.8\r\nwandbfs==0.0.2\r\nwcwidth==0.2.13\r\nwebdav4==0.10.0\r\nwrapt==1.16.0\r\nyarl==1.9.6\r\nzc.lockfile==3.0.post1\r\nzict==3.0.0\r\n\r\n```\r\n\r\n</details>\r\n\r\n## Default implementation\r\n```python\r\n    def mv(self, path1, path2, recursive=False, maxdepth=None, **kwargs):\r\n        """"""Move file(s) from one location to another""""""\r\n        if path1 == path2:\r\n            logger.debug(""%s mv: The paths are the same, so no files were moved."", self)\r\n        else:\r\n            # explicitly raise exception to prevent data corruption\r\n            self.copy(\r\n                path1, path2, recursive=recursive, maxdepth=maxdepth, onerror=""raise""\r\n            )\r\n            self.rm(path1, recursive=recursive)\r\n\r\n```\r\n\r\nThese filesystem classes do not customize the method \'mv\':\r\n-  `AzureBlobFileSystem`\r\n-  `AzureDatalakeFileSystem`\r\n-  `CachingFileSystem`\r\n-  `BoxFileSystem`\r\n-  `DataFileSystem`\r\n-  `DropboxDriveFileSystem`\r\n-  `_DVCFileSystem`\r\n-  `WholeFileCacheFileSystem`\r\n-  `GCSFileSystem`\r\n-  `GenericFileSystem`\r\n-  `GitFileSystem`\r\n-  `GithubFileSystem`\r\n-  `HfFileSystem`\r\n-  `HTTPFileSystem`\r\n-  `JupyterFileSystem`\r\n-  `LakeFSFileSystem`\r\n-  `LibArchiveFileSystem`\r\n-  `MemoryFileSystem`\r\n-  `OCIFileSystem`\r\n-  `OSSFileSystem`\r\n-  `ReferenceFileSystem`\r\n-  `XRootDFileSystem`\r\n-  `S3FileSystem`\r\n-  `SimpleCacheFileSystem`\r\n-  `TarFileSystem`\r\n-  `WandbFS`\r\n-  `ZipFileSystem`\r\n-  `DictFS`\r\n-  `MemFS`\r\n-  `OverlayFileSystem`\r\n\r\n## Subclasses customizing \'mv\'\r\n### HadoopFileSystem\r\n`HadoopFileSystem.mv` is customized and signature is different\r\n- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`\r\n- subclass: `(self, path1, path2, **kwargs)`\r\n```python\r\n    @wrap_exceptions\r\n    def mv(self, path1, path2, **kwargs):\r\n        path1 = self._strip_protocol(path1).rstrip(""/"")\r\n        path2 = self._strip_protocol(path2).rstrip(""/"")\r\n        self.fs.move(path1, path2)\r\n\r\n```\r\n\r\n### AsyncLocalFileSystem\r\n`AsyncLocalFileSystem.mv` is customized and signature is different\r\n- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`\r\n- subclass: `(self, path1, path2, **kwargs)`\r\n```python\r\n    def mv(self, path1, path2, **kwargs):\r\n        path1 = self._strip_protocol(path1)\r\n        path2 = self._strip_protocol(path2)\r\n        shutil.move(path1, path2)\r\n\r\n```\r\n\r\n### DaskWorkerFileSystem\r\n`DaskWorkerFileSystem.mv` is customized and signature is different\r\n- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`\r\n- subclass: `(self, *args, **kwargs)`\r\n```python\r\n    def mv(self, *args, **kwargs):\r\n        if self.worker:\r\n            self.fs.mv(*args, **kwargs)\r\n        else:\r\n            self.rfs.mv(*args, **kwargs).compute()\r\n\r\n```\r\n\r\n### DatabricksFileSystem\r\n`DatabricksFileSystem.mv` is customized and signature is different\r\n- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`\r\n- subclass: `(self, source_path, destination_path, recursive=False, maxdepth=None, **kwargs)`\r\n```python\r\n    def mv(\r\n        self, source_path, destination_path, recursive=False, maxdepth=None, **kwargs\r\n    ):\r\n        """"""\r\n        Move a source to a destination path.\r\n\r\n        A note from the original [databricks API manual]\r\n        (https://docs.databricks.com/dev-tools/api/latest/dbfs.html#move).\r\n\r\n        When moving a large number of files the API call will time out after\r\n        approximately 60s, potentially resulting in partially moved data.\r\n        Therefore, for operations that move more than 10k files, we strongly\r\n        discourage using the DBFS REST API.\r\n\r\n        Parameters\r\n        ----------\r\n        source_path: str\r\n            From where to move (absolute path)\r\n        destination_path: str\r\n            To where to move (absolute path)\r\n        recursive: bool\r\n            Not implemented to far.\r\n        maxdepth:\r\n            Not implemented to far.\r\n        """"""\r\n        if recursive:\r\n            raise NotImplementedError\r\n        if maxdepth:\r\n            raise NotImplementedError\r\n\r\n        try:\r\n            self._send_to_api(\r\n                method=""post"",\r\n                endpoint=""move"",\r\n                json={""source_path"": source_path, ""destination_path"": destination_path},\r\n            )\r\n        except DatabricksException as e:\r\n            if e.error_code == ""RESOURCE_DOES_NOT_EXIST"":\r\n                raise FileNotFoundError(e.message)\r\n            elif e.error_code == ""RESOURCE_ALREADY_EXISTS"":\r\n                raise FileExistsError(e.message)\r\n\r\n            raise e\r\n        self.invalidate_cache(self._parent(source_path))\r\n        self.invalidate_cache(self._parent(destination_path))\r\n\r\n```\r\n\r\n### DirFileSystem\r\n`DirFileSystem.mv` is customized and signature is different\r\n- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`\r\n- subclass: `(self, path1, path2, **kwargs)`\r\n```python\r\n    def mv(self, path1, path2, **kwargs):\r\n        return self.fs.mv(\r\n            self._join(path1),\r\n            self._join(path2),\r\n            **kwargs,\r\n        )\r\n\r\n```\r\n\r\n### LocalFileSystem\r\n`LocalFileSystem.mv` is customized and signature is different\r\n- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`\r\n- subclass: `(self, path1, path2, **kwargs)`\r\n```python\r\n    def mv(self, path1, path2, **kwargs):\r\n        path1 = self._strip_protocol(path1)\r\n        path2 = self._strip_protocol(path2)\r\n        shutil.move(path1, path2)\r\n\r\n```\r\n\r\n### FTPFileSystem\r\n`FTPFileSystem.mv` is customized and signature is different\r\n- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`\r\n- subclass: `(self, path1, path2, **kwargs)`\r\n```python\r\n    def mv(self, path1, path2, **kwargs):\r\n        path1 = self._strip_protocol(path1)\r\n        path2 = self._strip_protocol(path2)\r\n        self.ftp.rename(path1, path2)\r\n        self.invalidate_cache(self._parent(path1))\r\n        self.invalidate_cache(self._parent(path2))\r\n\r\n```\r\n\r\n### SFTPFileSystem\r\n`SFTPFileSystem.mv` is customized and signature is different\r\n- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`\r\n- subclass: `(self, old, new)`\r\n```python\r\n    def mv(self, old, new):\r\n        logger.debug(""Renaming %s into %s"", old, new)\r\n        self.ftp.posix_rename(old, new)\r\n\r\n```\r\n\r\n### SMBFileSystem\r\n`SMBFileSystem.mv` is customized and signature is different\r\n- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`\r\n- subclass: `(self, path1, path2, recursive=None, maxdepth=None, **kwargs)`\r\n```python\r\n    def mv(self, path1, path2, recursive=None, maxdepth=None, **kwargs):\r\n        wpath1 = _as_unc_path(self.host, path1)\r\n        wpath2 = _as_unc_path(self.host, path2)\r\n        smbclient.rename(wpath1, wpath2, port=self._port, **kwargs)\r\n\r\n```\r\n\r\n### WebdavFileSystem\r\n`WebdavFileSystem.mv` is customized and signature is different\r\n- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`\r\n- subclass: `(self, path1: str, path2: str, recursive: bool = False, maxdepth: Optional[bool] = None, **kwargs: Any) -> None`\r\n```python\r\n    def mv(\r\n        self,\r\n        path1: str,\r\n        path2: str,\r\n        recursive: bool = False,\r\n        maxdepth: Optional[bool] = None,\r\n        **kwargs: Any,\r\n    ) -> None:\r\n        """"""Move a file/directory from one path to the other.""""""\r\n        path1 = self._strip_protocol(path1)\r\n        path2 = self._strip_protocol(path2)\r\n\r\n        if recursive and not maxdepth and self.isdir(path1):\r\n            return self.client.move(path1, path2)\r\n\r\n        if not recursive and self.isdir(path1):\r\n            return self.makedirs(path2)\r\n\r\n        super().mv(path1, path2, recursive=recursive, maxdepth=maxdepth, **kwargs)\r\n        return None\r\n\r\n```\r\n\r\n### WebHDFS\r\n`WebHDFS.mv` is customized and signature is different\r\n- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`\r\n- subclass: `(self, path1, path2, **kwargs)`\r\n```python\r\n    def mv(self, path1, path2, **kwargs):\r\n        self._call(""RENAME"", method=""put"", path=path1, destination=path2)\r\n\r\n```', 'created_at': datetime.datetime(2024, 9, 1, 17, 42, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323452945, 'issue_id': 2499163470, 'author': 'potiuk', 'body': 'Thanks @ap-- !', 'created_at': datetime.datetime(2024, 9, 1, 18, 32, 34, tzinfo=datetime.timezone.utc)}]","ap-- on (2024-09-01 17:42:13 UTC): Regarding the `overwrite` argument in `rename`: The implementation of `UPath.rename` relies on `AbstractFileSystem.mv`. Below is a report for a selection of available fsspec filesystems, showing if they rely on the default implementation or if they override the method.

**tldr:** the default and most custom implementations throw away extra keyword arguments. The only one in this list that doesn't is `SMBFileSystem`, but it seems there's no overwrite keyword argument further down in `smbclient.rename` either. So unless you use a fsspec filesystem that is not listed here and requires the `overwrite` kwarg, it should be safe to remove.

See below for details on the different rename implementations:


# fsspec subclasses: customized method report for 'mv'
<details>

<summary>Click to see the environment used to generate the report</summary>

```
adlfs==2024.7.0
aenum==3.1.15
aiobotocore==2.14.0
aiofile==3.8.8
aiohappyeyeballs==2.4.0
aiohttp==3.10.5
aiohttp-retry==2.8.3
aioitertools==0.11.0
aiooss2==0.2.10
aiosignal==1.3.1
aliyun-python-sdk-core==2.15.2
aliyun-python-sdk-kms==2.16.5
amqp==5.2.0
annotated-types==0.7.0
antlr4-python3-runtime==4.9.3
anyio==4.4.0
appdirs==1.4.4
asyncssh==2.16.0
atpublic==5.0
attrs==24.2.0
azure-core==1.30.2
azure-datalake-store==0.0.53
azure-identity==1.17.1
azure-storage-blob==12.22.0
bcrypt==4.2.0
billiard==4.2.0
botocore==1.35.7
boxfs==0.3.0
boxsdk==3.13.0
cachetools==5.5.0
caio==0.9.17
celery==5.4.0
certifi==2024.8.30
cffi==1.17.0
charset-normalizer==3.3.2
circuitbreaker==2.0.0
click==8.1.7
click-didyoumean==0.3.1
click-plugins==1.1.1
click-repl==0.3.0
cloudpickle==3.0.0
colorama==0.4.6
configobj==5.0.8
crcmod==1.7
cryptography==42.0.8
dask==2024.8.2
decorator==5.1.1
dictdiffer==0.9.0
diskcache==5.6.3
distributed==2024.8.2
distro==1.9.0
docker-pycreds==0.4.0
dpath==2.2.0
dropbox==12.0.2
dropboxdrivefs==1.4.1
dulwich==0.22.1
dvc==3.53.1
dvc-data==3.15.2
dvc-http==2.32.0
dvc-objects==5.1.0
dvc-render==1.0.2
dvc-studio-client==0.21.0
dvc-task==0.4.0
entrypoints==0.4
filelock==3.15.4
flatten-dict==0.4.2
flufl.lock==8.1.0
frozenlist==1.4.1
fsspec==2024.6.1
fsspec_xrootd==0.3.0
funcy==2.0
gcsfs==2024.6.1
gitdb==4.0.11
GitPython==3.1.43
google-api-core==2.19.2
google-auth==2.34.0
google-auth-oauthlib==1.2.1
google-cloud-core==2.4.1
google-cloud-storage==2.18.2
google-crc32c==1.5.0
google-resumable-media==2.7.2
googleapis-common-protos==1.65.0
grandalf==0.8
gto==1.7.1
h11==0.14.0
httpcore==1.0.5
httpx==0.27.2
huggingface-hub==0.23.5
hydra-core==1.3.2
idna==3.8
isodate==0.6.1
iterative-telemetry==0.0.8
Jinja2==3.1.4
jmespath==0.10.0
kombu==5.4.0
lakefs==0.7.1
lakefs-sdk==1.32.1
lakefs-spec==0.10.0
locket==1.0.0
markdown-it-py==3.0.0
MarkupSafe==2.1.5
mdurl==0.1.2
morefs==0.2.2
msal==1.30.0
msal-extensions==1.2.0
msgpack==1.0.8
multidict==6.0.5
networkx==3.3
numpy==2.1.0
oauthlib==3.2.2
oci==2.133.0
ocifs==1.3.1
omegaconf==2.3.0
orjson==3.10.7
oss2==2.18.1
ossfs==2023.12.0
packaging==24.1
paramiko==3.4.1
partd==1.4.2
pathspec==0.12.1
platformdirs==3.11.0
ply==3.11
portalocker==2.10.1
prompt_toolkit==3.0.47
proto-plus==1.24.0
protobuf==5.28.0
psutil==6.0.0
pyarrow==17.0.0
pyasn1==0.6.0
pyasn1_modules==0.4.0
pycparser==2.22
pycryptodome==3.20.0
pydantic==2.8.2
pydantic_core==2.20.1
pydot==3.0.1
pygit2==1.15.1
Pygments==2.18.0
pygtrie==2.5.0
PyJWT==2.9.0
PyNaCl==1.5.0
pyOpenSSL==24.2.1
pyparsing==3.1.4
pyspnego==0.11.1
python-dateutil==2.9.0.post0
pytz==2024.1
PyYAML==6.0.2
requests==2.32.3
requests-oauthlib==2.0.0
requests-toolbelt==1.0.0
rich==13.8.0
rsa==4.9
ruamel.yaml==0.18.6
ruamel.yaml.clib==0.2.8
s3fs==2024.6.1
scmrepo==3.3.7
semver==3.0.2
sentry-sdk==2.13.0
setproctitle==1.3.3
setuptools==74.0.0
shellingham==1.5.4
shortuuid==1.0.13
shtab==1.7.1
six==1.16.0
smbprotocol==1.14.0
smmap==5.0.1
sniffio==1.3.1
sortedcontainers==2.4.0
sqltrie==0.11.1
stone==3.3.1
tabulate==0.9.0
tblib==3.0.0
tomlkit==0.13.2
toolz==0.12.1
tornado==6.4.1
tqdm==4.66.5
typer==0.12.5
typing_extensions==4.12.2
tzdata==2024.1
urllib3==2.0.7
vine==5.1.0
voluptuous==0.15.2
wandb==0.17.8
wandbfs==0.0.2
wcwidth==0.2.13
webdav4==0.10.0
wrapt==1.16.0
yarl==1.9.6
zc.lockfile==3.0.post1
zict==3.0.0

```

</details>

## Default implementation
```python
    def mv(self, path1, path2, recursive=False, maxdepth=None, **kwargs):
        """"""Move file(s) from one location to another""""""
        if path1 == path2:
            logger.debug(""%s mv: The paths are the same, so no files were moved."", self)
        else:
            # explicitly raise exception to prevent data corruption
            self.copy(
                path1, path2, recursive=recursive, maxdepth=maxdepth, onerror=""raise""
            )
            self.rm(path1, recursive=recursive)

```

These filesystem classes do not customize the method 'mv':
-  `AzureBlobFileSystem`
-  `AzureDatalakeFileSystem`
-  `CachingFileSystem`
-  `BoxFileSystem`
-  `DataFileSystem`
-  `DropboxDriveFileSystem`
-  `_DVCFileSystem`
-  `WholeFileCacheFileSystem`
-  `GCSFileSystem`
-  `GenericFileSystem`
-  `GitFileSystem`
-  `GithubFileSystem`
-  `HfFileSystem`
-  `HTTPFileSystem`
-  `JupyterFileSystem`
-  `LakeFSFileSystem`
-  `LibArchiveFileSystem`
-  `MemoryFileSystem`
-  `OCIFileSystem`
-  `OSSFileSystem`
-  `ReferenceFileSystem`
-  `XRootDFileSystem`
-  `S3FileSystem`
-  `SimpleCacheFileSystem`
-  `TarFileSystem`
-  `WandbFS`
-  `ZipFileSystem`
-  `DictFS`
-  `MemFS`
-  `OverlayFileSystem`

## Subclasses customizing 'mv'
### HadoopFileSystem
`HadoopFileSystem.mv` is customized and signature is different
- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`
- subclass: `(self, path1, path2, **kwargs)`
```python
    @wrap_exceptions
    def mv(self, path1, path2, **kwargs):
        path1 = self._strip_protocol(path1).rstrip(""/"")
        path2 = self._strip_protocol(path2).rstrip(""/"")
        self.fs.move(path1, path2)

```

### AsyncLocalFileSystem
`AsyncLocalFileSystem.mv` is customized and signature is different
- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`
- subclass: `(self, path1, path2, **kwargs)`
```python
    def mv(self, path1, path2, **kwargs):
        path1 = self._strip_protocol(path1)
        path2 = self._strip_protocol(path2)
        shutil.move(path1, path2)

```

### DaskWorkerFileSystem
`DaskWorkerFileSystem.mv` is customized and signature is different
- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`
- subclass: `(self, *args, **kwargs)`
```python
    def mv(self, *args, **kwargs):
        if self.worker:
            self.fs.mv(*args, **kwargs)
        else:
            self.rfs.mv(*args, **kwargs).compute()

```

### DatabricksFileSystem
`DatabricksFileSystem.mv` is customized and signature is different
- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`
- subclass: `(self, source_path, destination_path, recursive=False, maxdepth=None, **kwargs)`
```python
    def mv(
        self, source_path, destination_path, recursive=False, maxdepth=None, **kwargs
    ):
        """"""
        Move a source to a destination path.

        A note from the original [databricks API manual]
        (https://docs.databricks.com/dev-tools/api/latest/dbfs.html#move).

        When moving a large number of files the API call will time out after
        approximately 60s, potentially resulting in partially moved data.
        Therefore, for operations that move more than 10k files, we strongly
        discourage using the DBFS REST API.

        Parameters
        ----------
        source_path: str
            From where to move (absolute path)
        destination_path: str
            To where to move (absolute path)
        recursive: bool
            Not implemented to far.
        maxdepth:
            Not implemented to far.
        """"""
        if recursive:
            raise NotImplementedError
        if maxdepth:
            raise NotImplementedError

        try:
            self._send_to_api(
                method=""post"",
                endpoint=""move"",
                json={""source_path"": source_path, ""destination_path"": destination_path},
            )
        except DatabricksException as e:
            if e.error_code == ""RESOURCE_DOES_NOT_EXIST"":
                raise FileNotFoundError(e.message)
            elif e.error_code == ""RESOURCE_ALREADY_EXISTS"":
                raise FileExistsError(e.message)

            raise e
        self.invalidate_cache(self._parent(source_path))
        self.invalidate_cache(self._parent(destination_path))

```

### DirFileSystem
`DirFileSystem.mv` is customized and signature is different
- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`
- subclass: `(self, path1, path2, **kwargs)`
```python
    def mv(self, path1, path2, **kwargs):
        return self.fs.mv(
            self._join(path1),
            self._join(path2),
            **kwargs,
        )

```

### LocalFileSystem
`LocalFileSystem.mv` is customized and signature is different
- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`
- subclass: `(self, path1, path2, **kwargs)`
```python
    def mv(self, path1, path2, **kwargs):
        path1 = self._strip_protocol(path1)
        path2 = self._strip_protocol(path2)
        shutil.move(path1, path2)

```

### FTPFileSystem
`FTPFileSystem.mv` is customized and signature is different
- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`
- subclass: `(self, path1, path2, **kwargs)`
```python
    def mv(self, path1, path2, **kwargs):
        path1 = self._strip_protocol(path1)
        path2 = self._strip_protocol(path2)
        self.ftp.rename(path1, path2)
        self.invalidate_cache(self._parent(path1))
        self.invalidate_cache(self._parent(path2))

```

### SFTPFileSystem
`SFTPFileSystem.mv` is customized and signature is different
- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`
- subclass: `(self, old, new)`
```python
    def mv(self, old, new):
        logger.debug(""Renaming %s into %s"", old, new)
        self.ftp.posix_rename(old, new)

```

### SMBFileSystem
`SMBFileSystem.mv` is customized and signature is different
- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`
- subclass: `(self, path1, path2, recursive=None, maxdepth=None, **kwargs)`
```python
    def mv(self, path1, path2, recursive=None, maxdepth=None, **kwargs):
        wpath1 = _as_unc_path(self.host, path1)
        wpath2 = _as_unc_path(self.host, path2)
        smbclient.rename(wpath1, wpath2, port=self._port, **kwargs)

```

### WebdavFileSystem
`WebdavFileSystem.mv` is customized and signature is different
- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`
- subclass: `(self, path1: str, path2: str, recursive: bool = False, maxdepth: Optional[bool] = None, **kwargs: Any) -> None`
```python
    def mv(
        self,
        path1: str,
        path2: str,
        recursive: bool = False,
        maxdepth: Optional[bool] = None,
        **kwargs: Any,
    ) -> None:
        """"""Move a file/directory from one path to the other.""""""
        path1 = self._strip_protocol(path1)
        path2 = self._strip_protocol(path2)

        if recursive and not maxdepth and self.isdir(path1):
            return self.client.move(path1, path2)

        if not recursive and self.isdir(path1):
            return self.makedirs(path2)

        super().mv(path1, path2, recursive=recursive, maxdepth=maxdepth, **kwargs)
        return None

```

### WebHDFS
`WebHDFS.mv` is customized and signature is different
- base_cls: `(self, path1, path2, recursive=False, maxdepth=None, **kwargs)`
- subclass: `(self, path1, path2, **kwargs)`
```python
    def mv(self, path1, path2, **kwargs):
        self._call(""RENAME"", method=""put"", path=path1, destination=path2)

```

potiuk (Issue Creator) on (2024-09-01 18:32:34 UTC): Thanks @ap-- !

"
2499070810,pull_request,closed,,Add generating recommended actions for projects and dependency depth,"The SBON export dependencies command now supports generating recommended actions and dependency depth information. recommended actions and dependency depth information.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-08-31 22:23:09+00:00,[],2024-08-31 23:17:15+00:00,2024-08-31 23:17:13+00:00,https://github.com/apache/airflow/pull/41920,"[('area:dev-tools', '')]",[],
2499043584,pull_request,closed,,[closed],"The Gen AI Evaluation Service lets you evaluate your large language models (LLMs), both pointwise and pairwise, across several metrics, with your own criteria. You can provide inference-time inputs, LLM responses and additional parameters, and the Gen AI Evaluation Service returns metrics specific to the evaluation task.

Metrics include model-based metrics, such as PointwiseMetric and PairwiseMetric, and in-memory computed metrics, such as rouge, bleu, and tool function-call metrics. PointwiseMetric and PairwiseMetric are generic model-based metrics that you can customize with your own criteria. Because the service takes the prediction results directly from models as input, the evaluation service can perform both inference and subsequent evaluation on all models supported by Vertex AI.

For more information on evaluating a model, see [Generative AI evaluation service overview](https://cloud.google.com/vertex-ai/generative-ai/docs/models/evaluation-overview).

Can be used as part of a larger LLMops DAG:

Training Dataset Lands --> GCSObjectExistenceSensor --> [SupervisedFineTuningTrainOperator](https://github.com/apache/airflow/blob/0f5c25b416f23c6fdc2ab20cba6a147eccaabe2d/airflow/providers/google/cloud/operators/vertex_ai/generative_model.py#L577) --> **RunEvaluationOperator** --> [CountTokensOperator](https://github.com/apache/airflow/pull/41908) --> [GenerativeModelGenerateContentOperator](https://github.com/apache/airflow/blob/0f5c25b416f23c6fdc2ab20cba6a147eccaabe2d/airflow/providers/google/cloud/operators/vertex_ai/generative_model.py#L502)

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",CYarros10,2024-08-31 20:53:54+00:00,[],2024-09-01 21:06:56+00:00,2024-09-01 21:06:44+00:00,https://github.com/apache/airflow/pull/41919,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', ''), ('kind:documentation', '')]","[{'comment_id': 2323104337, 'issue_id': 2499043584, 'author': 'potiuk', 'body': 'Needs rebase.', 'created_at': datetime.datetime(2024, 9, 1, 1, 27, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323104367, 'issue_id': 2499043584, 'author': 'potiuk', 'body': 'cc: @VladaZakharova ?', 'created_at': datetime.datetime(2024, 9, 1, 1, 27, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323465102, 'issue_id': 2499043584, 'author': 'potiuk', 'body': 'Needs rebase/resolving conflicts', 'created_at': datetime.datetime(2024, 9, 1, 19, 13, 43, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-01 01:27:34 UTC): Needs rebase.

potiuk on (2024-09-01 01:27:40 UTC): cc: @VladaZakharova ?

potiuk on (2024-09-01 19:13:43 UTC): Needs rebase/resolving conflicts

"
2498827383,pull_request,closed,,"Add support for semicolon stripping to DbApiHook, PrestoHook, and TrinoHook",Closes: #34828 ,Illumaria,2024-08-31 12:40:51+00:00,[],2024-11-13 15:01:19+00:00,2024-11-13 13:46:46+00:00,https://github.com/apache/airflow/pull/41916,"[('area:providers', ''), ('full tests needed', 'We need to run full set of tests for this PR to merge'), ('provider:common-sql', ''), ('provider:presto', '')]","[{'comment_id': 2322885953, 'issue_id': 2498827383, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 8, 31, 12, 40, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323313535, 'issue_id': 2498827383, 'author': 'potiuk', 'body': 'You will have to:\r\n\r\n1) bump common.sql minor version (new feature) in airfow/providers/common/sql/provider.yaml\r\n2) In all modified providers you will have to update dependency in provider yaml to be:  `common-sql >= THE(_NEW_COMMON_SQL_VERSION`', 'created_at': datetime.datetime(2024, 9, 1, 12, 12, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2327205062, 'issue_id': 2498827383, 'author': 'Illumaria', 'body': 'Whoops... Sorry. 🙏🏻', 'created_at': datetime.datetime(2024, 9, 3, 18, 55, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334277270, 'issue_id': 2498827383, 'author': 'eladkal', 'body': ""@Illumaria can you address the needed changes? I'm hoping to include this PR in the next release"", 'created_at': datetime.datetime(2024, 9, 6, 15, 13, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334282428, 'issue_id': 2498827383, 'author': 'eladkal', 'body': 'needs rebase and resolve conflicts', 'created_at': datetime.datetime(2024, 9, 6, 15, 16, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2334293000, 'issue_id': 2498827383, 'author': 'Illumaria', 'body': '@eladkal Sure, I’ll do it by the end of the weekend.', 'created_at': datetime.datetime(2024, 9, 6, 15, 21, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2336053847, 'issue_id': 2498827383, 'author': 'Illumaria', 'body': '@eladkal Hi! Could you please help me understand what I should do to fix the failing tests? :(', 'created_at': datetime.datetime(2024, 9, 7, 17, 12, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2338248978, 'issue_id': 2498827383, 'author': 'potiuk', 'body': '> @eladkal Hi! Could you please help me understand what I should do to fix the failing tests? :(\r\n\r\nThere are regular unit tests failing and they should be fixed. For compatibility tests - when they fail, they point you with the link to the documentation that desribes possible approaches and shows some examples how to deal with compatibility tests, and there are a number of examples already implemented in the code:\r\n\r\nhttps://github.com/apache/airflow/blob/main/contributing-docs/testing/unit_tests.rst#compatibility-provider-unit-tests-against-older-airflow-releases', 'created_at': datetime.datetime(2024, 9, 9, 14, 15, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2342703991, 'issue_id': 2498827383, 'author': 'eladkal', 'body': ""> @eladkal Hi! Could you please help me understand what I should do to fix the failing tests? :(\r\n\r\n`\r\n=========================== short test summary info ============================\r\nFAILED tests/providers/google/cloud/openlineage/test_mixins.py::TestBigQueryOpenLineageMixin::test_bq_job_information - TypeError: split() got an unexpected keyword argument 'strip_semicolon'\r\nFAILED tests/providers/google/cloud/openlineage/test_mixins.py::TestBigQueryOpenLineageMixin::test_bq_script_job_information - TypeError: split() got an unexpected keyword argument 'strip_semicolon'\r\nFAILED tests/providers/google/cloud/operators/test_bigquery.py::TestBigQueryInsertJobOperator::test_execute_openlineage_events - TypeError: split() got an unexpected keyword argument 'strip_semicolon'\r\nFAILED tests/providers/google/cloud/operators/test_bigquery.py::TestBigQueryInsertJobOperator::test_execute_fails_openlineage_events - TypeError: split() got an unexpected keyword argument 'strip_semicolon'\r\n============ 4 failed, 4159 passed, 63 skipped in 271.27s (0:04:31) ============\r\n`"", 'created_at': datetime.datetime(2024, 9, 11, 6, 10, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2354026549, 'issue_id': 2498827383, 'author': 'eladkal', 'body': '@Illumaria were you able to work on fixing the test?', 'created_at': datetime.datetime(2024, 9, 16, 21, 1, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2357604216, 'issue_id': 2498827383, 'author': 'Illumaria', 'body': '> @Illumaria were you able to work on fixing the test?\r\n\r\nNo, not yet. :( I’m away from home now, will be back on September 30th.\r\n\r\nGood news is I kinda need these changes for my work, so I won’t leave this request unfinished.', 'created_at': datetime.datetime(2024, 9, 18, 6, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2411434116, 'issue_id': 2498827383, 'author': 'eladkal', 'body': '> Good news is I kinda need these changes for my work, so I won’t leave this request unfinished.\r\n\r\nOK let me know when ready', 'created_at': datetime.datetime(2024, 10, 14, 14, 29, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2453962162, 'issue_id': 2498827383, 'author': 'eladkal', 'body': 'Tests are failing :(', 'created_at': datetime.datetime(2024, 11, 4, 7, 13, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456460404, 'issue_id': 2498827383, 'author': 'Illumaria', 'body': '> Tests are failing :(\r\n\r\nThank you, I can clearly see that. :/ Is there any way to run those failing tests locally? So far I\'ve tried\r\n```\r\nbreeze --integration all\r\n```\r\nand it\'s all green, and\r\n```\r\nbreeze testing non-db-tests\r\n```\r\nfor which I get these errors (they are also very confusing):\r\n<img width=""857"" alt=""image"" src=""https://github.com/user-attachments/assets/03074c6c-1990-4563-8133-d2185511a4ec"">', 'created_at': datetime.datetime(2024, 11, 5, 7, 49, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2456495604, 'issue_id': 2498827383, 'author': 'potiuk', 'body': 'Just follow the testing documentation and regular way how you run your tests (using IDE integration or command line pytest): \r\n\r\nhttps://github.com/apache/airflow/blob/main/contributing-docs/testing/unit_tests.rst\r\n\r\nYou can run the tests individually with pytest using local venv or enter the breeeze shell and run it from there.\r\n\r\nI highly recommend to rebase to latest `main` (we are doing a number of architectural changes that make our tests temporarily having some reproducibility problems). When you run then with breeze - make sure rebuild your breeze image `breeze ci-image build` and (as instructed in the error message by pytest) remove .pyc and __pycache__ files - you might have some old cached files in your environment that cause the problems.\r\n\r\nAlso you have updated instructions in https://github.com/apache/airflow/blob/main/contributing-docs/07_local_virtualenv.rst  how to setup your virtualenv with uv - it allows you to have a mostly reproducible environment to run your tests in,', 'created_at': datetime.datetime(2024, 11, 5, 8, 9, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2461707527, 'issue_id': 2498827383, 'author': 'eladkal', 'body': 'I think for this to actually work you will need to specify directly 1.20.0 in\r\nhttps://github.com/apache/airflow/blob/845a16057625127490ba8d655b3fe1114373ff7b/providers/src/airflow/providers/common/sql/provider.yaml#L27-L28\r\n\r\notherwise i am not sure how the CI can build the min version required by the other provider dependencies? but need to verify with @potiuk on this one', 'created_at': datetime.datetime(2024, 11, 7, 9, 16, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2461713594, 'issue_id': 2498827383, 'author': 'eladkal', 'body': 'Yeah CI not able to resolve this (make sense)\r\n\r\n```\r\n  1.633 Using Python 3.10.15 environment at /home/airflow/.local\r\n  3.543   × No solution found when resolving dependencies:\r\n  3.543   ╰─▶ Because only apache-airflow-providers-common-sql<1.20.0.dev0 is\r\n  3.543       available and apache-airflow-providers-openlineage==1.13.0.dev0 depends\r\n  3.543       on apache-airflow-providers-common-sql>=1.20.0.dev0, we can conclude\r\n  3.543       that apache-airflow-providers-openlineage==1.13.0.dev0 cannot be used.\r\n  3.543       And because only apache-airflow-providers-openlineage==1.13.0.dev0 is\r\n  3.543       available and you require apache-airflow-providers-openlineage, we can\r\n  3.543       conclude that your requirements are unsatisfiable.\r\n```\r\n  \r\n @Illumaria can you please add the version to the provider.yaml as I suggested?', 'created_at': datetime.datetime(2024, 11, 7, 9, 19, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2461724629, 'issue_id': 2498827383, 'author': 'Illumaria', 'body': ""> I think for this to actually work you will need to specify directly 1.20.0 in\r\n> \r\n> https://github.com/apache/airflow/blob/845a16057625127490ba8d655b3fe1114373ff7b/providers/src/airflow/providers/common/sql/provider.yaml#L27-L28\r\n> \r\n> otherwise i am not sure how the CI can build the min version required by the other provider dependencies? but need to verify with @potiuk on this one\r\n\r\nYeah but I thought I'm not supposed to touch that, as it says in https://github.com/apache/airflow/blob/845a16057625127490ba8d655b3fe1114373ff7b/providers/src/airflow/providers/common/sql/provider.yaml#L26"", 'created_at': datetime.datetime(2024, 11, 7, 9, 25, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2461740875, 'issue_id': 2498827383, 'author': 'eladkal', 'body': ""> Yeah but I thought I'm not supposed to touch that, as it says in\r\n> \r\n> https://github.com/apache/airflow/blob/845a16057625127490ba8d655b3fe1114373ff7b/providers/src/airflow/providers/common/sql/provider.yaml#L26\r\n\r\n\r\nI am the release manager so it's OK.\r\nThis comment is to warn people not to change the file without ack from release manager"", 'created_at': datetime.datetime(2024, 11, 7, 9, 33, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2461837818, 'issue_id': 2498827383, 'author': 'eladkal', 'body': ""failures :(\r\n```\r\n\r\n=========================== short test summary info ============================\r\nFAILED providers/tests/presto/hooks/test_presto.py::TestPrestoHook::test_split_sql_string - AssertionError: assert equals failed\r\n  [               [              \r\n    'SELECT 1',     'SELECT 1;', \r\n    'SELECT 2',     'SELECT 2',  \r\n  ]               ]\r\nFAILED providers/tests/trino/hooks/test_trino.py::TestTrinoHook::test_split_sql_string - AssertionError: assert equals failed\r\n  [               [              \r\n    'SELECT 1',     'SELECT 1;', \r\n    'SELECT 2',     'SELECT 2',  \r\n  ]               ]\r\n= 2 failed, 12280 passed, 9740 skipped, 2 xfailed, 5 warnings in 616.06s (0:10:16) =\r\n```"", 'created_at': datetime.datetime(2024, 11, 7, 10, 15, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462008490, 'issue_id': 2498827383, 'author': 'Illumaria', 'body': '@eladkal Yeah I see. :(\r\n\r\nDo I get it correctly that due to the following change\r\n[providers/src/airflow/providers/openlineage/sqlparser.py](https://github.com/apache/airflow/pull/41916/files#diff-7bbec90955ebce43e1a3996d34f3565ff3f3c3f72244c8a6a47bd35c5a890acb)\r\nI have to bump `openlineage` provider version as well?', 'created_at': datetime.datetime(2024, 11, 7, 11, 35, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462098495, 'issue_id': 2498827383, 'author': 'eladkal', 'body': ""cc @mobuchowski \r\nI am not sure how we set min openlineage provider version for trino provider? It isn't a dependency set in the provider.yaml\r\ncan you advise?\r\n~Could it be that trino is missing extra dependency of openlineage ? example from other providers~\r\n\r\nhttps://github.com/apache/airflow/blob/78ff0a99700125121b7f0647023503750f14a11b/providers/src/airflow/providers/dbt/cloud/provider.yaml#L66-L71"", 'created_at': datetime.datetime(2024, 11, 7, 12, 20, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462108746, 'issue_id': 2498827383, 'author': 'eladkal', 'body': '> I have to bump openlineage provider version as well?\r\n\r\nLets try. Add 1.14.0 entry in openlineage provider.yaml', 'created_at': datetime.datetime(2024, 11, 7, 12, 25, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462122086, 'issue_id': 2498827383, 'author': 'mobuchowski', 'body': ""@Illumaria I don't think the test failures are related to OL in any way, it's just you're calling method with default argument, in test do not pass the optional argument, and then it fails - because it uses default `False` argument. It does not pick up class member from `TrinoHook` or `PrestoHook` because nothing actually in the class `split_sql_string` refers to them."", 'created_at': datetime.datetime(2024, 11, 7, 12, 32, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462297510, 'issue_id': 2498827383, 'author': 'Illumaria', 'body': ""> @Illumaria I don't think the test failures are related to OL in any way, it's just you're calling method with default argument, in test do not pass the optional argument, and then it fails - because it uses default `False` argument. It does not pick up class member from `TrinoHook` or `PrestoHook` because nothing actually in the class `split_sql_string` refers to them.\r\n\r\nIn the test (let's consider https://github.com/apache/airflow/blob/e342c510dfdd639fc2a4611e9273fd5a052bd7ca/providers/tests/presto/hooks/test_presto.py as an example) `test_split_sql_string` uses `self.db_hook`, which is an instance of `UnitTestPrestoHook`, which is derived from `airflow.providers.presto.hooks.presto.PrestoHook`, which is, in turn, derived from `airflow.providers.common.sql.hooks.sql.DbApiHook`, which implements static `split_sql_string` method with a default optional parameter introduced in this Pull Request. So no need to pass it explicitly in the test."", 'created_at': datetime.datetime(2024, 11, 7, 13, 53, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462358691, 'issue_id': 2498827383, 'author': 'mobuchowski', 'body': ""@Illumaria sure - but that does not mean the `split_sql_string` itself method picks up the\r\n```\r\n    strip_semicolon = True\r\n```\r\nthat you've defined on the actual `PrestoHook` and `TrinoHook`.\r\n\r\nNow, you're using that in the `run` method and passing it there - but that's not what the test is testing."", 'created_at': datetime.datetime(2024, 11, 7, 14, 20, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462621525, 'issue_id': 2498827383, 'author': 'Illumaria', 'body': ""@mobuchowski OMG, you're right. I completely overlooked that. 🤦🏻\u200d♂️ Thanks!"", 'created_at': datetime.datetime(2024, 11, 7, 16, 5, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462647676, 'issue_id': 2498827383, 'author': 'mobuchowski', 'body': '🙌 \r\n\r\nNow, looking at rest of the tests, I think there is additional compatibility issue - you might need to bump required version of common.sql provider for all of the SQL providers', 'created_at': datetime.datetime(2024, 11, 7, 16, 15, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462792409, 'issue_id': 2498827383, 'author': 'eladkal', 'body': ""We still have errors in backcompat tests with Airflow 2.8\r\n```\r\n========================== short test summary info ============================\r\nFAILED providers/tests/amazon/aws/operators/test_athena.py::TestAthenaOperator::test_operator_openlineage_data - TypeError: split() got an unexpected keyword argument 'strip_semicolon'\r\nFAILED providers/tests/amazon/aws/operators/test_redshift_sql.py::TestRedshiftSQLOpenLineage::test_execute_openlineage_events[None-connection_extra0-cluster_identifier_from_extra.eu-north-1-True-database.public] - TypeError: split() got an unexpected keyword argument 'strip_semicolon'\r\nFAILED providers/tests/amazon/aws/operators/test_redshift_sql.py::TestRedshiftSQLOpenLineage::test_execute_openlineage_events[cluster_identifier_from_host.id.my_region.redshift.amazonaws.com-connection_extra1-cluster_identifier_from_host.my_region-True-database.public] - TypeError: split() got an unexpected keyword argument 'strip_semicolon'\r\nFAILED providers/tests/amazon/aws/operators/test_redshift_sql.py::TestRedshiftSQLOpenLineage::test_execute_openlineage_events[cluster_identifier_from_host.x.y-connection_extra2-cluster_identifier_from_extra.eu-north-1-True-database.public] - TypeError: split() got an unexpected keyword argument 'strip_semicolon'\r\nFAILED providers/tests/amazon/aws/operators/test_redshift_sql.py::TestRedshiftSQLOpenLineage::test_execute_openlineage_events[1.2.3.4-connection_extra3-1.2.3.4-True-database.public] - TypeError: split() got an unexpected keyword argument 'strip_semicolon'\r\nFAILED providers/tests/amazon/aws/operators/test_redshift_sql.py::TestRedshiftSQLOpenLineage::test_execute_openlineage_events[cluster_identifier_from_host.id.my_region.redshift.amazonaws.com-connection_extra4-cluster_identifier_from_host.my_region-False-public] - TypeError: split() got an unexpected keyword argument 'strip_semicolon'\r\n====== 6 failed, 3087 passed, 52 skipped, 1 warning in 373.63s (0:06:13) =======\r\n```"", 'created_at': datetime.datetime(2024, 11, 7, 17, 10, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462793880, 'issue_id': 2498827383, 'author': 'eladkal', 'body': '> 🙌\r\n> \r\n> Now, looking at rest of the tests, I think there is additional compatibility issue - you might need to bump required version of common.sql provider for all of the SQL providers\r\n\r\nYeah lets bump for all providers that are using it', 'created_at': datetime.datetime(2024, 11, 7, 17, 11, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2462967316, 'issue_id': 2498827383, 'author': 'eladkal', 'body': 'Make sure you also fix the test packages part :)\r\nhttps://github.com/apache/airflow/actions/runs/11728117278/job/32673334032?pr=41916#step:7:769', 'created_at': datetime.datetime(2024, 11, 7, 18, 40, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2464155703, 'issue_id': 2498827383, 'author': 'eladkal', 'body': '@Illumaria i am hoping to cut a release today. Let me know if you have time to finish this one', 'created_at': datetime.datetime(2024, 11, 8, 8, 52, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2464175373, 'issue_id': 2498827383, 'author': 'Illumaria', 'body': ""@eladkal I'm trying. :("", 'created_at': datetime.datetime(2024, 11, 8, 9, 2, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2464240983, 'issue_id': 2498827383, 'author': 'Illumaria', 'body': ""Ugh... I don't get it. The failing test reports aren't clear on how to fix them. =_="", 'created_at': datetime.datetime(2024, 11, 8, 9, 36, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2464300955, 'issue_id': 2498827383, 'author': 'eladkal', 'body': 'I triggered a full rebuild of the test suite lets see how it goes', 'created_at': datetime.datetime(2024, 11, 8, 10, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2464304788, 'issue_id': 2498827383, 'author': 'eladkal', 'body': ""> Ugh... I don't get it. The failing test reports aren't clear on how to fix them. =_=\r\n\r\nThe issues are dependency conflict around standard provider, airflow 3 and sql provider in Python 3.9\r\nSo possibly this will be resolved in https://github.com/apache/airflow/pull/43556"", 'created_at': datetime.datetime(2024, 11, 8, 10, 8, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2464552080, 'issue_id': 2498827383, 'author': 'eladkal', 'body': '```\r\nRequirement already satisfied: apache-airflow-providers-sqlite in /opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages (from apache-airflow==3.0.0.dev0) (3.9.0)\r\nINFO: pip is looking at multiple versions of apache-airflow-providers-standard to determine which version is compatible with other requirements. This could take a while.\r\nERROR: Cannot install apache-airflow-providers-standard==0.0.1 and apache-airflow==3.0.0.dev0 because these package versions have conflicting dependencies.\r\n\r\nThe conflict is caused by:\r\n    apache-airflow 3.0.0.dev0 depends on apache-airflow-providers-common-sql\r\n    apache-airflow-providers-standard 0.0.1 depends on apache-airflow-providers-common-sql>=1.20.0\r\n```\r\n\r\n@potiuk should we put this one on hold till #43556 is resolved?', 'created_at': datetime.datetime(2024, 11, 8, 11, 55, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2465923315, 'issue_id': 2498827383, 'author': 'eladkal', 'body': '@Illumaria Please add `common-sql` to `CHICKEN_EGG_PROVIDERS`. That should solve the issue.\r\nhttps://github.com/apache/airflow/blob/da502427b7204fac5f34ecf138aada37530258c2/dev/breeze/src/airflow_breeze/global_constants.py#L570', 'created_at': datetime.datetime(2024, 11, 9, 0, 8, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2466625455, 'issue_id': 2498827383, 'author': 'eladkal', 'body': '> @Illumaria Please add `common-sql` to `CHICKEN_EGG_PROVIDERS`. That should solve the issue.\r\n> \r\n> https://github.com/apache/airflow/blob/da502427b7204fac5f34ecf138aada37530258c2/dev/breeze/src/airflow_breeze/global_constants.py#L570\r\n\r\nAdded it in https://github.com/apache/airflow/pull/41916/commits/e36974ae7da7f3f5102c6a11c6febf63a6ed1475 lets hope it  will give us green build', 'created_at': datetime.datetime(2024, 11, 10, 7, 43, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2470029862, 'issue_id': 2498827383, 'author': 'potiuk', 'body': 'Rebased after merging #43913', 'created_at': datetime.datetime(2024, 11, 12, 9, 31, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2470647614, 'issue_id': 2498827383, 'author': 'eladkal', 'body': ""~OK @Illumaria I think we sort out all the issues related to breeze testing. We now see failures which seems related to the PR itself for the back compat tests with Airflow 2.8 can you take a look?~\r\n\r\n```\r\n=========================== short test summary info ============================\r\nFAILED providers/tests/google/cloud/openlineage/test_mixins.py::TestBigQueryOpenLineageMixin::test_bq_job_information - TypeError: split() got an unexpected keyword argument 'strip_semicolon'\r\nFAILED providers/tests/google/cloud/openlineage/test_mixins.py::TestBigQueryOpenLineageMixin::test_bq_script_job_information - TypeError: split() got an unexpected keyword argument 'strip_semicolon'\r\nFAILED providers/tests/google/cloud/operators/test_bigquery.py::TestBigQueryInsertJobOperator::test_execute_openlineage_events - TypeError: split() got an unexpected keyword argument 'strip_semicolon'\r\nFAILED providers/tests/google/cloud/operators/test_bigquery.py::TestBigQueryInsertJobOperator::test_execute_fails_openlineage_events - TypeError: split() got an unexpected keyword argument 'strip_semicolon'\r\n====== 4 failed, 4199 passed, 79 skipped, 1 warning in 261.82s (0:04:21) =======\r\n```\r\n\r\nThe above test failures are due to using `sqlparser<0.5` so our lower dependency tests have successfully found that we need to bump `sqlparser` to use the `strip_semicolon` parameter."", 'created_at': datetime.datetime(2024, 11, 12, 14, 13, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473415675, 'issue_id': 2498827383, 'author': 'Illumaria', 'body': 'Uhm... Is this a network issue on GitHub side? O_o\r\nhttps://github.com/apache/airflow/actions/runs/11816640286/job/32920825020?pr=41916#step:2:13\r\n\r\n```\r\nRun docker run -v ""${GITHUB_WORKSPACE}:/workspace"" -u 0:0 bash -c ""rm -rf /workspace/*""\r\nUnable to find image \'bash:latest\' locally\r\ndocker: Error response from daemon: Head ""https://registry-1.docker.io/v2/library/bash/manifests/latest"": Get ""https://auth.docker.io/token?account=githubactions&scope=repository%3Alibrary%2Fbash%3Apull&service=registry.docker.io"": net/http: request canceled (Client.Timeout exceeded while awaiting headers).\r\nSee \'docker run --help\'.\r\nError: Process completed with exit code 125.\r\n```', 'created_at': datetime.datetime(2024, 11, 13, 12, 2, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473438443, 'issue_id': 2498827383, 'author': 'potiuk', 'body': '> Uhm... Is this a network issue on GitHub side? O_o\r\n\r\nYeah.... Happens', 'created_at': datetime.datetime(2024, 11, 13, 12, 12, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473439866, 'issue_id': 2498827383, 'author': 'potiuk', 'body': 'We (committers) can re-start that one failed job later after this PR completes all other checks.', 'created_at': datetime.datetime(2024, 11, 13, 12, 13, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473602893, 'issue_id': 2498827383, 'author': 'Illumaria', 'body': ""@potiuk Could you please re-run the failed test job? I don't think I have the rights."", 'created_at': datetime.datetime(2024, 11, 13, 13, 20, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473669115, 'issue_id': 2498827383, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 11, 13, 13, 46, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473669594, 'issue_id': 2498827383, 'author': 'potiuk', 'body': 'Wooooohooo! (CC: @eladkal )', 'created_at': datetime.datetime(2024, 11, 13, 13, 47, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473671326, 'issue_id': 2498827383, 'author': 'potiuk', 'body': 'Thanks @Illumaria for the patience. It was not an easy one and it uncovered a number of edge-cases in our CI that we had to fix :)\r\n\r\n\r\n#protm', 'created_at': datetime.datetime(2024, 11, 13, 13, 47, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2473868965, 'issue_id': 2498827383, 'author': 'eladkal', 'body': 'Great work @Illumaria 👏🏻👏🏻', 'created_at': datetime.datetime(2024, 11, 13, 15, 1, 18, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-08-31 12:40:56 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-09-01 12:12:55 UTC): You will have to:

1) bump common.sql minor version (new feature) in airfow/providers/common/sql/provider.yaml
2) In all modified providers you will have to update dependency in provider yaml to be:  `common-sql >= THE(_NEW_COMMON_SQL_VERSION`

Illumaria (Issue Creator) on (2024-09-03 18:55:04 UTC): Whoops... Sorry. 🙏🏻

eladkal on (2024-09-06 15:13:28 UTC): @Illumaria can you address the needed changes? I'm hoping to include this PR in the next release

eladkal on (2024-09-06 15:16:12 UTC): needs rebase and resolve conflicts

Illumaria (Issue Creator) on (2024-09-06 15:21:46 UTC): @eladkal Sure, I’ll do it by the end of the weekend.

Illumaria (Issue Creator) on (2024-09-07 17:12:41 UTC): @eladkal Hi! Could you please help me understand what I should do to fix the failing tests? :(

potiuk on (2024-09-09 14:15:57 UTC): There are regular unit tests failing and they should be fixed. For compatibility tests - when they fail, they point you with the link to the documentation that desribes possible approaches and shows some examples how to deal with compatibility tests, and there are a number of examples already implemented in the code:

https://github.com/apache/airflow/blob/main/contributing-docs/testing/unit_tests.rst#compatibility-provider-unit-tests-against-older-airflow-releases

eladkal on (2024-09-11 06:10:20 UTC): `
=========================== short test summary info ============================
FAILED tests/providers/google/cloud/openlineage/test_mixins.py::TestBigQueryOpenLineageMixin::test_bq_job_information - TypeError: split() got an unexpected keyword argument 'strip_semicolon'
FAILED tests/providers/google/cloud/openlineage/test_mixins.py::TestBigQueryOpenLineageMixin::test_bq_script_job_information - TypeError: split() got an unexpected keyword argument 'strip_semicolon'
FAILED tests/providers/google/cloud/operators/test_bigquery.py::TestBigQueryInsertJobOperator::test_execute_openlineage_events - TypeError: split() got an unexpected keyword argument 'strip_semicolon'
FAILED tests/providers/google/cloud/operators/test_bigquery.py::TestBigQueryInsertJobOperator::test_execute_fails_openlineage_events - TypeError: split() got an unexpected keyword argument 'strip_semicolon'
============ 4 failed, 4159 passed, 63 skipped in 271.27s (0:04:31) ============
`

eladkal on (2024-09-16 21:01:16 UTC): @Illumaria were you able to work on fixing the test?

Illumaria (Issue Creator) on (2024-09-18 06:24:00 UTC): No, not yet. :( I’m away from home now, will be back on September 30th.

Good news is I kinda need these changes for my work, so I won’t leave this request unfinished.

eladkal on (2024-10-14 14:29:44 UTC): OK let me know when ready

eladkal on (2024-11-04 07:13:57 UTC): Tests are failing :(

Illumaria (Issue Creator) on (2024-11-05 07:49:53 UTC): Thank you, I can clearly see that. :/ Is there any way to run those failing tests locally? So far I've tried
```
breeze --integration all
```
and it's all green, and
```
breeze testing non-db-tests
```
for which I get these errors (they are also very confusing):
<img width=""857"" alt=""image"" src=""https://github.com/user-attachments/assets/03074c6c-1990-4563-8133-d2185511a4ec"">

potiuk on (2024-11-05 08:09:28 UTC): Just follow the testing documentation and regular way how you run your tests (using IDE integration or command line pytest): 

https://github.com/apache/airflow/blob/main/contributing-docs/testing/unit_tests.rst

You can run the tests individually with pytest using local venv or enter the breeeze shell and run it from there.

I highly recommend to rebase to latest `main` (we are doing a number of architectural changes that make our tests temporarily having some reproducibility problems). When you run then with breeze - make sure rebuild your breeze image `breeze ci-image build` and (as instructed in the error message by pytest) remove .pyc and __pycache__ files - you might have some old cached files in your environment that cause the problems.

Also you have updated instructions in https://github.com/apache/airflow/blob/main/contributing-docs/07_local_virtualenv.rst  how to setup your virtualenv with uv - it allows you to have a mostly reproducible environment to run your tests in,

eladkal on (2024-11-07 09:16:48 UTC): I think for this to actually work you will need to specify directly 1.20.0 in
https://github.com/apache/airflow/blob/845a16057625127490ba8d655b3fe1114373ff7b/providers/src/airflow/providers/common/sql/provider.yaml#L27-L28

otherwise i am not sure how the CI can build the min version required by the other provider dependencies? but need to verify with @potiuk on this one

eladkal on (2024-11-07 09:19:47 UTC): Yeah CI not able to resolve this (make sense)

```
  1.633 Using Python 3.10.15 environment at /home/airflow/.local
  3.543   × No solution found when resolving dependencies:
  3.543   ╰─▶ Because only apache-airflow-providers-common-sql<1.20.0.dev0 is
  3.543       available and apache-airflow-providers-openlineage==1.13.0.dev0 depends
  3.543       on apache-airflow-providers-common-sql>=1.20.0.dev0, we can conclude
  3.543       that apache-airflow-providers-openlineage==1.13.0.dev0 cannot be used.
  3.543       And because only apache-airflow-providers-openlineage==1.13.0.dev0 is
  3.543       available and you require apache-airflow-providers-openlineage, we can
  3.543       conclude that your requirements are unsatisfiable.
```
  
 @Illumaria can you please add the version to the provider.yaml as I suggested?

Illumaria (Issue Creator) on (2024-11-07 09:25:21 UTC): Yeah but I thought I'm not supposed to touch that, as it says in https://github.com/apache/airflow/blob/845a16057625127490ba8d655b3fe1114373ff7b/providers/src/airflow/providers/common/sql/provider.yaml#L26

eladkal on (2024-11-07 09:33:10 UTC): I am the release manager so it's OK.
This comment is to warn people not to change the file without ack from release manager

eladkal on (2024-11-07 10:15:25 UTC): failures :(
```

=========================== short test summary info ============================
FAILED providers/tests/presto/hooks/test_presto.py::TestPrestoHook::test_split_sql_string - AssertionError: assert equals failed
  [               [              
    'SELECT 1',     'SELECT 1;', 
    'SELECT 2',     'SELECT 2',  
  ]               ]
FAILED providers/tests/trino/hooks/test_trino.py::TestTrinoHook::test_split_sql_string - AssertionError: assert equals failed
  [               [              
    'SELECT 1',     'SELECT 1;', 
    'SELECT 2',     'SELECT 2',  
  ]               ]
= 2 failed, 12280 passed, 9740 skipped, 2 xfailed, 5 warnings in 616.06s (0:10:16) =
```

Illumaria (Issue Creator) on (2024-11-07 11:35:20 UTC): @eladkal Yeah I see. :(

Do I get it correctly that due to the following change
[providers/src/airflow/providers/openlineage/sqlparser.py](https://github.com/apache/airflow/pull/41916/files#diff-7bbec90955ebce43e1a3996d34f3565ff3f3c3f72244c8a6a47bd35c5a890acb)
I have to bump `openlineage` provider version as well?

eladkal on (2024-11-07 12:20:48 UTC): cc @mobuchowski 
I am not sure how we set min openlineage provider version for trino provider? It isn't a dependency set in the provider.yaml
can you advise?
~Could it be that trino is missing extra dependency of openlineage ? example from other providers~

https://github.com/apache/airflow/blob/78ff0a99700125121b7f0647023503750f14a11b/providers/src/airflow/providers/dbt/cloud/provider.yaml#L66-L71

eladkal on (2024-11-07 12:25:49 UTC): Lets try. Add 1.14.0 entry in openlineage provider.yaml

mobuchowski on (2024-11-07 12:32:18 UTC): @Illumaria I don't think the test failures are related to OL in any way, it's just you're calling method with default argument, in test do not pass the optional argument, and then it fails - because it uses default `False` argument. It does not pick up class member from `TrinoHook` or `PrestoHook` because nothing actually in the class `split_sql_string` refers to them.

Illumaria (Issue Creator) on (2024-11-07 13:53:41 UTC): In the test (let's consider https://github.com/apache/airflow/blob/e342c510dfdd639fc2a4611e9273fd5a052bd7ca/providers/tests/presto/hooks/test_presto.py as an example) `test_split_sql_string` uses `self.db_hook`, which is an instance of `UnitTestPrestoHook`, which is derived from `airflow.providers.presto.hooks.presto.PrestoHook`, which is, in turn, derived from `airflow.providers.common.sql.hooks.sql.DbApiHook`, which implements static `split_sql_string` method with a default optional parameter introduced in this Pull Request. So no need to pass it explicitly in the test.

mobuchowski on (2024-11-07 14:20:15 UTC): @Illumaria sure - but that does not mean the `split_sql_string` itself method picks up the
```
    strip_semicolon = True
```
that you've defined on the actual `PrestoHook` and `TrinoHook`.

Now, you're using that in the `run` method and passing it there - but that's not what the test is testing.

Illumaria (Issue Creator) on (2024-11-07 16:05:31 UTC): @mobuchowski OMG, you're right. I completely overlooked that. 🤦🏻‍♂️ Thanks!

mobuchowski on (2024-11-07 16:15:55 UTC): 🙌 

Now, looking at rest of the tests, I think there is additional compatibility issue - you might need to bump required version of common.sql provider for all of the SQL providers

eladkal on (2024-11-07 17:10:34 UTC): We still have errors in backcompat tests with Airflow 2.8
```
========================== short test summary info ============================
FAILED providers/tests/amazon/aws/operators/test_athena.py::TestAthenaOperator::test_operator_openlineage_data - TypeError: split() got an unexpected keyword argument 'strip_semicolon'
FAILED providers/tests/amazon/aws/operators/test_redshift_sql.py::TestRedshiftSQLOpenLineage::test_execute_openlineage_events[None-connection_extra0-cluster_identifier_from_extra.eu-north-1-True-database.public] - TypeError: split() got an unexpected keyword argument 'strip_semicolon'
FAILED providers/tests/amazon/aws/operators/test_redshift_sql.py::TestRedshiftSQLOpenLineage::test_execute_openlineage_events[cluster_identifier_from_host.id.my_region.redshift.amazonaws.com-connection_extra1-cluster_identifier_from_host.my_region-True-database.public] - TypeError: split() got an unexpected keyword argument 'strip_semicolon'
FAILED providers/tests/amazon/aws/operators/test_redshift_sql.py::TestRedshiftSQLOpenLineage::test_execute_openlineage_events[cluster_identifier_from_host.x.y-connection_extra2-cluster_identifier_from_extra.eu-north-1-True-database.public] - TypeError: split() got an unexpected keyword argument 'strip_semicolon'
FAILED providers/tests/amazon/aws/operators/test_redshift_sql.py::TestRedshiftSQLOpenLineage::test_execute_openlineage_events[1.2.3.4-connection_extra3-1.2.3.4-True-database.public] - TypeError: split() got an unexpected keyword argument 'strip_semicolon'
FAILED providers/tests/amazon/aws/operators/test_redshift_sql.py::TestRedshiftSQLOpenLineage::test_execute_openlineage_events[cluster_identifier_from_host.id.my_region.redshift.amazonaws.com-connection_extra4-cluster_identifier_from_host.my_region-False-public] - TypeError: split() got an unexpected keyword argument 'strip_semicolon'
====== 6 failed, 3087 passed, 52 skipped, 1 warning in 373.63s (0:06:13) =======
```

eladkal on (2024-11-07 17:11:19 UTC): Yeah lets bump for all providers that are using it

eladkal on (2024-11-07 18:40:57 UTC): Make sure you also fix the test packages part :)
https://github.com/apache/airflow/actions/runs/11728117278/job/32673334032?pr=41916#step:7:769

eladkal on (2024-11-08 08:52:05 UTC): @Illumaria i am hoping to cut a release today. Let me know if you have time to finish this one

Illumaria (Issue Creator) on (2024-11-08 09:02:45 UTC): @eladkal I'm trying. :(

Illumaria (Issue Creator) on (2024-11-08 09:36:47 UTC): Ugh... I don't get it. The failing test reports aren't clear on how to fix them. =_=

eladkal on (2024-11-08 10:07:00 UTC): I triggered a full rebuild of the test suite lets see how it goes

eladkal on (2024-11-08 10:08:49 UTC): The issues are dependency conflict around standard provider, airflow 3 and sql provider in Python 3.9
So possibly this will be resolved in https://github.com/apache/airflow/pull/43556

eladkal on (2024-11-08 11:55:57 UTC): ```
Requirement already satisfied: apache-airflow-providers-sqlite in /opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages (from apache-airflow==3.0.0.dev0) (3.9.0)
INFO: pip is looking at multiple versions of apache-airflow-providers-standard to determine which version is compatible with other requirements. This could take a while.
ERROR: Cannot install apache-airflow-providers-standard==0.0.1 and apache-airflow==3.0.0.dev0 because these package versions have conflicting dependencies.

The conflict is caused by:
    apache-airflow 3.0.0.dev0 depends on apache-airflow-providers-common-sql
    apache-airflow-providers-standard 0.0.1 depends on apache-airflow-providers-common-sql>=1.20.0
```

@potiuk should we put this one on hold till #43556 is resolved?

eladkal on (2024-11-09 00:08:15 UTC): @Illumaria Please add `common-sql` to `CHICKEN_EGG_PROVIDERS`. That should solve the issue.
https://github.com/apache/airflow/blob/da502427b7204fac5f34ecf138aada37530258c2/dev/breeze/src/airflow_breeze/global_constants.py#L570

eladkal on (2024-11-10 07:43:52 UTC): Added it in https://github.com/apache/airflow/pull/41916/commits/e36974ae7da7f3f5102c6a11c6febf63a6ed1475 lets hope it  will give us green build

potiuk on (2024-11-12 09:31:06 UTC): Rebased after merging #43913

eladkal on (2024-11-12 14:13:39 UTC): ~OK @Illumaria I think we sort out all the issues related to breeze testing. We now see failures which seems related to the PR itself for the back compat tests with Airflow 2.8 can you take a look?~

```
=========================== short test summary info ============================
FAILED providers/tests/google/cloud/openlineage/test_mixins.py::TestBigQueryOpenLineageMixin::test_bq_job_information - TypeError: split() got an unexpected keyword argument 'strip_semicolon'
FAILED providers/tests/google/cloud/openlineage/test_mixins.py::TestBigQueryOpenLineageMixin::test_bq_script_job_information - TypeError: split() got an unexpected keyword argument 'strip_semicolon'
FAILED providers/tests/google/cloud/operators/test_bigquery.py::TestBigQueryInsertJobOperator::test_execute_openlineage_events - TypeError: split() got an unexpected keyword argument 'strip_semicolon'
FAILED providers/tests/google/cloud/operators/test_bigquery.py::TestBigQueryInsertJobOperator::test_execute_fails_openlineage_events - TypeError: split() got an unexpected keyword argument 'strip_semicolon'
====== 4 failed, 4199 passed, 79 skipped, 1 warning in 261.82s (0:04:21) =======
```

The above test failures are due to using `sqlparser<0.5` so our lower dependency tests have successfully found that we need to bump `sqlparser` to use the `strip_semicolon` parameter.

Illumaria (Issue Creator) on (2024-11-13 12:02:37 UTC): Uhm... Is this a network issue on GitHub side? O_o
https://github.com/apache/airflow/actions/runs/11816640286/job/32920825020?pr=41916#step:2:13

```
Run docker run -v ""${GITHUB_WORKSPACE}:/workspace"" -u 0:0 bash -c ""rm -rf /workspace/*""
Unable to find image 'bash:latest' locally
docker: Error response from daemon: Head ""https://registry-1.docker.io/v2/library/bash/manifests/latest"": Get ""https://auth.docker.io/token?account=githubactions&scope=repository%3Alibrary%2Fbash%3Apull&service=registry.docker.io"": net/http: request canceled (Client.Timeout exceeded while awaiting headers).
See 'docker run --help'.
Error: Process completed with exit code 125.
```

potiuk on (2024-11-13 12:12:21 UTC): Yeah.... Happens

potiuk on (2024-11-13 12:13:01 UTC): We (committers) can re-start that one failed job later after this PR completes all other checks.

Illumaria (Issue Creator) on (2024-11-13 13:20:01 UTC): @potiuk Could you please re-run the failed test job? I don't think I have the rights.

boring-cyborg[bot] on (2024-11-13 13:46:49 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

potiuk on (2024-11-13 13:47:01 UTC): Wooooohooo! (CC: @eladkal )

potiuk on (2024-11-13 13:47:48 UTC): Thanks @Illumaria for the patience. It was not an easy one and it uncovered a number of edge-cases in our CI that we had to fix :)


#protm

eladkal on (2024-11-13 15:01:18 UTC): Great work @Illumaria 👏🏻👏🏻

"
2498735497,pull_request,closed,,BugFix(Operators.rst): Update operators.rst on adding SQLExecuteQueryOperator,"Added SQLExecuteQueryOperator to the list of Operators as the PostgresOperator is deprecated.

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",DilanJT,2024-08-31 08:48:06+00:00,[],2024-10-21 18:20:04+00:00,2024-10-21 18:20:04+00:00,https://github.com/apache/airflow/pull/41914,"[('stale', 'Stale PRs per the .github/workflows/stale.yml policy file'), ('kind:documentation', '')]","[{'comment_id': 2322832033, 'issue_id': 2498735497, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 8, 31, 8, 48, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2415379603, 'issue_id': 2498735497, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 10, 16, 0, 15, 9, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-08-31 08:48:10 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

github-actions[bot] on (2024-10-16 00:15:09 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2498694588,pull_request,closed,,Removed deprecated method requires_access from module airflow.api_connexion.security,Removed deprecated method requires_access from module airflow.api_connexion.security,dirrao,2024-08-31 07:04:55+00:00,['dirrao'],2024-08-31 23:18:50+00:00,2024-08-31 23:18:50+00:00,https://github.com/apache/airflow/pull/41910,"[('area:API', ""Airflow's REST/HTTP API""), ('airflow3.0:candidate', 'Potential candidates for Airflow 3.0'), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes')]",[],
2498685500,pull_request,closed,,Removed deprecation warning catching in test_db_cleanup,Removed deprecation warning catching in test_db_cleanup,dirrao,2024-08-31 06:46:14+00:00,['dirrao'],2024-09-01 01:28:13+00:00,2024-09-01 01:28:13+00:00,https://github.com/apache/airflow/pull/41909,"[('area:MetaDB', 'Meta Database related issues.'), ('upgrade-check', 'upgrade-check CLI')]",[],
2498327334,pull_request,closed,,Add CountTokensOperator for Google Generative AI CountTokensAPI,"The [CountTokens API](https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/count-tokens?hl=en) calculates the number of input tokens before sending a request to the Gemini API.
Use the CountTokens API to prevent requests from exceeding the model context window, and estimate potential costs based on billable characters.

Can be used as part of a larger LLM-based DAG:

Training Dataset Lands --> GCSObjectExistenceSensor --> [SupervisedFineTuningTrainOperator](https://github.com/apache/airflow/blob/0f5c25b416f23c6fdc2ab20cba6a147eccaabe2d/airflow/providers/google/cloud/operators/vertex_ai/generative_model.py#L577) --> Use CountTokensOperator as a pre-check to ensure prompts will run successfully and within budget --> [GenerativeModelGenerateContentOperator](https://github.com/apache/airflow/blob/0f5c25b416f23c6fdc2ab20cba6a147eccaabe2d/airflow/providers/google/cloud/operators/vertex_ai/generative_model.py#L502)  --> RapidEvaluation API Operators (to-do)",CYarros10,2024-08-30 22:34:24+00:00,[],2024-09-01 19:13:10+00:00,2024-09-01 19:13:09+00:00,https://github.com/apache/airflow/pull/41908,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('area:system-tests', ''), ('kind:documentation', '')]","[{'comment_id': 2323104715, 'issue_id': 2498327334, 'author': 'potiuk', 'body': 'Needs rebase. Also cc: @VladaZakharova', 'created_at': datetime.datetime(2024, 9, 1, 1, 28, 46, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-01 01:28:46 UTC): Needs rebase. Also cc: @VladaZakharova

"
2498206959,pull_request,closed,,Update release command for Airflow 2,"For airflow 2, we create a branch out of v2-10-test and sync that branch with v2-10-stable to make a release.

",ephraimbuddy,2024-08-30 21:39:40+00:00,[],2024-09-01 15:32:01+00:00,2024-09-01 07:10:01+00:00,https://github.com/apache/airflow/pull/41907,"[('area:dev-tools', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2498094932,pull_request,closed,,Backcompat for non inheriting executors,"Some executors don't inherit from BaseExecutor.  2.10 change assumes they do.

This fixes that.

Resolves https://github.com/apache/airflow/issues/41891",dstandish,2024-08-30 20:06:34+00:00,[],2024-09-02 03:15:25+00:00,2024-09-01 12:35:47+00:00,https://github.com/apache/airflow/pull/41906,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:dev-tools', ''), ('area:API', ""Airflow's REST/HTTP API""), ('area:production-image', 'Production image improvements and fixes'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:Executors-core', 'LocalExecutor & SequentialExecutor'), ('all versions', 'If set, the CI build will be forced to use all versions of Python/K8S/DBs')]","[{'comment_id': 2322262721, 'issue_id': 2498094932, 'author': 'dstandish', 'body': 'sorry -- had wrong base; fixed now.', 'created_at': datetime.datetime(2024, 8, 30, 20, 9, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322278340, 'issue_id': 2498094932, 'author': 'potiuk', 'body': 'I think we have the rule that we generally implement such fixes in main and backport them to v2-*test - this is the first exception so far. Not sure if justified.', 'created_at': datetime.datetime(2024, 8, 30, 20, 19, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322279507, 'issue_id': 2498094932, 'author': 'potiuk', 'body': 'cc: @utkarsharma2 @ephraimbuddy @kaxil @eladkal  -> WDYT? ^^', 'created_at': datetime.datetime(2024, 8, 30, 20, 20, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322280551, 'issue_id': 2498094932, 'author': 'dstandish', 'body': ""> I think we have the rule that we generally implement such fixes in main and backport them to v2-*test - this is the first exception so far. Not sure if justified.\r\n\r\nI can't speak to that necessarily but this is the type of backcompat thing that I'd want to chop in 3.0 anyway.  If you think it's better, we could add to main, then remove it with changelog.  But it's _such_ a small thing!"", 'created_at': datetime.datetime(2024, 8, 30, 20, 21, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322286436, 'issue_id': 2498094932, 'author': 'potiuk', 'body': '> > I think we have the rule that we generally implement such fixes in main and backport them to v2-*test - this is the first exception so far. Not sure if justified.\r\n> \r\n> I can\'t speak to that necessarily but this is the type of backcompat thing that I\'d want to chop in 3.0 anyway. If you think it\'s better, we could add to main, then remove it with changelog. But it\'s _such_ a small thing!\r\n\r\nWe discussed it before and that\'s the first one that is not cherry-picked. I am raising it - beause It might have some side-effects that might impact relase manager\'s work. For example there is the tooling that check milestone vs. cherry-picked tasks and it might simply give wrong misleading results. I raised this question before as ""academic"" question - and we discussed at the last dev call that we will discuss it when we see the first case of it. Which is .... now.', 'created_at': datetime.datetime(2024, 8, 30, 20, 25, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322289223, 'issue_id': 2498094932, 'author': 'kaxil', 'body': '@dstandish Does this not affect main too?', 'created_at': datetime.datetime(2024, 8, 30, 20, 27, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322295588, 'issue_id': 2498094932, 'author': 'potiuk', 'body': '> @dstandish Does this not affect main too?\r\n\r\nMy answer: theorethically it does, if somoene uses currently released cncf.kubernetes provider and CeleryKubernetesExecutor or LocalKubernetesExecutor in Airflow 3.\r\n\r\nNow - we do not know yet which min-versions of providers will be usable for Airflow 3 (we could probably cut-off providers to support Airlfow 3 - or we could remove support for the ""old hybrid"" executors in Airlfow 3 - in which case that bug does not affect Airflow 3. I think it\'s quite likely one of these will happen - so likely yes, main (aka. Airlfow 3) is not affected.', 'created_at': datetime.datetime(2024, 8, 30, 20, 33, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322303802, 'issue_id': 2498094932, 'author': 'dstandish', 'body': '> or we could remove support for the ""old hybrid"" executors in Airlfow 3\r\n\r\nyeah i feel removing the hybrid executors for airflow 3 is an obvious choice.  not sure exactly how that is enforced since it\'s in providers...\r\n\r\nprobably we should just remove them as soon as min airflow version for the provider has airflow version that has hybrid execution.  when was that released, 2.10?', 'created_at': datetime.datetime(2024, 8, 30, 20, 38, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322319906, 'issue_id': 2498094932, 'author': 'kaxil', 'body': '>My answer: theorethically it does, if somoene uses currently released cncf.kubernetes provider and CeleryKubernetesExecutor or LocalKubernetesExecutor in Airflow 3.\r\n\r\nIf it affects ""main"" currently, then yeah I think we should fix and merge in main too. And then cherry-pick / separate PR (this can be that PR and you can create one for main too)', 'created_at': datetime.datetime(2024, 8, 30, 20, 50, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322326705, 'issue_id': 2498094932, 'author': 'dstandish', 'body': '> If it affects ""main"" currently, then yeah I think we should fix and merge in main too. And then cherry-pick / separate PR (this can be that PR and you can create one for main too)\r\n\r\nI guess jarek is saying that ""theoretically"" it affects main but practicall speaking we will drop support for hybrid executors / executors-that-don\'t-inherit-from-base-executor in 3.0 and / or somehow indicate that providers are not assumed to be future compat with 3.0.\r\n\r\nanyway, no strong feeling on it.  just ultimately do want this backcompat in 3.0 -- somehow or another.', 'created_at': datetime.datetime(2024, 8, 30, 20, 57, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322334735, 'issue_id': 2498094932, 'author': 'potiuk', 'body': '>anyway, no strong feeling on it. just ultimately do want this backcompat in 3.0 -- somehow or another.\r\n\r\nYep. then I think we should add it to main and back-port even if it is ""such a small change"" - I guess in this case ""let\'s do all things the same way"" trumps ""but this one is so small and likely to be not needed"".', 'created_at': datetime.datetime(2024, 8, 30, 21, 4, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322341101, 'issue_id': 2498094932, 'author': 'potiuk', 'body': 'I think individual\'s convenience in this case is less important that ""overall consistency"" - and we have to pay the overhead price for it. We already do that by having to run Pull requests for all backports rather than individual cherry-picks as it was in previous v2-* which means that the committers authoring/merging changes have more work to do at the expense of less work by the release manager. I guess that\'s the sacrifice we all should make now.\r\n\r\nAnd I am not sarcastic - I rigorously follow those rules, it\'s just the price to pay and we should all be aware why we are paying it and we should share the burden.', 'created_at': datetime.datetime(2024, 8, 30, 21, 9, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322361028, 'issue_id': 2498094932, 'author': 'kaxil', 'body': '>I think individual\'s convenience in this case is less important that ""overall consistency"" - and we have to pay the overhead price for it. We already do that by having to run Pull requests for all backports rather than individual cherry-picks as it was in previous v2-* which means that the committers authoring/merging changes have more work to do at the expense of less work by the release manager. I guess that\'s the sacrifice we all should make now.\r\n\r\nAgreed. At the point of the PR being open, if it affects main too, we should ideally fix it in main even if a future change will remove it.', 'created_at': datetime.datetime(2024, 8, 30, 21, 27, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323071677, 'issue_id': 2498094932, 'author': 'potiuk', 'body': 'Would be great to get that one for 2.10.1 @ephraimbuddy @utkarsharma2', 'created_at': datetime.datetime(2024, 8, 31, 23, 38, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323073018, 'issue_id': 2498094932, 'author': 'potiuk', 'body': '(Still - this one needs main + backport as discussed before).', 'created_at': datetime.datetime(2024, 8, 31, 23, 42, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323191430, 'issue_id': 2498094932, 'author': 'utkarsharma2', 'body': ""> Would be great to get that one for 2.10.1 @ephraimbuddy @utkarsharma2\r\n\r\nSure @potiuk I'll include this for 2.10.1"", 'created_at': datetime.datetime(2024, 9, 1, 6, 30, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323262189, 'issue_id': 2498094932, 'author': 'potiuk', 'body': 'Something strange happend when building images -> closing/reopening to rebuild', 'created_at': datetime.datetime(2024, 9, 1, 9, 52, 42, tzinfo=datetime.timezone.utc)}]","dstandish (Issue Creator) on (2024-08-30 20:09:16 UTC): sorry -- had wrong base; fixed now.

potiuk on (2024-08-30 20:19:26 UTC): I think we have the rule that we generally implement such fixes in main and backport them to v2-*test - this is the first exception so far. Not sure if justified.

potiuk on (2024-08-30 20:20:29 UTC): cc: @utkarsharma2 @ephraimbuddy @kaxil @eladkal  -> WDYT? ^^

dstandish (Issue Creator) on (2024-08-30 20:21:18 UTC): I can't speak to that necessarily but this is the type of backcompat thing that I'd want to chop in 3.0 anyway.  If you think it's better, we could add to main, then remove it with changelog.  But it's _such_ a small thing!

potiuk on (2024-08-30 20:25:28 UTC): We discussed it before and that's the first one that is not cherry-picked. I am raising it - beause It might have some side-effects that might impact relase manager's work. For example there is the tooling that check milestone vs. cherry-picked tasks and it might simply give wrong misleading results. I raised this question before as ""academic"" question - and we discussed at the last dev call that we will discuss it when we see the first case of it. Which is .... now.

kaxil on (2024-08-30 20:27:34 UTC): @dstandish Does this not affect main too?

potiuk on (2024-08-30 20:33:10 UTC): My answer: theorethically it does, if somoene uses currently released cncf.kubernetes provider and CeleryKubernetesExecutor or LocalKubernetesExecutor in Airflow 3.

Now - we do not know yet which min-versions of providers will be usable for Airflow 3 (we could probably cut-off providers to support Airlfow 3 - or we could remove support for the ""old hybrid"" executors in Airlfow 3 - in which case that bug does not affect Airflow 3. I think it's quite likely one of these will happen - so likely yes, main (aka. Airlfow 3) is not affected.

dstandish (Issue Creator) on (2024-08-30 20:38:41 UTC): yeah i feel removing the hybrid executors for airflow 3 is an obvious choice.  not sure exactly how that is enforced since it's in providers...

probably we should just remove them as soon as min airflow version for the provider has airflow version that has hybrid execution.  when was that released, 2.10?

kaxil on (2024-08-30 20:50:56 UTC): If it affects ""main"" currently, then yeah I think we should fix and merge in main too. And then cherry-pick / separate PR (this can be that PR and you can create one for main too)

dstandish (Issue Creator) on (2024-08-30 20:57:11 UTC): I guess jarek is saying that ""theoretically"" it affects main but practicall speaking we will drop support for hybrid executors / executors-that-don't-inherit-from-base-executor in 3.0 and / or somehow indicate that providers are not assumed to be future compat with 3.0.

anyway, no strong feeling on it.  just ultimately do want this backcompat in 3.0 -- somehow or another.

potiuk on (2024-08-30 21:04:45 UTC): Yep. then I think we should add it to main and back-port even if it is ""such a small change"" - I guess in this case ""let's do all things the same way"" trumps ""but this one is so small and likely to be not needed"".

potiuk on (2024-08-30 21:09:52 UTC): I think individual's convenience in this case is less important that ""overall consistency"" - and we have to pay the overhead price for it. We already do that by having to run Pull requests for all backports rather than individual cherry-picks as it was in previous v2-* which means that the committers authoring/merging changes have more work to do at the expense of less work by the release manager. I guess that's the sacrifice we all should make now.

And I am not sarcastic - I rigorously follow those rules, it's just the price to pay and we should all be aware why we are paying it and we should share the burden.

kaxil on (2024-08-30 21:27:07 UTC): Agreed. At the point of the PR being open, if it affects main too, we should ideally fix it in main even if a future change will remove it.

potiuk on (2024-08-31 23:38:11 UTC): Would be great to get that one for 2.10.1 @ephraimbuddy @utkarsharma2

potiuk on (2024-08-31 23:42:58 UTC): (Still - this one needs main + backport as discussed before).

utkarsharma2 on (2024-09-01 06:30:18 UTC): Sure @potiuk I'll include this for 2.10.1

potiuk on (2024-09-01 09:52:42 UTC): Something strange happend when building images -> closing/reopening to rebuild

"
2497980636,pull_request,closed,,Implement pagination for the new home page.,"Thanks @bbovenzi for the new UI page and contribution docs. Looks really nice with built in dark mode from ground up. New build system using Vite and HMR is really nice. I don't need to reload for changes and enables a faster feedback loop with state intact. I tried implementing basic pagination for the new UI page. I opened this PR for initial feedback and some questions on trying out the implementation in new UI. I guess it serves as a good point to discuss and improve upon.

Questions 

1. In the previous API the case of the keys of the response used to be changed using interceptor. In this case will this be applicable to new API/UI? like total_entries will become totalEntries?
2. Default dags per page is configurable in airflow.cfg . Earlier the values used to be passed along meta tag for rendering. In this case page title and page size are some of the attributes that might be needed. I don't see any endpoint in airflow/www/views.py so I was wondering how to get those values here like the other react implementation. Currently, I just used 10 hard coded as a constant.
3. The new UI generates API stubs from openapi I guess similar to the other react project. Will this be merged eventually as I see useQuery for other parts with somewhat different conventions compared to the current one where useDagServiceGetDags is used.

Pagination Ref : 

https://tanstack.com/table/latest/docs/guide/pagination#manual-server-side-pagination
https://medium.com/@aylo.srd/server-side-pagination-and-sorting-with-tanstack-table-and-react-bd493170125e

Screenshot : (first page, previous page, next page, last page)

![image](https://github.com/user-attachments/assets/c4d9f45c-f7cd-4503-85a0-516da675a5b6)
",tirkarthi,2024-08-30 18:47:41+00:00,[],2024-09-04 16:47:11+00:00,2024-09-04 16:47:11+00:00,https://github.com/apache/airflow/pull/41905,"[('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2322146966, 'issue_id': 2497980636, 'author': 'tirkarthi', 'body': 'cc: @bbovenzi @pierrejeambrun', 'created_at': datetime.datetime(2024, 8, 30, 18, 48, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322311634, 'issue_id': 2497980636, 'author': 'bbovenzi', 'body': ""Looking like a good start!\r\n\r\n1. I haven't decided yet if we want to transform the API responses to camelCased. It is definitely more appriopriate to javascript. It may depend on how easy it is to integrate into our code generation flow\r\n2. We should use the new `ui_api` to pass config values through the user object or a `/config` endpoint.\r\n3. We will use the autogenerated queries like you see used here. We might want to play with the codegen settings or with the openapu.yaml file to improve the naming of everything"", 'created_at': datetime.datetime(2024, 8, 30, 20, 43, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322782532, 'issue_id': 2497980636, 'author': 'tirkarthi', 'body': ""> We should use the new ui_api to pass config values through the user object or a /config endpoint.\r\n\r\nI made a simple grep in the repo and couldn't find something related to ui_api . Can you please point me to the code so that I can use the same?"", 'created_at': datetime.datetime(2024, 8, 31, 5, 37, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322784809, 'issue_id': 2497980636, 'author': 'tirkarthi', 'body': 'I have added pagination, page number buttons along with making pagination a separate component since I feel it will be useful in other table oriented pages in future like dagruns, task instances etc. \r\n\r\nDemo : \r\n\r\nhttps://github.com/user-attachments/assets/3d1ad0eb-74bc-4754-be60-21909e793726', 'created_at': datetime.datetime(2024, 8, 31, 5, 47, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2329167039, 'issue_id': 2497980636, 'author': 'bbovenzi', 'body': ""> > We should use the new ui_api to pass config values through the user object or a /config endpoint.\r\n> \r\n> I made a simple grep in the repo and couldn't find something related to ui_api . Can you please point me to the code so that I can use the same?\r\n\r\nWe haven't integrated it yet. That can happen later, I'm just saying that's how we should eventually do it.\r\n\r\nI think this PR is a good start! Let's change our hard-coded limit from 10 to 25 or 50 and I think you could mark this as ready for review. We're going to refactor a lot over time anyway."", 'created_at': datetime.datetime(2024, 9, 4, 14, 6, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2329195859, 'issue_id': 2497980636, 'author': 'tirkarthi', 'body': 'Thanks @bbovenzi , I changed it to 50 and it looks like default value is 100. I noticed the UI PRs from @pierrejeambrun setting up UI API in https://github.com/apache/airflow/pull/41798. I will follow the development along and make changes once the changes are in.', 'created_at': datetime.datetime(2024, 9, 4, 14, 17, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2329479135, 'issue_id': 2497980636, 'author': 'tirkarthi', 'body': 'Fixed PR comments and rebased with latest changes https://github.com/apache/airflow/pull/41905/commits/6708afec64e817a38a6da9d89d3a54dbf98ff90e', 'created_at': datetime.datetime(2024, 9, 4, 16, 13, 24, tzinfo=datetime.timezone.utc)}]","tirkarthi (Issue Creator) on (2024-08-30 18:48:42 UTC): cc: @bbovenzi @pierrejeambrun

bbovenzi on (2024-08-30 20:43:27 UTC): Looking like a good start!

1. I haven't decided yet if we want to transform the API responses to camelCased. It is definitely more appriopriate to javascript. It may depend on how easy it is to integrate into our code generation flow
2. We should use the new `ui_api` to pass config values through the user object or a `/config` endpoint.
3. We will use the autogenerated queries like you see used here. We might want to play with the codegen settings or with the openapu.yaml file to improve the naming of everything

tirkarthi (Issue Creator) on (2024-08-31 05:37:26 UTC): I made a simple grep in the repo and couldn't find something related to ui_api . Can you please point me to the code so that I can use the same?

tirkarthi (Issue Creator) on (2024-08-31 05:47:57 UTC): I have added pagination, page number buttons along with making pagination a separate component since I feel it will be useful in other table oriented pages in future like dagruns, task instances etc. 

Demo : 

https://github.com/user-attachments/assets/3d1ad0eb-74bc-4754-be60-21909e793726

bbovenzi on (2024-09-04 14:06:17 UTC): We haven't integrated it yet. That can happen later, I'm just saying that's how we should eventually do it.

I think this PR is a good start! Let's change our hard-coded limit from 10 to 25 or 50 and I think you could mark this as ready for review. We're going to refactor a lot over time anyway.

tirkarthi (Issue Creator) on (2024-09-04 14:17:47 UTC): Thanks @bbovenzi , I changed it to 50 and it looks like default value is 100. I noticed the UI PRs from @pierrejeambrun setting up UI API in https://github.com/apache/airflow/pull/41798. I will follow the development along and make changes once the changes are in.

tirkarthi (Issue Creator) on (2024-09-04 16:13:24 UTC): Fixed PR comments and rebased with latest changes https://github.com/apache/airflow/pull/41905/commits/6708afec64e817a38a6da9d89d3a54dbf98ff90e

"
2497922789,pull_request,closed,,All executors should inherit from BaseExecutor,"Here I amend LocalKubernetesExecutor and CeleryKubernetesExecutor to inherit from BaseExecutor.

resolves: https://github.com/apache/airflow/issues/41891",dstandish,2024-08-30 18:12:32+00:00,[],2024-10-02 02:23:47+00:00,2024-10-02 02:23:45+00:00,https://github.com/apache/airflow/pull/41904,"[('area:providers', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues'), ('provider:celery', ''), ('area:Executors-core', 'LocalExecutor & SequentialExecutor')]","[{'comment_id': 2322140766, 'issue_id': 2497922789, 'author': 'potiuk', 'body': ""If I am not mistaken that means that currently released cncf.kubernetes providers will not work well with 2.10 and 2.10.1 ?.  Should we also make a compatibility check / workaround (and backport it to 2.10.1) so that older provider versions' executors work as well with 2.10.1 ?"", 'created_at': datetime.datetime(2024, 8, 30, 18, 45, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322265207, 'issue_id': 2497922789, 'author': 'dstandish', 'body': ""> If I am not mistaken that means that currently released cncf.kubernetes providers will not work well with 2.10 and 2.10.1 ?. Should we also make a compatibility check / workaround (and backport it to 2.10.1) so that older provider versions' executors work as well with 2.10.1 ?\r\n\r\nYeah makes sense, done that here https://github.com/apache/airflow/pull/41906"", 'created_at': datetime.datetime(2024, 8, 30, 20, 11, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323460560, 'issue_id': 2497922789, 'author': 'potiuk', 'body': '> To me this abomination isn\'t an executor, only the sub executors are valid executors. But also, they won\'t last long until they\'re removed so I suppose it\'s not a big deal either way! Happy to approve.\r\n\r\nWe\'ll have to live with them for at least 18 months ""officiailly"", I am afraid and they will survive it for a much longer time ... That\'s the reality we are facing :(', 'created_at': datetime.datetime(2024, 9, 1, 18, 58, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 2354637505, 'issue_id': 2497922789, 'author': 'eladkal', 'body': '@dstandish ready for merge?', 'created_at': datetime.datetime(2024, 9, 17, 6, 26, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2355992617, 'issue_id': 2497922789, 'author': 'dstandish', 'body': '> Shall we merge it ?\r\n\r\nYeah should be fine I think!', 'created_at': datetime.datetime(2024, 9, 17, 14, 20, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387274767, 'issue_id': 2497922789, 'author': 'potiuk', 'body': '> Yeah should be fine I think!\r\n\r\nWhat holds you back @dstandish :) ?', 'created_at': datetime.datetime(2024, 10, 1, 23, 46, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387508195, 'issue_id': 2497922789, 'author': 'dstandish', 'body': ""> > Yeah should be fine I think!\r\n> \r\n> What holds you back @dstandish :) ?\r\n\r\nI guess just was hoping i'd get some conflicts to resolve :)"", 'created_at': datetime.datetime(2024, 10, 2, 2, 23, 38, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-08-30 18:45:09 UTC): If I am not mistaken that means that currently released cncf.kubernetes providers will not work well with 2.10 and 2.10.1 ?.  Should we also make a compatibility check / workaround (and backport it to 2.10.1) so that older provider versions' executors work as well with 2.10.1 ?

dstandish (Issue Creator) on (2024-08-30 20:11:06 UTC): Yeah makes sense, done that here https://github.com/apache/airflow/pull/41906

potiuk on (2024-09-01 18:58:38 UTC): We'll have to live with them for at least 18 months ""officiailly"", I am afraid and they will survive it for a much longer time ... That's the reality we are facing :(

eladkal on (2024-09-17 06:26:49 UTC): @dstandish ready for merge?

dstandish (Issue Creator) on (2024-09-17 14:20:38 UTC): Yeah should be fine I think!

potiuk on (2024-10-01 23:46:26 UTC): What holds you back @dstandish :) ?

dstandish (Issue Creator) on (2024-10-02 02:23:38 UTC): I guess just was hoping i'd get some conflicts to resolve :)

"
2497908392,pull_request,closed,,Update UI contributing docs,"Add docs on how to run the new `airflow/ui` project. And add temporary rules during Airflow 3.0 development, specifying when to contribute to the new `airflow/ui` and `airflow/ui_api` projects vs the legacy `airflow/www` UI and endpoints.


---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-08-30 18:02:47+00:00,[],2024-09-04 14:53:40+00:00,2024-09-04 14:53:39+00:00,https://github.com/apache/airflow/pull/41903,"[('area:dev-tools', '')]","[{'comment_id': 2322251491, 'issue_id': 2497908392, 'author': 'potiuk', 'body': 'Nice. Other than the comments from @jscheffl and @kaxil -> no more from me.', 'created_at': datetime.datetime(2024, 8, 30, 20, 1, 56, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-08-30 20:01:56 UTC): Nice. Other than the comments from @jscheffl and @kaxil -> no more from me.

"
2497621447,pull_request,closed,,Make Scarf usage reporting in major+minor versions and counters in buckets (#41898),Backport of https://github.com/apache/airflow/pull/41898 to 2.10-line,jscheffl,2024-08-30 15:55:20+00:00,[],2024-08-30 18:48:19+00:00,2024-08-30 18:18:31+00:00,https://github.com/apache/airflow/pull/41900,"[('area:webserver', 'Webserver related Issues'), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log')]",[],
2497563801,pull_request,closed,,Correct scheduled slots documentation and missing open telemetry span,"The new pool.scheduled_slots metrics added in https://github.com/apache/airflow/pull/38899 has incorrect documentation, calling the field `pool.scheduled_tasks`.

Additionally this field isn't exposed in the open telemetry span data unlike all the other related `pool.{state}_slots` metrics. I suspect this was missed in https://github.com/apache/airflow/pull/40802

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",mattogburke,2024-08-30 15:37:48+00:00,[],2024-09-04 02:36:56+00:00,2024-09-03 19:39:11+00:00,https://github.com/apache/airflow/pull/41899,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('kind:documentation', '')]","[{'comment_id': 2321662036, 'issue_id': 2497563801, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 8, 30, 15, 37, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 2326603613, 'issue_id': 2497563801, 'author': 'potiuk', 'body': 'cc: @howardyoo @ferruzzi  ?', 'created_at': datetime.datetime(2024, 9, 3, 13, 59, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2327173389, 'issue_id': 2497563801, 'author': 'howardyoo', 'body': '> cc: @howardyoo @ferruzzi ?\r\n\r\nThe change looks good to me. Thanks for adding these missing attributes to the span :-)', 'created_at': datetime.datetime(2024, 9, 3, 18, 35, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2327285987, 'issue_id': 2497563801, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 9, 3, 19, 39, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2327798902, 'issue_id': 2497563801, 'author': 'jedcunningham', 'body': 'Thanks @mattogburke! Congrats on your first commit 🎉', 'created_at': datetime.datetime(2024, 9, 4, 2, 36, 55, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-08-30 15:37:53 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

potiuk on (2024-09-03 13:59:40 UTC): cc: @howardyoo @ferruzzi  ?

howardyoo on (2024-09-03 18:35:34 UTC): The change looks good to me. Thanks for adding these missing attributes to the span :-)

boring-cyborg[bot] on (2024-09-03 19:39:13 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

jedcunningham on (2024-09-04 02:36:55 UTC): Thanks @mattogburke! Congrats on your first commit 🎉

"
2497519306,pull_request,closed,,Make Scarf usage reporting in major+minor versions and counters in buckets,"As I was (together with @kaxil ) taking a look to the Scarf reports I saw some minor improvements we can have for the collected metrics:

1. We are not actually interested in the (exact) Python version but Major.Minor is sufficient. Too preceise metrics are not getting a good report
2. Same for DB Version. Major+Minor is sufficient
3. Count of DAGs, Timetables and Plugins is also too precise, made a set of buckets as the Rough number is what we want to know

I think we are atm cutting the 2.10 release but I hope somehow we get it it, if not then 2.10.2 :-D",jscheffl,2024-08-30 15:23:58+00:00,[],2024-09-02 21:37:11+00:00,2024-08-30 16:59:46+00:00,https://github.com/apache/airflow/pull/41898,"[('area:webserver', 'Webserver related Issues'), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log')]","[{'comment_id': 2323741488, 'issue_id': 2497519306, 'author': 'jedcunningham', 'body': ""I'm curious why we didn't do buckets for the other counts too - flask blueprints and appbuilder views/menu items? Just that we don't think we will have that wide of a range to begin with?\r\n\r\nI think the current buckets make sense for DAGs, but not so much for plugins and timetables. We loose basically all granularity."", 'created_at': datetime.datetime(2024, 9, 2, 3, 27, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2325319784, 'issue_id': 2497519306, 'author': 'kaxil', 'body': 'Fair point @jedcunningham - feel free to PR tour change', 'created_at': datetime.datetime(2024, 9, 2, 21, 37, 10, tzinfo=datetime.timezone.utc)}]","jedcunningham on (2024-09-02 03:27:34 UTC): I'm curious why we didn't do buckets for the other counts too - flask blueprints and appbuilder views/menu items? Just that we don't think we will have that wide of a range to begin with?

I think the current buckets make sense for DAGs, but not so much for plugins and timetables. We loose basically all granularity.

kaxil on (2024-09-02 21:37:10 UTC): Fair point @jedcunningham - feel free to PR tour change

"
2497497920,pull_request,closed,,UI API CLI and Breeze integration,"Add the `airflow ui-api` command. Include it in `airflow standalone` and also in breeze to have that at the startup.

Everything is working locally port binding from host to docker api port, standalone command, airflow ui-api command.

> Note: We use gunicorn special uvicorn worker to run the FastAPI app in production. This is what is recommended by the uvicorn project itself doc [here](https://www.uvicorn.org/deployment/#deployment)

![Screenshot 2024-08-28 at 17 25 15](https://github.com/user-attachments/assets/40a5ead8-9f9b-4edc-ae90-ef7d6972a5b9)


⚠️ 
I just have one thing I need to investigate which is that there are some errors on the `TTIN` `TTOUT` signals of the gunicorn server. That does not appear when I run the gunicorn server manually, that seems to come from our `GunicornMonitor`. I need to dive deeper into the `GunicornMonitor` loop to see if this is 'expected or not', probably not.
cf screenshot, workers are being brought up and down, ~~and when closing apparently a filedesriptor is already closed or improperly closed.~~(solved), why are workers terminated in the first place.

![Screenshot 2024-08-30 at 17 15 19](https://github.com/user-attachments/assets/dc719e12-d93f-47b7-89bb-f2673d674fe5)
",pierrejeambrun,2024-08-30 15:13:47+00:00,[],2024-09-02 14:27:29+00:00,2024-09-02 10:39:21+00:00,https://github.com/apache/airflow/pull/41896,"[('area:webserver', 'Webserver related Issues'), ('area:CLI', ''), ('area:dev-tools', ''), ('AIP-84', 'Modern Rest API')]","[{'comment_id': 2321839465, 'issue_id': 2497497920, 'author': 'pierrejeambrun', 'body': 'Ok, I was able to get rid of the `bad file descriptor` error when shutting down the worker. Cf this commit https://github.com/apache/airflow/pull/41896/commits/76b653e2353731190d12782570e0095fd3145109\r\n\r\nNow I need to understand why are workers first incrementated (most likely by the monitoring loop), to then yield a sigterm error. That does not seem normal.', 'created_at': datetime.datetime(2024, 8, 30, 16, 19, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323057885, 'issue_id': 2497497920, 'author': 'potiuk', 'body': 'I\'d say - migrating existing REST APIs to the new ""ui-api"" command is the way to go.', 'created_at': datetime.datetime(2024, 8, 31, 22, 19, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2324186024, 'issue_id': 2497497920, 'author': 'pierrejeambrun', 'body': '> I think for Airflow 3 development, it\'s quite ok to keep things separate, but agree with @jscheffl that it should be unified eventually. I think we should get rid of all the old connexion thing - having all the experience with connexion 3 and convert all our APIs and websever endpoints to use FastAPI - looking at how much it handles for us, and the fact that we can make some incompatibility decisions made in Airflow 2 for the APIs (error handling for one, base_url handling etc.) - having a single, unified FastAPI (even if opinionated and with different decieions) is a great opportunity to ""standardising"" our UI work - that would need some work on converting existing REST endpoints (and especially tests) to use Fast API, but other that potential slight incompatibilities, I do not see any problems with it. Fast API can generate OpenAPI spec from the code, get swagger conected and so on and we can make it works ""slightly differently"" for airlfow 3 - and migrate the code for our current REST API gradually.\r\n\r\n> But it does not have to be ""now"".\r\n\r\n> I\'d say - migrating existing REST APIs to the new ""ui-api"" command is the way to go.\r\n\r\nTotally agree. At the end of the day we want a standardized way of handling our Rest APIs, code first spec, most likely all FastAPI. And we will migrate the existing for airflow 3 development. Then the new RestAPI can be a drop in replacement for the existing plublic API that will be completely removed I suppose.', 'created_at': datetime.datetime(2024, 9, 2, 8, 53, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2324271084, 'issue_id': 2497497920, 'author': 'pierrejeambrun', 'body': 'Ok, the TTIN followed by TTOU seems perfectly normal, `worker_refresh_interval` and `worker_refresh_batch_size` handle this and is expected. (every 30 seconds a new worker is refreshed).\r\n\r\nMerging when CI is green', 'created_at': datetime.datetime(2024, 9, 2, 9, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2324405338, 'issue_id': 2497497920, 'author': 'potiuk', 'body': '> Ok, the TTIN followed by TTOU seems perfectly normal, `worker_refresh_interval` and `worker_refresh_batch_size` handle this and is expected. (every 30 seconds a new worker is refreshed).\r\n\r\ncorrect', 'created_at': datetime.datetime(2024, 9, 2, 10, 39, 16, tzinfo=datetime.timezone.utc)}]","pierrejeambrun (Issue Creator) on (2024-08-30 16:19:57 UTC): Ok, I was able to get rid of the `bad file descriptor` error when shutting down the worker. Cf this commit https://github.com/apache/airflow/pull/41896/commits/76b653e2353731190d12782570e0095fd3145109

Now I need to understand why are workers first incrementated (most likely by the monitoring loop), to then yield a sigterm error. That does not seem normal.

potiuk on (2024-08-31 22:19:43 UTC): I'd say - migrating existing REST APIs to the new ""ui-api"" command is the way to go.

pierrejeambrun (Issue Creator) on (2024-09-02 08:53:46 UTC): Totally agree. At the end of the day we want a standardized way of handling our Rest APIs, code first spec, most likely all FastAPI. And we will migrate the existing for airflow 3 development. Then the new RestAPI can be a drop in replacement for the existing plublic API that will be completely removed I suppose.

pierrejeambrun (Issue Creator) on (2024-09-02 09:32:00 UTC): Ok, the TTIN followed by TTOU seems perfectly normal, `worker_refresh_interval` and `worker_refresh_batch_size` handle this and is expected. (every 30 seconds a new worker is refreshed).

Merging when CI is green

potiuk on (2024-09-02 10:39:16 UTC): correct

"
2497341966,pull_request,closed,,[Backport] Skip test_scan_stale_dags_when_dag_folder_change in DB isolation mode,"Since the similar test(test_scan_stale_dags_standalone_mode) are skipped in DB isolation mode

(cherry picked from commit 07af14ae75820a98b60ecffa2949ef7ad70bacab)",utkarsharma2,2024-08-30 14:06:08+00:00,[],2024-08-30 14:16:45+00:00,2024-08-30 14:12:54+00:00,https://github.com/apache/airflow/pull/41895,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2497317899,pull_request,closed,,Skip test_scan_stale_dags_when_dag_folder_change in DB isolation mode,Since the similar test(test_scan_stale_dags_standalone_mode) is skipped in DB isolation mode and it's [breaking CI](https://github.com/apache/airflow/actions/runs/10633117503/job/29478029666 ) which is a blocker for 2.10.1 release.,utkarsharma2,2024-08-30 13:56:38+00:00,[],2024-08-30 14:16:58+00:00,2024-08-30 14:02:25+00:00,https://github.com/apache/airflow/pull/41893,"[('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2497140371,pull_request,closed,,Adding tojson filter to example_inlet_event_extra example dag (#41873),"(cherry picked from commit 87a4a5137519448cfff85fc506b9267ec3e18364)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-08-30 12:46:37+00:00,[],2024-08-30 12:56:48+00:00,2024-08-30 12:49:01+00:00,https://github.com/apache/airflow/pull/41890,"[('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2321137514, 'issue_id': 2497140371, 'author': 'potiuk', 'body': 'Backport #41873', 'created_at': datetime.datetime(2024, 8, 30, 12, 47, 11, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-08-30 12:47:11 UTC): Backport #41873

"
2497108226,pull_request,closed,,move to dag_run.logical_date from execution date in OpenLineage provider,Remove usage of deprecated `execution_date` in favor of `logical_date`,mobuchowski,2024-08-30 12:33:23+00:00,[],2024-09-02 12:29:29+00:00,2024-09-02 12:29:29+00:00,https://github.com/apache/airflow/pull/41889,"[('area:providers', ''), ('provider:openlineage', 'AIP-53')]","[{'comment_id': 2323494195, 'issue_id': 2497108226, 'author': 'potiuk', 'body': 'Is it backwards-compatible with Airflow 2?', 'created_at': datetime.datetime(2024, 9, 1, 20, 56, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2324231418, 'issue_id': 2497108226, 'author': 'mobuchowski', 'body': '@potiuk `logical_date` property was added back in 2021\r\n\r\n<img width=""579"" alt=""Screenshot 2024-09-02 at 11 14 00"" src=""https://github.com/user-attachments/assets/431b102b-277b-4d0c-8e83-af3fc2d2b206"">', 'created_at': datetime.datetime(2024, 9, 2, 9, 14, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2324408518, 'issue_id': 2497108226, 'author': 'potiuk', 'body': '> logical_date teproperty was added back in 2021\r\n\r\nI know, just checking if it is ok to change it in the provider - which will be (for the next 6 months or so) only installed on Airflow 2 :)', 'created_at': datetime.datetime(2024, 9, 2, 10, 40, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2324411594, 'issue_id': 2497108226, 'author': 'potiuk', 'body': 'Simply execution_date and logical_date have different semantics, so my question is, if that will impact observed open-lineage events. And if so - whether it should be somehow explained in the changelog so that users are not surprised.', 'created_at': datetime.datetime(2024, 9, 2, 10, 42, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2324463504, 'issue_id': 2497108226, 'author': 'mobuchowski', 'body': '@potiuk does it really have different semantics?\r\n\r\nFrom what I can find, it\'s essentially a rename: \r\n\r\nFrom AIP-39\r\n> We need a single date value that is the ""canonical"" date for the DagRun date, that can be used for sorting DagRuns for the UI view, so the current ""execution_date"" column on DagRun needs to be kept, but we should rename - and we\'ve chosen ""logical_date"".\r\n\r\nAlso [in the docstring](https://github.com/apache/airflow/pull/16352/files#diff-ffc28f0462bb68924dcaa55031ad885759562f6cb589744dd1e123dbbcd2ecf6R88):\r\n> This replaces ``execution_date`` in Airflow 2.1 and prior. The idea is essentially the same, just a different name.\r\n\r\nBasically, we want the same: the time when the DagRun is scheduled to be run, without consideration if it\'s actually going to run at that time, due to scheduler being backed up or other reason.', 'created_at': datetime.datetime(2024, 9, 2, 11, 9, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2324489881, 'issue_id': 2497108226, 'author': 'potiuk', 'body': '> Basically, we want the same: the time when the DagRun is scheduled to be run, without consideration if it\'s actually going to run at that time, due to scheduler being backed up or other reason.\r\n\r\nYep. You are right. I had confused it with ""start/end interval"" and other macros available in context, but logical_date and execution_date are really aliases.', 'created_at': datetime.datetime(2024, 9, 2, 11, 21, 11, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-01 20:56:18 UTC): Is it backwards-compatible with Airflow 2?

mobuchowski (Issue Creator) on (2024-09-02 09:14:50 UTC): @potiuk `logical_date` property was added back in 2021

<img width=""579"" alt=""Screenshot 2024-09-02 at 11 14 00"" src=""https://github.com/user-attachments/assets/431b102b-277b-4d0c-8e83-af3fc2d2b206"">

potiuk on (2024-09-02 10:40:58 UTC): I know, just checking if it is ok to change it in the provider - which will be (for the next 6 months or so) only installed on Airflow 2 :)

potiuk on (2024-09-02 10:42:39 UTC): Simply execution_date and logical_date have different semantics, so my question is, if that will impact observed open-lineage events. And if so - whether it should be somehow explained in the changelog so that users are not surprised.

mobuchowski (Issue Creator) on (2024-09-02 11:09:04 UTC): @potiuk does it really have different semantics?

From what I can find, it's essentially a rename: 

From AIP-39

Also [in the docstring](https://github.com/apache/airflow/pull/16352/files#diff-ffc28f0462bb68924dcaa55031ad885759562f6cb589744dd1e123dbbcd2ecf6R88):

Basically, we want the same: the time when the DagRun is scheduled to be run, without consideration if it's actually going to run at that time, due to scheduler being backed up or other reason.

potiuk on (2024-09-02 11:21:11 UTC): Yep. You are right. I had confused it with ""start/end interval"" and other macros available in context, but logical_date and execution_date are really aliases.

"
2497085821,pull_request,closed,,Enable running Pull Requests against v2-10-stable branch (#41624),"(cherry picked from commit e306e7f7bc1ef12aeab0fc09e018accda3684a2f)
",utkarsharma2,2024-08-30 12:23:34+00:00,[],2024-08-30 12:56:23+00:00,2024-08-30 12:54:36+00:00,https://github.com/apache/airflow/pull/41888,"[('area:dev-tools', ''), ('changelog:skip', 'Changes that should be skipped from the changelog (CI, tests, etc..)')]",[],
2497055906,pull_request,closed,,Bugfix/dataflow job location passing,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

## Summary: this PR fixes the issue of using the default `location`, namely `us-central1`, instead of the user-supplied `location` argument.

`location` is not passed through in several places in `providers/apache/beam/operators/beam.py` and `providers/google/cloud/operators/dataflow.py` causing the dataflow API calls to always use `DEFAULT_DATAFLOW_LOCATION = 'us-central1'`:
1. During job cancellation when, for example, `BeamRunJavaPipelineOperator` job is marked as `success/failed`:
    - This leads to the following exception:
        ```
        [2024-08-28, 11:24:29 UTC] {beam.py:657} INFO - Dataflow job with id: `2024-08-28_04_23_24-13750676948168932211` was requested to be cancelled.
        [2024-08-28, 11:24:30 UTC] {taskinstance.py:441} ▼ Post task execution logs
        [2024-08-28, 11:24:30 UTC] {taskinstance.py:2905} ERROR - Task failed with exception
        Traceback (most recent call last):
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/models/taskinstance.py"", line 465, in _execute_task
            result = _execute_callable(context=context, **execute_callable_kwargs)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/models/taskinstance.py"", line 432, in _execute_callable
            return execute_callable(context=context, **execute_callable_kwargs)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/models/baseoperator.py"", line 401, in wrapper
            return func(self, *args, **kwargs)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/apache/beam/operators/beam.py"", line 556, in execute
            return self.execute_sync(context)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/apache/beam/operators/beam.py"", line 583, in execute_sync
            self.beam_hook.start_java_pipeline(
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/apache/beam/hooks/beam.py"", line 315, in start_java_pipeline
            self._start_pipeline(
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/apache/beam/hooks/beam.py"", line 206, in _start_pipeline
            run_beam_command(
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/apache/beam/hooks/beam.py"", line 161, in run_beam_command
            process_fd(proc, readable_fd, log, process_line_callback, check_job_status_callback)
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/apache/beam/hooks/beam.py"", line 115, in process_fd
            for line in iter(fd.readline, b""""):
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/models/taskinstance.py"", line 2612, in signal_handler
            self.task.on_kill()
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/apache/beam/operators/beam.py"", line 658, in on_kill
            self.dataflow_hook.cancel_job(
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/google/common/hooks/base_google.py"", line 559, in inner_wrapper
            return func(self, *args, **kwargs)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/google/cloud/hooks/dataflow.py"", line 1112, in cancel_job
            jobs_controller.cancel()
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/google/cloud/hooks/dataflow.py"", line 511, in cancel
            job for job in self.get_jobs() if job[""currentState""] not in DataflowJobStatus.TERMINAL_STATES
                        ^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/google/cloud/hooks/dataflow.py"", line 479, in get_jobs
            self._refresh_jobs()
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/google/cloud/hooks/dataflow.py"", line 400, in _refresh_jobs
            self._jobs = self._get_current_jobs()
                        ^^^^^^^^^^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/google/cloud/hooks/dataflow.py"", line 263, in _get_current_jobs
            return [self.fetch_job_by_id(self._job_id)]
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/google/cloud/hooks/dataflow.py"", line 290, in fetch_job_by_id
            .execute(num_retries=self._num_retries)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/googleapiclient/_helpers.py"", line 130, in positional_wrapper
            return wrapped(*args, **kwargs)
                ^^^^^^^^^^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/googleapiclient/http.py"", line 938, in execute
            raise HttpError(resp, content, uri=self.uri)
        googleapiclient.errors.HttpError: <HttpError 404 when requesting https://dataflow.googleapis.com/v1b3/projects/my-project/locations/us-central1/jobs/2024-08-28_04_23_24-13750676948168932211?alt=json returned ""(4f38a283a310abc0): Information about job 2024-08-28_04_23_24-13750676948168932211 could not be found in our system. Please double check that the API being used is projects.locations.jobs.get (https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs/get). If the API being used is projects.locations.jobs.get, please double check the id (2024-08-28_04_23_24-13750676948168932211) is correct. If it is please contact customer support."". Details: ""(4f38a283a310abc0): Information about job 2024-08-28_04_23_24-13750676948168932211 could not be found in our system. Please double check that the API being used is projects.locations.jobs.get (https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.locations.jobs/get). If the API being used is projects.locations.jobs.get, please double check the id (2024-08-28_04_23_24-13750676948168932211) is correct. If it is please contact customer support."">
        ```
    - I've fixed it by passing through `location` parameter in the calls of `cancel_job` defined in `providers/google/cloud/hooks/dataflow.py`
2. When a new job is launched (with `CheckJobRunning.WaitForRun` setting), it should wait until the previous job with the same name is cancelled/drained. When non default `location` is used `europe-west1`, it's ignored and, thus, the previous job cannot be found at the same location, leading to the new job starting.
    - I tried excplicitly passing the location to `is_job_dataflow_running`, however, because of the of the `@_fallback_to_location_from_variables` annotation an exception is raised regarding mutually exclusive parameters being specified:
        ```
        [2024-08-28, 11:49:18 UTC] {taskinstance.py:2905} ERROR - Task failed with exception
        Traceback (most recent call last):
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/models/taskinstance.py"", line 465, in _execute_task
            result = _execute_callable(context=context, **execute_callable_kwargs)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/models/taskinstance.py"", line 432, in _execute_callable
            return execute_callable(context=context, **execute_callable_kwargs)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/models/baseoperator.py"", line 401, in wrapper
            return func(self, *args, **kwargs)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/apache/beam/operators/beam.py"", line 556, in execute
            return self.execute_sync(context)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/apache/beam/operators/beam.py"", line 574, in execute_sync
            is_running = self.dataflow_hook.is_job_dataflow_running(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""/opt/bitnami/airflow/venv/lib/python3.11/site-packages/airflow/providers/google/cloud/hooks/dataflow.py"", line 125, in inner_wrapper
            raise AirflowException(
        airflow.exceptions.AirflowException: The mutually exclusive parameter `location` and `region` key in `variables` parameter are both present. Please remove one.
        ```
    -  While `@_fallback_to_location_from_variables` should ensure that a fallback location value is used from `variables` (`pipeline_options`) when `location` is not supplied, this never happens because the default `location: str = DEFAULT_DATAFLOW_LOCATION` is set in the function, resulting in `us-central1` to always be used as `location`
    - I've fixed this issue by removing `@_fallback_to_location_from_variables` annotation from `is_job_dataflow_running` defined in `providers/google/cloud/hooks/dataflow.py`. I also removed the default `location` value setting in `is_job_dataflow_running` because, to my mind, it cause more harm than it is useful. In all the calls of `is_job_dataflow_running` I passed location values available in scope, which by default is set to `location: str = DEFAULT_DATAFLOW_LOCATION` anyway when looking at the class constructors.

How my testing task is configured:
```
start_beam_pipeline = BeamRunJavaPipelineOperator(
    task_id=""start-beam-pipeline"",
    runner=""DataflowRunner"",
    jar=jar_location,
    job_class=job_class,
    # https://cloud.google.com/dataflow/docs/reference/pipeline-options#java
    pipeline_options={
        ""tempLocation"": f""gs://my-bucket/tmp"",
        ""stagingLocation"": f""gs://my-bucket/staging"",
        ""enableStreamingEngine"": True,
        ""workerMachineType"": ""n2d-standard-4"",
        ""maxNumWorkers"": 3,
    },
    # https://airflow.apache.org/docs/apache-airflow-providers-google/stable/_api/airflow/providers/google/cloud/operators/dataflow/index.html#airflow.providers.google.cloud.operators.dataflow.DataflowConfiguration
    dataflow_config=DataflowConfiguration(
        job_name=""{{task.task_id}}"",
        append_job_name=False,
        project_id=""my_project',
        location=""europe-west1"",
        drain_pipeline=True,
        check_if_running=CheckJobRunning.WaitForRun
    )
)
```

I'm running Airflow with these changes and I can confirm that `BeamRunJavaPipelineOperator` behaves as it should, fixing the 2 points above.

I've used the following versions for testing:
- Airflow: 2.10.0
- Beam provider: 5.8.0
- Google provider: 10.22.0


<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",lukas-mi,2024-08-30 12:09:43+00:00,[],2024-09-24 11:35:07+00:00,2024-09-24 11:19:22+00:00,https://github.com/apache/airflow/pull/41887,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', ''), ('provider:apache-beam', '')]","[{'comment_id': 2355007221, 'issue_id': 2497055906, 'author': 'lukas-mi', 'body': ""I've tried messaging in #contributors channel last week. Not sure who to ping so @potiuk @jedcunningham @uranusjr 🤔"", 'created_at': datetime.datetime(2024, 9, 17, 9, 22, 39, tzinfo=datetime.timezone.utc)}]","lukas-mi (Issue Creator) on (2024-09-17 09:22:39 UTC): I've tried messaging in #contributors channel last week. Not sure who to ping so @potiuk @jedcunningham @uranusjr 🤔

"
2496783261,pull_request,closed,,Update min version of google-cloud-bigquery package,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

In this PR https://github.com/apache/airflow/pull/41839 I have unpinned the version to the last one. But after discussion in a team we decided to downgrade the min version to the `3.4.0` and exclude unworked versions. Because some of our users still use old versions of the Bigquery package and, also, the gap between `3.4.0` and `3.24.0` is quite big.

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",MaksYermak,2024-08-30 09:58:38+00:00,[],2024-08-30 13:30:21+00:00,2024-08-30 13:30:21+00:00,https://github.com/apache/airflow/pull/41882,"[('provider:google', 'Google (including GCP) related issues'), ('area:providers', '')]",[],
2496735825,pull_request,closed,,Sync v2-10-stable with v2-10-test to release 2.10.1rc1,Time for 2.10.1rc1!,utkarsharma2,2024-08-30 09:39:33+00:00,[],2024-10-02 21:44:35+00:00,2024-09-02 13:35:43+00:00,https://github.com/apache/airflow/pull/41881,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('area:dev-tools', ''), ('area:API', ""Airflow's REST/HTTP API""), ('area:production-image', 'Production image improvements and fixes'), ('area:Executors-core', 'LocalExecutor & SequentialExecutor')]","[{'comment_id': 2323909638, 'issue_id': 2496735825, 'author': 'potiuk', 'body': 'If we have still the possibility #41939 might be also good to include.', 'created_at': datetime.datetime(2024, 9, 2, 6, 25, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323996617, 'issue_id': 2496735825, 'author': 'ephraimbuddy', 'body': 'Update the release note to include the recently added PRs', 'created_at': datetime.datetime(2024, 9, 2, 7, 21, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2324045666, 'issue_id': 2496735825, 'author': 'utkarsharma2', 'body': ""> Update the release note to include the recently added PRs\r\n\r\nSure, I'll update it."", 'created_at': datetime.datetime(2024, 9, 2, 7, 47, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2324459179, 'issue_id': 2496735825, 'author': 'potiuk', 'body': 'Looks green :)', 'created_at': datetime.datetime(2024, 9, 2, 11, 6, 46, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-09-02 06:25:25 UTC): If we have still the possibility #41939 might be also good to include.

ephraimbuddy on (2024-09-02 07:21:35 UTC): Update the release note to include the recently added PRs

utkarsharma2 (Issue Creator) on (2024-09-02 07:47:31 UTC): Sure, I'll update it.

potiuk on (2024-09-02 11:06:46 UTC): Looks green :)

"
2496544005,pull_request,closed,,Bump webpack from 5.76.0 to 5.94.0 in /airflow/www (#41864),"Bumps [webpack](https://github.com/webpack/webpack) from 5.76.0 to 5.94.0.
- [Release notes](https://github.com/webpack/webpack/releases)
- [Commits](https://github.com/webpack/webpack/compare/v5.76.0...v5.94.0)

---
updated-dependencies:
- dependency-name: webpack dependency-type: direct:development ...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
(cherry picked from commit e8888fe055ac8c341e2fa6631ff6ac5f089d54c5)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",potiuk,2024-08-30 08:11:37+00:00,[],2024-08-30 11:31:01+00:00,2024-08-30 09:04:57+00:00,https://github.com/apache/airflow/pull/41879,"[('area:webserver', 'Webserver related Issues'), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]","[{'comment_id': 2320438800, 'issue_id': 2496544005, 'author': 'potiuk', 'body': 'Backport of #41864', 'created_at': datetime.datetime(2024, 8, 30, 8, 11, 50, tzinfo=datetime.timezone.utc)}]","potiuk (Issue Creator) on (2024-08-30 08:11:50 UTC): Backport of #41864

"
2496358436,pull_request,closed,,Fixing version bump issue when all changes are misc,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

A version bump wasnt happening when all changes while preparing documentation for providers were `misc`. This PR fixes that bug.

```
Does the provider: amazon have any changes apart from 'doc-only'?
Press y/N/q: y

Define the type of change for `Fix treatment of ""#"" in S3Hook.parse_s3_url() (https://github.com/apache/airflow/pull/41796)` by referring to the above table
Type of change (b)ugfix, (f)eature, (x)breaking change, (m)misc, (s)kip, (q)uit ? m


Define the type of change for `airflow.models.taskinstance deprecations removed (https://github.com/apache/airflow/pull/41784)` by referring to the above table
Type of change (b)ugfix, (f)eature, (x)breaking change, (m)misc, (s)kip, (q)uit ? m


Define the type of change for `remove soft_fail part2 (https://github.com/apache/airflow/pull/41727)` by referring to the above table
Type of change (b)ugfix, (f)eature, (x)breaking change, (m)misc, (s)kip, (q)uit ? m


Define the type of change for `remove soft_fail (https://github.com/apache/airflow/pull/41710)` by referring to the above table
Type of change (b)ugfix, (f)eature, (x)breaking change, (m)misc, (s)kip, (q)uit ? m


Define the type of change for `fix: select_query should have precedence over default query in RedshiftToS3Operator (https://github.com/apache/airflow/pull/41634)` by referring to the above table
Type of change (b)ugfix, (f)eature, (x)breaking change, (m)misc, (s)kip, (q)uit ? m


Define the type of change for `fix: remove part of openlineage extraction from S3ToRedshiftOperator (https://github.com/apache/airflow/pull/41631)` by referring to the above table
Type of change (b)ugfix, (f)eature, (x)breaking change, (m)misc, (s)kip, (q)uit ? m


Define the type of change for `filename template arg in providers file task handlers backward compitability support (https://github.com/apache/airflow/pull/41633)` by referring to the above table
Type of change (b)ugfix, (f)eature, (x)breaking change, (m)misc, (s)kip, (q)uit ? m


Define the type of change for `Limit watchtower as depenendcy as 3.3.0 breaks moin. (https://github.com/apache/airflow/pull/41612)` by referring to the above table
Type of change (b)ugfix, (f)eature, (x)breaking change, (m)misc, (s)kip, (q)uit ? m


Define the type of change for `Remove deprecated log handler argument filename_template (https://github.com/apache/airflow/pull/41552)` by referring to the above table
Type of change (b)ugfix, (f)eature, (x)breaking change, (m)misc, (s)kip, (q)uit ? m


Define the type of change for `Openlineage s3 to redshift operator integration (https://github.com/apache/airflow/pull/41575)` by referring to the above table
Type of change (b)ugfix, (f)eature, (x)breaking change, (m)misc, (s)kip, (q)uit ? m

The version will be bumped because of TypeOfChange.MISC kind of change
Provider amazon has been classified as:

Miscellaneous changes - bump in PATCHLEVEL version needed

Bumped version to 8.28.1
```

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",amoghrajesh,2024-08-30 06:30:40+00:00,[],2024-08-30 10:22:48+00:00,2024-08-30 10:22:48+00:00,https://github.com/apache/airflow/pull/41875,"[('area:dev-tools', '')]",[],
2496356728,pull_request,closed,,Handle Example dags case when checking for missing files (#41856),"Earlier PR create to address the issue was not handling the case for the Example Dags, due to which the example dags were marked as stale since they are not present in the dag_directory. This PR handles that scenarios and update the testcase accordingly.

related: #41432
(cherry picked from commit 435e9687b0c56499bc29c21d3cada8ae9e0a8c53)",utkarsharma2,2024-08-30 06:29:28+00:00,[],2024-08-30 11:32:39+00:00,2024-08-30 07:15:19+00:00,https://github.com/apache/airflow/pull/41874,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2320301528, 'issue_id': 2496356728, 'author': 'shahar1', 'body': 'Note: This PR backports #41856 to `v2-10-test`', 'created_at': datetime.datetime(2024, 8, 30, 7, 14, 3, tzinfo=datetime.timezone.utc)}]","shahar1 on (2024-08-30 07:14:03 UTC): Note: This PR backports #41856 to `v2-10-test`

"
2496298195,pull_request,closed,,Adding tojson filter to example_inlet_event_extra example dag,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",amoghrajesh,2024-08-30 05:49:01+00:00,[],2024-08-30 12:50:00+00:00,2024-08-30 12:44:25+00:00,https://github.com/apache/airflow/pull/41873,"[('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2320190144, 'issue_id': 2496298195, 'author': 'uranusjr', 'body': 'Why? I feel it’s not a bad idea to show how this can be used in a Jinja template.', 'created_at': datetime.datetime(2024, 8, 30, 6, 18, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2320263285, 'issue_id': 2496298195, 'author': 'amoghrajesh', 'body': '> Why? I feel it’s not a bad idea to show how this can be used in a Jinja template.\r\n\r\nUpdated the PR based on our discussion offline', 'created_at': datetime.datetime(2024, 8, 30, 6, 56, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2320353487, 'issue_id': 2496298195, 'author': 'shahar1', 'body': '> > Why? I feel it’s not a bad idea to show how this can be used in a Jinja template.\r\n> \r\n> Updated the PR based on our discussion offline\r\n\r\nCould you please backport to `v2-10-test`?', 'created_at': datetime.datetime(2024, 8, 30, 7, 36, 43, tzinfo=datetime.timezone.utc)}]","uranusjr on (2024-08-30 06:18:54 UTC): Why? I feel it’s not a bad idea to show how this can be used in a Jinja template.

amoghrajesh (Issue Creator) on (2024-08-30 06:56:17 UTC): Updated the PR based on our discussion offline

shahar1 on (2024-08-30 07:36:43 UTC): Could you please backport to `v2-10-test`?

"
2496134023,pull_request,open,,Fix 'NoneType' object has no attribute 'has_task',"Fix 'NoneType' object has no attribute 'has_task'

I got an error, somehow refreshed_dag_info is null

![image](https://github.com/user-attachments/assets/3cdc7bc2-50dc-4ea5-aee9-4029899ed1ff)


<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",nvn01234,2024-08-30 03:27:06+00:00,[],2024-12-26 17:50:32+00:00,,https://github.com/apache/airflow/pull/41872,"[('area:core-operators', 'Operators, Sensors and hooks within Core Airflow')]","[{'comment_id': 2319911665, 'issue_id': 2496134023, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 8, 30, 3, 27, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2319938685, 'issue_id': 2496134023, 'author': 'uranusjr', 'body': 'Can you add a test for this?', 'created_at': datetime.datetime(2024, 8, 30, 3, 38, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2552512222, 'issue_id': 2496134023, 'author': 'github-actions[bot]', 'body': 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.', 'created_at': datetime.datetime(2024, 12, 19, 0, 16, 16, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-08-30 03:27:10 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

uranusjr on (2024-08-30 03:38:31 UTC): Can you add a test for this?

github-actions[bot] on (2024-12-19 00:16:16 UTC): This pull request has been automatically marked as stale because it has not had recent activity. It will be closed in 5 days if no further activity occurs. Thank you for your contributions.

"
2495985812,pull_request,closed,,Fix ElasticSearch SQLClient deprecation warning,"After the merge of this [PR](https://github.com/apache/airflow/pull/41537), the import of `SQLClient` has resulted in a deprecation warning (when being used for remote logging) :

https://github.com/elastic/elasticsearch-py/blob/4ee46509e236bf30f540d173b48bb7650159556d/elasticsearch/client.py#L75-L80

So this PR fixes the warning by using the SQL Interface inside a elasaticsearch client (So importing SQLClient is no longer needed)",Owen-CH-Leung,2024-08-30 02:12:59+00:00,[],2024-09-01 01:15:44+00:00,2024-09-01 01:15:44+00:00,https://github.com/apache/airflow/pull/41871,"[('area:providers', ''), ('provider:elasticsearch', '')]",[],
2495908398,pull_request,closed,,Remove state sync during celery task processing,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->

An Airflow scheduler performance test highlighted a very hot piece of code in the celery executor when using a database results backend. This code seemed to be doing redundant work. Below is a flamegraph of the airflow scheduler process captured by a statistical profiler ([py-spy](https://github.com/benfred/py-spy)) during a period of heavy load (4000 tasks required scheduling). 

![Screenshot 2024-08-23 at 2 02 00 AM](https://github.com/user-attachments/assets/0279bdf2-1e27-4599-abf6-b59a0a6b3d45)

During this 1 minute profiler session, the scheduler spent 42% of it's time on nested within [this line](https://github.com/apache/airflow/blob/main/airflow/providers/celery/executors/celery_executor.py#L304) of code. The reason this code is so hot is that when using celery with a database results backend, celery [will not pool database connections](https://github.com/celery/celery/blob/main/celery/backends/database/session.py#L43-L53) (unless process is forked) and thus a new db connection must be established for each task in the loop. This is very expensive and scales with number of tasks. We can see from flame graph most of the time is spent creating a database connection. 

The solution put forth in this PR is to remove this operation entirely from the _process_tasks function. This is based on the justification that immediately after the celery executor processes tasks, the [sync method of the celery executor will be called by its parent base executor](https://github.com/apache/airflow/blob/main/airflow/executors/base_executor.py#L241-L245) to sync task state. In my view, this renders this line of code redundant. 

When calling sync, the celery executor [makes use of batch fetching](https://github.com/apache/airflow/blob/main/airflow/providers/celery/executors/celery_executor.py#L340) and thus is more optimized.

Some additional deployment details
```
Airflow Version: 2.9.2
Python Version: 3.11
Platform: Amazon MWAA
Celery results backend: PostgreSQL
Celery broker: Amazon SQS
```

<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",Kytha,2024-08-30 00:50:56+00:00,[],2024-10-02 00:46:19+00:00,2024-10-02 00:46:16+00:00,https://github.com/apache/airflow/pull/41870,"[('area:providers', ''), ('provider:celery', '')]","[{'comment_id': 2319577802, 'issue_id': 2495908398, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 8, 30, 0, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322180710, 'issue_id': 2495908398, 'author': 'eladkal', 'body': ""Nice analysis. Though I think we need to check why this code is there to begin with, there may be a reason we are missing.\r\n\r\nAlso, this fix is based on the assumption:\r\n\r\n> immediately after the celery executor processes tasks, the sync method of the celery executor will be called by its parent base executor to sync task state\r\n\r\nIf we accept it I think we need a test to make sure this stay that way and won't be changed with future PRs"", 'created_at': datetime.datetime(2024, 8, 30, 19, 10, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323080871, 'issue_id': 2495908398, 'author': 'potiuk', 'body': 'It\'s an interesting one. And yeah - nice analysis @Kytha ! \r\n\r\nLooks like the original code was supposed to handle ""quick"" tasks - but It did not take into account that - apparently - in order to check if result is available, celery will indeed make a db call for EVERY async result - no matter what state the task is - whether it is submitted, running, or completec.. That\'s a very nasty side-effect if that\'s confirmed.\r\n\r\nBut I\'d be rather suprised to see such ""huge"" inefficiency of this check - I imagine it would have been found already if that was a ""general"" problem. \r\n\r\n@Kytha - question - was your pyspy testing done with ""real"" tasks or ones that were doing nothing (i.e. pass-only tasks or similar)? \r\n\r\nOne possible reason why you might see that bad numbers beccause you have a very quick (`pass`) celery tasks and some of them manage to complete very quickly (but I do not know celery internals).\r\n\r\nIt would be rather inefficient way of checking if task completed by calling a DB for every single task. I Intuitively would imagine that celery should **not** call the DB if task did not complete yet (but maybe this is how it is implemented and there is no other side-communication to check it).  I\'d imagine you need to retrieve the result from the DB when task completed, because of persistency and recovery, but if the task is still ""running"" - I hardly see the need to reach out to the result backend (I imagine celery could check in the queue if the task was picked up and acknowledged way faster - without reaching out to the backend). \r\n\r\nOne reason why you would see so big ""percentage"" of time there is that you made the tests with ""pass-only"" celery tasks and quite a big number of those tasks manage to complete before the check happens (but this is just a hypothesis).\r\n\r\nCan you please elaborate on that ?', 'created_at': datetime.datetime(2024, 9, 1, 0, 13, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2323093079, 'issue_id': 2495908398, 'author': 'potiuk', 'body': 'Also another question: \r\n\r\nhttps://airflow.apache.org/docs/apache-airflow-providers-celery/stable/configurations-ref.html#result-backend-sqlalchemy-engine-options -> there is also a possible pool configuration, so celery backend can use pooling. As you mentioned NullPool is used only when process is not forked. But.... what does it mean that process is not forked and is the case in case of task submitssion and checking result? \r\n\r\nAgain - I am not that deep into celery interface -  but I think the code you pointed at is called only on the side of worker (i.e. when worker wants to write status to the result backend) but it\'s not the same code that is used on a client side when the tasks are submitted and queried for status. Maybe there is another reason why in your case pooling connections are not used. \r\n\r\nAlso - another question - are you using pgbouncer for your result backend? Because, I believe this might be the actual root cause of the overhead. It\'s indeed quite slow to open and close a connection to a postgres database directly - because it needs to fork a new process and reserve some memory - but if you have pgbouncer on a local nettwork, opening and closing a connection to the bgbounder instance should be super-quick - because pgbouncer does ""real"" DB connection pooling in this case. And PGBouncer is absolutely recommended for all ""serious"" Airlfow installations on Postgres.\r\n\r\nSo even if ""NullPool"" is used in this case - that should be fine because in fact NullPool is even recommended if you have PGBouncer - for single-threaded programs: https://dba.stackexchange.com/questions/36828/how-to-best-use-connection-pooling-in-sqlalchemy-for-pgbouncer-transaction-level/118105#118105 and many other places.\r\n\r\nI am not against this change, however I think we need to understand better where the ""huge"" inefficiency you noticed comes from - I\'d really find it quite strange to see it after so many years of Airlfow using celery in multiple - even huge - installation for it to be unnoticed, so I suspect what you see is a result of some environmental setup that simply ""boosts"" the hotness of that code artifficially.', 'created_at': datetime.datetime(2024, 9, 1, 0, 46, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2329988688, 'issue_id': 2495908398, 'author': 'Kytha', 'body': ""> Nice analysis. Though I think we need to check why this code is there to begin with, there may be a reason we are missing.\r\n> \r\n> Also, this fix is based on the assumption:\r\n> \r\n> > immediately after the celery executor processes tasks, the sync method of the celery executor will be called by its parent base executor to sync task state\r\n> \r\n> If we accept it I think we need a test to make sure this stay that way and won't be changed with future PRs\r\n\r\nMy search into why this was added didn't yield much insight. It was added in #10949, but never directly addressed or explained beyond the original comment that was left. The PR generally seems to be separate changes related to task adoption.\r\n\r\nI also agree, I can add a test to prevent regression of this assumption."", 'created_at': datetime.datetime(2024, 9, 4, 20, 49, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2330164674, 'issue_id': 2495908398, 'author': 'Kytha', 'body': '@potiuk Thanks for in-depth review. I\'ll try to clarify a few things here. \r\n\r\nFor my test I was using \'dummy\' tasks that would sleep for 1 minute each (4000 DAGs, 2 parallel tasks each, scheduled every 5 minutes).\r\n\r\nAlso, the profiler results and stats attached is only a 1-minute sample from the runtime. I did take many samples and saw a similar trend, however mileage will definitely vary based on speed of db connection, number of concurrent tasks, etc.\r\n\r\n> I hardly see the need to reach out to the result backend (I imagine celery could check in the queue if the task was picked up and acknowledged way faster - without reaching out to the backend).\r\n\r\nI am not sure if I follow the logic here. From my understanding, the results backend **is** the mechanism the executor uses to determine the state of a task. Therefore, it would be a requirement to query the results backend to get the status. I think the problem here is that this is not done in batch (like it is during the [normal executor sync](https://github.com/apache/airflow/blob/main/airflow/providers/celery/executors/celery_executor.py#L324)). It seems to me this was a simple oversight when adding this seemingly innocent line, which under-the-hood requires to 2 db connections to backend for `result.state` and `getattr(result, ""info"", None)` due to lack of celery pooling.', 'created_at': datetime.datetime(2024, 9, 4, 21, 19, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2330190525, 'issue_id': 2495908398, 'author': 'Kytha', 'body': '>here is also a possible pool configuration, so celery backend can use pooling. As you mentioned NullPool is used only when process is not forked. But.... what does it mean that process is not forked and is the case in case of task submitssion and checking result?\r\n\r\nYeah, so unfortunately celery will override any pooling config provided here if the process is not forked. Meaning that the python process needs to have made a call to os.fork() prior to calling get_engine.  ([this](https://github.com/celery/celery/blob/main/celery/backends/database/session.py#L25) is the celery callback that will execute once process is forked). In the case of the scheduler, it is not a forked process. For workers, [this would be the case](https://github.com/apache/airflow/blob/28e7213a9fab7d34e9f13b0f50bcc9cf8b80158c/airflow/providers/celery/executors/celery_executor_utils.py#L135) (for default airflow config). This means for the scheduler, celery is [creating a new engine every time get_engine is called](https://github.com/celery/celery/blob/main/celery/backends/database/session.py#L53).', 'created_at': datetime.datetime(2024, 9, 4, 21, 38, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2330216618, 'issue_id': 2495908398, 'author': 'Kytha', 'body': '> are you using pgbouncer for your result backend? Because, I believe this might be the actual root cause of the overhead\r\n\r\nFor my airflow setup, I am not using PGbouncer, but I am using RDS Proxy for database connection pooling. \r\n\r\nI can understand the logic behind using NullPool if there is a database proxy in place, but in this case celery is [creating a new engine for every query](https://github.com/celery/celery/blob/main/celery/backends/database/session.py#L53), which the stackoverflow issue linked advising against, due to the increased overhead.', 'created_at': datetime.datetime(2024, 9, 4, 21, 59, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2330243204, 'issue_id': 2495908398, 'author': 'Kytha', 'body': '> so I suspect what you see is a result of some environmental setup that simply ""boosts"" the hotness of that code artifficially\r\n\r\nFor additional clarity, here is some relevant airflow config options used during the testing.\r\n\r\n```\r\nAIRFLOW__SCHEDULER__CATCHUP_BY_DEFAULT=false\r\n\r\nAIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=false\r\n\r\nAIRFLOW__CORE__DAG_FILE_PROCESSOR_TIMEOUT=320\r\n\r\nAIRFLOW__SCHEDULER__MAX_DAGRUNS_PER_LOOP_TO_SCHEDULE=100\r\n\r\nAIRFLOW__SCHEDULER__MAX_DAGRUNS_TO_CREATE_PER_LOOP=100\r\n\r\nAIRFLOW__SCHEDULER__MAX_TIS_PER_QUERY=64\r\n\r\nAIRFLOW__CORE__PARALLELISM=2000\r\n\r\nAIRFLOW__CORE__DEFAULT_POOL_TASK_SLOT_COUNT=2000\r\n\r\nAIRFLOW__DATABASE__SQL_ALCHEMY_POOL_ENABLED=True\r\n\r\nAIRFLOW__SCHEDULER__SCHEDULE_AFTER_TASK_EXECUTION=False\r\n\r\nAIRFLOW__SCHEDULER__SCHEDULER_IDLE_SLEEP_TIME=0\r\n\r\nAIRFLOW__CORE__LAZY_LOAD_PLUGINS=False\r\n```', 'created_at': datetime.datetime(2024, 9, 4, 22, 11, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2330277174, 'issue_id': 2495908398, 'author': 'potiuk', 'body': ""Yeah. I am convinced, but @ashb - maybe you do remember (though it's 4 years agao) why this line was added here https://github.com/apache/airflow/pull/10949 (see the description of the issue - it has a very nice explanation)."", 'created_at': datetime.datetime(2024, 9, 4, 22, 44, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2359453012, 'issue_id': 2495908398, 'author': 'o-nikolas', 'body': '@ashb Just another ping post Airflow Summit, do you want to weigh in? Or shall we go ahead and merge this?', 'created_at': datetime.datetime(2024, 9, 18, 21, 39, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387357244, 'issue_id': 2495908398, 'author': 'potiuk', 'body': ""Ok. Let me merge it then - there does not seem to be a good reason for it, no answer from those who can remember, let's just merge it."", 'created_at': datetime.datetime(2024, 10, 2, 0, 46, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2387357368, 'issue_id': 2495908398, 'author': 'boring-cyborg[bot]', 'body': 'Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.', 'created_at': datetime.datetime(2024, 10, 2, 0, 46, 18, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-08-30 00:51:00 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

eladkal on (2024-08-30 19:10:54 UTC): Nice analysis. Though I think we need to check why this code is there to begin with, there may be a reason we are missing.

Also, this fix is based on the assumption:


If we accept it I think we need a test to make sure this stay that way and won't be changed with future PRs

potiuk on (2024-09-01 00:13:16 UTC): It's an interesting one. And yeah - nice analysis @Kytha ! 

Looks like the original code was supposed to handle ""quick"" tasks - but It did not take into account that - apparently - in order to check if result is available, celery will indeed make a db call for EVERY async result - no matter what state the task is - whether it is submitted, running, or completec.. That's a very nasty side-effect if that's confirmed.

But I'd be rather suprised to see such ""huge"" inefficiency of this check - I imagine it would have been found already if that was a ""general"" problem. 

@Kytha - question - was your pyspy testing done with ""real"" tasks or ones that were doing nothing (i.e. pass-only tasks or similar)? 

One possible reason why you might see that bad numbers beccause you have a very quick (`pass`) celery tasks and some of them manage to complete very quickly (but I do not know celery internals).

It would be rather inefficient way of checking if task completed by calling a DB for every single task. I Intuitively would imagine that celery should **not** call the DB if task did not complete yet (but maybe this is how it is implemented and there is no other side-communication to check it).  I'd imagine you need to retrieve the result from the DB when task completed, because of persistency and recovery, but if the task is still ""running"" - I hardly see the need to reach out to the result backend (I imagine celery could check in the queue if the task was picked up and acknowledged way faster - without reaching out to the backend). 

One reason why you would see so big ""percentage"" of time there is that you made the tests with ""pass-only"" celery tasks and quite a big number of those tasks manage to complete before the check happens (but this is just a hypothesis).

Can you please elaborate on that ?

potiuk on (2024-09-01 00:46:54 UTC): Also another question: 

https://airflow.apache.org/docs/apache-airflow-providers-celery/stable/configurations-ref.html#result-backend-sqlalchemy-engine-options -> there is also a possible pool configuration, so celery backend can use pooling. As you mentioned NullPool is used only when process is not forked. But.... what does it mean that process is not forked and is the case in case of task submitssion and checking result? 

Again - I am not that deep into celery interface -  but I think the code you pointed at is called only on the side of worker (i.e. when worker wants to write status to the result backend) but it's not the same code that is used on a client side when the tasks are submitted and queried for status. Maybe there is another reason why in your case pooling connections are not used. 

Also - another question - are you using pgbouncer for your result backend? Because, I believe this might be the actual root cause of the overhead. It's indeed quite slow to open and close a connection to a postgres database directly - because it needs to fork a new process and reserve some memory - but if you have pgbouncer on a local nettwork, opening and closing a connection to the bgbounder instance should be super-quick - because pgbouncer does ""real"" DB connection pooling in this case. And PGBouncer is absolutely recommended for all ""serious"" Airlfow installations on Postgres.

So even if ""NullPool"" is used in this case - that should be fine because in fact NullPool is even recommended if you have PGBouncer - for single-threaded programs: https://dba.stackexchange.com/questions/36828/how-to-best-use-connection-pooling-in-sqlalchemy-for-pgbouncer-transaction-level/118105#118105 and many other places.

I am not against this change, however I think we need to understand better where the ""huge"" inefficiency you noticed comes from - I'd really find it quite strange to see it after so many years of Airlfow using celery in multiple - even huge - installation for it to be unnoticed, so I suspect what you see is a result of some environmental setup that simply ""boosts"" the hotness of that code artifficially.

Kytha (Issue Creator) on (2024-09-04 20:49:06 UTC): My search into why this was added didn't yield much insight. It was added in #10949, but never directly addressed or explained beyond the original comment that was left. The PR generally seems to be separate changes related to task adoption.

I also agree, I can add a test to prevent regression of this assumption.

Kytha (Issue Creator) on (2024-09-04 21:19:05 UTC): @potiuk Thanks for in-depth review. I'll try to clarify a few things here. 

For my test I was using 'dummy' tasks that would sleep for 1 minute each (4000 DAGs, 2 parallel tasks each, scheduled every 5 minutes).

Also, the profiler results and stats attached is only a 1-minute sample from the runtime. I did take many samples and saw a similar trend, however mileage will definitely vary based on speed of db connection, number of concurrent tasks, etc.


I am not sure if I follow the logic here. From my understanding, the results backend **is** the mechanism the executor uses to determine the state of a task. Therefore, it would be a requirement to query the results backend to get the status. I think the problem here is that this is not done in batch (like it is during the [normal executor sync](https://github.com/apache/airflow/blob/main/airflow/providers/celery/executors/celery_executor.py#L324)). It seems to me this was a simple oversight when adding this seemingly innocent line, which under-the-hood requires to 2 db connections to backend for `result.state` and `getattr(result, ""info"", None)` due to lack of celery pooling.

Kytha (Issue Creator) on (2024-09-04 21:38:02 UTC): Yeah, so unfortunately celery will override any pooling config provided here if the process is not forked. Meaning that the python process needs to have made a call to os.fork() prior to calling get_engine.  ([this](https://github.com/celery/celery/blob/main/celery/backends/database/session.py#L25) is the celery callback that will execute once process is forked). In the case of the scheduler, it is not a forked process. For workers, [this would be the case](https://github.com/apache/airflow/blob/28e7213a9fab7d34e9f13b0f50bcc9cf8b80158c/airflow/providers/celery/executors/celery_executor_utils.py#L135) (for default airflow config). This means for the scheduler, celery is [creating a new engine every time get_engine is called](https://github.com/celery/celery/blob/main/celery/backends/database/session.py#L53).

Kytha (Issue Creator) on (2024-09-04 21:59:20 UTC): For my airflow setup, I am not using PGbouncer, but I am using RDS Proxy for database connection pooling. 

I can understand the logic behind using NullPool if there is a database proxy in place, but in this case celery is [creating a new engine for every query](https://github.com/celery/celery/blob/main/celery/backends/database/session.py#L53), which the stackoverflow issue linked advising against, due to the increased overhead.

Kytha (Issue Creator) on (2024-09-04 22:11:59 UTC): For additional clarity, here is some relevant airflow config options used during the testing.

```
AIRFLOW__SCHEDULER__CATCHUP_BY_DEFAULT=false

AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=false

AIRFLOW__CORE__DAG_FILE_PROCESSOR_TIMEOUT=320

AIRFLOW__SCHEDULER__MAX_DAGRUNS_PER_LOOP_TO_SCHEDULE=100

AIRFLOW__SCHEDULER__MAX_DAGRUNS_TO_CREATE_PER_LOOP=100

AIRFLOW__SCHEDULER__MAX_TIS_PER_QUERY=64

AIRFLOW__CORE__PARALLELISM=2000

AIRFLOW__CORE__DEFAULT_POOL_TASK_SLOT_COUNT=2000

AIRFLOW__DATABASE__SQL_ALCHEMY_POOL_ENABLED=True

AIRFLOW__SCHEDULER__SCHEDULE_AFTER_TASK_EXECUTION=False

AIRFLOW__SCHEDULER__SCHEDULER_IDLE_SLEEP_TIME=0

AIRFLOW__CORE__LAZY_LOAD_PLUGINS=False
```

potiuk on (2024-09-04 22:44:39 UTC): Yeah. I am convinced, but @ashb - maybe you do remember (though it's 4 years agao) why this line was added here https://github.com/apache/airflow/pull/10949 (see the description of the issue - it has a very nice explanation).

o-nikolas on (2024-09-18 21:39:52 UTC): @ashb Just another ping post Airflow Summit, do you want to weigh in? Or shall we go ahead and merge this?

potiuk on (2024-10-02 00:46:12 UTC): Ok. Let me merge it then - there does not seem to be a good reason for it, no answer from those who can remember, let's just merge it.

boring-cyborg[bot] on (2024-10-02 00:46:18 UTC): Awesome work, congrats on your first merged pull request! You are invited to check our [Issue Tracker](https://github.com/apache/airflow/issues) for additional contributions.

"
2495342113,pull_request,closed,,Kubernetes Pod Operator: check pod completion reason if completed during deffered logging interval,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
closes #41867

This is to fix a bug in the Kubernetes pod operator where if the task wakes up from a deferred state to collect logs.  If the task completes during that time then operator won't defer it again, however it also doesn't evaluate the reason for the completion, so if the pod ends in an error, it will still be marked as successful.

The fix here is to always defer when the task resumes while the pod is in a running state, so that the next resume will notice the pod exit and act accordingly, however alternatively we could check the pod exit state and skip the deferment.  I'm happy to amend the PR if this is preferred.",johnhoran,2024-08-29 19:08:30+00:00,[],2024-10-18 13:28:27+00:00,2024-10-18 13:28:27+00:00,https://github.com/apache/airflow/pull/41868,"[('area:providers', ''), ('provider:cncf-kubernetes', 'Kubernetes provider related issues')]","[{'comment_id': 2318663768, 'issue_id': 2495342113, 'author': 'boring-cyborg[bot]', 'body': ""Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)\nHere are some useful points:\n- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.\n- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.\n- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.\n- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.\n- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.\n- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).\n- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.\nApache Airflow is a community-driven project and together we are making it better 🚀.\nIn case of doubts contact the developers at:\nMailing List: dev@airflow.apache.org\nSlack: https://s.apache.org/airflow-slack"", 'created_at': datetime.datetime(2024, 8, 29, 19, 8, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2319043915, 'issue_id': 2495342113, 'author': 'dstandish', 'body': 'Yeah I think it\'s best to avoid the unnecessariy defer / resume cycle.  seems you could refactor the logic under the `if event[""status""] in (""error"", ""failed"", ""timeout"")` block into a method and invoke it in the case you describe. Or something like that.  But, wasteful to go through a another defer-resume cycle.', 'created_at': datetime.datetime(2024, 8, 29, 21, 27, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2321941605, 'issue_id': 2495342113, 'author': 'johnhoran', 'body': ""@dstandish thanks, I've refactored the code slightly so it will run the success or failure section if the pod completes without deferring again."", 'created_at': datetime.datetime(2024, 8, 30, 16, 42, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2322261585, 'issue_id': 2495342113, 'author': 'RNHTTR', 'body': '@johnhoran Can you please fix the failing tests?', 'created_at': datetime.datetime(2024, 8, 30, 20, 8, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2327219191, 'issue_id': 2495342113, 'author': 'johnhoran', 'body': ""> Can you please fix the failing tests?\r\n\r\n@RNHTTR all resolved now, I've also added a test case which would have failed if the failure status wasn't handled."", 'created_at': datetime.datetime(2024, 9, 3, 19, 3, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2422479997, 'issue_id': 2495342113, 'author': 'johnhoran', 'body': 'Looks like this was resolved by https://github.com/apache/airflow/pull/42815', 'created_at': datetime.datetime(2024, 10, 18, 13, 28, 22, tzinfo=datetime.timezone.utc)}]","boring-cyborg[bot] on (2024-08-29 19:08:34 UTC): Congratulations on your first Pull Request and welcome to the Apache Airflow community! If you have any issues or are unsure about any anything please check our Contributors' Guide (https://github.com/apache/airflow/blob/main/contributing-docs/README.rst)
Here are some useful points:
- Pay attention to the quality of your code (ruff, mypy and type annotations). Our [pre-commits]( https://github.com/apache/airflow/blob/main/contributing-docs/08_static_code_checks.rst#prerequisites-for-pre-commit-hooks) will help you with that.
- In case of a new feature add useful documentation (in docstrings or in `docs/` directory). Adding a new operator? Check this short [guide](https://github.com/apache/airflow/blob/main/docs/apache-airflow/howto/custom-operator.rst) Consider adding an example DAG that shows how users should use it.
- Consider using [Breeze environment](https://github.com/apache/airflow/blob/main/dev/breeze/doc/README.rst) for testing locally, it's a heavy docker but it ships with a working Airflow and a lot of integrations.
- Be patient and persistent. It might take some time to get a review or get the final approval from Committers.
- Please follow [ASF Code of Conduct](https://www.apache.org/foundation/policies/conduct) for all communication including (but not limited to) comments on Pull Requests, Mailing list and Slack.
- Be sure to read the [Airflow Coding style]( https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#coding-style-and-best-practices).
- Always keep your Pull Requests rebased, otherwise your build might fail due to changes not related to your commits.
Apache Airflow is a community-driven project and together we are making it better 🚀.
In case of doubts contact the developers at:
Mailing List: dev@airflow.apache.org
Slack: https://s.apache.org/airflow-slack

dstandish on (2024-08-29 21:27:10 UTC): Yeah I think it's best to avoid the unnecessariy defer / resume cycle.  seems you could refactor the logic under the `if event[""status""] in (""error"", ""failed"", ""timeout"")` block into a method and invoke it in the case you describe. Or something like that.  But, wasteful to go through a another defer-resume cycle.

johnhoran (Issue Creator) on (2024-08-30 16:42:15 UTC): @dstandish thanks, I've refactored the code slightly so it will run the success or failure section if the pod completes without deferring again.

RNHTTR on (2024-08-30 20:08:36 UTC): @johnhoran Can you please fix the failing tests?

johnhoran (Issue Creator) on (2024-09-03 19:03:02 UTC): @RNHTTR all resolved now, I've also added a test case which would have failed if the failure status wasn't handled.

johnhoran (Issue Creator) on (2024-10-18 13:28:22 UTC): Looks like this was resolved by https://github.com/apache/airflow/pull/42815

"
2495029992,pull_request,closed,,Adding DAG import error stack trace as span event in OTEL traces for Airflow,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

closes: #41863 

# Overview
This PR implements the enhancement proposed by #41863 .

Currently, in OTEL traces for Airflow, the Dag file process manger will produce a span that will tell you which DAG file has import error (import error count), but does not currently contain any details of why the import error happened (e.g. stack trace). When the file processor processes DAG file, it produces stack trace and store into database, which can later be accessed.

# What's enhanced
When the dag file process manager encounters import error, it will produce span event containing the relative stack trace so that user does not have to navigate into Airflow UI to see the import error separately. The user will be able to check which DAG file caused it, along with type, name, and exception stack trace.",howardyoo,2024-08-29 16:34:14+00:00,[],2024-08-31 05:38:27+00:00,2024-08-30 16:25:13+00:00,https://github.com/apache/airflow/pull/41865,"[('area:Scheduler', 'including HA (high availability) scheduler')]",[],
2494936229,pull_request,closed,,Bump webpack from 5.76.0 to 5.94.0 in /airflow/www,"Bumps [webpack](https://github.com/webpack/webpack) from 5.76.0 to 5.94.0.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/webpack/webpack/releases"">webpack's releases</a>.</em></p>
<blockquote>
<h2>v5.94.0</h2>
<h2>Bug Fixes</h2>
<ul>
<li>Added runtime condition for harmony reexport checked</li>
<li>Handle properly <code>data</code>/<code>http</code>/<code>https</code> protocols in source maps</li>
<li>Make <code>bigint</code> optimistic when browserslist not found</li>
<li>Move <code>@​types/eslint-scope</code> to dev deps</li>
<li>Related in asset stats is now always an array when no related found</li>
<li>Handle ASI for export declarations</li>
<li>Mangle destruction incorrect with export named default properly</li>
<li>Fixed unexpected asi generation with sequence expression</li>
<li>Fixed a lot of types</li>
</ul>
<h2>New Features</h2>
<ul>
<li>Added new external type &quot;module-import&quot;</li>
<li>Support <code>webpackIgnore</code> for <code>new URL()</code> construction</li>
<li>[CSS] <code>@import</code> pathinfo support</li>
</ul>
<h2>Security</h2>
<ul>
<li>Fixed DOM clobbering in auto public path</li>
</ul>
<h2>v5.93.0</h2>
<h2>Bug Fixes</h2>
<ul>
<li>Generate correct relative path to runtime chunks</li>
<li>Makes <code>DefinePlugin</code> quieter under default log level</li>
<li>Fixed mangle destructuring default in namespace import</li>
<li>Fixed consumption of eager shared modules for module federation</li>
<li>Strip slash for pretty regexp</li>
<li>Calculate correct contenthash for CSS generator options</li>
</ul>
<h2>New Features</h2>
<ul>
<li>Added the <code>binary</code> generator option for asset modules to explicitly keep source maps produced by loaders</li>
<li>Added the <code>modern-module</code> library value for tree shakable output</li>
<li>Added the <code>overrideStrict</code> option to override strict or non-strict mode for javascript modules</li>
</ul>
<h2>v5.92.1</h2>
<h2>Bug Fixes</h2>
<ul>
<li>Doesn't crash with an error when the css experiment is enabled and contenthash is used</li>
</ul>
<h2>v5.92.0</h2>
<h2>Bug Fixes</h2>
<ul>
<li>Correct tidle range's comutation for module federation</li>
<li>Consider runtime for pure expression dependency update hash</li>
<li>Return value in the <code>subtractRuntime</code> function for runtime logic</li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/webpack/webpack/commit/eabf85d8580dfcb876b56957ba5488222a4f7873""><code>eabf85d</code></a> chore(release): 5.94.0</li>
<li><a href=""https://github.com/webpack/webpack/commit/955e057abc6cc83cbc3fa1e1ef67a49758bf5a61""><code>955e057</code></a> security: fix DOM clobbering in auto public path</li>
<li><a href=""https://github.com/webpack/webpack/commit/98223873625a029b9903d5ec6c0235b8f9fb5a66""><code>9822387</code></a> test: fix</li>
<li><a href=""https://github.com/webpack/webpack/commit/cbb86ede32ab53d8eade6efee30da2463f0082ec""><code>cbb86ed</code></a> test: fix</li>
<li><a href=""https://github.com/webpack/webpack/commit/5ac3d7f2cdce6da63a8dfb07e9dbbd95756bf7a2""><code>5ac3d7f</code></a> fix: unexpected asi generation with sequence expression</li>
<li><a href=""https://github.com/webpack/webpack/commit/2411661bd1bedf1b2efc23c76d595c189425d39f""><code>2411661</code></a> security: fix DOM clobbering in auto public path</li>
<li><a href=""https://github.com/webpack/webpack/commit/b8c03d47726a57e0dc6ba58b4f96f0e81b168268""><code>b8c03d4</code></a> fix: unexpected asi generation with sequence expression</li>
<li><a href=""https://github.com/webpack/webpack/commit/f46a03ccbc2b96ff3552642fea0d7402f7880865""><code>f46a03c</code></a> revert: do not use heuristic fallback for &quot;module-import&quot;</li>
<li><a href=""https://github.com/webpack/webpack/commit/60f189871a4cdc5d595663d6babadac74f2f6a7d""><code>60f1898</code></a> fix: do not use heuristic fallback for &quot;module-import&quot;</li>
<li><a href=""https://github.com/webpack/webpack/commit/66306aa45659ef4e8dac8226798931c228fdb204""><code>66306aa</code></a> Revert &quot;fix: module-import get fallback from externalsPresets&quot;</li>
<li>Additional commits viewable in <a href=""https://github.com/webpack/webpack/compare/v5.76.0...v5.94.0"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=webpack&package-manager=npm_and_yarn&previous-version=5.76.0&new-version=5.94.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/apache/airflow/network/alerts).

</details>",dependabot[bot],2024-08-29 15:52:46+00:00,[],2024-08-30 09:36:33+00:00,2024-08-29 16:40:13+00:00,https://github.com/apache/airflow/pull/41864,"[('area:webserver', 'Webserver related Issues'), ('type:misc/internal', 'Changelog: Misc changes that should appear in change log'), ('area:UI', 'Related to UI/UX. For Frontend Developers.'), ('area:dependencies', 'Issues related to dependencies problems'), ('javascript', 'Pull requests that update Javascript code')]",[],
2494776216,pull_request,closed,,Use Databricks conn_id from env for DatabricksTaskOperator in system test,"Probably missed this while working on #41700 

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",pankajkoti,2024-08-29 15:06:34+00:00,[],2024-10-01 08:13:44+00:00,2024-08-30 10:17:17+00:00,https://github.com/apache/airflow/pull/41861,"[('area:providers', ''), ('area:system-tests', ''), ('provider:databricks', '')]","[{'comment_id': 2318016605, 'issue_id': 2494776216, 'author': 'pankajkoti', 'body': 'cc: @vatsrahul1001', 'created_at': datetime.datetime(2024, 8, 29, 15, 6, 54, tzinfo=datetime.timezone.utc)}]","pankajkoti (Issue Creator) on (2024-08-29 15:06:54 UTC): cc: @vatsrahul1001

"
2494631112,pull_request,closed,,Refactor test_cli_test_with_deferrable_operator to use caplog,Refactored unit test `test_cli_test_with_deferrable_operator` for better logs catching with the `caplog` fixture.,moiseenkov,2024-08-29 14:20:30+00:00,[],2024-08-29 18:00:30+00:00,2024-08-29 18:00:30+00:00,https://github.com/apache/airflow/pull/41859,"[('area:CLI', '')]",[],
2494377759,pull_request,closed,,Pydantic v2 and FastAPI as core dependency,"As discussed here https://github.com/apache/airflow/pull/41798, pydantic v2 will be part of core requirement now. Mostly because fastapi requires pydantic. Even if fastapi can still (for now) work with pydantic v1, airflow 3 will only support pydantic v2.",pierrejeambrun,2024-08-29 13:00:51+00:00,[],2024-08-29 23:04:59+00:00,2024-08-29 15:52:03+00:00,https://github.com/apache/airflow/pull/41857,"[('area:dev-tools', ''), ('area:serialization', ''), ('area:core-operators', 'Operators, Sensors and hooks within Core Airflow'), ('airflow3.0:breaking', 'Candidates for Airflow 3.0 that contain breaking changes'), ('AIP-84', 'Modern Rest API')]","[{'comment_id': 2317625782, 'issue_id': 2494377759, 'author': 'potiuk', 'body': 'The failing `Test Open API` has been fixed by https://github.com/apache/airflow/pull/41856#issuecomment-2317618682', 'created_at': datetime.datetime(2024, 8, 29, 13, 13, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317633246, 'issue_id': 2494377759, 'author': 'pierrejeambrun', 'body': 'Thanks @potiuk for the tips, rebased.', 'created_at': datetime.datetime(2024, 8, 29, 13, 16, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317768686, 'issue_id': 2494377759, 'author': 'pierrejeambrun', 'body': '🤔 the db tests are still failing due to the unique constraint on dag run failing. Not sure how this is related to pydantic', 'created_at': datetime.datetime(2024, 8, 29, 14, 5, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317802973, 'issue_id': 2494377759, 'author': 'potiuk', 'body': '>  🤔 the db tests are still failing due to the unique constraint on dag run failing. Not sure how this is related to pydantic\r\n\r\nWas just looking at it - when you removed pydantic test, you have not removed all of it - the `run_as_task` is executed twice in the same test now.', 'created_at': datetime.datetime(2024, 8, 29, 14, 14, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317807331, 'issue_id': 2494377759, 'author': 'potiuk', 'body': '<img width=""2459"" alt=""Screenshot 2024-08-29 at 16 14 38"" src=""https://github.com/user-attachments/assets/0219d7a3-dc07-4e1b-8b46-4823a7bf9d82"">', 'created_at': datetime.datetime(2024, 8, 29, 14, 15, 11, tzinfo=datetime.timezone.utc)}]","potiuk on (2024-08-29 13:13:28 UTC): The failing `Test Open API` has been fixed by https://github.com/apache/airflow/pull/41856#issuecomment-2317618682

pierrejeambrun (Issue Creator) on (2024-08-29 13:16:33 UTC): Thanks @potiuk for the tips, rebased.

pierrejeambrun (Issue Creator) on (2024-08-29 14:05:20 UTC): 🤔 the db tests are still failing due to the unique constraint on dag run failing. Not sure how this is related to pydantic

potiuk on (2024-08-29 14:14:14 UTC): Was just looking at it - when you removed pydantic test, you have not removed all of it - the `run_as_task` is executed twice in the same test now.

potiuk on (2024-08-29 14:15:11 UTC): <img width=""2459"" alt=""Screenshot 2024-08-29 at 16 14 38"" src=""https://github.com/user-attachments/assets/0219d7a3-dc07-4e1b-8b46-4823a7bf9d82"">

"
2494142027,pull_request,closed,,Handle Example dags case when checking for missing files,"Earlier [PR](https://github.com/apache/airflow/pull/41829) create to address the [issue](https://github.com/apache/airflow/issues/41432) was not handling the case for the Example Dags, due to which the example dags were marked as stale since they are not present in the dag_directory. This PR handles that scenarios and update the testcase accordingly. 

related: https://github.com/apache/airflow/issues/41432
closes: https://github.com/apache/airflow/pull/41852",utkarsharma2,2024-08-29 11:13:17+00:00,[],2024-08-30 09:23:24+00:00,2024-08-29 13:06:00+00:00,https://github.com/apache/airflow/pull/41856,"[('area:Scheduler', 'including HA (high availability) scheduler'), ('type:bug-fix', 'Changelog: Bug Fixes')]","[{'comment_id': 2317380707, 'issue_id': 2494142027, 'author': 'utkarsharma2', 'body': ""@ephraimbuddy I tested it with standalone dag processor in breeze env and it's working as expected."", 'created_at': datetime.datetime(2024, 8, 29, 11, 29, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317583286, 'issue_id': 2494142027, 'author': 'potiuk', 'body': 'I believe that was the reason for the Open API test failing ?', 'created_at': datetime.datetime(2024, 8, 29, 12, 55, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317606332, 'issue_id': 2494142027, 'author': 'ephraimbuddy', 'body': ""> I believe that was the reason for the Open API test failing ?\r\n\r\nYes. That's my believe too"", 'created_at': datetime.datetime(2024, 8, 29, 13, 5, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317609073, 'issue_id': 2494142027, 'author': 'utkarsharma2', 'body': '@potiuk / @ephraimbuddy, which PR were the tests failing for?', 'created_at': datetime.datetime(2024, 8, 29, 13, 6, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317612720, 'issue_id': 2494142027, 'author': 'utkarsharma2', 'body': '> @potiuk / @ephraimbuddy, which PR were the tests failing for?\r\n\r\nNever mind, got it.', 'created_at': datetime.datetime(2024, 8, 29, 13, 8, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317618682, 'issue_id': 2494142027, 'author': 'potiuk', 'body': '> @potiuk / @ephraimbuddy, which PR were the tests failing for? \r\n\r\nMain tests: https://github.com/apache/airflow/actions?query=event%3Aschedule and PRs that got ""full tests needed"" because for example they modified dependencies. The problem was in this case that there is non-obvious connection between DAGs diseappearing and Open API tests failing - what was failing there was the test that tries to retrieve example DAG information via the API. Those Open API tests are skipped unless you modify API.', 'created_at': datetime.datetime(2024, 8, 29, 13, 10, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317619223, 'issue_id': 2494142027, 'author': 'ephraimbuddy', 'body': '> @potiuk / @ephraimbuddy, which PR were the tests failing for?\r\n\r\nHere: https://github.com/apache/airflow/actions/runs/10613181076/job/29416509993. \r\n\r\nAn example DAG could not be found', 'created_at': datetime.datetime(2024, 8, 29, 13, 10, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317621508, 'issue_id': 2494142027, 'author': 'potiuk', 'body': 'Also `v2-10-test` were failing - because they also run ""full tests"" https://github.com/apache/airflow/actions?query=branch%3Av2-10-test', 'created_at': datetime.datetime(2024, 8, 29, 13, 11, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317629255, 'issue_id': 2494142027, 'author': 'potiuk', 'body': ""Yep. That was it - It's fixed here for example - I rebased failing cloudant provider and it's green now https://github.com/apache/airflow/actions/runs/10615673609/job/29424342526"", 'created_at': datetime.datetime(2024, 8, 29, 13, 15, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317666038, 'issue_id': 2494142027, 'author': 'utkarsharma2', 'body': ""Yes, I think it's related."", 'created_at': datetime.datetime(2024, 8, 29, 13, 30, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317876886, 'issue_id': 2494142027, 'author': 'ephraimbuddy', 'body': '@utkarsharma2 , can you backport this to v2-10-test', 'created_at': datetime.datetime(2024, 8, 29, 14, 28, 29, tzinfo=datetime.timezone.utc)}]","utkarsharma2 (Issue Creator) on (2024-08-29 11:29:27 UTC): @ephraimbuddy I tested it with standalone dag processor in breeze env and it's working as expected.

potiuk on (2024-08-29 12:55:22 UTC): I believe that was the reason for the Open API test failing ?

ephraimbuddy on (2024-08-29 13:05:45 UTC): Yes. That's my believe too

utkarsharma2 (Issue Creator) on (2024-08-29 13:06:57 UTC): @potiuk / @ephraimbuddy, which PR were the tests failing for?

utkarsharma2 (Issue Creator) on (2024-08-29 13:08:07 UTC): Never mind, got it.

potiuk on (2024-08-29 13:10:13 UTC): Main tests: https://github.com/apache/airflow/actions?query=event%3Aschedule and PRs that got ""full tests needed"" because for example they modified dependencies. The problem was in this case that there is non-obvious connection between DAGs diseappearing and Open API tests failing - what was failing there was the test that tries to retrieve example DAG information via the API. Those Open API tests are skipped unless you modify API.

ephraimbuddy on (2024-08-29 13:10:27 UTC): Here: https://github.com/apache/airflow/actions/runs/10613181076/job/29416509993. 

An example DAG could not be found

potiuk on (2024-08-29 13:11:30 UTC): Also `v2-10-test` were failing - because they also run ""full tests"" https://github.com/apache/airflow/actions?query=branch%3Av2-10-test

potiuk on (2024-08-29 13:15:01 UTC): Yep. That was it - It's fixed here for example - I rebased failing cloudant provider and it's green now https://github.com/apache/airflow/actions/runs/10615673609/job/29424342526

utkarsharma2 (Issue Creator) on (2024-08-29 13:30:25 UTC): Yes, I think it's related.

ephraimbuddy on (2024-08-29 14:28:29 UTC): @utkarsharma2 , can you backport this to v2-10-test

"
2494058455,pull_request,closed,,Fix: DAGs are not marked as stale if the dags folder change,"Handle example DAGs case

related: https://github.com/apache/airflow/issues/41432",utkarsharma2,2024-08-29 10:30:10+00:00,[],2024-08-29 14:05:51+00:00,2024-08-29 11:13:38+00:00,https://github.com/apache/airflow/pull/41854,"[('area:Scheduler', 'including HA (high availability) scheduler')]","[{'comment_id': 2317292483, 'issue_id': 2494058455, 'author': 'ephraimbuddy', 'body': 'Please squash the commits.', 'created_at': datetime.datetime(2024, 8, 29, 10, 41, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317349990, 'issue_id': 2494058455, 'author': 'utkarsharma2', 'body': 'Closing in favour of - https://github.com/apache/airflow/pull/41856', 'created_at': datetime.datetime(2024, 8, 29, 11, 13, 38, tzinfo=datetime.timezone.utc)}]","ephraimbuddy on (2024-08-29 10:41:09 UTC): Please squash the commits.

utkarsharma2 (Issue Creator) on (2024-08-29 11:13:38 UTC): Closing in favour of - https://github.com/apache/airflow/pull/41856

"
2493956482,pull_request,closed,,"Revert ""Fix: DAGs are not marked as stale if the dags folder change (#41433)","
This reverts commit 9f30a41874454696ae2b215b2d86cb9a62968006.

This PR is causing constant deletion of serialized DAG even when the dag folder did not change.

cc @utkarsharma2 


![Screenshot 2024-08-29 at 08 44 25](https://github.com/user-attachments/assets/1aff68bf-5d9c-4c79-a3e7-4535816cbf36)
",ephraimbuddy,2024-08-29 09:42:27+00:00,[],2024-08-29 13:06:01+00:00,2024-08-29 13:06:01+00:00,https://github.com/apache/airflow/pull/41852,"[('area:Scheduler', 'including HA (high availability) scheduler')]","[{'comment_id': 2317189773, 'issue_id': 2493956482, 'author': 'Lee-W', 'body': '@ephraimbuddy do we need to create one for v2-10-test as well', 'created_at': datetime.datetime(2024, 8, 29, 9, 49, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317204347, 'issue_id': 2493956482, 'author': 'ephraimbuddy', 'body': ""> @ephraimbuddy do we need to create one for v2-10-test as well\r\n\r\nHmm. Let's wait before merging this. Looks like @utkarsharma2 has a solution. If that doesn't work, we will have to revert the  one in v2-10-test"", 'created_at': datetime.datetime(2024, 8, 29, 9, 56, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317276396, 'issue_id': 2493956482, 'author': 'utkarsharma2', 'body': '@ephraimbuddy, @Lee-W  PTAL - https://github.com/apache/airflow/pull/41856', 'created_at': datetime.datetime(2024, 8, 29, 10, 33, 37, tzinfo=datetime.timezone.utc)}]","Lee-W on (2024-08-29 09:49:20 UTC): @ephraimbuddy do we need to create one for v2-10-test as well

ephraimbuddy (Issue Creator) on (2024-08-29 09:56:41 UTC): Hmm. Let's wait before merging this. Looks like @utkarsharma2 has a solution. If that doesn't work, we will have to revert the  one in v2-10-test

utkarsharma2 on (2024-08-29 10:33:37 UTC): @ephraimbuddy, @Lee-W  PTAL - https://github.com/apache/airflow/pull/41856

"
2493516189,pull_request,closed,,Remove old pre-migration data integrity checks,"These checks were put into place early in 2.x to add stricter constraints in the database. They are executed before the migrations when the user runs 'airflow upgradedb' to make sure there are no data integrity issues that would fail the migration halfway, which is both difficult to debug and recover from.

The checks always pass if the user is on a more recent Airflow 2 version, on which the constraints are now enforced by the database. Since we have removed all migration files prior to 2.10, the user must upgrade to at least 2.10 first (which has the checks) before upgrading to 3.0 anyway, so we can safely remove the checks going forward.

(Additional context: these checks need to be modified if we are to rename `execution_date` on DagRun, which I’m doing in #41818. Instead of needing to work on the change, I think we should remove those checks since they don’t ever need to be run anyway.)",uranusjr,2024-08-29 05:55:40+00:00,[],2024-08-29 09:20:43+00:00,2024-08-29 09:20:41+00:00,https://github.com/apache/airflow/pull/41850,[],"[{'comment_id': 2316774648, 'issue_id': 2493516189, 'author': 'uranusjr', 'body': 'I decided to keep the mechanism around integrity checks since we’re very likely to need it again at some point in the future. Only the actual checks were removed (so the mechanism simply runs an empty loop and exits).', 'created_at': datetime.datetime(2024, 8, 29, 5, 58, 31, tzinfo=datetime.timezone.utc)}]","uranusjr (Issue Creator) on (2024-08-29 05:58:31 UTC): I decided to keep the mechanism around integrity checks since we’re very likely to need it again at some point in the future. Only the actual checks were removed (so the mechanism simply runs an empty loop and exits).

"
2493151262,pull_request,closed,,Use base aws classes in AWS Glue DataBrew Operators/Triggers,"<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->
Use base aws classes in AWS Glue DataBrew Operators/Triggers

related: #35278 
<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",gopidesupavan,2024-08-28 23:41:42+00:00,[],2024-09-25 20:12:55+00:00,2024-09-05 14:17:03+00:00,https://github.com/apache/airflow/pull/41848,"[('provider:amazon', 'AWS/Amazon - related issues'), ('area:providers', ''), ('area:system-tests', ''), ('kind:documentation', '')]","[{'comment_id': 2334361471, 'issue_id': 2493151262, 'author': 'ferruzzi', 'body': 'Introduced a typo in the template fields.  PR to fix it:  https://github.com/apache/airflow/pull/42073', 'created_at': datetime.datetime(2024, 9, 6, 15, 55, 38, tzinfo=datetime.timezone.utc)}]","ferruzzi on (2024-09-06 15:55:38 UTC): Introduced a typo in the template fields.  PR to fix it:  https://github.com/apache/airflow/pull/42073

"
2492761610,pull_request,closed,,Initialize new airflow/ui directory,"For Airflow 3, we want a fully React UI. The first step is to create a new UI project at `airflow/ui`. 

New tech:
- vite
Framework to build the react app
- pnpm
CLI command to install packages, handles dependencies better than yarn and npm

Banner telling users to try the new UI:
<img width=""522"" alt=""Screenshot 2024-08-27 at 2 56 59 PM"" src=""https://github.com/user-attachments/assets/7bf7f947-9aba-4e69-b449-d9b1fd38975b"">

New UI with the ability to go back to the old UI:
<img width=""1084"" alt=""Screenshot 2024-08-27 at 2 56 52 PM"" src=""https://github.com/user-attachments/assets/1fb7c846-c413-4534-96f5-c21759862965"">

Hot reload works when running `breeze start-airflow --dev-mode` or manipulating the `dev_mode` env var and running the vite server manually.

We could spend a lot more time improving precommit and breeze config. But I'd like to not get too bogged in that and get this project started.

---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",bbovenzi,2024-08-28 18:39:27+00:00,[],2024-08-30 15:24:47+00:00,2024-08-30 15:24:45+00:00,https://github.com/apache/airflow/pull/41846,"[('area:dev-tools', ''), ('AIP-38', 'Modern Web Application')]","[{'comment_id': 2316880603, 'issue_id': 2492761610, 'author': 'pierrejeambrun', 'body': ""Nice, looking good overall.\r\n\r\nI'll let others take a look before approving, especially for non ui related part such as the CI integration, selectives checks and Breeze. (Which look good but could use a second pair of eyes)"", 'created_at': datetime.datetime(2024, 8, 29, 7, 15, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317731029, 'issue_id': 2492761610, 'author': 'potiuk', 'body': 'Looks good @bbovenzi  - I saw you changed www compilation to happen in foreground to fix running two background pre-commits at the same time - that should do at the expense of slower startup time when www change but that should be rare if at all now).\r\n\r\nFew coments on failing tests:\r\n\r\n* All failing selective check tests - there is no need to add UI to SelectiveUnitTtestType at all - there are no ""python"" tests in ""tests/ui"" - those unit tests are python -only - WWW ""javascript"" tests are run separately (React WWW). Those ""WWW"" tests are python tests for ""airflow/www/*.py` files. This is the reason why the UI tests are ""hanging"" \r\n\r\nAs I understand Python code is still going to be in ""airflow/www"" ? If yes - just re\r\n\r\nIf want to have some python tests in ""tests/ui"" - the `""UI"": [""tests/ui""]` entry should be added to this map (in `airflow_breeze/utils/run_tests.py` - where type of test is mapped to the pytest command executed (and some ""empty"" test should be added in ""tests/ui""):\r\n\r\n```python\r\nTEST_TYPE_MAP_TO_PYTEST_ARGS: dict[str, list[str]] = {\r\n    ...\r\n    ""WWW"": [\r\n        ""tests/www"",\r\n    ],\r\n}\r\n```\r\n\r\n* React UI tests failing - `pnpm` needs to be installed after ""setup-node"" step - as we are running the tests without Breeze CI image\r\n\r\n* Test Open API Client - should be already fixed in main by #41858 \r\n\r\n* Static checks - just re-basing + re-running pre-commit should fix them', 'created_at': datetime.datetime(2024, 8, 29, 13, 54, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317916557, 'issue_id': 2492761610, 'author': 'pierrejeambrun', 'body': 'Interesting thanks Jarek for the explanation, I think we can completely remove it in that PR, as there will be no python tests in `/ui` but I will definitely take the comment for the `/api_ui` folder. (That I am working on atm)', 'created_at': datetime.datetime(2024, 8, 29, 14, 40, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2317927455, 'issue_id': 2492761610, 'author': 'potiuk', 'body': '> Interesting thanks Jarek for the explanation, I think we can completely remove it in that PR, as there will be no python tests in `/ui` but I will definitely take the comment for the `/api_ui` folder. (That I am working on atm)\r\n\r\nIn this case likely `API` test type should just be extended in the MAP to include that folder then - then the tests will be executed as part of the `API` test type.\r\n\r\n```\r\n    ""API"": [""tests/api"", ""tests/api_connexion"", ""tests/api_internal""],\r\n```', 'created_at': datetime.datetime(2024, 8, 29, 14, 43, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2319945429, 'issue_id': 2492761610, 'author': 'uranusjr', 'body': 'Should we add something in `contributing-docs` on how to run the tests too? It can be very short for now, just so people diving into the code base know the minium what to do.', 'created_at': datetime.datetime(2024, 8, 30, 3, 44, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2320691741, 'issue_id': 2492761610, 'author': 'pierrejeambrun', 'body': 'Just added a small commit to try to fix the static checks, lets see if the CI is happy now 🤞', 'created_at': datetime.datetime(2024, 8, 30, 9, 49, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2321078279, 'issue_id': 2492761610, 'author': 'pierrejeambrun', 'body': 'Looks good', 'created_at': datetime.datetime(2024, 8, 30, 12, 26, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2321164255, 'issue_id': 2492761610, 'author': 'potiuk', 'body': 'Yep.  Looks like ready to merge.', 'created_at': datetime.datetime(2024, 8, 30, 12, 55, 54, tzinfo=datetime.timezone.utc)}]","pierrejeambrun on (2024-08-29 07:15:59 UTC): Nice, looking good overall.

I'll let others take a look before approving, especially for non ui related part such as the CI integration, selectives checks and Breeze. (Which look good but could use a second pair of eyes)

potiuk on (2024-08-29 13:54:05 UTC): Looks good @bbovenzi  - I saw you changed www compilation to happen in foreground to fix running two background pre-commits at the same time - that should do at the expense of slower startup time when www change but that should be rare if at all now).

Few coments on failing tests:

* All failing selective check tests - there is no need to add UI to SelectiveUnitTtestType at all - there are no ""python"" tests in ""tests/ui"" - those unit tests are python -only - WWW ""javascript"" tests are run separately (React WWW). Those ""WWW"" tests are python tests for ""airflow/www/*.py` files. This is the reason why the UI tests are ""hanging"" 

As I understand Python code is still going to be in ""airflow/www"" ? If yes - just re

If want to have some python tests in ""tests/ui"" - the `""UI"": [""tests/ui""]` entry should be added to this map (in `airflow_breeze/utils/run_tests.py` - where type of test is mapped to the pytest command executed (and some ""empty"" test should be added in ""tests/ui""):

```python
TEST_TYPE_MAP_TO_PYTEST_ARGS: dict[str, list[str]] = {
    ...
    ""WWW"": [
        ""tests/www"",
    ],
}
```

* React UI tests failing - `pnpm` needs to be installed after ""setup-node"" step - as we are running the tests without Breeze CI image

* Test Open API Client - should be already fixed in main by #41858 

* Static checks - just re-basing + re-running pre-commit should fix them

pierrejeambrun on (2024-08-29 14:40:34 UTC): Interesting thanks Jarek for the explanation, I think we can completely remove it in that PR, as there will be no python tests in `/ui` but I will definitely take the comment for the `/api_ui` folder. (That I am working on atm)

potiuk on (2024-08-29 14:43:46 UTC): In this case likely `API` test type should just be extended in the MAP to include that folder then - then the tests will be executed as part of the `API` test type.

```
    ""API"": [""tests/api"", ""tests/api_connexion"", ""tests/api_internal""],
```

uranusjr on (2024-08-30 03:44:43 UTC): Should we add something in `contributing-docs` on how to run the tests too? It can be very short for now, just so people diving into the code base know the minium what to do.

pierrejeambrun on (2024-08-30 09:49:22 UTC): Just added a small commit to try to fix the static checks, lets see if the CI is happy now 🤞

pierrejeambrun on (2024-08-30 12:26:21 UTC): Looks good

potiuk on (2024-08-30 12:55:54 UTC): Yep.  Looks like ready to merge.

"
2492741824,pull_request,closed,,[Backport] logout link in no roles error page fix (#41813),"backports: #41813

(cherry picked from commit 032ac87b1d93abc53d3281313c957708017e21d4)

<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 ""License""); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 -->

<!--
Thank you for contributing! Please make sure that your code changes
are covered with tests. And in case of new features or big changes
remember to adjust the documentation.

Feel free to ping committers for the review!

In case of an existing issue, reference it using one of the following:

closes: #ISSUE
related: #ISSUE

How to write a good git commit message:
http://chris.beams.io/posts/git-commit/
-->



<!-- Please keep an empty line above the dashes. -->
---
**^ Add meaningful description above**
Read the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/contributing-docs/05_pull_requests.rst#pull-request-guidelines)** for more information.
In case of fundamental code changes, an Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvement+Proposals)) is needed.
In case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).
In case of backwards incompatible changes please leave a note in a newsfragment file, named `{pr_number}.significant.rst` or `{issue_number}.significant.rst`, in [newsfragments](https://github.com/apache/airflow/tree/main/newsfragments).
",shahar1,2024-08-28 18:28:51+00:00,[],2024-08-30 11:33:04+00:00,2024-08-29 04:50:34+00:00,https://github.com/apache/airflow/pull/41845,"[('area:webserver', 'Webserver related Issues'), ('type:bug-fix', 'Changelog: Bug Fixes'), ('area:UI', 'Related to UI/UX. For Frontend Developers.')]",[],
