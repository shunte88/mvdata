id,type,state,state_reason,title,body,author,created_at,assignees,updated_at,closed_at,url,labels,comments_list,comment_thread
2180356438,issue,closed,completed,Order of collection should be the same as the collection sidebar,"`api/collection/tree` and `/api/collection/:id/items` should return things in the same order

I think this mostly deals with how special characters are handled, but we also need the Metabase Analytics collection sorted to the end

![Screen Shot 2024-03-11 at 4 15 37 PM](https://github.com/metabase/metabase/assets/30528226/7e188d5d-2ed7-48e0-9749-38fbfd32436f)
",iethree,2024-03-11 22:15:48+00:00,['johnswanson'],2024-03-28 10:07:06+00:00,2024-03-18 21:12:34+00:00,https://github.com/metabase/metabase/issues/39965,"[('.Backend', '')]",[],
2180046978,issue,closed,completed,Clojure version 1.11.2 is vulnerable to CVE-2024-22871,"### Describe the bug

Our security monitoring alerted us that Metabase is vulnerable to [CVE-2024-22871](https://www.cve.org/CVERecord?id=CVE-2024-22871).

From what I can tell, this is because [Metabase is currently using version 1.11.2](https://github.com/metabase/metabase/blob/master/deps.edn#L135).

### To Reproduce

Issue lies with dependency.

### Expected behavior

_No response_

### Logs

_No response_

### Information about your Metabase installation

```JSON
Metabase version: 0.48.8
```


### Severity

annoying

### Additional context

_No response_",jbiel,2024-03-11 19:30:50+00:00,[],2024-03-11 19:41:55+00:00,2024-03-11 19:41:54+00:00,https://github.com/metabase/metabase/issues/39959,"[('Type:Bug', 'Product defects'), ('.Needs Triage', '')]","[{'comment_id': 1989293401, 'issue_id': 2180046978, 'author': 'paoliniluis', 'body': 'Hi, this is a false positive as the scanners still don’t have information about that version of clojure (it was built on Friday)', 'created_at': datetime.datetime(2024, 3, 11, 19, 41, 55, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-11 19:41:55 UTC): Hi, this is a false positive as the scanners still don’t have information about that version of clojure (it was built on Friday)

"
2179719411,issue,closed,completed,Support parsing native queries with variables in them,"Part of [ParseSQL](https://github.com/metabase/metabase/issues/36911)

Current idea is to replace the variable with a gensym on the Metabase side, let Macaw parse it as normal, then replace the sentinel value with the field filter when it comes back to Metabase.",tsmacdonald,2024-03-11 17:22:24+00:00,['tsmacdonald'],2024-04-30 09:23:38+00:00,2024-04-10 13:46:30+00:00,https://github.com/metabase/metabase/issues/39954,"[('.Team/Workflows', 'aka BEC'), ('Querying/Native/Parser', '')]",[],
2179719194,issue,closed,completed,Support parsing native queries with a field filter in them,"Part of [ParseSQL](https://github.com/metabase/metabase/issues/36911)

Current idea is to replace the field filter with a gensym on the Metabase side, let Macaw parse it as normal, then replace the sentinel value with the field filter when it comes back to Metabase.",tsmacdonald,2024-03-11 17:22:21+00:00,['tsmacdonald'],2024-04-30 09:23:43+00:00,2024-04-10 13:46:31+00:00,https://github.com/metabase/metabase/issues/39953,"[('.Team/Workflows', 'aka BEC'), ('Querying/Native/Parser', '')]",[],
2179649794,issue,closed,completed,Provide a list of outdated native queries,"Part of the [Parse SQL](https://github.com/metabase/metabase/issues/36911) epic.

We should have an API endpoint (and, eventually, a frontend) that shows cards whose column/table references are out of date",tsmacdonald,2024-03-11 17:01:28+00:00,['tsmacdonald'],2024-04-30 09:23:19+00:00,2024-04-10 12:51:25+00:00,https://github.com/metabase/metabase/issues/39950,"[('.Team/Workflows', 'aka BEC'), ('Querying/Native/Parser', '')]","[{'comment_id': 2047458642, 'issue_id': 2179649794, 'author': 'tsmacdonald', 'body': 'Fixed by #39707', 'created_at': datetime.datetime(2024, 4, 10, 12, 51, 25, tzinfo=datetime.timezone.utc)}]","tsmacdonald (Issue Creator) on (2024-04-10 12:51:25 UTC): Fixed by #39707

"
2179648366,issue,closed,completed,Maintain a join table of these relationships,,tsmacdonald,2024-03-11 17:01:01+00:00,[],2024-03-11 17:01:18+00:00,2024-03-11 17:01:18+00:00,https://github.com/metabase/metabase/issues/39949,[],[],
2179536308,issue,open,,"Replace all usage of `mc/validate`, `mc/explain`, etc. in `src/` trees and enforce a ban with Kondo","These one-shot functions, eg. `(mc/validate schema value)`, compile the Malli schema into a validation function, apply it to `value`, and then throw it away. That's fine in a test or a cold code path, but there are several places where these are applied in production code in the FE, for example when converting from a legacy query.

Compiling the validator for `::lib.schema/query` takes 30x longer than validating a query, so this is extremely wasteful.

We should eliminate all uses of these functions in favour of either:
- Using `metabase.util.malli.registry/validate`/`validator`/`explain`/`explainer` which do their own caching of our schemas.
- `(def some-validator (mc/validator some-schema))` and reusing it `(some-validator value)`.

And then enforce this with Kondo lint rules so that more uses don't crop up. (There's already some rules for this but I don't think they're complete, and there are existing violations.)",bshepherdson,2024-03-11 16:14:09+00:00,[],2024-05-26 10:00:13+00:00,,https://github.com/metabase/metabase/issues/39946,"[('Type:Tech Debt', 'or Refactoring'), ('Difficulty:Easy', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2179182136,issue,closed,completed,Dashboard ID filter does not work on models,"### Describe the bug


https://github.com/metabase/metabase/assets/6830683/34d55603-9edf-44b6-ad85-0823c34ba549



### To Reproduce

1. Create a new model based on Orders table, run it and save it
2. Create a new dashboard
3. Add the new model to the dashboard
4. Add an ID filter and connect it to model's ID column
5. Provide a default value for the filter
6. Save the dashboard



### Expected behavior

Chart is rendered correctly (table with 1 row)

### Logs



<details>
<summary>
Response from POST `/api/dashboard/:id/dashcard/:id/card/:id/query`:
</summary>

```json
{
    ""database_id"": 1,
    ""started_at"": ""2024-03-11T20:41:02.220010417+07:00"",
    ""via"": [
        {
            ""status"": ""failed"",
            ""class"": ""class clojure.lang.ExceptionInfo"",
            ""error"": ""Error compiling query: Cannot determine the source table or query for Field clause [:field \""ID\"" {:base-type :type/BigInteger}]"",
            ""stacktrace"": [
                ""--> query_processor.compile$fn__89980$_AMPERSAND_f__89981$fn__89982.invoke(compile.clj:24)"",
                ""query_processor.setup$fn__89934$_AMPERSAND_f__89935.invoke(setup.clj:204)"",
                ""query_processor.setup$fn__89934$fn__89939.invoke(setup.clj:195)"",
                ""query_processor.compile$fn__89980$_AMPERSAND_f__89981.invoke(compile.clj:20)"",
                ""query_processor.compile$fn__89980$fn__89985.invoke(compile.clj:16)"",
                ""query_processor$process_query_STAR__STAR_.invokeStatic(query_processor.clj:45)"",
                ""query_processor$process_query_STAR__STAR_.invoke(query_processor.clj:43)"",
                ""query_processor.middleware.enterprise$eval85326$handle_audit_app_internal_queries__85327$fn__85329.invoke(enterprise.clj:96)"",
                ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__85337.invoke(enterprise.clj:103)"",
                ""query_processor.middleware.process_userland_query$fn__90631$_AMPERSAND_f__90632$_AMPERSAND_f__90633.invoke(process_userland_query.clj:165)"",
                ""query_processor.middleware.process_userland_query$fn__90631$_AMPERSAND_f__90632$fn__90639.invoke(process_userland_query.clj:155)"",
                ""query_processor.middleware.catch_exceptions$fn__90461$_AMPERSAND_f__90462$_AMPERSAND_f__90463.invoke(catch_exceptions.clj:128)"",
                ""query_processor.middleware.catch_exceptions$fn__90461$_AMPERSAND_f__90462$fn__90474.invoke(catch_exceptions.clj:118)"",
                ""query_processor$fn__91270$_AMPERSAND_f__91271$fn__91272.invoke(query_processor.clj:78)"",
                ""query_processor.setup$fn__89926$_AMPERSAND_f__89927$fn__89928.invoke(setup.clj:168)"",
                ""query_processor.setup$fn__89916$_AMPERSAND_f__89917$fn__89918.invoke(setup.clj:160)"",
                ""query_processor.setup$fn__89906$_AMPERSAND_f__89907$fn__89908$fn__89909.invoke(setup.clj:145)"",
                ""driver$do_with_driver.invokeStatic(driver.clj:97)"",
                ""driver$do_with_driver.invoke(driver.clj:92)"",
                ""query_processor.setup$fn__89906$_AMPERSAND_f__89907$fn__89908.invoke(setup.clj:144)"",
                ""query_processor.setup$fn__89894$_AMPERSAND_f__89895$fn__89896$fn__89899.invoke(setup.clj:131)"",
                ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:171)"",
                ""query_processor.store$do_with_metadata_provider.invoke(store.clj:152)"",
                ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:160)"",
                ""query_processor.store$do_with_metadata_provider.invoke(store.clj:152)"",
                ""query_processor.setup$fn__89894$_AMPERSAND_f__89895$fn__89896.invoke(setup.clj:130)"",
                ""query_processor.setup$fn__89876$_AMPERSAND_f__89877$_AMPERSAND_f__89878.invoke(setup.clj:108)"",
                ""query_processor.setup$fn__89876$_AMPERSAND_f__89877$fn__89881.invoke(setup.clj:102)"",
                ""query_processor.setup$fn__89934$_AMPERSAND_f__89935.invoke(setup.clj:211)"",
                ""query_processor.setup$fn__89934$fn__89939.invoke(setup.clj:195)"",
                ""query_processor$fn__91270$_AMPERSAND_f__91271.invoke(query_processor.clj:76)"",
                ""query_processor$fn__91270$fn__91276.invoke(query_processor.clj:69)"",
                ""query_processor.card$fn__113750$_AMPERSAND_f__113751.invoke(card.clj:190)"",
                ""query_processor.card$fn__113750$fn__113753.invoke(card.clj:186)"",
                ""query_processor.card$process_query_for_card_default_run_fn$fn__113756$fn__113757.invoke(card.clj:197)"",
                ""query_processor.streaming$_streaming_response$fn__92758$fn__92759$fn__92760.invoke(streaming.clj:171)"",
                ""query_processor.streaming$_streaming_response$fn__92758$fn__92759.invoke(streaming.clj:170)"",
                ""query_processor.streaming$do_with_streaming_rff.invokeStatic(streaming.clj:161)"",
                ""query_processor.streaming$do_with_streaming_rff.invoke(streaming.clj:148)"",
                ""query_processor.streaming$_streaming_response$fn__92758.invoke(streaming.clj:167)"",
                ""async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)"",
                ""async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)"",
                ""async.streaming_response$do_f_async$task__44603.invoke(streaming_response.clj:88)""
            ],
            ""error_type"": ""driver"",
            ""ex-data"": {
                ""query"": {
                    ""constraints"": {
                        ""max-results"": 10000,
                        ""max-results-bare-rows"": 2000
                    },
                    ""type"": ""query"",
                    ""metabase.query-processor.middleware.add-dimension-projections/external-remaps"": [
                        {
                            ""id"": 2,
                            ""name"": ""User ID"",
                            ""field-id"": 40,
                            ""field-name"": ""USER_ID"",
                            ""human-readable-field-id"": 16,
                            ""human-readable-field-name"": ""NAME""
                        }
                    ],
                    ""middleware"": {
                        ""js-int-to-string?"": true,
                        ""ignore-cached-results?"": false,
                        ""userland-query?"": true
                    },
                    ""user-parameters"": [
                        {
                            ""value"": [
                                ""5""
                            ],
                            ""type"": ""id"",
                            ""id"": ""9d8185bc"",
                            ""target"": [
                                ""dimension"",
                                [
                                    ""field"",
                                    ""ID"",
                                    {
                                        ""base-type"": ""type/BigInteger""
                                    }
                                ]
                            ]
                        }
                    ],
                    ""viz-settings"": {},
                    ""info"": {
                        ""executed-by"": 1,
                        ""context"": ""dashboard"",
                        ""card-id"": 116,
                        ""card-name"": ""Orders M1"",
                        ""dashboard-id"": 8,
                        ""visualization-settings"": {
                            ""table.cell_column"": ""SUBTOTAL""
                        },
                        ""metadata/model-metadata"": [
                            {
                                ""description"": ""This is a unique ID for the product. It is also called the “Invoice number” or “Confirmation number” in customer facing emails and screens."",
                                ""semantic_type"": ""type/PK"",
                                ""name"": ""ID"",
                                ""field_ref"": [
                                    ""field"",
                                    34,
                                    null
                                ],
                                ""effective_type"": ""type/BigInteger"",
                                ""id"": 34,
                                ""visibility_type"": ""normal"",
                                ""display_name"": ""ID"",
                                ""base_type"": ""type/BigInteger""
                            },
                            {
                                ""description"": ""The id of the user who made this order. Note that in some cases where an order was created on behalf of a customer who phoned the order in, this might be the employee who handled the request."",
                                ""semantic_type"": ""type/FK"",
                                ""name"": ""USER_ID"",
                                ""fk_target_field_id"": 15,
                                ""field_ref"": [
                                    ""field"",
                                    40,
                                    null
                                ],
                                ""effective_type"": ""type/Integer"",
                                ""id"": 40,
                                ""visibility_type"": ""normal"",
                                ""display_name"": ""User ID"",
                                ""fingerprint"": {
                                    ""global"": {
                                        ""distinct-count"": 929,
                                        ""nil%"": 0.0
                                    }
                                },
                                ""base_type"": ""type/Integer""
                            },
                            {
                                ""description"": ""The product ID. This is an internal identifier for the product, NOT the SKU."",
                                ""semantic_type"": ""type/FK"",
                                ""name"": ""PRODUCT_ID"",
                                ""fk_target_field_id"": 68,
                                ""field_ref"": [
                                    ""field"",
                                    37,
                                    null
                                ],
                                ""effective_type"": ""type/Integer"",
                                ""id"": 37,
                                ""visibility_type"": ""normal"",
                                ""display_name"": ""Product ID"",
                                ""fingerprint"": {
                                    ""global"": {
                                        ""distinct-count"": 200,
                                        ""nil%"": 0.0
                                    }
                                },
                                ""base_type"": ""type/Integer""
                            },
                            {
                                ""description"": ""The raw, pre-tax cost of the order. Note that this might be different in the future from the product price due to promotions, credits, etc."",
                                ""name"": ""SUBTOTAL"",
                                ""field_ref"": [
                                    ""field"",
                                    41,
                                    null
                                ],
                                ""effective_type"": ""type/Float"",
                                ""id"": 41,
                                ""visibility_type"": ""normal"",
                                ""display_name"": ""Subtotal"",
                                ""fingerprint"": {
                                    ""global"": {
                                        ""distinct-count"": 340,
                                        ""nil%"": 0.0
                                    },
                                    ""type"": {
                                        ""type/Number"": {
                                            ""min"": 15.691943673970439,
                                            ""q1"": 49.74894519060184,
                                            ""q3"": 105.42965746993103,
                                            ""max"": 148.22900526552291,
                                            ""sd"": 32.53705013056317,
                                            ""avg"": 77.01295465356547
                                        }
                                    }
                                },
                                ""base_type"": ""type/Float""
                            },
                            {
                                ""description"": ""This is the amount of local and federal taxes that are collected on the purchase. Note that other governmental fees on some products are not included here, but instead are accounted for in the subtotal."",
                                ""name"": ""TAX"",
                                ""field_ref"": [
                                    ""field"",
                                    35,
                                    null
                                ],
                                ""effective_type"": ""type/Float"",
                                ""id"": 35,
                                ""visibility_type"": ""normal"",
                                ""display_name"": ""Tax"",
                                ""fingerprint"": {
                                    ""global"": {
                                        ""distinct-count"": 797,
                                        ""nil%"": 0.0
                                    },
                                    ""type"": {
                                        ""type/Number"": {
                                            ""min"": 0.0,
                                            ""q1"": 2.273340386603857,
                                            ""q3"": 5.337275338216307,
                                            ""max"": 11.12,
                                            ""sd"": 2.3206651358900316,
                                            ""avg"": 3.8722100000000004
                                        }
                                    }
                                },
                                ""base_type"": ""type/Float""
                            },
                            {
                                ""description"": ""The total billed amount."",
                                ""name"": ""TOTAL"",
                                ""field_ref"": [
                                    ""field"",
                                    39,
                                    null
                                ],
                                ""effective_type"": ""type/Float"",
                                ""id"": 39,
                                ""visibility_type"": ""normal"",
                                ""display_name"": ""Total"",
                                ""fingerprint"": {
                                    ""global"": {
                                        ""distinct-count"": 4426,
                                        ""nil%"": 0.0
                                    },
                                    ""type"": {
                                        ""type/Number"": {
                                            ""min"": 8.93914247937167,
                                            ""q1"": 51.34535490743823,
                                            ""q3"": 110.29428389265787,
                                            ""max"": 159.34900526552292,
                                            ""sd"": 34.26469575709948,
                                            ""avg"": 80.35871658771228
                                        }
                                    }
                                },
                                ""base_type"": ""type/Float""
                            },
                            {
                                ""description"": ""Discount amount."",
                                ""semantic_type"": ""type/Discount"",
                                ""name"": ""DISCOUNT"",
                                ""field_ref"": [
                                    ""field"",
                                    33,
                                    null
                                ],
                                ""effective_type"": ""type/Float"",
                                ""id"": 33,
                                ""visibility_type"": ""normal"",
                                ""display_name"": ""Discount with a very long name"",
                                ""fingerprint"": {
                                    ""global"": {
                                        ""distinct-count"": 701,
                                        ""nil%"": 0.898
                                    },
                                    ""type"": {
                                        ""type/Number"": {
                                            ""min"": 0.17088996672584322,
                                            ""q1"": 2.9786226681458743,
                                            ""q3"": 7.338187788658235,
                                            ""max"": 61.69684269960571,
                                            ""sd"": 3.053663125001991,
                                            ""avg"": 5.161255547580326
                                        }
                                    }
                                },
                                ""base_type"": ""type/Float""
                            },
                            {
                                ""description"": ""The date and time an order was submitted."",
                                ""semantic_type"": ""type/CreationTimestamp"",
                                ""unit"": ""default"",
                                ""name"": ""CREATED_AT"",
                                ""field_ref"": [
                                    ""field"",
                                    38,
                                    {
                                        ""temporal-unit"": ""default""
                                    }
                                ],
                                ""effective_type"": ""type/DateTime"",
                                ""id"": 38,
                                ""visibility_type"": ""normal"",
                                ""display_name"": ""Created At"",
                                ""fingerprint"": {
                                    ""global"": {
                                        ""distinct-count"": 10001,
                                        ""nil%"": 0.0
                                    },
                                    ""type"": {
                                        ""type/DateTime"": {
                                            ""earliest"": ""2022-04-30T18:56:13.352Z"",
                                            ""latest"": ""2026-04-19T14:07:15.657Z""
                                        }
                                    }
                                },
                                ""base_type"": ""type/DateTime""
                            },
                            {
                                ""description"": ""Number of products bought."",
                                ""semantic_type"": ""type/Quantity"",
                                ""name"": ""QUANTITY"",
                                ""field_ref"": [
                                    ""field"",
                                    36,
                                    null
                                ],
                                ""effective_type"": ""type/Integer"",
                                ""id"": 36,
                                ""visibility_type"": ""normal"",
                                ""display_name"": ""Quantity"",
                                ""fingerprint"": {
                                    ""global"": {
                                        ""distinct-count"": 62,
                                        ""nil%"": 0.0
                                    },
                                    ""type"": {
                                        ""type/Number"": {
                                            ""min"": 0.0,
                                            ""q1"": 1.755882607764982,
                                            ""q3"": 4.882654507928044,
                                            ""max"": 100.0,
                                            ""sd"": 4.214258386403798,
                                            ""avg"": 3.7015
                                        }
                                    }
                                },
                                ""base_type"": ""type/Integer""
                            },
                            {
                                ""description"": ""The name of the user who owns an account"",
                                ""semantic_type"": ""type/Name"",
                                ""name"": ""NAME"",
                                ""field_ref"": [
                                    ""field"",
                                    16,
                                    {
                                        ""source-field"": 40
                                    }
                                ],
                                ""effective_type"": ""type/Text"",
                                ""id"": 16,
                                ""visibility_type"": ""normal"",
                                ""display_name"": ""User ID"",
                                ""fingerprint"": {
                                    ""global"": {
                                        ""distinct-count"": 2499,
                                        ""nil%"": 0.0
                                    },
                                    ""type"": {
                                        ""type/Text"": {
                                            ""percent-json"": 0.0,
                                            ""percent-url"": 0.0,
                                            ""percent-email"": 0.0,
                                            ""percent-state"": 0.0,
                                            ""average-length"": 13.532
                                        }
                                    }
                                },
                                ""base_type"": ""type/Text""
                            }
                        ],
                        ""query-hash"": ""0x086643BA""
                    },
                    ""database"": 1,
                    ""query"": {
                        ""source-table"": 5,
                        ""filter"": [
                            ""="",
                            [
                                ""field"",
                                ""ID"",
                                {
                                    ""base-type"": ""type/BigInteger""
                                }
                            ],
                            [
                                ""value"",
                                5,
                                {
                                    ""base_type"": ""type/BigInteger""
                                }
                            ]
                        ],
                        ""fields"": [
                            [
                                ""field"",
                                34,
                                null
                            ],
                            [
                                ""field"",
                                40,
                                {
                                    ""metabase.query-processor.middleware.add-dimension-projections/original-field-dimension-id"": 2
                                }
                            ],
                            [
                                ""field"",
                                37,
                                null
                            ],
                            [
                                ""field"",
                                41,
                                null
                            ],
                            [
                                ""field"",
                                35,
                                null
                            ],
                            [
                                ""field"",
                                39,
                                null
                            ],
                            [
                                ""field"",
                                33,
                                null
                            ],
                            [
                                ""field"",
                                38,
                                {
                                    ""temporal-unit"": ""default""
                                }
                            ],
                            [
                                ""field"",
                                36,
                                null
                            ],
                            [
                                ""field"",
                                16,
                                {
                                    ""source-field"": 40,
                                    ""metabase.query-processor.middleware.add-dimension-projections/new-field-dimension-id"": 2,
                                    ""join-alias"": ""PEOPLE__via__USER_ID""
                                }
                            ]
                        ],
                        ""joins"": [
                            {
                                ""alias"": ""PEOPLE__via__USER_ID"",
                                ""strategy"": ""left-join"",
                                ""source-table"": 3,
                                ""condition"": [
                                    ""="",
                                    [
                                        ""field"",
                                        40,
                                        null
                                    ],
                                    [
                                        ""field"",
                                        15,
                                        {
                                            ""join-alias"": ""PEOPLE__via__USER_ID""
                                        }
                                    ]
                                ],
                                ""fk-field-id"": 40
                            }
                        ],
                        ""limit"": 2000,
                        ""metabase.query-processor.middleware.limit/original-limit"": null
                    }
                },
                ""type"": ""driver""
            }
        }
    ],
    ""action_id"": null,
    ""error_type"": ""invalid-query"",
    ""json_query"": {
        ""constraints"": {
            ""max-results"": 10000,
            ""max-results-bare-rows"": 2000
        },
        ""type"": ""query"",
        ""middleware"": {
            ""js-int-to-string?"": true,
            ""ignore-cached-results?"": false,
            ""userland-query?"": true
        },
        ""viz-settings"": {},
        ""database"": 1,
        ""query"": {
            ""source-table"": 5
        },
        ""parameters"": [
            {
                ""type"": ""id"",
                ""value"": [
                    ""5""
                ],
                ""id"": ""9d8185bc"",
                ""target"": [
                    ""dimension"",
                    [
                        ""field"",
                        ""ID"",
                        {
                            ""base-type"": ""type/BigInteger""
                        }
                    ]
                ]
            }
        ],
        ""cache-ttl"": null
    },
    ""native"": null,
    ""status"": ""failed"",
    ""class"": ""class clojure.lang.ExceptionInfo"",
    ""stacktrace"": [
        ""--> query_processor.util.add_alias_info$fn__85902$_AMPERSAND_f__85905.invoke(add_alias_info.clj:193)"",
        ""query_processor.util.add_alias_info$fn__85902$fn__85913.invoke(add_alias_info.clj:180)"",
        ""query_processor.util.add_alias_info$eval86071$fn__86072.invoke(add_alias_info.clj:392)"",
        ""query_processor.util.add_alias_info$add_alias_info_STAR_$replace_86113__86114$fn__86121$fn__86122.invoke(add_alias_info.clj:447)"",
        ""query_processor.util.add_alias_info$add_alias_info_STAR_$replace_86113__86114$fn__86121.invoke(add_alias_info.clj:447)"",
        ""query_processor.util.add_alias_info$add_alias_info_STAR_$replace_86113__86114.invoke(add_alias_info.clj:447)"",
        ""mbql.util.match.impl$replace_in_collection.invokeStatic(impl.cljc:48)"",
        ""mbql.util.match.impl$replace_in_collection.invoke(impl.cljc:39)"",
        ""query_processor.util.add_alias_info$add_alias_info_STAR_$replace_86113__86114$fn__86121.invoke(add_alias_info.clj:447)"",
        ""query_processor.util.add_alias_info$add_alias_info_STAR_$replace_86113__86114.invoke(add_alias_info.clj:447)"",
        ""mbql.util.match.impl$replace_in_collection$iter__30539__30543$fn__30544.invoke(impl.cljc:45)"",
        ""mbql.util.match.impl$replace_in_collection.invokeStatic(impl.cljc:44)"",
        ""mbql.util.match.impl$replace_in_collection.invoke(impl.cljc:39)"",
        ""query_processor.util.add_alias_info$add_alias_info_STAR_$replace_86113__86114$fn__86121.invoke(add_alias_info.clj:447)"",
        ""query_processor.util.add_alias_info$add_alias_info_STAR_$replace_86113__86114.invoke(add_alias_info.clj:447)"",
        ""query_processor.util.add_alias_info$add_alias_info_STAR_.invokeStatic(add_alias_info.clj:447)"",
        ""query_processor.util.add_alias_info$add_alias_info_STAR_.invoke(add_alias_info.clj:444)"",
        ""query_processor.util.add_alias_info$add_alias_info$fn__86131.invoke(add_alias_info.clj:491)"",
        ""query_processor.util.add_alias_info$add_alias_info.invokeStatic(add_alias_info.clj:486)"",
        ""query_processor.util.add_alias_info$add_alias_info.invoke(add_alias_info.clj:457)"",
        ""driver.sql.query_processor$eval87570$fn__87571.invoke(query_processor.clj:1454)"",
        ""driver.sql.query_processor$mbql__GT_honeysql.invokeStatic(query_processor.clj:1460)"",
        ""driver.sql.query_processor$mbql__GT_honeysql.invoke(query_processor.clj:1456)"",
        ""driver.sql.query_processor$mbql__GT_native.invokeStatic(query_processor.clj:1471)"",
        ""driver.sql.query_processor$mbql__GT_native.invoke(query_processor.clj:1467)"",
        ""driver.sql$eval103130$fn__103131.invoke(sql.clj:49)"",
        ""query_processor.compile$compile_STAR_.invokeStatic(compile.clj:14)"",
        ""query_processor.compile$compile_STAR_.invoke(compile.clj:11)"",
        ""query_processor.compile$fn__89980$_AMPERSAND_f__89981$fn__89982.invoke(compile.clj:22)"",
        ""query_processor.setup$fn__89934$_AMPERSAND_f__89935.invoke(setup.clj:204)"",
        ""query_processor.setup$fn__89934$fn__89939.invoke(setup.clj:195)"",
        ""query_processor.compile$fn__89980$_AMPERSAND_f__89981.invoke(compile.clj:20)"",
        ""query_processor.compile$fn__89980$fn__89985.invoke(compile.clj:16)"",
        ""query_processor$process_query_STAR__STAR_.invokeStatic(query_processor.clj:45)"",
        ""query_processor$process_query_STAR__STAR_.invoke(query_processor.clj:43)"",
        ""query_processor.middleware.enterprise$eval85326$handle_audit_app_internal_queries__85327$fn__85329.invoke(enterprise.clj:96)"",
        ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__85337.invoke(enterprise.clj:103)"",
        ""query_processor.middleware.process_userland_query$fn__90631$_AMPERSAND_f__90632$_AMPERSAND_f__90633.invoke(process_userland_query.clj:165)"",
        ""query_processor.middleware.process_userland_query$fn__90631$_AMPERSAND_f__90632$fn__90639.invoke(process_userland_query.clj:155)"",
        ""query_processor.middleware.catch_exceptions$fn__90461$_AMPERSAND_f__90462$_AMPERSAND_f__90463.invoke(catch_exceptions.clj:128)"",
        ""query_processor.middleware.catch_exceptions$fn__90461$_AMPERSAND_f__90462$fn__90474.invoke(catch_exceptions.clj:118)"",
        ""query_processor$fn__91270$_AMPERSAND_f__91271$fn__91272.invoke(query_processor.clj:78)"",
        ""query_processor.setup$fn__89926$_AMPERSAND_f__89927$fn__89928.invoke(setup.clj:168)"",
        ""query_processor.setup$fn__89916$_AMPERSAND_f__89917$fn__89918.invoke(setup.clj:160)"",
        ""query_processor.setup$fn__89906$_AMPERSAND_f__89907$fn__89908$fn__89909.invoke(setup.clj:145)"",
        ""driver$do_with_driver.invokeStatic(driver.clj:97)"",
        ""driver$do_with_driver.invoke(driver.clj:92)"",
        ""query_processor.setup$fn__89906$_AMPERSAND_f__89907$fn__89908.invoke(setup.clj:144)"",
        ""query_processor.setup$fn__89894$_AMPERSAND_f__89895$fn__89896$fn__89899.invoke(setup.clj:131)"",
        ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:171)"",
        ""query_processor.store$do_with_metadata_provider.invoke(store.clj:152)"",
        ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:160)"",
        ""query_processor.store$do_with_metadata_provider.invoke(store.clj:152)"",
        ""query_processor.setup$fn__89894$_AMPERSAND_f__89895$fn__89896.invoke(setup.clj:130)"",
        ""query_processor.setup$fn__89876$_AMPERSAND_f__89877$_AMPERSAND_f__89878.invoke(setup.clj:108)"",
        ""query_processor.setup$fn__89876$_AMPERSAND_f__89877$fn__89881.invoke(setup.clj:102)"",
        ""query_processor.setup$fn__89934$_AMPERSAND_f__89935.invoke(setup.clj:211)"",
        ""query_processor.setup$fn__89934$fn__89939.invoke(setup.clj:195)"",
        ""query_processor$fn__91270$_AMPERSAND_f__91271.invoke(query_processor.clj:76)"",
        ""query_processor$fn__91270$fn__91276.invoke(query_processor.clj:69)"",
        ""query_processor.card$fn__113750$_AMPERSAND_f__113751.invoke(card.clj:190)"",
        ""query_processor.card$fn__113750$fn__113753.invoke(card.clj:186)"",
        ""query_processor.card$process_query_for_card_default_run_fn$fn__113756$fn__113757.invoke(card.clj:197)"",
        ""query_processor.streaming$_streaming_response$fn__92758$fn__92759$fn__92760.invoke(streaming.clj:171)"",
        ""query_processor.streaming$_streaming_response$fn__92758$fn__92759.invoke(streaming.clj:170)"",
        ""query_processor.streaming$do_with_streaming_rff.invokeStatic(streaming.clj:161)"",
        ""query_processor.streaming$do_with_streaming_rff.invoke(streaming.clj:148)"",
        ""query_processor.streaming$_streaming_response$fn__92758.invoke(streaming.clj:167)"",
        ""async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)"",
        ""async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)"",
        ""async.streaming_response$do_f_async$task__44603.invoke(streaming_response.clj:88)""
    ],
    ""card_id"": 116,
    ""context"": ""dashboard"",
    ""error"": ""Cannot determine the source table or query for Field clause [:field \""ID\"" {:base-type :type/BigInteger}]"",
    ""row_count"": 0,
    ""running_time"": 0,
    ""preprocessed"": {
        ""constraints"": {
            ""max-results"": 10000,
            ""max-results-bare-rows"": 2000
        },
        ""type"": ""query"",
        ""metabase.query-processor.middleware.add-dimension-projections/external-remaps"": [
            {
                ""id"": 2,
                ""name"": ""User ID"",
                ""field-id"": 40,
                ""field-name"": ""USER_ID"",
                ""human-readable-field-id"": 16,
                ""human-readable-field-name"": ""NAME""
            }
        ],
        ""middleware"": {
            ""js-int-to-string?"": true,
            ""ignore-cached-results?"": false,
            ""userland-query?"": true
        },
        ""user-parameters"": [
            {
                ""value"": [
                    ""5""
                ],
                ""type"": ""id"",
                ""id"": ""9d8185bc"",
                ""target"": [
                    ""dimension"",
                    [
                        ""field"",
                        ""ID"",
                        {
                            ""base-type"": ""type/BigInteger""
                        }
                    ]
                ]
            }
        ],
        ""viz-settings"": {},
        ""info"": {
            ""executed-by"": 1,
            ""context"": ""dashboard"",
            ""card-id"": 116,
            ""card-name"": ""Orders M1"",
            ""dashboard-id"": 8,
            ""visualization-settings"": {
                ""table.cell_column"": ""SUBTOTAL""
            },
            ""metadata/model-metadata"": [
                {
                    ""description"": ""This is a unique ID for the product. It is also called the “Invoice number” or “Confirmation number” in customer facing emails and screens."",
                    ""semantic_type"": ""type/PK"",
                    ""name"": ""ID"",
                    ""field_ref"": [
                        ""field"",
                        34,
                        null
                    ],
                    ""effective_type"": ""type/BigInteger"",
                    ""id"": 34,
                    ""visibility_type"": ""normal"",
                    ""display_name"": ""ID"",
                    ""base_type"": ""type/BigInteger""
                },
                {
                    ""description"": ""The id of the user who made this order. Note that in some cases where an order was created on behalf of a customer who phoned the order in, this might be the employee who handled the request."",
                    ""semantic_type"": ""type/FK"",
                    ""name"": ""USER_ID"",
                    ""fk_target_field_id"": 15,
                    ""field_ref"": [
                        ""field"",
                        40,
                        null
                    ],
                    ""effective_type"": ""type/Integer"",
                    ""id"": 40,
                    ""visibility_type"": ""normal"",
                    ""display_name"": ""User ID"",
                    ""fingerprint"": {
                        ""global"": {
                            ""distinct-count"": 929,
                            ""nil%"": 0.0
                        }
                    },
                    ""base_type"": ""type/Integer""
                },
                {
                    ""description"": ""The product ID. This is an internal identifier for the product, NOT the SKU."",
                    ""semantic_type"": ""type/FK"",
                    ""name"": ""PRODUCT_ID"",
                    ""fk_target_field_id"": 68,
                    ""field_ref"": [
                        ""field"",
                        37,
                        null
                    ],
                    ""effective_type"": ""type/Integer"",
                    ""id"": 37,
                    ""visibility_type"": ""normal"",
                    ""display_name"": ""Product ID"",
                    ""fingerprint"": {
                        ""global"": {
                            ""distinct-count"": 200,
                            ""nil%"": 0.0
                        }
                    },
                    ""base_type"": ""type/Integer""
                },
                {
                    ""description"": ""The raw, pre-tax cost of the order. Note that this might be different in the future from the product price due to promotions, credits, etc."",
                    ""name"": ""SUBTOTAL"",
                    ""field_ref"": [
                        ""field"",
                        41,
                        null
                    ],
                    ""effective_type"": ""type/Float"",
                    ""id"": 41,
                    ""visibility_type"": ""normal"",
                    ""display_name"": ""Subtotal"",
                    ""fingerprint"": {
                        ""global"": {
                            ""distinct-count"": 340,
                            ""nil%"": 0.0
                        },
                        ""type"": {
                            ""type/Number"": {
                                ""min"": 15.691943673970439,
                                ""q1"": 49.74894519060184,
                                ""q3"": 105.42965746993103,
                                ""max"": 148.22900526552291,
                                ""sd"": 32.53705013056317,
                                ""avg"": 77.01295465356547
                            }
                        }
                    },
                    ""base_type"": ""type/Float""
                },
                {
                    ""description"": ""This is the amount of local and federal taxes that are collected on the purchase. Note that other governmental fees on some products are not included here, but instead are accounted for in the subtotal."",
                    ""name"": ""TAX"",
                    ""field_ref"": [
                        ""field"",
                        35,
                        null
                    ],
                    ""effective_type"": ""type/Float"",
                    ""id"": 35,
                    ""visibility_type"": ""normal"",
                    ""display_name"": ""Tax"",
                    ""fingerprint"": {
                        ""global"": {
                            ""distinct-count"": 797,
                            ""nil%"": 0.0
                        },
                        ""type"": {
                            ""type/Number"": {
                                ""min"": 0.0,
                                ""q1"": 2.273340386603857,
                                ""q3"": 5.337275338216307,
                                ""max"": 11.12,
                                ""sd"": 2.3206651358900316,
                                ""avg"": 3.8722100000000004
                            }
                        }
                    },
                    ""base_type"": ""type/Float""
                },
                {
                    ""description"": ""The total billed amount."",
                    ""name"": ""TOTAL"",
                    ""field_ref"": [
                        ""field"",
                        39,
                        null
                    ],
                    ""effective_type"": ""type/Float"",
                    ""id"": 39,
                    ""visibility_type"": ""normal"",
                    ""display_name"": ""Total"",
                    ""fingerprint"": {
                        ""global"": {
                            ""distinct-count"": 4426,
                            ""nil%"": 0.0
                        },
                        ""type"": {
                            ""type/Number"": {
                                ""min"": 8.93914247937167,
                                ""q1"": 51.34535490743823,
                                ""q3"": 110.29428389265787,
                                ""max"": 159.34900526552292,
                                ""sd"": 34.26469575709948,
                                ""avg"": 80.35871658771228
                            }
                        }
                    },
                    ""base_type"": ""type/Float""
                },
                {
                    ""description"": ""Discount amount."",
                    ""semantic_type"": ""type/Discount"",
                    ""name"": ""DISCOUNT"",
                    ""field_ref"": [
                        ""field"",
                        33,
                        null
                    ],
                    ""effective_type"": ""type/Float"",
                    ""id"": 33,
                    ""visibility_type"": ""normal"",
                    ""display_name"": ""Discount with a very long name"",
                    ""fingerprint"": {
                        ""global"": {
                            ""distinct-count"": 701,
                            ""nil%"": 0.898
                        },
                        ""type"": {
                            ""type/Number"": {
                                ""min"": 0.17088996672584322,
                                ""q1"": 2.9786226681458743,
                                ""q3"": 7.338187788658235,
                                ""max"": 61.69684269960571,
                                ""sd"": 3.053663125001991,
                                ""avg"": 5.161255547580326
                            }
                        }
                    },
                    ""base_type"": ""type/Float""
                },
                {
                    ""description"": ""The date and time an order was submitted."",
                    ""semantic_type"": ""type/CreationTimestamp"",
                    ""unit"": ""default"",
                    ""name"": ""CREATED_AT"",
                    ""field_ref"": [
                        ""field"",
                        38,
                        {
                            ""temporal-unit"": ""default""
                        }
                    ],
                    ""effective_type"": ""type/DateTime"",
                    ""id"": 38,
                    ""visibility_type"": ""normal"",
                    ""display_name"": ""Created At"",
                    ""fingerprint"": {
                        ""global"": {
                            ""distinct-count"": 10001,
                            ""nil%"": 0.0
                        },
                        ""type"": {
                            ""type/DateTime"": {
                                ""earliest"": ""2022-04-30T18:56:13.352Z"",
                                ""latest"": ""2026-04-19T14:07:15.657Z""
                            }
                        }
                    },
                    ""base_type"": ""type/DateTime""
                },
                {
                    ""description"": ""Number of products bought."",
                    ""semantic_type"": ""type/Quantity"",
                    ""name"": ""QUANTITY"",
                    ""field_ref"": [
                        ""field"",
                        36,
                        null
                    ],
                    ""effective_type"": ""type/Integer"",
                    ""id"": 36,
                    ""visibility_type"": ""normal"",
                    ""display_name"": ""Quantity"",
                    ""fingerprint"": {
                        ""global"": {
                            ""distinct-count"": 62,
                            ""nil%"": 0.0
                        },
                        ""type"": {
                            ""type/Number"": {
                                ""min"": 0.0,
                                ""q1"": 1.755882607764982,
                                ""q3"": 4.882654507928044,
                                ""max"": 100.0,
                                ""sd"": 4.214258386403798,
                                ""avg"": 3.7015
                            }
                        }
                    },
                    ""base_type"": ""type/Integer""
                },
                {
                    ""description"": ""The name of the user who owns an account"",
                    ""semantic_type"": ""type/Name"",
                    ""name"": ""NAME"",
                    ""field_ref"": [
                        ""field"",
                        16,
                        {
                            ""source-field"": 40
                        }
                    ],
                    ""effective_type"": ""type/Text"",
                    ""id"": 16,
                    ""visibility_type"": ""normal"",
                    ""display_name"": ""User ID"",
                    ""fingerprint"": {
                        ""global"": {
                            ""distinct-count"": 2499,
                            ""nil%"": 0.0
                        },
                        ""type"": {
                            ""type/Text"": {
                                ""percent-json"": 0.0,
                                ""percent-url"": 0.0,
                                ""percent-email"": 0.0,
                                ""percent-state"": 0.0,
                                ""average-length"": 13.532
                            }
                        }
                    },
                    ""base_type"": ""type/Text""
                }
            ]
        },
        ""database"": 1,
        ""query"": {
            ""source-table"": 5,
            ""filter"": [
                ""="",
                [
                    ""field"",
                    ""ID"",
                    {
                        ""base-type"": ""type/BigInteger""
                    }
                ],
                [
                    ""value"",
                    5,
                    {
                        ""base_type"": ""type/BigInteger""
                    }
                ]
            ],
            ""fields"": [
                [
                    ""field"",
                    34,
                    null
                ],
                [
                    ""field"",
                    40,
                    {
                        ""metabase.query-processor.middleware.add-dimension-projections/original-field-dimension-id"": 2
                    }
                ],
                [
                    ""field"",
                    37,
                    null
                ],
                [
                    ""field"",
                    41,
                    null
                ],
                [
                    ""field"",
                    35,
                    null
                ],
                [
                    ""field"",
                    39,
                    null
                ],
                [
                    ""field"",
                    33,
                    null
                ],
                [
                    ""field"",
                    38,
                    {
                        ""temporal-unit"": ""default""
                    }
                ],
                [
                    ""field"",
                    36,
                    null
                ],
                [
                    ""field"",
                    16,
                    {
                        ""source-field"": 40,
                        ""metabase.query-processor.middleware.add-dimension-projections/new-field-dimension-id"": 2,
                        ""join-alias"": ""PEOPLE__via__USER_ID""
                    }
                ]
            ],
            ""joins"": [
                {
                    ""alias"": ""PEOPLE__via__USER_ID"",
                    ""strategy"": ""left-join"",
                    ""source-table"": 3,
                    ""condition"": [
                        ""="",
                        [
                            ""field"",
                            40,
                            null
                        ],
                        [
                            ""field"",
                            15,
                            {
                                ""join-alias"": ""PEOPLE__via__USER_ID""
                            }
                        ]
                    ],
                    ""fk-field-id"": 40
                }
            ],
            ""limit"": 2000,
            ""metabase.query-processor.middleware.limit/original-limit"": null
        }
    },
    ""ex-data"": {
        ""type"": ""invalid-query"",
        ""clause"": [
            ""field"",
            ""ID"",
            {
                ""base-type"": ""type/BigInteger""
            }
        ],
        ""query"": {
            ""source-table"": 5,
            ""filter"": [
                ""="",
                [
                    ""field"",
                    ""ID"",
                    {
                        ""base-type"": ""type/BigInteger""
                    }
                ],
                [
                    ""value"",
                    5,
                    {
                        ""base_type"": ""type/BigInteger""
                    }
                ]
            ],
            ""fields"": [
                [
                    ""field"",
                    34,
                    null
                ],
                [
                    ""field"",
                    40,
                    {
                        ""metabase.query-processor.middleware.add-dimension-projections/original-field-dimension-id"": 2
                    }
                ],
                [
                    ""field"",
                    37,
                    null
                ],
                [
                    ""field"",
                    41,
                    null
                ],
                [
                    ""field"",
                    35,
                    null
                ],
                [
                    ""field"",
                    39,
                    null
                ],
                [
                    ""field"",
                    33,
                    null
                ],
                [
                    ""field"",
                    38,
                    {
                        ""temporal-unit"": ""default""
                    }
                ],
                [
                    ""field"",
                    36,
                    null
                ],
                [
                    ""field"",
                    16,
                    {
                        ""source-field"": 40,
                        ""metabase.query-processor.middleware.add-dimension-projections/new-field-dimension-id"": 2,
                        ""join-alias"": ""PEOPLE__via__USER_ID""
                    }
                ]
            ],
            ""joins"": [
                {
                    ""alias"": ""PEOPLE__via__USER_ID"",
                    ""strategy"": ""left-join"",
                    ""source-table"": 3,
                    ""condition"": [
                        ""="",
                        [
                            ""field"",
                            40,
                            null
                        ],
                        [
                            ""field"",
                            15,
                            {
                                ""join-alias"": ""PEOPLE__via__USER_ID""
                            }
                        ]
                    ],
                    ""fk-field-id"": 40
                }
            ],
            ""limit"": 2000,
            ""metabase.query-processor.middleware.limit/original-limit"": null
        }
    },
    ""data"": {
        ""rows"": [],
        ""cols"": []
    }
}
```

</details>

### Information about your Metabase installation

master at ef9fb05784, 0.49.0-RC2

Works in v48. Works with questions.


### Severity

P1
",kamilmielnik,2024-03-11 13:47:18+00:00,['bshepherdson'],2024-08-28 02:10:35+00:00,2024-03-12 22:22:23+00:00,https://github.com/metabase/metabase/issues/39940,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('Reporting/Dashboards', ''), ('.Backend', ''), ('.Regression', 'Bugs that were previously fixed and/or bugs unintentionally shipped with new features.'), ('.Team/Querying', '')]","[{'comment_id': 1989299304, 'issue_id': 2179182136, 'author': 'bshepherdson', 'body': 'The trouble here is a mismatch between the parameter applying to the model\'s own inner query or to a wrapper using the model as its `source-query`.\r\n\r\nThe parameter has `target: [""dimension"", [""field"", ""ID"", {""base-type"": ""type/Integer""}]]` which is correct on a wrapper query with `{source_table: ""card__123""}`. But the parameter is really being applied to the model directly.\r\n\r\nThe preprocessed query looks like this (MLv2):\r\n```clojure\r\n{:stages [{:source-table 5\r\n           :filters [[:= [:field {} ""ID""] [:value {} 5]]]}\r\n```\r\nwhich is wrong.\r\n\r\nConfirmed this is a BE issue.', 'created_at': datetime.datetime(2024, 3, 11, 19, 44, 7, tzinfo=datetime.timezone.utc)}]","bshepherdson (Assginee) on (2024-03-11 19:44:07 UTC): The trouble here is a mismatch between the parameter applying to the model's own inner query or to a wrapper using the model as its `source-query`.

The parameter has `target: [""dimension"", [""field"", ""ID"", {""base-type"": ""type/Integer""}]]` which is correct on a wrapper query with `{source_table: ""card__123""}`. But the parameter is really being applied to the model directly.

The preprocessed query looks like this (MLv2):
```clojure
{:stages [{:source-table 5
           :filters [[:= [:field {} ""ID""] [:value {} 5]]]}
```
which is wrong.

Confirmed this is a BE issue.

"
2179123434,issue,closed,completed,Make it possible to add a new :druid-jdbc database,,lbrdnk,2024-03-11 13:21:33+00:00,['lbrdnk'],2024-03-19 22:34:53+00:00,2024-03-19 22:34:44+00:00,https://github.com/metabase/metabase/issues/39939,[],"[{'comment_id': 2008276785, 'issue_id': 2179123434, 'author': 'lbrdnk', 'body': 'Functionality is available as of https://github.com/metabase/metabase/commit/caf836f51240f2b18e6a29dd68ab33b46db2f727.', 'created_at': datetime.datetime(2024, 3, 19, 22, 34, 44, tzinfo=datetime.timezone.utc)}]","lbrdnk (Issue Creator) on (2024-03-19 22:34:44 UTC): Functionality is available as of https://github.com/metabase/metabase/commit/caf836f51240f2b18e6a29dd68ab33b46db2f727.

"
2179115877,issue,closed,completed,[Epic] Druid JDBC driver,"**Links**
- [product doc](https://www.notion.so/metabase/Revamped-Druid-driver-27f139935c26401bb378f5a1ccd15f90?pvs=4)
- [eng doc](https://www.notion.so/metabase/Druid-JDBC-driver-867deedf6a254d69837b046f7c5d7341?pvs=4)
- [feature branch `druid-jdbc`](https://github.com/metabase/metabase/tree/druid-jdbc)

**Implementation Plan**

```[tasklist]
### Phase 0
- [x] Get the dockerized Druid running for local development with sample data Druid provides.
- [x] Create new plain :druid-jdbc driver module using the Avatica JDBC driver. Register the empty driver.
- [x] Manually test interaction with local Druid deployment using newly created Metabase driver — eg. do select from druid sample data using Avatica JDBC driver in repl, from namespace of :druid-jdbc
```

```[tasklist]
### Phase 1
- [ ] https://github.com/metabase/metabase/issues/39939
- [ ] https://github.com/metabase/metabase/issues/40094
- [x] Ensure that we are able to run simple mbql queries (MBQL select and more works out of the box)
- [ ] https://github.com/metabase/metabase/issues/40096
```
Next phases and tasks will be added in accordance with progress.
```[tasklist]
### Phase 2
- [ ] https://github.com/metabase/metabase/issues/40501
```
",lbrdnk,2024-03-11 13:18:03+00:00,['lbrdnk'],2024-05-05 14:05:49+00:00,2024-05-05 14:05:40+00:00,https://github.com/metabase/metabase/issues/39938,"[('.Epic', 'Feature Implementation or Project')]","[{'comment_id': 2094822493, 'issue_id': 2179115877, 'author': 'lbrdnk', 'body': 'Driver has been merged to master with PR https://github.com/metabase/metabase/pull/40293.', 'created_at': datetime.datetime(2024, 5, 5, 14, 5, 40, tzinfo=datetime.timezone.utc)}]","lbrdnk (Issue Creator) on (2024-05-05 14:05:40 UTC): Driver has been merged to master with PR https://github.com/metabase/metabase/pull/40293.

"
2179011415,issue,closed,not_planned,Dashboard subscriptions only work for some dashboards,"**Describe the bug**
When subscribing to a dashboard or sending a test email from a dashboard, it is seemingly random for which dashboards it works.

**Logs**
I am entirely sure how much of the log to send, so:
```
[bb0c231c-8639-4722-b224-7e8a6e936c06] 2024-03-11T13:25:31+01:00 INFO metabase.query-processor.card Question's average execution duration is 252.0 ms; using 'magic' TTL of 25.0 s 💾
[bb0c231c-8639-4722-b224-7e8a6e936c06] 2024-03-11T13:25:31+01:00 WARN metabase.driver.sql.query-processor.deprecated Warning: Driver :sqlserver is using Honey SQL 1. This method was deprecated in 0.46.0 and will be removed in a future release.
[bb0c231c-8639-4722-b224-7e8a6e936c06] 2024-03-11T13:25:31+01:00 INFO metabase.query-processor.middleware.cache Query took 149.0 ms to run; minimum for cache eligibility is 10.0 s
[bb0c231c-8639-4722-b224-7e8a6e936c06] 2024-03-11T13:25:33+01:00 DEBUG metabase.server.middleware.log GET /api/embed/dashboard/eyJhbGciOiJIUzI1NiJ9.eyJyZXNvdXJjZSI6eyJkYXNoYm9hcmQiOjF9LCJwYXJhbXMiOnt9LCJpYXQiOjE3MDk4NDQyMzV9.iV7-RhAnQ3lIhZmaLXL9UQ1qoytcz3u60Eyqj88RfKM 200 129.2 ms (61 DB calls) App DB connections: 0/15 Jetty threads: 5/50 (4 idle, 0 queued) (139 total active threads) Queries in flight: 0 (0 queued)
[bb0c231c-8639-4722-b224-7e8a6e936c06] 2024-03-11T13:25:33+01:00 DEBUG metabase.server.middleware.log POST /api/pulse/test 200 2.4 s (38 DB calls) App DB connections: 0/15 Jetty threads: 4/50 (4 idle, 0 queued) (139 total active threads) Queries in flight: 0 (0 queued); sqlserver DB 6 connections: 0/6 (0 threads blocked)

```
**To Reproduce**
Have not found a way to reproduce it, as even dashboards using the same questions don't show the same behaviour.

**Expected behavior**
Emails are sent for every dashboard. 

**Severity**
It is not blocking users, but it prevents us from automatically sending out or daily reporting to the c-level.


**Metabase Diagnostic Info**

```json
{
  ""browser-info"": {
    ""language"": ""de-DE"",
    ""platform"": ""Win32"",
    ""userAgent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.20.1+1"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.20.1"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.20.1+1"",
    ""os.name"": ""Linux"",
    ""os.version"": ""6.1.0-10-amd64"",
    ""user.language"": ""en"",
    ""user.timezone"": ""GMT""
  },
  ""metabase-info"": {
    ""databases"": [
      ""h2"",
      ""postgres"",
      ""sqlserver""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""h2"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""H2"",
        ""version"": ""2.1.214 (2022-06-13)""
      },
      ""jdbc-driver"": {
        ""name"": ""H2 JDBC Driver"",
        ""version"": ""2.1.214 (2022-06-13)""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2023-09-18"",
      ""tag"": ""v0.47.2"",
      ""branch"": ""release-x.47.x"",
      ""hash"": ""536c24c""
    },
    ""settings"": {
      ""report-timezone"": ""Europe/Berlin""
    }
  }
}
```",nicohahn-adva,2024-03-11 12:27:35+00:00,[],2024-08-02 09:39:23+00:00,2024-08-02 09:39:22+00:00,https://github.com/metabase/metabase/issues/39936,[],"[{'comment_id': 1988399474, 'issue_id': 2179011415, 'author': 'paoliniluis', 'body': 'Can you move to 48 and see if this is fixed?', 'created_at': datetime.datetime(2024, 3, 11, 13, 6, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2191075989, 'issue_id': 2179011415, 'author': 'darksciencebase', 'body': '@nicohahn-adva do the dashboard subscriptions still fail for you?', 'created_at': datetime.datetime(2024, 6, 26, 8, 6, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2264979767, 'issue_id': 2179011415, 'author': 'darksciencebase', 'body': ""@nicohahn-adva i'm going to close this as we're not getting other reports about this and also we've made a lot of updates to this part of the product since 47.2. if you encounter the issue again, please leave a comment here or open a new issue. cheers"", 'created_at': datetime.datetime(2024, 8, 2, 9, 39, 22, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-11 13:06:10 UTC): Can you move to 48 and see if this is fixed?

darksciencebase on (2024-06-26 08:06:12 UTC): @nicohahn-adva do the dashboard subscriptions still fail for you?

darksciencebase on (2024-08-02 09:39:22 UTC): @nicohahn-adva i'm going to close this as we're not getting other reports about this and also we've made a lot of updates to this part of the product since 47.2. if you encounter the issue again, please leave a comment here or open a new issue. cheers

"
2178998389,issue,closed,not_planned,[Epic] New Druid driver (JDBC),"Ship a new Druid driver

[Product docs](https://www.notion.so/metabase/Revamped-Druid-driver-27f139935c26401bb378f5a1ccd15f90)",paoliniluis,2024-03-11 12:21:23+00:00,[],2024-03-16 06:31:30+00:00,2024-03-11 13:24:13+00:00,https://github.com/metabase/metabase/issues/39934,"[('Type:New Feature', ''), ('Database/Druid', None)]","[{'comment_id': 1988435251, 'issue_id': 2178998389, 'author': 'lbrdnk', 'body': 'Closing in favor of #39938.', 'created_at': datetime.datetime(2024, 3, 11, 13, 24, 13, tzinfo=datetime.timezone.utc)}]","lbrdnk on (2024-03-11 13:24:13 UTC): Closing in favor of #39938.

"
2178960781,issue,closed,not_planned,Option to set other localization settings in interactive embedding,"**Is your feature request related to a problem? Please describe.**
Interactive embedders would want to change style settings, such as Date and time styles, Separator and Currency styles for their different tenants. 

**Describe the solution you'd like**
Probably related to https://github.com/metabase/metabase/issues/18222 and https://github.com/metabase/metabase/issues/25153

**Describe alternatives you've considered**
Doing sandboxing and converting the formats at a question/view level, but more work

**How important is this feature to you?**
Requested by customers and probably useful for many interactive embedders our there. Internal ticket number: 25502

**Additional context**
May be tackled by SDK?
",ignacio-mb,2024-03-11 12:02:13+00:00,[],2024-05-21 13:33:28+00:00,2024-05-21 13:33:20+00:00,https://github.com/metabase/metabase/issues/39933,"[('Type:New Feature', ''), ('Embedding/Interactive', 'Interactive Embedding, previously known as Full app embedding'), ('.Team/Embedding', '')]","[{'comment_id': 1988508164, 'issue_id': 2178960781, 'author': 'paoliniluis', 'body': 'same as https://github.com/metabase/metabase/issues/38343?', 'created_at': datetime.datetime(2024, 3, 11, 13, 57, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2122638311, 'issue_id': 2178960781, 'author': 'albertoperdomo', 'body': 'I would say duplicate of https://github.com/metabase/metabase/issues/25577', 'created_at': datetime.datetime(2024, 5, 21, 13, 27, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2122650881, 'issue_id': 2178960781, 'author': 'ignacio-mb', 'body': 'Yes indeed, duplicate of https://github.com/metabase/metabase/issues/25577. I opened this one for the specific request to change formatting styles for each tenant.', 'created_at': datetime.datetime(2024, 5, 21, 13, 33, 20, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-11 13:57:42 UTC): same as https://github.com/metabase/metabase/issues/38343?

albertoperdomo on (2024-05-21 13:27:15 UTC): I would say duplicate of https://github.com/metabase/metabase/issues/25577

ignacio-mb (Issue Creator) on (2024-05-21 13:33:20 UTC): Yes indeed, duplicate of https://github.com/metabase/metabase/issues/25577. I opened this one for the specific request to change formatting styles for each tenant.

"
2178916721,issue,closed,completed,"Date and number fields in Models based of a SQL question without variables can still be linked to filters in dashboards, but the filters will not work","### Describe the bug

If you have a model that comes from a SQL question without any variables, Date and Number filters in dashboards will still let you connect to date and number fields in the card but the filters won't work.

### To Reproduce

1. Create a SQL question `select * from orders limit 20`, convert it into a model
2. Add the question to a dashboard
3. Create new number and date filters
4. See that you can wire them to a SQL card without any variables
5. Select any date/number from the fields. See that the cards won't get filtered

<img width=""509"" alt=""Screenshot 2024-03-11 at 8 36 36 AM"" src=""https://github.com/metabase/metabase/assets/132273646/04d1d7a7-4eb9-44df-b669-82cbb8949e4d"">

<img width=""489"" alt=""Screenshot 2024-03-11 at 8 36 25 AM"" src=""https://github.com/metabase/metabase/assets/132273646/9a141fbc-390b-46b6-b6be-5097ef2b5447"">


### Expected behavior

I don't know if filters should be blocked entirely from a SQL question/model without any variables in them, or if the date and number filters should work even though there is no variables in the card

### Logs

_No response_

### Information about your Metabase installation

```JSON
- reproduced in 48.8 and in master
```


### Severity

P2

### Additional context

_No response_",ignacio-mb,2024-03-11 11:39:02+00:00,[],2024-06-25 12:43:09+00:00,2024-06-25 12:40:08+00:00,https://github.com/metabase/metabase/issues/39932,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Reporting/Dashboards', ''), ('Querying/Parameters & Variables', 'Filter widgets, field filters, variables etc.'), ('Querying/Native', 'The SQL/native query editor'), ('Querying/Models', 'aka Datasets'), ('.Team/Querying', '')]","[{'comment_id': 2188829468, 'issue_id': 2178916721, 'author': 'nemanjaglumac', 'body': 'A similar or a duplicate issue has been reported here https://github.com/metabase/metabase/issues/44288\r\n\r\nFixed and reproduced by #44372', 'created_at': datetime.datetime(2024, 6, 25, 12, 40, 8, tzinfo=datetime.timezone.utc)}]","nemanjaglumac on (2024-06-25 12:40:08 UTC): A similar or a duplicate issue has been reported here https://github.com/metabase/metabase/issues/44288

Fixed and reproduced by #44372

"
2178803226,issue,closed,completed,BE flake: `metabase.api.card-test/update-card-with-type-and-dataset-test`,"This has flaked on mariadb twice for me today. 

Example run: https://github.com/metabase/metabase/actions/runs/8230882189/job/22505094170?pr=39924#step:4:2387
",calherries,2024-03-11 10:42:25+00:00,[],2024-03-11 12:57:48+00:00,2024-03-11 12:57:48+00:00,https://github.com/metabase/metabase/issues/39928,"[('flaky-test-fix', ''), ('.Team/Workflows', 'aka BEC')]",[],
2178792476,issue,closed,completed,FedCM in google signin on metabase,"### Describe the bug

Google has notified us of the necessity to integrate Metabase with Google FEDCM (Federated Credentials Management) by March 29. Failure to do so may result in disruption to our open-source Metabase deployment.

### To Reproduce

Attempt to authenticate with Google credentials on our Metabase instance.
Notice lack of integration with Google FEDCM.
Potential service interruption post-March 29.

[https://developers.google.com/identity/gsi/web/guides/overview](https://developers.google.com/identity/gsi/web/guides/overview)

[https://developers.google.com/identity/gsi/web/guides/fedcm-migration#fedcm_flag](https://developers.google.com/identity/gsi/web/guides/fedcm-migration#fedcm_flag)


### Expected behavior

_No response_

### Logs

_No response_

### Information about your Metabase installation

```JSON
Metabase version 0.48.8
```


### Severity

Urgent

### Additional context

_No response_",raoanees,2024-03-11 10:37:02+00:00,['iethree'],2024-03-12 19:17:41+00:00,2024-03-12 19:16:57+00:00,https://github.com/metabase/metabase/issues/39927,"[('Type:Bug', 'Product defects')]","[{'comment_id': 1989276875, 'issue_id': 2178792476, 'author': 'iethree', 'body': 'see: https://github.com/MomenSherif/react-oauth/issues/333', 'created_at': datetime.datetime(2024, 3, 11, 19, 33, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1992369341, 'issue_id': 2178792476, 'author': 'iethree', 'body': ""After testing using [chrome's third-party-cookie phaseout flag](https://developers.google.com/privacy-sandbox/3pcd/prepare/test-for-breakage), Google SSO still works properly in metabase with all third party cookies blocked. \r\n\r\nIt seems that google has been overly inclusive in its communications around the third party cookie phase-out. I'd encourage you to confirm using the chrome testing tools linked, and let us know if you encounter any problems. 👍"", 'created_at': datetime.datetime(2024, 3, 12, 19, 16, 57, tzinfo=datetime.timezone.utc)}]","iethree (Assginee) on (2024-03-11 19:33:11 UTC): see: https://github.com/MomenSherif/react-oauth/issues/333

iethree (Assginee) on (2024-03-12 19:16:57 UTC): After testing using [chrome's third-party-cookie phaseout flag](https://developers.google.com/privacy-sandbox/3pcd/prepare/test-for-breakage), Google SSO still works properly in metabase with all third party cookies blocked. 

It seems that google has been overly inclusive in its communications around the third party cookie phase-out. I'd encourage you to confirm using the chrome testing tools linked, and let us know if you encounter any problems. 👍

"
2178498254,issue,open,,duration field when calculating the average is showing more than 24 hours,"### Describe the bug

we have a column that has hours , minutes and seconds , when you make an average it showed us the hours as 31 hours , will it should round it after 24 for sure. 

### To Reproduce

- have some data in duration field with periods in multiple days
- perform average on this data
- check the outputted results


### Expected behavior

correct
O years 0 mons 34 days 7 hours 46 mins 15.065174 secs
wrong
O years 0 mons 33 days 31 hours 46 mins 15.065174 secs

### Information about your Metabase installation

```JSON
- Google Chrome Version 122.0.6261.112
- Metabase version 0.48.8
```


### Severity

messing up some calculations checks

### Additional context

<img width=""818"" alt=""image"" src=""https://github.com/metabase/metabase/assets/115450610/5665eaa4-19ae-438d-9e8f-bf68cd59b787"">
<img width=""818"" alt=""Screenshot 2024-03-11 120200"" src=""https://github.com/metabase/metabase/assets/115450610/67345712-6124-4936-9764-3da48b6f1066"">
",hamdyyy9,2024-03-11 08:12:50+00:00,[],2024-05-21 14:16:42+00:00,,https://github.com/metabase/metabase/issues/39923,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Frontend', ''), ('Visualization/Tables', 'raw, summarized and tabular visualizations'), ('.Team/DashViz', 'Dashboard and Viz team')]","[{'comment_id': 1988513645, 'issue_id': 2178498254, 'author': 'paoliniluis', 'body': ""so you say that we're calculating the average wrong?"", 'created_at': datetime.datetime(2024, 3, 11, 14, 0, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1990555213, 'issue_id': 2178498254, 'author': 'nofalx', 'body': 'We are facing the same issue, it is not that the calculation is wrong but that the format seems to be not correct. \n\nIn this case shouldnt the 31 hours be interrupted as + 1 day and 7 hours? As in hours shouldnt go above 24 hours', 'created_at': datetime.datetime(2024, 3, 12, 5, 26, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2003087478, 'issue_id': 2178498254, 'author': 'hamdyyy9', 'body': 'any updates anyone ?', 'created_at': datetime.datetime(2024, 3, 18, 7, 22, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2003786646, 'issue_id': 2178498254, 'author': 'paoliniluis', 'body': 'Ok so what you need is that we format the time correctly, is that the issue then?', 'created_at': datetime.datetime(2024, 3, 18, 12, 30, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2006316785, 'issue_id': 2178498254, 'author': 'nofalx', 'body': '@paoliniluis \r\n\r\nThank you ,Yes:  \r\n-  We would need to not have the hours exceed 24 hours, but instead add +1 day and show the remaining hours\r\n- Optionally if possible, it would be nice if we can have multiple formats for duration field (total seconds or duration string)', 'created_at': datetime.datetime(2024, 3, 19, 8, 38, 3, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-11 14:00:12 UTC): so you say that we're calculating the average wrong?

nofalx on (2024-03-12 05:26:35 UTC): We are facing the same issue, it is not that the calculation is wrong but that the format seems to be not correct. 

In this case shouldnt the 31 hours be interrupted as + 1 day and 7 hours? As in hours shouldnt go above 24 hours

hamdyyy9 (Issue Creator) on (2024-03-18 07:22:17 UTC): any updates anyone ?

paoliniluis on (2024-03-18 12:30:13 UTC): Ok so what you need is that we format the time correctly, is that the issue then?

nofalx on (2024-03-19 08:38:03 UTC): @paoliniluis 

Thank you ,Yes:  
-  We would need to not have the hours exceed 24 hours, but instead add +1 day and show the remaining hours
- Optionally if possible, it would be nice if we can have multiple formats for duration field (total seconds or duration string)

"
2178319746,issue,closed,not_planned,"Metabase deployment, the MySQL data used requires SSL authentication (CA certificate)","Metabase deployment, the MySQL data used requires SSL authentication (CA certificate)",Avey777,2024-03-11 06:21:14+00:00,[],2024-03-11 17:15:36+00:00,2024-03-11 15:55:27+00:00,https://github.com/metabase/metabase/issues/39920,"[('Type:New Feature', ''), ('.Needs Triage', '')]","[{'comment_id': 1988779243, 'issue_id': 2178319746, 'author': 'paoliniluis', 'body': ""Hi @Avey777, you're hitting https://github.com/metabase/metabase/issues/9629"", 'created_at': datetime.datetime(2024, 3, 11, 15, 55, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1988830859, 'issue_id': 2178319746, 'author': 'Avey777', 'body': ""> Hi @Avey777, you're hitting\n\nI mean the database used by the database itself, not the data source for the data search"", 'created_at': datetime.datetime(2024, 3, 11, 16, 16, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 1989000647, 'issue_id': 2178319746, 'author': 'paoliniluis', 'body': 'definitely the same issue', 'created_at': datetime.datetime(2024, 3, 11, 17, 15, 34, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-11 15:55:27 UTC): Hi @Avey777, you're hitting https://github.com/metabase/metabase/issues/9629

Avey777 (Issue Creator) on (2024-03-11 16:16:37 UTC): I mean the database used by the database itself, not the data source for the data search

paoliniluis on (2024-03-11 17:15:34 UTC): definitely the same issue

"
2177782166,issue,closed,not_planned,"Getting error while joining 2 queries in question ""Card 728 does not exist.""","The mapping column does exist between both the joins, not sure why this error is showing up.
trying to do left join between 2 queries. The datasource of both queries is different though",Annjali94,2024-03-10 15:56:49+00:00,[],2024-03-11 15:58:00+00:00,2024-03-11 15:57:59+00:00,https://github.com/metabase/metabase/issues/39918,[],"[{'comment_id': 1988784805, 'issue_id': 2177782166, 'author': 'paoliniluis', 'body': ""troubleshooting info? we can't take this issue into consideration unless you give us information we can use to debug this.\r\n\r\nMoreover: cross db joins is not supported"", 'created_at': datetime.datetime(2024, 3, 11, 15, 57, 59, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-11 15:57:59 UTC): troubleshooting info? we can't take this issue into consideration unless you give us information we can use to debug this.

Moreover: cross db joins is not supported

"
2177358235,issue,closed,not_planned,"Couldn't delete collection folder in the ""Archive View""","### Describe the bug

Within the Archive view, unable to delete items by selecting the checkbox and hitting the ""Delete"" button at the bottom of the screen.

### To Reproduce

1. Go to 'View archive' screen
2. Check the checkbox next to a collection **Folder**  (not a question or dashboard)
3. Scroll down to the bottom of the view and click on the delete button.
4. See error in console. No action taken on the GUI. 
![image](https://github.com/metabase/metabase/assets/12698493/2e47f446-6492-4b16-9ad9-88fe5abf2930)



### Expected behavior

Should delete the folder

### Logs

Not applicable. Frontend error. Please see screenshot.

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""en-GB"",
    ""platform"": ""MacIntel"",
    ""userAgent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""17.0.10+7-Debian-1deb12u1"",
    ""java.vendor"": ""Debian"",
    ""java.vendor.url"": ""https://tracker.debian.org/openjdk-17"",
    ""java.version"": ""17.0.10"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""17.0.10+7-Debian-1deb12u1"",
    ""os.name"": ""Linux"",
    ""os.version"": ""6.1.0-18-cloud-amd64"",
    ""user.language"": ""en"",
    ""user.timezone"": ""Etc/UTC""
  },
  ""metabase-info"": {
    ""databases"": [
      ""h2"",
      ""bigquery-cloud-sdk""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""h2"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""H2"",
        ""version"": ""2.1.214 (2022-06-13)""
      },
      ""jdbc-driver"": {
        ""name"": ""H2 JDBC Driver"",
        ""version"": ""2.1.214 (2022-06-13)""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-02-22"",
      ""tag"": ""v0.48.7"",
      ""hash"": ""c192db1""
    },
    ""settings"": {
      ""report-timezone"": null
    }
  }
}
```


### Severity

Low

### Additional context

_No response_",arunura,2024-03-09 19:01:45+00:00,[],2024-03-09 19:03:39+00:00,2024-03-09 19:03:38+00:00,https://github.com/metabase/metabase/issues/39917,"[('Type:Bug', 'Product defects'), ('.Needs Triage', '')]","[{'comment_id': 1986950148, 'issue_id': 2177358235, 'author': 'paoliniluis', 'body': 'Duplicate of https://github.com/metabase/metabase/issues/39916', 'created_at': datetime.datetime(2024, 3, 9, 19, 3, 39, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-09 19:03:39 UTC): Duplicate of https://github.com/metabase/metabase/issues/39916

"
2177030662,issue,closed,not_planned,delete collection cannot work in archived collection view,"### Describe the bug

delete collection cannot work in archived collection view

### To Reproduce

in archived collection view and select one or more archived collection. 
click delete button at the button. 

### Expected behavior

collection can be deleted. 

### Logs

console log in dev tools of Chrome: 
Uncaught TypeError: n.actions.delete is not a function
    at search.js:117:43
    at index.js:16:18
    at ArchiveApp.tsx:148:36
    at Array.forEach (<anonymous>)
    at onClick (ArchiveApp.tsx:148:20)
    at Object.A (react-dom.production.min.js:14:84)
    at z (react-dom.production.min.js:14:238)
    at react-dom.production.min.js:14:292
    at w (react-dom.production.min.js:14:393)
    at ti (react-dom.production.min.js:52:170)

### Information about your Metabase installation

```JSON
ubuntu 22.04 with docker. Run the latest version of docker images.
```


### Severity

normal

### Additional context

_No response_",hunter-xue,2024-03-09 03:28:00+00:00,[],2024-03-09 13:29:19+00:00,2024-03-09 13:29:19+00:00,https://github.com/metabase/metabase/issues/39916,"[('Type:Bug', 'Product defects'), ('.Needs Triage', '')]","[{'comment_id': 1986857697, 'issue_id': 2177030662, 'author': 'paoliniluis', 'body': 'duplicate of https://github.com/metabase/metabase/issues/18372', 'created_at': datetime.datetime(2024, 3, 9, 13, 29, 19, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-09 13:29:19 UTC): duplicate of https://github.com/metabase/metabase/issues/18372

"
2176863977,issue,closed,completed,Remove all doesn't work when adding/removing columns,"### Describe the bug

When browsing a model, I clicked on the gear icon to view columns and then clicked on add/remove columns. There is a ""remove all"" option to deselect all fields, but it doesn't do anything. 

### To Reproduce

See description

### Expected behavior

Clicking on check box or remove all should unselect all fields

### Logs

n/a

### Information about your Metabase installation

```JSON
master @ Postgres
```


### Severity

low as I can manually do it for each field

### Additional context

_No response_",maxzheng,2024-03-08 22:21:47+00:00,['ranquild'],2024-06-26 16:55:02+00:00,2024-06-26 15:54:56+00:00,https://github.com/metabase/metabase/issues/39912,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Frontend', ''), ('Querying/GUI', 'Query builder catch-all, including simple mode'), ('.Team/Querying', '')]","[{'comment_id': 2116175376, 'issue_id': 2176863977, 'author': 'ranquild', 'body': '@maxzheng could you send a link to the model? With just ID, not name.', 'created_at': datetime.datetime(2024, 5, 16, 21, 4, 31, tzinfo=datetime.timezone.utc)}]","ranquild (Assginee) on (2024-05-16 21:04:31 UTC): @maxzheng could you send a link to the model? With just ID, not name.

"
2176840219,issue,open,,[MLv2 × QP] Migrate post-processing middleware `metabase.query-processor.middleware.fetch-source-query`,,camsaul,2024-03-08 21:59:16+00:00,[],2024-03-08 21:59:16+00:00,,https://github.com/metabase/metabase/issues/39911,[],[],
2176839977,issue,open,,[MLv2 × QP] Migrate post-processing middleware `metabase.query-processor.middleware.annotate`,,camsaul,2024-03-08 21:59:00+00:00,[],2024-03-08 21:59:00+00:00,,https://github.com/metabase/metabase/issues/39910,[],[],
2176839858,issue,open,,[MLv2 × QP] Migrate post-processing middleware `metabase.query-processor.middleware.cumulative-aggregations`,,camsaul,2024-03-08 21:58:51+00:00,[],2024-03-08 21:58:51+00:00,,https://github.com/metabase/metabase/issues/39909,[],[],
2176839753,issue,open,,[MLv2 × QP] Migrate post-processing middleware `metabase.query-processor.middleware.visualization-settings`,,camsaul,2024-03-08 21:58:44+00:00,[],2024-03-08 21:58:44+00:00,,https://github.com/metabase/metabase/issues/39908,[],[],
2176839651,issue,open,,[MLv2 × QP] Migrate post-processing middleware `metabase.query-processor.middleware.large-int-id`,,camsaul,2024-03-08 21:58:37+00:00,[],2024-03-08 21:58:37+00:00,,https://github.com/metabase/metabase/issues/39907,[],[],
2176839511,issue,open,,[MLv2 × QP] Migrate post-processing middleware `metabase.query-processor.middleware.format-rows`,,camsaul,2024-03-08 21:58:28+00:00,[],2024-03-08 21:58:28+00:00,,https://github.com/metabase/metabase/issues/39906,[],[],
2176839237,issue,open,,[MLv2 × QP] Migrate post-processing middleware `metabase.query-processor.middleware.add-dimension-projections`,,camsaul,2024-03-08 21:58:18+00:00,[],2024-03-08 21:58:18+00:00,,https://github.com/metabase/metabase/issues/39905,[],[],
2176838940,issue,open,,[MLv2 × QP] Migrate post-processing middleware `metabase.query-processor.middleware.enterprise`,,camsaul,2024-03-08 21:58:10+00:00,[],2024-03-08 21:58:10+00:00,,https://github.com/metabase/metabase/issues/39904,[],[],
2176837778,issue,open,,[MLv2 × QP] Migrate post-processing middleware `metabase.query-processor.middleware.add-timezone-info`,,camsaul,2024-03-08 21:57:32+00:00,[],2024-03-08 21:57:32+00:00,,https://github.com/metabase/metabase/issues/39903,[],[],
2176837016,issue,open,,[MLv2 × QP] Migrate post-processing middleware `metabase.query-processor.middleware.splice-params-in-response`,,camsaul,2024-03-08 21:57:08+00:00,[],2024-03-08 21:57:08+00:00,,https://github.com/metabase/metabase/issues/39902,[],[],
2176836224,issue,open,,[MLv2 × QP] Migrate post-processing middleware `metabase.query-processor.middleware.add-rows-truncated`,,camsaul,2024-03-08 21:56:45+00:00,[],2024-03-08 21:56:45+00:00,,https://github.com/metabase/metabase/issues/39901,[],[],
2176835989,issue,open,,[MLv2 × QP] Migrate post-processing middleware `metabase.query-processor.middleware.enterprise`,,camsaul,2024-03-08 21:56:38+00:00,[],2024-03-08 21:56:38+00:00,,https://github.com/metabase/metabase/issues/39900,[],[],
2176835771,issue,open,,[MLv2 × QP] Migrate post-processing middleware `metabase.query-processor.middleware.limit`,,camsaul,2024-03-08 21:56:31+00:00,[],2024-03-08 21:56:31+00:00,,https://github.com/metabase/metabase/issues/39899,[],[],
2176835520,issue,open,,[MLv2 × QP] Migrate post-processing middleware `metabase.query-processor.middleware.results-metadata`,,camsaul,2024-03-08 21:56:23+00:00,[],2024-03-08 21:56:23+00:00,,https://github.com/metabase/metabase/issues/39898,[],[],
2176834258,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.check-features`,,camsaul,2024-03-08 21:55:41+00:00,[],2024-03-08 21:55:41+00:00,,https://github.com/metabase/metabase/issues/39897,[],[],
2176834037,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.enterprise/apply-download-limit`,,camsaul,2024-03-08 21:55:35+00:00,[],2024-03-08 22:00:53+00:00,,https://github.com/metabase/metabase/issues/39896,[],[],
2176833820,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.limit`,,camsaul,2024-03-08 21:55:27+00:00,[],2024-03-08 21:55:27+00:00,,https://github.com/metabase/metabase/issues/39895,[],[],
2176832806,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.optimize-temporal-filters`,,camsaul,2024-03-08 21:54:56+00:00,[],2024-03-08 21:54:56+00:00,,https://github.com/metabase/metabase/issues/39894,[],[],
2176832531,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.validate-temporal-bucketing`,,camsaul,2024-03-08 21:54:49+00:00,[],2024-03-08 21:54:49+00:00,,https://github.com/metabase/metabase/issues/39893,[],[],
2176832288,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.auto-parse-filter-values`,,camsaul,2024-03-08 21:54:41+00:00,[],2024-03-08 21:54:41+00:00,,https://github.com/metabase/metabase/issues/39892,[],[],
2176832069,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.wrap-value-literals`,,camsaul,2024-03-08 21:54:34+00:00,[],2024-03-08 21:54:34+00:00,,https://github.com/metabase/metabase/issues/39891,[],[],
2176831757,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.pre-alias-aggregations`,,camsaul,2024-03-08 21:54:24+00:00,[],2024-03-08 21:54:24+00:00,,https://github.com/metabase/metabase/issues/39890,[],[],
2176831343,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.cumulative-aggregations`,,camsaul,2024-03-08 21:54:10+00:00,[],2024-03-08 21:54:10+00:00,,https://github.com/metabase/metabase/issues/39889,[],[],
2176830833,issue,closed,not_planned,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.enterprise`,,camsaul,2024-03-08 21:53:54+00:00,[],2024-03-08 22:01:58+00:00,2024-03-08 22:01:58+00:00,https://github.com/metabase/metabase/issues/39888,[],"[{'comment_id': 1986482921, 'issue_id': 2176830833, 'author': 'camsaul', 'body': 'Duplicate of https://github.com/metabase/metabase/issues/39838', 'created_at': datetime.datetime(2024, 3, 8, 22, 1, 58, tzinfo=datetime.timezone.utc)}]","camsaul (Issue Creator) on (2024-03-08 22:01:58 UTC): Duplicate of https://github.com/metabase/metabase/issues/39838

"
2176829174,issue,open,reopened,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.escape-join-aliases`,,camsaul,2024-03-08 21:53:01+00:00,[],2024-03-08 22:01:55+00:00,,https://github.com/metabase/metabase/issues/39887,[],"[{'comment_id': 1986481642, 'issue_id': 2176829174, 'author': 'camsaul', 'body': 'Duplicate of #39838', 'created_at': datetime.datetime(2024, 3, 8, 22, 0, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1986482871, 'issue_id': 2176829174, 'author': 'camsaul', 'body': 'oops wrong issue', 'created_at': datetime.datetime(2024, 3, 8, 22, 1, 54, tzinfo=datetime.timezone.utc)}]","camsaul (Issue Creator) on (2024-03-08 22:00:35 UTC): Duplicate of #39838

camsaul (Issue Creator) on (2024-03-08 22:01:54 UTC): oops wrong issue

"
2176828349,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.fix-bad-references`,,camsaul,2024-03-08 21:52:36+00:00,[],2024-03-08 21:52:36+00:00,,https://github.com/metabase/metabase/issues/39886,[],[],
2176827754,issue,open,,[MLv2 × QP] Deprecate/remove QP Store entirely,,camsaul,2024-03-08 21:52:11+00:00,['camsaul'],2025-02-04 20:29:49+00:00,,https://github.com/metabase/metabase/issues/39885,"[('Type:Tech Debt', 'or Refactoring'), ('Querying/Processor', ''), ('.Backend', ''), ('.Team/Querying', '')]",[],
2176826064,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.resolve-joined-fields`,,camsaul,2024-03-08 21:50:22+00:00,[],2024-03-08 21:50:22+00:00,,https://github.com/metabase/metabase/issues/39884,[],[],
2176825916,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.resolve-joins`,,camsaul,2024-03-08 21:50:13+00:00,[],2024-03-08 21:50:13+00:00,,https://github.com/metabase/metabase/issues/39883,[],[],
2176825807,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.add-implicit-joins`,,camsaul,2024-03-08 21:50:05+00:00,[],2024-03-08 21:50:05+00:00,,https://github.com/metabase/metabase/issues/39882,[],[],
2176825670,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.add-default-temporal-unit`,,camsaul,2024-03-08 21:49:58+00:00,[],2024-03-08 21:49:58+00:00,,https://github.com/metabase/metabase/issues/39881,[],[],
2176825508,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.desugar`,,camsaul,2024-03-08 21:49:49+00:00,[],2024-03-08 21:49:49+00:00,,https://github.com/metabase/metabase/issues/39880,[],[],
2176824699,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.binning`,,camsaul,2024-03-08 21:48:58+00:00,[],2024-03-08 21:48:58+00:00,,https://github.com/metabase/metabase/issues/39879,[],[],
2176823655,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.resolve-fields`,,camsaul,2024-03-08 21:48:00+00:00,[],2024-03-08 21:48:00+00:00,,https://github.com/metabase/metabase/issues/39878,[],[],
2176823536,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.add-dimension-projections`,,camsaul,2024-03-08 21:47:52+00:00,[],2024-03-08 21:47:52+00:00,,https://github.com/metabase/metabase/issues/39877,[],[],
2176669132,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.add-implicit-clauses`,,camsaul,2024-03-08 19:44:46+00:00,[],2024-03-08 19:44:46+00:00,,https://github.com/metabase/metabase/issues/39874,[],[],
2176668789,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.persistence`,,camsaul,2024-03-08 19:44:34+00:00,[],2024-03-08 19:44:34+00:00,,https://github.com/metabase/metabase/issues/39873,[],[],
2176641780,issue,open,,Use newly inferred types for previously empty columns when appending data to uploaded tables,"### Description

When uploading a file with no entries for a given column, we will default to giving the column a ""text"" type.
If we later append a file with non-null entries, they will be interpreted as strings.

If on the other hand we were to concatenate the two files together before uploading, the column would take the type inferred from the non-null entries, e.g. float.

It would be great if we could get the latter result even in the former scenario.

### Suggested solution

A potential solution could go as follows:

1. Consider all text columns.
2. Restrict these to those with no non-null values.
3. Reset the types for these columns to `nil` before running the type relaxation algorithm.
4. Update the relaxation algorithm to use the full topo-sorted type list as the ""ancestors"" of nil.
5. Update the ""promotion"" logic to allow column modification whenever the exist type was reset to nil.

The trickiest part of this is (2), as this involves reading the table and we would want it to be as efficient as possible.

We could use fieldvalues or fingerprint data as ""best effort"" guesses, but neither would be reliable as they might not have been created yet, might be stale, or may be incorrect due to sampling. Realistically they will not give false negatives, so potentially we could use them a pre-filtering step, but would probably want to query the actual table in anger as a final validation.

An example SQL query for doing this fairly efficiently for a list of potentially empty fields:

```
SELECT 'field_a' AS empty_fields 
  WHERE NOT EXISTS (SELECT 1 FROM table_name WHERE field_a IS NOT NULL LIMIT 1)
UNION ALL SELECT 'field_b' 
  WHERE NOT EXISTS (SELECT 1 FROM table_name WHERE field_b IS NOT NULL LIMIT 1)
UNION ALL SELECT 'field_c' 
  WHERE NOT EXISTS (SELECT 1 FROM table_name WHERE field_c IS NOT NULL LIMIT 1);
```",crisptrutski,2024-03-08 19:25:49+00:00,[],2024-03-26 10:58:32+00:00,,https://github.com/metabase/metabase/issues/39872,"[('Organization/Uploads', 'Direct data upload (CSV)')]",[],
2176580609,issue,closed,completed,Support column addition / reordering,"If the user uploads a file with the same column names and compatible types as the existing table, it should Just Work.

Similarly, if the set of columns is a superset, we should backfill with nil and it should also Just Work.

See: [Notion link](https://www.notion.so/metabase/Allow-append-and-replace-to-existing-CSV-uploads-f1f13864632d4cfd83522fce762890eb?pvs=4#a2dab2eb8fff43edbe479a4a44c2ac69)",crisptrutski,2024-03-08 18:43:56+00:00,['crisptrutski'],2024-03-19 18:27:06+00:00,2024-03-19 18:27:06+00:00,https://github.com/metabase/metabase/issues/39868,"[('.Team/Workflows', 'aka BEC')]",[],
2176579804,issue,closed,completed,Publish snowplow events when appending to uploads,See the corresponding event that we are already sending when uploads are created.,crisptrutski,2024-03-08 18:43:38+00:00,['crisptrutski'],2024-03-18 17:44:10+00:00,2024-03-18 16:16:57+00:00,https://github.com/metabase/metabase/issues/39867,"[('.Team/Workflows', 'aka BEC')]",[],
2176537600,issue,closed,completed,Switching between tabs reruns queries even if filters are not modified,"### Describe the bug

Queries are being rerun when switching between tabs in 48.x, even though this is not the intended behavior (see [thread](https://metaboat.slack.com/archives/C01LQQ2UW03/p1709760884184699))

https://github.com/metabase/metabase/assets/132273646/b48c0c75-9518-44ba-b0bf-d81e19bc2005



### To Reproduce

1. Dave a dashboard with “Tab A” and “Tab B”, both tabs have questions and common filters.
2. Open “Tab A”, set some filter values and wait until things load
3. Go to “Tab B”, wait until things load
4. Go back to “Tab A”

Metabase reruns queries even though filters were not changed. This should not be happening as per [this](https://github.com/metabase/metabase/blob/2e5a99b3b03e3cad7a413507627281e776869e5e/frontend/src/metabase/dashboard/actions/data-fetching.js#L332) 










### Expected behavior

Shouldn't rerun the query if things keep unmodified

### Logs

_No response_

### Information about your Metabase installation

```JSON
- V1.48.8
```


### Severity

P2

### Additional context

Happens in 48 and 47, doesn't happen in Master (49)",ignacio-mb,2024-03-08 18:14:58+00:00,['kulyk'],2024-05-21 14:43:48+00:00,2024-03-30 11:34:57+00:00,https://github.com/metabase/metabase/issues/39863,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Reporting/Dashboards', ''), ('.Reproduced', 'Issues reproduced in test (usually Cypress)'), ('.Regression', 'Bugs that were previously fixed and/or bugs unintentionally shipped with new features.'), ('.Team/DashViz', 'Dashboard and Viz team')]","[{'comment_id': 2003907515, 'issue_id': 2176537600, 'author': 'ignacio-mb', 'body': ""Couldn't reproduce in 49, so closing this."", 'created_at': datetime.datetime(2024, 3, 18, 13, 28, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2027284380, 'issue_id': 2176537600, 'author': 'kulyk', 'body': ""Update: the issue can be reproduced in 49 as well. #35465 fixed this on `master` but it wasn't backported to 49 (and most likely shouldn't)"", 'created_at': datetime.datetime(2024, 3, 29, 13, 57, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2028021859, 'issue_id': 2176537600, 'author': 'kulyk', 'body': 'Fixed in #40783', 'created_at': datetime.datetime(2024, 3, 30, 11, 34, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2036011049, 'issue_id': 2176537600, 'author': 'mayanala-coxauto', 'body': 'It seems like if I have more than 8 Dashboard filters then it goes back to re-running the queries switching tabs.', 'created_at': datetime.datetime(2024, 4, 4, 2, 16, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 2037830659, 'issue_id': 2176537600, 'author': 'kulyk', 'body': '@mayanala-coxauto, after some investigation, I think the issue is related to pivot tables, and dashboard filters are not involved AFAICT. The pivot table issue is now tracked at https://github.com/metabase/metabase/issues/41043', 'created_at': datetime.datetime(2024, 4, 4, 17, 50, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 2037970969, 'issue_id': 2176537600, 'author': 'mayanala-coxauto', 'body': '@kulyk I\'m not certain if it\'s just with pivot tables. I\'m able to reproduce the issue with Sample DB.\r\n\r\nSteps to Reproduce:\r\n1)\tCreate Native Sql question with field filters and normal table visualization which default. Make created_at field as required field.\r\nSELECT\r\n  ""PUBLIC"".""PEOPLE"".""ID"" AS ""ID"",\r\n  ""PUBLIC"".""PEOPLE"".""ADDRESS"" AS ""ADDRESS"",\r\n  ""PUBLIC"".""PEOPLE"".""EMAIL"" AS ""EMAIL"",\r\n  ""PUBLIC"".""PEOPLE"".""PASSWORD"" AS ""PASSWORD"",\r\n  ""PUBLIC"".""PEOPLE"".""NAME"" AS ""NAME"",\r\n  ""PUBLIC"".""PEOPLE"".""CITY"" AS ""CITY"",\r\n  ""PUBLIC"".""PEOPLE"".""LONGITUDE"" AS ""LONGITUDE"",\r\n  ""PUBLIC"".""PEOPLE"".""STATE"" AS ""STATE"",\r\n  ""PUBLIC"".""PEOPLE"".""SOURCE"" AS ""SOURCE"",\r\n  ""PUBLIC"".""PEOPLE"".""BIRTH_DATE"" AS ""BIRTH_DATE"",\r\n  ""PUBLIC"".""PEOPLE"".""ZIP"" AS ""ZIP"",\r\n  ""PUBLIC"".""PEOPLE"".""LATITUDE"" AS ""LATITUDE"",\r\n  ""PUBLIC"".""PEOPLE"".""CREATED_AT"" AS ""CREATED_AT""\r\nFROM\r\n  ""PUBLIC"".""PEOPLE""\r\n  where true\r\n  [[and {{v_id}}]]\r\n  [[ and {{v_name}}]]\r\n  [[ and {{v_city}}]]\r\n  [[ and {{v_state}}]]\r\n  [[ and {{v_source}}]]\r\n  [[ and {{v_zip}}]]\r\n  [[ and {{v_email}}]]\r\n  [[ and {{v_password}}]]\r\n  [[ and {{v_created_at}}]]\r\nLIMIT\r\n  1048575\r\n\r\nNative Sql Question with 9 filters looks as follows\r\n\r\n \r\n2)\tCreate a Dashboard with 8 filters(in my case, I left the password field) and  2 tabs for same question created from step 1. \r\n \r\n\r\n3)\tSwitch between tabs and notice messages from /var/log/messages. Since queries complete so fast, I had to look at /var/log/messages. In our environment, we check on Athena recent queries. Notice that re-run doesn’t happen.\r\n4)\tAdd 9th filter, and repeat 3). Notice that re-run of the queries happen.', 'created_at': datetime.datetime(2024, 4, 4, 18, 51, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2037981509, 'issue_id': 2176537600, 'author': 'mayanala-coxauto', 'body': 'Question \r\n![image](https://github.com/metabase/metabase/assets/49332534/8a501e31-d547-48b5-98e0-fc4fe01e6193)\r\n\r\nDashboard \r\n![image](https://github.com/metabase/metabase/assets/49332534/15d0f858-d9ae-4dfa-a0f7-ebe032c31e84)', 'created_at': datetime.datetime(2024, 4, 4, 18, 55, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2037988277, 'issue_id': 2176537600, 'author': 'kulyk', 'body': ""Thank you for sharing such thorough repro steps, @mayanala-coxauto 🙏 I'll investigate"", 'created_at': datetime.datetime(2024, 4, 4, 18, 59, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2073484901, 'issue_id': 2176537600, 'author': 'JesseSDevaney', 'body': 'The fix for more than 8 filters causing queries to be re-run has been merged here and will be added in 49.8:\r\n- https://github.com/metabase/metabase/pull/41739', 'created_at': datetime.datetime(2024, 4, 23, 21, 26, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 2122681011, 'issue_id': 2176537600, 'author': 'ignacio-mb', 'body': 'Just as a comment, queries are still being rerun when switching between tabs if the tab has a Pivot table', 'created_at': datetime.datetime(2024, 5, 21, 13, 47, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2122735222, 'issue_id': 2176537600, 'author': 'mayanala-coxauto', 'body': 'But we do not have any pivot tables in our Dashboards. Just tables and map visualizations.', 'created_at': datetime.datetime(2024, 5, 21, 14, 12, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2122801224, 'issue_id': 2176537600, 'author': 'ignacio-mb', 'body': ""Hi @mayanala-coxauto, for that I've opened a feature request here: https://github.com/metabase/metabase/issues/42956"", 'created_at': datetime.datetime(2024, 5, 21, 14, 43, 47, tzinfo=datetime.timezone.utc)}]","ignacio-mb (Issue Creator) on (2024-03-18 13:28:54 UTC): Couldn't reproduce in 49, so closing this.

kulyk (Assginee) on (2024-03-29 13:57:42 UTC): Update: the issue can be reproduced in 49 as well. #35465 fixed this on `master` but it wasn't backported to 49 (and most likely shouldn't)

kulyk (Assginee) on (2024-03-30 11:34:57 UTC): Fixed in #40783

mayanala-coxauto on (2024-04-04 02:16:18 UTC): It seems like if I have more than 8 Dashboard filters then it goes back to re-running the queries switching tabs.

kulyk (Assginee) on (2024-04-04 17:50:33 UTC): @mayanala-coxauto, after some investigation, I think the issue is related to pivot tables, and dashboard filters are not involved AFAICT. The pivot table issue is now tracked at https://github.com/metabase/metabase/issues/41043

mayanala-coxauto on (2024-04-04 18:51:09 UTC): @kulyk I'm not certain if it's just with pivot tables. I'm able to reproduce the issue with Sample DB.

Steps to Reproduce:
1)	Create Native Sql question with field filters and normal table visualization which default. Make created_at field as required field.
SELECT
  ""PUBLIC"".""PEOPLE"".""ID"" AS ""ID"",
  ""PUBLIC"".""PEOPLE"".""ADDRESS"" AS ""ADDRESS"",
  ""PUBLIC"".""PEOPLE"".""EMAIL"" AS ""EMAIL"",
  ""PUBLIC"".""PEOPLE"".""PASSWORD"" AS ""PASSWORD"",
  ""PUBLIC"".""PEOPLE"".""NAME"" AS ""NAME"",
  ""PUBLIC"".""PEOPLE"".""CITY"" AS ""CITY"",
  ""PUBLIC"".""PEOPLE"".""LONGITUDE"" AS ""LONGITUDE"",
  ""PUBLIC"".""PEOPLE"".""STATE"" AS ""STATE"",
  ""PUBLIC"".""PEOPLE"".""SOURCE"" AS ""SOURCE"",
  ""PUBLIC"".""PEOPLE"".""BIRTH_DATE"" AS ""BIRTH_DATE"",
  ""PUBLIC"".""PEOPLE"".""ZIP"" AS ""ZIP"",
  ""PUBLIC"".""PEOPLE"".""LATITUDE"" AS ""LATITUDE"",
  ""PUBLIC"".""PEOPLE"".""CREATED_AT"" AS ""CREATED_AT""
FROM
  ""PUBLIC"".""PEOPLE""
  where true
  [[and {{v_id}}]]
  [[ and {{v_name}}]]
  [[ and {{v_city}}]]
  [[ and {{v_state}}]]
  [[ and {{v_source}}]]
  [[ and {{v_zip}}]]
  [[ and {{v_email}}]]
  [[ and {{v_password}}]]
  [[ and {{v_created_at}}]]
LIMIT
  1048575

Native Sql Question with 9 filters looks as follows

 
2)	Create a Dashboard with 8 filters(in my case, I left the password field) and  2 tabs for same question created from step 1. 
 

3)	Switch between tabs and notice messages from /var/log/messages. Since queries complete so fast, I had to look at /var/log/messages. In our environment, we check on Athena recent queries. Notice that re-run doesn’t happen.
4)	Add 9th filter, and repeat 3). Notice that re-run of the queries happen.

mayanala-coxauto on (2024-04-04 18:55:52 UTC): Question 
![image](https://github.com/metabase/metabase/assets/49332534/8a501e31-d547-48b5-98e0-fc4fe01e6193)

Dashboard 
![image](https://github.com/metabase/metabase/assets/49332534/15d0f858-d9ae-4dfa-a0f7-ebe032c31e84)

kulyk (Assginee) on (2024-04-04 18:59:26 UTC): Thank you for sharing such thorough repro steps, @mayanala-coxauto 🙏 I'll investigate

JesseSDevaney on (2024-04-23 21:26:16 UTC): The fix for more than 8 filters causing queries to be re-run has been merged here and will be added in 49.8:
- https://github.com/metabase/metabase/pull/41739

ignacio-mb (Issue Creator) on (2024-05-21 13:47:46 UTC): Just as a comment, queries are still being rerun when switching between tabs if the tab has a Pivot table

mayanala-coxauto on (2024-05-21 14:12:50 UTC): But we do not have any pivot tables in our Dashboards. Just tables and map visualizations.

ignacio-mb (Issue Creator) on (2024-05-21 14:43:47 UTC): Hi @mayanala-coxauto, for that I've opened a feature request here: https://github.com/metabase/metabase/issues/42956

"
2176493766,issue,closed,not_planned,BE flake: postgres tests fail with `mt/with-temp-copy-of-db`,"Postgres tests are often flaking on `copy-db-fks!`. 

The tests that fail are not consistent between runs, but the common factor is that they use `mt/with-temp-copy-of-db`

example:
https://github.com/metabase/metabase/actions/runs/8192774915/job/22406695644#step:4:2096

My theory is the fields aren't found because they're inactive.",calherries,2024-03-08 17:42:44+00:00,['calherries'],2024-03-19 11:03:07+00:00,2024-03-19 09:17:50+00:00,https://github.com/metabase/metabase/issues/39861,"[('Administration/Metadata & Sync', ''), ('flaky-test-fix', ''), ('.Team/Workflows', 'aka BEC')]","[{'comment_id': 1986290597, 'issue_id': 2176493766, 'author': 'crisptrutski', 'body': 'Definitely noticed the uptick in these flakes, thanks for jumping on it.', 'created_at': datetime.datetime(2024, 3, 8, 19, 33, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1991458744, 'issue_id': 2176493766, 'author': 'calherries', 'body': 'Closed by https://github.com/metabase/metabase/pull/39926', 'created_at': datetime.datetime(2024, 3, 12, 11, 41, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2003839294, 'issue_id': 2176493766, 'author': 'calherries', 'body': ""https://github.com/metabase/metabase/pull/39926 didn't solve the flake. [This failure](https://github.com/metabase/metabase/actions/runs/8256498289/job/22586294289#step:4:2056) happened on master after it was merged."", 'created_at': datetime.datetime(2024, 3, 18, 12, 57, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2006452313, 'issue_id': 2176493766, 'author': 'calherries', 'body': ""closing this because it's a dupe of https://github.com/metabase/metabase/issues/38052"", 'created_at': datetime.datetime(2024, 3, 19, 9, 17, 50, tzinfo=datetime.timezone.utc)}]","crisptrutski on (2024-03-08 19:33:56 UTC): Definitely noticed the uptick in these flakes, thanks for jumping on it.

calherries (Issue Creator) on (2024-03-12 11:41:25 UTC): Closed by https://github.com/metabase/metabase/pull/39926

calherries (Issue Creator) on (2024-03-18 12:57:02 UTC): https://github.com/metabase/metabase/pull/39926 didn't solve the flake. [This failure](https://github.com/metabase/metabase/actions/runs/8256498289/job/22586294289#step:4:2056) happened on master after it was merged.

calherries (Issue Creator) on (2024-03-19 09:17:50 UTC): closing this because it's a dupe of https://github.com/metabase/metabase/issues/38052

"
2176444603,issue,closed,not_planned,Editing Field Types from Data Reference Doesn't Work,"### Describe the bug

If you attempt to edit ""Field Types"" for a table from the data dictionary, some of the functionality doesn't work.

- From the fields list for a table you cannot select a target for foreign key relationships
- If you navigate to a field and edit it directly, selecting a new field type from the menu does not work
- If you navigate to a field and edit it directly, you cannot set a target for foreign key relationships

### To Reproduce

1. Go to Browse Data -> Select Database -> Learn About this Table -> Fields in this table
2. Click ""Edit""
3. Attempt to Select a Target for a foreign key field
4. Note that the menu is empty
5. Cancel the edit and select any field on the table
6. Click ""Edit""
7. Attempt to change the field type
8. Note the menu selection does not work

Here's a short Loom recording:
https://www.loom.com/share/bf13d62a1bea4b739cea8234d8e58e11?sid=fea64350-7789-47a9-bea4-5e15abd8029d

### Expected behavior

Editing the field types should work

### Logs

[13ea2626-36d8-4e2d-a327-10ba8a25ff7a] 2024-03-08T11:08:28-06:00 DEBUG metabase.server.middleware.log GET /api/session/properties 200 15.8 ms (7 DB calls) App DB connections: 2/15 Jetty threads: 7/50 (3 idle, 0 queued) (125 total active threads) Queries in flight: 0 (0 queued)
[13ea2626-36d8-4e2d-a327-10ba8a25ff7a] 2024-03-08T11:08:28-06:00 DEBUG metabase.server.middleware.log GET /api/user/current 200 29.7 ms (11 DB calls) App DB connections: 1/15 Jetty threads: 6/50 (3 idle, 0 queued) (125 total active threads) Queries in flight: 0 (0 queued)
[13ea2626-36d8-4e2d-a327-10ba8a25ff7a] 2024-03-08T11:08:28-06:00 DEBUG metabase.server.middleware.log GET /api/collection/root 200 6.7 ms (2 DB calls) App DB connections: 4/15 Jetty threads: 10/50 (1 idle, 0 queued) (125 total active threads) Queries in flight: 0 (0 queued)
[13ea2626-36d8-4e2d-a327-10ba8a25ff7a] 2024-03-08T11:08:28-06:00 DEBUG metabase.server.middleware.log GET /api/database 200 7.3 ms (3 DB calls) App DB connections: 5/15 Jetty threads: 10/50 (1 idle, 0 queued) (125 total active threads) Queries in flight: 0 (0 queued)
[13ea2626-36d8-4e2d-a327-10ba8a25ff7a] 2024-03-08T11:08:28-06:00 DEBUG metabase.server.middleware.log GET /api/util/bug_report_details 200 3.0 ms (1 DB calls) App DB connections: 4/15 Jetty threads: 10/50 (1 idle, 0 queued) (125 total active threads) Queries in flight: 0 (0 queued)
[13ea2626-36d8-4e2d-a327-10ba8a25ff7a] 2024-03-08T11:08:28-06:00 DEBUG metabase.server.middleware.log GET /api/bookmark 200 10.0 ms (1 DB calls) App DB connections: 2/15 Jetty threads: 8/50 (1 idle, 0 queued) (125 total active threads) Queries in flight: 0 (0 queued)
[13ea2626-36d8-4e2d-a327-10ba8a25ff7a] 2024-03-08T11:08:28-06:00 DEBUG metabase.server.middleware.log GET /api/collection/tree 200 13.0 ms (6 DB calls) App DB connections: 1/15 Jetty threads: 7/50 (1 idle, 0 queued) (125 total active threads) Queries in flight: 0 (0 queued)
[13ea2626-36d8-4e2d-a327-10ba8a25ff7a] 2024-03-08T11:08:28-06:00 DEBUG metabase.server.middleware.log GET /api/search 200 35.0 ms (5 DB calls) App DB connections: 1/15 Jetty threads: 6/50 (2 idle, 0 queued) (125 total active threads) Queries in flight: 0 (0 queued)
[13ea2626-36d8-4e2d-a327-10ba8a25ff7a] 2024-03-08T11:08:36-06:00 DEBUG metabase.server.middleware.log GET /api/database/2/schemas 200 10.3 ms (4 DB calls) App DB connections: 1/15 Jetty threads: 6/50 (3 idle, 0 queued) (125 total active threads) Queries in flight: 0 (0 queued)
[13ea2626-36d8-4e2d-a327-10ba8a25ff7a] 2024-03-08T11:08:36-06:00 DEBUG metabase.server.middleware.log GET /api/database/2/schema/public 200 15.3 ms (4 DB calls) App DB connections: 1/15 Jetty threads: 6/50 (3 idle, 0 queued) (125 total active threads) Queries in flight: 0 (0 queued)
[13ea2626-36d8-4e2d-a327-10ba8a25ff7a] 2024-03-08T11:08:36-06:00 DEBUG metabase.server.middleware.log GET /api/database/2 200 12.8 ms (7 DB calls) App DB connections: 1/15 Jetty threads: 6/50 (3 idle, 0 queued) (125 total active threads) Queries in flight: 0 (0 queued)
[13ea2626-36d8-4e2d-a327-10ba8a25ff7a] 2024-03-08T11:08:59-06:00 DEBUG metabase.server.middleware.log GET /api/database/2/metadata 200 329.1 ms (97 DB calls) App DB connections: 1/15 Jetty threads: 6/50 (3 idle, 0 queued) (125 total active threads) Queries in flight: 0 (0 queued)
[13ea2626-36d8-4e2d-a327-10ba8a25ff7a] 2024-03-08T11:09:31-06:00 DEBUG metabase.server.middleware.log PUT /api/field/858 200 27.0 ms (10 DB calls) App DB connections: 1/15 Jetty threads: 6/50 (5 idle, 0 queued) (122 total active threads) Queries in flight: 0 (0 queued)

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""en-US"",
    ""platform"": ""Win32"",
    ""userAgent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.22+7"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.22"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.22+7"",
    ""os.name"": ""Linux"",
    ""os.version"": ""5.15.133.1-microsoft-standard-WSL2"",
    ""user.language"": ""en"",
    ""user.timezone"": ""GMT""
  },
  ""metabase-info"": {
    ""databases"": [
      ""postgres"",
      ""h2""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""postgres"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""PostgreSQL"",
        ""version"": ""11.22 (Debian 11.22-1.pgdg110+1)""
      },
      ""jdbc-driver"": {
        ""name"": ""PostgreSQL JDBC Driver"",
        ""version"": ""42.6.0""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-02-22"",
      ""tag"": ""v1.48.7"",
      ""hash"": ""c192db1""
    },
    ""settings"": {
      ""report-timezone"": null
    }
  }
}
```


### Severity

Annoying. Field types can still be updated from table metadata.

### Additional context

_No response_",ixipixi,2024-03-08 17:11:08+00:00,[],2024-03-12 18:24:10+00:00,2024-03-12 18:24:10+00:00,https://github.com/metabase/metabase/issues/39860,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Organization/Data Reference', '')]","[{'comment_id': 1986558376, 'issue_id': 2176444603, 'author': 'ixipixi', 'body': ""Sorry guys - I didn't see the original before I submitted this one: https://github.com/metabase/metabase/issues/37907\r\n\r\nWhat's best practice here? Should just close it and refer to the other issue?"", 'created_at': datetime.datetime(2024, 3, 8, 23, 22, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1992289982, 'issue_id': 2176444603, 'author': 'ignacio-mb', 'body': '@ixipixi yup, closing as not planned and dupe of that one', 'created_at': datetime.datetime(2024, 3, 12, 18, 24, 10, tzinfo=datetime.timezone.utc)}]","ixipixi (Issue Creator) on (2024-03-08 23:22:34 UTC): Sorry guys - I didn't see the original before I submitted this one: https://github.com/metabase/metabase/issues/37907

What's best practice here? Should just close it and refer to the other issue?

ignacio-mb on (2024-03-12 18:24:10 UTC): @ixipixi yup, closing as not planned and dupe of that one

"
2176255107,issue,open,,Filter breaks for model text column designated as quantity,"### Describe the bug

If you create a model and in the metadata editor set the Quantity type for a Text column, when you try to build a question and filter by that column you are able to set numeric filters like Greater than, but this leads to disappearing the Filter block from the query builder.

### To Reproduce

1. Click on + New -> Model
2. In the data picker choose for example Sample Database -> Invoices
3. Summarize Payment by Date Received: Month
4. Add custom column with the definition `concat([Sum of Payment], """")` -- this will be a text column with values that are textual representations of the Sum of Payment numerical column
<img width=""1015"" alt=""Captura de ecrã 2024-03-08, às 15 22 02"" src=""https://github.com/metabase/metabase/assets/777800/1306fbdb-5852-44f4-931a-1c56829fb3b7"">
5. In the metadata editor set for this custom column the column type as Quantity
<img width=""1436"" alt=""Captura de ecrã 2024-03-08, às 15 22 24"" src=""https://github.com/metabase/metabase/assets/777800/7b96a4b4-059b-49fa-a621-aa8ec59b5fc2"">
6. Save the model
7. Go to the query builder to create a question on top of this model
8. Click on Filter and choose this custom column, you'll see the filter options for numeric columns, like Greater than
<img width=""414"" alt=""Captura de ecrã 2024-03-08, às 15 22 55"" src=""https://github.com/metabase/metabase/assets/777800/5b8d7d5f-b3a2-496d-ad0f-aae1d47bc97a"">
9. Try to add the filter - the filter block will just disappear

### Expected behavior

_No response_

### Logs

_No response_

### Information about your Metabase installation

```JSON
last version from master
```


### Severity

annoying

### Additional context

_No response_",mngr,2024-03-08 15:25:44+00:00,[],2025-02-04 20:27:14+00:00,,https://github.com/metabase/metabase/issues/39855,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Querying/MBQL', ''), ('.Backend', ''), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib'), ('.Team/Querying', '')]","[{'comment_id': 1985912897, 'issue_id': 2176255107, 'author': 'ranquild', 'body': '@bshepherdson should `(isa/numeric? column)` return true for such columns?', 'created_at': datetime.datetime(2024, 3, 8, 15, 38, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2004024513, 'issue_id': 2176255107, 'author': 'bshepherdson', 'body': ""The logic of `(isa/numeric? column)` is to check if either the `:effective_type` or `:semantic_type` of the column descend from `:type/Number`. since the model is claiming it's a quantity, `:effective_type` should be `:type/Number`, and that expression should be allowed.\r\n\r\nAs a guess, I think there's a disconnect here where `filterable-columns` is seeing this as a numeric column but the type checking (`metabase.lib.schema.*`) on adding the filter is seeing the original type and rejecting the new filter. I don't think we're being as careful about columns on the model vs. columns from the model's underlying query as we ought to be.\r\n\r\nAgreed that this is a P2 for the MLv2 bug mountain."", 'created_at': datetime.datetime(2024, 3, 18, 14, 9, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2303515063, 'issue_id': 2176255107, 'author': 'ranquild', 'body': 'I think the correct fix is to ignore semantic types when checking for the real type of the column. Semantic types should never influence these checks.', 'created_at': datetime.datetime(2024, 8, 22, 1, 49, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2310945390, 'issue_id': 2176255107, 'author': 'bshepherdson', 'body': 'This might be fixed by #47245 .', 'created_at': datetime.datetime(2024, 8, 26, 19, 40, 53, tzinfo=datetime.timezone.utc)}]","ranquild on (2024-03-08 15:38:23 UTC): @bshepherdson should `(isa/numeric? column)` return true for such columns?

bshepherdson on (2024-03-18 14:09:46 UTC): The logic of `(isa/numeric? column)` is to check if either the `:effective_type` or `:semantic_type` of the column descend from `:type/Number`. since the model is claiming it's a quantity, `:effective_type` should be `:type/Number`, and that expression should be allowed.

As a guess, I think there's a disconnect here where `filterable-columns` is seeing this as a numeric column but the type checking (`metabase.lib.schema.*`) on adding the filter is seeing the original type and rejecting the new filter. I don't think we're being as careful about columns on the model vs. columns from the model's underlying query as we ought to be.

Agreed that this is a P2 for the MLv2 bug mountain.

ranquild on (2024-08-22 01:49:59 UTC): I think the correct fix is to ignore semantic types when checking for the real type of the column. Semantic types should never influence these checks.

bshepherdson on (2024-08-26 19:40:53 UTC): This might be fixed by #47245 .

"
2176245580,issue,closed,completed,Trend viz might not appear correctly on alerts,"### Describe the bug

In some cases, trend visualization do not display correctly on alerts.

### To Reproduce

1. create a GUI question: Sample Database, Products
- filter by: Created at, previous 2 months, including current one
- summarize: Count
- group by: Created at: month
2. Set visualization to Trend. The visualization works:
<img width=""209"" alt=""image"" src=""https://github.com/metabase/metabase/assets/11080638/e5037104-2689-4535-aa09-8e481917064b"">

3. Save it, and set up an alert

4. (!) The received alert does not display
<img width=""447"" alt=""image"" src=""https://github.com/metabase/metabase/assets/11080638/066142dd-efa9-4640-a9fa-864217e426ad"">

### Expected behavior

The alert should display the viz the same way.

### Logs

n/a

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""en-GB"",
    ""platform"": ""MacIntel"",
    ""userAgent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.22+7"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.22"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.22+7"",
    ""os.name"": ""Linux"",
    ""os.version"": ""6.1.30-0-virt"",
    ""user.language"": ""en"",
    ""user.timezone"": ""Etc/UTC""
  },
  ""metabase-info"": {
    ""databases"": [
      ""h2"",
      ""postgres""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""postgres"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""PostgreSQL"",
        ""version"": ""11.22 (Debian 11.22-1.pgdg110+1)""
      },
      ""jdbc-driver"": {
        ""name"": ""PostgreSQL JDBC Driver"",
        ""version"": ""42.6.0""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-02-22"",
      ""tag"": ""v1.48.7"",
      ""hash"": ""c192db1""
    },
    ""settings"": {
      ""report-timezone"": null
    }
  }
}
```


### Severity

P2 - reported by a customer

### Additional context

Also tested this on stats, a different error is displayed there:

<img width=""562"" alt=""image"" src=""https://github.com/metabase/metabase/assets/11080638/4f4423a1-4519-4323-aaf0-d0196a39f576"">
",zbodi74,2024-03-08 15:20:56+00:00,['adam-james-v'],2024-03-22 21:38:26+00:00,2024-03-22 16:24:10+00:00,https://github.com/metabase/metabase/issues/39854,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Visualization/', ''), ('Reporting/Alerts', ''), ('.Team/DashViz', 'Dashboard and Viz team')]",[],
2176030810,issue,closed,completed,Google SSO with Interactive Embedding do not allow you to download CSV,"### Describe the bug

If you embed metabase in an iframe via Interactive Embedding and login via Google SSO you are not able to download questions and get an `Unauthorized` 401 error

<img width=""1512"" alt=""image"" src=""https://github.com/metabase/metabase/assets/110378427/a32bc707-d075-4a70-bce4-e23c180a3bec"">


### To Reproduce

You can use stats

1) Embed Stats in an iframe

```
<!DOCTYPE html>
<html lang=""en"">
<head>
    <iframe    src=""https://stats-url.com""    allowtransparency></iframe>
</head>
<body>
</body>
</html>
```
2. Login via Google SSO
3. Try to download any question it will fail with an `Unauthorized` 401 error

Logging directly to Metabase via Google SSO and download a question works without isues:

<img width=""1512"" alt=""image"" src=""https://github.com/metabase/metabase/assets/110378427/890ec9dc-b753-4c90-8177-6e290dd2e280"">


### Expected behavior

I should be able to download a question since i was able to login inside the ifrme

### Logs

DEBUG metabase.server.middleware.log POST /api/dashboard/1880/dashcard/10011/card/11548/query/csv 401 128.0 µs (0 DB calls) 
""Unauthenticated""

### Information about your Metabase installation

```JSON
1.48.8 and master
```


### Severity

Blocking users from proceeding further since they use Google SSO internally and this blocks their full usage of metabase

### Additional context

_No response_",Tony-metabase,2024-03-08 13:19:50+00:00,['WiNloSt'],2024-05-02 15:25:25+00:00,2024-04-22 11:30:13+00:00,https://github.com/metabase/metabase/issues/39848,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('Administration/Auth', 'Google Auth, LDAP, pw+email login'), ('Embedding/Interactive', 'Interactive Embedding, previously known as Full app embedding'), ('.Escalation', ''), ('.Team/Embedding', '')]","[{'comment_id': 2011815952, 'issue_id': 2176030810, 'author': 'Tony-metabase', 'body': '@albertoperdomo is interactive embedding supposed to work with Google SSO?', 'created_at': datetime.datetime(2024, 3, 21, 10, 8, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2065816248, 'issue_id': 2176030810, 'author': 'ArunavNobroker', 'body': '@Tony-metabase can you get this prioritised?', 'created_at': datetime.datetime(2024, 4, 19, 5, 58, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2069274854, 'issue_id': 2176030810, 'author': 'WiNloSt', 'body': '@ArunavNobroker This should be released in 49.8 which is scheduled on May 2.', 'created_at': datetime.datetime(2024, 4, 22, 12, 30, 10, tzinfo=datetime.timezone.utc)}]","Tony-metabase (Issue Creator) on (2024-03-21 10:08:24 UTC): @albertoperdomo is interactive embedding supposed to work with Google SSO?

ArunavNobroker on (2024-04-19 05:58:11 UTC): @Tony-metabase can you get this prioritised?

WiNloSt (Assginee) on (2024-04-22 12:30:10 UTC): @ArunavNobroker This should be released in 49.8 which is scheduled on May 2.

"
2175615972,issue,open,,Chain filters cache all FK relationships in a database and it should be invalidated during sync,"We cache all FK relationships for a database as part of our linked filters implementation ([code](https://github.com/metabase/metabase/blob/57654bcbdbaeef44f3de1a92dfe2161664263c5d/src/metabase/models/params/chain_filter.clj#L192)). For large instances with many databases and tables this could take a up a lot of memory.

What's more: we're not invalidating the cache in a very smart way. It's only 5 minutes, and it doesn't get invalidated with sync. Sync should invalidate it and it should last much longer.

https://github.com/metabase/metabase/blob/57654bcbdbaeef44f3de1a92dfe2161664263c5d/src/metabase/models/params/chain_filter.clj#L185-L190

It's hard to know exactly how much of a problem this is without measuring it first.",calherries,2024-03-08 09:16:48+00:00,[],2025-02-04 20:29:50+00:00,,https://github.com/metabase/metabase/issues/39843,"[('Type:Tech Debt', 'or Refactoring'), ('.Performance', ''), ('Administration/Metadata & Sync', ''), ('.Team/Querying', '')]","[{'comment_id': 2070964572, 'issue_id': 2175615972, 'author': 'calherries', 'body': ""Had another look at this today. There is actually a simpler way to do this that doesn't involve any caching at all. It looks like the caching exists so we can do graph traversal in Clojure. To avoid waiting for the network over many queries, we load all the field relationships into memory before traversing the graph. But looking more closely, this is just a graph traversal that can be implemented in SQL with recursive CTEs. We currently limit the traversal to a breadth-first-search with a depth of 5, so the equivalent SQL will need only 5 joins. 5 joins using indexed columns is sufficiently fast we shouldn't have to cache anything here."", 'created_at': datetime.datetime(2024, 4, 22, 21, 14, 45, tzinfo=datetime.timezone.utc)}]","calherries (Issue Creator) on (2024-04-22 21:14:45 UTC): Had another look at this today. There is actually a simpler way to do this that doesn't involve any caching at all. It looks like the caching exists so we can do graph traversal in Clojure. To avoid waiting for the network over many queries, we load all the field relationships into memory before traversing the graph. But looking more closely, this is just a graph traversal that can be implemented in SQL with recursive CTEs. We currently limit the traversal to a breadth-first-search with a depth of 5, so the equivalent SQL will need only 5 joins. 5 joins using indexed columns is sufficiently fast we shouldn't have to cache anything here.

"
2175151713,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.enterprise/apply-sandboxing`,,camsaul,2024-03-08 02:21:28+00:00,[],2024-03-08 22:00:15+00:00,,https://github.com/metabase/metabase/issues/39838,[],[],
2175151601,issue,closed,completed,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.upgrade-field-literals`,,camsaul,2024-03-08 02:21:18+00:00,['camsaul'],2024-04-08 23:36:15+00:00,2024-04-08 21:41:55+00:00,https://github.com/metabase/metabase/issues/39837,"[('Type:Tech Debt', 'or Refactoring'), ('Querying/Processor', ''), ('.Backend', '')]",[],
2175149585,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.add-source-metadata`,,camsaul,2024-03-08 02:18:44+00:00,[],2024-03-08 02:18:44+00:00,,https://github.com/metabase/metabase/issues/39836,[],[],
2175149044,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.reconcile-breakout-and-order-by-bucketing`,,camsaul,2024-03-08 02:18:04+00:00,[],2024-03-08 02:18:04+00:00,,https://github.com/metabase/metabase/issues/39835,[],[],
2175148570,issue,closed,completed,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.auto-bucket-datetimes`,,camsaul,2024-03-08 02:17:25+00:00,['camsaul'],2024-04-11 18:24:45+00:00,2024-04-11 18:24:45+00:00,https://github.com/metabase/metabase/issues/39834,"[('Type:Tech Debt', 'or Refactoring'), ('Querying/Processor', ''), ('.Backend', '')]",[],
2175148414,issue,closed,completed,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.resolve-source-table`,,camsaul,2024-03-08 02:17:13+00:00,['camsaul'],2024-03-11 20:12:14+00:00,2024-03-11 20:12:14+00:00,https://github.com/metabase/metabase/issues/39833,[],[],
2175148261,issue,open,,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.parameters`,,camsaul,2024-03-08 02:17:02+00:00,['snoe'],2024-05-24 18:17:00+00:00,,https://github.com/metabase/metabase/issues/39832,[],[],
2175147749,issue,closed,completed,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.resolve-referenced`,,camsaul,2024-03-08 02:16:24+00:00,['camsaul'],2024-03-11 20:12:14+00:00,2024-03-11 20:12:14+00:00,https://github.com/metabase/metabase/issues/39831,[],[],
2175147531,issue,closed,completed,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.expand-macros`,,camsaul,2024-03-08 02:16:06+00:00,['camsaul'],2024-03-11 20:12:14+00:00,2024-03-11 20:12:14+00:00,https://github.com/metabase/metabase/issues/39830,[],[],
2175147312,issue,closed,completed,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.fetch-source-query`,,camsaul,2024-03-08 02:15:48+00:00,['camsaul'],2024-03-08 21:55:13+00:00,2024-03-08 19:27:33+00:00,https://github.com/metabase/metabase/issues/39829,[],[],
2175146670,issue,closed,completed,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.validate`,,camsaul,2024-03-08 02:14:57+00:00,['camsaul'],2024-03-08 21:55:11+00:00,2024-03-08 19:27:32+00:00,https://github.com/metabase/metabase/issues/39828,[],[],
2175146576,issue,closed,completed,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.constraints`,,camsaul,2024-03-08 02:14:51+00:00,['camsaul'],2024-03-08 21:55:10+00:00,2024-03-08 19:27:32+00:00,https://github.com/metabase/metabase/issues/39827,[],[],
2175146454,issue,closed,completed,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.permissions`,,camsaul,2024-03-08 02:14:44+00:00,['camsaul'],2024-03-08 21:55:09+00:00,2024-03-08 19:27:32+00:00,https://github.com/metabase/metabase/issues/39826,[],[],
2175146372,issue,closed,completed,[MLv2 × QP] Migrate pre-processing middleware `metabase.query-processor.middleware.normalize-query`,,camsaul,2024-03-08 02:14:36+00:00,['camsaul'],2024-03-08 21:55:07+00:00,2024-03-08 19:27:31+00:00,https://github.com/metabase/metabase/issues/39825,[],[],
2174958981,issue,closed,completed,Log CSV uploads and appends to the audit_log,,crisptrutski,2024-03-07 22:47:35+00:00,['crisptrutski'],2024-03-08 18:29:18+00:00,2024-03-08 18:29:18+00:00,https://github.com/metabase/metabase/issues/39818,[],[],
2174844314,issue,open,,Static-viz Error Messages should be more informative,"### Describe the bug

When something goes wrong with a static-viz render we indicate this with a message in the errored card: `An error occurred while displaying this card.`.

This message is not informative about what went wrong and thus makes reproducing and debugging errors difficult.

This issue is to suggest that we improve error reporting for such static-viz failures.

<img width=""340"" alt=""image"" src=""https://github.com/metabase/metabase/assets/21064735/7fa16f8c-2ac5-4fbf-9db6-268bde31e2bb"">


### To Reproduce

Probably don't need to reproduce a failing card, the screenshot shows an example and you've likely seen it  yourself before!

### Expected behavior

The error message should be more informative and/or additional context provided in an attachment or message somehow.

### Logs

_No response_

### Information about your Metabase installation

```JSON
- Metabase Version: 49, but applies to basically all versions that have static-viz rendering
```


### Severity

P2

### Additional context

_No response_",adam-james-v,2024-03-07 21:37:35+00:00,['adam-james-v'],2024-03-07 21:37:35+00:00,,https://github.com/metabase/metabase/issues/39814,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Team/DashViz', 'Dashboard and Viz team')]",[],
2174822259,issue,closed,completed,Data source is not initially highlighted for nested questions and models once their source is moved to a different collection,"### Describe the bug

Data source is not initially highlighted for nested questions and models once their source is moved to a different collection. This seems to be only a caching problem because everything works just fine after a hard refresh.

### To Reproduce

**Nested quesion**
1. Have a nested GUI question (let's just call it ""Nested"") based on a question or a model (we'll name ours ""Source"")
2. Open a ""Nested"" question, switch to a notebook view and open the data picker by clicking on a ""Source"" in the data step
3. Everything works just as expected - both the collection (""Our analytics"") and the question (""Source"") are highlighted
![image](https://github.com/metabase/metabase/assets/31325167/638de5f5-094a-45c1-ae8a-867a013d8aba)
4. Now open a ""Source"" question and move it to some other collection - we'll move it to the collection ""Foo""
5. Open a ""Nested"" question again in a notebook view and open the data picker to check its source
6. This time ""Our analytics"" is erroneously highlighted and no source question is highlighted because it doesn't exist in this collection anymore
![image](https://github.com/metabase/metabase/assets/31325167/b6b12b20-c7ee-4d07-92c2-1ba89ec4074e)
7. Hard refresh
8. Open the data source/data picker again
9. Things appear correctly
![image](https://github.com/metabase/metabase/assets/31325167/98d28064-db6b-44c2-b092-69308b6160e1)

**Model**
1. Have a saved model (we'll call ours ""Feedback"")
2. Open it, switch to a notebook view and open the data picker by clicking on a ""Feedback"" in the data step
3. Everything works just as expected - both the collection (""Our analytics"") and the model (""Feedback"") are highlighted (fixed in #39686)
![image](https://github.com/metabase/metabase/assets/31325167/dee0bcfc-b460-4ef5-b72c-8fc27b56710f)
4. Move model to a collection ""Foo""
5. Open the data picker again
6. ""Our analytics"" is erroneously highlighted and no model is highlighted because it doesn't exist in this collection anymore
![image](https://github.com/metabase/metabase/assets/31325167/db72f60b-cb55-4001-bf81-7ab0816ae3c2)
7. Hard refresh
8. Open the data source/data picker again
9. Things appear correctly
![image](https://github.com/metabase/metabase/assets/31325167/9819d495-22e7-4c4c-8c6b-0199e314db6e)



### Expected behavior

The correct data source should be displayed without needing to hard refresh.

### Logs

_No response_

### Information about your Metabase installation

```JSON
local dev, H2, Sample Database, `master`, 180cf78
```


### Severity

P3

### Additional context

_No response_",nemanjaglumac,2024-03-07 21:21:47+00:00,"['ranquild', 'nemanjaglumac']",2024-03-19 20:44:18+00:00,2024-03-15 12:40:23+00:00,https://github.com/metabase/metabase/issues/39812,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Frontend', ''), ('Querying/Notebook', 'Items specific to the Custom/Notebook query builder'), ('.Team/Querying', '')]",[],
2174815615,issue,closed,completed,Store most recently used filter values in the query,"In scope of https://github.com/metabase/metabase/issues/39809 we'd like to be able to store and retrieve most recently used filter values per user.

i.e. every time user applies some filter value on a specific dashboard and triggers `/api/dashboard/:dashboardId/dashcard/:dashcardId/card/:cardId/query`, filter values, passed as a part of the query to BE, should be stored somewhere 

BE returns filter values which were used the last time with the dashboard object on GET `/dashboard/:id`

possible property name `recent_parameters` to align with other properties

```
recent_parameters: {parameterId1: parameterValue1, parameterId2: parameterValue2}
```

[discussion](https://metaboat.slack.com/archives/C505ZNNH4/p1709667556162319)",uladzimirdev,2024-03-07 21:17:05+00:00,[],2024-05-15 17:45:54+00:00,2024-05-15 17:45:54+00:00,https://github.com/metabase/metabase/issues/39810,[],"[{'comment_id': 2113111504, 'issue_id': 2174815615, 'author': 'uladzimirdev', 'body': 'Implemented https://github.com/metabase/metabase/pull/40415', 'created_at': datetime.datetime(2024, 5, 15, 17, 45, 54, tzinfo=datetime.timezone.utc)}]","uladzimirdev (Issue Creator) on (2024-05-15 17:45:54 UTC): Implemented https://github.com/metabase/metabase/pull/40415

"
2174807320,issue,closed,completed,[Epic] Preserve Dashboard Filter States,"**Links**
- [product doc](https://www.notion.so/metabase/Preserve-dashboard-filter-states-for-users-0f89ff0da0c24026a3692b0f9d704fed)
- feature branch: `preserve-dashboard-filter-states`
- [Testing plan](https://github.com/metabase/metabase/issues/39808)

**Implementation Plan**


***Milestone 1***
```[tasklist]
### Frontend
- [ ] https://github.com/metabase/metabase/pull/39511
- [x] Replace localStorage usage with a BE implementation - https://github.com/metabase/metabase/pull/39813
- [x] Verify implementation on embeds, public and regular dashboards with tests
```
```[tasklist]
### Backend
- [ ] https://github.com/metabase/metabase/issues/39810
``` 

",uladzimirdev,2024-03-07 21:12:52+00:00,['uladzimirdev'],2024-06-26 09:43:54+00:00,2024-05-17 09:37:15+00:00,https://github.com/metabase/metabase/issues/39809,"[('.Epic', 'Feature Implementation or Project')]","[{'comment_id': 2117242956, 'issue_id': 2174807320, 'author': 'uladzimirdev', 'body': '- Interactive embeddings work based on my local testings ✅ \r\n- static embeddings do not save state as expected ✅ \r\n- public dashboards do not save state, [changed requirement](https://metaboat.slack.com/archives/C0645JP1W81/p1715941069842299?thread_ts=1715940692.731129&cid=C0645JP1W81) ✅', 'created_at': datetime.datetime(2024, 5, 17, 10, 21, 1, tzinfo=datetime.timezone.utc)}]","uladzimirdev (Issue Creator) on (2024-05-17 10:21:01 UTC): - Interactive embeddings work based on my local testings ✅ 
- static embeddings do not save state as expected ✅ 
- public dashboards do not save state, [changed requirement](https://metaboat.slack.com/archives/C0645JP1W81/p1715941069842299?thread_ts=1715940692.731129&cid=C0645JP1W81) ✅

"
2174806577,issue,closed,completed,[Testing plan] Preserve dashboard filter values,"**Context**

- filters are not preserved in **static embeds**
- filters are preserved on public dashboard - BE doesn't support it
- filters are preserved on dynamic embeds
- filters are preserved on regular dashboards
	- there is no default value, no recent value
	- there is no default value, there is a recent value
	- there is a default value, there is no recent value
	- there is a default required value, no recent value
	- there is a default required value and a recent value
	- there is a default value and a recent value

",uladzimirdev,2024-03-07 21:12:34+00:00,[],2024-06-26 09:43:45+00:00,2024-06-26 09:43:45+00:00,https://github.com/metabase/metabase/issues/39808,"[('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2174777540,issue,closed,completed,Data source is not properly highlighted for simple saved questions based on a table in a multi-schema database,"### Describe the bug

Data source is not properly highlighted for simple saved questions based on a table in a multi-schema database. This is a part of this general problem: https://github.com/metabase/metabase/issues/39542

Somewhat similar to https://github.com/metabase/metabase/issues/39699, but the source of the bug is different as it's highly specific to multi-schema databases.

### To Reproduce

_You'll need a multi-schema database to test this_
1. Create a GUI question based on a table from a multi-schema database and save it
2. Open that question
3. Switch to the notebook editor
4. Click on the ""data pill"" that should display the table name (in my case, it was the ""Table Two"" from the `schema_two`) to open the data picker
5. Notice that the data picker doesn't show the underlying table and it doesn't even highlight the database this table belongs to
![image](https://github.com/metabase/metabase/assets/31325167/a9c5ccd9-2b16-4e7f-adb8-57b327ee81fc)

### Expected behavior

The data picker should highlight the table this question is based on ![image](https://github.com/metabase/metabase/assets/31325167/8f7cf572-d347-4fd1-87de-e7f71faef688)

### Logs

_No response_

### Information about your Metabase installation

```JSON
local dev, H2, Sample Database, `master`, 180cf78
```


### Severity

P2/P3

### Additional context

Some additional product/design feedback and support might be needed.",nemanjaglumac,2024-03-07 20:53:53+00:00,['nemanjaglumac'],2024-03-13 15:26:19+00:00,2024-03-13 14:01:35+00:00,https://github.com/metabase/metabase/issues/39807,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Frontend', ''), ('Querying/Notebook', 'Items specific to the Custom/Notebook query builder'), ('.Team/Querying', '')]",[],
2174650379,issue,closed,completed,CSS box sizing issue on filter,"### Describe the bug

Filter button is overflowing and the box isn't resizing.
https://www.loom.com/share/adffd93b4bca4c4f84607c3f6e05454e?sid=8ec26207-5110-48b1-8954-1bc0e96ff80e 

### To Reproduce

1. open a table view
2. reduce your screen width
3. click on one of the column headers to open the filter dialog 
4. type some text in the text box
5. See error


### Expected behavior

The button should be fully visible and the text box shouldn't be cut off

### Logs

_No response_

### Information about your Metabase installation

v46.2


### Severity

annoying

### Additional context

_No response_",meldiner,2024-03-07 19:45:43+00:00,[],2024-05-22 18:46:50+00:00,2024-05-21 14:07:07+00:00,https://github.com/metabase/metabase/issues/39802,"[('Type:Bug', 'Product defects')]","[{'comment_id': 1992292111, 'issue_id': 2174650379, 'author': 'ignacio-mb', 'body': ""@meldiner Couldn't reproduce in 48.8. Can you post a quick video? Also, what version are you in? thanks!"", 'created_at': datetime.datetime(2024, 3, 12, 18, 25, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1992644098, 'issue_id': 2174650379, 'author': 'meldiner', 'body': '@ignacio-mb I added a video to the bug summary. We are using Metabase version 46.2', 'created_at': datetime.datetime(2024, 3, 12, 21, 49, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2122723142, 'issue_id': 2174650379, 'author': 'kamilmielnik', 'body': 'I can reproduce it in 46.2 and 46.6.\r\nThe issue has been fixed in Metabase 47.0.', 'created_at': datetime.datetime(2024, 5, 21, 14, 7, 7, tzinfo=datetime.timezone.utc)}]","ignacio-mb on (2024-03-12 18:25:32 UTC): @meldiner Couldn't reproduce in 48.8. Can you post a quick video? Also, what version are you in? thanks!

meldiner (Issue Creator) on (2024-03-12 21:49:26 UTC): @ignacio-mb I added a video to the bug summary. We are using Metabase version 46.2

kamilmielnik on (2024-05-21 14:07:07 UTC): I can reproduce it in 46.2 and 46.6.
The issue has been fixed in Metabase 47.0.

"
2174487388,issue,closed,completed,Fix table.columns when there are remappings,https://metaboat.slack.com/archives/C04CYTEL9N2/p1709570058102619,ranquild,2024-03-07 18:24:43+00:00,['ranquild'],2024-03-08 09:54:37+00:00,2024-03-08 09:54:37+00:00,https://github.com/metabase/metabase/issues/39795,"[('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2174376760,issue,closed,completed,SQL Server RowCount Override not persisting,"### Describe the bug

After upgrading to Metabase 0.48.8, MS SQL Server database connections are yielding bad results due to the ROWCOUNT Override not saving in the UI. You can change it from blank to 0  or 1,000,000 or any number, and after refreshing the page, it goes back to blank again. Furthermore, watching in SQL Server Profiler, you can see on the trace that the rowcount is still being set to 2,000.

### To Reproduce

1. Go to Metabase Admin
2. Open a MS SQL Server database
3. Set ROWCOUNT Override to some value
4. Click save changes, get success message
5. Refresh browser, and Rowcount override is back to null

### Expected behavior

Rowcount override should persist

### Logs

_No response_

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""en-US"",
    ""platform"": ""Win32"",
    ""userAgent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 Edg/122.0.0.0"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.22+7-post-Ubuntu-0ubuntu222.04.1"",
    ""java.vendor"": ""Ubuntu"",
    ""java.vendor.url"": ""https://ubuntu.com/"",
    ""java.version"": ""11.0.22"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.22+7-post-Ubuntu-0ubuntu222.04.1"",
    ""os.name"": ""Linux"",
    ""os.version"": ""5.15.0-97-generic"",
    ""user.language"": ""en"",
    ""user.timezone"": ""Etc/UTC""
  },
  ""metabase-info"": {
    ""databases"": [
      ""sqlserver"",
      ""h2"",
      ""mysql"",
      ""athena"",
      ""postgres""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""mysql"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""MySQL"",
        ""version"": ""8.0.36-0ubuntu0.22.04.1""
      },
      ""jdbc-driver"": {
        ""name"": ""MariaDB Connector/J"",
        ""version"": ""2.7.10""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-03-04"",
      ""tag"": ""v0.48.8"",
      ""hash"": ""a900c85""
    },
    ""settings"": {
      ""report-timezone"": ""US/Mountain""
    }
  }
}
```


### Severity

High, we are rolling back updates

### Additional context

_No response_",brywhi,2024-03-07 17:27:56+00:00,['metamben'],2024-10-08 17:05:00+00:00,2024-07-08 22:14:58+00:00,https://github.com/metabase/metabase/issues/39789,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('Database/SQLServer', None), ('.Regression', 'Bugs that were previously fixed and/or bugs unintentionally shipped with new features.')]","[{'comment_id': 1984121585, 'issue_id': 2174376760, 'author': 'brywhi', 'body': ""We rolled back to 0.48.4 which we were running before, and it seems the UI bug still exists- after refreshing, we can't see the value in database configuration. However, it does persist the configuration properly, and I can confirm in SQL Server Profiler that it is setting the rowcount correctly in 0.48.4, even though the UI is still wrong."", 'created_at': datetime.datetime(2024, 3, 7, 17, 54, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1998039592, 'issue_id': 2174376760, 'author': 'brywhi', 'body': 'Has anyone else experienced this? Just trying to understand if we did something wonky, or if other folks are experiencing it too.', 'created_at': datetime.datetime(2024, 3, 14, 18, 4, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1998492704, 'issue_id': 2174376760, 'author': 'paoliniluis', 'body': '@luizarakaki maybe this has to do with the new env vars for aggregated and non-aggregated queries?', 'created_at': datetime.datetime(2024, 3, 14, 21, 13, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2040972217, 'issue_id': 2174376760, 'author': 'lssdo12', 'body': ""Encountered the same problem, but it still hasn't been fixed in 0.49.3"", 'created_at': datetime.datetime(2024, 4, 6, 5, 23, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 2043023757, 'issue_id': 2174376760, 'author': 'brywhi', 'body': '> @luizarakaki maybe this has to do with the new env vars for aggregated and non-aggregated queries?\r\n\r\nFYI- I did try playing with the new env var settings in my environment, but no luck in fixing this issue.', 'created_at': datetime.datetime(2024, 4, 8, 15, 13, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2043198306, 'issue_id': 2174376760, 'author': 'luizarakaki', 'body': '@brywhi did you try setting \r\n[MB_UNAGGREGATED_QUERY_ROW_LIMIT](https://www.metabase.com/docs/latest/configuring-metabase/environment-variables#mb_unaggregated_query_row_limit) to 1000000\r\nAnd [MB_AGGREGATED_QUERY_ROW_LIMIT](https://www.metabase.com/docs/latest/configuring-metabase/environment-variables#mb_aggregated_query_row_limit) to 1000000 too?', 'created_at': datetime.datetime(2024, 4, 8, 16, 35, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 2043225439, 'issue_id': 2174376760, 'author': 'luizarakaki', 'body': ""Hm... actually, I think this should still work.\r\nCan you wipe your plugins directory?\r\n\r\nMy best guess is that you have an old driver that didn't get this PR https://github.com/metabase/metabase/pull/36753/files"", 'created_at': datetime.datetime(2024, 4, 8, 16, 51, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2043229454, 'issue_id': 2174376760, 'author': 'brywhi', 'body': ""> Hm... actually, I think this should still work. Can you wipe your plugins directory?\r\n> \r\n> My best guess is that you have an old driver that didn't get this PR https://github.com/metabase/metabase/pull/36753/files\r\n\r\nI'm running off the .jar for this particular instance- so unless the build didn't get that PR, it should have it, right?"", 'created_at': datetime.datetime(2024, 4, 8, 16, 53, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2043230404, 'issue_id': 2174376760, 'author': 'brywhi', 'body': ""> @brywhi did you try setting [MB_UNAGGREGATED_QUERY_ROW_LIMIT](https://www.metabase.com/docs/latest/configuring-metabase/environment-variables#mb_unaggregated_query_row_limit) to 1000000 And [MB_AGGREGATED_QUERY_ROW_LIMIT](https://www.metabase.com/docs/latest/configuring-metabase/environment-variables#mb_aggregated_query_row_limit) to 1000000 too?\r\n\r\nPretty sure we did try both. We'll make a clone of the environment where it is running and double check."", 'created_at': datetime.datetime(2024, 4, 8, 16, 54, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2043244035, 'issue_id': 2174376760, 'author': 'luizarakaki', 'body': ""> > Hm... actually, I think this should still work. Can you wipe your plugins directory?\r\n> > My best guess is that you have an old driver that didn't get this PR https://github.com/metabase/metabase/pull/36753/files\r\n> \r\n> I'm running off the .jar for this particular instance- so unless the build didn't get that PR, it should have it, right?\r\n\r\nIt should, but if you are running in the same env as previous versions, it is possible that it didn't update the plugins.\r\n\r\n> Pretty sure we did try both. We'll make a clone of the environment where it is running and double check.\r\n\r\nCool, let me know"", 'created_at': datetime.datetime(2024, 4, 8, 16, 59, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2043496232, 'issue_id': 2174376760, 'author': 'luizarakaki', 'body': ""Ok, for who is going to fix this:\r\n\r\nThis is likely caused by https://github.com/metabase/metabase/pull/36753\r\n\r\n---\r\n\r\nOn v48 we introduced `unaggregated-query-row-limit` and `aggregated-query-row-limit` (that are global).\r\n\r\nUsers should use the new global env vars instead of setting it per database.\r\nSo we drop this database-specific setting and ask users to use the new global setting.\r\n\r\n---\r\nworkaround while we don't fix:\r\n- the new env vars should work (you need to set both)"", 'created_at': datetime.datetime(2024, 4, 8, 19, 24, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2043501620, 'issue_id': 2174376760, 'author': 'camsaul', 'body': '>if sql server row count is set, migrate this to the new settings (both aggregated and unaggregated)\r\n\r\nHmmm, setting a global Setting based on an override for one specific database seems a little dangerous for a ""fix"", query results for non-SQL Server DBs could change and people would not know why it happened.', 'created_at': datetime.datetime(2024, 4, 8, 19, 28, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2145353108, 'issue_id': 2174376760, 'author': 'metamben', 'body': ""@luizarakaki what's the desired behavior? How should `unaggregated-query-row-limit` and `aggregated-query-row-limit` interact with this setting?"", 'created_at': datetime.datetime(2024, 6, 3, 14, 29, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 2146106529, 'issue_id': 2174376760, 'author': 'luizarakaki', 'body': 'I think we should drop the SQL Server specific env var and ask people to use the new env vars (they need to manually set it)', 'created_at': datetime.datetime(2024, 6, 3, 20, 55, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2161526225, 'issue_id': 2174376760, 'author': 'metamben', 'body': '[Discussing](https://metaboat.slack.com/archives/C04DN5VRQM6/p1718120398646309) with @luizarakaki, the conclusion is that we want to drop the `rowcount-override` support from the connection details. There will be a single limit for all databases.', 'created_at': datetime.datetime(2024, 6, 11, 20, 9, 13, tzinfo=datetime.timezone.utc)}]","brywhi (Issue Creator) on (2024-03-07 17:54:31 UTC): We rolled back to 0.48.4 which we were running before, and it seems the UI bug still exists- after refreshing, we can't see the value in database configuration. However, it does persist the configuration properly, and I can confirm in SQL Server Profiler that it is setting the rowcount correctly in 0.48.4, even though the UI is still wrong.

brywhi (Issue Creator) on (2024-03-14 18:04:56 UTC): Has anyone else experienced this? Just trying to understand if we did something wonky, or if other folks are experiencing it too.

paoliniluis on (2024-03-14 21:13:02 UTC): @luizarakaki maybe this has to do with the new env vars for aggregated and non-aggregated queries?

lssdo12 on (2024-04-06 05:23:55 UTC): Encountered the same problem, but it still hasn't been fixed in 0.49.3

brywhi (Issue Creator) on (2024-04-08 15:13:34 UTC): FYI- I did try playing with the new env var settings in my environment, but no luck in fixing this issue.

luizarakaki on (2024-04-08 16:35:49 UTC): @brywhi did you try setting 
[MB_UNAGGREGATED_QUERY_ROW_LIMIT](https://www.metabase.com/docs/latest/configuring-metabase/environment-variables#mb_unaggregated_query_row_limit) to 1000000
And [MB_AGGREGATED_QUERY_ROW_LIMIT](https://www.metabase.com/docs/latest/configuring-metabase/environment-variables#mb_aggregated_query_row_limit) to 1000000 too?

luizarakaki on (2024-04-08 16:51:12 UTC): Hm... actually, I think this should still work.
Can you wipe your plugins directory?

My best guess is that you have an old driver that didn't get this PR https://github.com/metabase/metabase/pull/36753/files

brywhi (Issue Creator) on (2024-04-08 16:53:45 UTC): I'm running off the .jar for this particular instance- so unless the build didn't get that PR, it should have it, right?

brywhi (Issue Creator) on (2024-04-08 16:54:14 UTC): Pretty sure we did try both. We'll make a clone of the environment where it is running and double check.

luizarakaki on (2024-04-08 16:59:44 UTC): It should, but if you are running in the same env as previous versions, it is possible that it didn't update the plugins.


Cool, let me know

luizarakaki on (2024-04-08 19:24:13 UTC): Ok, for who is going to fix this:

This is likely caused by https://github.com/metabase/metabase/pull/36753

---

On v48 we introduced `unaggregated-query-row-limit` and `aggregated-query-row-limit` (that are global).

Users should use the new global env vars instead of setting it per database.
So we drop this database-specific setting and ask users to use the new global setting.

---
workaround while we don't fix:
- the new env vars should work (you need to set both)

camsaul on (2024-04-08 19:28:23 UTC): Hmmm, setting a global Setting based on an override for one specific database seems a little dangerous for a ""fix"", query results for non-SQL Server DBs could change and people would not know why it happened.

metamben (Assginee) on (2024-06-03 14:29:47 UTC): @luizarakaki what's the desired behavior? How should `unaggregated-query-row-limit` and `aggregated-query-row-limit` interact with this setting?

luizarakaki on (2024-06-03 20:55:10 UTC): I think we should drop the SQL Server specific env var and ask people to use the new env vars (they need to manually set it)

metamben (Assginee) on (2024-06-11 20:09:13 UTC): [Discussing](https://metaboat.slack.com/archives/C04DN5VRQM6/p1718120398646309) with @luizarakaki, the conclusion is that we want to drop the `rowcount-override` support from the connection details. There will be a single limit for all databases.

"
2174193274,issue,closed,completed,Cannot add a SSO user without last name to admin group,"### Describe the bug

Cannot add a SSO user without last name to admin group

### To Reproduce

1. run `docker run --rm -p 3000:3000 -e MB_PREMIUM_EMBEDDING_TOKEN=TOKEN_WITH_SSO_GOES_HERE -e MB_JWT_ENABLED=true -e MB_JWT_SHARED_SECRET=39475fb1d2610f99d1c05720b6ac2dd1ed3551464e1d77e5526d9925ed8248c9 -e MB_JWT_IDENTITY_PROVIDER_URI=https://test.com metabase/metabase-enterprise
` with a token that supports sso with jwt
2. go to http://localhost:3000/setup and finish setup
3. in an incognito tab or another browser open http://localhost:3000/auth/sso?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZvb0BiYXIuYmF6IiwiZmlyc3RfbmFtZSI6ImZvbyJ9.3ibGD1qlMcTm3XzZ74Z9Tcm7wBSeqKLEfZPrET_XfYU&return_to=%2F to make a new SSO account
4. on the first (admin) tab go to admin -> people -> edit user foo -> groups -> add admin -> update
5. see `nullable value must be a non-blank string` UI error on last name
6. see `PUT /api/user/2 400 6.2 ms (0 DB calls) {:errors {:last_name ""nullable value must be a non-blank string.""}, :specific-errors {:last_name [""should be at least 1 characters, received: \""\"""" ""non-blank string, received: \""\""""]}}` error on docker server logs
7. try to add `bar` as last name, see `Editing last name is not allowed for SSO users` UI error

### Expected behavior

I think I should be able to make that user an admin regardless of last name

### Logs

_No response_

### Information about your Metabase installation

```JSON
Metabase v1.48.7 (c192db1)
```


### Severity

This is blocking me from adding more admins

### Additional context

_No response_",filipesilva,2024-03-07 15:57:01+00:00,[],2024-09-27 20:37:48+00:00,2024-09-27 20:37:48+00:00,https://github.com/metabase/metabase/issues/39779,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Administration/Auth/SSO', 'Enterprise SSO like SAML and JWT'), ('Administration/People', 'and Groups. Also user Account Settings'), ('.Team/AdminWebapp', 'Admin and Webapp team')]","[{'comment_id': 2338915190, 'issue_id': 2174193274, 'author': 'iethree', 'body': 'need to verify, but I think this may have been fixed by: https://github.com/metabase/metabase/pull/46511', 'created_at': datetime.datetime(2024, 9, 9, 19, 29, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2380014349, 'issue_id': 2174193274, 'author': 'noahmoss', 'body': 'Confirmed that this is fixed', 'created_at': datetime.datetime(2024, 9, 27, 20, 37, 48, tzinfo=datetime.timezone.utc)}]","iethree on (2024-09-09 19:29:39 UTC): need to verify, but I think this may have been fixed by: https://github.com/metabase/metabase/pull/46511

noahmoss on (2024-09-27 20:37:48 UTC): Confirmed that this is fixed

"
2174174610,issue,closed,completed,Question Header,,sloansparger,2024-03-07 15:48:17+00:00,['npfitz'],2024-03-09 03:18:15+00:00,2024-03-09 03:18:15+00:00,https://github.com/metabase/metabase/issues/39776,[],[],
2174174417,issue,closed,completed,Undo Listings,,sloansparger,2024-03-07 15:48:12+00:00,['sloansparger'],2024-03-08 15:38:49+00:00,2024-03-08 15:38:49+00:00,https://github.com/metabase/metabase/issues/39775,[],[],
2174087702,issue,closed,completed,Show better error message when function is not supported by the database,"### Describe the bug

Currently when a function is not supported by the database, we don't show an error message.
In some cases we even show an error that is about calling the function incorrectly, even though it does not exist.



### To Reproduce

1. New Question → MariaDB instance
2. Select a table
3. Add an aggregation and select Custom Expression
4. Type `percentile(1, 0.9)`
5. Tab out of the expression field
6. No error is show
7. Now type `percentile(1)` in the expression field and tab out
8. An error is displayed: `Function Percentile expects 2 arguments`, even though this database does not support `percentile`

### Expected behavior

There should be an error when a function is called that is not supported

### Logs

_No response_

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""en-US"",
    ""platform"": ""MacIntel"",
    ""userAgent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:123.0) Gecko/20100101 Firefox/123.0"",
    ""vendor"": """"
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.20.1+1"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.20.1"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.20.1+1"",
    ""os.name"": ""Mac OS X"",
    ""os.version"": ""14.2.1"",
    ""user.language"": ""en"",
    ""user.timezone"": ""Europe/Amsterdam""
  },
  ""metabase-info"": {
    ""databases"": [
      ""h2"",
      ""mysql"",
      ""postgres""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""h2"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""H2"",
        ""version"": ""2.1.214 (2022-06-13)""
      },
      ""jdbc-driver"": {
        ""name"": ""H2 JDBC Driver"",
        ""version"": ""2.1.214 (2022-06-13)""
      }
    },
    ""run-mode"": ""dev"",
    ""version"": {
      ""date"": ""2024-03-07"",
      ""src_hash"": ""e35fc04830cd05dc48aa5d85ab07fc5c2eade141"",
      ""tag"": ""v0.48.1-SNAPSHOT"",
      ""hash"": ""a5261dc""
    },
    ""settings"": {
      ""report-timezone"": null
    }
  }
}
```


### Severity

P3

### Additional context

This is related to https://github.com/metabase/metabase/issues/35156",romeovs,2024-03-07 15:09:12+00:00,[],2024-03-12 11:20:41+00:00,2024-03-12 11:20:41+00:00,https://github.com/metabase/metabase/issues/39773,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Frontend', ''), ('Querying/GUI', 'Query builder catch-all, including simple mode'), ('.Team/Querying', '')]",[],
2174085861,issue,closed,completed,Fullpage Modal,,npfitz,2024-03-07 15:08:21+00:00,['npfitz'],2024-03-08 04:09:42+00:00,2024-03-08 04:09:42+00:00,https://github.com/metabase/metabase/issues/39772,[],[],
2174070462,issue,closed,completed,Ellipsis tooltip cut off/not visible in GUI editor,"### Describe the bug

![image](https://github.com/metabase/metabase/assets/6830683/ebd49201-24bf-4dbf-b273-31607b7f3a64)



### To Reproduce

1. Change name of Orders > Discount column to `Discount with a very long name` in Table Metadata in Admin
2. Create a question [like this](https://github.com/metabase/metabase/assets/6830683/4ed01f62-940e-4d81-92c3-63e3c4c8f70a)
3. Click the last breakout to edit it
4. Hover over ellipsified text

Tooltip is displayed under the dropdown.

### Expected behavior

Tooltip is displayed on top of the ellipsified labels


### Information about your Metabase installation

Currently ellipsis is broken on `master`, but #39746 fixes it.
The bug can be reproduced in #39746 and on `master` after it is merged.


### Severity

P2
",kamilmielnik,2024-03-07 15:02:23+00:00,['kamilmielnik'],2024-07-15 20:58:40+00:00,2024-07-03 11:41:44+00:00,https://github.com/metabase/metabase/issues/39771,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Frontend', ''), ('Querying/GUI', 'Query builder catch-all, including simple mode'), ('.Team/Querying', '')]","[{'comment_id': 2202465217, 'issue_id': 2174070462, 'author': 'kamilmielnik', 'body': 'It works differently on master at 213b6d2c81, but the issue with tooltips is still there:\r\n- there is no ellipsis on the breakout column name anymore (is this intentional?), so there is no tooltip\r\n- there is ellipsis on the breakout binning, but tooltip is not visible', 'created_at': datetime.datetime(2024, 7, 2, 9, 15, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2229422283, 'issue_id': 2174070462, 'author': 'github-actions[bot]', 'body': '🚀 This should also be released by [v0.50.14](https://github.com/metabase/metabase/milestone/254)', 'created_at': datetime.datetime(2024, 7, 15, 20, 58, 39, tzinfo=datetime.timezone.utc)}]","kamilmielnik (Issue Creator) on (2024-07-02 09:15:11 UTC): It works differently on master at 213b6d2c81, but the issue with tooltips is still there:
- there is no ellipsis on the breakout column name anymore (is this intentional?), so there is no tooltip
- there is ellipsis on the breakout binning, but tooltip is not visible

github-actions[bot] on (2024-07-15 20:58:39 UTC): 🚀 This should also be released by [v0.50.14](https://github.com/metabase/metabase/milestone/254)

"
2174045451,issue,closed,completed,Filtering by a Specific Date in Snowflake will bring inaccurate results,"### Describe the bug

Filtering by ""Specific date"" filter in Snowflake will bring wrong results

### To Reproduce

1. Create a table in Snowflake with the SQL below the steps
2. Create a GUI * from table and put it in a dashboard
3. Add a Relative dates filter and connect it to the card
4. Select ""Specific dates"" as a filter, ""On"" and filter by ""November 12th, 2023""
5. See that the card will show records from November 13th as well
![Screenshot 2024-03-07 at 11 39 29 AM](https://github.com/metabase/metabase/assets/132273646/c7f5d696-b533-4008-9c3f-06ef950eb371)

<details>
<summary>SQL for creating table and adding data with date time column</summary>

CREATE TABLE sample_table (
    id INTEGER,
    user_name VARCHAR,
    created_at TIMESTAMP
);


-- Insert sample data for each hour of each day from November 10 to November 15
INSERT INTO sample_table (id, user_name, created_at)
SELECT
    ROW_NUMBER() OVER (ORDER BY day, hour) AS id,
    'User_' || ROW_NUMBER() OVER (ORDER BY day, hour) AS user_name,
    DATEADD('MINUTE', (hour + day * 24) * 60, '2023-11-10 00:00:00') AS created_at
FROM
    (
        SELECT 0 AS day UNION ALL
        SELECT 1 UNION ALL
        SELECT 2 UNION ALL
        SELECT 3 UNION ALL
        SELECT 4 UNION ALL
        SELECT 5
    ) AS days
CROSS JOIN
    (
        SELECT 0 AS hour UNION ALL
        SELECT 1 UNION ALL
        SELECT 2 UNION ALL
        SELECT 3 UNION ALL
        SELECT 4 UNION ALL
        SELECT 5 UNION ALL
        SELECT 6 UNION ALL
        SELECT 7 UNION ALL
        SELECT 8 UNION ALL
        SELECT 9 UNION ALL
        SELECT 10 UNION ALL
        SELECT 11 UNION ALL
        SELECT 12 UNION ALL
        SELECT 13 UNION ALL
        SELECT 14 UNION ALL
        SELECT 15 UNION ALL
        SELECT 16 UNION ALL
        SELECT 17 UNION ALL
        SELECT 18 UNION ALL
        SELECT 19 UNION ALL
        SELECT 20 UNION ALL
        SELECT 21 UNION ALL
        SELECT 22 UNION ALL
        SELECT 23
    ) AS hours;
</details>


### Expected behavior

Should only bring the results from that day

### Logs

query in snowflake
```
SELECT ""PUBLIC"".""SAMPLE_TABLE_2"".""ID"" AS ""ID"", ""PUBLIC"".""SAMPLE_TABLE_2"".""USER_NAME"" AS ""USER_NAME"", ""PUBLIC"".""SAMPLE_TABLE_2"".""CREATED_AT"" AS ""CREATED_AT"" 
FROM ""sample"".""PUBLIC"".""SAMPLE_TABLE_2"" 
WHERE (""PUBLIC"".""SAMPLE_TABLE_2"".""CREATED_AT"" >= ?) AND (""PUBLIC"".""SAMPLE_TABLE_2"".""CREATED_AT"" < ?) LIMIT 2000

-- {""pulseId"":null,""serverId"":""adbf7a69-c037-43f2-9b43-bb98001f852f"",""client"":""Metabase"",""queryHash"":""233e5c2a605bb015ded3bc42a539d1c9607a48eae959eed9d316e10ce199d526"",""queryType"":""query"",""cardId"":114,""dashboardId"":35,""context"":""dashboard"",""userId"":1,""databaseId"":34}
```

### Information about your Metabase installation

```JSON
- Metabase 48.8
```


### Severity

P2

### Additional context

_No response_",ignacio-mb,2024-03-07 14:51:07+00:00,['camsaul'],2024-05-01 07:05:05+00:00,2024-05-01 03:24:20+00:00,https://github.com/metabase/metabase/issues/39769,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('Querying/Processor', ''), ('.Correctness', ''), ('Misc/Timezones', ''), ('Database/Snowflake', ''), ('.Backend', ''), ('.Escalation', '')]","[{'comment_id': 2005073424, 'issue_id': 2174045451, 'author': 'ignacio-mb', 'body': 'This appears to happen also in SQL Server. However, I was not able to reproduce. For reference, [here](https://metabase.zendesk.com/agent/tickets/25266) is the conversation with the customer.', 'created_at': datetime.datetime(2024, 3, 18, 21, 38, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2005157963, 'issue_id': 2174045451, 'author': 'harrywynn', 'body': 'Customer here - this is happening with SQL Server, not Postgres.', 'created_at': datetime.datetime(2024, 3, 18, 22, 28, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2071965074, 'issue_id': 2174045451, 'author': 'Tony-metabase', 'body': '@camsaul I don\'t think this was fixed:\r\n\r\n<img width=""1512"" alt=""image"" src=""https://github.com/metabase/metabase/assets/110378427/d38cd21b-fd58-4fde-9fac-becc58b315ad"">\r\n\r\nI still get the same behaviour in both dashboard and the question ... I am running 1.49.6 and if i convert the question to SQL then it works as expected\r\n\r\n<img width=""1512"" alt=""image"" src=""https://github.com/metabase/metabase/assets/110378427/eea46cce-34c0-4e05-9f49-6902d750bfff"">', 'created_at': datetime.datetime(2024, 4, 23, 10, 34, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2073738683, 'issue_id': 2174045451, 'author': 'perivamsi', 'body': ""[Here's a repro on Stats](https://stats.metabase.com/question#eyJkYXRhc2V0X3F1ZXJ5Ijp7ImRhdGFiYXNlIjoxMjIsInR5cGUiOiJxdWVyeSIsInF1ZXJ5Ijp7InNvdXJjZS10YWJsZSI6MzkyODMsImZpbHRlciI6WyI9IixbImZpZWxkIiw1NzE2MDMseyJiYXNlLXR5cGUiOiJ0eXBlL0RhdGVUaW1lV2l0aFRaIn1dLCIyMDE5LTAyLTExIl19fSwiZGlzcGxheSI6InRhYmxlIiwidmlzdWFsaXphdGlvbl9zZXR0aW5ncyI6e319)\r\n\r\n[The same question converted to SQL](https://stats.metabase.com/question#eyJkYXRhc2V0X3F1ZXJ5Ijp7InR5cGUiOiJuYXRpdmUiLCJuYXRpdmUiOnsicXVlcnkiOiJTRUxFQ1RcbiAgXCJQVUJMSUNcIi5cIm9yZGVyc1wiLlwiaWRcIiBBUyBcImlkXCIsXG4gIFwiUFVCTElDXCIuXCJvcmRlcnNcIi5cInVzZXJfaWRcIiBBUyBcInVzZXJfaWRcIixcbiAgXCJQVUJMSUNcIi5cIm9yZGVyc1wiLlwicHJvZHVjdF9pZFwiIEFTIFwicHJvZHVjdF9pZFwiLFxuICBcIlBVQkxJQ1wiLlwib3JkZXJzXCIuXCJzdWJ0b3RhbFwiIEFTIFwic3VidG90YWxcIixcbiAgXCJQVUJMSUNcIi5cIm9yZGVyc1wiLlwidGF4XCIgQVMgXCJ0YXhcIixcbiAgXCJQVUJMSUNcIi5cIm9yZGVyc1wiLlwidG90YWxcIiBBUyBcInRvdGFsXCIsXG4gIFwiUFVCTElDXCIuXCJvcmRlcnNcIi5cImRpc2NvdW50XCIgQVMgXCJkaXNjb3VudFwiLFxuICBcIlBVQkxJQ1wiLlwib3JkZXJzXCIuXCJjcmVhdGVkX2F0XCIgQVMgXCJjcmVhdGVkX2F0XCIsXG4gIFwiUFVCTElDXCIuXCJvcmRlcnNcIi5cInF1YW50aXR5XCIgQVMgXCJxdWFudGl0eVwiXG5GUk9NXG4gIFwidjNfc2FtcGxlLWRhdGFzZXRcIi5cIlBVQkxJQ1wiLlwib3JkZXJzXCJcbldIRVJFXG4gIChcbiAgICBcIlBVQkxJQ1wiLlwib3JkZXJzXCIuXCJjcmVhdGVkX2F0XCIgPj0gJzIwMTktMDItMTEgMDA6MDAgLTA4OjAwJzo6IHRpbWVzdGFtcF90elxuICApXG4gXG4gICBBTkQgKFxuICAgIFwiUFVCTElDXCIuXCJvcmRlcnNcIi5cImNyZWF0ZWRfYXRcIiA8ICcyMDE5LTAyLTEyIDAwOjAwIC0wODowMCc6OiB0aW1lc3RhbXBfdHpcbiAgKVxuTElNSVRcbiAgMTA0ODU3NSIsInRlbXBsYXRlLXRhZ3MiOnt9LCJjb2xsZWN0aW9uIjoib3JkZXJzIn0sImRhdGFiYXNlIjoxMjJ9LCJkaXNwbGF5IjoidGFibGUiLCJwYXJhbWV0ZXJzIjpbXSwidmlzdWFsaXphdGlvbl9zZXR0aW5ncyI6e319) does not have this issue"", 'created_at': datetime.datetime(2024, 4, 24, 0, 46, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2078179900, 'issue_id': 2174045451, 'author': 'camsaul', 'body': 'So in the repo on stats, the SQL we\'re generating is\r\n\r\n```\r\nSELECT\r\n  ""PUBLIC"".""orders"".""id"" AS ""id"",\r\n  ""PUBLIC"".""orders"".""user_id"" AS ""user_id"",\r\n  ""PUBLIC"".""orders"".""product_id"" AS ""product_id"",\r\n  ""PUBLIC"".""orders"".""subtotal"" AS ""subtotal"",\r\n  ""PUBLIC"".""orders"".""tax"" AS ""tax"",\r\n  ""PUBLIC"".""orders"".""total"" AS ""total"",\r\n  ""PUBLIC"".""orders"".""discount"" AS ""discount"",\r\n  ""PUBLIC"".""orders"".""created_at"" AS ""created_at"",\r\n  ""PUBLIC"".""orders"".""quantity"" AS ""quantity""\r\nFROM\r\n  ""v3_sample-dataset"".""PUBLIC"".""orders""\r\nWHERE\r\n  (\r\n    ""PUBLIC"".""orders"".""created_at"" >= \'2019-02-11 00:00 -08:00\':: timestamp_tz\r\n  )\r\n  AND (\r\n    ""PUBLIC"".""orders"".""created_at"" < \'2019-02-12 00:00 -08:00\':: timestamp_tz\r\n  )\r\nLIMIT\r\n  2000\r\n  ```\r\n\r\n`created_at` in this case is a `timestamp with time zone` so this query appears to be correct with session timezone set to `US/Pacific` as we do in stats... not sure why it\'s giving the wrong answers', 'created_at': datetime.datetime(2024, 4, 25, 21, 9, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2078192713, 'issue_id': 2174045451, 'author': 'camsaul', 'body': 'Ok apparently it\'s actually running \r\n\r\n```sql\r\nSELECT\r\n  ""PUBLIC"".""orders"".""id"" AS ""id"",\r\n  ""PUBLIC"".""orders"".""created_at"" AS ""created_at""\r\nFROM\r\n  ""2024_04_25_e15f5997_60ab_4c7d_8fde_164a001da04c_test-data"".""PUBLIC"".""orders""\r\nWHERE\r\n  (""PUBLIC"".""orders"".""created_at"" >= ?)\r\n  AND (""PUBLIC"".""orders"".""created_at"" < ?)\r\nORDER BY\r\n  ""PUBLIC"".""orders"".""id"" ASC\r\nLIMIT\r\n  1048575\r\n```\r\n\r\nwith\r\n\r\n```clj\r\n{:params (#t ""2019-02-11T00:00-08:00"" #t ""2019-02-12T00:00-08:00"")}\r\n```\r\n\r\nand this is definitely not working correctly', 'created_at': datetime.datetime(2024, 4, 25, 21, 18, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2078196247, 'issue_id': 2174045451, 'author': 'camsaul', 'body': 'So we\'re passing these parameters as `java.sql.Timestamps` (because Snowflake JDBC doesn\'t/didn\'t support the new `java.time` classes?) and apparently the Snowflake JDBC driver is ignoring the associated `Calendar`\r\n\r\n```\r\nTRACE sql-jdbc.execute :: Set param 1 -> #t ""2019-02-11T00:00-08:00""\r\nTRACE execute.legacy-impl :: (.setTimestamp 1 ^java.sql.Timestamp #inst ""2019-02-11T00:00:00.000000000-00:00"" <GMT-08:00 Calendar>)\r\nTRACE sql-jdbc.execute :: Set param 2 -> #t ""2019-02-12T00:00-08:00""\r\nTRACE execute.legacy-impl :: (.setTimestamp 2 ^java.sql.Timestamp #inst ""2019-02-12T00:00:00.000000000-00:00"" <GMT-08:00 Calendar>)\r\n```', 'created_at': datetime.datetime(2024, 4, 25, 21, 21, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2078211809, 'issue_id': 2174045451, 'author': 'camsaul', 'body': '🤦 \r\n\r\n#11718\r\n\r\nSo it seems like I already fixed this four years ago (or at least thought I did) but we inadvertently broke the fix at some point in the past because these methods are never actually used, these methods are for `:metabase.driver.snowflake/use-legacy-classes-for-read-and-set` which is not actually a thing.\r\n\r\nhttps://github.com/metabase/metabase/blob/b93e99d/modules/drivers/snowflake/src/metabase/driver/snowflake.clj#L618-L632\r\n\r\nOpen question why the #11036 tests are still passing', 'created_at': datetime.datetime(2024, 4, 25, 21, 33, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2078223646, 'issue_id': 2174045451, 'author': 'camsaul', 'body': ""Apparently I'm a dumb dumb and fixed it for parameters/ZonedDateTime but not for OffsetDateTime or OffsetTime 🤦"", 'created_at': datetime.datetime(2024, 4, 25, 21, 43, 17, tzinfo=datetime.timezone.utc)}]","ignacio-mb (Issue Creator) on (2024-03-18 21:38:58 UTC): This appears to happen also in SQL Server. However, I was not able to reproduce. For reference, [here](https://metabase.zendesk.com/agent/tickets/25266) is the conversation with the customer.

harrywynn on (2024-03-18 22:28:35 UTC): Customer here - this is happening with SQL Server, not Postgres.

Tony-metabase on (2024-04-23 10:34:07 UTC): @camsaul I don't think this was fixed:

<img width=""1512"" alt=""image"" src=""https://github.com/metabase/metabase/assets/110378427/d38cd21b-fd58-4fde-9fac-becc58b315ad"">

I still get the same behaviour in both dashboard and the question ... I am running 1.49.6 and if i convert the question to SQL then it works as expected

<img width=""1512"" alt=""image"" src=""https://github.com/metabase/metabase/assets/110378427/eea46cce-34c0-4e05-9f49-6902d750bfff"">

perivamsi on (2024-04-24 00:46:04 UTC): [Here's a repro on Stats](https://stats.metabase.com/question#eyJkYXRhc2V0X3F1ZXJ5Ijp7ImRhdGFiYXNlIjoxMjIsInR5cGUiOiJxdWVyeSIsInF1ZXJ5Ijp7InNvdXJjZS10YWJsZSI6MzkyODMsImZpbHRlciI6WyI9IixbImZpZWxkIiw1NzE2MDMseyJiYXNlLXR5cGUiOiJ0eXBlL0RhdGVUaW1lV2l0aFRaIn1dLCIyMDE5LTAyLTExIl19fSwiZGlzcGxheSI6InRhYmxlIiwidmlzdWFsaXphdGlvbl9zZXR0aW5ncyI6e319)

[The same question converted to SQL](https://stats.metabase.com/question#eyJkYXRhc2V0X3F1ZXJ5Ijp7InR5cGUiOiJuYXRpdmUiLCJuYXRpdmUiOnsicXVlcnkiOiJTRUxFQ1RcbiAgXCJQVUJMSUNcIi5cIm9yZGVyc1wiLlwiaWRcIiBBUyBcImlkXCIsXG4gIFwiUFVCTElDXCIuXCJvcmRlcnNcIi5cInVzZXJfaWRcIiBBUyBcInVzZXJfaWRcIixcbiAgXCJQVUJMSUNcIi5cIm9yZGVyc1wiLlwicHJvZHVjdF9pZFwiIEFTIFwicHJvZHVjdF9pZFwiLFxuICBcIlBVQkxJQ1wiLlwib3JkZXJzXCIuXCJzdWJ0b3RhbFwiIEFTIFwic3VidG90YWxcIixcbiAgXCJQVUJMSUNcIi5cIm9yZGVyc1wiLlwidGF4XCIgQVMgXCJ0YXhcIixcbiAgXCJQVUJMSUNcIi5cIm9yZGVyc1wiLlwidG90YWxcIiBBUyBcInRvdGFsXCIsXG4gIFwiUFVCTElDXCIuXCJvcmRlcnNcIi5cImRpc2NvdW50XCIgQVMgXCJkaXNjb3VudFwiLFxuICBcIlBVQkxJQ1wiLlwib3JkZXJzXCIuXCJjcmVhdGVkX2F0XCIgQVMgXCJjcmVhdGVkX2F0XCIsXG4gIFwiUFVCTElDXCIuXCJvcmRlcnNcIi5cInF1YW50aXR5XCIgQVMgXCJxdWFudGl0eVwiXG5GUk9NXG4gIFwidjNfc2FtcGxlLWRhdGFzZXRcIi5cIlBVQkxJQ1wiLlwib3JkZXJzXCJcbldIRVJFXG4gIChcbiAgICBcIlBVQkxJQ1wiLlwib3JkZXJzXCIuXCJjcmVhdGVkX2F0XCIgPj0gJzIwMTktMDItMTEgMDA6MDAgLTA4OjAwJzo6IHRpbWVzdGFtcF90elxuICApXG4gXG4gICBBTkQgKFxuICAgIFwiUFVCTElDXCIuXCJvcmRlcnNcIi5cImNyZWF0ZWRfYXRcIiA8ICcyMDE5LTAyLTEyIDAwOjAwIC0wODowMCc6OiB0aW1lc3RhbXBfdHpcbiAgKVxuTElNSVRcbiAgMTA0ODU3NSIsInRlbXBsYXRlLXRhZ3MiOnt9LCJjb2xsZWN0aW9uIjoib3JkZXJzIn0sImRhdGFiYXNlIjoxMjJ9LCJkaXNwbGF5IjoidGFibGUiLCJwYXJhbWV0ZXJzIjpbXSwidmlzdWFsaXphdGlvbl9zZXR0aW5ncyI6e319) does not have this issue

camsaul (Assginee) on (2024-04-25 21:09:31 UTC): So in the repo on stats, the SQL we're generating is

```
SELECT
  ""PUBLIC"".""orders"".""id"" AS ""id"",
  ""PUBLIC"".""orders"".""user_id"" AS ""user_id"",
  ""PUBLIC"".""orders"".""product_id"" AS ""product_id"",
  ""PUBLIC"".""orders"".""subtotal"" AS ""subtotal"",
  ""PUBLIC"".""orders"".""tax"" AS ""tax"",
  ""PUBLIC"".""orders"".""total"" AS ""total"",
  ""PUBLIC"".""orders"".""discount"" AS ""discount"",
  ""PUBLIC"".""orders"".""created_at"" AS ""created_at"",
  ""PUBLIC"".""orders"".""quantity"" AS ""quantity""
FROM
  ""v3_sample-dataset"".""PUBLIC"".""orders""
WHERE
  (
    ""PUBLIC"".""orders"".""created_at"" >= '2019-02-11 00:00 -08:00':: timestamp_tz
  )
  AND (
    ""PUBLIC"".""orders"".""created_at"" < '2019-02-12 00:00 -08:00':: timestamp_tz
  )
LIMIT
  2000
  ```

`created_at` in this case is a `timestamp with time zone` so this query appears to be correct with session timezone set to `US/Pacific` as we do in stats... not sure why it's giving the wrong answers

camsaul (Assginee) on (2024-04-25 21:18:10 UTC): Ok apparently it's actually running 

```sql
SELECT
  ""PUBLIC"".""orders"".""id"" AS ""id"",
  ""PUBLIC"".""orders"".""created_at"" AS ""created_at""
FROM
  ""2024_04_25_e15f5997_60ab_4c7d_8fde_164a001da04c_test-data"".""PUBLIC"".""orders""
WHERE
  (""PUBLIC"".""orders"".""created_at"" >= ?)
  AND (""PUBLIC"".""orders"".""created_at"" < ?)
ORDER BY
  ""PUBLIC"".""orders"".""id"" ASC
LIMIT
  1048575
```

with

```clj
{:params (#t ""2019-02-11T00:00-08:00"" #t ""2019-02-12T00:00-08:00"")}
```

and this is definitely not working correctly

camsaul (Assginee) on (2024-04-25 21:21:03 UTC): So we're passing these parameters as `java.sql.Timestamps` (because Snowflake JDBC doesn't/didn't support the new `java.time` classes?) and apparently the Snowflake JDBC driver is ignoring the associated `Calendar`

```
TRACE sql-jdbc.execute :: Set param 1 -> #t ""2019-02-11T00:00-08:00""
TRACE execute.legacy-impl :: (.setTimestamp 1 ^java.sql.Timestamp #inst ""2019-02-11T00:00:00.000000000-00:00"" <GMT-08:00 Calendar>)
TRACE sql-jdbc.execute :: Set param 2 -> #t ""2019-02-12T00:00-08:00""
TRACE execute.legacy-impl :: (.setTimestamp 2 ^java.sql.Timestamp #inst ""2019-02-12T00:00:00.000000000-00:00"" <GMT-08:00 Calendar>)
```

camsaul (Assginee) on (2024-04-25 21:33:43 UTC): 🤦 

#11718

So it seems like I already fixed this four years ago (or at least thought I did) but we inadvertently broke the fix at some point in the past because these methods are never actually used, these methods are for `:metabase.driver.snowflake/use-legacy-classes-for-read-and-set` which is not actually a thing.

https://github.com/metabase/metabase/blob/b93e99d/modules/drivers/snowflake/src/metabase/driver/snowflake.clj#L618-L632

Open question why the #11036 tests are still passing

camsaul (Assginee) on (2024-04-25 21:43:17 UTC): Apparently I'm a dumb dumb and fixed it for parameters/ZonedDateTime but not for OffsetDateTime or OffsetTime 🤦

"
2174042978,issue,open,,Middle mouse click on linked tables in the table hover card do not work,"We've recently introduced an info icon on the table selector that shows more info about the table in-context.

Some tables have linked tables, which contain links to said tables.

Click or cmd + click works on these links, but for some reason not middle mouse clicks (on Chrome on Linux): the card just closes and no navigation happens.

<img width=""662"" alt=""Screenshot 2024-03-07 at 15 50 48"" src=""https://github.com/metabase/metabase/assets/1250185/60feb82a-856c-428f-9d9c-a032220c1b57"">
",romeovs,2024-03-07 14:50:00+00:00,[],2024-03-07 14:53:26+00:00,,https://github.com/metabase/metabase/issues/39768,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Team/Querying', '')]",[],
2174040024,issue,closed,completed,[Maps] Cannot display map when loading GeoJSON files from GISCO,"### Describe the bug

Although the GeoJSON file I'm trying to load exists and is correctly displayed on Mapshaper, when trying to import it on Metabase, the preview does not display anything, only the properties are imported.

### To Reproduce

1. In ""Administration"" > ""Settings"" > ""Maps"", click on ""Add Map""
2. Paste an URL to a GeoJSON map from Eurostat/GISCO 
(tested with:
- `https://raw.githubusercontent.com/eurostat/Nuts2json/master/pub/v2/2021/3035/60M/nutsrg_1.json`
- `https://gisco-services.ec.europa.eu/distribution/v2/nuts/geojson/NUTS_RG_60M_2021_3035_LEVL_1.geojson`)
4. Check the display of the map


### Expected behavior

The map shoud be displayed

### Logs

_No response_

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""fr"",
    ""platform"": ""MacIntel"",
    ""userAgent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:123.0) Gecko/20100101 Firefox/123.0"",
    ""vendor"": """"
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.22+7-post-Ubuntu-0ubuntu220.04.1"",
    ""java.vendor"": ""Ubuntu"",
    ""java.vendor.url"": ""https://ubuntu.com/"",
    ""java.version"": ""11.0.22"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.22+7-post-Ubuntu-0ubuntu220.04.1"",
    ""os.name"": ""Linux"",
    ""os.version"": ""5.4.0-153-generic"",
    ""user.language"": ""en"",
    ""user.timezone"": ""Europe/Paris""
  },
  ""metabase-info"": {
    ""databases"": [
      ""postgres""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""postgres"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""PostgreSQL"",
        ""version"": ""14.10 (Debian 14.10-1.pgdg110+1)""
      },
      ""jdbc-driver"": {
        ""name"": ""PostgreSQL JDBC Driver"",
        ""version"": ""42.6.0""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-01-11"",
      ""tag"": ""v0.48.3"",
      ""hash"": ""80d8323""
    },
    ""settings"": {
      ""report-timezone"": ""Europe/Paris""
    }
  }
}
```


### Severity

Annoying

### Additional context

_No response_",hellpe,2024-03-07 14:48:39+00:00,['npfitz'],2024-07-30 20:12:51+00:00,2024-07-30 19:44:51+00:00,https://github.com/metabase/metabase/issues/39767,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Frontend', ''), ('Administration/Settings', ''), ('.Team/AdminWebapp', 'Admin and Webapp team')]","[{'comment_id': 2245880911, 'issue_id': 2174040024, 'author': 'npfitz', 'body': ""Hi @hellpe. I took a look at this this afternoon and noticed that your GeoJSON files are using a coordinate system that we're not currently set up to handle. It looks like the coordinates are defined as `projected (EPSG:3857) coordinates`, as opposed to ` lat/lng (EPSG:4326)`. I'm not an expert in GeoJSON files or coordinate systems, but I was able to verify that other GeoJSON files that use lat/lng render correctly. \r\n\r\nI'm going to do some work to give this feedback to the end user, but in the meantime if you're able to convert your files they should work correctly. If you want to go down that route, this [Stack Overflow page](https://gis.stackexchange.com/questions/189126/leaflet-geojson-with-projected-coordinates-3857) might be useful"", 'created_at': datetime.datetime(2024, 7, 23, 17, 52, 7, tzinfo=datetime.timezone.utc)}]","npfitz (Assginee) on (2024-07-23 17:52:07 UTC): Hi @hellpe. I took a look at this this afternoon and noticed that your GeoJSON files are using a coordinate system that we're not currently set up to handle. It looks like the coordinates are defined as `projected (EPSG:3857) coordinates`, as opposed to ` lat/lng (EPSG:4326)`. I'm not an expert in GeoJSON files or coordinate systems, but I was able to verify that other GeoJSON files that use lat/lng render correctly. 

I'm going to do some work to give this feedback to the end user, but in the meantime if you're able to convert your files they should work correctly. If you want to go down that route, this [Stack Overflow page](https://gis.stackexchange.com/questions/189126/leaflet-geojson-with-projected-coordinates-3857) might be useful

"
2174023690,issue,closed,completed,Disclosure Triangle,,npfitz,2024-03-07 14:41:02+00:00,['npfitz'],2024-03-08 04:09:41+00:00,2024-03-08 04:09:41+00:00,https://github.com/metabase/metabase/issues/39764,[],[],
2173974649,issue,closed,completed,LDAP logging is non existent,"### Describe the bug

We need to enhance logging in the LDAP namespace. Right now users try to connect to LDAP and they get errors in the logs of Metabase that just simply don't help.

I need to know:
1) if Metabase reached the LDAP server
2) if it looked for the user
3) if the password didn't match (both in the connection to the LDAP server and when the user authenticated)

The issue is that when you connect to an LDAP server, the logs of the LDAP server are very limited or the users who're connecting Metabase to the server are different to the ones that manage the IDP

### To Reproduce

1) just try to connect Metabase to the LDAP server with https://github.com/paoliniluis/metabase-ldap and raise the verbosity of LDAP to the highest, you'll see that in Metabase you'll see nothing if there's any error

### Expected behavior

If verbosity is set to ALL, we should see everything that happens in the auth process

### Logs

NA

### Information about your Metabase installation

```JSON
It has always been like that
```


### Severity

P2

### Additional context

_No response_",paoliniluis,2024-03-07 14:19:12+00:00,['noahmoss'],2024-03-13 03:27:40+00:00,2024-03-12 21:37:35+00:00,https://github.com/metabase/metabase/issues/39760,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Administration/Auth', 'Google Auth, LDAP, pw+email login'), ('.Backend', ''), ('.Escalation', '')]",[],
2173943447,issue,open,,Default the dashboard copy to a shallow copy,"**Is your feature request related to a problem? Please describe.**
We launched https://github.com/metabase/metabase/issues/25948 a while ago and it's awesome, but some user asked if we could default to a shallow copy as there were too many questions created by mistake

**Describe the solution you'd like**
default to shallow copy when you duplicate dashboards

**Describe alternatives you've considered**
NA

**How important is this feature to you?**
Seems reasonable

**Additional context**
NA
",paoliniluis,2024-03-07 14:04:13+00:00,[],2024-03-07 14:04:13+00:00,,https://github.com/metabase/metabase/issues/39758,"[('Reporting/Dashboards', ''), ('Type:New Feature', '')]",[],
2173899541,issue,open,,Information about users is incorrect after migrating an instance to Cloud twice,"### Describe the bug

The customer performed a migration of a hosted instance to Cloud but faced an issue:
[full context in Slack](https://metaboat.slack.com/archives/C06LMC8JKK9/p1709814129945859)


> In the Metabase Store billing portal, it shows the number of users as 27, when it's actually just 14. For this account, we had to do the migration twice (once a couple weeks ago and once yesterday) -- my guess is it is adding the users from both migrations (13 + 14) and showing that number, but unclear. I'm attaching a screenshot of the users in the current account.

what happened is that during the second migration the site uuid changed for some reason, and HM thought that this account has 2 instances, and summed up the users.

The billing info shows the charge for just 14 users though.

Expected result:
- the site uuid for the second and consecutive migrations is not changed
- user sees and is charged for the correct number of users after the migration

### To Reproduce

1. Migrate an instance to Cloud
2. Migrate it once again to the same instance
3. See the number of users in Store

### Expected behavior

Expected result: - the site uuid for the second and consecutive migrations is not changed - user sees and is charged for the correct number of users after the migration",trinya,2024-03-07 13:43:38+00:00,[],2025-02-04 20:26:30+00:00,,https://github.com/metabase/metabase/issues/39756,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Operation/Database Migrations', 'Issues with application DB migrations when launching Metabase'), ('.Backend', ''), ('.Team/AdminWebapp', 'Admin and Webapp team'), ('Deployment/MetabaseCloud', 'Issue only affects users of Metabase Cloud')]",[],
2173799553,issue,closed,completed,Optimize CLJS performance for common operators in the notebook editor,"For context https://metaboat.slack.com/archives/C05MPF0TM3L/p1708940856401629

![image](https://github.com/metabase/metabase/assets/8542534/c39e57fc-6cbe-4467-9c97-6c114cecdb25)

```[tasklist]
- [ ] Optimize `expressionParts`.  We believe it re-computes something per-query which is not cached. It should/might be possible to add some internal caching in CLJS to make at least subsequent calls to `expressionParts` fast (for different expressions - join conditions).
- [ ] Optimize `displayInfo` for join condition columns. Probably something similar to `expressionParts` where some inner caching could be added.
- [ ] Optimize `canRun`. it’s supposed to be a simple check. 
```
",ranquild,2024-03-07 12:53:46+00:00,[],2024-08-22 01:50:28+00:00,2024-08-22 01:50:28+00:00,https://github.com/metabase/metabase/issues/39754,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Querying/MBQL', ''), ('.Backend', ''), ('.Team/Querying', '')]","[{'comment_id': 1986382591, 'issue_id': 2173799553, 'author': 'bshepherdson', 'body': 'I looked into this but I\'m seeing surprising results. Caching `lib.js/expression-parts` is ineffective, because the expressions are different instances in every case. I\'m not sure exactly what\'s wrong, but it seems like the query is getting re-converted from legacy on every click, which means it shares nothing with the original MLv2.\r\n\r\nWe should probably start attaching the ""twin"" query when converting in both directions, in such a way that it will get dropped by any query manipulation in legacy or MLv2. Then when we take several actions in a row, round trips from edited MLv2 to legacy and right back to MLv2 don\'t start from scratch. It\'ll be faster to skip conversion, but it\'ll also be faster downstream because any caches and other memoization on the original MLv2 query will persist.', 'created_at': datetime.datetime(2024, 3, 8, 20, 36, 58, tzinfo=datetime.timezone.utc)}]","bshepherdson on (2024-03-08 20:36:58 UTC): I looked into this but I'm seeing surprising results. Caching `lib.js/expression-parts` is ineffective, because the expressions are different instances in every case. I'm not sure exactly what's wrong, but it seems like the query is getting re-converted from legacy on every click, which means it shares nothing with the original MLv2.

We should probably start attaching the ""twin"" query when converting in both directions, in such a way that it will get dropped by any query manipulation in legacy or MLv2. Then when we take several actions in a row, round trips from edited MLv2 to legacy and right back to MLv2 don't start from scratch. It'll be faster to skip conversion, but it'll also be faster downstream because any caches and other memoization on the original MLv2 query will persist.

"
2173632971,issue,closed,completed,Unable to save or connect to Mongo DB post upgrading from 0.47.X to 0.48.2 and later minor versions.,"**Describe the bug**
Unable to save Mongo DB connection strings


**To Reproduce**
Steps to reproduce the behavior:
1. Go to 'metabase--> settings--> admin -->databases'
2. Click on 'Add Database""
3. Scroll down to 'databases--> select MongoDB--> paste the connection string along with the other required details.
4. See error 'While trying to save you will be getting the error as ""**Failed to connect to Database**""

**Expected behavior**
It should ideally save and enable connection if the string provided is correct.

**Screenshots**
![Screenshot 2024-03-07 161051](https://github.com/metabase/metabase/assets/162573808/fe41015e-8654-4fd5-8093-539155e414f8)


**Severity**
How severe an issue is this bug to you? Is this annoying, blocking some users, blocking an upgrade or blocking your usage of Metabase entirely?
Note: the more honest and specific you are here the more we will take you seriously.

We have our application running on prod and its creating us multiple blocker as we are unable to add new MongodDB connections so for me its on top ""priority"".


",akapagan,2024-03-07 11:23:36+00:00,[],2024-03-29 11:47:50+00:00,2024-03-29 11:47:50+00:00,https://github.com/metabase/metabase/issues/39750,"[('Type:Bug', 'Product defects'), ('.Needs Triage', '')]","[{'comment_id': 1984098644, 'issue_id': 2173632971, 'author': 'paoliniluis', 'body': 'Where is the MongoDB installed? can you connect from another DB client?', 'created_at': datetime.datetime(2024, 3, 7, 17, 42, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1988764861, 'issue_id': 2173632971, 'author': 'lucasboleite', 'body': ""Same issue here - on both Cloud and Hosted versions.\r\n\r\nMy Mongo was working fine with 0.47.13 but stopped connecting from 0.48 forward. It's hosted at Mongo Atlas and firewall is wide open (0.0.0.0)."", 'created_at': datetime.datetime(2024, 3, 11, 15, 49, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1988775416, 'issue_id': 2173632971, 'author': 'paoliniluis', 'body': ""@lucasboleite can you please give us some details? you can't connect by using the connection string or the form? I'm able to connect without any issues"", 'created_at': datetime.datetime(2024, 3, 11, 15, 53, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1989189647, 'issue_id': 2173632971, 'author': 'lucasboleite', 'body': '@paoliniluis Sure thing!\r\n\r\nI tried both - they show either a 10s timeout issue or a generic error. Nothing more than that even on the logs. I\'m currently trying to go back to 0.47.13 so I spun down my instances and can\'t show prints from there, but here are some additional info from my cloud hosts:\r\n\r\n### Creating a brand new instance:\r\n## Connection string:\r\n![image](https://github.com/metabase/metabase/assets/7199026/e9ca2c56-f840-4073-b3b1-a0698e2a7848)\r\n**This error occurs immediatly**\r\n\r\nThe connection string is: mongodb+srv://[username]:[password]@[host]/test?readPreference=secondaryPreferred  (same one that I had used before, and that I\'m currently using to connect through Mongo Compass)\r\n\r\n## Form:\r\n![image](https://github.com/metabase/metabase/assets/7199026/4fbdc545-c8f3-4b0d-b233-53df4761b8a8)\r\n**This error takes 10s to show**\r\n\r\nUsing the same data from Compass (on the same type of form view)\r\n\r\n### Using an instance that I migrated from my hosted database:\r\nAs soon as I go to Databases -> Mongo DB, it shows the postgresql connection data, used for internal metabase data and configured using MB env vars on my docker setup, rather than my MongoDB connection data.\r\n![image](https://github.com/metabase/metabase/assets/7199026/408dd8ce-5395-4853-92b2-e30496c68b1c)\r\n\r\nAnd if I configure it correctly I get the same errors:\r\n\r\n## Connection string:\r\n![image](https://github.com/metabase/metabase/assets/7199026/e278048d-1c62-4f08-9355-01aaf7044344)\r\n**This error occurs immediatly**\r\n\r\n# Logs:\r\n[7a8b27a1-0e90-41c9-9f0e-ca4d842f0e5f] 2024-03-11T15:38:50-03:00 ERROR metabase.driver.util Failed to connect to Database\r\njava.util.concurrent.TimeoutException: Timeout depois de 10.0 s\r\n\tat metabase.util.jvm$deref_with_timeout.invokeStatic(jvm.clj:287)\r\n\tat metabase.util.jvm$deref_with_timeout.invoke(jvm.clj:279)\r\n\tat metabase.util.jvm$do_with_timeout.invokeStatic(jvm.clj:294)\r\n\tat metabase.util.jvm$do_with_timeout.invoke(jvm.clj:290)\r\n\tat metabase.driver.util$can_connect_with_details_QMARK_.invokeStatic(util.clj:146)\r\n\tat metabase.driver.util$can_connect_with_details_QMARK_.doInvoke(util.clj:135)\r\n\tat clojure.lang.RestFn.invoke(RestFn.java:442)\r\n\tat metabase.api.database$test_database_connection.invokeStatic(database.clj:694)\r\n\tat metabase.api.database$test_database_connection.doInvoke(database.clj:684)\r\n\tat clojure.lang.RestFn.invoke(RestFn.java:425)\r\n\tat metabase.api.database$fn__98683.invokeStatic(database.clj:906)\r\n\tat metabase.api.database$fn__98683.invoke(database.clj:881)\r\n\tat compojure.core$wrap_response$fn__43795.invoke(core.clj:160)\r\n\tat compojure.core$wrap_route_middleware$fn__43779.invoke(core.clj:132)\r\n\tat compojure.core$wrap_route_info$fn__43784.invoke(core.clj:139)\r\n\tat compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:151)\r\n\tat clojure.lang.Var.invoke(Var.java:393)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)\r\n\tat clojure.lang.Var.invoke(Var.java:393)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)\r\n\tat clojure.lang.Var.invoke(Var.java:393)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat metabase.server.middleware.auth$enforce_authentication$fn__94209.invoke(auth.clj:17)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat compojure.core$make_context$handler__43835.invoke(core.clj:290)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:300)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat metabase.api.routes$fn__101635$fn__101636.invoke(routes.clj:64)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat clojure.lang.AFn.applyToHelper(AFn.java:160)\r\n\tat clojure.lang.AFn.applyTo(AFn.java:144)\r\n\tat clojure.core$apply.invokeStatic(core.clj:667)\r\n\tat clojure.core$apply.invoke(core.clj:662)\r\n\tat metabase.server.routes$fn__101798$fn__101799.doInvoke(routes.clj:72)\r\n\tat clojure.lang.RestFn.invoke(RestFn.java:436)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat compojure.core$make_context$handler__43835.invoke(core.clj:290)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:300)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat compojure.core$make_context$handler__43835.invoke(core.clj:290)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:300)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat metabase.server.middleware.exceptions$catch_uncaught_exceptions$fn__98859.invoke(exceptions.clj:108)\r\n\tat metabase.server.middleware.exceptions$catch_api_exceptions$fn__98856.invoke(exceptions.clj:96)\r\n\tat metabase.server.middleware.log$log_api_call$fn__103799$fn__103800$fn__103801.invoke(log.clj:216)\r\n\tat metabase.driver.sql_jdbc.execute.diagnostic$do_with_diagnostic_info.invokeStatic(diagnostic.clj:18)\r\n\tat metabase.driver.sql_jdbc.execute.diagnostic$do_with_diagnostic_info.invoke(diagnostic.clj:12)\r\n\tat metabase.server.middleware.log$log_api_call$fn__103799$fn__103800.invoke(log.clj:208)\r\n\tat toucan2.execute$do_with_call_counts.invokeStatic(execute.clj:112)\r\n\tat toucan2.execute$do_with_call_counts.invoke(execute.clj:103)\r\n\tat metabase.server.middleware.log$log_api_call$fn__103799.invoke(log.clj:207)\r\n\tat metabase.server.middleware.browser_cookie$ensure_browser_id_cookie$fn__108479.invoke(browser_cookie.clj:40)\r\n\tat metabase.server.middleware.security$add_security_headers$fn__85125.invoke(security.clj:180)\r\n\tat metabase.server.middleware.json$wrap_json_body$fn__45153.invoke(json.clj:67)\r\n\tat metabase.server.middleware.offset_paging$handle_paging$fn__85149.invoke(offset_paging.clj:45)\r\n\tat metabase.server.middleware.json$wrap_streamed_json_response$fn__45171.invoke(json.clj:103)\r\n\tat ring.middleware.keyword_params$wrap_keyword_params$fn__108746.invoke(keyword_params.clj:55)\r\n\tat ring.middleware.params$wrap_params$fn__108765.invoke(params.clj:77)\r\n\tat metabase.server.middleware.misc$maybe_set_site_url$fn__65480.invoke(misc.clj:61)\r\n\tat metabase.server.middleware.session$reset_session_timeout$fn__71275.invoke(session.clj:488)\r\n\tat metabase.server.middleware.session$bind_current_user$fn__71241$fn__71242.invoke(session.clj:383)\r\n\tat metabase.server.middleware.session$do_with_current_user.invokeStatic(session.clj:362)\r\n\tat metabase.server.middleware.session$do_with_current_user.invoke(session.clj:346)\r\n\tat metabase.server.middleware.session$bind_current_user$fn__71241.invoke(session.clj:382)\r\n\tat metabase.server.middleware.session$wrap_current_user_info$fn__71224.invoke(session.clj:321)\r\n\tat metabase.server.middleware.session$wrap_session_id$fn__71207.invoke(session.clj:253)\r\n\tat metabase.server.middleware.auth$wrap_api_key$fn__94217.invoke(auth.clj:30)\r\n\tat ring.middleware.cookies$wrap_cookies$fn__108666.invoke(cookies.clj:216)\r\n\tat metabase.server.middleware.misc$add_content_type$fn__65462.invoke(misc.clj:29)\r\n\tat metabase.server.middleware.misc$disable_streaming_buffering$fn__65488.invoke(misc.clj:78)\r\n\tat ring.middleware.gzip$wrap_gzip$fn__108708.invoke(gzip.clj:86)\r\n\tat metabase.server.middleware.misc$bind_request$fn__65491.invoke(misc.clj:95)\r\n\tat metabase.server.middleware.ssl$redirect_to_https_middleware$fn__108495.invoke(ssl.clj:51)\r\n\tat metabase.server$async_proxy_handler$fn__65665.invoke(server.clj:78)\r\n\tat metabase.server.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle(Unknown Source)\r\n\tat org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:122)\r\n\tat org.eclipse.jetty.server.Server.handle(Server.java:563)\r\n\tat org.eclipse.jetty.server.HttpChannel$RequestDispatchable.dispatch(HttpChannel.java:1598)\r\n\tat org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:753)\r\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:501)\r\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:287)\r\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:314)\r\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:100)\r\n\tat org.eclipse.jetty.io.SelectableChannelEndPoint$1.run(SelectableChannelEndPoint.java:53)\r\n\tat org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.runTask(AdaptiveExecutionStrategy.java:421)\r\n\tat org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.consumeTask(AdaptiveExecutionStrategy.java:390)\r\n\tat org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.tryProduce(AdaptiveExecutionStrategy.java:277)\r\n\tat org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.run(AdaptiveExecutionStrategy.java:199)\r\n\tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:411)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:969)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.doRunJob(QueuedThreadPool.java:1194)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1149)\r\n\tat java.base/java.lang.Thread.run(Unknown Source)\r\n\r\n## Form:\r\n![image](https://github.com/metabase/metabase/assets/7199026/36513cd4-6289-443a-9687-d36a2cee9802)\r\n**This error takes 10s to show**\r\n\r\n# Logs:\r\n[7a8b27a1-0e90-41c9-9f0e-ca4d842f0e5f] 2024-03-11T15:38:50-03:00 ERROR metabase.api.database Não é possível conectar ao banco de dados\r\nclojure.lang.ExceptionInfo: Timeout depois de 10.0 s {:message ""Timeout depois de 10.0 s""}\r\n\tat metabase.driver.util$can_connect_with_details_QMARK_.invokeStatic(util.clj:164)\r\n\tat metabase.driver.util$can_connect_with_details_QMARK_.doInvoke(util.clj:135)\r\n\tat clojure.lang.RestFn.invoke(RestFn.java:442)\r\n\tat metabase.api.database$test_database_connection.invokeStatic(database.clj:694)\r\n\tat metabase.api.database$test_database_connection.doInvoke(database.clj:684)\r\n\tat clojure.lang.RestFn.invoke(RestFn.java:425)\r\n\tat metabase.api.database$fn__98683.invokeStatic(database.clj:906)\r\n\tat metabase.api.database$fn__98683.invoke(database.clj:881)\r\n\tat compojure.core$wrap_response$fn__43795.invoke(core.clj:160)\r\n\tat compojure.core$wrap_route_middleware$fn__43779.invoke(core.clj:132)\r\n\tat compojure.core$wrap_route_info$fn__43784.invoke(core.clj:139)\r\n\tat compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:151)\r\n\tat clojure.lang.Var.invoke(Var.java:393)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)\r\n\tat clojure.lang.Var.invoke(Var.java:393)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)\r\n\tat clojure.lang.Var.invoke(Var.java:393)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat metabase.server.middleware.auth$enforce_authentication$fn__94209.invoke(auth.clj:17)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat compojure.core$make_context$handler__43835.invoke(core.clj:290)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:300)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat metabase.api.routes$fn__101635$fn__101636.invoke(routes.clj:64)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat clojure.lang.AFn.applyToHelper(AFn.java:160)\r\n\tat clojure.lang.AFn.applyTo(AFn.java:144)\r\n\tat clojure.core$apply.invokeStatic(core.clj:667)\r\n\tat clojure.core$apply.invoke(core.clj:662)\r\n\tat metabase.server.routes$fn__101798$fn__101799.doInvoke(routes.clj:72)\r\n\tat clojure.lang.RestFn.invoke(RestFn.java:436)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat compojure.core$make_context$handler__43835.invoke(core.clj:290)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:300)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat compojure.core$make_context$handler__43835.invoke(core.clj:290)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:300)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)\r\n\tat compojure.core$make_context$fn__43839.invoke(core.clj:301)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)\r\n\tat compojure.core$routes$fn__43807.invoke(core.clj:200)\r\n\tat metabase.server.middleware.exceptions$catch_uncaught_exceptions$fn__98859.invoke(exceptions.clj:108)\r\n\tat metabase.server.middleware.exceptions$catch_api_exceptions$fn__98856.invoke(exceptions.clj:96)\r\n\tat metabase.server.middleware.log$log_api_call$fn__103799$fn__103800$fn__103801.invoke(log.clj:216)\r\n\tat metabase.driver.sql_jdbc.execute.diagnostic$do_with_diagnostic_info.invokeStatic(diagnostic.clj:18)\r\n\tat metabase.driver.sql_jdbc.execute.diagnostic$do_with_diagnostic_info.invoke(diagnostic.clj:12)\r\n\tat metabase.server.middleware.log$log_api_call$fn__103799$fn__103800.invoke(log.clj:208)\r\n\tat toucan2.execute$do_with_call_counts.invokeStatic(execute.clj:112)\r\n\tat toucan2.execute$do_with_call_counts.invoke(execute.clj:103)\r\n\tat metabase.server.middleware.log$log_api_call$fn__103799.invoke(log.clj:207)\r\n\tat metabase.server.middleware.browser_cookie$ensure_browser_id_cookie$fn__108479.invoke(browser_cookie.clj:40)\r\n\tat metabase.server.middleware.security$add_security_headers$fn__85125.invoke(security.clj:180)\r\n\tat metabase.server.middleware.json$wrap_json_body$fn__45153.invoke(json.clj:67)\r\n\tat metabase.server.middleware.offset_paging$handle_paging$fn__85149.invoke(offset_paging.clj:45)\r\n\tat metabase.server.middleware.json$wrap_streamed_json_response$fn__45171.invoke(json.clj:103)\r\n\tat ring.middleware.keyword_params$wrap_keyword_params$fn__108746.invoke(keyword_params.clj:55)\r\n\tat ring.middleware.params$wrap_params$fn__108765.invoke(params.clj:77)\r\n\tat metabase.server.middleware.misc$maybe_set_site_url$fn__65480.invoke(misc.clj:61)\r\n\tat metabase.server.middleware.session$reset_session_timeout$fn__71275.invoke(session.clj:488)\r\n\tat metabase.server.middleware.session$bind_current_user$fn__71241$fn__71242.invoke(session.clj:383)\r\n\tat metabase.server.middleware.session$do_with_current_user.invokeStatic(session.clj:362)\r\n\tat metabase.server.middleware.session$do_with_current_user.invoke(session.clj:346)\r\n\tat metabase.server.middleware.session$bind_current_user$fn__71241.invoke(session.clj:382)\r\n\tat metabase.server.middleware.session$wrap_current_user_info$fn__71224.invoke(session.clj:321)\r\n\tat metabase.server.middleware.session$wrap_session_id$fn__71207.invoke(session.clj:253)\r\n\tat metabase.server.middleware.auth$wrap_api_key$fn__94217.invoke(auth.clj:30)\r\n\tat ring.middleware.cookies$wrap_cookies$fn__108666.invoke(cookies.clj:216)\r\n\tat metabase.server.middleware.misc$add_content_type$fn__65462.invoke(misc.clj:29)\r\n\tat metabase.server.middleware.misc$disable_streaming_buffering$fn__65488.invoke(misc.clj:78)\r\n\tat ring.middleware.gzip$wrap_gzip$fn__108708.invoke(gzip.clj:86)\r\n\tat metabase.server.middleware.misc$bind_request$fn__65491.invoke(misc.clj:95)\r\n\tat metabase.server.middleware.ssl$redirect_to_https_middleware$fn__108495.invoke(ssl.clj:51)\r\n\tat metabase.server$async_proxy_handler$fn__65665.invoke(server.clj:78)\r\n\tat metabase.server.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle(Unknown Source)\r\n\tat org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:122)\r\n\tat org.eclipse.jetty.server.Server.handle(Server.java:563)\r\n\tat org.eclipse.jetty.server.HttpChannel$RequestDispatchable.dispatch(HttpChannel.java:1598)\r\n\tat org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:753)\r\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:501)\r\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:287)\r\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:314)\r\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:100)\r\n\tat org.eclipse.jetty.io.SelectableChannelEndPoint$1.run(SelectableChannelEndPoint.java:53)\r\n\tat org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.runTask(AdaptiveExecutionStrategy.java:421)\r\n\tat org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.consumeTask(AdaptiveExecutionStrategy.java:390)\r\n\tat org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.tryProduce(AdaptiveExecutionStrategy.java:277)\r\n\tat org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.run(AdaptiveExecutionStrategy.java:199)\r\n\tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:411)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:969)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.doRunJob(QueuedThreadPool.java:1194)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1149)\r\n\tat java.base/java.lang.Thread.run(Unknown Source)\r\nCaused by: java.util.concurrent.TimeoutException: Timeout depois de 10.0 s\r\n\tat metabase.util.jvm$deref_with_timeout.invokeStatic(jvm.clj:287)\r\n\tat metabase.util.jvm$deref_with_timeout.invoke(jvm.clj:279)\r\n\tat metabase.util.jvm$do_with_timeout.invokeStatic(jvm.clj:294)\r\n\tat metabase.util.jvm$do_with_timeout.invoke(jvm.clj:290)\r\n\tat metabase.driver.util$can_connect_with_details_QMARK_.invokeStatic(util.clj:146)\r\n\t... 171 more\r\n\r\n### Diagnostic Info:\r\n{\r\n  ""browser-info"": {\r\n    ""language"": ""pt-BR"",\r\n    ""platform"": ""Win32"",\r\n    ""userAgent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"",\r\n    ""vendor"": ""Google Inc.""\r\n  },\r\n  ""system-info"": {\r\n    ""file.encoding"": ""UTF-8"",\r\n    ""java.runtime.name"": ""OpenJDK Runtime Environment"",\r\n    ""java.runtime.version"": ""11.0.22+7"",\r\n    ""java.vendor"": ""Eclipse Adoptium"",\r\n    ""java.vendor.url"": ""https://adoptium.net/"",\r\n    ""java.version"": ""11.0.22"",\r\n    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",\r\n    ""java.vm.version"": ""11.0.22+7"",\r\n    ""os.name"": ""Linux"",\r\n    ""os.version"": ""5.10.209-198.858.amzn2.x86_64"",\r\n    ""user.language"": ""en"",\r\n    ""user.timezone"": ""GMT""\r\n  },\r\n  ""metabase-info"": {\r\n    ""databases"": [\r\n      ""mongo"",\r\n      ""googleanalytics"",\r\n      ""postgres""\r\n    ],\r\n    ""hosting-env"": ""unknown"",\r\n    ""application-database"": ""postgres"",\r\n    ""application-database-details"": {\r\n      ""database"": {\r\n        ""name"": ""PostgreSQL"",\r\n        ""version"": ""14.10""\r\n      },\r\n      ""jdbc-driver"": {\r\n        ""name"": ""PostgreSQL JDBC Driver"",\r\n        ""version"": ""42.6.0""\r\n      }\r\n    },\r\n    ""run-mode"": ""prod"",\r\n    ""version"": {\r\n      ""date"": ""2024-03-04"",\r\n      ""tag"": ""v1.48.8"",\r\n      ""hash"": ""a900c85""\r\n    },\r\n    ""settings"": {\r\n      ""report-timezone"": null\r\n    }\r\n  }\r\n}\r\n\r\n### Important notes:\r\n\r\n- This does not seem to be a network issue - I can connect using Mongo Compass using the same connection string, and I rechecked that the Atlas is configured to allow connections from anywhere: ![image](https://github.com/metabase/metabase/assets/7199026/dec9ba8e-9f56-4310-a081-730e23fef727)\r\n\r\n- This second cloud instance was created from scratch and then I used the migration script to migrate over my data from my AWS hosted instance. The process seemed to have worked fine, with all questions and dashboards correctly migrated, but not working due to this data error.', 'created_at': datetime.datetime(2024, 3, 11, 18, 42, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1989192338, 'issue_id': 2173632971, 'author': 'lucasboleite', 'body': ""I just noticed that my instance was showing all text in Brazilian Portuguese - let me know if you'd prefer that I reupload the prints after chaging the language to English!"", 'created_at': datetime.datetime(2024, 3, 11, 18, 44, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1997917048, 'issue_id': 2173632971, 'author': 'lucasboleite', 'body': 'Any thoughs @paoliniluis?', 'created_at': datetime.datetime(2024, 3, 14, 16, 56, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1998552119, 'issue_id': 2173632971, 'author': 'paoliniluis', 'body': 'Hi @lucasboleite , I just tested this with an Atlas DB and I was able to connect without issues. Have you tried enabling the SRV option?1', 'created_at': datetime.datetime(2024, 3, 14, 22, 0, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1998554364, 'issue_id': 2173632971, 'author': 'paoliniluis', 'body': ""BTW: I'm using v49"", 'created_at': datetime.datetime(2024, 3, 14, 22, 1, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2004929731, 'issue_id': 2173632971, 'author': 'paoliniluis', 'body': 'Hi @lucasboleite any news?', 'created_at': datetime.datetime(2024, 3, 18, 20, 30, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2010576450, 'issue_id': 2173632971, 'author': 'lucasboleite', 'body': 'Hey @paoliniluis! Sorry for the delayed response, but I’ve managed to resolve the issue just a few minutes ago.\r\n\r\nUpon inspecting the database changes, I noticed something weird in the metabase_databases table. The MongoDB entry had some of its fields overwritten with data from Metabase’s internal database. Interestingly, the conn-uri field remained intact, but the password, port, dbname, host, and user fields were populated with PostgreSQL data.\r\n\r\nWhat’s interesting is that this PostgreSQL database is only used for Metabase itself and was never added as a database within Metabase. Also, I’m unsure why the UI refused to overwrite these fields with the data I provided there...\r\n\r\nHowever, after manually updating these fields directly in the database, I was able to access my data. I can now modify and save the database connection data through the UI as expected.', 'created_at': datetime.datetime(2024, 3, 20, 20, 35, 35, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-07 17:42:28 UTC): Where is the MongoDB installed? can you connect from another DB client?

lucasboleite on (2024-03-11 15:49:06 UTC): Same issue here - on both Cloud and Hosted versions.

My Mongo was working fine with 0.47.13 but stopped connecting from 0.48 forward. It's hosted at Mongo Atlas and firewall is wide open (0.0.0.0).

paoliniluis on (2024-03-11 15:53:47 UTC): @lucasboleite can you please give us some details? you can't connect by using the connection string or the form? I'm able to connect without any issues

lucasboleite on (2024-03-11 18:42:49 UTC): @paoliniluis Sure thing!

I tried both - they show either a 10s timeout issue or a generic error. Nothing more than that even on the logs. I'm currently trying to go back to 0.47.13 so I spun down my instances and can't show prints from there, but here are some additional info from my cloud hosts:

### Creating a brand new instance:
## Connection string:
![image](https://github.com/metabase/metabase/assets/7199026/e9ca2c56-f840-4073-b3b1-a0698e2a7848)
**This error occurs immediatly**

The connection string is: mongodb+srv://[username]:[password]@[host]/test?readPreference=secondaryPreferred  (same one that I had used before, and that I'm currently using to connect through Mongo Compass)

## Form:
![image](https://github.com/metabase/metabase/assets/7199026/4fbdc545-c8f3-4b0d-b233-53df4761b8a8)
**This error takes 10s to show**

Using the same data from Compass (on the same type of form view)

### Using an instance that I migrated from my hosted database:
As soon as I go to Databases -> Mongo DB, it shows the postgresql connection data, used for internal metabase data and configured using MB env vars on my docker setup, rather than my MongoDB connection data.
![image](https://github.com/metabase/metabase/assets/7199026/408dd8ce-5395-4853-92b2-e30496c68b1c)

And if I configure it correctly I get the same errors:

## Connection string:
![image](https://github.com/metabase/metabase/assets/7199026/e278048d-1c62-4f08-9355-01aaf7044344)
**This error occurs immediatly**

# Logs:
[7a8b27a1-0e90-41c9-9f0e-ca4d842f0e5f] 2024-03-11T15:38:50-03:00 ERROR metabase.driver.util Failed to connect to Database
java.util.concurrent.TimeoutException: Timeout depois de 10.0 s
	at metabase.util.jvm$deref_with_timeout.invokeStatic(jvm.clj:287)
	at metabase.util.jvm$deref_with_timeout.invoke(jvm.clj:279)
	at metabase.util.jvm$do_with_timeout.invokeStatic(jvm.clj:294)
	at metabase.util.jvm$do_with_timeout.invoke(jvm.clj:290)
	at metabase.driver.util$can_connect_with_details_QMARK_.invokeStatic(util.clj:146)
	at metabase.driver.util$can_connect_with_details_QMARK_.doInvoke(util.clj:135)
	at clojure.lang.RestFn.invoke(RestFn.java:442)
	at metabase.api.database$test_database_connection.invokeStatic(database.clj:694)
	at metabase.api.database$test_database_connection.doInvoke(database.clj:684)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at metabase.api.database$fn__98683.invokeStatic(database.clj:906)
	at metabase.api.database$fn__98683.invoke(database.clj:881)
	at compojure.core$wrap_response$fn__43795.invoke(core.clj:160)
	at compojure.core$wrap_route_middleware$fn__43779.invoke(core.clj:132)
	at compojure.core$wrap_route_info$fn__43784.invoke(core.clj:139)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:151)
	at clojure.lang.Var.invoke(Var.java:393)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at clojure.lang.Var.invoke(Var.java:393)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at clojure.lang.Var.invoke(Var.java:393)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at metabase.server.middleware.auth$enforce_authentication$fn__94209.invoke(auth.clj:17)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$make_context$handler__43835.invoke(core.clj:290)
	at compojure.core$make_context$fn__43839.invoke(core.clj:300)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at metabase.api.routes$fn__101635$fn__101636.invoke(routes.clj:64)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at clojure.lang.AFn.applyToHelper(AFn.java:160)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$apply.invoke(core.clj:662)
	at metabase.server.routes$fn__101798$fn__101799.doInvoke(routes.clj:72)
	at clojure.lang.RestFn.invoke(RestFn.java:436)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$make_context$handler__43835.invoke(core.clj:290)
	at compojure.core$make_context$fn__43839.invoke(core.clj:300)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$make_context$handler__43835.invoke(core.clj:290)
	at compojure.core$make_context$fn__43839.invoke(core.clj:300)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at metabase.server.middleware.exceptions$catch_uncaught_exceptions$fn__98859.invoke(exceptions.clj:108)
	at metabase.server.middleware.exceptions$catch_api_exceptions$fn__98856.invoke(exceptions.clj:96)
	at metabase.server.middleware.log$log_api_call$fn__103799$fn__103800$fn__103801.invoke(log.clj:216)
	at metabase.driver.sql_jdbc.execute.diagnostic$do_with_diagnostic_info.invokeStatic(diagnostic.clj:18)
	at metabase.driver.sql_jdbc.execute.diagnostic$do_with_diagnostic_info.invoke(diagnostic.clj:12)
	at metabase.server.middleware.log$log_api_call$fn__103799$fn__103800.invoke(log.clj:208)
	at toucan2.execute$do_with_call_counts.invokeStatic(execute.clj:112)
	at toucan2.execute$do_with_call_counts.invoke(execute.clj:103)
	at metabase.server.middleware.log$log_api_call$fn__103799.invoke(log.clj:207)
	at metabase.server.middleware.browser_cookie$ensure_browser_id_cookie$fn__108479.invoke(browser_cookie.clj:40)
	at metabase.server.middleware.security$add_security_headers$fn__85125.invoke(security.clj:180)
	at metabase.server.middleware.json$wrap_json_body$fn__45153.invoke(json.clj:67)
	at metabase.server.middleware.offset_paging$handle_paging$fn__85149.invoke(offset_paging.clj:45)
	at metabase.server.middleware.json$wrap_streamed_json_response$fn__45171.invoke(json.clj:103)
	at ring.middleware.keyword_params$wrap_keyword_params$fn__108746.invoke(keyword_params.clj:55)
	at ring.middleware.params$wrap_params$fn__108765.invoke(params.clj:77)
	at metabase.server.middleware.misc$maybe_set_site_url$fn__65480.invoke(misc.clj:61)
	at metabase.server.middleware.session$reset_session_timeout$fn__71275.invoke(session.clj:488)
	at metabase.server.middleware.session$bind_current_user$fn__71241$fn__71242.invoke(session.clj:383)
	at metabase.server.middleware.session$do_with_current_user.invokeStatic(session.clj:362)
	at metabase.server.middleware.session$do_with_current_user.invoke(session.clj:346)
	at metabase.server.middleware.session$bind_current_user$fn__71241.invoke(session.clj:382)
	at metabase.server.middleware.session$wrap_current_user_info$fn__71224.invoke(session.clj:321)
	at metabase.server.middleware.session$wrap_session_id$fn__71207.invoke(session.clj:253)
	at metabase.server.middleware.auth$wrap_api_key$fn__94217.invoke(auth.clj:30)
	at ring.middleware.cookies$wrap_cookies$fn__108666.invoke(cookies.clj:216)
	at metabase.server.middleware.misc$add_content_type$fn__65462.invoke(misc.clj:29)
	at metabase.server.middleware.misc$disable_streaming_buffering$fn__65488.invoke(misc.clj:78)
	at ring.middleware.gzip$wrap_gzip$fn__108708.invoke(gzip.clj:86)
	at metabase.server.middleware.misc$bind_request$fn__65491.invoke(misc.clj:95)
	at metabase.server.middleware.ssl$redirect_to_https_middleware$fn__108495.invoke(ssl.clj:51)
	at metabase.server$async_proxy_handler$fn__65665.invoke(server.clj:78)
	at metabase.server.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle(Unknown Source)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:122)
	at org.eclipse.jetty.server.Server.handle(Server.java:563)
	at org.eclipse.jetty.server.HttpChannel$RequestDispatchable.dispatch(HttpChannel.java:1598)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:753)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:501)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:287)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:314)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:100)
	at org.eclipse.jetty.io.SelectableChannelEndPoint$1.run(SelectableChannelEndPoint.java:53)
	at org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.runTask(AdaptiveExecutionStrategy.java:421)
	at org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.consumeTask(AdaptiveExecutionStrategy.java:390)
	at org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.tryProduce(AdaptiveExecutionStrategy.java:277)
	at org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.run(AdaptiveExecutionStrategy.java:199)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:411)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:969)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.doRunJob(QueuedThreadPool.java:1194)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1149)
	at java.base/java.lang.Thread.run(Unknown Source)

## Form:
![image](https://github.com/metabase/metabase/assets/7199026/36513cd4-6289-443a-9687-d36a2cee9802)
**This error takes 10s to show**

# Logs:
[7a8b27a1-0e90-41c9-9f0e-ca4d842f0e5f] 2024-03-11T15:38:50-03:00 ERROR metabase.api.database Não é possível conectar ao banco de dados
clojure.lang.ExceptionInfo: Timeout depois de 10.0 s {:message ""Timeout depois de 10.0 s""}
	at metabase.driver.util$can_connect_with_details_QMARK_.invokeStatic(util.clj:164)
	at metabase.driver.util$can_connect_with_details_QMARK_.doInvoke(util.clj:135)
	at clojure.lang.RestFn.invoke(RestFn.java:442)
	at metabase.api.database$test_database_connection.invokeStatic(database.clj:694)
	at metabase.api.database$test_database_connection.doInvoke(database.clj:684)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at metabase.api.database$fn__98683.invokeStatic(database.clj:906)
	at metabase.api.database$fn__98683.invoke(database.clj:881)
	at compojure.core$wrap_response$fn__43795.invoke(core.clj:160)
	at compojure.core$wrap_route_middleware$fn__43779.invoke(core.clj:132)
	at compojure.core$wrap_route_info$fn__43784.invoke(core.clj:139)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:151)
	at clojure.lang.Var.invoke(Var.java:393)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at clojure.lang.Var.invoke(Var.java:393)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at clojure.lang.Var.invoke(Var.java:393)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at metabase.server.middleware.auth$enforce_authentication$fn__94209.invoke(auth.clj:17)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$make_context$handler__43835.invoke(core.clj:290)
	at compojure.core$make_context$fn__43839.invoke(core.clj:300)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at metabase.api.routes$fn__101635$fn__101636.invoke(routes.clj:64)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at clojure.lang.AFn.applyToHelper(AFn.java:160)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$apply.invoke(core.clj:662)
	at metabase.server.routes$fn__101798$fn__101799.doInvoke(routes.clj:72)
	at clojure.lang.RestFn.invoke(RestFn.java:436)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$make_context$handler__43835.invoke(core.clj:290)
	at compojure.core$make_context$fn__43839.invoke(core.clj:300)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$make_context$handler__43835.invoke(core.clj:290)
	at compojure.core$make_context$fn__43839.invoke(core.clj:300)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at metabase.server.middleware.exceptions$catch_uncaught_exceptions$fn__98859.invoke(exceptions.clj:108)
	at metabase.server.middleware.exceptions$catch_api_exceptions$fn__98856.invoke(exceptions.clj:96)
	at metabase.server.middleware.log$log_api_call$fn__103799$fn__103800$fn__103801.invoke(log.clj:216)
	at metabase.driver.sql_jdbc.execute.diagnostic$do_with_diagnostic_info.invokeStatic(diagnostic.clj:18)
	at metabase.driver.sql_jdbc.execute.diagnostic$do_with_diagnostic_info.invoke(diagnostic.clj:12)
	at metabase.server.middleware.log$log_api_call$fn__103799$fn__103800.invoke(log.clj:208)
	at toucan2.execute$do_with_call_counts.invokeStatic(execute.clj:112)
	at toucan2.execute$do_with_call_counts.invoke(execute.clj:103)
	at metabase.server.middleware.log$log_api_call$fn__103799.invoke(log.clj:207)
	at metabase.server.middleware.browser_cookie$ensure_browser_id_cookie$fn__108479.invoke(browser_cookie.clj:40)
	at metabase.server.middleware.security$add_security_headers$fn__85125.invoke(security.clj:180)
	at metabase.server.middleware.json$wrap_json_body$fn__45153.invoke(json.clj:67)
	at metabase.server.middleware.offset_paging$handle_paging$fn__85149.invoke(offset_paging.clj:45)
	at metabase.server.middleware.json$wrap_streamed_json_response$fn__45171.invoke(json.clj:103)
	at ring.middleware.keyword_params$wrap_keyword_params$fn__108746.invoke(keyword_params.clj:55)
	at ring.middleware.params$wrap_params$fn__108765.invoke(params.clj:77)
	at metabase.server.middleware.misc$maybe_set_site_url$fn__65480.invoke(misc.clj:61)
	at metabase.server.middleware.session$reset_session_timeout$fn__71275.invoke(session.clj:488)
	at metabase.server.middleware.session$bind_current_user$fn__71241$fn__71242.invoke(session.clj:383)
	at metabase.server.middleware.session$do_with_current_user.invokeStatic(session.clj:362)
	at metabase.server.middleware.session$do_with_current_user.invoke(session.clj:346)
	at metabase.server.middleware.session$bind_current_user$fn__71241.invoke(session.clj:382)
	at metabase.server.middleware.session$wrap_current_user_info$fn__71224.invoke(session.clj:321)
	at metabase.server.middleware.session$wrap_session_id$fn__71207.invoke(session.clj:253)
	at metabase.server.middleware.auth$wrap_api_key$fn__94217.invoke(auth.clj:30)
	at ring.middleware.cookies$wrap_cookies$fn__108666.invoke(cookies.clj:216)
	at metabase.server.middleware.misc$add_content_type$fn__65462.invoke(misc.clj:29)
	at metabase.server.middleware.misc$disable_streaming_buffering$fn__65488.invoke(misc.clj:78)
	at ring.middleware.gzip$wrap_gzip$fn__108708.invoke(gzip.clj:86)
	at metabase.server.middleware.misc$bind_request$fn__65491.invoke(misc.clj:95)
	at metabase.server.middleware.ssl$redirect_to_https_middleware$fn__108495.invoke(ssl.clj:51)
	at metabase.server$async_proxy_handler$fn__65665.invoke(server.clj:78)
	at metabase.server.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle(Unknown Source)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:122)
	at org.eclipse.jetty.server.Server.handle(Server.java:563)
	at org.eclipse.jetty.server.HttpChannel$RequestDispatchable.dispatch(HttpChannel.java:1598)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:753)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:501)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:287)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:314)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:100)
	at org.eclipse.jetty.io.SelectableChannelEndPoint$1.run(SelectableChannelEndPoint.java:53)
	at org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.runTask(AdaptiveExecutionStrategy.java:421)
	at org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.consumeTask(AdaptiveExecutionStrategy.java:390)
	at org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.tryProduce(AdaptiveExecutionStrategy.java:277)
	at org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.run(AdaptiveExecutionStrategy.java:199)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:411)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:969)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.doRunJob(QueuedThreadPool.java:1194)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1149)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.util.concurrent.TimeoutException: Timeout depois de 10.0 s
	at metabase.util.jvm$deref_with_timeout.invokeStatic(jvm.clj:287)
	at metabase.util.jvm$deref_with_timeout.invoke(jvm.clj:279)
	at metabase.util.jvm$do_with_timeout.invokeStatic(jvm.clj:294)
	at metabase.util.jvm$do_with_timeout.invoke(jvm.clj:290)
	at metabase.driver.util$can_connect_with_details_QMARK_.invokeStatic(util.clj:146)
	... 171 more

### Diagnostic Info:
{
  ""browser-info"": {
    ""language"": ""pt-BR"",
    ""platform"": ""Win32"",
    ""userAgent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.22+7"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.22"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.22+7"",
    ""os.name"": ""Linux"",
    ""os.version"": ""5.10.209-198.858.amzn2.x86_64"",
    ""user.language"": ""en"",
    ""user.timezone"": ""GMT""
  },
  ""metabase-info"": {
    ""databases"": [
      ""mongo"",
      ""googleanalytics"",
      ""postgres""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""postgres"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""PostgreSQL"",
        ""version"": ""14.10""
      },
      ""jdbc-driver"": {
        ""name"": ""PostgreSQL JDBC Driver"",
        ""version"": ""42.6.0""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-03-04"",
      ""tag"": ""v1.48.8"",
      ""hash"": ""a900c85""
    },
    ""settings"": {
      ""report-timezone"": null
    }
  }
}

### Important notes:

- This does not seem to be a network issue - I can connect using Mongo Compass using the same connection string, and I rechecked that the Atlas is configured to allow connections from anywhere: ![image](https://github.com/metabase/metabase/assets/7199026/dec9ba8e-9f56-4310-a081-730e23fef727)

- This second cloud instance was created from scratch and then I used the migration script to migrate over my data from my AWS hosted instance. The process seemed to have worked fine, with all questions and dashboards correctly migrated, but not working due to this data error.

lucasboleite on (2024-03-11 18:44:27 UTC): I just noticed that my instance was showing all text in Brazilian Portuguese - let me know if you'd prefer that I reupload the prints after chaging the language to English!

lucasboleite on (2024-03-14 16:56:59 UTC): Any thoughs @paoliniluis?

paoliniluis on (2024-03-14 22:00:05 UTC): Hi @lucasboleite , I just tested this with an Atlas DB and I was able to connect without issues. Have you tried enabling the SRV option?1

paoliniluis on (2024-03-14 22:01:56 UTC): BTW: I'm using v49

paoliniluis on (2024-03-18 20:30:45 UTC): Hi @lucasboleite any news?

lucasboleite on (2024-03-20 20:35:35 UTC): Hey @paoliniluis! Sorry for the delayed response, but I’ve managed to resolve the issue just a few minutes ago.

Upon inspecting the database changes, I noticed something weird in the metabase_databases table. The MongoDB entry had some of its fields overwritten with data from Metabase’s internal database. Interestingly, the conn-uri field remained intact, but the password, port, dbname, host, and user fields were populated with PostgreSQL data.

What’s interesting is that this PostgreSQL database is only used for Metabase itself and was never added as a database within Metabase. Also, I’m unsure why the UI refused to overwrite these fields with the data I provided there...

However, after manually updating these fields directly in the database, I was able to access my data. I can now modify and save the database connection data through the UI as expected.

"
2173568812,issue,closed,completed,Editing Column description of Model is confusing if it contains aggregations,"### Describe the bug

Editing 1 columns would propagate the same description to all other columns making the whole process confusing. You would think the other columns contain the same description where infact it's just a frontend issue

### To Reproduce

1. Go to New -> Question -> Sample DB -> Orders -> Count group by Created At Month
2. Turn Question into a Model -> Attempt to edit the description of a column

https://github.com/metabase/metabase/assets/110378427/97c8d8e4-f59e-4c40-8d18-e6beb3656362





### Expected behavior

Only the description of the column you are editing should get updated

### Logs

None that are relevant

### Information about your Metabase installation

```JSON
1.48.8 and 1.49.RC2
```


### Severity

Cosmetic but makes the whole process confusing if you don't know what is going on

### Additional context

_No response_",Tony-metabase,2024-03-07 10:50:27+00:00,['ranquild'],2024-07-04 21:02:46+00:00,2024-07-04 12:44:37+00:00,https://github.com/metabase/metabase/issues/39749,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Frontend', ''), ('Querying/Models', 'aka Datasets'), ('.Already Fixed', 'will apear in ""Already Fixed"" in the release notes (not ""Bug Fixes"" that we actively fixed)'), ('.Team/Querying', '')]","[{'comment_id': 2206536633, 'issue_id': 2173568812, 'author': 'ranquild', 'body': 'Can be reproduced in 0.48 but not in 0.49+', 'created_at': datetime.datetime(2024, 7, 3, 15, 23, 43, tzinfo=datetime.timezone.utc)}]","ranquild (Assginee) on (2024-07-03 15:23:43 UTC): Can be reproduced in 0.48 but not in 0.49+

"
2172796757,issue,open,,CI jobs to start Metabase on all supported platforms,"We have this [bug](https://github.com/metabase/metabase/issues/39040) where we can't start metabase on Windows with h2... I mean what!? And it's been there since 48!

It's a low-hanging fruit bug to catch if we have CI to run against those platforms; I propose we start CI jobs to start MB on Windows and Mac and do some health checks. Then, if we want to take it to the next level, then we can add some basic functionality checks.



We should at least have tests on Windows and Mac.",qnkhuat,2024-03-07 02:10:15+00:00,[],2024-03-07 02:10:39+00:00,,https://github.com/metabase/metabase/issues/39744,"[('Type:Tech Debt', 'or Refactoring'), ('.CI & Tests', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2172739986,issue,closed,completed,funnel chart does not work in static viz,"### Describe the bug

When adding this specific funnel chart question to a dashboard and sending a subscription email, there is an error in the subscription.


https://github.com/metabase/metabase/assets/37751258/28a95277-df22-46de-9239-fee79d925953



### To Reproduce

[Simple User Flow Funnel.csv](https://github.com/metabase/metabase/files/14517331/Simple.User.Flow.Funnel.csv)

Create the following question using the above csv data

<img width=""1390"" alt=""Screenshot 2024-03-06 at 5 04 41 PM"" src=""https://github.com/metabase/metabase/assets/37751258/779adb99-00fe-4f08-89b9-8418a4872a7d"">

Visualize as a bar chart, add to a dashboard, send a test subscription email


### Expected behavior

The chart should appear in the email instead of an error

### Logs

[backend] java.lang.ClassCastException: class java.lang.String cannot be cast to class java.lang.Number (java.lang.String and java.lang.Number are in module java.base of loader 'bootstrap')
[backend]       at clojure.lang.Numbers.dec(Numbers.java:147)
[backend]       at metabase.pulse.render.body$eval92227$_AMPERSAND_f__92229$fn__92239.invoke(body.clj:1042)

### Information about your Metabase installation

```JSON
master commit 9413706bd2

{
  ""browser-info"": {
    ""language"": ""en-US"",
    ""platform"": ""MacIntel"",
    ""userAgent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""17.0.6+10"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""17.0.6"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""17.0.6+10"",
    ""os.name"": ""Mac OS X"",
    ""os.version"": ""13.6.2"",
    ""user.language"": ""en"",
    ""user.timezone"": ""America/Los_Angeles""
  },
  ""metabase-info"": {
    ""databases"": [
      ""h2"",
      ""postgres""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""h2"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""H2"",
        ""version"": ""2.1.214 (2022-06-13)""
      },
      ""jdbc-driver"": {
        ""name"": ""H2 JDBC Driver"",
        ""version"": ""2.1.214 (2022-06-13)""
      }
    },
    ""run-mode"": ""dev"",
    ""version"": {
      ""tag"": ""vLOCAL_DEV"",
      ""hash"": ""06d1ba2ae111e66253209c01c244d6379acfc6dcb1911fa9ab6012cec9ce52e5""
    },
    ""settings"": {
      ""report-timezone"": null
    }
  }
}
```


### Severity

Moderately severe, viz type that should work in static viz does not

### Additional context

_No response_",EmmadUsmani,2024-03-07 01:08:41+00:00,['adam-james-v'],2024-03-22 22:37:55+00:00,2024-03-22 21:15:33+00:00,https://github.com/metabase/metabase/issues/39743,"[('Priority:P2', 'Average run of the mill bug'), ('Visualization/Static', 'Subscriptions/pulse generated image'), ('.Team/DashViz', 'Dashboard and Viz team')]",[],
2172700999,issue,closed,completed,[dc.js migration] drills do not open correct card on combined dashcards,"- Combine two cards on a dashcard, try drilling into the added one
- It opens the first card",alxnddr,2024-03-07 00:42:43+00:00,['alxnddr'],2024-03-11 19:46:42+00:00,2024-03-11 19:46:42+00:00,https://github.com/metabase/metabase/issues/39742,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2172644546,issue,closed,completed,[tech debt] Stop using ms/BooleanString and only use ms/BooleanValue,"`ms/BooleanString` will coerce to a string, and we should probably get rid of it and only ever use `ms/BooleanValue` which will always coerce to a boolean

We want the coercion layer to give us values that are helpful, and true is more helpful than ""true"". So we should remove `ms/BooleanString` and calls to parseBoolean
",escherize,2024-03-06 23:54:10+00:00,[],2024-04-22 19:13:31+00:00,2024-04-22 19:13:31+00:00,https://github.com/metabase/metabase/issues/39740,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template'), ('good first issue', 'A starter issue that is good for someone new to the codebase or is a new contributor')]",[],
2172546256,issue,closed,not_planned,Can't connect to a DocumentDB database with SSH,"### Describe the bug

==== PLEASE NOTICE THAT WE DON'T SUPPORT DOCUMENTDB AS IT'S NOT MONGODB ====

unfortunately after many hours I wasn't able to establish a connection. What I tried:
1) connecting directly (can't connect even from within datagrip, most probably an issue on my end, don´t know what's going on)
2) connecting via SSH, works in Studio 3T and Datagrip, but not from within Metabase

### To Reproduce

1) set up a DocumentDB server in AWS
2) set up a server
3) try connecting to DocumentDB via the SSH server

### Expected behavior

It should connect

### Logs

It always returns a timeout via SSH, although in other clients it works fine

### Information about your Metabase installation

```JSON
v48.x
```


### Severity

P2

### Additional context

_No response_",paoliniluis,2024-03-06 22:22:21+00:00,[],2024-06-10 11:52:43+00:00,2024-06-10 11:52:42+00:00,https://github.com/metabase/metabase/issues/39737,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Database/Mongo', None), ('.Backend', '')]","[{'comment_id': 2158140490, 'issue_id': 2172546256, 'author': 'paoliniluis', 'body': 'Closing as you should connect to documentdb via Athena rather than directly (as MongoDB diverged too much and we focus on mongo and not on documentdb)', 'created_at': datetime.datetime(2024, 6, 10, 11, 52, 42, tzinfo=datetime.timezone.utc)}]","paoliniluis (Issue Creator) on (2024-06-10 11:52:42 UTC): Closing as you should connect to documentdb via Athena rather than directly (as MongoDB diverged too much and we focus on mongo and not on documentdb)

"
2172470975,issue,closed,completed,Browse database page refreshes N seconds when a new db is added that makes the page unusable,"### Describe the bug

On the Browse data -> Databases tab, after adding a new db, it would show a popup at the bottom right corner that syncs the tables. When that sync is taking place, it will refresh that tab every N seconds. If you have many dbs, trying to scroll down is not possible. 

### To Reproduce

1. Add new db with many tables that takes the db sync awhile to finish. Sync table popup shows at bottom right corner. 
2. Go to Browse data -> Databases and scroll down to the bottom / next page. There must be many dbs to require scrolling down. Even without scrolling, it blinks as refresh happens. 
3. Scrolling down doesn't work as refresh will take you to the top of the page

### Expected behavior

Not blink or refresh should not take user to the top of page

### Logs

n/a

### Information about your Metabase installation

```JSON
metabase @ master
```


### Severity

low since it only happens during sync and if you have many dbs 

### Additional context

_No response_",maxzheng,2024-03-06 21:34:28+00:00,['rafpaf'],2024-03-14 12:41:49+00:00,2024-03-07 21:42:33+00:00,https://github.com/metabase/metabase/issues/39732,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Organization/Browse Data', '')]",[],
2172462169,issue,closed,completed,Bulk Actions,remove react motion from our bulk actions components,sloansparger,2024-03-06 21:29:53+00:00,['sloansparger'],2024-03-07 15:48:49+00:00,2024-03-07 15:48:49+00:00,https://github.com/metabase/metabase/issues/39730,[],[],
2172343774,issue,closed,completed,Setup max-users for airgapped enteprise tokens,resolved by #39733,escherize,2024-03-06 20:13:08+00:00,['escherize'],2024-03-06 21:40:40+00:00,2024-03-06 21:40:40+00:00,https://github.com/metabase/metabase/issues/39723,[],"[{'comment_id': 1981839661, 'issue_id': 2172343774, 'author': 'escherize', 'body': 'resolved by https://github.com/metabase/metabase/pull/39733', 'created_at': datetime.datetime(2024, 3, 6, 21, 40, 40, tzinfo=datetime.timezone.utc)}]","escherize (Issue Creator) on (2024-03-06 21:40:40 UTC): resolved by https://github.com/metabase/metabase/pull/39733

"
2172332334,issue,open,,Add configuration option for cache strategy: query,,rafpaf,2024-03-06 20:08:12+00:00,[],2024-03-06 20:08:12+00:00,,https://github.com/metabase/metabase/issues/39722,[],[],
2172331924,issue,closed,not_planned,Add configuration option for cache strategy: schedule,,rafpaf,2024-03-06 20:08:02+00:00,[],2024-04-10 20:49:19+00:00,2024-04-10 20:49:19+00:00,https://github.com/metabase/metabase/issues/39721,[],[],
2172232815,issue,closed,completed,Notebook Previews,,npfitz,2024-03-06 19:13:22+00:00,['npfitz'],2024-03-07 16:08:56+00:00,2024-03-07 16:08:56+00:00,https://github.com/metabase/metabase/issues/39715,[],[],
2172230926,issue,closed,completed,[Epic] Remove React-Motion,"Simple Epic to remove the use of `react-motion` in the code base. For our current uses, the functionality in the library can be replicated using CSS animations, and the current latest version of the library will not support React 18 (though the master branch of the Repo will). 

**Implementation Plan**
Migrate uses of React-Motion to CSS based animations. Uses are pretty independent, so we should be able to merge each migration into master as we go


```[tasklist]
### Tasks
- [ ] https://github.com/metabase/metabase/issues/39715
- [ ] https://github.com/metabase/metabase/issues/39730
- [ ] https://github.com/metabase/metabase/issues/39764
- [ ] https://github.com/metabase/metabase/issues/39772
- [ ] https://github.com/metabase/metabase/issues/39775
- [ ] https://github.com/metabase/metabase/issues/39776
```


",npfitz,2024-03-06 19:12:06+00:00,"['npfitz', 'sloansparger']",2024-03-15 20:48:45+00:00,2024-03-15 20:48:44+00:00,https://github.com/metabase/metabase/issues/39714,"[('.Epic', 'Feature Implementation or Project')]",[],
2172177365,issue,closed,completed,[Epic] Air Gapped Enterprise Tokens,"**Links**
- product doc: [Product Doc](https://www.notion.so/metabase/Productize-Air-Gapping-44660f7e5e114411901edeecc72b6828)
- eng doc: [Tech Doc](https://www.notion.so/metabase/Air-Gap-Technical-Design-Doc-c9e321cb04b7407581850da7152c2fc8)
- feature branch: [`airgap-token`](https://github.com/metabase/metabase/pull/39733)

## Implementation Plan

### Milestone 1
- [x] add :max-users and :company to `TokenStatus` schema
- [x] Read and decrypt airgapped token using public key in resources
- [x] read `max-user`
- [x] write function to read `max-user` from the airgap token contents
- [x] Add a check-max-users function to deny user creation when max-users != -1 and (user_count - internal_user) > max-users
- [x] enforce valid-thru time when checking features (this is a good time to double check that it's still valid)
- [x] return the same shape of map as harbormaster for an error to decode, etc.
- [x] setup usable script to generate signed airgap tokens
- [x] ensure existance of public key before trying to decrypt token
- [x] fix tests
--- 
_(milestone 1 is mvp, I think.)_

----

### Feedback from Success Team
- [x] Add diagnostic info about airgap (these are only included when it is enabled): max-user cap, current-user-count, enabled or not, and expiration date.

-----
### Milestone 2
- [x] Gracefully downgrade to OSS-mode when the airgap token is expired
    - [x] should behave as if HarborMaster declined a regular token
- [ ] Banners:
    - [ ] figure out what api we should use to send this over.
    - [x] Add banner to admin section with the `:valid-thru` date.
    - [ ] Add warning banner all over for admins when we are ""getting close"" to `:valid-thru` date.
    - [ ] Add banner when token has expired
- [ ] More lockouts:
    - [x] On startup check if `select count(1) from users > max-user` and then disable the rest (with sorting to not disable admins first). Print a log line, and it’s their admin’s problem to figure out who to remove and who to enable.
    - [ ] Limit number of sessions to `max-users`.

",escherize,2024-03-06 18:37:02+00:00,['escherize'],2024-10-11 20:09:32+00:00,2024-10-11 20:09:31+00:00,https://github.com/metabase/metabase/issues/39711,"[('.Epic', 'Feature Implementation or Project')]","[{'comment_id': 2408059128, 'issue_id': 2172177365, 'author': 'escherize', 'body': 'Closing as this is in effect working. There are some nice to haves that are low priority, but the bulk of the work is done here.', 'created_at': datetime.datetime(2024, 10, 11, 20, 9, 31, tzinfo=datetime.timezone.utc)}]","escherize (Issue Creator) on (2024-10-11 20:09:31 UTC): Closing as this is in effect working. There are some nice to haves that are low priority, but the bulk of the work is done here.

"
2172083169,issue,open,,Inconsistent column name in the generated SQL,"### Describe the bug

When you use query builder and summarize by any column like Payment for example it automatically creates a column with a name like Sum of Payment.
But in the generated SQL it is named just as ""sum"" so the name of the column doesn't match what is set in the query builder
<img width=""1028"" alt=""Captura de ecrã 2024-03-06, às 17 36 31"" src=""https://github.com/metabase/metabase/assets/777800/47d3f810-a66b-4265-86a0-bd9614756b19"">
<img width=""595"" alt=""Captura de ecrã 2024-03-06, às 17 36 48"" src=""https://github.com/metabase/metabase/assets/777800/132deb7d-1837-4e7a-a916-e1407c5f6382"">
<img width=""553"" alt=""Captura de ecrã 2024-03-06, às 17 37 12"" src=""https://github.com/metabase/metabase/assets/777800/598bcf11-365e-495a-b98c-2744b96559a9"">


### To Reproduce

1. Go to the query builder
2. Select Sample Database -> Invoices in the data picker
3. Click on Summarize
4. Add Sum of... for Payment column
5. Hit Preview, you'll see a column Sum of Payment created
6. Open SQL generated, you'll see there `SUM(""PUBLIC"".""INVOICES"".""PAYMENT"") AS ""sum""`


### Expected behavior

_No response_

### Logs

_No response_

### Information about your Metabase installation

```JSON
last version
```


### Severity

annoying

### Additional context

_No response_",mngr,2024-03-06 17:40:42+00:00,[],2025-02-04 20:27:57+00:00,,https://github.com/metabase/metabase/issues/39709,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Querying/Processor', ''), ('.Backend', ''), ('.Team/Querying', '')]",[],
2171932436,issue,closed,completed,CollectionPicker improvements,"```[tasklist]
### TODO
- [ ] https://github.com/metabase/metabase/issues/39965
- [ ] https://github.com/metabase/metabase/issues/39966
```

```[tasklist]
### Maybe
- [ ] Add collection descriptions somewhere
```",luizarakaki,2024-03-06 16:31:33+00:00,[],2024-04-19 21:45:53+00:00,2024-04-19 21:45:53+00:00,https://github.com/metabase/metabase/issues/39702,"[('Organization/', ''), ('.Team/AdminWebapp', 'Admin and Webapp team')]",[],
2171920186,issue,open,,"Add a String Aggregation (Array_Agg, Group_Concat) to GUI Editor","Sometimes, I want to aggregate strings into a single row. In SQL, I would do this with a function like Array_Agg() or Group_Concat(), but most often in Metabase, I prefer to do my groupings with the GUI editor for better drill-down functionality. I'd love to have an Array_Agg style aggregate function to group values into a single line.

Example: I have a table that has one row per customer, per product they have bought, with the associated revenue. I use this to summarize both per-customer revenue and per-product revenue. I'd like to use this table to present one row per-customer that shows a list of their products.

I'd also love to be able to filter within this array (array_contains)--finding the full list of products for any customers who use product X.

Alternative: Write this in the SQL editor or as an object on my DB. I prefer the GUI editor because the drill-down functionality works better, and I'd rather not create more objects for the same data on my DB where possible. 

This may also support this pivot table request: https://github.com/metabase/metabase/issues/18024
",megansmcguire,2024-03-06 16:25:44+00:00,[],2024-07-24 13:48:49+00:00,,https://github.com/metabase/metabase/issues/39701,"[('Type:New Feature', ''), ('Querying/Notebook/Custom Column', '')]","[{'comment_id': 2023246153, 'issue_id': 2171920186, 'author': 'paoliniluis', 'body': 'Interesting... cc @cdeweyx', 'created_at': datetime.datetime(2024, 3, 27, 16, 38, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2087227183, 'issue_id': 2171920186, 'author': 'patster98', 'body': 'Any updates on this matter? Is string_agg() a thing in Metabase?', 'created_at': datetime.datetime(2024, 4, 30, 20, 48, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2180819258, 'issue_id': 2171920186, 'author': 'Firstero', 'body': 'Any updates on this matter? Is string_agg() and array_contains() for drill-down in gui a thing in Metabase', 'created_at': datetime.datetime(2024, 6, 20, 14, 14, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2198765562, 'issue_id': 2171920186, 'author': 'felipe-curebase', 'body': 'Any updates? I also need this functionality very much...', 'created_at': datetime.datetime(2024, 6, 30, 21, 40, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2247997946, 'issue_id': 2171920186, 'author': 'sueny', 'body': 'Did anyone find an alternative?', 'created_at': datetime.datetime(2024, 7, 24, 13, 48, 48, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-27 16:38:28 UTC): Interesting... cc @cdeweyx

patster98 on (2024-04-30 20:48:20 UTC): Any updates on this matter? Is string_agg() a thing in Metabase?

Firstero on (2024-06-20 14:14:54 UTC): Any updates on this matter? Is string_agg() and array_contains() for drill-down in gui a thing in Metabase

felipe-curebase on (2024-06-30 21:40:26 UTC): Any updates? I also need this functionality very much...

sueny on (2024-07-24 13:48:48 UTC): Did anyone find an alternative?

"
2171919865,issue,closed,completed,"Foreign keys semantic type should be ""type/FK"", but it is ""type/Category"" if it has low cardinality","### Describe the bug

A column with a foreign key constraint should have a semantic type of ""type/FK"", but we give it ""type/Category"" if it has low enough cardinality.

### To Reproduce

We have a test that accidentally reproduces this:
https://github.com/metabase/metabase/blob/23f11bd53a84e3d9f29e498e0215ebcbe26f66ed/test/metabase/sync/analyze_test.clj#L58

`semantic_type` should be `:type/FK` in this case.

### Expected behavior

foreign key columns should always have ""type/FK"" semantic type

### Logs

_No response_

### Information about your Metabase installation

```JSON
master
```


### Severity

low, never been reported as far as I know

### Additional context

_No response_",calherries,2024-03-06 16:25:35+00:00,['calherries'],2024-07-18 13:35:29+00:00,2024-05-14 13:49:03+00:00,https://github.com/metabase/metabase/issues/39700,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Administration/Metadata & Sync', ''), ('.Team/Workflows', 'aka BEC')]","[{'comment_id': 2110296329, 'issue_id': 2171919865, 'author': 'calherries', 'body': 'This was actually fixed by https://github.com/metabase/metabase/pull/39679\r\n\r\nSee the updated test\r\nhttps://github.com/metabase/metabase/blob/e6f47956c5a22c8052ae2db201f087cd6dcc4eac/test/metabase/sync/analyze_test.clj#L60', 'created_at': datetime.datetime(2024, 5, 14, 13, 49, tzinfo=datetime.timezone.utc)}]","calherries (Issue Creator) on (2024-05-14 13:49:00 UTC): This was actually fixed by https://github.com/metabase/metabase/pull/39679

See the updated test
https://github.com/metabase/metabase/blob/e6f47956c5a22c8052ae2db201f087cd6dcc4eac/test/metabase/sync/analyze_test.clj#L60

"
2171863450,issue,closed,completed,Cannot see Models as the data source in the data selector when opening a model,"### Describe the bug

When you open a saved model or a question/model based on a saved model in a notebook mode, you currently cannot see the underlying source model in the data picker. This renders the data picker nearly unusable for models.

### To Reproduce

The simplest possible scenario:
1. Open any saved model
2. Switch to the notebook mode
3. Click on the model name in the ""data"" step (in our case it is the ""Accounts Model"")
![image](https://github.com/metabase/metabase/assets/31325167/25ef72c9-f90e-42b3-9749-1ce96ae2e5ac)
4. It opens ""Saved Questions"" and it doesn't find the model there, so nothing is highlighted
![image](https://github.com/metabase/metabase/assets/31325167/a8df4171-957a-4944-a4ac-1a2de9aaa912)


### Expected behavior

Clicking on an entity based on a model should show Models data selector with the resulting model being highlighted.
![image](https://github.com/metabase/metabase/assets/31325167/ab73f361-615d-42bf-bc2c-93980f88967e)

### Logs

_No response_

### Information about your Metabase installation

local dev, master, 4a78412, H2, Sample Database

### Severity

P2

### Additional context

This behavior existed since forever - basically from the moment we introduced models. ",nemanjaglumac,2024-03-06 16:03:55+00:00,['nemanjaglumac'],2024-03-07 20:37:19+00:00,2024-03-07 18:55:39+00:00,https://github.com/metabase/metabase/issues/39699,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Frontend', ''), ('Querying/Notebook', 'Items specific to the Custom/Notebook query builder'), ('Querying/Models', 'aka Datasets'), ('.Team/Querying', '')]","[{'comment_id': 1983589442, 'issue_id': 2171863450, 'author': 'nemanjaglumac', 'body': 'Fixed in #39686, but the issue stays open until we merge the feature branch to `master`.', 'created_at': datetime.datetime(2024, 3, 7, 14, 12, 23, tzinfo=datetime.timezone.utc)}]","nemanjaglumac (Issue Creator) on (2024-03-07 14:12:23 UTC): Fixed in #39686, but the issue stays open until we merge the feature branch to `master`.

"
2171747547,issue,open,,Make tabs sticky,"**Is your feature request related to a problem? Please describe.**
When you scroll to the bottom of a big dashboard you don't see the tabs anymore, if we make the tabs sticky you should be able to switch tabs while scrolling

**Describe the solution you'd like**
Make the dashboard tabs sticky

**Describe alternatives you've considered**
None

**How important is this feature to you?**
Requested by a metabase expert

**Additional context**
NA
",paoliniluis,2024-03-06 15:13:50+00:00,[],2024-03-06 15:13:51+00:00,,https://github.com/metabase/metabase/issues/39697,"[('Reporting/Dashboards', ''), ('Type:New Feature', ''), ('.Frontend', '')]",[],
2171532588,issue,open,,Download all dashboard questions at once,"**Is your feature request related to a problem? Please describe.**
Currently you can download individually each question within a dashboard or export the entire dashboard as a pdf. I would like the option to download all questions in a specific format csv, xlsx, json or pdf all at once

**Describe the solution you'd like**
Option to export all questions in a specific format:

<img width=""1508"" alt=""image"" src=""https://github.com/metabase/metabase/assets/110378427/f521d943-722c-4771-9331-2fde87211f89"">

**Describe alternatives you've considered**
Download results 1 by 1

**Additional context**
Requested by a customer that would like to have all questions as a png",Tony-metabase,2024-03-06 13:35:51+00:00,[],2024-03-06 13:35:52+00:00,,https://github.com/metabase/metabase/issues/39691,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Reporting/Dashboards', ''), ('Type:New Feature', ''), ('Visualization/Download', '')]",[],
2171373037,issue,open,,"If a foreign key constraint is dropped, sync ignores it","### Describe the bug

Currently if a foreign key relationship is dropped in the customer database, we don't pick it up on syncs after the initial sync. 

The original foreign key relationship persists.

### To Reproduce

Repro test:
```clojure
(deftest drop-fk-relationships-test
  (testing ""Check that Foreign Key relationships can be dropped""
    (let [; dataset tables need at least one field other than the ID column, so just add a dummy field
          name-field-def {:field-name ""dummy"", :base-type :type/Text}]
      (mt/with-temp-test-data
        [[""continent_1"" [name-field-def]
          []]
         [""continent_2"" [name-field-def]
          []]
         [""country"" [name-field-def {:field-name ""continent_id"", :base-type :type/Integer}]
          []]]
        (let [db            (mt/db)
              get-fk-target #(t2/select-one-fn :fk_target_field_id :model/Field (mt/id :country :continent_id))]
          ;; 1. add FK relationship in the database targeting continent_1
          (t2/query-one db ""ALTER TABLE country ADD CONSTRAINT country_continent_id_fkey FOREIGN KEY (continent_id) REFERENCES continent_1(id);"")
          (sync/sync-database! db {:scan :schema})
          (testing ""initially country's continent_id is targeting continent_1""
            (is (= (mt/id :continent_1 :id)
                   (get-fk-target))))
          ;; 2. drop the FK relationship in the database with SQL
          (t2/query-one db ""ALTER TABLE country DROP CONSTRAINT country_continent_id_fkey;"")
          (sync/sync-database! db {:scan :schema})
          ;; FIXME: The following test fails. The FK relationship is still there in the Metabase database.
          (testing ""after dropping the FK relationship, country's continent_id is targeting nothing""
              (is (nil? (get-fk-target)))))))))
```

This test fails where it should succeed:
```clojure
FAIL in (update-fk-relationships-test) (NO_SOURCE_FILE:8538)
Check that Foreign Key relationships can be updated using dataset-definition dataset
 after dropping the FK relationship, country's continent_id is targeting nothing
expected: (nil? (get-fk-target))
  actual: (not (nil? 7))
```

### Expected behavior

`fk_target_field_id` should be `nil` if the FK field is dropped

### Logs

_No response_

### Information about your Metabase installation

```JSON
master
```


### Severity

low, this issue has never been raised by a customer

### Additional context

_No response_",calherries,2024-03-06 12:18:07+00:00,[],2025-02-04 20:24:36+00:00,,https://github.com/metabase/metabase/issues/39687,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Administration/Metadata & Sync', ''), ('.Backend', ''), ('.Team/Querying', '')]","[{'comment_id': 1981270350, 'issue_id': 2171373037, 'author': 'calherries', 'body': 'Raising this to P2 because it could be behind some gnarly issues, like https://metaboat.slack.com/archives/C05MPF0TM3L/p1709188348023799\r\n\r\nNeeds more investigating though.', 'created_at': datetime.datetime(2024, 3, 6, 16, 29, 24, tzinfo=datetime.timezone.utc)}]","calherries (Issue Creator) on (2024-03-06 16:29:24 UTC): Raising this to P2 because it could be behind some gnarly issues, like https://metaboat.slack.com/archives/C05MPF0TM3L/p1709188348023799

Needs more investigating though.

"
2171362666,issue,closed,completed,"If a foreign key target changes, sync ignores the change","### Describe the bug

Currently if a foreign key relationship changes in the customer database, we don't pick it up on syncs after the initial sync. 

### To Reproduce

Repro test:
```clojure
(deftest update-fk-relationships-test
  (testing ""Check that Foreign Key relationships can be updated""
    (let [; dataset tables need at least one field other than the ID column, so just add a dummy field
          name-field-def {:field-name ""dummy"", :base-type :type/Text}]
      (mt/with-temp-test-data
        [[""continent_1"" [name-field-def]
          []]
         [""continent_2"" [name-field-def]
          []]
         [""country"" [name-field-def {:field-name ""continent_id"", :base-type :type/Integer}]
          []]]
        (let [db            (mt/db)
              get-fk-target #(t2/select-one-fn :fk_target_field_id :model/Field (mt/id :country :continent_id))]
          ;; 1. add FK relationship in the database targeting continent_1
          (t2/query-one db ""ALTER TABLE country ADD CONSTRAINT country_continent_id_fkey FOREIGN KEY (continent_id) REFERENCES continent_1(id);"")
          (sync/sync-database! db {:scan :schema})
          (testing ""initially country's continent_id is targeting continent_1""
            (is (= (mt/id :continent_1 :id)
                   (get-fk-target))))
          ;; 2. drop the FK relationship in the database with SQL
          (t2/query-one db ""ALTER TABLE country DROP CONSTRAINT country_continent_id_fkey;"")
          ;; 3. add back the FK relationship but targeting continent_2
          (t2/query-one db ""ALTER TABLE country ADD CONSTRAINT country_continent_id_fkey FOREIGN KEY (continent_id) REFERENCES continent_2(id);"")
          (sync/sync-database! db {:scan :schema})
          (testing ""initially country's continent_id is targeting continent_2""
            (is (= (mt/id :continent_2 :id)
                   (get-fk-target)))))))))
```

This fails with 
```
FAIL in (update-fk-relationships-test) (NO_SOURCE_FILE:8395)
Check that Foreign Key relationships can be updated using dataset-definition dataset
 initially country's continent_id is targeting continent_2
expected: 7
  actual: 8
    diff: - 7
          + 8
```

### Expected behavior

The fk_target_field_id should change and the above test should pass

### Logs

_No response_

### Information about your Metabase installation

```JSON
master
```


### Severity

low, no issue has been logged yet

### Additional context

_No response_",calherries,2024-03-06 12:12:18+00:00,['calherries'],2024-07-18 13:35:31+00:00,2024-03-19 16:59:31+00:00,https://github.com/metabase/metabase/issues/39685,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Team/Workflows', 'aka BEC')]","[{'comment_id': 1981243835, 'issue_id': 2171362666, 'author': 'paoliniluis', 'body': 'most definitely the cause of https://github.com/metabase/metabase/issues/39618 @piranha', 'created_at': datetime.datetime(2024, 3, 6, 16, 16, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1981660071, 'issue_id': 2171362666, 'author': 'piranha', 'body': ""Ah, could be that, if it points other way, right? But chain filters don't respect not-`active` fields too. :)"", 'created_at': datetime.datetime(2024, 3, 6, 19, 44, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1990775605, 'issue_id': 2171362666, 'author': 'calherries', 'body': 'reopening because https://github.com/metabase/metabase/pull/39924 reverts the fix to avoid flakes', 'created_at': datetime.datetime(2024, 3, 12, 6, 13, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 2007690193, 'issue_id': 2171362666, 'author': 'calherries', 'body': 'resolved by https://github.com/metabase/metabase/pull/40233', 'created_at': datetime.datetime(2024, 3, 19, 16, 59, 26, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-06 16:16:45 UTC): most definitely the cause of https://github.com/metabase/metabase/issues/39618 @piranha

piranha on (2024-03-06 19:44:08 UTC): Ah, could be that, if it points other way, right? But chain filters don't respect not-`active` fields too. :)

calherries (Issue Creator) on (2024-03-12 06:13:24 UTC): reopening because https://github.com/metabase/metabase/pull/39924 reverts the fix to avoid flakes

calherries (Issue Creator) on (2024-03-19 16:59:26 UTC): resolved by https://github.com/metabase/metabase/pull/40233

"
2171024042,issue,open,,Cannot reference custom column that is called the same as source column in a custom expression,"### Describe the bug

https://github.com/metabase/metabase/assets/6830683/3fb293e4-59ba-4e42-8a46-a656ea235b86

### To Reproduce

1. Create a question based on People table
2. Add a custom column called `Email` with the following custom expression: `concat([Email], ""xyz"")`
3. Add a custom column and try to reference the previously created custom column in the custom expression

### Expected behavior

The suggestions dropdown contains both source ""Email"" column and custom ""Email"" column

### Information about your Metabase installation

master, d9507f2af8741a8389c78324b5871a8a6266c2a2

### Severity

P2

### Additional context

Found during triage on #39508",kamilmielnik,2024-03-06 09:21:40+00:00,[],2025-02-04 20:28:57+00:00,,https://github.com/metabase/metabase/issues/39677,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Backend', ''), ('Querying/Notebook/Custom Expression', ''), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib'), ('.Wanted: MLv2', 'Issues that will be fixed (or easier to fix, or possible to fix) when we have MLv2'), ('.Team/Querying', '')]","[{'comment_id': 1980716594, 'issue_id': 2171024042, 'author': 'kamilmielnik', 'body': ""The fix could be in FE (improve [`suggest`](https://github.com/metabase/metabase/blob/2aa3cec610588238132afbc789da0845c7c2ec5d/frontend/src/metabase-lib/expressions/suggest.ts#L55)) but I think it's better to handle it in BE - we could automatically rename custom columns that are named the same as source columns (just like we do when a custom column has the same name as another custom column). \r\nReassigning to QP."", 'created_at': datetime.datetime(2024, 3, 6, 12, 0, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1981153653, 'issue_id': 2171024042, 'author': 'bshepherdson', 'body': 'Prior to the recent #39255 trying to do this was: (1) a silent CLJS error in the QB which broke the UI; and (2) if you bypassed the error or had an old query, the QP would generate bad SQL and error out in the data warehouse.\r\n\r\nNow the bad SQL is fixed and the `throw` removed, so the query works, but this new field is shadowing the old one.\r\n\r\nIt\'s ambiguous what the Right Thing is. I can see an argument for ""I want my custom column to replace the original since it cleans up the data"" and for ""I didn\'t realize I was using a duplicated name and now I\'m confused about where the original column went"". I suppose keeping the columns separate is the way to go, since it\'s more flexible. If you really want to replace the original column seamlessly then you can do it with a model.', 'created_at': datetime.datetime(2024, 3, 6, 15, 36, 6, tzinfo=datetime.timezone.utc)}]","kamilmielnik (Issue Creator) on (2024-03-06 12:00:51 UTC): The fix could be in FE (improve [`suggest`](https://github.com/metabase/metabase/blob/2aa3cec610588238132afbc789da0845c7c2ec5d/frontend/src/metabase-lib/expressions/suggest.ts#L55)) but I think it's better to handle it in BE - we could automatically rename custom columns that are named the same as source columns (just like we do when a custom column has the same name as another custom column). 
Reassigning to QP.

bshepherdson on (2024-03-06 15:36:06 UTC): Prior to the recent #39255 trying to do this was: (1) a silent CLJS error in the QB which broke the UI; and (2) if you bypassed the error or had an old query, the QP would generate bad SQL and error out in the data warehouse.

Now the bad SQL is fixed and the `throw` removed, so the query works, but this new field is shadowing the old one.

It's ambiguous what the Right Thing is. I can see an argument for ""I want my custom column to replace the original since it cleans up the data"" and for ""I didn't realize I was using a duplicated name and now I'm confused about where the original column went"". I suppose keeping the columns separate is the way to go, since it's more flexible. If you really want to replace the original column seamlessly then you can do it with a model.

"
2170398994,issue,open,,Clean up `metabase.api.dashboard`,"The Dashboard API namespace is becoming somewhat unruly and could be made more readable and cleaner by selectively splitting functions into their own namespaces.

This effort should _not_ alter behaviour.",adam-james-v,2024-03-06 00:29:02+00:00,[],2024-05-21 03:28:28+00:00,,https://github.com/metabase/metabase/issues/39668,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Team/DashViz', 'Dashboard and Viz team')]",[],
2170323119,issue,closed,completed,[dc.js migration] stacking order is reversed,"<img width=""794"" alt=""Screenshot 2024-03-05 at 3 24 50 PM"" src=""https://github.com/metabase/metabase/assets/37751258/30d44ece-4543-4e25-87b2-d513c809b45f"">

It should follow the order in the side bar from top to bottom (e.g. doohickey on top)",EmmadUsmani,2024-03-05 23:25:52+00:00,['alxnddr'],2024-03-15 16:31:39+00:00,2024-03-15 16:31:39+00:00,https://github.com/metabase/metabase/issues/39667,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 2000027997, 'issue_id': 2170323119, 'author': 'alxnddr', 'body': 'Closed by https://github.com/metabase/metabase/pull/40073 needs a follow up https://github.com/metabase/metabase/issues/40177', 'created_at': datetime.datetime(2024, 3, 15, 16, 31, 39, tzinfo=datetime.timezone.utc)}]","alxnddr (Assginee) on (2024-03-15 16:31:39 UTC): Closed by https://github.com/metabase/metabase/pull/40073 needs a follow up https://github.com/metabase/metabase/issues/40177

"
2170264811,issue,open,,Reduce or Eliminate long-test warnings in `metabase.pulse.pulse-integration-test`,"Our backend test reports long-tests, and it's nice to try keep test run speed down as much as reasonable. This issue in particular is calling out the pulse-integration-test namespace which has at least one long-test warning, which might be possible to eliminate (or at least speed up somehow).

At the same time, it may be worth seeing if any tests in this namespace can be run in parallel. ",adam-james-v,2024-03-05 22:42:57+00:00,['adam-james-v'],2024-03-05 22:47:49+00:00,,https://github.com/metabase/metabase/issues/39665,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Team/DashViz', 'Dashboard and Viz team')]",[],
2170161173,issue,open,,[dc.js migration] add in-app viz to loki tests,"There are some issues like https://github.com/metabase/metabase/issues/39553 that are created by PRs that pass the static viz loki tests but break something in app (usually due to difference in settings computation).

Adding the in-app viz component to our Loki tests will help prevent these regressions from occurring.

",EmmadUsmani,2024-03-05 21:19:25+00:00,[],2024-03-08 22:34:15+00:00,,https://github.com/metabase/metabase/issues/39660,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.')]",[],
2170135527,issue,closed,completed,Implicit joined fields are not available as breakouts in Models,"### Describe the bug

Implicit joined fields are not available as breakouts in Models
[Slack thread](https://metaboat.slack.com/archives/C04DN5VRQM6/p1709660912019889)


### To Reproduce

1. New Model > Sample database > Orders
2. Implicit joined fields are available for filters and aggregations, but not for breakouts

[Stats reproduction](https://stats.metabase.com/model/4520-orders-model/notebook)

Filter:
![image](https://github.com/metabase/metabase/assets/32561114/df607c7a-dc15-4878-a933-8ef0248bc865)

Breakout:
![image](https://github.com/metabase/metabase/assets/32561114/f7b83b61-e2d6-4d16-a73a-4f8e00e59f3f)


### Expected behavior

Implicit joined field are available for breakouts

### Logs

_No response_

### Information about your Metabase installation

```JSON
Master
```


### Severity

P1

### Additional context

_No response_",luizarakaki,2024-03-05 21:00:08+00:00,['bshepherdson'],2024-08-28 02:12:21+00:00,2024-03-12 18:09:56+00:00,https://github.com/metabase/metabase/issues/39657,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib'), ('.Wanted: MLv2', 'Issues that will be fixed (or easier to fix, or possible to fix) when we have MLv2'), ('.Team/Querying', '')]","[{'comment_id': 1983708111, 'issue_id': 2170135527, 'author': 'bshepherdson', 'body': ""Some context:\r\n- There are options for controlling what set of columns to show in various contexts.\r\n- One of these is `:include-implicitly-joinable-for-source-card?`, which does what it says on the tin.\r\n- That option defaults to `true` but is set to `false` for:\r\n    - `breakoutable-columns`\r\n    - suggesting join conditions\r\n    - `orderable-columns`\r\n\r\nThat last actually suggests the same thing applies to order-by as well. Checking quickly reveals confirms this guess. Implicit joins are allowed for filters and aggregations, not for order-by or breakouts.\r\n\r\nI think this bug arises from conflating plain source cards with models. We don't want to follow implicit joins on source cards, but we do on models, and this option is not specific enough.\r\n\r\nOn `suggested-join-conditions`, we don't want to include any implicitly joined columns at all. That code also sets `:include-implicitly-joinable? false` which actually makes `:include-implicitly-joinable-for-source-card?` redundant.\r\n\r\nTo summarize, here's the current state of where implicit joins are allowed and where they're not:\r\n\r\n| Context | Vanilla `source-card` | Model |\r\n| :-- | :-- | :-- |\r\n| Suggested join conditions | :x: | :x: |\r\n| Filters | :heavy_check_mark: | :heavy_check_mark: |\r\n| Aggregations | :heavy_check_mark: | :heavy_check_mark: |\r\n| Custom columns | :heavy_check_mark: | :heavy_check_mark: |\r\n| Breakouts | :x: | :x: |\r\n| Orders | :x: | :x: |\r\n\r\n@luizarakaki can you give me the same table but showing what we want instead of what we have now? I want to confirm the intended behavior all around."", 'created_at': datetime.datetime(2024, 3, 7, 15, 6, 36, tzinfo=datetime.timezone.utc)}]","bshepherdson (Assginee) on (2024-03-07 15:06:36 UTC): Some context:
- There are options for controlling what set of columns to show in various contexts.
- One of these is `:include-implicitly-joinable-for-source-card?`, which does what it says on the tin.
- That option defaults to `true` but is set to `false` for:
    - `breakoutable-columns`
    - suggesting join conditions
    - `orderable-columns`

That last actually suggests the same thing applies to order-by as well. Checking quickly reveals confirms this guess. Implicit joins are allowed for filters and aggregations, not for order-by or breakouts.

I think this bug arises from conflating plain source cards with models. We don't want to follow implicit joins on source cards, but we do on models, and this option is not specific enough.

On `suggested-join-conditions`, we don't want to include any implicitly joined columns at all. That code also sets `:include-implicitly-joinable? false` which actually makes `:include-implicitly-joinable-for-source-card?` redundant.

To summarize, here's the current state of where implicit joins are allowed and where they're not:

| Context | Vanilla `source-card` | Model |
| :-- | :-- | :-- |
| Suggested join conditions | :x: | :x: |
| Filters | :heavy_check_mark: | :heavy_check_mark: |
| Aggregations | :heavy_check_mark: | :heavy_check_mark: |
| Custom columns | :heavy_check_mark: | :heavy_check_mark: |
| Breakouts | :x: | :x: |
| Orders | :x: | :x: |

@luizarakaki can you give me the same table but showing what we want instead of what we have now? I want to confirm the intended behavior all around.

"
2170117069,issue,closed,completed,Chart Settings - `ChartSettingTableFormatting`,,npfitz,2024-03-05 20:46:08+00:00,[],2024-03-08 04:39:35+00:00,2024-03-08 04:39:35+00:00,https://github.com/metabase/metabase/issues/39655,[],[],
2170100160,issue,closed,completed,[Epic] Productize Cloud migrations,"[Product doc](https://www.notion.so/metabase/Productize-Cloud-migration-9ac517a86a5d4312ae4f0a37c9625e67?d=fb68e9f5a88f401fbeb8d6e41b4dc7c5)

[Tech spec](https://www.notion.so/metabase/Tech-Productize-Cloud-migration-030865067e64417a96218588e6f91a72)

```[tasklist]
### Tasks
- [ ] metabase/infra-frontend#954
- [ ] metabase/infra-frontend#956
- [ ] https://github.com/metabase/harbormaster/pull/4865
- [ ] https://github.com/metabase/metabase/pull/41317
- [ ] https://github.com/metabase/metabase/issues/41474
```
",luizarakaki,2024-03-05 20:34:15+00:00,['sloansparger'],2024-05-16 23:06:30+00:00,2024-05-16 23:06:30+00:00,https://github.com/metabase/metabase/issues/39654,"[('First Experience/Setup', ''), ('.Epic', 'Feature Implementation or Project'), ('.Team/AdminWebapp', 'Admin and Webapp team')]",[],
2170028770,issue,closed,completed,[dc.js migration] error when switching between stacked and un-stacked viz type,"https://github.com/metabase/metabase/assets/37751258/513d583b-8a14-4893-9787-17f6e53de716

",EmmadUsmani,2024-03-05 19:51:36+00:00,['alxnddr'],2024-03-14 19:31:03+00:00,2024-03-14 19:31:03+00:00,https://github.com/metabase/metabase/issues/39649,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2169278444,issue,closed,completed,Can't enlarge preview section while creating a model,"### Describe the bug

This handle is not draggable
<img width=""1019"" alt=""Captura de ecrã 2024-03-05, às 10 50 45"" src=""https://github.com/metabase/metabase/assets/777800/c57ecb94-2285-455c-88f4-817d70809b90"">


### To Reproduce

1. Click on + New model
2. Click on Use the notebook editor
3. Pick whatever data or build any query or just do nothing
4. In the bottom there is a preview section which has a handle implying you can drag it to enlarge this section, but this doesn't actually work


### Expected behavior

You should be able to adjust the height of the section by dragging the handle

### Logs

_No response_

### Information about your Metabase installation

```JSON
last version
```


### Severity

Annoying

### Additional context

_No response_",mngr,2024-03-05 13:46:19+00:00,['nemanjaglumac'],2024-03-15 14:42:38+00:00,2024-03-15 14:14:42+00:00,https://github.com/metabase/metabase/issues/39628,"[('Type:Bug', 'Product defects'), ('.Frontend', ''), ('.Team/Querying', '')]","[{'comment_id': 1999630311, 'issue_id': 2169278444, 'author': 'nemanjaglumac', 'body': 'The same underlying mechanism/cause as in #33982.', 'created_at': datetime.datetime(2024, 3, 15, 13, 8, 30, tzinfo=datetime.timezone.utc)}]","nemanjaglumac (Assginee) on (2024-03-15 13:08:30 UTC): The same underlying mechanism/cause as in #33982.

"
2169257216,issue,closed,completed,Add timestamp information to filter widget when filtering with Timestamp in SQL queries and dashboards,"**Is your feature request related to a problem? Please describe.**

If you do a SQL question and use the ""Date"" or ""Field Filter"" Filter type and add time information to your filter value, you won't get the timestamp in the filter display, and it can confuse users

See the following images. I am filtering with a timestamp
![Screenshot 2024-03-05 at 10 32 24 AM](https://github.com/metabase/metabase/assets/132273646/48988bd0-4075-42aa-ac8e-70fa9e7e94ef)

And in the filter display, there is no timestamp information
![Screenshot 2024-03-05 at 10 30 36 AM](https://github.com/metabase/metabase/assets/132273646/09581b4d-3be2-40c6-863d-062f36675a7e)


**Describe the solution you'd like**
It should be like GUI query filters:
<img width=""293"" alt=""Screenshot 2024-03-05 at 10 31 45 AM"" src=""https://github.com/metabase/metabase/assets/132273646/82d9267c-99b4-4943-a64c-b8703e5d53fa"">

Also, dashboard filters should have timestamp information as well.

**Describe alternatives you've considered**
N/A

**How important is this feature to you?**
Important as it can mislead users

**Additional context**
N/A
",ignacio-mb,2024-03-05 13:36:15+00:00,['ranquild'],2024-10-24 18:30:18+00:00,2024-10-24 17:11:06+00:00,https://github.com/metabase/metabase/issues/39627,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Correctness', ''), ('Querying/Parameters & Variables', 'Filter widgets, field filters, variables etc.'), ('.Frontend', ''), ('.Team/Querying', '')]","[{'comment_id': 1978817027, 'issue_id': 2169257216, 'author': 'ignacio-mb', 'body': 'Changing to Bug and assigning priority as the filter is not showing the right information.', 'created_at': datetime.datetime(2024, 3, 5, 13, 49, 55, tzinfo=datetime.timezone.utc)}]","ignacio-mb (Issue Creator) on (2024-03-05 13:49:55 UTC): Changing to Bug and assigning priority as the filter is not showing the right information.

"
2169118551,issue,closed,completed,Whitespace symbol breaks suggestions,"### Describe the bug

If the column name contains whitespace symbol, when I type it in the text field, the column is hidden from the suggestions
<img width=""371"" alt=""Captura de ecrã 2024-03-05, às 12 31 38"" src=""https://github.com/metabase/metabase/assets/777800/d8a4aa0c-f9e7-4d37-bed6-69168f5ed2e0"">
<img width=""481"" alt=""Captura de ecrã 2024-03-05, às 12 31 46"" src=""https://github.com/metabase/metabase/assets/777800/4dcc1e9d-f282-400d-a245-67e830f788a7"">


### To Reproduce

1. Start new question
2. Select Sample Database -> Accounts in the data picker
3. Click on Add filters
4. Start typing ""First"" -> you'll see the field First Name in the suggestions
5. Type ""First "" or ""First Na"" -> First Name is not shown in the suggestions


### Expected behavior

_No response_

### Logs

_No response_

### Information about your Metabase installation

```JSON
Last version
```


### Severity

Annoying

### Additional context

_No response_",mngr,2024-03-05 12:39:08+00:00,[],2024-03-28 10:02:54+00:00,2024-03-13 13:37:00+00:00,https://github.com/metabase/metabase/issues/39622,"[('Type:Bug', 'Product defects'), ('.Frontend', ''), ('.Needs Triage', ''), ('.Team/Querying', '')]",[],
2168983441,issue,open,,Optimize model inclusion on MYSQL,"### Describe the bug

`select mm.* from {{#123-mymode}} as mm
`
translate into 

`select mm.* from (select * from mycachedb.mymodel) as mm 
`
instead of 

`select mm.* from mycachedb.mymodel as mm 
`
There is a huge drop in performance with this. (x2 to x10) on heavy queries. 

### To Reproduce

Run above queries.

### Expected behavior

This should be rewriten this way in mysql

### Logs

_No response_

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""fr-FR"",
    ""platform"": ""Linux x86_64"",
    ""userAgent"": ""Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.21+9"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.21"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.21+9"",
    ""os.name"": ""Linux"",
    ""os.version"": ""4.15.18-2-pve"",
    ""user.language"": ""en"",
    ""user.timezone"": ""GMT""
  },
  ""metabase-info"": {
    ""databases"": [
      ""mysql""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""postgres"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""PostgreSQL"",
        ""version"": ""14.2""
      },
      ""jdbc-driver"": {
        ""name"": ""PostgreSQL JDBC Driver"",
        ""version"": ""42.5.4""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-01-16"",
      ""tag"": ""v0.47.12"",
      ""branch"": ""?"",
      ""hash"": ""bddbc8f""
    },
    ""settings"": {
      ""report-timezone"": null
    }
  }
}
```


### Severity

annoying

### Additional context

_No response_",prigal,2024-03-05 11:41:14+00:00,[],2025-02-04 20:28:33+00:00,,https://github.com/metabase/metabase/issues/39621,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Performance', ''), ('Querying/Processor', ''), ('Querying/Native', 'The SQL/native query editor'), ('.Backend', ''), ('.Team/Querying', '')]",[],
2168941444,issue,closed,completed,Update the `Still Waiting` copy on dashboard cards,As part of the epic https://github.com/metabase/metabase/issues/39503 we want to show more context when dashboard cards are slow-loading.,romeovs,2024-03-05 11:17:38+00:00,['romeovs'],2024-03-05 17:29:47+00:00,2024-03-05 17:29:47+00:00,https://github.com/metabase/metabase/issues/39620,[],[],
2168784991,issue,closed,completed,Chain filters do not respect inactive fields,"There is a bug in `src/metabase/models/params/chain_filter.clj`  in the definition for `database-fk-relationships*`:  `JOIN` or `WHERE` clause that do not have any conditions to get `metabase_field.active = true` and so it is returning fk relationships for fields that are inactive and breaking things downstream.

[thread](https://metaboat.slack.com/archives/C05MPF0TM3L/p1709188348023799)",piranha,2024-03-05 10:00:36+00:00,['piranha'],2024-03-08 13:42:54+00:00,2024-03-08 12:39:28+00:00,https://github.com/metabase/metabase/issues/39618,"[('Type:Bug', 'Product defects'), ('.Team/Workflows', 'aka BEC')]",[],
2168638733,issue,closed,not_planned,"If `Doing science` is running for over 4 seconds seconds, display with a more discrete message, i.e. `Waiting for database...`","When queries are long-running, update the loading message after a timeout.",romeovs,2024-03-05 08:48:14+00:00,['romeovs'],2024-03-14 15:32:31+00:00,2024-03-14 15:30:44+00:00,https://github.com/metabase/metabase/issues/39615,[],[],
2168071214,issue,closed,completed,[dc.js migration] bar series order is reversed in some cases,"question/8222
https://metaboat.slack.com/archives/C06G94JTWBS/p1706199766196499

Probably we need to sort ordinal x-axis alphabetically",EmmadUsmani,2024-03-05 01:03:10+00:00,['JesseSDevaney'],2024-03-18 19:54:47+00:00,2024-03-18 19:54:46+00:00,https://github.com/metabase/metabase/issues/39611,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 2004807292, 'issue_id': 2168071214, 'author': 'JesseSDevaney', 'body': 'Could not reproduce', 'created_at': datetime.datetime(2024, 3, 18, 19, 54, 47, tzinfo=datetime.timezone.utc)}]","JesseSDevaney (Assginee) on (2024-03-18 19:54:47 UTC): Could not reproduce

"
2168066842,issue,closed,completed,[dc.js migration] combined question dashcards do not render some series,"dashboard/2079
https://metaboat.slack.com/archives/C06G94JTWBS/p1706199286249839

dashboard/545
https://metaboat.slack.com/archives/C06G94JTWBS/p1706200437977109

dashboard/2219
https://metaboat.slack.com/archives/C06G94JTWBS/p1706201014091099",EmmadUsmani,2024-03-05 00:58:08+00:00,['alxnddr'],2024-03-11 19:46:46+00:00,2024-03-11 19:46:46+00:00,https://github.com/metabase/metabase/issues/39610,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2168060392,issue,closed,completed,[dc.js migration] chart errors when number of insight objects does not match number of series,"question/5331
https://metaboat.slack.com/archives/C06G94JTWBS/p1706198465633859

<img width=""684"" alt=""Screenshot 2024-03-04 at 4 49 17 PM"" src=""https://github.com/metabase/metabase/assets/37751258/7e90240b-7494-44db-909f-c1167718b7bd"">

question/9318
https://metaboat.slack.com/archives/C06G94JTWBS/p1706199292996149
",EmmadUsmani,2024-03-05 00:49:43+00:00,['EmmadUsmani'],2024-03-14 20:16:11+00:00,2024-03-14 20:16:11+00:00,https://github.com/metabase/metabase/issues/39608,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2168058124,issue,closed,completed,[dc.js migration] lack of padding between legend and dashcard title,"dashboard/363
https://metaboat.slack.com/archives/C06G94JTWBS/p1706198133328779

<img width=""309"" alt=""Screenshot 2024-03-04 at 4 46 01 PM"" src=""https://github.com/metabase/metabase/assets/37751258/c5a6eda0-298f-4578-b3b2-e92181c5da3f"">
",EmmadUsmani,2024-03-05 00:46:53+00:00,['alxnddr'],2024-03-08 20:24:26+00:00,2024-03-08 20:24:26+00:00,https://github.com/metabase/metabase/issues/39607,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2168056713,issue,closed,completed,[dc.js migration] should not show `(empty)` values in stacked tooltip,"question/13340
https://metaboat.slack.com/archives/C06G94JTWBS/p1706198048110449",EmmadUsmani,2024-03-05 00:45:09+00:00,['alxnddr'],2024-03-29 21:02:45+00:00,2024-03-29 21:02:45+00:00,https://github.com/metabase/metabase/issues/39606,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2168055837,issue,closed,completed,[dc.js migration] lack of margin between axis title and tick labels when tick labels are long,"question/14934
https://metaboat.slack.com/archives/C06G94JTWBS/p1706198036627319

<img width=""1887"" alt=""Screenshot 2024-03-04 at 4 43 15 PM"" src=""https://github.com/metabase/metabase/assets/37751258/b2fde7c8-372b-4eab-aef4-c7e35821b269"">
",EmmadUsmani,2024-03-05 00:44:03+00:00,['EmmadUsmani'],2024-04-05 16:42:30+00:00,2024-04-05 16:42:30+00:00,https://github.com/metabase/metabase/issues/39605,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 2040239712, 'issue_id': 2168055837, 'author': 'EmmadUsmani', 'body': ""https://github.com/metabase/metabase/assets/37751258/0d784550-645a-4c84-89f2-16c7a72bd430\r\n\r\nTried reproducing and it looks like it's fixed now."", 'created_at': datetime.datetime(2024, 4, 5, 16, 42, 26, tzinfo=datetime.timezone.utc)}]","EmmadUsmani (Issue Creator) on (2024-04-05 16:42:26 UTC): https://github.com/metabase/metabase/assets/37751258/0d784550-645a-4c84-89f2-16c7a72bd430

Tried reproducing and it looks like it's fixed now.

"
2168052444,issue,closed,completed,[dc.js migration] trend line looks wrong in some cases,"question/14064
https://metaboat.slack.com/archives/C06G94JTWBS/p1706197726123329

In this case it's dipping into the negatives when it shouldn't.

question/2530
https://metaboat.slack.com/archives/C06G94JTWBS/p1706198830603689

In this case the curve is slightly different, but the dc.js implementation also has the unaggregated values warning.

question/2862
https://metaboat.slack.com/archives/C06G94JTWBS/p1706201653722559

question/839
https://metaboat.slack.com/archives/C06G94JTWBS/p1706196346146919

In this case it every so slightly dips into the negatives at the end, which causes the entire chart to have a negative y-axis portion.

---
**Multi-series Data**

Changing the order of multi-series data breaks the computed trend line

https://github.com/metabase/metabase/assets/22608765/4e31384c-66f0-44e3-8f18-0079e456fe39

",EmmadUsmani,2024-03-05 00:40:13+00:00,"['alxnddr', 'kulyk']",2024-04-10 19:15:50+00:00,2024-04-10 19:15:50+00:00,https://github.com/metabase/metabase/issues/39604,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2168049491,issue,open,,[dc.js migration] stacked area should have a tooltip when hovering area,"<img width=""353"" alt=""Screenshot 2024-03-04 at 4 36 21 PM"" src=""https://github.com/metabase/metabase/assets/37751258/bdbd7d1d-3a16-4e29-ae0b-110574ffeccd"">

This is missing on echarts",EmmadUsmani,2024-03-05 00:36:44+00:00,[],2025-02-04 20:31:50+00:00,,https://github.com/metabase/metabase/issues/39603,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Frontend', ''), ('.Team/DashViz', 'Dashboard and Viz team'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation'), ('Visualization/Tooltips', '')]","[{'comment_id': 2093857932, 'issue_id': 2168049491, 'author': 'EmmadUsmani', 'body': 'I had a WIP PR (https://github.com/metabase/metabase/pull/42225), but I ultimately gave up on it because it was not easy to position the tooltip correctly.\r\n\r\n<img width=""1910"" alt=""Screenshot 2024-05-03 at 10 23 40 AM"" src=""https://github.com/metabase/metabase/assets/37751258/8054deae-1c6f-41dd-81d8-7cdc3557bade"">\r\n\r\nOur tooltip component attaches itself to the top of an element\'s bounding box, but as you can see in the screenshot, with the way echarts draws areas the bounding box of the element can end up very high, causing the tooltip to look mispositioned. In that example I\'m hovering over the red ""normal"" series in the middle, but the tooltip would appear much higher since that\'s the top of its bounding box.\r\n\r\nThere may be some complicated way to fix this, for example manually computing an offset for the tooltip, but it would require a lot of work for stacked charts, and I don\'t think it\'s worth it given that we want to move to echarts\' native tooltip soon ([product doc](https://www.notion.so/metabase/Make-tooltips-more-predictable-with-ECharts-default-behavior-364f2c71f3b248f1b839960af037279c)).', 'created_at': datetime.datetime(2024, 5, 3, 22, 49, 58, tzinfo=datetime.timezone.utc)}]","EmmadUsmani (Issue Creator) on (2024-05-03 22:49:58 UTC): I had a WIP PR (https://github.com/metabase/metabase/pull/42225), but I ultimately gave up on it because it was not easy to position the tooltip correctly.

<img width=""1910"" alt=""Screenshot 2024-05-03 at 10 23 40 AM"" src=""https://github.com/metabase/metabase/assets/37751258/8054deae-1c6f-41dd-81d8-7cdc3557bade"">

Our tooltip component attaches itself to the top of an element's bounding box, but as you can see in the screenshot, with the way echarts draws areas the bounding box of the element can end up very high, causing the tooltip to look mispositioned. In that example I'm hovering over the red ""normal"" series in the middle, but the tooltip would appear much higher since that's the top of its bounding box.

There may be some complicated way to fix this, for example manually computing an offset for the tooltip, but it would require a lot of work for stacked charts, and I don't think it's worth it given that we want to move to echarts' native tooltip soon ([product doc](https://www.notion.so/metabase/Make-tooltips-more-predictable-with-ECharts-default-behavior-364f2c71f3b248f1b839960af037279c)).

"
2168046756,issue,closed,completed,[dc.js migration] should render a single null dimension value,"question/12561
https://metaboat.slack.com/archives/C06G94JTWBS/p1706197339520639",EmmadUsmani,2024-03-05 00:33:23+00:00,['kulyk'],2024-10-08 17:10:02+00:00,2024-05-30 16:12:01+00:00,https://github.com/metabase/metabase/issues/39602,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.Team/DashViz', 'Dashboard and Viz team'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 2004829738, 'issue_id': 2168046756, 'author': 'JesseSDevaney', 'body': 'Could not reproduce the same error. A different error came up and probably should be diagnosed before working on any fix.\r\n\r\n![image](https://github.com/metabase/metabase/assets/22608765/f95289e7-ec92-499e-a6f1-4e52c9f36053)', 'created_at': datetime.datetime(2024, 3, 18, 19, 59, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2108536566, 'issue_id': 2168046756, 'author': 'cdeweyx', 'body': ""Not a release blocker, but let's make this error human-readable"", 'created_at': datetime.datetime(2024, 5, 13, 18, 31, 1, tzinfo=datetime.timezone.utc)}]","JesseSDevaney on (2024-03-18 19:59:52 UTC): Could not reproduce the same error. A different error came up and probably should be diagnosed before working on any fix.

![image](https://github.com/metabase/metabase/assets/22608765/f95289e7-ec92-499e-a6f1-4e52c9f36053)

cdeweyx on (2024-05-13 18:31:01 UTC): Not a release blocker, but let's make this error human-readable

"
2168042766,issue,closed,completed,[dc.js migration] axis label text is bigger,"question/1614
https://metaboat.slack.com/archives/C06G94JTWBS/p1706197149149459",EmmadUsmani,2024-03-05 00:28:34+00:00,['alxnddr'],2024-03-08 20:24:21+00:00,2024-03-08 20:24:21+00:00,https://github.com/metabase/metabase/issues/39601,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2168038765,issue,closed,completed,[dc.js migration] missing tooltip for goal line label,"<img width=""151"" alt=""Screenshot 2024-03-04 at 4 23 19 PM"" src=""https://github.com/metabase/metabase/assets/37751258/01a18e95-63e7-4943-8c2c-fd041ecef020"">

Doesn't appear in echarts",EmmadUsmani,2024-03-05 00:23:56+00:00,['JesseSDevaney'],2024-03-15 18:08:24+00:00,2024-03-15 18:08:24+00:00,https://github.com/metabase/metabase/issues/39600,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2168037261,issue,closed,completed,[dc.js migration] missing blue highlight in timeline event focus state,"<img width=""1638"" alt=""Screenshot 2024-03-04 at 4 21 31 PM"" src=""https://github.com/metabase/metabase/assets/37751258/a7b71636-0aa4-4b1b-91c8-1ed4a0c79c8e"">
",EmmadUsmani,2024-03-05 00:22:21+00:00,['EmmadUsmani'],2024-10-08 17:11:14+00:00,2024-05-21 22:23:19+00:00,https://github.com/metabase/metabase/issues/39599,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 1988986741, 'issue_id': 2168037261, 'author': 'EmmadUsmani', 'body': ""This is a very minor style regression, and it's not easy to fix since we can't apply css to the icon image."", 'created_at': datetime.datetime(2024, 3, 11, 17, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2121129111, 'issue_id': 2168037261, 'author': 'JesseSDevaney', 'body': 'Could not reproduce:\r\n\r\n\r\nhttps://github.com/metabase/metabase/assets/22608765/bd1a6e35-2d33-4605-95b1-1e1c7c2890d9', 'created_at': datetime.datetime(2024, 5, 20, 20, 11, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2121526441, 'issue_id': 2168037261, 'author': 'EmmadUsmani', 'body': '<img width=""1385"" alt=""Screenshot 2024-05-20 at 6 20 52 PM"" src=""https://github.com/metabase/metabase/assets/37751258/1767cbd9-1d12-4942-b03c-a847febf2b6c"">\r\n\r\n@JesseSDevaney Apologies for the lack for description on the original issue. The bug was that the hover state should also be blue, see in this screenshot from your recording it\'s still grey.', 'created_at': datetime.datetime(2024, 5, 21, 1, 21, 47, tzinfo=datetime.timezone.utc)}]","EmmadUsmani (Issue Creator) on (2024-03-11 17:10:00 UTC): This is a very minor style regression, and it's not easy to fix since we can't apply css to the icon image.

JesseSDevaney on (2024-05-20 20:11:32 UTC): Could not reproduce:


https://github.com/metabase/metabase/assets/22608765/bd1a6e35-2d33-4605-95b1-1e1c7c2890d9

EmmadUsmani (Issue Creator) on (2024-05-21 01:21:47 UTC): <img width=""1385"" alt=""Screenshot 2024-05-20 at 6 20 52 PM"" src=""https://github.com/metabase/metabase/assets/37751258/1767cbd9-1d12-4942-b03c-a847febf2b6c"">

@JesseSDevaney Apologies for the lack for description on the original issue. The bug was that the hover state should also be blue, see in this screenshot from your recording it's still grey.

"
2168032224,issue,closed,completed,[dc.js migration] echarts shows stacked bars as areas,"question/3509
https://metaboat.slack.com/archives/C06G94JTWBS/p1706196575098869
",EmmadUsmani,2024-03-05 00:17:04+00:00,['alxnddr'],2024-03-14 19:31:00+00:00,2024-03-14 19:31:00+00:00,https://github.com/metabase/metabase/issues/39598,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2168030686,issue,closed,completed,[dc.js migration] some series appear as lines on stacked bars,"question/6617
https://metaboat.slack.com/archives/C06G94JTWBS/p1706196466554089

question/14059
https://metaboat.slack.com/archives/C06G94JTWBS/p1706198271871719",EmmadUsmani,2024-03-05 00:15:21+00:00,['alxnddr'],2024-03-14 19:30:58+00:00,2024-03-14 19:30:58+00:00,https://github.com/metabase/metabase/issues/39597,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2168027038,issue,closed,completed,[dc.js migration] wrong y-axis range in some cases,"question/13919
https://metaboat.slack.com/archives/C06G94JTWBS/p1706196318619779

",EmmadUsmani,2024-03-05 00:11:38+00:00,['EmmadUsmani'],2024-03-16 01:16:21+00:00,2024-03-16 01:16:21+00:00,https://github.com/metabase/metabase/issues/39596,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2168021924,issue,closed,completed,[dc.js migration] different y-axis auto-split logic,"In some cases the echarts implementation splits where it shouldn't, in other cases it does not split when it should.

question/1899
https://metaboat.slack.com/archives/C06G94JTWBS/p1706196110016349

question/13527
https://metaboat.slack.com/archives/C06G94JTWBS/p1706199630460249

question/2529
https://metaboat.slack.com/archives/C06G94JTWBS/p1710340971272179

question/13527
https://metaboat.slack.com/archives/C06G94JTWBS/p1710343860190739",EmmadUsmani,2024-03-05 00:06:42+00:00,['alxnddr'],2024-03-31 23:53:00+00:00,2024-03-31 23:53:00+00:00,https://github.com/metabase/metabase/issues/39595,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 2004315417, 'issue_id': 2168021924, 'author': 'alxnddr', 'body': 'Not a bug, needs rebasing on top of the master', 'created_at': datetime.datetime(2024, 3, 18, 15, 58, 57, tzinfo=datetime.timezone.utc)}]","alxnddr (Assginee) on (2024-03-18 15:58:57 UTC): Not a bug, needs rebasing on top of the master

"
2168012584,issue,closed,completed,[dc.js migration] timeseries controls always say `unbinned`,"question/13114
https://metaboat.slack.com/archives/C06G94JTWBS/p1706195758780859

<img width=""596"" alt=""Screenshot 2024-03-04 at 3 56 34 PM"" src=""https://github.com/metabase/metabase/assets/37751258/3435742f-954e-42a5-a1ec-e8051477e688"">
",EmmadUsmani,2024-03-04 23:57:25+00:00,['alxnddr'],2024-03-31 23:52:54+00:00,2024-03-31 23:52:54+00:00,https://github.com/metabase/metabase/issues/39594,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 1985015215, 'issue_id': 2168012584, 'author': 'alxnddr', 'body': 'Most likely not related and will be fixed by rebasing on top of the master', 'created_at': datetime.datetime(2024, 3, 8, 4, 19, 55, tzinfo=datetime.timezone.utc)}]","alxnddr (Assginee) on (2024-03-08 04:19:55 UTC): Most likely not related and will be fixed by rebasing on top of the master

"
2168010501,issue,closed,completed,[dc.js migration] single area blurs data labels in emphasis state,"question/3192
https://metaboat.slack.com/archives/C06G94JTWBS/p1706195633670289

<img width=""456"" alt=""Screenshot 2024-03-04 at 3 54 11 PM"" src=""https://github.com/metabase/metabase/assets/37751258/fce4a00b-81ea-4d95-9f16-14f5e548846d"">
",EmmadUsmani,2024-03-04 23:55:03+00:00,['alxnddr'],2024-03-08 20:24:17+00:00,2024-03-08 20:24:17+00:00,https://github.com/metabase/metabase/issues/39593,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2168005216,issue,closed,completed,[dc.js migration] different values shown in tooltip when dimension is unaggregated,"question/15039
https://metaboat.slack.com/archives/C06G94JTWBS/p1706195489069949


",EmmadUsmani,2024-03-04 23:49:10+00:00,['EmmadUsmani'],2024-03-19 19:54:16+00:00,2024-03-19 19:54:16+00:00,https://github.com/metabase/metabase/issues/39592,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2168000224,issue,closed,completed,[dc.js migration] wrong tick labels on some histograms,"question/2767
https://metaboat.slack.com/archives/C06G94JTWBS/p1706195458170079

| dc.js | echarts |
|--------|--------|
| <img width=""680"" alt=""Screenshot 2024-03-04 at 3 41 53 PM"" src=""https://github.com/metabase/metabase/assets/37751258/dc9aca7a-29a1-4a85-89fb-f2c7e81c875a""> | <img width=""885"" alt=""Screenshot 2024-03-04 at 3 42 02 PM"" src=""https://github.com/metabase/metabase/assets/37751258/9ffc09f0-3c44-450b-9d65-6009f0ed87ed""> | 

In echarts, the first bar should have the label of `$0`, but instead it's on the second bar. The last label `$70.00` is missing completely.

Also, the labels are misplaced, but that's a separate issue: https://github.com/metabase/metabase/issues/39564

question/2773
https://metaboat.slack.com/archives/C06G94JTWBS/p1706196040243949

<img width=""1511"" alt=""Screenshot 2024-03-04 at 4 03 38 PM"" src=""https://github.com/metabase/metabase/assets/37751258/1627a908-cfcc-4ed4-b80b-27627fc5a989"">

In this case the decimal values aren't shown.",EmmadUsmani,2024-03-04 23:44:38+00:00,['JesseSDevaney'],2024-03-29 19:50:35+00:00,2024-03-29 19:50:34+00:00,https://github.com/metabase/metabase/issues/39591,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 2027674649, 'issue_id': 2168000224, 'author': 'JesseSDevaney', 'body': 'Could not reproduce', 'created_at': datetime.datetime(2024, 3, 29, 19, 50, 34, tzinfo=datetime.timezone.utc)}]","JesseSDevaney (Assginee) on (2024-03-29 19:50:34 UTC): Could not reproduce

"
2167991342,issue,closed,not_planned,[dc.js migration] normalized stacked tooltip missing `%` symbol,"question/13700
https://metaboat.slack.com/archives/C06G94JTWBS/p1706195416551909

| dc.js | echarts |
|--------|--------|
| <img width=""167"" alt=""Screenshot 2024-03-04 at 3 36 17 PM"" src=""https://github.com/metabase/metabase/assets/37751258/c5dbf6d9-459e-455f-900e-5976c5c3989e""> | <img width=""178"" alt=""Screenshot 2024-03-04 at 3 36 21 PM"" src=""https://github.com/metabase/metabase/assets/37751258/0abed8e6-3fc5-44b1-b08d-f37b7ccb3330""> | 

",EmmadUsmani,2024-03-04 23:37:43+00:00,['JesseSDevaney'],2024-03-19 16:18:53+00:00,2024-03-19 13:35:27+00:00,https://github.com/metabase/metabase/issues/39590,"[('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.')]","[{'comment_id': 2007196370, 'issue_id': 2167991342, 'author': 'alxnddr', 'body': 'Not a regression but an improvement', 'created_at': datetime.datetime(2024, 3, 19, 13, 35, 28, tzinfo=datetime.timezone.utc)}]","alxnddr on (2024-03-19 13:35:28 UTC): Not a regression but an improvement

"
2167976300,issue,closed,completed,[dc.js migration] timeseries x-axis has uneven label spacing,"question/14473
https://metaboat.slack.com/archives/C06G94JTWBS/p1706195149944089

<img width=""804"" alt=""Screenshot 2024-03-04 at 3 23 18 PM"" src=""https://github.com/metabase/metabase/assets/37751258/43607551-be3f-448a-8236-d1e4cc8bf778"">

question/13056
https://metaboat.slack.com/archives/C06G94JTWBS/p1710340823036909

question/3699
",EmmadUsmani,2024-03-04 23:24:50+00:00,['alxnddr'],2024-03-22 18:05:15+00:00,2024-03-22 18:05:15+00:00,https://github.com/metabase/metabase/issues/39587,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2167971357,issue,closed,completed,"Investigate the feasibility of making `:block` permissions ""normal""",,johnswanson,2024-03-04 23:21:45+00:00,['johnswanson'],2024-03-11 13:52:59+00:00,2024-03-11 13:52:59+00:00,https://github.com/metabase/metabase/issues/39586,[],[],
2167969556,issue,closed,not_planned,[dc.js migration] scatterplot has extra space between 0 and first datum on x-axis,"question/222
https://metaboat.slack.com/archives/C06G94JTWBS/p1706195107909559

<img width=""1447"" alt=""Screenshot 2024-03-04 at 3 19 57 PM"" src=""https://github.com/metabase/metabase/assets/37751258/57e3c3dc-c345-4e14-b837-e7ae25e750db"">
",EmmadUsmani,2024-03-04 23:20:48+00:00,['EmmadUsmani'],2024-04-18 17:13:11+00:00,2024-04-18 17:13:10+00:00,https://github.com/metabase/metabase/issues/39585,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 2064612224, 'issue_id': 2167969556, 'author': 'EmmadUsmani', 'body': ""According to Maz, echarts' behavior is better ([thread](https://metaboat.slack.com/archives/C05NQSWPRMK/p1712337505939329?thread_ts=1712334801.199279&cid=C05NQSWPRMK))"", 'created_at': datetime.datetime(2024, 4, 18, 17, 13, 10, tzinfo=datetime.timezone.utc)}]","EmmadUsmani (Issue Creator) on (2024-04-18 17:13:10 UTC): According to Maz, echarts' behavior is better ([thread](https://metaboat.slack.com/archives/C05NQSWPRMK/p1712337505939329?thread_ts=1712334801.199279&cid=C05NQSWPRMK))

"
2167950234,issue,open,,Conditional formatting (color range) on pivot table values to be relative to grouping,"**Is your feature request related to a problem? Please describe.**
I would like to display a color range on table cells based on relative values, but currently the relativity is based on the entire column value range. For instance a pivot table showing customer spend across a range of dates, I would like the conditional highlights to reflect based on spend relative to the customer and not relative across all customers.

**Describe the solution you'd like**
Add an option to make cell highlighting with a color range relative to a grouping or allow a custom function.

**Describe alternatives you've considered**
I've considered trying to create a calculated column myself via a native query with min/max values by grouping, but I cannot use a pivot table visualization using a SQL query.

**How important is this feature to you?**
We are unable to move our largest set of reports to Metabase without this feature.",RonnieSan,2024-03-04 23:08:20+00:00,[],2025-02-04 20:31:56+00:00,,https://github.com/metabase/metabase/issues/39584,"[('Type:New Feature', ''), ('Visualization/Tables', 'raw, summarized and tabular visualizations'), ('Visualization/Conditional Formatting', '')]",[],
2167897684,issue,closed,completed,[dc.js migration] default data label formatting is not compact,"question/14584
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194942878019

question/1952
https://metaboat.slack.com/archives/C06G94JTWBS/p1706195151060129
",EmmadUsmani,2024-03-04 22:26:06+00:00,['JesseSDevaney'],2024-03-27 19:22:16+00:00,2024-03-27 19:22:16+00:00,https://github.com/metabase/metabase/issues/39583,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 2021651643, 'issue_id': 2167897684, 'author': 'JesseSDevaney', 'body': 'See https://github.com/metabase/metabase/pull/40656 for the reason why', 'created_at': datetime.datetime(2024, 3, 26, 23, 39, 41, tzinfo=datetime.timezone.utc)}]","JesseSDevaney (Assginee) on (2024-03-26 23:39:41 UTC): See https://github.com/metabase/metabase/pull/40656 for the reason why

"
2167893012,issue,closed,completed,[dc.js migration] wonky blur state with timeline events,"question/2701
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194996401699?thread_ts=1706194921.403509&cid=C06G94JTWBS",EmmadUsmani,2024-03-04 22:22:57+00:00,[],2024-03-18 16:40:11+00:00,2024-03-18 16:40:11+00:00,https://github.com/metabase/metabase/issues/39582,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 2004414560, 'issue_id': 2167893012, 'author': 'EmmadUsmani', 'body': ""It's fixed now"", 'created_at': datetime.datetime(2024, 3, 18, 16, 40, 11, tzinfo=datetime.timezone.utc)}]","EmmadUsmani (Issue Creator) on (2024-03-18 16:40:11 UTC): It's fixed now

"
2167888148,issue,closed,completed,[dc.js migration] inconsistent data compared to old implementation,"question/4172
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194844355449

<img width=""1793"" alt=""Screenshot 2024-03-04 at 2 14 59 PM"" src=""https://github.com/metabase/metabase/assets/37751258/51b24a94-5de8-4fa3-a56d-7161a8147fc4"">

See the 6th data label from the right on the bottom series, in the old implementation it's 40.01%, in echarts its 39.96%

question/14273
https://metaboat.slack.com/archives/C06G94JTWBS/p1706197246775189",EmmadUsmani,2024-03-04 22:19:15+00:00,['JesseSDevaney'],2024-03-22 19:04:27+00:00,2024-03-22 19:04:27+00:00,https://github.com/metabase/metabase/issues/39581,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 2015737430, 'issue_id': 2167888148, 'author': 'JesseSDevaney', 'body': 'Could not reproduce', 'created_at': datetime.datetime(2024, 3, 22, 19, 4, 27, tzinfo=datetime.timezone.utc)}]","JesseSDevaney (Assginee) on (2024-03-22 19:04:27 UTC): Could not reproduce

"
2167868237,issue,closed,completed,[dc.js migration] data labels don't show at all in some cases,"question/12014
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194772054189

<img width=""1799"" alt=""Screenshot 2024-03-04 at 2 05 34 PM"" src=""https://github.com/metabase/metabase/assets/37751258/4b73c612-42f4-411f-af4e-763e69599c9a"">

question/2701
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194921403509

<img width=""1397"" alt=""Screenshot 2024-03-04 at 2 12 37 PM"" src=""https://github.com/metabase/metabase/assets/37751258/ee07e599-8853-4c20-a80e-64249c952fad"">

Might be related to the trend line

question/4808
https://metaboat.slack.com/archives/C06G94JTWBS/p1706198611931249

question/7545
https://metaboat.slack.com/archives/C06G94JTWBS/p1706201395238719",EmmadUsmani,2024-03-04 22:06:18+00:00,['JesseSDevaney'],2024-03-15 18:50:24+00:00,2024-03-15 18:50:23+00:00,https://github.com/metabase/metabase/issues/39580,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 1988938323, 'issue_id': 2167868237, 'author': 'alxnddr', 'body': 'The labels are not visible if the series symbol is hidden — we need to add opacity on it instead', 'created_at': datetime.datetime(2024, 3, 11, 16, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 2000258801, 'issue_id': 2167868237, 'author': 'JesseSDevaney', 'body': 'Could no longer reproduce\r\n\r\n![image](https://github.com/metabase/metabase/assets/22608765/44234374-8b1a-4468-9687-1cd6ccac2b0b)', 'created_at': datetime.datetime(2024, 3, 15, 18, 50, 23, tzinfo=datetime.timezone.utc)}]","alxnddr on (2024-03-11 16:50:00 UTC): The labels are not visible if the series symbol is hidden — we need to add opacity on it instead

JesseSDevaney (Assginee) on (2024-03-15 18:50:23 UTC): Could no longer reproduce

![image](https://github.com/metabase/metabase/assets/22608765/44234374-8b1a-4468-9687-1cd6ccac2b0b)

"
2167854968,issue,closed,completed,[dc.js migration] x-axis label is cut off on timeseries and ordinal x-axis scales,"<img width=""1890"" alt=""Screenshot 2024-03-04 at 3 33 16 PM"" src=""https://github.com/metabase/metabase/assets/37751258/4fdd08c7-5501-452e-9a1a-068d74fafe57"">

question/2761
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194711384519

![image](https://github.com/metabase/metabase/assets/37751258/cf98e227-16ab-4e57-9c17-923e2a5a257c)

question/2763
",EmmadUsmani,2024-03-04 21:59:12+00:00,['alxnddr'],2024-03-08 20:24:31+00:00,2024-03-08 20:24:31+00:00,https://github.com/metabase/metabase/issues/39579,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2167848723,issue,closed,completed,[dc.js migration] series name setting does not work,"question/3656
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194704374779

<img width=""597"" alt=""Screenshot 2024-03-04 at 1 55 53 PM"" src=""https://github.com/metabase/metabase/assets/37751258/1ba77c69-e3c1-4abf-9bec-270b450d2ca4"">

<img width=""1891"" alt=""Screenshot 2024-03-04 at 1 55 47 PM"" src=""https://github.com/metabase/metabase/assets/37751258/8d3b0c06-6b6f-4c71-88a6-de58e179161e"">


Affects axis title and tooltips as well

| dc.js | echarts |
|--------|--------|
| <img width=""112"" alt=""Screenshot 2024-03-04 at 2 17 53 PM"" src=""https://github.com/metabase/metabase/assets/37751258/eb254fd3-eba2-477b-a5e7-85ef5015d511""> | <img width=""126"" alt=""Screenshot 2024-03-04 at 2 17 49 PM"" src=""https://github.com/metabase/metabase/assets/37751258/361ac7a3-ff59-4233-ade3-bf5e0cfc49b3""> | 


",EmmadUsmani,2024-03-04 21:56:55+00:00,['kulyk'],2024-03-21 17:13:21+00:00,2024-03-21 17:13:21+00:00,https://github.com/metabase/metabase/issues/39578,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2167830350,issue,closed,completed,[dc.js migration] split lines do not respect y-axis `Show lines and marks` setting,"question/6010
https://metaboat.slack.com/archives/C06G94JTWBS/p1709588741005889?thread_ts=1706194533.524559&cid=C06G94JTWBS

![image](https://github.com/metabase/metabase/assets/37751258/9dee3691-0c4e-4cab-9935-2b16168d6a7e)
",EmmadUsmani,2024-03-04 21:46:54+00:00,['JesseSDevaney'],2024-03-19 17:51:37+00:00,2024-03-19 17:51:37+00:00,https://github.com/metabase/metabase/issues/39574,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2167784861,issue,closed,completed,[dc.js migration] grouped timeline events should use star icon,"question/4810
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194110212969

<img width=""71"" alt=""Screenshot 2024-03-04 at 1 21 38 PM"" src=""https://github.com/metabase/metabase/assets/37751258/760d398d-50dd-4174-b55f-ff51c98409f3"">
",EmmadUsmani,2024-03-04 21:22:46+00:00,['alxnddr'],2024-03-11 19:13:24+00:00,2024-03-11 19:13:24+00:00,https://github.com/metabase/metabase/issues/39572,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2167768787,issue,closed,not_planned,[dc.js migration] data labels stop rendering entirely on small width,"question/3407
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194039583219

<img width=""1766"" alt=""Screenshot 2024-03-04 at 1 12 30 PM"" src=""https://github.com/metabase/metabase/assets/37751258/e432a84e-d754-4e24-8f76-e6e5b0fa9b66"">

question/3406
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194248161949
",EmmadUsmani,2024-03-04 21:14:32+00:00,[],2024-03-11 16:49:37+00:00,2024-03-11 16:47:42+00:00,https://github.com/metabase/metabase/issues/39571,[],"[{'comment_id': 1988933583, 'issue_id': 2167768787, 'author': 'alxnddr', 'body': 'Closed as a duplicate of this https://github.com/metabase/metabase/issues/39580', 'created_at': datetime.datetime(2024, 3, 11, 16, 47, 42, tzinfo=datetime.timezone.utc)}]","alxnddr on (2024-03-11 16:47:42 UTC): Closed as a duplicate of this https://github.com/metabase/metabase/issues/39580

"
2167753951,issue,closed,completed,[dc.js migration] overly dense data labels (multi-series/breakouts),"- The overlapping issue is not-reproduceable, but the overly dense is. Combining this work with https://github.com/metabase/metabase/issues/40196

---
question/7398
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193943708289

<img width=""143"" alt=""Screenshot 2024-03-04 at 1 04 34 PM"" src=""https://github.com/metabase/metabase/assets/37751258/7a3f59bd-b22f-491b-b1b9-cc9bf1a88d04"">

question/12334
https://metaboat.slack.com/archives/C06G94JTWBS/p1706195021545219

https://metaboat.slack.com/archives/C06G94JTWBS/p1712762091179319
https://metaboat.slack.com/archives/C06G94JTWBS/p1712762595935719


",EmmadUsmani,2024-03-04 21:05:46+00:00,['JesseSDevaney'],2024-10-08 17:09:36+00:00,2024-06-01 19:29:16+00:00,https://github.com/metabase/metabase/issues/39568,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.Team/DashViz', 'Dashboard and Viz team'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2167747825,issue,closed,completed,[dc.js migration] overly frequent line series dots,"- Discussion: https://metaboat.slack.com/archives/C05NQSWPRMK/p1714165072406309

---
We should also switch the default setting to not show dots, per product/design feedback ([thread](https://metaboat.slack.com/archives/C06G94JTWBS/p1706194727139419)). In fact, if we do that then maybe this issue isn't worth fixing given how infrequently it'd come up.

question/4868
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193945370869

<img width=""486"" alt=""Screenshot 2024-03-04 at 1 01 37 PM"" src=""https://github.com/metabase/metabase/assets/37751258/7a35dd13-0e7e-4fc1-a151-9847a9d03d29"">

question/4223
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193960436849

https://metaboat.slack.com/archives/C05NQSWPRMK/p1714473071596039",EmmadUsmani,2024-03-04 21:02:23+00:00,['JesseSDevaney'],2024-10-08 17:11:18+00:00,2024-05-21 19:30:55+00:00,https://github.com/metabase/metabase/issues/39567,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 2080110458, 'issue_id': 2167747825, 'author': 'JesseSDevaney', 'body': ':warning: Currently waiting on product + design feedback before proceeding with implementing a fix\r\n- https://metaboat.slack.com/archives/C05NQSWPRMK/p1714165072406309', 'created_at': datetime.datetime(2024, 4, 26, 20, 58, 25, tzinfo=datetime.timezone.utc)}]","JesseSDevaney (Assginee) on (2024-04-26 20:58:25 UTC): :warning: Currently waiting on product + design feedback before proceeding with implementing a fix
- https://metaboat.slack.com/archives/C05NQSWPRMK/p1714165072406309

"
2167731342,issue,closed,completed,[dc.js migration] series blur state should not apply to timeline event icons,"https://metaboat.slack.com/archives/C06G94JTWBS/p1706193892037069

<img width=""293"" alt=""Screenshot 2024-03-04 at 12 52 11 PM"" src=""https://github.com/metabase/metabase/assets/37751258/4eb6b4a9-4974-48ce-b579-28ed09348104"">
",EmmadUsmani,2024-03-04 20:53:29+00:00,['alxnddr'],2024-03-11 19:09:14+00:00,2024-03-11 19:09:14+00:00,https://github.com/metabase/metabase/issues/39565,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2167706595,issue,closed,completed,[dc.js migration] histogram x-axis labels placed differently,"question/2772
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193714570929

![image](https://github.com/metabase/metabase/assets/37751258/1396891e-f482-481b-9180-92a7085115eb)


question/14933
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193940915449

question/5834
",EmmadUsmani,2024-03-04 20:41:41+00:00,['EmmadUsmani'],2024-03-16 01:17:13+00:00,2024-03-16 01:17:13+00:00,https://github.com/metabase/metabase/issues/39564,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2167685806,issue,closed,completed,[dc.js migration] missing chart data/driver/timezone warnings,"Warning icon that's used in many cases (driver constraints, timezone issues, unaggregated  data, row limit, etc) is not in echarts implementation

question/12430
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193456597129

<img width=""1423"" alt=""Screenshot 2024-03-04 at 12 27 57 PM"" src=""https://github.com/metabase/metabase/assets/37751258/8ebcdf51-86f9-4065-b465-bf08db0924df"">

question/6009
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193933080829

question/11526
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194094187129

question/14925

question/6512
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194617924469

question/93
https://metaboat.slack.com/archives/C06G94JTWBS/p1710342211371389",EmmadUsmani,2024-03-04 20:28:05+00:00,['EmmadUsmani'],2024-04-04 17:23:44+00:00,2024-04-04 17:23:44+00:00,https://github.com/metabase/metabase/issues/39562,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 1998462503, 'issue_id': 2167685806, 'author': 'JesseSDevaney', 'body': 'Moving on from this issue as it seems a little too complex for an on-boarding issue. A lot of the code around warnings was deleted or moved between master and the ECharts branch making it difficult to understand how it was originally setup and how it should be setup in this new ECharts model.\r\n\r\nIt would probably be best for @alxnddr or @EmmadUsmani to fix this bug because they understand the migration better.\r\n\r\n**Relevant Files:**\r\n- [warnings.js (master/echarts)](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/lib/warnings.js)\r\n- [timeseries.js (master)](https://github.com/metabase/metabase/blob/master/frontend/src/metabase/visualizations/lib/timeseries.js#L223)\r\n- [timeseries.js (echarts)](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/lib/timeseries.js)\r\n  - [timeseries.ts (echarts)](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/echarts/cartesian/utils/timeseries.ts#L256)\r\n- [LineAreaBarRenderer.js (master)](https://github.com/metabase/metabase/blob/master/frontend/src/metabase/visualizations/lib/LineAreaBarRenderer.js#L856-L980)\r\n  - File is deleted in ECharts but the functionality for setting up warnings is present there\r\n- [render-utils.js (master)](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/lib/renderer_utils.js)\r\n  - Much of the functionality was used in LineAreaBarRenderer.js which was deleted in ECharts', 'created_at': datetime.datetime(2024, 3, 14, 20, 50, 28, tzinfo=datetime.timezone.utc)}]","JesseSDevaney on (2024-03-14 20:50:28 UTC): Moving on from this issue as it seems a little too complex for an on-boarding issue. A lot of the code around warnings was deleted or moved between master and the ECharts branch making it difficult to understand how it was originally setup and how it should be setup in this new ECharts model.

It would probably be best for @alxnddr or @EmmadUsmani to fix this bug because they understand the migration better.

**Relevant Files:**
- [warnings.js (master/echarts)](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/lib/warnings.js)
- [timeseries.js (master)](https://github.com/metabase/metabase/blob/master/frontend/src/metabase/visualizations/lib/timeseries.js#L223)
- [timeseries.js (echarts)](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/lib/timeseries.js)
  - [timeseries.ts (echarts)](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/echarts/cartesian/utils/timeseries.ts#L256)
- [LineAreaBarRenderer.js (master)](https://github.com/metabase/metabase/blob/master/frontend/src/metabase/visualizations/lib/LineAreaBarRenderer.js#L856-L980)
  - File is deleted in ECharts but the functionality for setting up warnings is present there
- [render-utils.js (master)](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/lib/renderer_utils.js)
  - Much of the functionality was used in LineAreaBarRenderer.js which was deleted in ECharts

"
2167679471,issue,closed,completed,[dc.js migration] rotated x-axis label can overlap with axis title,"question/13489
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193405803349

<img width=""327"" alt=""Screenshot 2024-03-04 at 12 22 55 PM"" src=""https://github.com/metabase/metabase/assets/37751258/219ef3a1-aa1a-4bfe-aa3c-c407aa2cfa76"">
",EmmadUsmani,2024-03-04 20:23:56+00:00,['EmmadUsmani'],2024-04-05 17:05:42+00:00,2024-04-05 17:05:41+00:00,https://github.com/metabase/metabase/issues/39560,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2167661988,issue,closed,completed,[dc.js migration] missing `(empty)` label on x-axis,"question/13431
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193308481349

<img width=""1485"" alt=""Screenshot 2024-03-04 at 12 11 40 PM"" src=""https://github.com/metabase/metabase/assets/37751258/f6264cc4-28b2-4e8a-86b4-a75a6a405376"">

question/13429
https://metaboat.slack.com/archives/C06G94JTWBS/p1706196244195369
",EmmadUsmani,2024-03-04 20:12:47+00:00,['alxnddr'],2024-03-11 19:48:12+00:00,2024-03-11 19:48:12+00:00,https://github.com/metabase/metabase/issues/39558,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2167657789,issue,closed,completed,[dc.js migration] timeseries x-axis labels are too frequent,"question/1326
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193284513869

<img width=""1873"" alt=""Screenshot 2024-03-04 at 12 09 31 PM"" src=""https://github.com/metabase/metabase/assets/37751258/70b2f75b-68ae-4583-936a-c06d3c7f2ac7"">

question/12873
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193873369879

question/13014
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194358358889

question/6947
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194389071299",EmmadUsmani,2024-03-04 20:10:23+00:00,['alxnddr'],2024-03-22 18:05:21+00:00,2024-03-22 18:05:21+00:00,https://github.com/metabase/metabase/issues/39556,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2167652980,issue,closed,completed,[dc.js migration] timeseries x-axis labels have different formatting,"question/13056
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193260022779

<img width=""1889"" alt=""Screenshot 2024-03-04 at 12 06 06 PM"" src=""https://github.com/metabase/metabase/assets/37751258/e872b8ce-c261-4a05-a924-9d8697de4fd7"">

It's also an issue in tooltips
question/12315
https://app.slack.com/client/T078VCLCR/C06G94JTWBS

| dc.js | echarts |
|--------|--------|
| <img width=""141"" alt=""Screenshot 2024-03-04 at 3 29 16 PM"" src=""https://github.com/metabase/metabase/assets/37751258/b141d647-3af8-41cc-bb84-e2640adb57bf""> | <img width=""324"" alt=""Screenshot 2024-03-04 at 3 28 34 PM"" src=""https://github.com/metabase/metabase/assets/37751258/8fe833c4-f5d1-4752-8a50-4d6b0c3b6ea2""> | 

question/7460
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193323401409

<img width=""1867"" alt=""Screenshot 2024-03-04 at 12 13 41 PM"" src=""https://github.com/metabase/metabase/assets/37751258/455ebc7d-94fb-4fbc-b9dd-9cde908d7a73"">

question/12003
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193325152699

question/43
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193498592449

question/13722
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193856605419

question/6527
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194559142419

<img width=""1355"" alt=""Screenshot 2024-03-04 at 1 49 27 PM"" src=""https://github.com/metabase/metabase/assets/37751258/bd4a5a48-1916-4415-bf27-d82f0faafe27"">

question/708
https://metaboat.slack.com/archives/C06G94JTWBS/p1710343535785229

<img width=""1445"" alt=""Screenshot 2024-03-15 at 2 52 00 PM"" src=""https://github.com/metabase/metabase/assets/37751258/7d255745-61ba-40e3-beb9-2a3f6edb77d2"">

In this case the compact formatting is missing",EmmadUsmani,2024-03-04 20:07:21+00:00,['alxnddr'],2024-03-22 18:05:12+00:00,2024-03-22 18:05:12+00:00,https://github.com/metabase/metabase/issues/39555,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2167643258,issue,closed,completed,[dc.js migration] waterfall chart padding and bar spacing is different,"question/1656
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193259929589

![image](https://github.com/metabase/metabase/assets/37751258/87d1af44-8a43-4f88-8f60-433876c39919)
",EmmadUsmani,2024-03-04 20:01:38+00:00,[],2024-03-08 22:37:01+00:00,2024-03-08 22:37:01+00:00,https://github.com/metabase/metabase/issues/39554,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.')]","[{'comment_id': 1986521270, 'issue_id': 2167643258, 'author': 'alxnddr', 'body': ""There won't be pixel perfect matching between old and new charts but this does not look like a regression to me"", 'created_at': datetime.datetime(2024, 3, 8, 22, 37, 1, tzinfo=datetime.timezone.utc)}]","alxnddr on (2024-03-08 22:37:01 UTC): There won't be pixel perfect matching between old and new charts but this does not look like a regression to me

"
2167639227,issue,closed,completed,[dc.js migration] some bar charts are no longer stacked on echarts,"question/1070
https://metaboat.slack.com/archives/C06G94JTWBS/p1709582220833589?thread_ts=1706193131.644979&cid=C06G94JTWBS

![image](https://github.com/metabase/metabase/assets/37751258/ae1f49c3-1fc0-4fe1-9a74-b7263832e0b2)

question/1326
question/13475
question/13130",EmmadUsmani,2024-03-04 19:59:11+00:00,['EmmadUsmani'],2024-03-05 21:22:02+00:00,2024-03-05 21:22:02+00:00,https://github.com/metabase/metabase/issues/39553,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2167630224,issue,closed,completed,[dc.js migration] The wrong tooltip type is being selected for the chart,"question/12329
https://metaboat.slack.com/archives/C06G94JTWBS/p1706193082481509

| dc.js | echarts |
|--------|--------|
| <img width=""491"" alt=""Screenshot 2024-03-04 at 11 51 09 AM"" src=""https://github.com/metabase/metabase/assets/37751258/8cd505d6-8fe4-4b1c-94a6-babf2b37d584""> | <img width=""835"" alt=""Screenshot 2024-03-04 at 11 47 37 AM"" src=""https://github.com/metabase/metabase/assets/37751258/41b9f4f4-e1bd-4b00-9f8a-471da1a39933""> | 


question/14061
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194432975859

question/14706
https://metaboat.slack.com/archives/C06G94JTWBS/p1706197291970589
",EmmadUsmani,2024-03-04 19:53:31+00:00,['alxnddr'],2024-03-19 18:17:14+00:00,2024-03-19 18:17:14+00:00,https://github.com/metabase/metabase/issues/39550,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 1992546496, 'issue_id': 2167630224, 'author': 'JesseSDevaney', 'body': '### All Questions\r\n\r\n1. This question had a Bar/Area specific setting ([""stackable.stack_type"" !== null](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/lib/settings/graph.js#L273)) previous set on it\r\n2. causing the tooltip type  ([""graph.tooltip_type"" = ""series_comparison""](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/lib/settings/graph.js#L337)) to be different from the intended one for Line Charts (`""default""`)\r\n3. This is causing the [stackedTooltipModel](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/visualizations/CartesianChart/events.ts#L255-L258) to be non-null\r\n4. Because it is non-null, the `<StackedDataTooltip />` gets used instead of `<KeyValuePairChartTooltip />` ([code](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/components/ChartTooltip/ChartTooltip.tsx#L28-L30))\r\n\r\nIn Summary:\r\n- This bug is more coming from a differing charts setting carrying-over into the line charts territory.\r\n- It is not reproduce-able on new questions created through the GUI.\r\n- For existing questions, you can reset the behavior by switching to area chart with breakout, selecting `Don\'t Stack` setting, saving, removing the breakout, and then changing back to line chart', 'created_at': datetime.datetime(2024, 3, 12, 20, 45, 45, tzinfo=datetime.timezone.utc)}]","JesseSDevaney on (2024-03-12 20:45:45 UTC): ### All Questions

1. This question had a Bar/Area specific setting ([""stackable.stack_type"" !== null](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/lib/settings/graph.js#L273)) previous set on it
2. causing the tooltip type  ([""graph.tooltip_type"" = ""series_comparison""](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/lib/settings/graph.js#L337)) to be different from the intended one for Line Charts (`""default""`)
3. This is causing the [stackedTooltipModel](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/visualizations/CartesianChart/events.ts#L255-L258) to be non-null
4. Because it is non-null, the `<StackedDataTooltip />` gets used instead of `<KeyValuePairChartTooltip />` ([code](https://github.com/metabase/metabase/blob/echarts/frontend/src/metabase/visualizations/components/ChartTooltip/ChartTooltip.tsx#L28-L30))

In Summary:
- This bug is more coming from a differing charts setting carrying-over into the line charts territory.
- It is not reproduce-able on new questions created through the GUI.
- For existing questions, you can reset the behavior by switching to area chart with breakout, selecting `Don't Stack` setting, saving, removing the breakout, and then changing back to line chart

"
2167621465,issue,open,,Replace `clojure.java.jdbc` with `next.jdbc`,"`clojure.java.jdbc` is no longer active and `next.jdbc` is its successor, we should migrate to using it.",qnkhuat,2024-03-04 19:48:39+00:00,[],2024-05-30 18:28:10+00:00,,https://github.com/metabase/metabase/issues/39549,"[('Type:Tech Debt', 'or Refactoring'), ('.Performance', ''), ('.Backend', '')]","[{'comment_id': 1977394583, 'issue_id': 2167621465, 'author': 'paoliniluis', 'body': ""wait, what?\r\n```\r\nPerformance: there's a surprising amount of overhead in how ResultSet objects are converted to sequences of hash maps in clojure.java.jdbc – which can be really noticeable for large result sets – so I wanted a better way to handle that. There's also quite a bit of overhead and complexity in all the conditional logic and parsing that is associated with db-spec-as-hash-map.\r\n```"", 'created_at': datetime.datetime(2024, 3, 4, 20, 25, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2140584095, 'issue_id': 2167621465, 'author': 'camsaul', 'body': ""RE the performance thing, for that exact reason Toucan 2 is using `next.jdbc` already and we have completely custom JDBC code for QP stuff. We're really not using `clojure.java.jdbc` for a lot of stuff honestly, just for a small handful of things like actions and stuff like that"", 'created_at': datetime.datetime(2024, 5, 30, 18, 28, 8, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-04 20:25:29 UTC): wait, what?
```
Performance: there's a surprising amount of overhead in how ResultSet objects are converted to sequences of hash maps in clojure.java.jdbc – which can be really noticeable for large result sets – so I wanted a better way to handle that. There's also quite a bit of overhead and complexity in all the conditional logic and parsing that is associated with db-spec-as-hash-map.
```

camsaul on (2024-05-30 18:28:08 UTC): RE the performance thing, for that exact reason Toucan 2 is using `next.jdbc` already and we have completely custom JDBC code for QP stuff. We're really not using `clojure.java.jdbc` for a lot of stuff honestly, just for a small handful of things like actions and stuff like that

"
2167606136,issue,closed,not_planned,[dc.js migration] bar width and gap are different from old implementation,"https://metaboat.slack.com/archives/C06G94JTWBS/p1706192364885689
question/2535

<img width=""1624"" alt=""Screenshot 2024-03-04 at 11 38 49 AM"" src=""https://github.com/metabase/metabase/assets/37751258/d2be5abc-d842-49af-a09c-f8f74d4857ed"">

question/4146
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194466172559

<img width=""1634"" alt=""Screenshot 2024-03-04 at 1 42 19 PM"" src=""https://github.com/metabase/metabase/assets/37751258/bff1ec66-e603-4f7d-99f6-ab8a55962ac6"">

question/13088
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194516724769
<img width=""1437"" alt=""Screenshot 2024-03-04 at 1 43 21 PM"" src=""https://github.com/metabase/metabase/assets/37751258/b0724fd1-4268-4d6f-8bae-9365226de0fb"">

question/11506
https://metaboat.slack.com/archives/C06G94JTWBS/p1706194796771789
<img width=""1378"" alt=""Screenshot 2024-03-04 at 2 08 28 PM"" src=""https://github.com/metabase/metabase/assets/37751258/f20baccd-2d3c-4b5f-9174-1493836e60d2"">

question/15295",EmmadUsmani,2024-03-04 19:39:52+00:00,[],2024-05-24 14:55:31+00:00,2024-05-24 14:55:31+00:00,https://github.com/metabase/metabase/issues/39547,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.Team/DashViz', 'Dashboard and Viz team'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 2129731964, 'issue_id': 2167606136, 'author': 'cdeweyx', 'body': 'Low priority, can punt on this for now, closing as wont fix', 'created_at': datetime.datetime(2024, 5, 24, 14, 52, 31, tzinfo=datetime.timezone.utc)}]","cdeweyx on (2024-05-24 14:52:31 UTC): Low priority, can punt on this for now, closing as wont fix

"
2167555783,issue,closed,completed,incomplete data on png image download ,"### Describe the bug

i have an iframe made using and signed url and when i download the pie chart graph png it dose not shows the categorys.
 
![Visit Graph-3_5_2024, 12_00_00 AM](https://github.com/metabase/metabase/assets/125581538/e1f30f95-1376-4277-8ac1-86da7d7ad58f)


### To Reproduce

i have an iframe made using and signed url and when i download the pie chart graph png .the png dose not shows the categorys.


### Expected behavior

_No response_

### Logs

_No response_

### Information about your Metabase installation

```JSON
CHROME Version 121.0.6167.185 (Official Build) (64-bit)
WINDOWS 10
DATABASE MYSQL
METABASE V 0.48.7
HOSTING ENVIROMENT UBUNTU
INTERNAL DATABASE MYSQL
```


### Severity

 blocking your usage of Metabase

### Additional context

I DIFFICULT TO GENRATE REPORTS WITHOUT IMAGE FOR USERS ",MeharG811,2024-03-04 19:11:00+00:00,['alxnddr'],2024-07-03 17:37:40+00:00,2024-07-03 14:31:21+00:00,https://github.com/metabase/metabase/issues/39546,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Embedding/Static', 'Static embedding, previously known as signed embedding'), ('Visualization/Static', 'Subscriptions/pulse generated image'), ('Visualization/Download', ''), ('.Team/DashViz', 'Dashboard and Viz team')]","[{'comment_id': 1977724238, 'issue_id': 2167555783, 'author': 'paoliniluis', 'body': 'how are you able to download the png with signed embedding?', 'created_at': datetime.datetime(2024, 3, 5, 0, 26, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1978007833, 'issue_id': 2167555783, 'author': 'MeharG811', 'body': 'Used 3 dots button on card (top right side on card) ,=> clicked download =>\r\nclicked png\r\n\r\nOn Tue, 5 Mar 2024, 5:26 am Luis Paolini, ***@***.***> wrote:\r\n\r\n> how are you able to download the png with signed embedding?\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/metabase/metabase/issues/39546#issuecomment-1977724238>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/A56DRYRNXUM5TA2HBSJ53PLYWUGMDAVCNFSM6AAAAABEFYL6QKVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNZXG4ZDIMRTHA>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***>\r\n>', 'created_at': datetime.datetime(2024, 3, 5, 5, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1978887522, 'issue_id': 2167555783, 'author': 'paoliniluis', 'body': '@MeharG811 can you please post a video?', 'created_at': datetime.datetime(2024, 3, 5, 14, 22, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1980145187, 'issue_id': 2167555783, 'author': 'MeharG811', 'body': 'sure here is the link\r\nhttps://drive.google.com/file/d/1q--B3Pjdq4yRp48t2C_omOy2gOOiBJMT/view?usp=sharing', 'created_at': datetime.datetime(2024, 3, 6, 6, 3, 53, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-05 00:26:29 UTC): how are you able to download the png with signed embedding?

MeharG811 (Issue Creator) on (2024-03-05 05:43:00 UTC): Used 3 dots button on card (top right side on card) ,=> clicked download =>
clicked png

On Tue, 5 Mar 2024, 5:26 am Luis Paolini, ***@***.***> wrote:

paoliniluis on (2024-03-05 14:22:53 UTC): @MeharG811 can you please post a video?

MeharG811 (Issue Creator) on (2024-03-06 06:03:53 UTC): sure here is the link
https://drive.google.com/file/d/1q--B3Pjdq4yRp48t2C_omOy2gOOiBJMT/view?usp=sharing

"
2167396078,issue,closed,completed,[Testing plan] Highlight the selected data source in the notebook editor,"# Testing plan for #39542

## Dimensions
- Type of the query
    - Ad-hoc
    - Saved
- Type of the entity
    - Question
        - GUI
        - Native
    - Model
- Source-table
    - Table `:id`
    - Question `card__:id`
- Where was the entity saved (collection permissions play the role here)
    - Root collection
    - Personal collection
- How many data(bases) sources are there?
    - Only one
    - Multiple
",nemanjaglumac,2024-03-04 17:44:05+00:00,['nemanjaglumac'],2024-03-18 14:29:14+00:00,2024-03-18 14:28:46+00:00,https://github.com/metabase/metabase/issues/39544,"[('.Frontend', ''), ('.TestingStrategy/FE', ''), ('.Team/Querying', '')]",[],
2167393462,issue,closed,completed,[Epic] Highlight the selected data source in the notebook editor,"**Links**
- [product doc](https://www.notion.so/metabase/Highlight-the-selected-data-source-in-the-query-builder-877bf66e580543eb881fca601a714817)
- feature branch: `highlight-data-source`
- issue links: N/A
- [testing plan](https://github.com/metabase/metabase/issues/39544)

# Implementation Plan
This project is aiming to fix a family of the issues that all relate to the data picker experience. As such the natural sequencing and the progression would be to identify those issues first, and to work on them one by one. These are the dimensions we need to cover by the end of this project.
```[tasklist]
### Dimensions
- [x] Ad-hoc
- [x] Saved question (simple)
- [x] Saved question (nested)
- [x] Saved model (view + edit query definition)
```

## Milestone 0
This phase includes going over the existing code, cleaning up and preparing it for the work needed in other milestones.
```[tasklist]
## Cleanup and refactoring
- [ ] https://github.com/metabase/metabase/pull/39681
```

## Milestone 1
```[tasklist]
## Models
- [ ] #39699
```

## Milestone 2
```[tasklist]
## Multi-schema
- [ ] #39807 
```

## Milestone 3
```[tasklist]
## The source collection
- [ ] #39812 
```

## Milestone 4
```[tasklist]
- [ ] #25142
- [ ] #40199
```

--- 

# Out of scope
Anything that requires significantly rewriting the data picker component is out of the scope of this project. There is a new entity picker that should replace the existing data picker, anyway. Everything that is thematically related will be listed below:
- https://github.com/metabase/metabase/issues/40223
- https://github.com/metabase/metabase/issues/20406
- Edge cases:
    - What happens if the source question/model gets archived or deleted?
    - What happens if the source question gets turned into a model and vice versa?


",nemanjaglumac,2024-03-04 17:42:33+00:00,['nemanjaglumac'],2024-03-19 20:44:27+00:00,2024-03-18 14:28:45+00:00,https://github.com/metabase/metabase/issues/39542,"[('Querying/Notebook', 'Items specific to the Custom/Notebook query builder'), ('.Epic', 'Feature Implementation or Project'), ('.Team/Querying', '')]",[],
2167281203,issue,open,,Unexpected yearmonth when aggregating in Snowflake,"### Describe the bug

when using a SQL query on Snowflake, we obtain a dataset with items created and the created_date.  The first items were created on October, 4th 2023.  However, when doing an aggregation to count rows by YearMonth, these first items appear to be created on September'23.  In other words, when aggregating, the YearMonth is the previous one as the expected one.  

![image](https://github.com/metabase/metabase/assets/52322349/2cd688f9-f25e-45d7-9c66-65f196f16892)


### To Reproduce

1. Go to create a model based on a table in Snowflake where you have items created on a given created_date
2. First items were created on October, 4th 2023.  Other in November, december, Jan 24, feb 24...
3. The model provides a list of items created with the correct created date, starting on October, 4th
4. Create an aggregation, using that dataset, metric is count of rows and dimension is Created Date ->YearMonth
5. You will see that the first month is September 23 and the last is Feb,24 instead of October 23 and March 24 respectivelly.



### Expected behavior

If the created date is October, 5th 2023, the month should be October 23 , not September 23

### Logs

_No response_

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""en"",
    ""platform"": ""Win32"",
    ""userAgent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""Cp1252"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.16.1+1"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.16.1"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.16.1+1"",
    ""os.name"": ""Windows Server 2016"",
    ""os.version"": ""10.0"",
    ""user.language"": ""en"",
    ""user.timezone"": ""UTC""
  },
  ""metabase-info"": {
    ""databases"": [
      ""mysql"",
      ""sqlserver"",
      ""snowflake"",
      ""h2""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""mysql"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""MySQL"",
        ""version"": ""8.0.33""
      },
      ""jdbc-driver"": {
        ""name"": ""MariaDB Connector/J"",
        ""version"": ""2.7.10""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-02-22"",
      ""tag"": ""v0.48.7"",
      ""hash"": ""c192db1""
    },
    ""settings"": {
      ""report-timezone"": null
    }
  }
}
```


### Severity

High

### Additional context

*  Our current Metabase instance has many databases connected, some are mysql, some snowflake, postgres, etc
* Our default Metabase timezone is ""Report Timezone"".
* If I run ""select current_timestamp() in the SQL editor, the Snowflake intance returns the UTC time.
",jcorrea-tkww,2024-03-04 16:42:55+00:00,[],2025-02-04 20:27:55+00:00,,https://github.com/metabase/metabase/issues/39538,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Querying/Processor', ''), ('Database/Snowflake', ''), ('.Backend', ''), ('.Team/Drivers', '')]",[],
2167167891,issue,open,,Filter out csv uploads in models in browse data,"Following on from https://github.com/metabase/metabase/issues/36368

We're not sure if csv upload models are noise or not in models in browse data. As @kdoh put it eloquently, 

> I’m broadly into it. I think my only hesitation comes from a lack of understanding of how important provenance is over the longer arc of the model’s life and therefore I’m not super clear on where that would go. Like after 2 years does that need to be a lanyard it wears around its neck, or a card it has in its wallet?

So it's not clear if we want to do this or not, or perhaps some UI indicator, etc.",dpsutton,2024-03-04 15:50:31+00:00,[],2024-03-04 15:50:32+00:00,,https://github.com/metabase/metabase/issues/39530,"[('Administration/', ''), ('.Team/AdminWebapp', 'Admin and Webapp team'), ('Organization/Uploads', 'Direct data upload (CSV)'), ('Organization/Browse Data', '')]",[],
2167097882,issue,closed,completed,Entity Picker Recents Tab,"[Product Doc](https://www.notion.so/metabase/Add-Recents-tab-to-the-new-EntityPicker-component-895cd80f2b0f4e56a008a82b436c3a00)

Prerequisites
- [x] https://github.com/metabase/metabase/pull/41846
- [x] https://github.com/metabase/metabase/pull/41851
- [x] https://github.com/metabase/metabase/pull/42009
- [x] https://github.com/metabase/metabase/pull/42239
- [x] https://github.com/metabase/metabase/pull/42305

This Task:
- [x] implement in collection picker
- [x] implement in question picker
- [x] implement in dashboard picker
- backend changes required
  - need to be able to set number of items via query param
  - need to be able to save up to 20 items of each type
  - probably need to readjust payloads - would probably be nice if it aligned more closely with search or collection items",iethree,2024-03-04 15:18:02+00:00,['iethree'],2024-05-14 18:51:18+00:00,2024-05-14 15:19:29+00:00,https://github.com/metabase/metabase/issues/39528,"[('Type:New Feature', '')]",[],
2166955242,issue,closed,completed,Remove Audit v1,"**Context**
We released Audit v2 on 48 and it is time to remove Audit v1.

- Remove it from FE (permissions and audit tab)
- Remove it from BE (permissions and audit tab functionality)


",luizarakaki,2024-03-04 14:15:28+00:00,"['iethree', 'noahmoss']",2024-03-06 21:23:35+00:00,2024-03-06 21:23:35+00:00,https://github.com/metabase/metabase/issues/39523,"[('Administration/Usage analytics', 'Pro and Enterprise meta analytics, fka audit'), ('.Task', 'Not a part of any Epic, used by the Task Issue Template'), ('.Team/AdminWebapp', 'Admin and Webapp team')]",[],
2166940180,issue,closed,not_planned,Incorrect display name of a drill filter based on a temporal extraction,"### Describe the bug


https://github.com/metabase/metabase/assets/6830683/2ca1f1f2-48a6-4082-b781-3c5c814fdba5



### To Reproduce

1. Create a question: Orders, summarize by Count, group by Created At: **Day of Week**
2. Visualize it
3. Click the bar for Friday
4. Click ""See these orders""
5. Examine the name of filter in filter pills

Filter is called ""Created At: Day of week is equal to 6""

### Expected behavior

Filter is called ""Created At is Friday""

### Information about your Metabase installation

master, a926009707


### Severity

P2

### Additional context

Found here: https://github.com/metabase/metabase/pull/39510#pullrequestreview-1914357985

This filter name comes from MLv2: https://github.com/metabase/metabase/blob/2aa3cec610588238132afbc789da0845c7c2ec5d/frontend/src/metabase/querying/components/FilterPanel/FilterPanelPopover/FilterPanelPopover.tsx#L51

----

Please update these assertions when fixing this issue:
- https://github.com/metabase/metabase/pull/39510/files#diff-0d56b267fa32819f4562ff2af8f8476606cb0a8434043561c7dc2979e0dc7b31R46
- https://github.com/metabase/metabase/pull/39510/files#diff-0d56b267fa32819f4562ff2af8f8476606cb0a8434043561c7dc2979e0dc7b31R51

----

This is how it used to work in v47:
https://github.com/metabase/metabase/assets/6830683/1fdcb100-1b43-4ce9-81b1-5642b67dea80
",kamilmielnik,2024-03-04 14:08:39+00:00,[],2024-08-22 16:48:14+00:00,2024-08-22 16:48:13+00:00,https://github.com/metabase/metabase/issues/39520,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Querying/MBQL', ''), ('.Backend', ''), ('.Regression', 'Bugs that were previously fixed and/or bugs unintentionally shipped with new features.'), ('.Team/Querying', '')]","[{'comment_id': 2305211300, 'issue_id': 2166940180, 'author': 'ranquild', 'body': 'This is not a bug. We transform names of weeks only in viz.', 'created_at': datetime.datetime(2024, 8, 22, 16, 48, 13, tzinfo=datetime.timezone.utc)}]","ranquild on (2024-08-22 16:48:13 UTC): This is not a bug. We transform names of weeks only in viz.

"
2166867199,issue,open,,Option to open custom destination for dashboard click behavior in new tab,"**Is your feature request related to a problem? Please describe.**
When doing click behavior and setting it to a ""custom destination"", Metabase will not open a new tab but open the new destination in the same one. That can be painful or difficult for some users, and it can get in the way of their data insights.


**Describe the solution you'd like**
Option to set open in a new browser tab in click behavior settings
![Screenshot 2024-03-04 at 10 28 00 AM](https://github.com/metabase/metabase/assets/132273646/39623527-cead-432c-aded-5db3966266e0)


**Describe alternatives you've considered**
Cmd+ click, ctrl + click, but some users may not know that

**How important is this feature to you?**
Requested by a customer (internal ticket 25385). Customer feedback: ""This way, a user can return to the original dashboard easily without having to go through the entire navigation again.""

**Additional context**
N/A",ignacio-mb,2024-03-04 13:35:37+00:00,[],2025-02-04 20:30:15+00:00,,https://github.com/metabase/metabase/issues/39516,"[('Type:New Feature', ''), ('Reporting/Dashboards/Click Behavior', '')]",[],
2166835731,issue,closed,completed,"`addField` and `removeField` do not work with `joinableColumns(query, stageIndex, join)`","### Describe the bug

Blocks https://github.com/metabase/metabase/pull/39509

When using `addField` and `removeField` on columns obtained from `joinableColumns`, the query remains unchanged. For some reason both functions work without issues if used with columns from `visibleColumns`.

### To Reproduce

```
// query has joins
const [join] = Lib.joins(query, stageIndex);
const columns = Lib.joinableColumns(query, stageIndex, join);
const newQuery = Lib.removeField(query, stageIndex, columns[0]); // no effect
```

### Expected behavior

It should work as with `visibleColumns`

### Logs

_No response_

### Information about your Metabase installation

```JSON
master
```


### Severity

Blocks an important performance fix

### Additional context

_No response_",ranquild,2024-03-04 13:20:04+00:00,[],2024-08-28 02:12:20+00:00,2024-03-04 17:43:06+00:00,https://github.com/metabase/metabase/issues/39514,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Querying/MBQL', ''), ('.Backend', ''), ('.Team/Querying', '')]",[],
2166643196,issue,closed,completed,Query builder silently fails on duplicate custom column names,"### Describe the bug

While reporting [this issue](https://github.com/metabase/metabase/issues/39150), I noticed that we silently fail when adding a custom expression that has the same name as an existing column. This is bad practice and we should alert the user in this case. Ideally, we should allow this behavior even.

### To Reproduce

1. New question
2. Name a custom expression the same as a column, it does not get added

### Expected behavior

Show the user an error that the name already exists

### Logs

_No response_

### Information about your Metabase installation

```JSON
stats
```


### Severity

P2

### Additional context

_No response_",perivamsi,2024-03-04 11:43:27+00:00,['kamilmielnik'],2024-08-28 02:12:20+00:00,2024-03-07 06:50:02+00:00,https://github.com/metabase/metabase/issues/39508,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Backend', ''), ('Querying/Notebook/Custom Expression', ''), ('.Team/Querying', '')]","[{'comment_id': 1978444240, 'issue_id': 2166643196, 'author': 'perivamsi', 'body': 'This seems to be fixed in master\r\n\r\n@kamilmielnik can you confirm?', 'created_at': datetime.datetime(2024, 3, 5, 10, 31, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1980440324, 'issue_id': 2166643196, 'author': 'kamilmielnik', 'body': 'Can reproduce in 0.49.0-RC1.\r\nCannot reproduce in 0.49.0-RC2.\r\nCannot reproduce in `master` at d9507f2af8741a8389c78324b5871a8a6266c2a2.', 'created_at': datetime.datetime(2024, 3, 6, 9, 29, 2, tzinfo=datetime.timezone.utc)}]","perivamsi (Issue Creator) on (2024-03-05 10:31:07 UTC): This seems to be fixed in master

@kamilmielnik can you confirm?

kamilmielnik (Assginee) on (2024-03-06 09:29:02 UTC): Can reproduce in 0.49.0-RC1.
Cannot reproduce in 0.49.0-RC2.
Cannot reproduce in `master` at d9507f2af8741a8389c78324b5871a8a6266c2a2.

"
2166619380,issue,open,,Automatically select join condition for self-joined tables,"### Describe the bug


https://github.com/metabase/metabase/assets/6830683/55bf330d-0577-47a6-acec-6f9fe08fb84f



### To Reproduce

1. Start a new question based on Orders table
2. Join Orders table to itself



### Expected behavior

Join condition (ID = ID) is automatically selected


### Information about your Metabase installation

master, 950a275387


### Severity

P2

### Additional context

Similar to #39448, but different

Originally reported as a bug, but it was never intended to work this way, so changing to a feature request.
See [Slack conversation](https://metaboat.slack.com/archives/C05NXACAG1G/p1709551840690029).",kamilmielnik,2024-03-04 11:30:26+00:00,[],2024-03-04 11:35:11+00:00,,https://github.com/metabase/metabase/issues/39506,"[('Type:New Feature', ''), ('.Frontend', ''), ('Querying/GUI', 'Query builder catch-all, including simple mode'), ('.Team/Querying', '')]",[],
2166596041,issue,closed,completed,Pivot table disappears,"### Describe the bug

https://github.com/metabase/metabase/assets/6830683/573555e2-3a45-4bd1-82a4-dc1e8706a549



### To Reproduce

1. Create a new question with 2 aggregations and 1 breakout, [like this](https://github.com/metabase/metabase/assets/6830683/44faf1d0-3d5d-4dfc-929a-525901b74344)
2. Visualize it
3. Change visualization type to Pivot table
4. Open notebook editor
5. Close notebook editor




### Expected behavior

Pivot table is shown


### Information about your Metabase installation

`master`, 950a275387,

It works in 0.48.0, 0.49.0-RC1


### Severity

P2
",kamilmielnik,2024-03-04 11:18:06+00:00,['nemanjaglumac'],2024-07-09 18:02:49+00:00,2024-07-05 07:46:47+00:00,https://github.com/metabase/metabase/issues/39504,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Frontend', ''), ('Querying/', ''), ('.Regression', 'Bugs that were previously fixed and/or bugs unintentionally shipped with new features.'), ('.Already Fixed', 'will apear in ""Already Fixed"" in the release notes (not ""Bug Fixes"" that we actively fixed)'), ('.Team/Querying', '')]","[{'comment_id': 2206088991, 'issue_id': 2166596041, 'author': 'nemanjaglumac', 'body': ""Can't reproduce in `master`, but it's still present in `v50`.\r\nI'll add an E2E repro for this soon."", 'created_at': datetime.datetime(2024, 7, 3, 13, 32, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2209421588, 'issue_id': 2166596041, 'author': 'nemanjaglumac', 'body': 'Interesting.\r\nI am not able to reproduce it using the latest `0.50.10` JAR, but I was able to repro it on `0.50.7`\r\n\r\nhttps://www.loom.com/share/5851ca426f2340ac9d72d3f86fb7795a?sid=4b789f0f-5e6f-4a83-97d5-616ea87dbd05', 'created_at': datetime.datetime(2024, 7, 4, 18, 8, 56, tzinfo=datetime.timezone.utc)}]","nemanjaglumac (Assginee) on (2024-07-03 13:32:17 UTC): Can't reproduce in `master`, but it's still present in `v50`.
I'll add an E2E repro for this soon.

nemanjaglumac (Assginee) on (2024-07-04 18:08:56 UTC): Interesting.
I am not able to reproduce it using the latest `0.50.10` JAR, but I was able to repro it on `0.50.7`

https://www.loom.com/share/5851ca426f2340ac9d72d3f86fb7795a?sid=4b789f0f-5e6f-4a83-97d5-616ea87dbd05

"
2166555639,issue,closed,completed,[Epic] Make “Doing Science” less ambiguous for long-running queries,"- [product doc](https://www.notion.so/metabase/Make-Doing-Science-less-ambiguous-for-long-running-queries-b720f9d9ec144afcbda2edc463f2e596)
- feature branch: `39503-less-ambiguous-loading-state` 
- issues: #31135

**Implementation Plan**


```[tasklist]
### 1. Doing Science
- [ ] https://github.com/metabase/metabase/issues/39615
```

```[tasklist]
### 2. Dashboard cards
- [ ] https://github.com/metabase/metabase/issues/39620
```
",romeovs,2024-03-04 10:58:11+00:00,['romeovs'],2024-03-12 07:27:17+00:00,2024-03-12 07:27:17+00:00,https://github.com/metabase/metabase/issues/39503,"[('.Epic', 'Feature Implementation or Project')]",[],
2166390292,issue,closed,not_planned,Snowflake Views not visible,"### Describe the bug

I used to use Snowflake with tables, but now the data supplier (external company) is changing these tables to views.

Now I got one table which is available as a view, not as a table. DM.""Polis_variabel""' was the table name. The view name is DM.""POLIS VARIABEL"".

If I do;
SELECT * FROM DM.""POLIS VARIABEL""
it works in Snowflake.

However, I can't see the table in the data explorer or in the dropdowns. Even after refreshing the database scheme in the admin settings.



### To Reproduce

Have Snowflake with Metabase v0.47.1 and try to find the views in the data explorer.

### Expected behavior

_No response_

### Logs

_No response_

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""nl-NL"",
    ""platform"": ""Win32"",
    ""userAgent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.20.1+1"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.20.1"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.20.1+1"",
    ""os.name"": ""Linux"",
    ""os.version"": ""5.14.0-284.30.1.el9_2.x86_64"",
    ""user.language"": ""en"",
    ""user.timezone"": ""GMT""
  },
  ""metabase-info"": {
    ""databases"": [
      ""snowflake"",
      ""mongo"",
      ""mysql"",
      ""postgres""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""mysql"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""MySQL"",
        ""version"": ""8.0.32""
      },
      ""jdbc-driver"": {
        ""name"": ""MariaDB Connector/J"",
        ""version"": ""2.7.6""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2023-09-07"",
      ""tag"": ""v0.47.1"",
      ""branch"": ""release-x.47.x"",
      ""hash"": ""bd278b9""
    },
    ""settings"": {
      ""report-timezone"": ""Europe/Amsterdam""
    }
  }
}
```


### Severity

Blocking usage of Metabase for all users who are not using SQL queries

### Additional context

_No response_",matisup10,2024-03-04 09:36:23+00:00,[],2024-03-04 11:03:17+00:00,2024-03-04 11:03:16+00:00,https://github.com/metabase/metabase/issues/39499,"[('Type:Bug', 'Product defects'), ('.Needs Triage', '')]","[{'comment_id': 1976324079, 'issue_id': 2166390292, 'author': 'paoliniluis', 'body': 'Fixed in v48, please upgrade', 'created_at': datetime.datetime(2024, 3, 4, 11, 3, 16, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-04 11:03:16 UTC): Fixed in v48, please upgrade

"
2166148667,issue,closed,not_planned,uberjar become larger after everytime build,"### Describe the bug

I build the metabase uberjar use  './bin/build.sh'. The metabase.jar in targert became larger after everytime build.
The first time is more than 300MB, and it became more than 500MB.

### To Reproduce

1. git clone the metabase repo.
2. exec './bin/build.sh'
3. see the size of metabase.jar in target/uberjar


### Expected behavior

_No response_

### Logs

_No response_

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""zh-CN"",
    ""platform"": ""MacIntel"",
    ""userAgent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""Java(TM) SE Runtime Environment"",
    ""java.runtime.version"": ""17.0.9+11-LTS-201"",
    ""java.vendor"": ""Oracle Corporation"",
    ""java.vendor.url"": ""https://java.oracle.com/"",
    ""java.version"": ""17.0.9"",
    ""java.vm.name"": ""Java HotSpot(TM) 64-Bit Server VM"",
    ""java.vm.version"": ""17.0.9+11-LTS-201"",
    ""os.name"": ""Mac OS X"",
    ""os.version"": ""14.0"",
    ""user.language"": ""zh"",
    ""user.timezone"": ""Asia/Shanghai""
  },
  ""metabase-info"": {
    ""databases"": [
      ""h2""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""mysql"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""MySQL"",
        ""version"": ""8.0.32""
      },
      ""jdbc-driver"": {
        ""name"": ""MariaDB Connector/J"",
        ""version"": ""2.7.10""
      }
    },
    ""run-mode"": ""dev"",
    ""version"": {
      ""date"": ""2024-03-01"",
      ""tag"": ""v0.49.0-SNAPSHOT"",
      ""hash"": ""44f614c""
    },
    ""settings"": {
      ""report-timezone"": null
    }
  }
}
```


### Severity

slight

### Additional context

_No response_",wanyakun,2024-03-04 07:44:23+00:00,[],2024-03-05 00:41:51+00:00,2024-03-05 00:41:51+00:00,https://github.com/metabase/metabase/issues/39498,"[('Type:Bug', 'Product defects'), ('.Needs Triage', '')]","[{'comment_id': 1977737782, 'issue_id': 2166148667, 'author': 'paoliniluis', 'body': 'First try with master\r\n![image](https://github.com/metabase/metabase/assets/1711649/f5230dab-5561-496f-a9fd-7248bc1dccf4)\r\n\r\nsecond try \r\n![image](https://github.com/metabase/metabase/assets/1711649/a9e805dd-d2a3-4d5e-bb2d-810e5344a14b)\r\n\r\nthe reason is that we delete the JAR on every build', 'created_at': datetime.datetime(2024, 3, 5, 0, 41, 47, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-05 00:41:47 UTC): First try with master
![image](https://github.com/metabase/metabase/assets/1711649/f5230dab-5561-496f-a9fd-7248bc1dccf4)

second try 
![image](https://github.com/metabase/metabase/assets/1711649/a9e805dd-d2a3-4d5e-bb2d-810e5344a14b)

the reason is that we delete the JAR on every build

"
2165614150,issue,open,,Question mark (?) in the SQL breaks custom JSON parsing,"### Describe the bug

I have a query that uses a jsonb function (jsonb_path_query_array), which allows me to navigate through the JSON data and select specific things. The problem I am having is that as part of my function parameter, I make use of the symbol ""?"" to navigate the JSON. Metabase is wrongly interpreting this as a var and replacing it with my actual variables, and then leaving my variables in the query as ""?"".

### To Reproduce

Given the following query:
```sql
SELECT
	count(*),
	(jsonb_path_query_array tb. ""responseData"",
			'$.sections[*] ? (@.name == ""SOME_NAME"").radioButtons[*] ? (@.checked == true).label') ->> 0) AS ""Category""
FROM
	""Template"" t
WHERE
	AND t. ""createdAt"" <= {{ dateFrom }}::timestamp
	AND t. ""createdAt"" >= {{ dateTo }}::timestamp
GROUP BY
	""Category""
```

When previewing the query, this is the result:
```sql
SELECT
	count(*),
	(jsonb_path_query_array (t. ""responseData"",
			'$.sections[*] date '2024-03-01' (@.name == ""SOME_NAME"").radioButtons[*] date '2024-03-31' (@.checked == true).label') ->> 0) AS ""Category""
FROM
	""Template"" t
WHERE

   AND t. ""createdAt"" <= ?::timestamp
	AND t. ""createdAt"" >= ?::timestamp
GROUP BY
	""Category""
```

Metabse replaces the `?` inside the `jsonb_path_query_array` function, thus returning 0 results from the DB.

I can perfectly run this query if I don't use variables.

### Expected behavior

I'd expect the query to replace the variables dateFrom and dateTo and run as expected, instead of replacing the wrong ""?"" in the query

### Logs

_No response_

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""en-GB"",
    ""platform"": ""MacIntel"",
    ""userAgent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.22+7"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.22"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.22+7"",
    ""os.name"": ""Linux"",
    ""os.version"": ""5.10.209-198.812.amzn2.x86_64"",
    ""user.language"": ""en"",
    ""user.timezone"": ""GMT""
  },
  ""metabase-info"": {
    ""databases"": [
      ""postgres"",
      ""h2""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""postgres"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""PostgreSQL"",
        ""version"": ""14.10""
      },
      ""jdbc-driver"": {
        ""name"": ""PostgreSQL JDBC Driver"",
        ""version"": ""42.6.0""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-02-22"",
      ""tag"": ""v1.48.7"",
      ""hash"": ""c192db1""
    },
    ""settings"": {
      ""report-timezone"": null
    }
  }
}
```


### Severity

Blocking from using the service

### Additional context

_No response_",rafavalerio,2024-03-03 23:09:44+00:00,[],2025-02-04 20:28:31+00:00,,https://github.com/metabase/metabase/issues/39495,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Querying/Processor', ''), ('.Limitation', ''), ('Querying/Native', 'The SQL/native query editor'), ('.Backend', ''), ('.Team/Querying', '')]","[{'comment_id': 1976863287, 'issue_id': 2165614150, 'author': 'paoliniluis', 'body': 'related to https://github.com/metabase/metabase/issues/32543 and probably to https://github.com/metabase/metabase/issues/39353', 'created_at': datetime.datetime(2024, 3, 4, 15, 37, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1979797988, 'issue_id': 2165614150, 'author': 'rafavalerio', 'body': 'Hi @paoliniluis, any rough ETA on this fix being released? Cheers.', 'created_at': datetime.datetime(2024, 3, 5, 23, 15, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2201298115, 'issue_id': 2165614150, 'author': 'camsaul', 'body': 'This is a limitation, since `?` in JDBC is interpreted as a parameter placeholder you have to escape Postgres JSON operators and use `??` instead.\r\n\r\nDuplicate of #1964', 'created_at': datetime.datetime(2024, 7, 1, 22, 51, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2203048226, 'issue_id': 2165614150, 'author': 'luizarakaki', 'body': ""Moving this to P3, as there is a very reasonable workaround and we don't expect to fix this anytime soon."", 'created_at': datetime.datetime(2024, 7, 2, 12, 34, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2311400832, 'issue_id': 2165614150, 'author': 'rafavalerio', 'body': 'Fair, just an FYI, using `??` doesn\'t work for me in this scenario:\r\n\r\n```SQL\r\nSELECT\r\n    jsonb_path_query_array(\r\n        tr.""responseData"",\r\n        \'$.** ?? (@.name == ""Approximate Cost to Rectify $"" && @.type == ""radio"").radioButtons[*] ?? (@.checked == true).label\'\r\n    )->>0 AS ""CheckedOptions"",\r\n        jsonb_path_query_array(\r\n        tr.""responseData"",\r\n        \'$.** ?? (@.name == ""Issued To:"" && @.type == ""text"").value\'\r\n    )->>0 AS ""Issued""\r\nFROM\r\n    ""TemplateResponse"" tr\r\n    LEFT JOIN ""Project"" p ON tr. ""projectId"" = p.id\r\nWHERE\r\n    tr. ""templateId"" = \'123\'\r\n    AND tr. ""archivedAt"" IS NULL\r\n    AND tr. ""completedAt"" IS NOT NULL\r\n    AND p.status != \'ARCHIVED\'\r\n    [[AND tr.""createdAt"" BETWEEN {{DateFrom}} AND {{DateTo}}]]\r\n```\r\n\r\nAll I get is: `ERROR: syntax error at or near ""?"" of jsonpath input Position: 189`\r\n\r\nI\'ve been resorting to other methods to extract the data I need from `jsonb` columns, which makes the job much harder and more complex, but it\'s the only way for now.', 'created_at': datetime.datetime(2024, 8, 27, 1, 35, 43, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-04 15:37:13 UTC): related to https://github.com/metabase/metabase/issues/32543 and probably to https://github.com/metabase/metabase/issues/39353

rafavalerio (Issue Creator) on (2024-03-05 23:15:09 UTC): Hi @paoliniluis, any rough ETA on this fix being released? Cheers.

camsaul on (2024-07-01 22:51:58 UTC): This is a limitation, since `?` in JDBC is interpreted as a parameter placeholder you have to escape Postgres JSON operators and use `??` instead.

Duplicate of #1964

luizarakaki on (2024-07-02 12:34:31 UTC): Moving this to P3, as there is a very reasonable workaround and we don't expect to fix this anytime soon.

rafavalerio (Issue Creator) on (2024-08-27 01:35:43 UTC): Fair, just an FYI, using `??` doesn't work for me in this scenario:

```SQL
SELECT
    jsonb_path_query_array(
        tr.""responseData"",
        '$.** ?? (@.name == ""Approximate Cost to Rectify $"" && @.type == ""radio"").radioButtons[*] ?? (@.checked == true).label'
    )->>0 AS ""CheckedOptions"",
        jsonb_path_query_array(
        tr.""responseData"",
        '$.** ?? (@.name == ""Issued To:"" && @.type == ""text"").value'
    )->>0 AS ""Issued""
FROM
    ""TemplateResponse"" tr
    LEFT JOIN ""Project"" p ON tr. ""projectId"" = p.id
WHERE
    tr. ""templateId"" = '123'
    AND tr. ""archivedAt"" IS NULL
    AND tr. ""completedAt"" IS NOT NULL
    AND p.status != 'ARCHIVED'
    [[AND tr.""createdAt"" BETWEEN {{DateFrom}} AND {{DateTo}}]]
```

All I get is: `ERROR: syntax error at or near ""?"" of jsonpath input Position: 189`

I've been resorting to other methods to extract the data I need from `jsonb` columns, which makes the job much harder and more complex, but it's the only way for now.

"
2164499296,issue,closed,completed,Calendar widget jumps when switching months,"### Describe the bug

When the calendar widget is opened and you switch months, the height of the widget depends on the months selected and it jumps every other time.
If you open it from bottom between filter for the [timeseries chart like this](https://stats.metabase.com/question/16356-orders-count-grouped-by-year-and-created-at-month-of-year-filtered-by-year-is-between-2023-and-2024) you have to move mouse cursor to catch the running next month button which is pretty annoying when you want to click through several months.
<img width=""1470"" alt=""Captura de ecrã 2024-03-02, às 02 42 16"" src=""https://github.com/metabase/metabase/assets/777800/15476f1f-c842-4380-81a3-2b2cb757f9e2"">
<img width=""1470"" alt=""Captura de ecrã 2024-03-02, às 02 42 23"" src=""https://github.com/metabase/metabase/assets/777800/9737ae43-b53e-4af5-bf45-5f9cfced09a7"">
If you open it from the chill mode Filter button, the Update filter button jumps.
<img width=""831"" alt=""Captura de ecrã 2024-03-02, às 02 56 23"" src=""https://github.com/metabase/metabase/assets/777800/ab865c57-51fc-4429-98dc-af5b2c8ca440"">
<img width=""837"" alt=""Captura de ecrã 2024-03-02, às 02 56 32"" src=""https://github.com/metabase/metabase/assets/777800/6de75f7f-21be-4fc7-96c6-25aab04792e1"">
If you open it from the query builder Filter button, the Update filter button is cropped
<img width=""647"" alt=""Captura de ecrã 2024-03-02, às 02 57 12"" src=""https://github.com/metabase/metabase/assets/777800/c8cc1857-285d-4859-ba49-60df8a324c59"">


### To Reproduce

1. Click Between in any Filter menu
2. Click next or previous month in the calendar widget several times
3. The widget height changes depending on the months chosen

### Expected behavior

The calendar widget height should be fixed, the buttons should not move or be cropped

### Logs

_No response_

### Information about your Metabase installation

```JSON
stats.metabase.com
```


### Severity

Just annoying

### Additional context

_No response_",mngr,2024-03-02 02:03:22+00:00,['kamilmielnik'],2024-07-23 14:55:45+00:00,2024-07-23 14:27:33+00:00,https://github.com/metabase/metabase/issues/39487,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Frontend', ''), ('Querying/GUI', 'Query builder catch-all, including simple mode'), ('.Reproduced', 'Issues reproduced in test (usually Cypress)'), ('.Team/Querying', '')]",[],
2164407836,issue,closed,completed,[dc.js migration] funnel bars are misaligned in app,"<img width=""718"" alt=""Screenshot 2024-03-01 at 4 19 33 PM"" src=""https://github.com/metabase/metabase/assets/37751258/480847ee-3baa-4971-b0f4-3a710df4215f"">

http://localhost:3000/question/267-funnel-bar-user-flow

Doesn't happen in static viz",EmmadUsmani,2024-03-02 00:22:19+00:00,['alxnddr'],2024-03-06 23:11:45+00:00,2024-03-06 23:11:45+00:00,https://github.com/metabase/metabase/issues/39483,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 1981902842, 'issue_id': 2164407836, 'author': 'alxnddr', 'body': 'Can you reproduce this? It works for me\r\n\r\n<img width=""569"" alt=""Screenshot 2024-03-06 at 7 12 20\u202fPM"" src=""https://github.com/metabase/metabase/assets/14301985/1b7e4b02-c976-4b70-8b4c-cd7e24eda65e"">', 'created_at': datetime.datetime(2024, 3, 6, 22, 13, 5, tzinfo=datetime.timezone.utc)}]","alxnddr (Assginee) on (2024-03-06 22:13:05 UTC): Can you reproduce this? It works for me

<img width=""569"" alt=""Screenshot 2024-03-06 at 7 12 20 PM"" src=""https://github.com/metabase/metabase/assets/14301985/1b7e4b02-c976-4b70-8b4c-cd7e24eda65e"">

"
2164315692,issue,closed,completed,Implement RTK Query in a few places to prove its functionality,"- https://github.com/metabase/metabase/pull/39273
- https://github.com/metabase/metabase/pull/39270
- https://github.com/metabase/metabase/pull/39266
- https://github.com/metabase/metabase/pull/39179
- https://github.com/metabase/metabase/pull/39092",iethree,2024-03-01 22:54:47+00:00,"['sloansparger', 'iethree']",2024-03-12 19:27:37+00:00,2024-03-12 19:27:37+00:00,https://github.com/metabase/metabase/issues/39482,[],[],
2164314205,issue,closed,completed,Document/evaluate refactoring backlog for bare/bespoke api requests.,"Here are all the places we fetch data on the frontend:

https://www.notion.so/metabase/06ae949fd8754839ab16effc1fa08849?v=168b3d0586534894ba9646aca7a26f62",iethree,2024-03-01 22:52:49+00:00,['iethree'],2024-03-01 22:54:09+00:00,2024-03-01 22:53:55+00:00,https://github.com/metabase/metabase/issues/39481,[],[],
2164226218,issue,closed,completed,Command Palette Component,,npfitz,2024-03-01 21:40:45+00:00,[],2024-03-22 14:16:13+00:00,2024-03-22 14:16:13+00:00,https://github.com/metabase/metabase/issues/39479,[],[],
2164165444,issue,closed,not_planned,"Allow Admin To Display ""Browse Data"" Screen in ERD Format.","**Is your feature request related to a problem? Please describe.**
Not related to a problem, but I'd like to help my users understand the concept of data modelling better. 
They interact with the data via Metabase, it would be nice if they could browse the data in a way that indicated the underlying model of the data.

**Describe the solution you'd like**
Id like the ""Browse Data"" screen to be an ERD. Users can see relationships between tables via this screen. They could also (still) click a tile to open it up and view the data.

**Additional context**
If multiple schemas are present, this may get complicated if relationships are across schemas?
",MrChadMWood,2024-03-01 20:57:34+00:00,[],2024-05-10 15:24:36+00:00,2024-05-10 15:24:36+00:00,https://github.com/metabase/metabase/issues/39478,"[('Type:New Feature', ''), ('.Needs Triage', '')]","[{'comment_id': 1973955329, 'issue_id': 2164165444, 'author': 'paoliniluis', 'body': 'maybe duplicate of https://github.com/metabase/metabase/issues/25956?', 'created_at': datetime.datetime(2024, 3, 1, 21, 34, 49, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-01 21:34:49 UTC): maybe duplicate of https://github.com/metabase/metabase/issues/25956?

"
2164136568,issue,closed,completed,State of the FE gets lost on detail views when there are multiple joins to the same tables,"### Describe the bug

If you build a question with lots of joins to the same table (e.g. orders join people join people join products join products) and you make quick clicks to detail views, then the frontend gets lost and shows details from other items.

### To Reproduce

1) create a question like 
![image](https://github.com/metabase/metabase/assets/1711649/3dd4130b-9730-4fee-968c-a2f48d5d72b3)

2) visualize it and click on the item details, you'll see that everything works
3) now click quickly switch between ids, clicking quickly and not even letting the rendering to finish, see that the ID's will show wrongly


### Expected behavior

We should show the correct object

### Logs

NA

### Information about your Metabase installation

```JSON
v49.x, but this has been like this since forever
```


### Severity

P1

### Additional context

![uimiss](https://github.com/metabase/metabase/assets/1711649/72873c37-07f0-4ea3-866a-f715fcf1949c)
",paoliniluis,2024-03-01 20:37:54+00:00,['uladzimirdev'],2024-04-03 13:18:59+00:00,2024-04-03 12:32:31+00:00,https://github.com/metabase/metabase/issues/39477,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('.Frontend', ''), ('Visualization/Detail', 'ObjectDetail'), ('.Team/Querying', '')]",[],
2163979444,issue,open,,Option to disable the search in category filters,"**Is your feature request related to a problem? Please describe.**
Category filters have a search bar at the top even if you have more than 1K unique values. Some users don't want that search bar since it adds new values on search when pressing enter

**Describe the solution you'd like**
A toggle to enable/disable users from searching for more than the actual filter values. There are some times that you want to only search in the available values and not on values that are not in there

**Describe alternatives you've considered**
None unfortunately

**How important is this feature to you?**
Requested by a current enterprise customer, probably to 

**Additional context**
![image](https://github.com/metabase/metabase/assets/1711649/23a27c60-ac28-4579-9f51-f7c1b2f71807)

adding aaabbb and pressing enter
![image](https://github.com/metabase/metabase/assets/1711649/d7e4c132-5434-463e-9e87-7124bce53f9e)

if you click on that item then the filter will run with that value

",paoliniluis,2024-03-01 18:41:02+00:00,[],2024-03-01 18:41:02+00:00,,https://github.com/metabase/metabase/issues/39470,"[('Type:New Feature', ''), ('Querying/Parameters & Variables', 'Filter widgets, field filters, variables etc.')]",[],
2163823404,issue,closed,completed,[Epic] Consolidate Settings (types),"This mini-epic aids efforts in consolidating somewhat messy `Settings` types. The bulk of this work is concentrated on the frontend. The epic was born as a result of multiple follow-ups after the work on #38986 where we introduced another user-local setting.

## Goal
Identify, separate and document different possible settings types. The source of truth is defined in a [`defsetting`](https://github.com/metabase/metabase/blob/master/src/metabase/models/setting.clj) macro.
```
    Visibility       | Who Can See It?              | Who Can Update It?
    ---------------- | ---------------------------- | --------------------
    :public          | The entire world             | Admins and Settings Managers
    :authenticated   | Logged-in Users              | Admins and Settings Managers
    :settings-manager| Admins and Settings Managers | Admins and Settings Managers
    :admin           | Admins                       | Admins
    :internal        | Nobody                       | No one (usually for env-var-only settings)
```

```[tasklist]
### User Settings
- [x] #39251
- [x] #39359 
- [ ] #39456
- [ ] https://github.com/metabase/metabase/pull/39469
- [ ] https://github.com/metabase/metabase/pull/39728
```

```[tasklist]
### Public Settings
- [ ] #39468
```

```[tasklist]
### Privileged Settings (Admin + Settings Manager)
- [ ] #39734
```

> [!Important]
> Do not define `internal` settings types on the FE.
",nemanjaglumac,2024-03-01 17:05:46+00:00,['nemanjaglumac'],2024-06-06 13:49:31+00:00,2024-06-06 13:49:31+00:00,https://github.com/metabase/metabase/issues/39461,"[('Type:Tech Debt', 'or Refactoring'), ('.Frontend', ''), ('.Epic', 'Feature Implementation or Project')]",[],
2163655918,issue,closed,completed,The order of the months in charts embedded in email is incorrect,"### Describe the bug

We have a dashboard that is sent to people every morning. The dashboard contains several charts. One of the bar charts has months on the x axis. The chart renders correctly in metabase but in the email, the months go Oct 2023, jan 2024, nov 2023 - they are out of order.

### To Reproduce

1. Go to '...'
2. Click on '....'
3. Scroll down to '....'
4. See error


### Expected behavior

months should display in chronological order.

### Logs

_No response_

### Information about your Metabase installation

```JSON
Chrome
happens on all OS
Google workspace (email)
0.48.5
```


### Severity

annoying

### Additional context

thank you",ctouzeau,2024-03-01 15:36:53+00:00,[],2024-05-27 08:23:04+00:00,2024-05-27 08:23:04+00:00,https://github.com/metabase/metabase/issues/39451,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Reporting/Pulses', 'Now called Subscriptions'), ('Visualization/Static', 'Subscriptions/pulse generated image'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.Team/DashViz', 'Dashboard and Viz team')]","[{'comment_id': 2071974316, 'issue_id': 2163655918, 'author': 'vaughnd', 'body': ""I've been having this issue for months. On v0.49.3 now.\r\n\r\nSorts the specified way on the dashboard, but reverses in the email.\r\n\r\n**Email:**\r\n![image](https://github.com/metabase/metabase/assets/715490/c161a184-a229-46a3-8284-3dc79f82b45d)\r\n\r\n**Dashboard:**\r\n![image](https://github.com/metabase/metabase/assets/715490/d0c6a7d1-2f2e-40d2-b127-d43dc8296918)"", 'created_at': datetime.datetime(2024, 4, 23, 10, 39, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2121671194, 'issue_id': 2163655918, 'author': 'perivamsi', 'body': '@ctouzeau once v50 RC1 comes out, could you please test this with that version and let us know if you still face the issue?', 'created_at': datetime.datetime(2024, 5, 21, 3, 49, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 2122366278, 'issue_id': 2163655918, 'author': 'ctouzeau', 'body': 'Absolutely and thank you for your help.\r\n\r\nOn Mon, May 20, 2024 at 11:49\u202fPM Vamsi Peri ***@***.***>\r\nwrote:\r\n\r\n> @ctouzeau <https://github.com/ctouzeau> once v50 RC1 comes out, could you\r\n> please test this with that version and let us know if you still face the\r\n> issue?\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/metabase/metabase/issues/39451#issuecomment-2121671194>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AY55BPLZBQ4I7QLVCOS6TZDZDK75ZAVCNFSM6AAAAABEB5IL7GVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCMRRGY3TCMJZGQ>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>', 'created_at': datetime.datetime(2024, 5, 21, 10, 58, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 2123366928, 'issue_id': 2163655918, 'author': 'perivamsi', 'body': '@ctouzeau 50 RC1 is out, feel free to test it. Please remember that the release candidate is not a production version, so please upgrade in a test environment, if possible.', 'created_at': datetime.datetime(2024, 5, 21, 20, 13, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2124636996, 'issue_id': 2163655918, 'author': 'ctouzeau', 'body': ""I'm afraid we don't have a test environment and will need to wait until a\r\nstable production version is available.\r\n\r\nOn Tue, May 21, 2024 at 4:13\u202fPM Vamsi Peri ***@***.***> wrote:\r\n\r\n> @ctouzeau <https://github.com/ctouzeau> 50 RC1 is out, feel free to test\r\n> it. Please remember that the release candidate is not a production version,\r\n> so please upgrade in a test environment, if possible.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/metabase/metabase/issues/39451#issuecomment-2123366928>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AY55BPMQYXS264HNNZYGOPDZDOTHLAVCNFSM6AAAAABEB5IL7GVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCMRTGM3DMOJSHA>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>"", 'created_at': datetime.datetime(2024, 5, 22, 12, 9, 55, tzinfo=datetime.timezone.utc)}]","vaughnd on (2024-04-23 10:39:46 UTC): I've been having this issue for months. On v0.49.3 now.

Sorts the specified way on the dashboard, but reverses in the email.

**Email:**
![image](https://github.com/metabase/metabase/assets/715490/c161a184-a229-46a3-8284-3dc79f82b45d)

**Dashboard:**
![image](https://github.com/metabase/metabase/assets/715490/d0c6a7d1-2f2e-40d2-b127-d43dc8296918)

perivamsi on (2024-05-21 03:49:26 UTC): @ctouzeau once v50 RC1 comes out, could you please test this with that version and let us know if you still face the issue?

ctouzeau (Issue Creator) on (2024-05-21 10:58:20 UTC): Absolutely and thank you for your help.

On Mon, May 20, 2024 at 11:49 PM Vamsi Peri ***@***.***>
wrote:

perivamsi on (2024-05-21 20:13:19 UTC): @ctouzeau 50 RC1 is out, feel free to test it. Please remember that the release candidate is not a production version, so please upgrade in a test environment, if possible.

ctouzeau (Issue Creator) on (2024-05-22 12:09:55 UTC): I'm afraid we don't have a test environment and will need to wait until a
stable production version is available.

On Tue, May 21, 2024 at 4:13 PM Vamsi Peri ***@***.***> wrote:

"
2163550415,issue,closed,not_planned,[Actions] - Add option to use HTTP requests,"**Describe the solution you'd like**
Since we already support Actions, which right now consist of simple SQL Insert, Update or Delete. The ask here is to enhance the Action functionality to support simple HTTP requests like GET/PUT

**Describe alternatives you've considered**
None

**Additional context**
Nothing major, just a nice to have",Tony-metabase,2024-03-01 14:38:00+00:00,[],2024-04-05 20:54:40+00:00,2024-04-05 20:54:40+00:00,https://github.com/metabase/metabase/issues/39450,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Type:New Feature', ''), ('Querying/Actions', '')]","[{'comment_id': 2040345831, 'issue_id': 2163550415, 'author': 'dahyeik', 'body': 'Duplicate of https://github.com/metabase/metabase/issues/35195', 'created_at': datetime.datetime(2024, 4, 5, 17, 56, 53, tzinfo=datetime.timezone.utc)}]","dahyeik on (2024-04-05 17:56:53 UTC): Duplicate of https://github.com/metabase/metabase/issues/35195

"
2163515030,issue,closed,completed,Refuse to execute script from because its MIME type ('') is not executable,"### Describe the bug

Hey!  

We have a metabase instance deployed in a Azure Web App following the [documentation](https://www.metabase.com/docs/latest/installation-and-operation/running-metabase-on-azure).  It works really well except for some users who cannot access it because of this error:
`Refused to execute script from 'https://metabase.xxx.azurewebsites.net/app/dist/app-main.2557cfcbb410eb3199ba.js' because its MIME type ('') is not executable, and strict MIME type checking is enabled.` 
Most of the type, hard reload the page works but for some, they always got a white page because they get a 404 on the `app-main.xxx.js` script.

On this session, it loaded perfectly the first time, but I refreshed the page and got the problem:
<img width=""1507"" alt=""image"" src=""https://github.com/metabase/metabase/assets/5237095/0a461d42-859d-48e2-917f-62debe388d2e"">



### To Reproduce

1. Deploy Metabase on Azure Web App
2. Open the base URL


### Expected behavior

It should work all the time

### Logs

_No response_

### Information about your Metabase installation

```JSON
- Chrome lastest
- Azure Web app
- Container image: metabase/metabase:latest
```


### Severity

Blocking some users

### Additional context

_No response_",QuentinLuc,2024-03-01 14:19:52+00:00,['npfitz'],2024-12-11 14:52:04+00:00,2024-07-16 20:05:02+00:00,https://github.com/metabase/metabase/issues/39449,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('Organization/', ''), ('.Frontend', ''), ('.Team/AdminWebapp', 'Admin and Webapp team')]","[{'comment_id': 1973502810, 'issue_id': 2163515030, 'author': 'paoliniluis', 'body': ""What's the web server there? is there any caching whatsoever?"", 'created_at': datetime.datetime(2024, 3, 1, 16, 33, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1976080693, 'issue_id': 2163515030, 'author': 'QuentinLuc', 'body': 'Hey! Nothing special and no cache (at least not configured specifically in Azure).  The only config done is that one to pull the   Docker image.\r\n<img width=""1250"" alt=""image"" src=""https://github.com/metabase/metabase/assets/5237095/35f0216e-a1db-489e-afa4-a894b14db64e"">', 'created_at': datetime.datetime(2024, 3, 4, 9, 11, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2029212437, 'issue_id': 2163515030, 'author': 'gyanidude', 'body': 'We are also facing the same issue. For some users, hard refresh works but for others it does not. Did we find the solution? @QuentinLuc', 'created_at': datetime.datetime(2024, 4, 1, 5, 57, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2040310303, 'issue_id': 2163515030, 'author': 'guiernew', 'body': 'Same issue here, some news? @QuentinLuc', 'created_at': datetime.datetime(2024, 4, 5, 17, 33, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2048181755, 'issue_id': 2163515030, 'author': 'guiernew', 'body': 'We are in AWS and facing the same problem, some of our users, more spefic chrome users are seeing a white screen with this error on console...\r\nI have seen on Mac and Windows...', 'created_at': datetime.datetime(2024, 4, 10, 18, 16, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2119385011, 'issue_id': 2163515030, 'author': 'NizarHafizulllah', 'body': 'same issue here, sometime it works sometime it dont', 'created_at': datetime.datetime(2024, 5, 19, 22, 50, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2187322113, 'issue_id': 2163515030, 'author': 'npfitz', 'body': ""Hi all, I'm able to confirm that the issue is caused by a 404 for a static resource (which isn't really a surprise). The `MIME Type` error is a bit misleading. The fact that it resolves itself on a refresh seems curious though. @QuentinLuc @gyanidude @guiernew @NizarHafizulllah, Do any of you have any usage metrics around the time of the errors? Are they still happening for you? I'm wondering if the host machine is being overwhelmed and dropping requests because it it."", 'created_at': datetime.datetime(2024, 6, 24, 20, 11, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2188767352, 'issue_id': 2163515030, 'author': 'guiernew', 'body': '@npfitz it was happening when upgrade to 0.48.0, after new releases the problem have been solved, never faced this error anymore.', 'created_at': datetime.datetime(2024, 6, 25, 12, 8, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2188779652, 'issue_id': 2163515030, 'author': 'npfitz', 'body': ""@guiernew Well that's certainly encouraging! I'll see if there was anything on our side that may have obviously impacted that around that time. Fingers crossed that everyone else has had a similar experience"", 'created_at': datetime.datetime(2024, 6, 25, 12, 15, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2192674806, 'issue_id': 2163515030, 'author': 'npfitz', 'body': 'For anyone else who might be encountering this issue, we diagnosed this error on a deployment yesterday and found that the multiple Metabase instances were behind a load balancer without sticky sessions enabled, and not all the instances had the same version of Metabase. This meant that index.html was being served by `version a`, but the request for script.js was being sent to `version b`. Because the assets have a hash in the filename (which changes from version to version), the browser was getting a 404. \r\n\r\nThis is one scenario that can cause this. Another avenue that was explored involved ensuring that index.html was no being cached (by a CDN or by the browser), and I am sure there are other possibilities as well.', 'created_at': datetime.datetime(2024, 6, 26, 21, 42, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2225042277, 'issue_id': 2163515030, 'author': 'QuentinLuc', 'body': ""I'm still getting it almost every time now.  To fix it, I open the Chrome DevTools console -> Application -> Clear Site Data, then the page refreshes automatically and it works 🤷\u200d♀️. Also we don't use any CDN."", 'created_at': datetime.datetime(2024, 7, 12, 8, 2, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 2233208125, 'issue_id': 2163515030, 'author': 'github-actions[bot]', 'body': '🚀 This should also be released by [v0.51](https://github.com/metabase/metabase/milestone/231)', 'created_at': datetime.datetime(2024, 7, 17, 12, 30, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2464764854, 'issue_id': 2163515030, 'author': 'QuentinLuc', 'body': 'Hi!  I still have the issue today.  \n\nSee the logs here: \n![Image](https://github.com/user-attachments/assets/dbffd567-51fc-4239-9d0e-2cbff42414fb)\n\nCould you please check again?', 'created_at': datetime.datetime(2024, 11, 8, 13, 25, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2464788910, 'issue_id': 2163515030, 'author': 'paoliniluis', 'body': '@QuentinLuc please wipe the CDN cache and your browser cache', 'created_at': datetime.datetime(2024, 11, 8, 13, 37, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2535579902, 'issue_id': 2163515030, 'author': 'QuentinLuc', 'body': ""@paoliniluis , yes this is exactly what I do every time.  But it's quite annoying to have to do that and to explain to non technical people."", 'created_at': datetime.datetime(2024, 12, 11, 11, 18, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2536216662, 'issue_id': 2163515030, 'author': 'paoliniluis', 'body': ""@QuentinLuc then don't use a CDN"", 'created_at': datetime.datetime(2024, 12, 11, 14, 52, 3, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-03-01 16:33:59 UTC): What's the web server there? is there any caching whatsoever?

QuentinLuc (Issue Creator) on (2024-03-04 09:11:37 UTC): Hey! Nothing special and no cache (at least not configured specifically in Azure).  The only config done is that one to pull the   Docker image.
<img width=""1250"" alt=""image"" src=""https://github.com/metabase/metabase/assets/5237095/35f0216e-a1db-489e-afa4-a894b14db64e"">

gyanidude on (2024-04-01 05:57:56 UTC): We are also facing the same issue. For some users, hard refresh works but for others it does not. Did we find the solution? @QuentinLuc

guiernew on (2024-04-05 17:33:01 UTC): Same issue here, some news? @QuentinLuc

guiernew on (2024-04-10 18:16:37 UTC): We are in AWS and facing the same problem, some of our users, more spefic chrome users are seeing a white screen with this error on console...
I have seen on Mac and Windows...

NizarHafizulllah on (2024-05-19 22:50:41 UTC): same issue here, sometime it works sometime it dont

npfitz (Assginee) on (2024-06-24 20:11:08 UTC): Hi all, I'm able to confirm that the issue is caused by a 404 for a static resource (which isn't really a surprise). The `MIME Type` error is a bit misleading. The fact that it resolves itself on a refresh seems curious though. @QuentinLuc @gyanidude @guiernew @NizarHafizulllah, Do any of you have any usage metrics around the time of the errors? Are they still happening for you? I'm wondering if the host machine is being overwhelmed and dropping requests because it it.

guiernew on (2024-06-25 12:08:34 UTC): @npfitz it was happening when upgrade to 0.48.0, after new releases the problem have been solved, never faced this error anymore.

npfitz (Assginee) on (2024-06-25 12:15:10 UTC): @guiernew Well that's certainly encouraging! I'll see if there was anything on our side that may have obviously impacted that around that time. Fingers crossed that everyone else has had a similar experience

npfitz (Assginee) on (2024-06-26 21:42:59 UTC): For anyone else who might be encountering this issue, we diagnosed this error on a deployment yesterday and found that the multiple Metabase instances were behind a load balancer without sticky sessions enabled, and not all the instances had the same version of Metabase. This meant that index.html was being served by `version a`, but the request for script.js was being sent to `version b`. Because the assets have a hash in the filename (which changes from version to version), the browser was getting a 404. 

This is one scenario that can cause this. Another avenue that was explored involved ensuring that index.html was no being cached (by a CDN or by the browser), and I am sure there are other possibilities as well.

QuentinLuc (Issue Creator) on (2024-07-12 08:02:52 UTC): I'm still getting it almost every time now.  To fix it, I open the Chrome DevTools console -> Application -> Clear Site Data, then the page refreshes automatically and it works 🤷‍♀️. Also we don't use any CDN.

github-actions[bot] on (2024-07-17 12:30:27 UTC): 🚀 This should also be released by [v0.51](https://github.com/metabase/metabase/milestone/231)

QuentinLuc (Issue Creator) on (2024-11-08 13:25:31 UTC): Hi!  I still have the issue today.  

See the logs here: 
![Image](https://github.com/user-attachments/assets/dbffd567-51fc-4239-9d0e-2cbff42414fb)

Could you please check again?

paoliniluis on (2024-11-08 13:37:30 UTC): @QuentinLuc please wipe the CDN cache and your browser cache

QuentinLuc (Issue Creator) on (2024-12-11 11:18:23 UTC): @paoliniluis , yes this is exactly what I do every time.  But it's quite annoying to have to do that and to explain to non technical people.

paoliniluis on (2024-12-11 14:52:03 UTC): @QuentinLuc then don't use a CDN

"
2163513133,issue,closed,completed,Join condition is not automatically selected,"### Describe the bug


https://github.com/metabase/metabase/assets/6830683/543d83e7-3631-4be2-a09c-9f32d792a8c7



### To Reproduce

1. Refresh page to clear memory
2. Create a new GUI question based on Accounts table
3. Join invoices table

### Expected behavior

Join condition is automatically selected

### Information about your Metabase installation

master, afc28b958
reprodubile in v47


### Severity

P2
",kamilmielnik,2024-03-01 14:18:43+00:00,['ranquild'],2024-06-28 09:24:41+00:00,2024-06-25 13:12:23+00:00,https://github.com/metabase/metabase/issues/39448,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Frontend', ''), ('Querying/GUI', 'Query builder catch-all, including simple mode'), ('.Team/Querying', '')]","[{'comment_id': 2196491703, 'issue_id': 2163513133, 'author': 'github-actions[bot]', 'body': '🚀 This should also be released by [v0.50.8](https://github.com/metabase/metabase/milestone/246)', 'created_at': datetime.datetime(2024, 6, 28, 9, 24, 40, tzinfo=datetime.timezone.utc)}]","github-actions[bot] on (2024-06-28 09:24:40 UTC): 🚀 This should also be released by [v0.50.8](https://github.com/metabase/metabase/milestone/246)

"
2162644556,issue,closed,completed,Not possible to add nested custom expression,"### Describe the bug

https://stats.metabase.com/question/16385-invoices-mbql-bug-2/notebook
I've added custom column QS2 defined by expression expression `concat(year([Date Received]), "" Q"", quarter([Date Received]))`.
It causes error `Invalid query: {:query {:expressions {""QS2"" [nil [""valid instance of one of these MBQL clauses: :expression, :field""]]}}}`
Having separate custom columns year([Date Received] and quarter([Date Received]) I can create a custom column with equivalent definition `concat(""Q"", [Quarter], "" "", [Year])` and it works fine.
<img width=""1123"" alt=""Captura de ecrã 2024-03-01, às 06 33 41"" src=""https://github.com/metabase/metabase/assets/777800/9f8ac37e-fc90-4c81-af04-3aa39ae2bdd2"">
<img width=""752"" alt=""Captura de ecrã 2024-03-01, às 06 33 28"" src=""https://github.com/metabase/metabase/assets/777800/6ba29989-29cc-4823-90f7-5e3d18547c5c"">


### To Reproduce

1. Start new GUI question in stats.metabase.com
2. Choose Invoices dataset from Sample Database
3. Add custom column `concat(year([Date Received]), "" Q"", quarter([Date Received]))`
4. Click Visualize
5. Error will be shown

### Expected behavior

The expression should be parsed normally

### Logs

Invalid query: {:query {:expressions {""QS2"" [nil [""valid instance of one of these MBQL clauses: :expression, :field""]]}}}

### Information about your Metabase installation

```JSON
stats.metabase.com
```


### Severity

Blocks some (rare) use cases

### Additional context

_No response_",mngr,2024-03-01 05:34:57+00:00,[],2024-10-11 17:55:02+00:00,2024-10-10 23:52:44+00:00,https://github.com/metabase/metabase/issues/39439,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Querying/MBQL', ''), ('.Backend', ''), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib'), ('.Team/Querying', '')]","[{'comment_id': 1972628638, 'issue_id': 2162644556, 'author': 'ranquild', 'body': ""@mngr AFAIK the problem is that you try to concat a number with a string, currently `concat` doesn't allow that"", 'created_at': datetime.datetime(2024, 3, 1, 7, 10, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1973125130, 'issue_id': 2162644556, 'author': 'mngr', 'body': 'No, it actually works if I concat string with number columns without nesting\r\n@ranquild check the Quarter String custom column here https://stats.metabase.com/question/16388-invoices-mbql-bug-2-correct/notebook', 'created_at': datetime.datetime(2024, 3, 1, 12, 42, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1973363143, 'issue_id': 2162644556, 'author': 'metamben', 'body': 'Currently, QP uses the schema\r\n\r\n```clojure\r\n(defclause ^{:requires-features #{:expressions}} concat\r\n  a StringExpressionArg, b StringExpressionArg, more (rest StringExpressionArg))\r\n```\r\n\r\nwhile metabase-lib (MLv2) uses\r\n\r\n```clojure\r\n(mbql-clause/define-catn-mbql-clause :concat :- :type/Text\r\n  [:args [:repeat {:min 2} [:schema [:ref ::expression/expression]]]])\r\n```\r\n\r\nQP will be aligned with metabase-lib soon, and I think the metabase-lib definition will win, since databases can usually concat numbers and strings.', 'created_at': datetime.datetime(2024, 3, 1, 15, 9, 48, tzinfo=datetime.timezone.utc)}]","ranquild on (2024-03-01 07:10:06 UTC): @mngr AFAIK the problem is that you try to concat a number with a string, currently `concat` doesn't allow that

mngr (Issue Creator) on (2024-03-01 12:42:43 UTC): No, it actually works if I concat string with number columns without nesting
@ranquild check the Quarter String custom column here https://stats.metabase.com/question/16388-invoices-mbql-bug-2-correct/notebook

metamben on (2024-03-01 15:09:48 UTC): Currently, QP uses the schema

```clojure
(defclause ^{:requires-features #{:expressions}} concat
  a StringExpressionArg, b StringExpressionArg, more (rest StringExpressionArg))
```

while metabase-lib (MLv2) uses

```clojure
(mbql-clause/define-catn-mbql-clause :concat :- :type/Text
  [:args [:repeat {:min 2} [:schema [:ref ::expression/expression]]]])
```

QP will be aligned with metabase-lib soon, and I think the metabase-lib definition will win, since databases can usually concat numbers and strings.

"
2162634402,issue,closed,completed,Not possible to save static text as a custom expression,"### Describe the bug

I've spotted a weird behaviour on [stats.metabase.com](http://stats.metabase.com/), if I put any string like 'test' or ""asd"" as a custom column expression and click outside the field, the page breaks.
I'm not sure if this is supported, I wanted to create a column with a fixed text value.
But even if this is not supported, a custom expression syntax error should be shown, I suppose.
Bug of MBQLv2?
![Captura de ecrã 2024-02-29, às 23 29 36](https://github.com/metabase/metabase/assets/777800/d9411902-5716-476a-990c-5e416c28b817)
![Captura de ecrã 2024-02-29, às 23 29 46](https://github.com/metabase/metabase/assets/777800/f7580c6b-d085-48a3-90bf-8227672c8212)


### To Reproduce

1. Open query builder for any dataset
2. Click on custom column button
3. Enter ""test"" as expression
4. Click outside the expression field
5. The page breaks


### Expected behavior

I believe the static text should be possible to save as a custom column value

### Logs

react-dom.production.min.js:209 Error: Unknown MBQL clause [""test""]
    at e (format.ts:74:9)
    at tf.UNSAFE_componentWillReceiveProps (ExpressionEditorTextfield.tsx:167:22)
    at oR (react-dom.production.min.js:135:172)
    at iF (react-dom.production.min.js:179:157)
    at l (react-dom.production.min.js:263:490)
    at aH (react-dom.production.min.js:246:265)
    at react-dom.production.min.js:246:194
    at aW (react-dom.production.min.js:246:199)
    at react-dom.production.min.js:123:115
    at t.unstable_runWithPriority (scheduler.production.min.js:19:467)

### Information about your Metabase installation

```JSON
stats.metabase.com
```


### Severity

Blocks some (rare) use cases

### Additional context

_No response_",mngr,2024-03-01 05:23:53+00:00,['uladzimirdev'],2024-03-05 13:19:12+00:00,2024-03-01 16:26:47+00:00,https://github.com/metabase/metabase/issues/39438,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Frontend', ''), ('Querying/Notebook/Custom Expression', ''), ('.Team/Querying', '')]","[{'comment_id': 1973309694, 'issue_id': 2162634402, 'author': 'uladzimirdev', 'body': 'I think the issue is related to https://github.com/metabase/metabase/issues/38089\r\n\r\n<img width=""600"" alt=""image"" src=""https://github.com/metabase/metabase/assets/125459446/b0c63a23-8d8d-44f9-a081-214554d02649"">\r\n\r\nbut we\'ll address it in scope of https://github.com/metabase/metabase/pull/39263 by adding additional check on expression validity', 'created_at': datetime.datetime(2024, 3, 1, 14, 33, 39, tzinfo=datetime.timezone.utc)}]","uladzimirdev (Assginee) on (2024-03-01 14:33:39 UTC): I think the issue is related to https://github.com/metabase/metabase/issues/38089

<img width=""600"" alt=""image"" src=""https://github.com/metabase/metabase/assets/125459446/b0c63a23-8d8d-44f9-a081-214554d02649"">

but we'll address it in scope of https://github.com/metabase/metabase/pull/39263 by adding additional check on expression validity

"
2162329994,issue,open,,Consider renaming TTL to min duration,"`src/metabase/public_settings.clj` line ~ `348`:
```
;; TODO -- this isn't really a TTL at all. Consider renaming to something like `-min-duration`
```",lbrdnk,2024-03-01 00:35:22+00:00,[],2024-03-01 00:35:22+00:00,,https://github.com/metabase/metabase/issues/39435,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2162327025,issue,open,,Verify optional keys for SMTPSettings schema,"`src/metabase/email.clj` line ~ `212`:
```
;; TODO -- not sure which of these other ones are actually required or not, and which are optional.
```",lbrdnk,2024-03-01 00:32:00+00:00,[],2024-03-01 00:32:00+00:00,,https://github.com/metabase/metabase/issues/39434,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2162295290,issue,closed,completed,Make EntityPicker child-aware,"[discussion](https://metaboat.slack.com/archives/C064EB1UE5P/p1709242037895589?thread_ts=1709239749.243659&cid=C064EB1UE5P)

We want to make collection picker items aware of whether or not they have relevant children, so that, for example
- when picking a collection, you can tell if any given collection has more collection children
- when looking for a dashboard, we don't show you a dead-end path of collections that doesn't have any dashboards in it


This will likely be accomplished by providing some sort of `below` or `here` properties, telling us what entities exist below a given collection in the tree

This should be especially useful when we implement the picker for adding items to dashboards: we can hide any folders that don't have items that are addable to a dashboard.",iethree,2024-03-01 00:03:52+00:00,"['johnswanson', 'iethree']",2024-04-08 16:23:32+00:00,2024-04-08 16:23:32+00:00,https://github.com/metabase/metabase/issues/39432,[],[],
2162295141,issue,closed,completed,Metrics Picker,,iethree,2024-03-01 00:03:42+00:00,[],2024-05-22 08:06:33+00:00,2024-05-22 08:06:32+00:00,https://github.com/metabase/metabase/issues/39431,[],"[{'comment_id': 2124135519, 'issue_id': 2162295141, 'author': 'kamilmielnik', 'body': 'Done in `metrics-v2` branch which has been merged to `master` (#38457).\r\nIt was this commit: 4f1d3329dc73ae648836c5c01bad06296c6c2ce7\r\nClosing.', 'created_at': datetime.datetime(2024, 5, 22, 8, 6, 32, tzinfo=datetime.timezone.utc)}]","kamilmielnik on (2024-05-22 08:06:32 UTC): Done in `metrics-v2` branch which has been merged to `master` (#38457).
It was this commit: 4f1d3329dc73ae648836c5c01bad06296c6c2ce7
Closing.

"
2162208957,issue,open,,"Warn/error if you pass in `dashboard_id` in ""api/card/:card-id/query""","**Context**

We should probably warn if you pass `dashboard_id`, and tell you to use the new POST /api/dashboard/:dashboard-id/card/:card-id/query endpoint instead. Or error in that situtation? We're not even validating that you have access to this Dashboard.
",qwef,2024-02-29 22:30:33+00:00,[],2024-02-29 22:30:44+00:00,,https://github.com/metabase/metabase/issues/39429,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2162186798,issue,open,,Clarify card/question/model hierarchy,"* Card is the superclass
* Question and Model are sibling subclasses
* We should reflect this with Toucan models
* We should update variable names as appropriate
* Keeping `/api/card` as it is still makes sense",tsmacdonald,2024-02-29 22:11:12+00:00,[],2024-03-01 01:57:18+00:00,,https://github.com/metabase/metabase/issues/39428,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', '')]","[{'comment_id': 1972312830, 'issue_id': 2162186798, 'author': 'perivamsi', 'body': 'Metric will also be a subclass now', 'created_at': datetime.datetime(2024, 3, 1, 1, 57, 18, tzinfo=datetime.timezone.utc)}]","perivamsi on (2024-03-01 01:57:18 UTC): Metric will also be a subclass now

"
2162077893,issue,open,,Update to use RecentViews instead of ViewLog in `views-and-runs` query,,qwef,2024-02-29 20:46:18+00:00,[],2024-02-29 20:46:18+00:00,,https://github.com/metabase/metabase/issues/39424,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2162013831,issue,open,,Remove `api.permission-graph/converted-json->graph` call,,qwef,2024-02-29 20:07:29+00:00,[],2024-02-29 20:07:30+00:00,,https://github.com/metabase/metabase/issues/39420,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2162012624,issue,closed,completed,[dc.js migration] timeseries can have duplicate dimension labels,"<img width=""1897"" alt=""Screenshot 2024-02-29 at 12 04 47 PM"" src=""https://github.com/metabase/metabase/assets/37751258/8a1c3974-26d9-4078-8723-9aa188fa28f2"">

question/14926
<img width=""1445"" alt=""Screenshot 2024-03-04 at 1 35 01 PM"" src=""https://github.com/metabase/metabase/assets/37751258/8c0360dd-9d87-4064-b3c1-774f5d4b3a56"">

",EmmadUsmani,2024-02-29 20:06:40+00:00,['alxnddr'],2024-03-22 18:05:18+00:00,2024-03-22 18:05:18+00:00,https://github.com/metabase/metabase/issues/39419,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2162000802,issue,closed,completed,[dc.js migration] brushing does not always preserve viz type,"https://github.com/metabase/metabase/assets/37751258/054be427-93cb-4790-bffe-d8d4eeacb51b



",EmmadUsmani,2024-02-29 19:58:22+00:00,['JesseSDevaney'],2024-04-02 20:00:20+00:00,2024-04-02 19:59:30+00:00,https://github.com/metabase/metabase/issues/39414,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 1989633581, 'issue_id': 2162000802, 'author': 'alxnddr', 'body': '@EmmadUsmani I could not reproduce it on the latest `echarts` branch. Can you please check it on the questions you could repro originally?', 'created_at': datetime.datetime(2024, 3, 11, 23, 28, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2015568129, 'issue_id': 2162000802, 'author': 'EmmadUsmani', 'body': '@alxnddr I still see it happening on the same questions\r\n\r\nhttps://github.com/metabase/metabase/assets/37751258/03a4b6e9-6f03-4408-88cd-b07ea5bcdb89', 'created_at': datetime.datetime(2024, 3, 22, 17, 29, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 2032995433, 'issue_id': 2162000802, 'author': 'JesseSDevaney', 'body': 'I connected to the same AppDB and checked the same questions - it is no longer reproducing.\r\n\r\nThis may have been fixed by re-basing `echarts` on `master`', 'created_at': datetime.datetime(2024, 4, 2, 19, 59, 30, tzinfo=datetime.timezone.utc)}]","alxnddr on (2024-03-11 23:28:22 UTC): @EmmadUsmani I could not reproduce it on the latest `echarts` branch. Can you please check it on the questions you could repro originally?

EmmadUsmani (Issue Creator) on (2024-03-22 17:29:11 UTC): @alxnddr I still see it happening on the same questions

https://github.com/metabase/metabase/assets/37751258/03a4b6e9-6f03-4408-88cd-b07ea5bcdb89

JesseSDevaney (Assginee) on (2024-04-02 19:59:30 UTC): I connected to the same AppDB and checked the same questions - it is no longer reproducing.

This may have been fixed by re-basing `echarts` on `master`

"
2161991396,issue,open,,"models.dashboard/result-metadata-for-query asks to be async, but maybe save-card! can be dropped","`save-card!` is only called in `save-transient-dashboard!`, and I'm quite sure that you can't save a dashboard with the API which has _unsaved_ cards. And `save-card!` is a no-op for existing cards, so probably should be just removed.

https://github.com/metabase/metabase/blob/master/src/metabase/models/dashboard.clj#L451",piranha,2024-02-29 19:51:50+00:00,[],2025-02-04 20:29:48+00:00,,https://github.com/metabase/metabase/issues/39413,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161984962,issue,closed,completed,[dc.js migration] waterfall chart does not render series bars when there are many of them,"| dc.js | echarts |
|--------|--------|
| <img width=""1897"" alt=""Screenshot 2024-02-29 at 11 45 37 AM"" src=""https://github.com/metabase/metabase/assets/37751258/9b73c9e6-a4b4-4e72-bd12-0cd26fafca85""> | <img width=""1890"" alt=""Screenshot 2024-02-29 at 11 45 22 AM"" src=""https://github.com/metabase/metabase/assets/37751258/21eb5574-5bc0-444a-b7dc-56d124d4b2d5""> | 
",EmmadUsmani,2024-02-29 19:48:22+00:00,['alxnddr'],2024-03-08 21:23:47+00:00,2024-03-08 21:23:47+00:00,https://github.com/metabase/metabase/issues/39411,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]","[{'comment_id': 1977079537, 'issue_id': 2161984962, 'author': 'alxnddr', 'body': 'I assume this may be the limitation of candlestick series, maybe we will need to switch to custom series', 'created_at': datetime.datetime(2024, 3, 4, 17, 14, 15, tzinfo=datetime.timezone.utc)}]","alxnddr (Assginee) on (2024-03-04 17:14:15 UTC): I assume this may be the limitation of candlestick series, maybe we will need to switch to custom series

"
2161973932,issue,open,,Only return the updated user in `/api/permissions/membership`,"**Context**

it's a bit silly to return the entire list of members for the group, just return the newly created one and let the frontend add it as appropriate.

",qwef,2024-02-29 19:40:55+00:00,[],2024-02-29 19:40:56+00:00,,https://github.com/metabase/metabase/issues/39410,"[('Type:Tech Debt', 'or Refactoring'), ('.Frontend', ''), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161971595,issue,open,,"Clarify proper semantics for Fields in fk-details drill thru, capture expected results in test","In this test (in `metabase.lib.drill-thru.fk-details-test`) there's a question about 

```clojure
(deftest ^:parallel preserve-filters-for-other-fks-forming-multi-column-pk-test
  (testing ""with multiple FKs forming a multi-column PK on another table""
    (let [provider (merged-mock/merged-mock-metadata-provider
                     meta/metadata-provider
                     {:fields [;; Make Checkins.VENUE_ID + Checkins.USER_ID into a two-part primary key.
                               ;; Turn Checkins.ID into a basic numeric field.
                               {:id                 (meta/id :checkins :id)
                                :semantic-type      :type/Quantity}
                               {:id                 (meta/id :checkins :venue-id)
                                :semantic-type      :type/PK
                                :fk-target-field-id nil}
                               {:id                 (meta/id :checkins :user-id)
                                :semantic-type      :type/PK
                                :fk-target-field-id nil}

                               ;; Then turn Orders.USER_ID and Orders.PRODUCT_ID into FKs pointing at Checkins.
                               {:id                 (meta/id :orders :user-id)
                                :semantic-type      :type/FK
                                :fk-target-field-id (meta/id :checkins :user-id)}
                               {:id                 (meta/id :orders :product-id)
                                :semantic-type      :type/FK
                                :fk-target-field-id (meta/id :checkins :venue-id)}]})
          ;; Then we can treat them as a two-part FK aimed at a two-part PK.
          query          (-> (lib/query provider (meta/table-metadata :orders))
                             ;; This filter should get removed when filtering by the FK.
                             (lib/filter (lib/= (meta/field-metadata :orders :quantity) 1)))
          venue-id       (get-in lib.drill-thru.tu/test-queries [""ORDERS"" :unaggregated :row ""PRODUCT_ID""])
          user-id        (get-in lib.drill-thru.tu/test-queries [""ORDERS"" :unaggregated :row ""USER_ID""])
          #_#_filtered-venue (-> basic
                             (lib/filter (lib/= (lib.metadata/field basic (meta/id :orders :product-id))
                                                (get-in lib.drill-thru.tu/test-queries
                                                        [""ORDERS"" :unaggregated :row ""PRODUCT_ID""]))))
          ]
      (testing ""work as normal with no related filter""
        (lib.drill-thru.tu/test-drill-application
          {:column-name    ""PRODUCT_ID""
           :click-type     :cell
           :query-type     :unaggregated
           :custom-query   query
           :drill-type     :drill-thru/fk-details
           :expected       {:type            :drill-thru/fk-details
                            :column          (m/find-first #(= (:name %) ""PRODUCT_ID"") (lib/returned-columns query))
                            :object-id       venue-id
                            ;; TODO: This field actually refers to the source table, not the target one. Is that right?
                            :many-pks?       false}
           :expected-query {:stages [{:filters [[:= {} [:field {} (meta/id :checkins :venue-id)] venue-id]]}]}}))
         ))
```",adam-james-v,2024-02-29 19:39:17+00:00,[],2024-02-29 19:39:17+00:00,,https://github.com/metabase/metabase/issues/39409,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', '')]",[],
2161968712,issue,closed,completed,[dc.js migration] tooltip is mispositioned on waterfall charts,"https://github.com/metabase/metabase/assets/37751258/9191e319-231c-43d9-a643-5de8d847bdec

http://localhost:3000/question/133-waterfall-timeseries-uk-car-accidents


",EmmadUsmani,2024-02-29 19:37:11+00:00,['alxnddr'],2024-03-12 22:15:44+00:00,2024-03-12 22:15:44+00:00,https://github.com/metabase/metabase/issues/39408,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2161963888,issue,open,,Deprecate `/api/session/properties` and have a single endpoint for listing settings,"**Context**

Deprecate /api/session/properties and have a single endpoint for listing settings, namely `/api/setting/`.

",qwef,2024-02-29 19:33:41+00:00,[],2024-02-29 19:33:41+00:00,,https://github.com/metabase/metabase/issues/39407,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161963725,issue,open,,re-humanization should be done in a background thread,"Or maybe even some task queue. If it is slow.

https://github.com/metabase/metabase/blob/master/src/metabase/models/humanization.clj#L72",piranha,2024-02-29 19:33:33+00:00,[],2024-02-29 19:33:34+00:00,,https://github.com/metabase/metabase/issues/39406,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161961873,issue,open,,See if we can remove `GET /api/field/:id/summary`,This endpoint seems to be unused.,noahmoss,2024-02-29 19:32:12+00:00,[],2024-02-29 19:32:22+00:00,,https://github.com/metabase/metabase/issues/39404,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), (':broom:', 'no-brainer cleanup issues to clear out when you have an hour left until EoD or something')]",[],
2161956638,issue,open,,Consider automatic setup of application database when getConnection is called,"`src/metabase/db.clj` line ~`49`:
```
;; TODO -- Consider whether we can setup app-db automatically when `getConnection` is called on
;; [[mdb.connection/*application-db*]] (or its data source) 
```",lbrdnk,2024-02-29 19:29:01+00:00,[],2024-02-29 19:29:02+00:00,,https://github.com/metabase/metabase/issues/39403,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161953335,issue,open,,Remove `/api/dataset/duration`,"**Context**

This is no longer used. Should we remove it? I'm guessing we can also remove this FE logic too: https://github.com/metabase/metabase/blob/master/frontend/src/metabase/services.js#L375

",qwef,2024-02-29 19:26:39+00:00,[],2024-02-29 19:26:40+00:00,,https://github.com/metabase/metabase/issues/39402,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161951077,issue,open,,Improve `sql.qp/make-nestable-sql` to not escape comment in quoted string,https://github.com/metabase/metabase/blob/80dcbdf/test/metabase/driver/sql/query_processor_test.clj#L410,qnkhuat,2024-02-29 19:25:07+00:00,[],2024-02-29 19:25:08+00:00,,https://github.com/metabase/metabase/issues/39401,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', '')]",[],
2161950418,issue,open,,Executing a card for a subscription should be done async,"#performancegainz

```
src/metabase/pulse/util.clj:13:;; TODO - this should be done async
```",tsmacdonald,2024-02-29 19:24:40+00:00,[],2024-02-29 19:24:40+00:00,,https://github.com/metabase/metabase/issues/39400,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P2', 'Average run of the mill bug'), ('Reporting/Pulses', 'Now called Subscriptions'), ('.Backend', '')]",[],
2161948568,issue,open,,Move Pulse styling into mb.pulse.render.style,"```
src/metabase/pulse/render/style.clj:12:;; TODO - we should move other CSS definitions from `metabase.pulse.render` namespaces into this one, so they're all in one place
```

Should make it more consistent / clearer to work on.",tsmacdonald,2024-02-29 19:23:19+00:00,[],2024-02-29 19:23:20+00:00,,https://github.com/metabase/metabase/issues/39399,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Reporting/Pulses', 'Now called Subscriptions'), ('.Backend', '')]",[],
2161948502,issue,open,,Have a default `:middleware` map if `export-format` isn't `:api`,"**Context**

passing this `:middleware` map is a little repetitive, need to think of a way to not have to specify this all over the codebase any time we want to do a query with an export format. Maybe this should be the default if `export-format` isn't `:api`?

From my code search I only saw this specific map in one other place, so unsure how much this is worth it.",qwef,2024-02-29 19:23:16+00:00,[],2024-02-29 19:23:17+00:00,,https://github.com/metabase/metabase/issues/39398,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161947275,issue,open,,"Determine if the import is needed, consider removing that","`src/metabase/db.clj` line `39`:
```
;; TODO - determine if we *actually* need to import any of these
;;
;; These are mostly here as a convenience to avoid having to rework a bunch of existing code. It's better to use these
;; functions directly where applicable.
```

",lbrdnk,2024-02-29 19:22:33+00:00,[],2024-02-29 19:22:33+00:00,,https://github.com/metabase/metabase/issues/39397,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161945174,issue,open,,Fix indetermistic select order in sub select query `metabase.driver.sql.query-processor-test/multiple-joins-with-expressions-test`,https://github.com/metabase/metabase/blob/80dcbdf/test/metabase/driver/sql/query_processor_test.clj#L410,qnkhuat,2024-02-29 19:21:15+00:00,[],2024-02-29 19:21:15+00:00,,https://github.com/metabase/metabase/issues/39396,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', '')]",[],
2161943054,issue,closed,not_planned,[dc.js migration] non-bar funnel does not work in subscription,"<img width=""600"" alt=""Screenshot 2024-02-29 at 11 18 48 AM"" src=""https://github.com/metabase/metabase/assets/37751258/1ddf61f5-cabc-49fe-89f7-d37b051c129d"">

http://localhost:3000/question/266-funnel-user-flow",EmmadUsmani,2024-02-29 19:20:06+00:00,['EmmadUsmani'],2024-03-11 16:39:45+00:00,2024-03-07 01:14:52+00:00,https://github.com/metabase/metabase/issues/39395,[],"[{'comment_id': 1981701730, 'issue_id': 2161943054, 'author': 'alxnddr', 'body': '@EmmadUsmani this is probably not related to ECharts and did not work before', 'created_at': datetime.datetime(2024, 3, 6, 20, 11, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1982160567, 'issue_id': 2161943054, 'author': 'EmmadUsmani', 'body': ""@alxnddr Yup I'm closing as a duplicate of https://github.com/metabase/metabase/issues/39743"", 'created_at': datetime.datetime(2024, 3, 7, 1, 14, 52, tzinfo=datetime.timezone.utc)}]","alxnddr on (2024-03-06 20:11:58 UTC): @EmmadUsmani this is probably not related to ECharts and did not work before

EmmadUsmani (Issue Creator) on (2024-03-07 01:14:52 UTC): @alxnddr Yup I'm closing as a duplicate of https://github.com/metabase/metabase/issues/39743

"
2161942298,issue,open,,Move exception class specification in sync to the driver level,"Currently we have a hard-coded list of potential DB exceptions, but a new driver could potentially have an exception class we didn't anticipate. This should be configurable at the driver level.

```
src/metabase/sync/util.clj:169:;; TODO: future, expand this to `driver` level, where the drivers themselves can add to the
```",tsmacdonald,2024-02-29 19:19:40+00:00,[],2024-02-29 19:19:41+00:00,,https://github.com/metabase/metabase/issues/39394,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Administration/Metadata & Sync', ''), ('.Backend', ''), ('.Team/Workflows', 'aka BEC')]",[],
2161939041,issue,open,,Keep track of sync/cache ops in the DB so that it supports multi-instance setups,"```
src/metabase/sync/util.clj:69:;; TODO - as @salsakran mentioned it would be nice to do this via the DB so we could better support multi-instance
```

Maybe the easiest way is for the ""Sync now"" button trigger a Quartz job and discard one that's already running",tsmacdonald,2024-02-29 19:17:33+00:00,[],2024-02-29 19:17:34+00:00,,https://github.com/metabase/metabase/issues/39393,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P2', 'Average run of the mill bug'), ('Administration/Metadata & Sync', ''), ('.Backend', ''), ('.Team/Workflows', 'aka BEC')]",[],
2161937671,issue,open,,driver/normalize-db-details should not touch/change appdb,"And bigquery driver is updating the appdb. 

https://github.com/metabase/metabase/blob/master/src/metabase/driver.clj#L810
https://github.com/metabase/metabase/blob/master/modules/drivers/bigquery-cloud-sdk/src/metabase/driver/bigquery_cloud_sdk.clj#L515",piranha,2024-02-29 19:16:38+00:00,[],2024-02-29 19:17:37+00:00,,https://github.com/metabase/metabase/issues/39392,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161935034,issue,open,,Evaluate whether table syncing should be case-insensitive,"```
src/metabase/sync/sync_metadata/tables.clj:128:;; TODO - should we make this logic case-insensitive like it is for fields?
```",tsmacdonald,2024-02-29 19:15:01+00:00,[],2024-02-29 19:15:02+00:00,,https://github.com/metabase/metabase/issues/39391,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Administration/Metadata & Sync', ''), ('.Backend', ''), ('.Team/Workflows', 'aka BEC')]",[],
2161932711,issue,open,,Sync keypaths should support table schemas,"```
src/metabase/sync/sync_metadata/metabase_metadata.clj:32:  ;; TODO: this does not support schemas in dbs :(
src/metabase/sync/sync_metadata/metabase_metadata.clj:54:  ;; TODO: this needs to support schemas
```",tsmacdonald,2024-02-29 19:13:23+00:00,[],2024-02-29 19:13:23+00:00,,https://github.com/metabase/metabase/issues/39390,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Administration/Metadata & Sync', ''), ('.Backend', ''), ('.Team/Workflows', 'aka BEC')]",[],
2161928253,issue,closed,completed,Make drivers specify whether they support fingerprinting,"Default it to `true`

```
src/metabase/sync/analyze/fingerprint.clj:215:  ;; TODO: Maybe the driver should have a function to tell you if it supports fingerprinting?
src/metabase/sync/analyze/fingerprint.clj:238:  ;; TODO: Maybe the driver should have a function to tell you if it supports fingerprinting?
```",tsmacdonald,2024-02-29 19:10:14+00:00,[],2024-03-15 05:23:14+00:00,2024-03-15 05:23:14+00:00,https://github.com/metabase/metabase/issues/39389,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Backend', ''), ('.Team/Workflows', 'aka BEC')]",[],
2161928158,issue,open,,Use TTL caching in `metabase.driver.mysql.actions/constraint->column-names`,"`src/metabase/driver/mysql/actions.clj` line `17`:
```
;;; TODO -- we should probably be TTL caching this information. Otherwise
;;; parsing 100 errors for a bulk action will result in 100 identical data
;;; warehouse queries. It's not like constraint columns are something we would
;;; expect to change regularly anyway. (See the twin function in namespace
;;; metabase.driver.postgres.actions.)
```",lbrdnk,2024-02-29 19:10:10+00:00,[],2025-02-04 20:29:49+00:00,,https://github.com/metabase/metabase/issues/39388,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template'), ('.Team/Querying', '')]",[],
2161927477,issue,open,,Remove DELETE dashboard and card endpoint,"**Context**

Comment is 7 years old 😅:
We can probably remove this in the near future since it should no longer be needed now that we're going to be setting `:archived` to `true` via the `PUT` endpoint instead

Also for card:
Pretty sure this endpoint is not actually used any more, since Cards are supposed to get archived (via PUT /api/card/:id) instead of deleted.  Should we remove this?

We should also remove the `dashboard-delete` and `card-delete` events once we remove these endpoints.
",qwef,2024-02-29 19:09:40+00:00,[],2024-02-29 20:18:39+00:00,,https://github.com/metabase/metabase/issues/39387,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161927062,issue,open,,driver/db-start-of-week can vary based on session variables or connection options but defmulti only accepts driver,https://github.com/metabase/metabase/blob/master/src/metabase/driver.clj#L810,piranha,2024-02-29 19:09:22+00:00,[],2025-02-04 20:29:46+00:00,,https://github.com/metabase/metabase/issues/39386,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]","[{'comment_id': 2611071903, 'issue_id': 2161927062, 'author': 'wzimrin', 'body': 'A related issue came up in https://github.com/metabase/metabase/issues/52035 -- in sql server, days of the week are based on the language settings, which set the DATEFIRST global variable.  In us_english, weeks start on sunday, while in french, they start on monday.  I ended up finding a slightly hacky workaround that was doable within the sql server driver code, but a proper solution here seems like it would be better.', 'created_at': datetime.datetime(2025, 1, 23, 21, 39, 36, tzinfo=datetime.timezone.utc)}]","wzimrin on (2025-01-23 21:39:36 UTC): A related issue came up in https://github.com/metabase/metabase/issues/52035 -- in sql server, days of the week are based on the language settings, which set the DATEFIRST global variable.  In us_english, weeks start on sunday, while in french, they start on monday.  I ended up finding a slightly hacky workaround that was doable within the sql server driver code, but a proper solution here seems like it would be better.

"
2161927047,issue,open,,"""All Options"" date filters are not always correctly substituted into text card parameters","### Describe the bug

If you add an ""All Options"" date filter to a dashboard and link it to a parameter in a text card, the value of the filter does not always exactly match the value in the text card.

<img width=""613"" alt=""image"" src=""https://github.com/metabase/metabase/assets/32746338/4c6497fe-bab0-41e9-9ee8-6f3625bb1eed"">
<img width=""585"" alt=""image"" src=""https://github.com/metabase/metabase/assets/32746338/d637f158-679b-47f2-b420-a67152fb7a66"">

### To Reproduce

1. Go to a dashboard
2. Click on 'Edit dashboard' -> 'Add a filter' -> 'Time' -> 'All Options'
3. Add a text card with a parameter and link the filter to it
4. Set a non-trivial value for the filter, particularly ""Specific dates"" or ""Relative dates"". Sometimes it will show just the date alone (excluding times and `Before`/`After`) and sometimes it will show the raw filter value (like `next30days-from-7days`)

### Expected behavior

Should always match the filter value

### Logs

_No response_

### Information about your Metabase installation

```JSON
current master
```


### Severity

p3

### Additional context

_No response_",noahmoss,2024-02-29 19:09:21+00:00,[],2025-02-04 20:29:06+00:00,,https://github.com/metabase/metabase/issues/39385,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Querying/Parameters & Variables', 'Filter widgets, field filters, variables etc.'), ('Difficulty:Easy', ''), ('.Backend', ''), ('.Team/Querying', '')]","[{'comment_id': 2617775581, 'issue_id': 2161927047, 'author': 'ranquild', 'body': ""Bug in shared CLJS code - `substitute_tags`. It should match the FE logic for formatting date parameter values. It's basic and uses MBQL lib for the most part https://github.com/metabase/metabase/blob/500f598ce8c3d7b8a7a199e79e5d658b12dc36ca/frontend/src/metabase/querying/filters/utils/dates.ts#L249."", 'created_at': datetime.datetime(2025, 1, 28, 3, 37, 8, tzinfo=datetime.timezone.utc)}]","ranquild on (2025-01-28 03:37:08 UTC): Bug in shared CLJS code - `substitute_tags`. It should match the FE logic for formatting date parameter values. It's basic and uses MBQL lib for the most part https://github.com/metabase/metabase/blob/500f598ce8c3d7b8a7a199e79e5d658b12dc36ca/frontend/src/metabase/querying/filters/utils/dates.ts#L249.

"
2161925688,issue,closed,completed,MLv2 Schema for order by should have a no-duplicates constraint,"It doesn't make sense to include the same expression multiple times in an order by, 

```sql
ORDER BY x DESC, y ASC, x DESC
```

is at best no different from

```sql
ORDER BY x DESC, y ASC
```

and possibly affecting performance if the DB doesn't optimize it out. 

The old legacy MBQL schema has a constraint to disallow duplicates, but the MLv2 schema seems to be missing it.

We need to make sure that this ignores lib UUIDs

This should be safe to add without affecting existing queries because the legacy schema would have disallowed it ",camsaul,2024-02-29 19:08:22+00:00,['appleby'],2024-10-08 16:15:43+00:00,2024-09-02 15:45:04+00:00,https://github.com/metabase/metabase/issues/39384,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P2', 'Average run of the mill bug'), ('Querying/MBQL', ''), ('Difficulty:Easy', ''), ('.Backend', ''), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib'), ('.Team/Querying', ''), ('good first issue', 'A starter issue that is good for someone new to the codebase or is a new contributor')]","[{'comment_id': 2054168903, 'issue_id': 2161925688, 'author': 'DShivansh', 'body': 'Hi @camsaul \r\nI am trying to learn Clojure and Metabase looks like a good project to me, being very new to the project can you please assist me in identifying the appropriate starting point to delve into the project in order to effectively address the current issue.', 'created_at': datetime.datetime(2024, 4, 14, 19, 58, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 2055272324, 'issue_id': 2161925688, 'author': 'paoliniluis', 'body': '@DShivansh I would strongly suggest you take another issue as a starting point, this one is super advanced', 'created_at': datetime.datetime(2024, 4, 15, 5, 21, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 2055410950, 'issue_id': 2161925688, 'author': 'DShivansh', 'body': '@paoliniluis do you have any beginner friendly issue in mind that I can start looking into?', 'created_at': datetime.datetime(2024, 4, 15, 5, 49, 35, tzinfo=datetime.timezone.utc)}]","DShivansh on (2024-04-14 19:58:28 UTC): Hi @camsaul 
I am trying to learn Clojure and Metabase looks like a good project to me, being very new to the project can you please assist me in identifying the appropriate starting point to delve into the project in order to effectively address the current issue.

paoliniluis on (2024-04-15 05:21:54 UTC): @DShivansh I would strongly suggest you take another issue as a starting point, this one is super advanced

DShivansh on (2024-04-15 05:49:35 UTC): @paoliniluis do you have any beginner friendly issue in mind that I can start looking into?

"
2161925004,issue,open,,Transpose names of fingerprint-fields! and fingerprint-table!,"```
src/metabase/sync/analyze/fingerprint.clj:192:;; TODO - `fingerprint-fields!` and `fingerprint-table!` should probably have their names switched
```",tsmacdonald,2024-02-29 19:07:52+00:00,[],2024-02-29 19:07:52+00:00,,https://github.com/metabase/metabase/issues/39383,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P2', 'Average run of the mill bug'), ('.Backend', '')]",[],
2161924695,issue,open,,Bring the fingerprint-based unit selection logic from typescript into metabase.lib.drill-thru.summarize-column-by-time," Bring the fingerprint-based unit selection logic from https://github.com/metabase/metabase/blob/0624d8d0933f577cc70c03948f4b57f73fe13ada/frontend/src/metabase-lib/metadata/Field.ts#L397
into this drill. Currently it always chooses the default date unit of months.

The TODO is in the test file `metabase.lib.drill-thru.summarize-column-by-time-test`",adam-james-v,2024-02-29 19:07:37+00:00,[],2024-02-29 19:07:38+00:00,,https://github.com/metabase/metabase/issues/39382,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', '')]",[],
2161924113,issue,open,,"Combine :settings, :constraints, and :middleware into one unified :options","```
src/metabase/mbql/schema.cljc:1847:       ;; TODO - can we combine these all into a single `:options` map?
```",tsmacdonald,2024-02-29 19:07:14+00:00,[],2025-02-04 20:29:49+00:00,,https://github.com/metabase/metabase/issues/39381,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Backend', ''), ('.Team/Querying', '')]",[],
2161923303,issue,open,,Fix `metabase.lib.drill-thru.underlying-records-test/underlying-records-availability-test` for pivot tables,https://github.com/metabase/metabase/blob/efa166c/test/metabase/lib/drill_thru/underlying_records_test.cljc#L26-L33,qnkhuat,2024-02-29 19:06:39+00:00,[],2024-02-29 19:06:39+00:00,,https://github.com/metabase/metabase/issues/39380,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', '')]",[],
2161922592,issue,open,,Add coercer to `graph-decoder`,,qwef,2024-02-29 19:06:09+00:00,[],2024-02-29 19:06:09+00:00,,https://github.com/metabase/metabase/issues/39379,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161918086,issue,open,,Hanlde whitespace edge cases for `metabase.lib.native/extract-template-tags`,"https://github.com/metabase/metabase/blob/b159e81/test/metabase/lib/native_test.cljc#L29

https://github.com/metabase/metabase/blob/b159e81/test/metabase/lib/native_test.cljc#L36

https://github.com/metabase/metabase/blob/b159e81/test/metabase/lib/native_test.cljc#L57",qnkhuat,2024-02-29 19:02:56+00:00,[],2024-02-29 19:02:57+00:00,,https://github.com/metabase/metabase/issues/39378,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Wanted: MLv2', 'Issues that will be fixed (or easier to fix, or possible to fix) when we have MLv2')]",[],
2161914599,issue,open,,Info schema is too permissive,"```
;; TODO - this schema is somewhat misleading because if you use a function
;; like [[metabase.query-processor/userland-query]] some of these keys (e.g. `:context`) are in fact required
(mr/def ::Info

```",tsmacdonald,2024-02-29 19:00:27+00:00,[],2024-02-29 19:00:27+00:00,,https://github.com/metabase/metabase/issues/39377,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Backend', '')]",[],
2161913822,issue,open,,Address to do in `metabase.lib.query-test/type-fill-in-converted-test` test,https://github.com/metabase/metabase/blob/898e284/test/metabase/lib/query_test.cljc#L94,qnkhuat,2024-02-29 18:59:56+00:00,[],2024-02-29 18:59:57+00:00,,https://github.com/metabase/metabase/issues/39376,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', '')]",[],
2161913169,issue,open,,Use our execute-sql! fn in metabase.test.data.sql-jdbc.load-data instead of jdbc/execute,Inside the `do-insert` method for `:sql-jdbc/test-extensions` we use jdbc's execute function but we can instead use our own execute-sql! implementation. ,adam-james-v,2024-02-29 18:59:29+00:00,[],2024-02-29 18:59:30+00:00,,https://github.com/metabase/metabase/issues/39375,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', '')]",[],
2161911183,issue,open,,"Parameter.{id, target, value, name} should not be optional","```
src/metabase/mbql/schema.cljc:1631:   ;; TODO -- these definitely SHOULD NOT be optional but a ton of tests aren't passing them in like they should be.
```",tsmacdonald,2024-02-29 18:58:20+00:00,[],2025-02-04 20:29:50+00:00,,https://github.com/metabase/metabase/issues/39374,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Backend', ''), ('.Team/Querying', '')]","[{'comment_id': 1971775195, 'issue_id': 2161911183, 'author': 'tsmacdonald', 'body': '@calherries is going to twiddle this description', 'created_at': datetime.datetime(2024, 2, 29, 18, 58, 30, tzinfo=datetime.timezone.utc)}]","tsmacdonald (Issue Creator) on (2024-02-29 18:58:30 UTC): @calherries is going to twiddle this description

"
2161910360,issue,open,,Fix and re-enable `metabase.lib.drill-thru-test/histogram-available-drill-thrus-test`,Resolves an open TODO: `;; TODO: Restore this test once zoom-in and underlying-records are checked properly.`,noahmoss,2024-02-29 18:57:44+00:00,[],2025-02-04 20:29:49+00:00,,https://github.com/metabase/metabase/issues/39373,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Team/Querying', '')]",[],
2161910339,issue,open,,Use `metabase.driver.sql.query-processor.deprecated/log-deprecation-warning` in all deprecated driver methods,"`src/metabase/driver/sql/query_processor/deprecated.clj` line `17`:
`;; TODO -- this is actually pretty handy and I think we ought to use it for all the deprecated driver methods.`

Let's make use of the function in all of the deprecated driver methods.",lbrdnk,2024-02-29 18:57:44+00:00,[],2025-02-04 20:29:49+00:00,,https://github.com/metabase/metabase/issues/39372,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template'), ('.Team/Querying', '')]",[],
2161908689,issue,closed,completed,Fix `metabase.lib.drill-thru-test/histogram-available-drill-thrus-test` test,https://github.com/metabase/metabase/blob/42b48cb/test/metabase/lib/drill_thru_test.cljc#L569,qnkhuat,2024-02-29 18:56:59+00:00,[],2024-02-29 19:45:29+00:00,2024-02-29 19:45:29+00:00,https://github.com/metabase/metabase/issues/39371,"[('Type:Tech Debt', 'or Refactoring'), ('Querying/X-rays', ''), ('.Backend', '')]","[{'comment_id': 1971841768, 'issue_id': 2161908689, 'author': 'qnkhuat', 'body': 'duplicated of https://github.com/metabase/metabase/issues/39373', 'created_at': datetime.datetime(2024, 2, 29, 19, 45, 29, tzinfo=datetime.timezone.utc)}]","qnkhuat (Issue Creator) on (2024-02-29 19:45:29 UTC): duplicated of https://github.com/metabase/metabase/issues/39373

"
2161908455,issue,open,,Change `move-collection!` to be in `t2/define-before-update` instead of it's own function,"**Context**

I'm not 100% sure it makes sense that moving a Collection requires a special call to `move-collection!`, while archiving is handled automatically as part of the `pre-update` logic when you change a Collection's `archived` value. They are both recursive operations; couldn't we just have moving happen automatically when you change a `:location` as well?",qwef,2024-02-29 18:56:52+00:00,[],2024-02-29 18:56:53+00:00,,https://github.com/metabase/metabase/issues/39370,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161906334,issue,open,,FE providing extraneous MBQL parameters,"Multiple related TODOs:

```
   ;; TODO FIXME -- actually, it turns out the the FE client passes parameter type `:category` for parameters in
   ;; public Cards. Who knows why! For now, we'll continue allowing it. But we should fix it soon. See
   ;; [[metabase.api.public-test/execute-public-card-with-parameters-test]]
   
      ;; Like `:id` and `:category`, the `:location/*` types are primarily widget types. They don't really have a meaning
   ;; as a parameter type, so in an ideal world they wouldn't be allowed; however it seems like the FE still passed
   ;; these in as parameter type on occasion anyway. In this case the backend is just supposed to infer the actual
   ;; type -- which should be `:text` and, in the case of ZIP code, possibly `:number`.
   ;;
   ;; As with `:id` and `:category`, it would be preferable to just pass in a parameter with type `:text` or `:number`
   ;; for these widget types, but for compatibility we'll allow them to continue to be used as parameter types for the
   ;; time being. We'll only allow that if the widget type matches exactly, however.

```

",tsmacdonald,2024-02-29 18:55:57+00:00,[],2025-02-04 20:29:48+00:00,,https://github.com/metabase/metabase/issues/39369,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Backend', ''), ('.Team/Querying', '')]",[],
2161904805,issue,open,,Consider adding a `lib/join-alias` function,"Resolves an open TODO: https://github.com/metabase/metabase/blob/master/test/metabase/lib/expression_test.cljc#L351

```
      ;; TODO: There should probably be a (lib/join-alias join) ;=> ""Products"" function.
      (is (=? [[:< {:lib/expression-name ""bad_product""}
                [:field {:join-alias (:alias join)} (meta/id :products :rating)]
                3]]
              (lib/expressions query)))
```",noahmoss,2024-02-29 18:55:05+00:00,[],2024-02-29 18:55:06+00:00,,https://github.com/metabase/metabase/issues/39368,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', '')]",[],
2161904574,issue,open,,Consider renaming `driver/notify-database-updated` to `driver/notify-database-updated!`,https://github.com/metabase/metabase/blob/master/src/metabase/driver.clj#715,piranha,2024-02-29 18:54:59+00:00,[],2024-02-29 18:54:59+00:00,,https://github.com/metabase/metabase/issues/39367,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161903366,issue,closed,completed,zoom-in-timeseries drill should not include `:hour` and `:minute` for `DATE` columns,"Since `DATE` columns don't have time components, we shouldn't try to zoom in to `:hour` or `:minute` on them. `available-drill-thrus`/`zoom-in-timeseries` should not suggest such zooms ",camsaul,2024-02-29 18:54:28+00:00,['appleby'],2024-08-27 23:28:37+00:00,2024-08-27 17:27:48+00:00,https://github.com/metabase/metabase/issues/39366,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Difficulty:Easy', ''), ('.Backend', ''), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib'), ('Querying/Drill Thrus', 'Refining existing queries with Drill Thrus'), ('.Team/Querying', '')]",[],
2161897580,issue,open,,Merge mbql.schema/SourceQueryMetadata and mb.sync.analyze.query_results/ResultColumnMetadata,"They're basically the same. Hidden coupling!

```
src/metabase/mbql/schema.cljc:1279:  ;; TODO - there is a very similar schema in `metabase.sync.analyze.query-results`; see if we can merge them
```",tsmacdonald,2024-02-29 18:51:51+00:00,[],2024-02-29 18:51:52+00:00,,https://github.com/metabase/metabase/issues/39364,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Backend', '')]",[],
2161891732,issue,open,,Consider splitting and reorganize `metabase.test.data.interface`,"https://github.com/metabase/metabase/blob/6f4aaf5e8f506ff158f1159b93071a5acf9c90af/test/metabase/test/data/interface.clj#L7

https://github.com/metabase/metabase/blob/6f4aaf5e8f506ff158f1159b93071a5acf9c90af/test/metabase/test/data/interface.clj#L468

https://github.com/metabase/metabase/blob/6f4aaf5e8f506ff158f1159b93071a5acf9c90af/test/metabase/test/data/interface.clj#L618",qnkhuat,2024-02-29 18:49:07+00:00,[],2024-02-29 18:49:08+00:00,,https://github.com/metabase/metabase/issues/39363,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', '')]",[],
2161886738,issue,open,,Require ID in template tag; fix oudated tests,"```
src/metabase/mbql/schema.cljc:1102:   ;; TODO -- `:id` is actually 100% required but we have a lot of tests that don't specify it because this constraint
```",tsmacdonald,2024-02-29 18:46:50+00:00,[],2025-02-04 20:29:49+00:00,,https://github.com/metabase/metabase/issues/39362,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Backend', ''), ('.Team/Querying', '')]",[],
2161884698,issue,closed,completed,[dc.js migration] funnel bar does not work in app,"<img width=""1908"" alt=""Screenshot 2024-02-29 at 10 41 55 AM"" src=""https://github.com/metabase/metabase/assets/37751258/044a37b2-ff30-4a13-923b-71ced39eafc9"">
",EmmadUsmani,2024-02-29 18:45:55+00:00,['EmmadUsmani'],2024-03-05 21:21:29+00:00,2024-03-05 21:21:29+00:00,https://github.com/metabase/metabase/issues/39361,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2161884443,issue,open,,Check if aggregation clauses have corresponding index,"```
src/metabase/mbql/schema.cljc:414:;; TODO - it would be nice if we could check that there's actually an aggregation with the corresponding index,
```",tsmacdonald,2024-02-29 18:45:50+00:00,[],2025-02-04 20:29:49+00:00,,https://github.com/metabase/metabase/issues/39360,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Backend', ''), ('.Team/Querying', '')]",[],
2161882564,issue,open,,Allow composing aggregations,"```
src/metabase/mbql/schema.cljc:410:;; TODO - shouldn't we allow composing aggregations in expressions? e.g.

;;    {:order-by [[:asc [:+ [:aggregation 0] [:aggregation 1]]]]}

```",tsmacdonald,2024-02-29 18:45:00+00:00,[],2025-02-04 20:29:49+00:00,,https://github.com/metabase/metabase/issues/39358,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Backend', ''), ('.Team/Querying', '')]",[],
2161880360,issue,open,,Consider using java.sql.Wrapper instead of metabase.plugins.jdbc-proxy/ProxyDriver,https://github.com/metabase/metabase/blob/master/src/metabase/plugins/jdbc_proxy.clj#18,piranha,2024-02-29 18:44:01+00:00,[],2024-02-29 18:44:47+00:00,,https://github.com/metabase/metabase/issues/39357,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161879440,issue,open,,Update `metabase.test.data.sql/qualified-name-components` to also accept schema name,Resolves an old TODO: https://github.com/metabase/metabase/blob/master/test/metabase/test/data/sql.clj#L37,noahmoss,2024-02-29 18:43:40+00:00,[],2025-02-04 20:29:49+00:00,,https://github.com/metabase/metabase/issues/39356,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Team/Querying', '')]",[],
2161879377,issue,open,,"Improve display names for `:sum-where`, `:share`, etc.","Currently these sorts of aggregations get display names like

```
Sum of <field> matching condition
```

MLv2 no has sophisticated logic for generating display names for filter clauses, let's leverage that to generate more meaningful display names here. We'll probably need to update a handful of tests
",camsaul,2024-02-29 18:43:39+00:00,[],2025-02-04 20:30:31+00:00,,https://github.com/metabase/metabase/issues/39355,"[('Querying/Processor', ''), ('Type:New Feature', ''), ('Difficulty:Easy', ''), ('.Backend', ''), ('Querying/GUI', 'Query builder catch-all, including simple mode'), ('Querying/Notebook', 'Items specific to the Custom/Notebook query builder'), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib'), ('.Wanted: MLv2', 'Issues that will be fixed (or easier to fix, or possible to fix) when we have MLv2'), ('.Team/Querying', '')]","[{'comment_id': 2315812437, 'issue_id': 2161879377, 'author': 'appleby', 'body': 'Any specific preference on how to update the display names? For sum-where, I assume we want something like\r\n\r\n```\r\nSum of <field> matching condition <condition>\r\n```\r\n\r\ninstead, where that `<condition>` comes from calling `display-name` on the `_pred` arg to this method?\r\n\r\n```clojure\r\n(defmethod lib.metadata.calculation/display-name-method :sum-where\r\n  [query stage-number [_sum-where _opts x _pred] style]\r\n  (i18n/tru ""Sum of {0} matching condition"" (lib.metadata.calculation/display-name query stage-number x style)))\r\n```\r\n\r\nAnd likewise for `:share`, `:count-where`, etc.', 'created_at': datetime.datetime(2024, 8, 28, 16, 37, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2315878895, 'issue_id': 2161879377, 'author': 'appleby', 'body': 'Per slack thread, putting this back on the backlog for now:\r\n\r\nhttps://metaboat.slack.com/archives/C0645JP1W81/p1724864117528219', 'created_at': datetime.datetime(2024, 8, 28, 17, 14, 53, tzinfo=datetime.timezone.utc)}]","appleby on (2024-08-28 16:37:30 UTC): Any specific preference on how to update the display names? For sum-where, I assume we want something like

```
Sum of <field> matching condition <condition>
```

instead, where that `<condition>` comes from calling `display-name` on the `_pred` arg to this method?

```clojure
(defmethod lib.metadata.calculation/display-name-method :sum-where
  [query stage-number [_sum-where _opts x _pred] style]
  (i18n/tru ""Sum of {0} matching condition"" (lib.metadata.calculation/display-name query stage-number x style)))
```

And likewise for `:share`, `:count-where`, etc.

appleby on (2024-08-28 17:14:53 UTC): Per slack thread, putting this back on the backlog for now:

https://metaboat.slack.com/archives/C0645JP1W81/p1724864117528219

"
2161876810,issue,open,,Improve error messaging for validate-temporal-unit,"This may not be worth it / not worth the verbosity, but:

```
src/metabase/mbql/schema.cljc:308:  ;; TODO - consider breaking this out into separate constraints for the three different types so we can generate more
```",tsmacdonald,2024-02-29 18:42:36+00:00,[],2025-02-04 20:29:50+00:00,,https://github.com/metabase/metabase/issues/39354,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Backend', ''), ('.Team/Querying', '')]",[],
2161875749,issue,closed,completed,Add more robust handling of `?` in `unprepare :sql`,"`src/metabase/driver/sql/util/unprepare.clj` line `103`:
```
      ;; TODO - this is not smart enough to handle question marks in non argument contexts, for example if someone
      ;; were to have a question mark inside an identifier such as a table name. I think we'd have to parse the SQL in
      ;; order to handle those situations.
```

Seems that TODO can be addressed easily when the https://github.com/metabase/metabase/issues/36911 is resolved.",lbrdnk,2024-02-29 18:41:51+00:00,['camsaul'],2024-07-03 21:38:05+00:00,2024-07-03 21:37:13+00:00,https://github.com/metabase/metabase/issues/39353,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]","[{'comment_id': 2115927742, 'issue_id': 2161875749, 'author': 'camsaul', 'body': ""I think the right way to fix this is to tackle #28169 and remove it entirely. With Honey SQL 2 you can have it compile everything `:inline`, so we'd have no need to compile with `?` and immediately undo things."", 'created_at': datetime.datetime(2024, 5, 16, 18, 24, 10, tzinfo=datetime.timezone.utc)}]","camsaul (Assginee) on (2024-05-16 18:24:10 UTC): I think the right way to fix this is to tackle #28169 and remove it entirely. With Honey SQL 2 you can have it compile everything `:inline`, so we'd have no need to compile with `?` and immediately undo things.

"
2161874788,issue,open,,We should switch to some geoip DB instead of using external service,https://github.com/metabase/metabase/blob/master/src/metabase/server/request/util.clj:151,piranha,2024-02-29 18:41:10+00:00,[],2024-02-29 18:41:10+00:00,,https://github.com/metabase/metabase/issues/39352,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161874677,issue,open,,Maybe change `always-true-hsql-expr` and `always-false-hsql-expr` to `true` and `false`,"**Context**

In Postgres and H2 at least I think we could just do `true` or `false` here... not sure about MySQL.

",qwef,2024-02-29 18:41:05+00:00,[],2024-02-29 18:41:06+00:00,,https://github.com/metabase/metabase/issues/39351,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161872697,issue,open,,Convert `get-dataset-definition` to a defprotocol,https://github.com/metabase/metabase/blob/80dcbdfbf317b322c4c96f2d05927e290a9ed662/test/metabase/test/data/interface.clj#L92,qnkhuat,2024-02-29 18:39:59+00:00,[],2024-02-29 18:39:59+00:00,,https://github.com/metabase/metabase/issues/39350,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', '')]",[],
2161871459,issue,open,,relative-datetime clause does not support units for `current`,"```
src/metabase/mbql/schema.cljc:130:;; TODO - `unit` is not allowed if `n` is `current`
```",tsmacdonald,2024-02-29 18:39:07+00:00,[],2025-02-04 20:29:50+00:00,,https://github.com/metabase/metabase/issues/39349,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Backend', ''), ('.Team/Querying', '')]",[],
2161868866,issue,open,,Consider renaming metabase.test.data.datasets,"A todo comment in the namespace suggests renaming the namespace. 
",adam-james-v,2024-02-29 18:37:17+00:00,[],2024-02-29 18:37:17+00:00,,https://github.com/metabase/metabase/issues/39348,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', '')]",[],
2161867871,issue,open,,we should set `site-path` in middlware session,"we should set `site-path` as well. Don't want to enable this yet so we don't end up breaking things

https://github.com/metabase/metabase/blob/master/src/metabase/server/middleware/session.clj#L124
",escherize,2024-02-29 18:36:38+00:00,[],2024-02-29 18:36:38+00:00,,https://github.com/metabase/metabase/issues/39346,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161866532,issue,open,,Write a replace-all function,"cf. #39341

```
src/metabase/mbql/util/match.clj:243:;; TODO - it would be useful to have something like a `replace-all` function as well
```",tsmacdonald,2024-02-29 18:35:44+00:00,[],2025-02-04 20:29:50+00:00,,https://github.com/metabase/metabase/issues/39345,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Backend', ''), ('.Team/Querying', '')]",[],
2161865492,issue,open,,Fix types in `api/collection/tree` and `valid-model-param-values`,"**Context**

For historical reasons this returns Saved Questions AS 'card' AND Models as 'dataset'; we should fix this at some point in the future.

",qwef,2024-02-29 18:35:00+00:00,[],2024-02-29 18:35:30+00:00,,https://github.com/metabase/metabase/issues/39344,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161865325,issue,open,,Use allowMultiQueries=true for test connection instead of execute multiple statements,https://github.com/metabase/metabase/blob/a9d2006745d3a7e8a2fdf942ca3fa6487da6af11/test/metabase/test/data/mysql.clj#L54,qnkhuat,2024-02-29 18:34:53+00:00,[],2024-02-29 18:34:53+00:00,,https://github.com/metabase/metabase/issues/39343,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', '')]",[],
2161865180,issue,closed,not_planned,Disallow and/or automatically fix filters like `:between` or `:inside` with min and max in the wrong order,"```clj
[:between {} <field> 200 100]
```

gets compiled to something like 

```sql
WHERE field >= 200 
  AND field < 100
```

which does not give you any results. I think we should probably switch these values around automatically in the MLv2 functions if we see them (DWIM) and also enforce these constraints in the relevant schemas. Hopefully this shouldn't be a big deal for existing queries since those queries would have been broken anyway.",camsaul,2024-02-29 18:34:47+00:00,[],2024-08-28 17:23:41+00:00,2024-08-28 17:22:59+00:00,https://github.com/metabase/metabase/issues/39342,"[('Type:Tech Debt', 'or Refactoring'), ('Difficulty:Easy', ''), ('.Backend', ''), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib'), ('.Team/Querying', ''), ('good first issue', 'A starter issue that is good for someone new to the codebase or is a new contributor')]","[{'comment_id': 2315893498, 'issue_id': 2161865180, 'author': 'ranquild', 'body': 'Argument swapping is done on the FE now, and it is more advanced than described here (.e.g with missing `max` we switch to `:>=` etc)', 'created_at': datetime.datetime(2024, 8, 28, 17, 22, 59, tzinfo=datetime.timezone.utc)}]","ranquild on (2024-08-28 17:22:59 UTC): Argument swapping is done on the FE now, and it is more advanced than described here (.e.g with missing `max` we switch to `:>=` etc)

"
2161865113,issue,open,,Write a match-all function,"```
src/metabase/mbql/util/match.clj:201:;; TODO - it would be ultra handy to have a `match-all` function that could handle clauses with recursive matches,
```",tsmacdonald,2024-02-29 18:34:44+00:00,[],2025-02-04 20:29:49+00:00,,https://github.com/metabase/metabase/issues/39341,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Backend', ''), ('.Team/Querying', '')]",[],
2161861944,issue,closed,completed,Rename `metabase.driver.sql.util.unprepare/unprepare` to something more appropriate,"`src/metabase/driver/sql/util/unprepare.clj` line `83`:
```
;; TODO - I think a name like `deparameterize` would be more appropriate here
```",lbrdnk,2024-02-29 18:32:30+00:00,['camsaul'],2024-07-03 21:37:59+00:00,2024-07-03 21:37:13+00:00,https://github.com/metabase/metabase/issues/39339,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]","[{'comment_id': 2115927897, 'issue_id': 2161861944, 'author': 'camsaul', 'body': ""I think the right way to fix this is to tackle #28169 and remove it entirely. With Honey SQL 2 you can have it compile everything `:inline`, so we'd have no need to compile with `?` and immediately undo things."", 'created_at': datetime.datetime(2024, 5, 16, 18, 24, 17, tzinfo=datetime.timezone.utc)}]","camsaul (Assginee) on (2024-05-16 18:24:17 UTC): I think the right way to fix this is to tackle #28169 and remove it entirely. With Honey SQL 2 you can have it compile everything `:inline`, so we'd have no need to compile with `?` and immediately undo things.

"
2161856154,issue,open,,Delete MovieDB mock driver,"`metabase.test.mock.moviedb` is used in a single sync test, for the `_metabase_metadata` table functionality. We could test this with a different existing mock database and remove this one.",noahmoss,2024-02-29 18:28:37+00:00,[],2024-02-29 18:28:38+00:00,,https://github.com/metabase/metabase/issues/39338,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', '')]",[],
2161853490,issue,closed,completed,Remove the `unprepare-value [:sql Instant]` implementation,TODO resides in the file `src/metabase/driver/sql/util/unprepare.clj` line 77 at the time of writing. Confirm the implementation can be removed and delete it.,lbrdnk,2024-02-29 18:26:48+00:00,['camsaul'],2024-07-03 21:37:55+00:00,2024-07-03 21:37:13+00:00,https://github.com/metabase/metabase/issues/39336,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]","[{'comment_id': 2115928067, 'issue_id': 2161853490, 'author': 'camsaul', 'body': ""I think the right way to fix this is to tackle #28169 and remove it entirely. With Honey SQL 2 you can have it compile everything `:inline`, so we'd have no need to compile with `?` and immediately undo things."", 'created_at': datetime.datetime(2024, 5, 16, 18, 24, 23, tzinfo=datetime.timezone.utc)}]","camsaul (Assginee) on (2024-05-16 18:24:23 UTC): I think the right way to fix this is to tackle #28169 and remove it entirely. With Honey SQL 2 you can have it compile everything `:inline`, so we'd have no need to compile with `?` and immediately undo things.

"
2161851369,issue,closed,completed,Address TODOs in `metabase.test.util.log`,"https://github.com/metabase/metabase/blob/master/test/metabase/test/util/log.clj#L238
https://github.com/metabase/metabase/blob/master/test/metabase/test/util/log.cljs#L17",noahmoss,2024-02-29 18:25:20+00:00,[],2024-10-08 16:17:17+00:00,2024-08-16 14:17:47+00:00,https://github.com/metabase/metabase/issues/39335,"[('Type:Tech Debt', 'or Refactoring'), ('Difficulty:Easy', ''), ('.Backend', ''), (':broom:', 'no-brainer cleanup issues to clear out when you have an hour left until EoD or something')]",[],
2161848321,issue,closed,completed,Remove Metadata schemas in `lib.metadata` and use the versions in `lib.schema.metadata` instead,"Originally Malli schemas for MLv2 metadata like `ColumnMetadata` lived in `metabase.lib.metadata`, a while ago we moved them to `metabase.lib.schema.metadata` so they could live with all of the other MLv2 schemas. Now `ColumnMetadata` is a just a `def` for `::lib.schema.metadata/column`. Let's just use the keyword versions like `::lib.schema.metadata/column` directly everywhere and get rid of the defs in `metabase.lib.metadata`, we don't need two ways to refer to the same thing.",camsaul,2024-02-29 18:23:15+00:00,[],2024-05-15 18:28:20+00:00,2024-05-15 18:28:19+00:00,https://github.com/metabase/metabase/issues/39334,"[('Type:Tech Debt', 'or Refactoring'), ('Difficulty:Easy', ''), ('.Backend', ''), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib'), ('good first issue', 'A starter issue that is good for someone new to the codebase or is a new contributor')]","[{'comment_id': 1971769113, 'issue_id': 2161848321, 'author': 'bshepherdson', 'body': 'Going one step further, there are schemas for queries and parts of queries in the QP codebase as well, which seem to overlap with `metabase.lib.schema.*`. These should be unified, probably in the `lib.schema.*` namespaces.', 'created_at': datetime.datetime(2024, 2, 29, 18, 55, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 2113179404, 'issue_id': 2161848321, 'author': 'camsaul', 'body': 'Fixed by #42070', 'created_at': datetime.datetime(2024, 5, 15, 18, 28, 19, tzinfo=datetime.timezone.utc)}]","bshepherdson on (2024-02-29 18:55:48 UTC): Going one step further, there are schemas for queries and parts of queries in the QP codebase as well, which seem to overlap with `metabase.lib.schema.*`. These should be unified, probably in the `lib.schema.*` namespaces.

camsaul (Issue Creator) on (2024-05-15 18:28:19 UTC): Fixed by #42070

"
2161848241,issue,closed,completed,Remove duplicate `mbql-clause?` fn,"One is in mb.mbql.schema.helpers, one is in mb.mbql.util

```
src/metabase/mbql/schema/helpers.cljc:27:;; TODO - this is a copy of the one in the [[metabase.mbql.util]] namespace. We need to reorganize things a bit so we
```",tsmacdonald,2024-02-29 18:23:12+00:00,[],2024-10-09 21:22:01+00:00,2024-10-09 19:31:55+00:00,https://github.com/metabase/metabase/issues/39333,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Difficulty:Easy', ''), ('.Backend', ''), (':broom:', 'no-brainer cleanup issues to clear out when you have an hour left until EoD or something'), ('.Team/Querying', ''), ('good first issue', 'A starter issue that is good for someone new to the codebase or is a new contributor')]","[{'comment_id': 2032422328, 'issue_id': 2161848241, 'author': 'sdduursma', 'body': ""Hello, I'm interested in contributing to Metabase, and this issue seems like a good one to start with. To make sure, is this issue still relevant, and would you accept an external contribution?"", 'created_at': datetime.datetime(2024, 4, 2, 15, 46, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2033571711, 'issue_id': 2161848241, 'author': 'darksciencebase', 'body': '@sdduursma yes! (and thank you for your interest in contributing to Metabase)', 'created_at': datetime.datetime(2024, 4, 3, 5, 38, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 2034266794, 'issue_id': 2161848241, 'author': 'sdduursma', 'body': ""Thanks @darksciencebase, I've opened a PR with a proposed solution: https://github.com/metabase/metabase/pull/40945"", 'created_at': datetime.datetime(2024, 4, 3, 11, 4, 27, tzinfo=datetime.timezone.utc)}]","sdduursma on (2024-04-02 15:46:40 UTC): Hello, I'm interested in contributing to Metabase, and this issue seems like a good one to start with. To make sure, is this issue still relevant, and would you accept an external contribution?

darksciencebase on (2024-04-03 05:38:36 UTC): @sdduursma yes! (and thank you for your interest in contributing to Metabase)

sdduursma on (2024-04-03 11:04:27 UTC): Thanks @darksciencebase, I've opened a PR with a proposed solution: https://github.com/metabase/metabase/pull/40945

"
2161848124,issue,open,,Add middleware for public-setting endpoints ,"**Context**

Why don't we just make these routes have a bit of middleware that includes the `validation/check-public-sharing-enabled` check in each of them? That way we don't need to remember to include the line in every single endpoint definition here? Wouldn't that be 100x better?!

Also a smart person would probably just parse the UUIDs automatically in middleware as appropriate for `/dashboard` vs `/card`. 

https://github.com/metabase/metabase/blob/master/src/metabase/api/public.clj#L657-L662

",qwef,2024-02-29 18:23:07+00:00,[],2024-02-29 18:27:45+00:00,,https://github.com/metabase/metabase/issues/39332,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]",[],
2161847002,issue,closed,completed,Rename the `metabase.driver.sql.util.unprepare` to `metabase.driver.sql.unprepare`,"Why? Because it's no longer just an util namesapace. As the namespace contains defmultis, the change would have to be communicated through the change log / depreciations. See the docstring of the namespace in question for more info.",lbrdnk,2024-02-29 18:22:22+00:00,['camsaul'],2024-07-03 21:37:49+00:00,2024-07-03 21:37:12+00:00,https://github.com/metabase/metabase/issues/39331,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]","[{'comment_id': 2115927975, 'issue_id': 2161847002, 'author': 'camsaul', 'body': ""I think the right way to fix this is to tackle #28169 and remove it entirely. With Honey SQL 2 you can have it compile everything `:inline`, so we'd have no need to compile with `?` and immediately undo things."", 'created_at': datetime.datetime(2024, 5, 16, 18, 24, 20, tzinfo=datetime.timezone.utc)}]","camsaul (Assginee) on (2024-05-16 18:24:20 UTC): I think the right way to fix this is to tackle #28169 and remove it entirely. With Honey SQL 2 you can have it compile everything `:inline`, so we'd have no need to compile with `?` and immediately undo things.

"
2161843616,issue,open,,Should canonicalize-mbql-clause unwrap the clause for empty options?,"```
src/metabase/mbql/normalize.cljc:582:;; TODO -- if options is empty, should we just unwrap the clause?
```",tsmacdonald,2024-02-29 18:20:07+00:00,[],2025-02-04 20:29:48+00:00,,https://github.com/metabase/metabase/issues/39330,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Querying/MBQL', ''), ('.Completeness', ''), ('Difficulty:Easy', ''), ('.Backend', ''), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib'), ('.Team/Querying', '')]",[],
2161843505,issue,open,,`with-temp-defaults-fns` should include `:model/Session`,"Pursuant to this TODO: https://github.com/metabase/metabase/blob/master/test/metabase/test/util.clj#L233C1-L233C91

```
   ;; TODO - `with-temp` doesn't return `Sessions`, probably because their ID is a string?
```

There's already code in `metabase.test.data.users/user-request` which uses `with-temp` for `:model/Session` so maybe there's a way to resolve this TODO now",noahmoss,2024-02-29 18:20:03+00:00,[],2024-02-29 18:34:08+00:00,,https://github.com/metabase/metabase/issues/39329,"[('Type:Tech Debt', 'or Refactoring'), ('Difficulty:Easy', ''), ('.Backend', ''), ('dev/ergonomic', '')]",[],
2161841377,issue,open,,Investigate query :context key,"```
src/metabase/mbql/normalize.cljc:383:   ;; TODO -- when does query ever have a top-level `:context` key??
```",tsmacdonald,2024-02-29 18:18:48+00:00,[],2024-05-20 17:10:53+00:00,,https://github.com/metabase/metabase/issues/39328,"[('Type:Tech Debt', 'or Refactoring'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Querying/MBQL', ''), ('.Backend', ''), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib')]",[],
2161839038,issue,open,,Let's move the jdbc code from `metabase.driver.sql.ddl` to sql-jdbc namespace,See the TODO in `src/metabase/driver/sql/ddl.clj` line 22 at the time of writing. The namespace contains jdbc specific code. This code should rather reside in eg. `metabase.driver.sql-jdbc.ddl`.,lbrdnk,2024-02-29 18:17:15+00:00,[],2025-02-04 20:29:49+00:00,,https://github.com/metabase/metabase/issues/39327,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template'), ('.Team/Querying', '')]",[],
2161833758,issue,closed,completed,Cached MetadataProvider should store tombstones (e.g. `::nil` markers) for things we tried to fetch that didn't exist,"If we try to get Card 100 from a CachedMetadataProvider and it doesn't exist, we should record that fact somehow (maybe by saving `::nil` in the cache) and return `nil` right away the second time around rather than trying to fetch it again. That way we're avoiding potentially expensive hits if it's wrapping something like the ApplicationDatabaseProvider

From the TODO

```
src/metabase/lib/metadata/cached_provider.cljc:65:        
;; TODO -- we should probably store `::nil` markers for things we tried to fetch that didn't exist
```",camsaul,2024-02-29 18:13:39+00:00,['appleby'],2024-10-01 22:19:49+00:00,2024-09-05 01:20:27+00:00,https://github.com/metabase/metabase/issues/39326,"[('Type:Tech Debt', 'or Refactoring'), ('.Performance', ''), ('Difficulty:Easy', ''), ('.Backend', ''), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib'), ('.Team/Querying', ''), ('good first issue', 'A starter issue that is good for someone new to the codebase or is a new contributor')]",[],
2161832271,issue,open,,Turn mb.util.regex/rx into a macro,"It's currently a memoized function; would be faster if it were a macro.


```
src/metabase/util/regex.clj:54:;;; TODO -- instead of memoizing this, why not just do this as a macro and do it at macroexpansion time? Weird.
```",tsmacdonald,2024-02-29 18:12:32+00:00,[],2025-02-04 20:29:47+00:00,,https://github.com/metabase/metabase/issues/39325,"[('Type:Tech Debt', 'or Refactoring'), ('.Backend', ''), ('.DX', 'Developer experience and QoL related.'), ('.Team/DevEx', '')]",[],
2161823845,issue,closed,completed,[dc.js migration] handle datasets timezones correctly,"Related to https://github.com/apache/echarts/issues/14453

For x-axis ticks ECharts pass UTC values to the formatter function. At the same time dataset values may or may not include timezone which leads to incorrect computation whether a ticks is within the data range so bordering ticks can be omited in certain timezones.

For example chrome_laptop_static_viz_ComboChart_Ticks_Native_Week_With_Gap_Short_Range.png snapshot does not include the last tick because the dataset x-values to not include the timezone, but dimension value getter compensates the timezone expecting it to be included.

<img src=""https://raw.githubusercontent.com/metabase/metabase/30ba05ba74034ef8f7009479f70191bd524b6e2a/.loki/reference/chrome_laptop_static_viz_ComboChart_Ticks_Native_Week_With_Gap_Short_Range.png"" />

Also datasets with mixed timezones daylight savings are affected:

![chrome_laptop_static_viz_ScatterPlot_Timeseries_X_Scale](https://github.com/metabase/metabase/assets/14301985/5a9d359c-d65d-4b29-9179-cf8e54eb2319)

",alxnddr,2024-02-29 18:06:57+00:00,['alxnddr'],2024-03-28 22:37:59+00:00,2024-03-28 22:37:59+00:00,https://github.com/metabase/metabase/issues/39322,"[('Priority:P2', 'Average run of the mill bug'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2161801409,issue,closed,not_planned,Click behavior causes race conditions when routing to a non-default tab on a different dashboard,"### Describe the bug

Click behavior causes race conditions when routing to a non-default tab on a different dashboard. When clicking on the card with click behavior configured, user may be routed to:
1. the default tab on the target dashboard (incorrect)
2. the target tab on the target dashboard (correct)

It is non-deterministic.

### Reproduction

https://github.com/metabase/metabase/assets/22608765/c3fe6a4b-c846-4ca1-89ec-15044d8745f0


### Expected behavior

For the user to be sent to the target tab on the target dashboard

### Information about your Metabase installation

```
master
```",JesseSDevaney,2024-02-29 17:52:54+00:00,[],2024-07-17 13:55:49+00:00,2024-07-17 13:55:49+00:00,https://github.com/metabase/metabase/issues/39320,"[('Priority:P2', 'Average run of the mill bug'), ('Reporting/Dashboards/Click Behavior', ''), ('.Team/DashViz', 'Dashboard and Viz team'), ('.LongTerm', 'Issues we will fix in the long term, not a near term priority')]","[{'comment_id': 1976964012, 'issue_id': 2161801409, 'author': 'JesseSDevaney', 'body': 'Attempted the fix for this with PR:\r\n- https://github.com/metabase/metabase/pull/39340\r\n\r\nEssentially the dashboard action and parameter list are competing for setting the URL of the application. I tried making the parameter list two-way sync with the URL (currently only syncs the state to the URL and does not sync the URL to the state if the URL is updated), but that caused other test failures due to other components changing the query string as well (click actions to native questions). \r\n\r\nDue to these complexities, moving on from this issue for now and picking up other click behavior issues.', 'created_at': datetime.datetime(2024, 3, 4, 16, 23, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 2233390868, 'issue_id': 2161801409, 'author': 'kulyk', 'body': 'Duplicate of #34447', 'created_at': datetime.datetime(2024, 7, 17, 13, 55, 49, tzinfo=datetime.timezone.utc)}]","JesseSDevaney (Issue Creator) on (2024-03-04 16:23:14 UTC): Attempted the fix for this with PR:
- https://github.com/metabase/metabase/pull/39340

Essentially the dashboard action and parameter list are competing for setting the URL of the application. I tried making the parameter list two-way sync with the URL (currently only syncs the state to the URL and does not sync the URL to the state if the URL is updated), but that caused other test failures due to other components changing the query string as well (click actions to native questions). 

Due to these complexities, moving on from this issue for now and picking up other click behavior issues.

kulyk on (2024-07-17 13:55:49 UTC): Duplicate of #34447

"
2161533968,issue,closed,completed,Add hover card on table picker,"As part of #38394 we want to add an info icon on the table picker.

<img width=""688"" alt=""Screenshot 2024-02-29 at 16 34 31"" src=""https://github.com/metabase/metabase/assets/1250185/5e007e84-6c8d-4654-9cb2-4e4374d459f9"">
",romeovs,2024-02-29 15:32:51+00:00,['romeovs'],2024-03-06 07:45:42+00:00,2024-03-06 07:45:38+00:00,https://github.com/metabase/metabase/issues/39305,"[('.Team/Querying', '')]",[],
2161438610,issue,closed,completed,Top nav + New and Settings buttons lock up when a dashboard is loading,"### Describe the bug

If a dashboard is loading, you cannot open the **+ New** button or the **Settings** gear icon menus.

![image](https://github.com/metabase/metabase/assets/17343328/9ba94c14-1b29-4dfe-a082-db3f44f7856e)


### To Reproduce

1. Go to a page with a dashboard that takes a while to load.
2. While the dashboard is loading, try to click on the **+ New** button or the **Settings** gear icon.

You won't be able to view or select from those dropdown menus until the dashboard has loaded.

### Expected behavior

People should be able to use these UI elements while the dashboard is loading.

### Logs

_No response_

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""en-US"",
    ""platform"": ""Win32"",
    ""userAgent"": ""Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Mobile Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.22+7"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.22"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.22+7"",
    ""os.name"": ""Linux"",
    ""os.version"": ""5.10.209-198.858.amzn2.x86_64"",
    ""user.language"": ""en"",
    ""user.timezone"": ""GMT""
  },
  ""metabase-info"": {
    ""databases"": [
      ""druid"",
      ""redshift"",
      ""postgres"",
      ""bigquery-cloud-sdk"",
      ""mysql"",
      ""mongo"",
      ""h2"",
      ""snowflake""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""postgres"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""PostgreSQL"",
        ""version"": ""14.10""
      },
      ""jdbc-driver"": {
        ""name"": ""PostgreSQL JDBC Driver"",
        ""version"": ""42.7.1""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-02-29"",
      ""tag"": ""vUNKNOWN"",
      ""hash"": ""915015d""
    },
    ""settings"": {
      ""report-timezone"": ""US/Pacific""
    }
  }
}
```


### Severity

Annoying, especially in cases where the home page is set to a dashboard. People will have to wait for the dashboard to load before they can start creating stuff.

### Additional context

_No response_",jeff-bruemmer,2024-02-29 14:48:26+00:00,['rafpaf'],2024-03-14 12:37:06+00:00,2024-03-07 02:29:59+00:00,https://github.com/metabase/metabase/issues/39303,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Performance', ''), ('.Team/AdminWebapp', 'Admin and Webapp team')]",[],
2161405417,issue,closed,completed,Api Keys list has double empty state,"https://metaboat.slack.com/archives/C505ZNNH4/p1709200071750659
https://metaboat.slack.com/archives/C064EB1UE5P/p1706042669731619


![image](https://github.com/metabase/metabase/assets/30528226/067f9cc8-788f-409a-9bf1-da2ab0ff5293)
",iethree,2024-02-29 14:32:13+00:00,['iethree'],2024-02-29 16:13:01+00:00,2024-02-29 16:13:01+00:00,https://github.com/metabase/metabase/issues/39300,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Team/AdminWebapp', 'Admin and Webapp team')]",[],
2161214666,issue,open,,JOINing the same table twice in query builder does not work,"### Describe the bug

I have one tables with an n-m-relationship on itself.

In SQL it looks like this:
```sql
FROM relationship r
JOIN mytable t1 ON r.fieldx = t1.id
JOIN mytable t2 ON r.fieldy = t2.id
```

In the query builder, when I follow the same pattern and start with the relationship table I can do the first join.

When in the second join I select the same table again the first join will immediately disappear.

The result is that all joins are gone.

### To Reproduce

In the query builder:
- start off with the relationship table
- join the related table
- select the related for the second join
- observe that the all joins immediately disappear

Please note that I have setup up the foreign key relationships in the Table Metadata accordingly.

### Expected behavior

Join the same table twice should work as expected

### Logs

No logs recorded, and neither is there anything in the FF dev console.

### Information about your Metabase installation

```JSON
Reproduced with latest Firefox and Chrome.

{
  ""browser-info"": {
    ""language"": ""en-US"",
    ""platform"": ""MacIntel"", -> it's actually an Apple M1
    ""userAgent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:123.0) Gecko/20100101 Firefox/123.0"",
    ""vendor"": """"
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.22+7"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.22"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.22+7"",
    ""os.name"": ""Linux"",
    ""os.version"": ""5.10.205-195.807.amzn2.x86_64"",
    ""user.language"": ""en"",
    ""user.timezone"": ""Europe/Zurich""
  },
  ""metabase-info"": {
    ""databases"": [
      ""athena"",
      ""mysql""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""postgres"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""PostgreSQL"",
        ""version"": ""13.13""
      },
      ""jdbc-driver"": {
        ""name"": ""PostgreSQL JDBC Driver"",
        ""version"": ""42.6.0""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-02-12"",
      ""tag"": ""v0.48.6"",
      ""hash"": ""b8818f9""
    },
    ""settings"": {
      ""report-timezone"": ""Europe/Zurich""
    }
  }
}
```


### Severity

It's an annoyance, the workaround is to use SQl but you loose the drill-down, etc. that way

### Additional context

_No response_",etoulas,2024-02-29 13:05:21+00:00,['bshepherdson'],2025-02-04 20:27:15+00:00,,https://github.com/metabase/metabase/issues/39297,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Querying/MBQL', ''), ('.Backend', ''), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib'), ('.Team/Querying', '')]","[{'comment_id': 1971128864, 'issue_id': 2161214666, 'author': 'etoulas', 'body': ""Looks like the query builder doesn't like the fact about having two foreign keys to the same table.\r\n\r\nAfter changing the Table Metadata from Foreign Key to No semantic type, I was able to join the same table twice."", 'created_at': datetime.datetime(2024, 2, 29, 13, 22, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1971292042, 'issue_id': 2161214666, 'author': 'bshepherdson', 'body': 'This is supposed to be supported, either within one table (like parent-child tree structures) or a relationship like this. At a glance it sounds like this is generating the same join alias for both joins, and so conflating them.\r\n\r\nIf the shape of your data allows, the UI might like it better if you started from `mytable`, joined it to `relationship` by `r.fieldx` and then joined it back to `mytable` on `r.fieldy`. You can adjust the type of joins from the default `LEFT` to `INNER` or `RIGHT`, and I think you can get the same results as the original query (though it will label the columns differently).', 'created_at': datetime.datetime(2024, 2, 29, 14, 42, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2009147383, 'issue_id': 2161214666, 'author': 'Startouf', 'body': ""Here is a small video featuring the problem : https://www.loom.com/share/490a16fa9f7d4cf0970986072d675312\r\n\r\nThis feels like a legit way of joining data.... it should work.\r\n\r\nI'm surprised the bug report doesn't have more upvotes...? Maybe there are duplicate questions ?"", 'created_at': datetime.datetime(2024, 3, 20, 9, 45, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2182947907, 'issue_id': 2161214666, 'author': 'bshepherdson', 'body': ""I can't reproduce this against 50.x.\r\n\r\nI initially tried @etoulas 's example: A table with a many-many relation on itself. But it works fine, I can select the right columns and it executes correctly.\r\n\r\nThen I tried the more complex setup from @Startouf 's clip:\r\n\r\n- `Origin` (= `fct_contact_funnels`) has FKs `Origin.left_id -> Left.ID` and `Origin.right_id -> Right.ID`\r\n- `Left` (= `dim_professionals`) has `Left.rel_id -> Rel.ID`\r\n- `Right` (= `dim_seekers`) has `Right.rel_id -> Rel.ID`\r\n- `Rel` (= addresses) could be whatever\r\n\r\nThen the query starts with `Origin`, joins both `Left` and `Right`. Then the double joins: `Rel` on `Left.rel_id = Rel.ID` works of course, and then `Rel` on `Right.rel_id = Rel.ID` ... but it works fine, rather than exploding.\r\n\r\nMaybe I missed something in my repro attempt; maybe it's been fixed since. It's possible that #39529 might have fixed this? I'll try my repro on 48.6."", 'created_at': datetime.datetime(2024, 6, 21, 15, 16, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2182972522, 'issue_id': 2161214666, 'author': 'bshepherdson', 'body': ""Agh my repro case works fine on 48.6 too. There must be some extra wrinkle I'm not seeing here.\r\n\r\n@Startouf does that repro above make sense to you? Is there some subtle point I didn't see? Are these joined entities simple tables, GUI models, SQL models, saved questions? What DB engine are you running against?"", 'created_at': datetime.datetime(2024, 6, 21, 15, 29, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2183134343, 'issue_id': 2161214666, 'author': 'Startouf', 'body': ""I was running on BigQuery and our installation is now at 0.49.13\r\n\r\nWeve been using metabase for quite some time and our questions/dashbaords data have been corrupted more than once. I'll try to upgrade to the latest version 0.50.x and see if I can reproduce this"", 'created_at': datetime.datetime(2024, 6, 21, 17, 13, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2225628494, 'issue_id': 2161214666, 'author': 'bshepherdson', 'body': ""@Startouf Any update? I can't debug this without a way to reproduce the problem.\r\n\r\nCan you describe the things you're joining in your Loom? (Tables, GUI models, SQL models, or saved questions?) Which DB are you querying?\r\n\r\nIt would be ideal if you could reproduce this on the sample database, but understanding the shape of your queries would help a lot too."", 'created_at': datetime.datetime(2024, 7, 12, 13, 48, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2236562201, 'issue_id': 2161214666, 'author': 'perivamsi', 'body': 'Reducing this to P2 while we wait for a repro/response. We can change to P1 later.', 'created_at': datetime.datetime(2024, 7, 18, 13, 45, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2578633188, 'issue_id': 2161214666, 'author': 'parsaap', 'body': ""I'm having the same issue with v0.51.1 and MySQL 8. It'll be great to add the ability to assign an alias for the joins to the same table on the query editor. Because even if the query generator gets fixed, when assigning dashboard filters to questions, you don't know which join you're adding the filter to if they both have the same name"", 'created_at': datetime.datetime(2025, 1, 8, 20, 46, 33, tzinfo=datetime.timezone.utc)}]","etoulas (Issue Creator) on (2024-02-29 13:22:45 UTC): Looks like the query builder doesn't like the fact about having two foreign keys to the same table.

After changing the Table Metadata from Foreign Key to No semantic type, I was able to join the same table twice.

bshepherdson (Assginee) on (2024-02-29 14:42:46 UTC): This is supposed to be supported, either within one table (like parent-child tree structures) or a relationship like this. At a glance it sounds like this is generating the same join alias for both joins, and so conflating them.

If the shape of your data allows, the UI might like it better if you started from `mytable`, joined it to `relationship` by `r.fieldx` and then joined it back to `mytable` on `r.fieldy`. You can adjust the type of joins from the default `LEFT` to `INNER` or `RIGHT`, and I think you can get the same results as the original query (though it will label the columns differently).

Startouf on (2024-03-20 09:45:41 UTC): Here is a small video featuring the problem : https://www.loom.com/share/490a16fa9f7d4cf0970986072d675312

This feels like a legit way of joining data.... it should work.

I'm surprised the bug report doesn't have more upvotes...? Maybe there are duplicate questions ?

bshepherdson (Assginee) on (2024-06-21 15:16:37 UTC): I can't reproduce this against 50.x.

I initially tried @etoulas 's example: A table with a many-many relation on itself. But it works fine, I can select the right columns and it executes correctly.

Then I tried the more complex setup from @Startouf 's clip:

- `Origin` (= `fct_contact_funnels`) has FKs `Origin.left_id -> Left.ID` and `Origin.right_id -> Right.ID`
- `Left` (= `dim_professionals`) has `Left.rel_id -> Rel.ID`
- `Right` (= `dim_seekers`) has `Right.rel_id -> Rel.ID`
- `Rel` (= addresses) could be whatever

Then the query starts with `Origin`, joins both `Left` and `Right`. Then the double joins: `Rel` on `Left.rel_id = Rel.ID` works of course, and then `Rel` on `Right.rel_id = Rel.ID` ... but it works fine, rather than exploding.

Maybe I missed something in my repro attempt; maybe it's been fixed since. It's possible that #39529 might have fixed this? I'll try my repro on 48.6.

bshepherdson (Assginee) on (2024-06-21 15:29:59 UTC): Agh my repro case works fine on 48.6 too. There must be some extra wrinkle I'm not seeing here.

@Startouf does that repro above make sense to you? Is there some subtle point I didn't see? Are these joined entities simple tables, GUI models, SQL models, saved questions? What DB engine are you running against?

Startouf on (2024-06-21 17:13:21 UTC): I was running on BigQuery and our installation is now at 0.49.13

Weve been using metabase for quite some time and our questions/dashbaords data have been corrupted more than once. I'll try to upgrade to the latest version 0.50.x and see if I can reproduce this

bshepherdson (Assginee) on (2024-07-12 13:48:08 UTC): @Startouf Any update? I can't debug this without a way to reproduce the problem.

Can you describe the things you're joining in your Loom? (Tables, GUI models, SQL models, or saved questions?) Which DB are you querying?

It would be ideal if you could reproduce this on the sample database, but understanding the shape of your queries would help a lot too.

perivamsi on (2024-07-18 13:45:02 UTC): Reducing this to P2 while we wait for a repro/response. We can change to P1 later.

parsaap on (2025-01-08 20:46:33 UTC): I'm having the same issue with v0.51.1 and MySQL 8. It'll be great to add the ability to assign an alias for the joins to the same table on the query editor. Because even if the query generator gets fixed, when assigning dashboard filters to questions, you don't know which join you're adding the filter to if they both have the same name

"
2160801491,issue,closed,completed,[Testing plan] Add Extract action to chill mode column headings,"Testing plan for #38964

## Milestone 1 - Date/time columns

### Drills (CLJS)
- **Date** column **header**: can extract **day of month / day of week / month / quarter / year**
- **Date** column **header**: cannot extract **hour of day**
- **Time** column **header**: can extract **hour of day**
- **Time** column **header**: cannot extract **day of month / day of week / month / quarter / year**
- **Timestamp** column **header**: can extract **hour of day / day of month / day of week / month / quarter / year**
- **Date** / **Time** / **Timestamp** column **cell**: cannot extract any columns
- Drills are offered in the following order: hour of day, day of month, day of week, month, quarter, year
- Drills are not available for pivot tables
- Drills are not available for non-date/time columns

### Extracted columns (e2e)

- Extracted column is added to the right of the source column
- Extracted column can be edited in the GUI editor
- Extracted column name uses instance language
- Adding the same extraction twice is possible, and names of columns are unique (e.g. `Year`, `Year (2)`)
- Hour of day
  - Column name should default to ""Hour of day""
  - The values should be [formatted](https://www.figma.com/file/yl8Yy4iMSpaWzjuNoEjBZu/Add-Extract-action-to-chill-mode-column-headings?type=design&node-id=5916-4999&mode=design&t=SfMuJuDm2kKMGR9F-4) as hours according to [""Time style"" setting](https://www.metabase.com/docs/latest/configuring-metabase/localization#dates-and-times) and instance language
- Day of month
  - Column name should default to ""Day of month""
  - The values should be [integers](https://www.figma.com/file/yl8Yy4iMSpaWzjuNoEjBZu/Add-Extract-action-to-chill-mode-column-headings?type=design&node-id=5916-4999&mode=design&t=SfMuJuDm2kKMGR9F-4) (formatted according to instance language? think: Arabic, Thai, etc.)
- Day of week
  - Column name should default to ""Day of week""
  - The values should be [formatted](https://www.figma.com/file/yl8Yy4iMSpaWzjuNoEjBZu/Add-Extract-action-to-chill-mode-column-headings?type=design&node-id=5916-4999&mode=design&t=SfMuJuDm2kKMGR9F-4) as names of days of the week according to [""Abbreviate names of days and months"" setting](https://www.metabase.com/docs/latest/configuring-metabase/localization#dates-and-times) and instance language
- Month
  - Column name should default to ""Month""
  - The values should be [formatted](https://www.figma.com/file/yl8Yy4iMSpaWzjuNoEjBZu/Add-Extract-action-to-chill-mode-column-headings?type=design&node-id=5916-4999&mode=design&t=SfMuJuDm2kKMGR9F-4) as names of months according to [""Abbreviate names of days and months"" setting](https://www.metabase.com/docs/latest/configuring-metabase/localization#dates-and-times) and instance language
- Quarter
  - Column name should default to ""Quarter""
  - The values should be [formatted](https://www.figma.com/file/yl8Yy4iMSpaWzjuNoEjBZu/Add-Extract-action-to-chill-mode-column-headings?type=design&node-id=5916-4999&mode=design&t=SfMuJuDm2kKMGR9F-4) as Q1, Q2, etc. and according to instance language
- Year
  - Column name should default to ""Year""
  - The values should be [integers](https://www.figma.com/file/yl8Yy4iMSpaWzjuNoEjBZu/Add-Extract-action-to-chill-mode-column-headings?type=design&node-id=5916-4999&mode=design&t=SfMuJuDm2kKMGR9F-4) (formatted according to instance language? think: Arabic, Thai, etc.)


## Milestone 2 - URL columns

TBD

## Milestone 3 - Email columns

TBD

",kamilmielnik,2024-02-29 09:29:16+00:00,[],2024-05-03 08:57:05+00:00,2024-05-03 06:48:30+00:00,https://github.com/metabase/metabase/issues/39291,"[('.Epic', 'Feature Implementation or Project'), ('.TestingStrategy/FE', ''), ('.TestingStrategy/BE', '')]",[],
2160489490,issue,closed,not_planned,Tab no longer selects highlighted item in filter drop-down,"### Describe the bug

- Tab behavior on Search box filters changed in `master`

### To Reproduce

1. Admin > Table Metadata > Sample Database > Products > Vendor > select ⚙️ and change Filtering on this field to Search box
2. Create a new question from Sample Database > Products
3. Click the heading Vendor > Filter by this column > IS > type `keely` and press <kbd>Tab</kbd>

### Expected behavior

Expect <TAB> to select highlighted value like it does in prior versions (47, 48, etc.)

### Logs

_No response_

### Information about your Metabase installation

```JSON
- works in 48.7
- not working in `master` as of `03e7fa4`
```


### Severity

P2: Frustrating regression but has workaround (click with mouse)

### Additional context

_No response_",likeshumidity,2024-02-29 06:25:52+00:00,[],2024-03-20 14:47:09+00:00,2024-03-20 14:47:09+00:00,https://github.com/metabase/metabase/issues/39288,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Frontend', ''), ('Querying/GUI', 'Query builder catch-all, including simple mode'), ('.Regression', 'Bugs that were previously fixed and/or bugs unintentionally shipped with new features.'), ('.Team/Querying', '')]","[{'comment_id': 1975931926, 'issue_id': 2160489490, 'author': 'kamilmielnik', 'body': ""Introduced in #36539 when we started to use [Mantine's `MultiSelect`](https://mantine.dev/core/multi-select/)."", 'created_at': datetime.datetime(2024, 3, 4, 7, 58, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1975982851, 'issue_id': 2160489490, 'author': 'kamilmielnik', 'body': ""~We can fix it using [`selectFirstOptionOnChange` prop](https://mantine.dev/core/multi-select/?t=props).~\r\n~We'd need to upgrade Mantine to v7, see https://github.com/mantinedev/mantine/pull/4997 (https://github.com/mantinedev/mantine/commit/66fe076971d9a80b7af078a6fa8726254d4f6258).~"", 'created_at': datetime.datetime(2024, 3, 4, 8, 23, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1977588577, 'issue_id': 2160489490, 'author': 'perivamsi', 'body': ""I don't think this should be a release blocker for 49, @likeshumidity is there more context to why you picked 49 as the milestone?"", 'created_at': datetime.datetime(2024, 3, 4, 22, 36, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 2000243566, 'issue_id': 2160489490, 'author': 'MathiasGr', 'body': 'FYI, we upgraded to 49 a few hours ago, and our entire analyst team is complaining that they used to copy-paste multiple values into the filter dropdown and cannot do that anymore with the new component. That was a fairly important use case and will come up as feedback from many teams. I know you have a full roadmap but whatever you can do to prioritize a fix would really help us!', 'created_at': datetime.datetime(2024, 3, 15, 18, 39, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 2005551507, 'issue_id': 2160489490, 'author': 'paoliniluis', 'body': 'https://github.com/metabase/metabase/issues/40265', 'created_at': datetime.datetime(2024, 3, 19, 1, 12, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 2009750834, 'issue_id': 2160489490, 'author': 'paoliniluis', 'body': 'fixed', 'created_at': datetime.datetime(2024, 3, 20, 14, 47, 9, tzinfo=datetime.timezone.utc)}]","kamilmielnik on (2024-03-04 07:58:22 UTC): Introduced in #36539 when we started to use [Mantine's `MultiSelect`](https://mantine.dev/core/multi-select/).

kamilmielnik on (2024-03-04 08:23:40 UTC): ~We can fix it using [`selectFirstOptionOnChange` prop](https://mantine.dev/core/multi-select/?t=props).~
~We'd need to upgrade Mantine to v7, see https://github.com/mantinedev/mantine/pull/4997 (https://github.com/mantinedev/mantine/commit/66fe076971d9a80b7af078a6fa8726254d4f6258).~

perivamsi on (2024-03-04 22:36:25 UTC): I don't think this should be a release blocker for 49, @likeshumidity is there more context to why you picked 49 as the milestone?

MathiasGr on (2024-03-15 18:39:22 UTC): FYI, we upgraded to 49 a few hours ago, and our entire analyst team is complaining that they used to copy-paste multiple values into the filter dropdown and cannot do that anymore with the new component. That was a fairly important use case and will come up as feedback from many teams. I know you have a full roadmap but whatever you can do to prioritize a fix would really help us!

paoliniluis on (2024-03-19 01:12:46 UTC): https://github.com/metabase/metabase/issues/40265

paoliniluis on (2024-03-20 14:47:09 UTC): fixed

"
2160053202,issue,open,,A way to make `with-temp` to persist test data,"It's useful for debugging to avoid cleaning data created by `with-temp`.

Let's devise a way to provide an escape hatch to do that easily.

Proposal: create a `with-temp-persisted` macro that does what `with-temp` does except it cleans up data afterward.",qnkhuat,2024-02-28 23:30:03+00:00,[],2024-02-28 23:30:03+00:00,,https://github.com/metabase/metabase/issues/39282,"[('.Backend', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template'), ('dev/ergonomic', '')]",[],
2159952029,issue,open,,[Prototype] Implement server side PDF rendering for dashboard subscriptions using chromium,"## Context

Having fully functional Metabase as single jar is great for simplicity of setting it up, but it limits our ability to provide certain functionality such as PDF email subscriptions that would be relatively easy to implement if we could spin up Chromium as rendering engine. We could still have an easy enough setup by making this feature optional only for users who are willing to set up Chromium, and to make it simple we can ship a Docker image that includes both Metabase instance and Chromium.

This epic describes the work needed to create a proof of concept we could iterate on further.

## Plan

### Step 1: JAR <> Browser communication

The goal of this milestone is to add the ability by Metabase instance to connect to a locally running headless Chromium, open any URL in the local Chromium, and capture the page as PDF or PNG.

[Chrome DevTools protocol](https://chromedevtools.github.io/devtools-protocol/) seems like a viable option for that. Selenium WebDriver may also work but I'm not sure if it lets to use an already running Chromium instead of spinning up a new instance.

```[tasklist]
### Checklist
- [ ] BE: Metabase connects to local browser via `MB_CHROMIUM_URL`
- [ ] BE: Metabase can render its a login page in the local headless Chromium and retrieve a PDF
```

### Step 2: Render an actual dashboard as PDF and attach it to a subscription

At this point when we open Metabase in the headless browser it is not logged in and don't have the access to anything. I see two options how we can render an actual dashboard data for the PDF creation.

**a. Authenticate the browser tab**
We can authenticate a tab by setting cookies of a session of a fake user with the [same level](https://www.metabase.com/docs/latest/permissions/notifications) of permissions as the subscription creator. This will give the headless browser tab access to dashboard data but we the set up does not sound easy for the BE and we will explicitly have to ensure there is tabs cookies are sandboxed to avoid any data leakages. 

**b. Provide the right dashboard data to the browser**
With this approach, FE will have a dedicated `SubscriptionsDashboad` page which won't fetch any data but will expect it to be present for example in `window.dashboard` property before rendering dashboard. Compared to opening a page as an authenticated user, this will not require to deal with authentication and with the detection when cards data is loaded so we can capture a PDF.

For me the **option B** seems more straightforward and secure, however it will require just a bit more frontend to add the dashboard page that renders existing static data.

```[tasklist]
### Checklist
- [ ] BE: When rendering a subscription retrieve all the required dashboard data, open the `SubscriptionsDashboad` page, set the data to it, capture the pdf, and attach it to the email
- [ ] FE: Create a new page `SubscriptionDashboard` which does not required authentication and renders the dashboard data from `window.dashboard` instead of fetching it
```

",alxnddr,2024-02-28 22:07:55+00:00,[],2025-02-04 20:29:34+00:00,,https://github.com/metabase/metabase/issues/39279,"[('Reporting/Pulses', 'Now called Subscriptions'), ('.Frontend', ''), ('.Backend', ''), ('.Epic', 'Feature Implementation or Project'), ('.Team/DashViz', 'Dashboard and Viz team')]",[],
2159936744,issue,open,,Trend Visualization Needs Date Formatting Support,"The ""Trend"" visualization doesn't allow customization of the date format. It should allow the same date customization as any other visualization that has the date data type. 

We have a customer in the UK and every component in their dashboard is correctly formatted to display date in DD-MM-YYYY format. The Trend report that compares yesterday's sales to the prior date shows the date in US format (MMM DD, YYYY). They have, of course, complained.

![Screenshot 2024-02-28 at 1 55 09 PM](https://github.com/metabase/metabase/assets/484705/c09b9a7e-fbdd-4a60-9796-51d5df39e227)
",tungsten,2024-02-28 21:55:57+00:00,[],2025-02-04 20:31:47+00:00,,https://github.com/metabase/metabase/issues/39277,"[('Type:New Feature', ''), ('Visualization/Chart Settings', ''), ('Visualization/Scalars', 'Numbers, progress bars, gauges')]","[{'comment_id': 2560171130, 'issue_id': 2159936744, 'author': 'ixipixi', 'body': 'https://github.com/metabase/metabase/issues/51641', 'created_at': datetime.datetime(2024, 12, 23, 19, 1, 51, tzinfo=datetime.timezone.utc)}]","ixipixi on (2024-12-23 19:01:51 UTC): https://github.com/metabase/metabase/issues/51641

"
2159935200,issue,closed,completed,[dc.js migration] switching chart type to funnel breaks visualization component,"https://github.com/metabase/metabase/assets/37751258/63e1f72b-e7a0-4e38-9ecb-1254d2ec7221

<img width=""695"" alt=""Screenshot 2024-02-28 at 1 53 59 PM"" src=""https://github.com/metabase/metabase/assets/37751258/e0dfe47a-a2ee-44b8-8bcf-a44ba0ae4bbf"">
",EmmadUsmani,2024-02-28 21:54:38+00:00,['EmmadUsmani'],2024-03-02 00:35:49+00:00,2024-03-02 00:35:49+00:00,https://github.com/metabase/metabase/issues/39276,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2159520680,issue,closed,completed,Convert Dashboard header to functional component,,npfitz,2024-02-28 17:56:52+00:00,[],2024-03-02 11:24:43+00:00,2024-02-29 21:33:07+00:00,https://github.com/metabase/metabase/issues/39260,[],[],
2159483512,issue,closed,completed,[Epic] Command Palette v1,"**Links**
- product doc: [_link to product doc_](https://www.notion.so/metabase/Command-Palette-0559f5cbae0d45e7bc2f6960775d0b8b)
- feature branch: `command-palette/main` 

**Implementation Plan**
Using the [kbar](https://github.com/timc1/kbar) library, we will build up a command palette with contextually aware actions. `kbar` has some great functionality to dynamically register actions through hooks when those components mount, and remove them when components are unmounted. This may require converting some class components to be more functional, but overall gives a very straightforward path.

Ideally, This can be merged when milestone 1 is complete, and expanded through PRs to master

```[tasklist]
### Milestone 1 - Command Palette introduction and general actions
- [ ] https://github.com/metabase/metabase/issues/40312
- [ ] https://github.com/metabase/metabase/issues/40317
- [ ] https://github.com/metabase/metabase/issues/39479
- [x] Recent Items
- [x] Entity search
- [x] General Actions
- [x] Ensure this is not present in embedding applications
- [x] The default order of items should be the same of +new button: question, sql query, dashboard, collection, model
- [x] Admins shouldn't see admin settings by default (only on search)
- [x] e2e and unit tests
```

```[tasklist]
### Milestone 2 - Admin
- [x] Add admin settings search and back
- [x] e2e and unit tests
```

```[tasklist]
### Milestone 2.5 - UI Polish and exploration
- [ ] https://github.com/metabase/metabase/issues/40671
- [ ] https://github.com/metabase/metabase/issues/40895
- [ ] https://github.com/metabase/metabase/issues/40735
- [ ] https://github.com/metabase/metabase/issues/40631
- [ ] https://github.com/metabase/metabase/issues/41028
- [ ] https://github.com/metabase/metabase/issues/41417
- [ ] https://github.com/metabase/metabase/issues/41536
- [ ] https://github.com/metabase/metabase/issues/41994
- [ ] https://github.com/metabase/metabase/issues/41901
- [ ] https://github.com/metabase/metabase/issues/42078
- [ ] https://github.com/metabase/metabase/issues/42346
- [ ] https://github.com/metabase/metabase/issues/42701
```",npfitz,2024-02-28 17:37:22+00:00,['npfitz'],2024-05-16 12:02:31+00:00,2024-05-16 12:02:30+00:00,https://github.com/metabase/metabase/issues/39259,"[('Organization/Search', ''), ('.Epic', 'Feature Implementation or Project')]",[],
2159312416,issue,open,,Customize Table Alias for Questions in Graphical Query Editor,"**Is your feature request related to a problem? Please describe.**
_A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]_
When using the graphical query editor, sometimes tables have long names that don't match how I want them to display in a column display by default.

[Really Long Table Name --> Column Name]  

This is not the best user experience, and makes table readability and editing questions more frustrating.

In addition, sometimes I need to join to the same table multiple times on different keys (e.g. I use a dates table to map dates to our fiscal calendar). If I join on close date and on start date, I'll get 

[Dates --> Fiscal Quarter]
[Dates_2 --> Fiscal Quarter]

**Describe the solution you'd like**
A clear and concise description of what you want to happen.
I'd like to set aliases for tables in the graphical query editor, so that instead of:
[Really Long Table Name --> Column Name]  
I could display
[RLTN Alias --> Column Name]
and instead of 
[Dates --> Fiscal Quarter]
[Dates_2 --> Fiscal Quarter]

I could see 
[Close Date-->Fiscal Quarter]
[Start Date-->Fiscal Quarter]

**Describe alternatives you've considered**
A clear and concise description of any alternative solutions or features you've considered.
My best alternative right now is to just use the SQL editor to write this, but I find it much harder to create a quality, interactive reporting experience that way, or to write all of these joins into views on our data warehouse, which duplicates even more code. I can edit the column display names individually, but that's super manual.

**How important is this feature to you?**
Note: the more honest and specific you are here the more we will take you seriously. 
I'm not dropping Metabase over this, but this would make my use cases much easier--this is just a point of confusion/manual additional effort that I know is easily handled in SQL, and that I'd hope could be easily addressed in the editor.

**Additional context**
Add any other context or screenshots about the feature request here.
",megansmcguire,2024-02-28 16:07:41+00:00,[],2025-02-04 20:30:48+00:00,,https://github.com/metabase/metabase/issues/39254,"[('Type:New Feature', ''), ('Querying/GUI', 'Query builder catch-all, including simple mode')]","[{'comment_id': 1969376219, 'issue_id': 2159312416, 'author': 'paoliniluis', 'body': 'You can change the table names in the table metadata, have you checked that?', 'created_at': datetime.datetime(2024, 2, 28, 16, 32, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1969382049, 'issue_id': 2159312416, 'author': 'megansmcguire', 'body': ""That's a great call out! It helps in some of the first case (though I'd still prefer more flexibility as the ideal names can be context dependent), but it really doesn't help in the second case (multiple joins to the same table)"", 'created_at': datetime.datetime(2024, 2, 28, 16, 35, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1969526216, 'issue_id': 2159312416, 'author': 'megansmcguire', 'body': '<img width=""872"" alt=""Screenshot 2024-02-28 at 11 48 01\u202fAM"" src=""https://github.com/metabase/metabase/assets/44879687/e3bd89e7-4479-4d7a-ba0d-3e459afd3694"">\r\n\r\nUsing Metabase DB as an example, editing would be much more clear if I could alias each join to the user table to be more clear if I\'m looking at the viewer or the creator.', 'created_at': datetime.datetime(2024, 2, 28, 17, 49, 25, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-02-28 16:32:44 UTC): You can change the table names in the table metadata, have you checked that?

megansmcguire (Issue Creator) on (2024-02-28 16:35:45 UTC): That's a great call out! It helps in some of the first case (though I'd still prefer more flexibility as the ideal names can be context dependent), but it really doesn't help in the second case (multiple joins to the same table)

megansmcguire (Issue Creator) on (2024-02-28 17:49:25 UTC): <img width=""872"" alt=""Screenshot 2024-02-28 at 11 48 01 AM"" src=""https://github.com/metabase/metabase/assets/44879687/e3bd89e7-4479-4d7a-ba0d-3e459afd3694"">

Using Metabase DB as an example, editing would be much more clear if I could alias each join to the user table to be more clear if I'm looking at the viewer or the creator.

"
2159277667,issue,closed,not_planned,"metabse used wrong actualRoot, that caused it cannot load resources","### Describe the bug

        <meta name=""apple-mobile-web-app-status-bar-style"" content=""default""/>
        <meta name=""base-href"" content=""/metabase/""/>
        <meta name=""uri"" content=""/metabase/""/>
        <title>Metabase</title>
        <base href=""/metabase/""/>

it meta data <meta name=""uri"" content=""/metabase/""/>, that caused  the code 
        if (actualRoot !== configuredRoot) {
            console.warn(""Warning: the Metabase site URL basename \"""" + configuredRoot + ""\"" does not match the actual basename \"""" + actualRoot + ""\""."");
            console.warn(""You probably want to update the Site URL setting to \"""" + window.location.origin + actualRoot + ""\"""");
            document.getElementsByTagName(""base"")[0].href = actualRoot;
        }
was trigger



    <meta name=""uri"" content=""/metabase/""/> should be <meta name=""uri"" content=""/metabase/""/>
<meta name=""uri"" content=""/""/>
 
How can I set the content of meta name=""uri"" ?
        

### To Reproduce

no clue


### Expected behavior

_No response_

### Logs

metabase/:21 Warning: the Metabase site URL basename ""/metabase/"" does not match the actual basename ""/"".

metabase/:22 You probably want to update the Site URL setting to ""https://our-domain/""



### Information about your Metabase installation

```JSON
I cannot login to metabase
```


### Severity

block

### Additional context

_No response_",vjuswei,2024-02-28 15:50:45+00:00,[],2024-02-28 16:31:54+00:00,2024-02-28 16:31:54+00:00,https://github.com/metabase/metabase/issues/39253,"[('Type:Bug', 'Product defects'), ('.Needs Triage', '')]","[{'comment_id': 1969374135, 'issue_id': 2159277667, 'author': 'paoliniluis', 'body': 'is this a question or an issue?', 'created_at': datetime.datetime(2024, 2, 28, 16, 31, 42, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-02-28 16:31:42 UTC): is this a question or an issue?

"
2159039068,issue,closed,completed,Date/time column extractions,,kamilmielnik,2024-02-28 13:59:48+00:00,['kamilmielnik'],2024-02-29 13:57:46+00:00,2024-02-29 13:57:45+00:00,https://github.com/metabase/metabase/issues/39248,"[('.Frontend', ''), ('.Team/Querying', '')]","[{'comment_id': 1971201711, 'issue_id': 2159039068, 'author': 'kamilmielnik', 'body': 'Closed by #39290', 'created_at': datetime.datetime(2024, 2, 29, 13, 57, 45, tzinfo=datetime.timezone.utc)}]","kamilmielnik (Issue Creator) on (2024-02-29 13:57:45 UTC): Closed by #39290

"
2159013824,issue,closed,completed,[Epic] Let white-labeling customers customize illustrations,"**Links**
- [Product doc](https://www.notion.so/metabase/Let-white-labeling-customers-customize-illustrations-24e120498d5f414aaf52ddd0de9e20fc)
- [Eng doc](https://www.notion.so/metabase/Tech-Let-white-labeling-customers-customize-illustrations-e8adba727d0e4297b2ed8679ab79a8d6)
- [Testing plan](https://www.notion.so/metabase/Testing-plan-Let-white-labeling-customers-customize-illustrations-3985c2369ca647a19f5f454e390a9bca)
- integration branch: `39246-milestone-1`

```[tasklist]
#### Milestone 1
- [ ] https://github.com/metabase/metabase/pull/39299
- [ ] https://github.com/metabase/metabase/pull/40487
- [ ] https://github.com/metabase/metabase/pull/40491
- [ ] https://github.com/metabase/metabase/pull/40139
- [ ] https://github.com/metabase/metabase/pull/40710
- [x] https://github.com/metabase/metabase/pull/40219 - integration branch
```

```[tasklist]
#### Milestone 2
- [x] ~Connect to the BE referencing files~ We decided [not to do this](https://metaboat.slack.com/archives/C063Q3F1HPF/p1709737723369799)
- [ ] https://github.com/metabase/metabase/pull/40681
- [ ] Ping Thomas once analytics is merged to master
```

",WiNloSt,2024-02-28 13:47:45+00:00,['WiNloSt'],2024-05-13 11:09:03+00:00,2024-05-13 11:09:03+00:00,https://github.com/metabase/metabase/issues/39246,"[('Administration/', ''), ('.Epic', 'Feature Implementation or Project'), ('Administration/Whitelabel', 'Enterprise white labelling'), ('.Team/Embedding', '')]",[],
2158853354,issue,closed,not_planned,Enable option to sync after action,"### **Is your feature request related to a problem? Please describe.**
I have a model action to insert a record in a PSQL table.
The insert is successful, and can immediately be identified with a direct PSQL connection.

Problem is Metabase is not updated to reflect the change.
I presume it will do so when it re-syncs.

### **Describe the solution you'd like**
I would like the option to trigger a re-sync when an action is successful.

### **Describe alternatives you've considered**
- Setting the model sync interval to hourly.
- Using a dashboard to auto-update the request every minute.
- Considered, running a POST request in PSQL to trigger it using the API (_bit much_)

### **How important is this feature to you?**
It is about having a user-intuitive system; when a user runs an action to save on the db, I think reasonable to expect it to be nearly instant. Waiting an hour seems absurd...

### **Additional context**
- Could not find any related issues (Tried searching for ""actions sync"")
- From the forums, this was the most related: 
  - https://discourse.metabase.com/t/it-would-be-nice-to-be-able-have-a-parameter-to-update-more-often-the-schema-resync/9654/3
- Followed Model Caching documentation: https://www.metabase.com/docs/latest/data-modeling/models#model-caching
",atharen,2024-02-28 12:27:53+00:00,[],2024-04-29 11:10:39+00:00,2024-04-29 11:10:39+00:00,https://github.com/metabase/metabase/issues/39245,"[('Type:New Feature', ''), ('.Needs Triage', '')]","[{'comment_id': 2068920834, 'issue_id': 2158853354, 'author': 'calherries', 'body': '@atharen Do you have model caching enabled for the model you are inserting a record to? I think you could be running into this issue https://github.com/metabase/metabase/issues/33149. When model caching is enabled an action to insert a row will not update the model data.', 'created_at': datetime.datetime(2024, 4, 22, 9, 28, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 2082428866, 'issue_id': 2158853354, 'author': 'atharen', 'body': ""Hmm I did not have caching enabled.\r\n\r\nSince then I just settled on using the dashboard auto-update, and that seems to work fine. \r\nWith that it also has user feedback is listing the next upcoming update.\r\n\r\nTo be honest, have not looked into this much since then, so I'd say worth closing this issue for now, since I am not able to properly follow up on it."", 'created_at': datetime.datetime(2024, 4, 29, 11, 1, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 2082445506, 'issue_id': 2158853354, 'author': 'calherries', 'body': ""Okay thanks, I'll close the issue for now. Please re-open if you see it again"", 'created_at': datetime.datetime(2024, 4, 29, 11, 10, 39, tzinfo=datetime.timezone.utc)}]","calherries on (2024-04-22 09:28:10 UTC): @atharen Do you have model caching enabled for the model you are inserting a record to? I think you could be running into this issue https://github.com/metabase/metabase/issues/33149. When model caching is enabled an action to insert a row will not update the model data.

atharen (Issue Creator) on (2024-04-29 11:01:37 UTC): Hmm I did not have caching enabled.

Since then I just settled on using the dashboard auto-update, and that seems to work fine. 
With that it also has user feedback is listing the next upcoming update.

To be honest, have not looked into this much since then, so I'd say worth closing this issue for now, since I am not able to properly follow up on it.

calherries on (2024-04-29 11:10:39 UTC): Okay thanks, I'll close the issue for now. Please re-open if you see it again

"
2158412855,issue,closed,completed,Add hover card when picking a column to use for simple sandbox filtering,"As part of #38394 we want to add the info icon to the sandbox filter picker.

<img width=""678"" alt=""Screenshot 2024-02-28 at 16 42 33"" src=""https://github.com/metabase/metabase/assets/1250185/5d54d151-432e-4738-a20a-de2a5d076098"">
",romeovs,2024-02-28 08:42:53+00:00,[],2024-02-29 10:52:42+00:00,2024-02-29 10:52:39+00:00,https://github.com/metabase/metabase/issues/39240,[],"[{'comment_id': 1970879922, 'issue_id': 2158412855, 'author': 'romeovs', 'body': 'Closed by #39252', 'created_at': datetime.datetime(2024, 2, 29, 10, 52, 39, tzinfo=datetime.timezone.utc)}]","romeovs (Issue Creator) on (2024-02-29 10:52:39 UTC): Closed by #39252

"
2158245543,issue,open,,Display field descriptions throughout the app where fields can be used,"
Is your feature request related to a problem? Please describe.
Users often find it challenging to interpret data when the field names in the database are cryptic or not descriptive. This lack of clarity can lead to confusion and errors in analysis, especially when working with aggregated data.

Describe the solution you'd like
I would like to have a configuration option in Metabase that, when enabled, would display field descriptions alongside the field names wherever they appear in the application. This would include both individual field descriptions and aggregated descriptions when applicable.

Describe alternatives you've considered
One alternative solution could be manually adding field descriptions as tooltips or annotations within Metabase reports. However, this approach would be time-consuming and prone to errors, especially in large datasets with numerous fields.

How important is this feature to you?
This feature is essential for improving the usability and interpretability of data within Metabase. Without clear field descriptions, users may misinterpret data, leading to incorrect conclusions and decisions. Therefore, I consider this feature to be of high importance.

Additional context
Including field descriptions alongside field names would enhance the user experience by providing additional context and clarity, ultimately leading to more accurate analysis and decision-making.
",cverdela,2024-02-28 06:53:00+00:00,[],2025-02-04 20:31:03+00:00,,https://github.com/metabase/metabase/issues/39237,"[('Type:New Feature', ''), ('Organization/Data Reference', ''), ('Querying/GUI', 'Query builder catch-all, including simple mode')]","[{'comment_id': 2567846061, 'issue_id': 2158245543, 'author': 'brunobergher', 'body': '@cverdela, we\'ve explored many solutions to this, and have settled on what we have today, such as the below:\n\n<img width=""400"" alt=""Image"" src=""https://github.com/user-attachments/assets/07547a3b-2394-40c8-b607-186a6d2a2992"" />\n<img width=""400"" alt=""Image"" src=""https://github.com/user-attachments/assets/600342fe-27f9-4167-89aa-bf8538903700"" />\n\n\nIt\'s not a setting, but a hover state in appropriate places (results tables, the query builder, etc). Does that address your request?', 'created_at': datetime.datetime(2025, 1, 2, 14, 19, 32, tzinfo=datetime.timezone.utc)}]","brunobergher on (2025-01-02 14:19:32 UTC): @cverdela, we've explored many solutions to this, and have settled on what we have today, such as the below:

<img width=""400"" alt=""Image"" src=""https://github.com/user-attachments/assets/07547a3b-2394-40c8-b607-186a6d2a2992"" />
<img width=""400"" alt=""Image"" src=""https://github.com/user-attachments/assets/600342fe-27f9-4167-89aa-bf8538903700"" />


It's not a setting, but a hover state in appropriate places (results tables, the query builder, etc). Does that address your request?

"
2157759319,issue,closed,completed,Parse SQL: Use schema name,"Part of #36911.

We don't use the schema name when extracting table info since distinguishing the schema from other things is a little complicated. However, our field-matching would be more precise if we did.

This requires using `.getFullyQualifiedName` in Macaw when processing tables and then changing the logic in mb.native-query-analyzer.",tsmacdonald,2024-02-27 23:01:10+00:00,[],2024-05-13 12:08:38+00:00,2024-05-13 12:08:38+00:00,https://github.com/metabase/metabase/issues/39233,"[('.Task', 'Not a part of any Epic, used by the Task Issue Template'), ('.Team/Workflows', 'aka BEC')]","[{'comment_id': 2107404568, 'issue_id': 2157759319, 'author': 'tsmacdonald', 'body': 'Fixed by https://github.com/metabase/macaw/pull/21', 'created_at': datetime.datetime(2024, 5, 13, 12, 8, 38, tzinfo=datetime.timezone.utc)}]","tsmacdonald (Issue Creator) on (2024-05-13 12:08:38 UTC): Fixed by https://github.com/metabase/macaw/pull/21

"
2157702919,issue,closed,completed,[dc.js migration] placeholder series missing,"| dc.js | echarts |
|--------|--------|
| <img width=""1903"" alt=""Screenshot 2024-02-27 at 2 12 55 PM"" src=""https://github.com/metabase/metabase/assets/37751258/c578225f-d4b4-49ee-9f1d-f4c9cda346ce"">| <img width=""1904"" alt=""Screenshot 2024-02-27 at 2 13 13 PM"" src=""https://github.com/metabase/metabase/assets/37751258/ee41e16e-62e7-431d-a9e5-dab434c66dc6""> |

Before we used to render a placeholder series while the user was still choosing the dimension and metric.",EmmadUsmani,2024-02-27 22:13:41+00:00,['EmmadUsmani'],2024-03-08 20:25:29+00:00,2024-03-08 20:25:29+00:00,https://github.com/metabase/metabase/issues/39231,"[('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.echarts-regression', 'Issues in the echarts feature branch that were not broken in the previous dc.js implementation')]",[],
2157639905,issue,closed,completed,Get e2e-cross-version.yml working,"The `.github/workflows/e2e-cross-version.yml` action is consistently failing. We want to get this working again. See [this Slack thread](https://metaboat.slack.com/archives/C0669P4AF9N/p1708515050922759) for more context.
",markbastian,2024-02-27 21:32:25+00:00,['markbastian'],2024-02-29 23:39:31+00:00,2024-02-29 23:39:31+00:00,https://github.com/metabase/metabase/issues/39229,"[('.CI & Tests', ''), ('.Team/DashViz', 'Dashboard and Viz team')]",[],
2157483410,issue,open,,Let me create my own dashboard section template!,"**Is your feature request related to a problem? Please describe.**
With the new cool feature we are launching in 49 about dashboard sections, I (and many customers) would want to create my own templates.

**Describe the solution you'd like**
Just an interface to create, edit, save, and delete dashboard section templates

**Describe alternatives you've considered**
N/A

**How important is this feature to you?**
Requested by customers and me

**Additional context**
N/A
",ignacio-mb,2024-02-27 19:47:56+00:00,[],2024-03-07 16:30:31+00:00,,https://github.com/metabase/metabase/issues/39227,"[('Reporting/Dashboards', ''), ('Type:New Feature', ''), ('Organization/', '')]",[],
2157455228,issue,open,,Add new dashboard section with logo + header and footer,"**Is your feature request related to a problem? Please describe.**
Some users might want to pre set their dashboard with logo + header and a footer (maybe company name + date), so it might be interesting if we can add a new dashboard section with this template

**Describe the solution you'd like**
A new section that has a logo (text card) + header and a footer with company name + date

**Describe alternatives you've considered**
None

**How important is this feature to you?**
Got it in a chat with customers

**Additional context**
NA
",paoliniluis,2024-02-27 19:31:48+00:00,[],2025-02-04 20:30:39+00:00,,https://github.com/metabase/metabase/issues/39226,"[('Reporting/Dashboards', ''), ('Type:New Feature', '')]","[{'comment_id': 1967454733, 'issue_id': 2157455228, 'author': 'paoliniluis', 'body': '@cdeweyx FYI', 'created_at': datetime.datetime(2024, 2, 27, 19, 31, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2454506814, 'issue_id': 2157455228, 'author': 'brunobergher', 'body': ""What's the context for this? Is it when embedding? Subscriptions? What's motivating the ask and what's missing from whitelabeling that doesn't allow for this in the app itself?"", 'created_at': datetime.datetime(2024, 11, 4, 11, 49, 21, tzinfo=datetime.timezone.utc)}]","paoliniluis (Issue Creator) on (2024-02-27 19:31:56 UTC): @cdeweyx FYI

brunobergher on (2024-11-04 11:49:21 UTC): What's the context for this? Is it when embedding? Subscriptions? What's motivating the ask and what's missing from whitelabeling that doesn't allow for this in the app itself?

"
2157440674,issue,open,,Ability to deep link to a specific dashboard tabs in static embedding,"**Is your feature request related to a problem? Please describe.**
When embedding a dashboard with tabs, it's not possible to link to a specific tab.

**Describe the solution you'd like**
* Ability to link to a specific tab by adding a query parameter, e.g. `?tab=...` or 
* Specify the tab to open in the JWT
* Some way of tracking which tab is open in the iframe, so that there a way to share with others (implement a ""share"" link that takes the other person to the same tab)

**Describe alternatives you've considered**
Not using tabs?

**How important is this feature to you?**
Unclear, but this is coming from a Pro customer who's built a big feature around static embedding

**Additional context**
Add any other context or screenshots about the feature request here.
",albertoperdomo,2024-02-27 19:22:58+00:00,[],2024-05-06 17:55:49+00:00,,https://github.com/metabase/metabase/issues/39225,"[('Type:New Feature', ''), ('Embedding/Static', 'Static embedding, previously known as signed embedding'), ('.Team/Embedding', '')]","[{'comment_id': 2096602698, 'issue_id': 2157440674, 'author': 'albertoperdomo', 'body': 'Related https://github.com/metabase/metabase/issues/40967', 'created_at': datetime.datetime(2024, 5, 6, 17, 55, 47, tzinfo=datetime.timezone.utc)}]","albertoperdomo (Issue Creator) on (2024-05-06 17:55:47 UTC): Related https://github.com/metabase/metabase/issues/40967

"
2157360249,issue,closed,completed,"Setting or updating a `user-local` setting by a non-admin is followed by fetching all settings, which results in `403`","We have so called `user-local` settings. They can be limited to admins, setting managers or allowed to be used by any authenticated user. Read more about it [here](https://github.com/metabase/metabase/blob/master/src/metabase/models/setting.clj#L1098).

The problem arises when a non-admin user sets or updates the setting.
The `updateSetting` action (as defined [here](https://github.com/metabase/metabase/blob/master/frontend/src/metabase/admin/settings/settings.js#L53)) then fetches all settings which is something that's allowed only by admins, or superusers.
https://github.com/metabase/metabase/blob/7f0d671/src/metabase/api/setting.clj#L28-L29

## Current behavior
- Non-admin sets or updates the setting.
- Frontend tries to fetch all settings
- The endpoint returns `403`

## Expected behavior
- Non-admin sets or updates the setting.
- Frontend either fetches `/api/session/properties` or it skips the fetching logic altogether

```[tasklist]
### User-local settings not restricted to admins
- [x] last-used-native-database-id (#39251)
- [x] dismissed-browse-models-banner (#39359)
- [x] dismissed-custom-dashboard-toast (#39359)
```

### Related
#39223",nemanjaglumac,2024-02-27 18:40:14+00:00,['nemanjaglumac'],2024-04-26 08:24:26+00:00,2024-03-01 13:33:54+00:00,https://github.com/metabase/metabase/issues/39221,"[('.Frontend', ''), ('Administration/Settings', ''), ('.Team/Querying', '')]","[{'comment_id': 1971642261, 'issue_id': 2157360249, 'author': 'nemanjaglumac', 'body': 'Reopening because there are more user-local settings we need to take care of.\r\nUpdated the description of this issue with a task list.', 'created_at': datetime.datetime(2024, 2, 29, 17, 42, 20, tzinfo=datetime.timezone.utc)}]","nemanjaglumac (Issue Creator) on (2024-02-29 17:42:20 UTC): Reopening because there are more user-local settings we need to take care of.
Updated the description of this issue with a task list.

"
2157337225,issue,closed,completed,Ability to divide exported PDF into sections,"**Is your feature request related to a problem? Please describe.**
If you want to print (cmd+p, ctrl+p) a PDF exported dashboard, it will come out wrong as there are no page divisions; it is recognized as a single page only.
Instead, you will get a very small part of the dashboard or a very tiny view of the entire dashboard (which is unreadable). 

**Describe the solution you'd like**
Ability to configure pages in PDF exports

**Describe alternatives you've considered**
External tools, but none that we support.

**How important is this feature to you?**
Requested by a customer, internal ticket: [#25247](https://metabase.zendesk.com/agent/tickets/25247)

**Additional context**
Related to https://github.com/metabase/metabase/issues/33876
",ignacio-mb,2024-02-27 18:26:59+00:00,[],2024-12-16 15:07:47+00:00,2024-12-16 15:07:46+00:00,https://github.com/metabase/metabase/issues/39218,"[('Type:New Feature', ''), ('Reporting/Export', '')]","[{'comment_id': 2545876424, 'issue_id': 2157337225, 'author': 'cdeweyx', 'body': ""Mostly addressed with https://github.com/metabase/metabase/pull/49917 — Still not configurable, but I'm hoping sensible page breaks get us far enough for the time being. Closing for now."", 'created_at': datetime.datetime(2024, 12, 16, 15, 7, 46, tzinfo=datetime.timezone.utc)}]","cdeweyx on (2024-12-16 15:07:46 UTC): Mostly addressed with https://github.com/metabase/metabase/pull/49917 — Still not configurable, but I'm hoping sensible page breaks get us far enough for the time being. Closing for now.

"
2157274953,issue,closed,completed,Add `swapClauses` function,"Epic https://github.com/metabase/metabase/issues/39210
Issue https://github.com/metabase/metabase/issues/38862

We need a way to reorder clauses within each step in the notebook editor. See the issue for details.

Proposed API:
```
export function swapClauses(
  query: Query,
  stageIndex: number,
  sourceClause: Clause,
  targetClause: Clause,
): Query;
```

We would call this function with filter, aggregation, breakout, and custom expression clauses.

Given a query with aggregations `[count, sum]`, `swapClauses(query, -1, countClause, sumClause)` would result in a query with aggregations `[sum, count]`.
",ranquild,2024-02-27 17:50:11+00:00,['bshepherdson'],2024-03-11 22:26:49+00:00,2024-03-11 22:26:49+00:00,https://github.com/metabase/metabase/issues/39215,[],[],
2157122715,issue,closed,completed,[Epic] Better UI/UX for picking default parameter values,"**Links**
Product doc: ❤️ [Better UI/UX for picking default parameter values](https://www.notion.so/metabase/Better-UI-UX-for-picking-default-parameter-values-6ce0b45af9604f2e90330b44c457311a)
Previous project: ⭐️ [Let creators make dashboard filters required](https://www.notion.so/metabase/Let-creators-make-dashboard-filters-required-7ea3d7caf63545d2b713d1509e4267ad) 

## Milestone 0
- [ ] **WIP** Identify and catalogue all value picker widget behaviors
- [ ] Figure out possible complications 
- [ ] Put together a project plan 

The next steps will be based upon these findings. 

## Milestone 1 — native query default value pickers
- [x] https://github.com/metabase/metabase/pull/39454 — plain values, dates
- [x] https://github.com/metabase/metabase/pull/39852 — categories with different sources to pick from
- [ ] Field parameters
- [ ] Error states, default toggle/blur behavior, other small additions
- [ ] Add a comprehensive set of tests covering:
  - [ ] new UI behaviors
  - [ ] parameter processing (lib)

## Milestone 2 — dashboard default value pickers
TBD

## Next milestones
TBD:
- native question filter components 
- dashboard filter componets
- embeddings
- remove the entire `ParameterValueWidget` with deps

## Issues to be addressed (incomplete list)

- when input is losing focus, restore [the default value](https://metaboat.slack.com/archives/C02H619CJ8K/p1707957402805569?thread_ts=1707417723.403539&cid=C02H619CJ8K)
  - In a TextWidget, press Enter - and it won't set default value back
-  improvements to the default value picking flow (points [A-C here](https://metaboat.slack.com/archives/C02H619CJ8K/p1707957402805569?thread_ts=1707417723.403539&cid=C02H619CJ8K)), and also [Conor's comment](https://metaboat.slack.com/archives/C02H619CJ8K/p1708040647469919?thread_ts=1707417723.403539&cid=C02H619CJ8K)
  - Same as above but might have additional details: ensure input error states are correct as in the [slack comment](https://metaboat.slack.com/archives/C0645JP1W81/p1706217318961009?thread_ts=1706207086.466069&cid=C0645JP1W81)
",oleggromov,2024-02-27 16:48:24+00:00,['oleggromov'],2024-06-06 13:56:59+00:00,2024-06-06 13:56:59+00:00,https://github.com/metabase/metabase/issues/39211,"[('.Epic', 'Feature Implementation or Project'), ('.Team/Querying', '')]",[],
2157060350,issue,closed,completed,[Epic] Allow reordering of items in notebook mode ,"Fixes https://github.com/metabase/metabase/issues/38862

```[tasklist]
### Frontend
- [ ] https://github.com/metabase/metabase/pull/39200
- [ ] https://github.com/metabase/metabase/pull/39205
```

```[tasklist]
### Backend
- [ ] https://github.com/metabase/metabase/issues/39215
```",ranquild,2024-02-27 16:31:19+00:00,['ranquild'],2024-03-14 12:31:34+00:00,2024-03-14 12:31:34+00:00,https://github.com/metabase/metabase/issues/39210,"[('.Epic', 'Feature Implementation or Project')]",[],
2156586845,issue,closed,not_planned,Users can't access audit models in other collections unless they have access to metabase analytics,"### Describe the bug

If you duplicate an audit model anywhere outside the analytics collection, you won't be able to use it unless you have access to the original metabase analytics collection. It won't matter if you have access to the audit permission in the permissions menu in settings, seems like the metabase analytics collection is completely independent of that.

### To Reproduce

1) as an admin, duplicate any audit model to our analytics
2) create a new user and a new group
3) give the second group access to the audit permission in the settings (optional, this doesn't matter as https://github.com/metabase/metabase/issues/39197)
4) then make sure that the second user does not have access to metabase analytics collection
5) go with the second user to the model that you duplicated in our analytics, see the error
![image](https://github.com/metabase/metabase/assets/1711649/84909356-f15a-4f99-8bba-b6ab8ac71d45)


### Expected behavior

If a user has collection permission to the collection + data permissions, then it should see the data

### Logs

NA

### Information about your Metabase installation

```JSON
v48.x
```


### Severity

P1

### Additional context

Seems that giving access to metabase analytics conjugate data + collection access, which should not be the case as we always split those 2

Data access to audit info should be given from settings->admin->permissions->application
Collection permissions should be given from settings->admin->permissions->collection",paoliniluis,2024-02-27 13:23:24+00:00,[],2024-03-21 20:52:37+00:00,2024-03-21 20:52:37+00:00,https://github.com/metabase/metabase/issues/39198,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('Administration/Permissions', 'Collection or Data permissions'), ('Organization/Collections', ''), ('Administration/Usage analytics', 'Pro and Enterprise meta analytics, fka audit')]","[{'comment_id': 1976610843, 'issue_id': 2156586845, 'author': 'luizarakaki', 'body': 'This is by design... Acccess to Metabase analytics is conditioned to the collection permission. We are removing ""Audit"" and ""Audit permission"" soon', 'created_at': datetime.datetime(2024, 3, 4, 13, 43, 1, tzinfo=datetime.timezone.utc)}]","luizarakaki on (2024-03-04 13:43:01 UTC): This is by design... Acccess to Metabase analytics is conditioned to the collection permission. We are removing ""Audit"" and ""Audit permission"" soon

"
2156569555,issue,closed,completed,Audit collection permission not the same as audit permission in settings,"### Describe the bug

If you enable permissions in settings->admin->permissions->application->audit, that will only enable permissions for the audit section of the settings, but it will NOT grant permissions to the audit collection, which seems odd.

### To Reproduce

1) create a second group and a second user, add the second user to the second group
2) go to the permissions, assign permissions to app-> audit to the second group
3) try going to metabase analytics collection with the second group, you can't

### Expected behavior

if a user has permissions access to the audit, it should see metabase analytics

### Logs

NA

### Information about your Metabase installation

```JSON
v48.x
```


### Severity

P2

### Additional context

_No response_",paoliniluis,2024-02-27 13:16:24+00:00,[],2024-05-14 13:41:48+00:00,2024-04-17 18:44:18+00:00,https://github.com/metabase/metabase/issues/39197,"[('Type:Bug', 'Product defects'), ('Administration/Permissions', 'Collection or Data permissions'), ('Administration/Usage analytics', 'Pro and Enterprise meta analytics, fka audit')]","[{'comment_id': 1976608488, 'issue_id': 2156569555, 'author': 'luizarakaki', 'body': 'When upgrading to 48, we granted permissions to the Metabase Analytics to all users with Audit access. But now, the permission to Metabase analytics is based on the collection permission and we will remove the audit permission with the audit feature in the next release.', 'created_at': datetime.datetime(2024, 3, 4, 13, 41, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2061979563, 'issue_id': 2156569555, 'author': 'luizarakaki', 'body': 'Audit tab and audit permission was removed on v50.', 'created_at': datetime.datetime(2024, 4, 17, 18, 44, 18, tzinfo=datetime.timezone.utc)}]","luizarakaki on (2024-03-04 13:41:44 UTC): When upgrading to 48, we granted permissions to the Metabase Analytics to all users with Audit access. But now, the permission to Metabase analytics is based on the collection permission and we will remove the audit permission with the audit feature in the next release.

luizarakaki on (2024-04-17 18:44:18 UTC): Audit tab and audit permission was removed on v50.

"
2155502414,issue,closed,completed,"Enabling ""don't send if there aren't results"" in a subscription won't send the text cards","### Describe the bug

Enabling
![image](https://github.com/metabase/metabase/assets/1711649/4db2ead7-7668-41e3-b8cc-ea8d37225ffb)

won't send the text cards in the dashboard sub

Enabled
![image](https://github.com/metabase/metabase/assets/1711649/de60c72e-b053-47d5-ba66-45bc82420924)

Disabled
![image](https://github.com/metabase/metabase/assets/1711649/3e20a870-9e58-4134-b965-87e7eb76bf34)

The reason is that text cards don't have results and that's why https://github.com/metabase/metabase/pull/37546 wiped them

### To Reproduce

1) create a dashboard
2) add text cards
3) enable ""don't send if there aren't results""
4) send the test email

### Expected behavior

Text cards should be always included

### Logs

NA

### Information about your Metabase installation

```JSON
v48.6
```


### Severity

P1

### Additional context

_No response_",paoliniluis,2024-02-27 02:09:34+00:00,['adam-james-v'],2024-03-11 18:31:25+00:00,2024-03-11 18:31:24+00:00,https://github.com/metabase/metabase/issues/39190,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('Reporting/Pulses', 'Now called Subscriptions'), ('.Regression', 'Bugs that were previously fixed and/or bugs unintentionally shipped with new features.'), ('.Escalation', '')]","[{'comment_id': 1985893663, 'issue_id': 2155502414, 'author': 'Tony-metabase', 'body': 'This still happens', 'created_at': datetime.datetime(2024, 3, 8, 15, 27, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1989170121, 'issue_id': 2155502414, 'author': 'adam-james-v', 'body': 'The fix has been [backported to x.48.x now](https://github.com/metabase/metabase/pull/39942), so this can be closed again.', 'created_at': datetime.datetime(2024, 3, 11, 18, 31, 25, tzinfo=datetime.timezone.utc)}]","Tony-metabase on (2024-03-08 15:27:10 UTC): This still happens

adam-james-v (Assginee) on (2024-03-11 18:31:25 UTC): The fix has been [backported to x.48.x now](https://github.com/metabase/metabase/pull/39942), so this can be closed again.

"
2155423394,issue,closed,not_planned,[BUG] Queries do not update after model changes,"### Describe the bug

When I want to change my model (model1) (ie. change the repository folder, add a colmun, remove a column...), it creates a new question (that I further transforms in model (model2)) and then it does not update my model (model1). I can't modify model1 without creating another question with the graphical interface.

The problem is : if I want to update all the questions that are linked to model1 to have the model2 as a reference for these questions, I have to update all the questions one by one. Thus, if I have a question, I am not sure that the reference model of this question is aligned with the model.

### To Reproduce

1. Create a model named model1
2. Create a question / indicator based on model1 : for instance, the number of lines in model1
3. Modify model1 to apply a filter for instance on a given column (the number of lines of the model must change)
4. To register the modification, you have to create a new question and then transform it as a model
5. You don't need anymore of model1 and you decide to archive it
6. [ERROR] The question / indicator still points out the number of lines of model1 and not of model2


### Expected behavior

The model1 should have changed and queries should have been modified after model1 update

### Logs

-

### Information about your Metabase installation

```JSON
- Windows 10
- Firefox version 115
- Database : postgreSQL
- Metabase version : v1.48.4 (released on 2024-01-29)
- French version
```


### Severity

Slow down the development time of dashboards and is annoying

### Additional context

_No response_",Pierre-PSUD,2024-02-27 00:39:38+00:00,[],2024-02-27 22:12:30+00:00,2024-02-27 13:52:25+00:00,https://github.com/metabase/metabase/issues/39188,"[('Type:Bug', 'Product defects'), ('.Needs Triage', '')]","[{'comment_id': 1966598280, 'issue_id': 2155423394, 'author': 'luizarakaki', 'body': 'You need to ""Edit query definition"" of the model.\r\nhttps://www.metabase.com/docs/latest/data-modeling/models#edit-a-models-query\r\nA model is like a table, if you just add or change clauses, it saves a new question.', 'created_at': datetime.datetime(2024, 2, 27, 13, 52, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1967722088, 'issue_id': 2155423394, 'author': 'Pierre-PSUD', 'body': 'Thank you Luiz ! Have a nice day', 'created_at': datetime.datetime(2024, 2, 27, 22, 12, 28, tzinfo=datetime.timezone.utc)}]","luizarakaki on (2024-02-27 13:52:25 UTC): You need to ""Edit query definition"" of the model.
https://www.metabase.com/docs/latest/data-modeling/models#edit-a-models-query
A model is like a table, if you just add or change clauses, it saves a new question.

Pierre-PSUD (Issue Creator) on (2024-02-27 22:12:28 UTC): Thank you Luiz ! Have a nice day

"
2155127465,issue,closed,completed,Charts that Render via GUI Fail to Render in Subscriptions,"### Describe the bug

If a data source has NULL dates you can still group by date to render a visualization (like a bar or line chart) but the same viz fails when sent via subscription.

### To Reproduce

1. Create test SQL question with NULL date:

(SELECT
  ""PUBLIC"".""orders"".""id"" AS ""id"",
  ""PUBLIC"".""orders"".""created_at"" AS ""created_at"",
  ""PUBLIC"".""orders"".""quantity"" AS ""quantity""
FROM
  ""v3_sample-dataset"".""PUBLIC"".""orders""
LIMIT 10)
UNION
(SELECT
  ""PUBLIC"".""orders"".""id"" AS ""id"",
  null AS ""created_at"",
  ""PUBLIC"".""orders"".""quantity"" AS ""quantity""
FROM
  ""v3_sample-dataset"".""PUBLIC"".""orders""
  LIMIT 10)
  
2. Create a bar chart (or line, area or combo chart) from the question, group by date and save to a dashboard
3. Send an email subscription from the dashboard

The email will deliver but in place of the chart you'll see, ""An error occurred while displaying this card"".




### Expected behavior

If the chart can be visualized in Metabase we should be able to successfully deliver a version of it via subscription.

### Logs

[ac89de1d-232c-4de3-beef-54edb2cab0a7] 2024-02-26T13:55:47-06:00 DEBUG metabase.server.middleware.log GET /api/pulse 200 10.9 ms (1 DB calls) App DB connections: 2/10 Jetty threads: 7/50 (3 idle, 0 queued) (126 total active threads) Queries in flight: 0 (0 queued)
[ac89de1d-232c-4de3-beef-54edb2cab0a7] 2024-02-26T13:55:47-06:00 DEBUG metabase.server.middleware.log GET /api/user/recipients 200 14.4 ms (2 DB calls) App DB connections: 1/10 Jetty threads: 6/50 (3 idle, 0 queued) (126 total active threads) Queries in flight: 0 (0 queued)
[ac89de1d-232c-4de3-beef-54edb2cab0a7] 2024-02-26T13:55:51-06:00 ERROR metabase.pulse.render Pulse card render error
RangeError: Provided date is not in valid range.
	at <js> uM(file:/app/metabase.jar!/frontend_client/app/dist/lib-static-viz.bundle.js:46:3265920-3265935)
	at <js> :=>(file:/app/metabase.jar!/frontend_client/app/dist/lib-static-viz.bundle.js:46:3266147-3266153)
	at <js> ub(file:/app/metabase.jar!/frontend_client/app/dist/lib-static-viz.bundle.js:46:3266046-3266158)
	at <js> im(file:/app/metabase.jar!/frontend_client/app/dist/lib-static-viz.bundle.js:46:3284411-3284427)
	at <js> :=>(file:/app/metabase.jar!/frontend_client/app/dist/lib-static-viz.bundle.js:46:3284700-3284724)
	at <js> iw(file:/app/metabase.jar!/frontend_client/app/dist/lib-static-viz.bundle.js:46:3284669-3284739)
	at <js> aF(file:/app/metabase.jar!/frontend_client/app/dist/lib-static-viz.bundle.js:46:3300929-3300959)
	at org.graalvm.polyglot.Value.execute(Value.java:880)
	at metabase.pulse.render.js_engine$execute_fn_name.invokeStatic(js_engine.clj:52)
	at metabase.pulse.render.js_engine$execute_fn_name.doInvoke(js_engine.clj:46)
	at clojure.lang.RestFn.invoke(RestFn.java:490)
	at metabase.pulse.render.js_svg$combo_chart.invokeStatic(js_svg.clj:142)
	at metabase.pulse.render.js_svg$combo_chart.invoke(js_svg.clj:133)
	at metabase.pulse.render.body$lab_image_bundle.invokeStatic(body.clj:841)
	at metabase.pulse.render.body$lab_image_bundle.invoke(body.clj:816)
	at metabase.pulse.render.body$fn__73048$render__73036__73053$fn__73054.invoke(body.clj:860)
	at metabase.pulse.render.body$fn__73048$render__73036__73053.invoke(body.clj:858)
	at clojure.lang.MultiFn.invoke(MultiFn.java:261)
	at metabase.pulse.render$fn__73792$render_pulse_card_body__73797$fn__73801.invoke(render.clj:138)
	at metabase.pulse.render$fn__73792$render_pulse_card_body__73797.invoke(render.clj:128)
	at metabase.pulse.render$fn__73832$render_pulse_card__73837$fn__73838.invoke(render.clj:167)
	at metabase.pulse.render$fn__73832$render_pulse_card__73837.invoke(render.clj:149)
	at metabase.pulse.render$fn__73864$render_pulse_section__73869$fn__73873$fn__73876.invoke(render.clj:199)
	at metabase.pulse.render$fn__73864$render_pulse_section__73869$fn__73873.invoke(render.clj:197)
	at metabase.pulse.render$fn__73864$render_pulse_section__73869.invoke(render.clj:194)
	at metabase.email.messages$render_part.invokeStatic(messages.clj:442)
	at metabase.email.messages$render_part.invoke(messages.clj:438)
	at metabase.email.messages$render_message_body$fn__74906$fn__74907.invoke(messages.clj:495)
	at clojure.core$mapv$fn__8535.invoke(core.clj:6979)
	at clojure.core.protocols$fn__8249.invokeStatic(protocols.clj:168)
	at clojure.core.protocols$fn__8249.invoke(protocols.clj:124)
	at clojure.core.protocols$fn__8204$G__8199__8213.invoke(protocols.clj:19)
	at clojure.core.protocols$seq_reduce.invokeStatic(protocols.clj:31)
	at clojure.core.protocols$fn__8236.invokeStatic(protocols.clj:75)
	at clojure.core.protocols$fn__8236.invoke(protocols.clj:75)
	at clojure.core.protocols$fn__8178$G__8173__8191.invoke(protocols.clj:13)
	at clojure.core$reduce.invokeStatic(core.clj:6886)
	at clojure.core$mapv.invokeStatic(core.clj:6970)
	at clojure.core$mapv.invoke(core.clj:6970)
	at metabase.email.messages$render_message_body$fn__74906.invoke(messages.clj:495)
	at metabase.email.messages$render_message_body.invokeStatic(messages.clj:494)
	at metabase.email.messages$render_message_body.invoke(messages.clj:492)
	at metabase.email.messages$render_pulse_email.invokeStatic(messages.clj:521)
	at metabase.email.messages$render_pulse_email.invoke(messages.clj:518)
	at metabase.pulse$fn__100077.invokeStatic(pulse.clj:431)
	at metabase.pulse$fn__100077.invoke(pulse.clj:420)
	at clojure.lang.MultiFn.invoke(MultiFn.java:239)
	at metabase.pulse$parts__GT_notifications$iter__100151__100155$fn__100156$fn__100157.invoke(pulse.clj:502)
	at metabase.pulse$parts__GT_notifications$iter__100151__100155$fn__100156.invoke(pulse.clj:500)
	at clojure.lang.LazySeq.sval(LazySeq.java:42)
	at clojure.lang.LazySeq.seq(LazySeq.java:51)
	at clojure.lang.RT.seq(RT.java:535)
	at clojure.core$seq__5467.invokeStatic(core.clj:139)
	at clojure.core$seq__5467.invoke(core.clj:139)
	at metabase.pulse$send_notifications_BANG_.invokeStatic(pulse.clj:555)
	at metabase.pulse$send_notifications_BANG_.invoke(pulse.clj:554)
	at metabase.pulse$send_pulse_BANG_.invokeStatic(pulse.clj:582)
	at metabase.pulse$send_pulse_BANG_.doInvoke(pulse.clj:563)
	at clojure.lang.RestFn.invoke(RestFn.java:410)
	at metabase.api.pulse$fn__101055.invokeStatic(pulse.clj:322)
	at metabase.api.pulse$fn__101055.invoke(pulse.clj:308)
	at compojure.core$wrap_response$fn__43795.invoke(core.clj:160)
	at compojure.core$wrap_route_middleware$fn__43779.invoke(core.clj:132)
	at compojure.core$wrap_route_info$fn__43784.invoke(core.clj:139)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:151)
	at clojure.lang.Var.invoke(Var.java:393)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at clojure.lang.Var.invoke(Var.java:393)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at clojure.lang.Var.invoke(Var.java:393)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at clojure.lang.Var.invoke(Var.java:393)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:152)
	at clojure.lang.Var.invoke(Var.java:393)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at metabase.server.middleware.auth$enforce_authentication$fn__94181.invoke(auth.clj:17)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$make_context$handler__43835.invoke(core.clj:290)
	at compojure.core$make_context$fn__43839.invoke(core.clj:300)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at metabase.api.routes$fn__101607$fn__101608.invoke(routes.clj:64)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at clojure.lang.AFn.applyToHelper(AFn.java:160)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$apply.invoke(core.clj:662)
	at metabase.server.routes$fn__101770$fn__101771.doInvoke(routes.clj:72)
	at clojure.lang.RestFn.invoke(RestFn.java:436)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$make_context$handler__43835.invoke(core.clj:290)
	at compojure.core$make_context$fn__43839.invoke(core.clj:300)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$wrap_route_matches$fn__43788.invoke(core.clj:153)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:199)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$make_context$handler__43835.invoke(core.clj:290)
	at compojure.core$make_context$fn__43839.invoke(core.clj:300)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807$f__43808$respond_SINGLEQUOTE___43809.invoke(core.clj:197)
	at compojure.core$make_context$fn__43839.invoke(core.clj:301)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at compojure.core$routes$fn__43807$f__43808.invoke(core.clj:198)
	at compojure.core$routes$fn__43807.invoke(core.clj:200)
	at metabase.server.middleware.exceptions$catch_uncaught_exceptions$fn__98831.invoke(exceptions.clj:108)
	at metabase.server.middleware.exceptions$catch_api_exceptions$fn__98828.invoke(exceptions.clj:96)
	at metabase.server.middleware.log$log_api_call$fn__103771$fn__103772$fn__103773.invoke(log.clj:216)
	at metabase.driver.sql_jdbc.execute.diagnostic$do_with_diagnostic_info.invokeStatic(diagnostic.clj:18)
	at metabase.driver.sql_jdbc.execute.diagnostic$do_with_diagnostic_info.invoke(diagnostic.clj:12)
	at metabase.server.middleware.log$log_api_call$fn__103771$fn__103772.invoke(log.clj:208)
	at toucan2.execute$do_with_call_counts.invokeStatic(execute.clj:112)
	at toucan2.execute$do_with_call_counts.invoke(execute.clj:103)
	at metabase.server.middleware.log$log_api_call$fn__103771.invoke(log.clj:207)
	at metabase.server.middleware.browser_cookie$ensure_browser_id_cookie$fn__108449.invoke(browser_cookie.clj:40)
	at metabase.server.middleware.security$add_security_headers$fn__85097.invoke(security.clj:180)
	at metabase.server.middleware.json$wrap_json_body$fn__45153.invoke(json.clj:67)
	at metabase.server.middleware.offset_paging$handle_paging$fn__85121.invoke(offset_paging.clj:45)
	at metabase.server.middleware.json$wrap_streamed_json_response$fn__45171.invoke(json.clj:103)
	at ring.middleware.keyword_params$wrap_keyword_params$fn__108716.invoke(keyword_params.clj:55)
	at ring.middleware.params$wrap_params$fn__108735.invoke(params.clj:77)
	at metabase.server.middleware.misc$maybe_set_site_url$fn__65458.invoke(misc.clj:61)
	at metabase.server.middleware.session$reset_session_timeout$fn__71253.invoke(session.clj:488)
	at metabase.server.middleware.session$bind_current_user$fn__71219$fn__71220.invoke(session.clj:383)
	at metabase.server.middleware.session$do_with_current_user.invokeStatic(session.clj:362)
	at metabase.server.middleware.session$do_with_current_user.invoke(session.clj:346)
	at metabase.server.middleware.session$bind_current_user$fn__71219.invoke(session.clj:382)
	at metabase.server.middleware.session$wrap_current_user_info$fn__71202.invoke(session.clj:321)
	at metabase.server.middleware.session$wrap_session_id$fn__71185.invoke(session.clj:253)
	at metabase.server.middleware.auth$wrap_api_key$fn__94189.invoke(auth.clj:30)
	at ring.middleware.cookies$wrap_cookies$fn__108636.invoke(cookies.clj:216)
	at metabase.server.middleware.misc$add_content_type$fn__65440.invoke(misc.clj:29)
	at metabase.server.middleware.misc$disable_streaming_buffering$fn__65466.invoke(misc.clj:78)
	at ring.middleware.gzip$wrap_gzip$fn__108678.invoke(gzip.clj:86)
	at metabase.server.middleware.misc$bind_request$fn__65469.invoke(misc.clj:95)
	at metabase.server.middleware.ssl$redirect_to_https_middleware$fn__108465.invoke(ssl.clj:41)
	at metabase.server$async_proxy_handler$fn__65643.invoke(server.clj:78)
	at metabase.server.proxy$org.eclipse.jetty.server.handler.AbstractHandler$ff19274a.handle(Unknown Source)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:122)
	at org.eclipse.jetty.server.Server.handle(Server.java:563)
	at org.eclipse.jetty.server.HttpChannel$RequestDispatchable.dispatch(HttpChannel.java:1598)
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:753)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:501)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:287)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:314)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:100)
	at org.eclipse.jetty.io.SelectableChannelEndPoint$1.run(SelectableChannelEndPoint.java:53)
	at org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.runTask(AdaptiveExecutionStrategy.java:421)
	at org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.consumeTask(AdaptiveExecutionStrategy.java:390)
	at org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.tryProduce(AdaptiveExecutionStrategy.java:277)
	at org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.run(AdaptiveExecutionStrategy.java:199)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:411)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:969)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.doRunJob(QueuedThreadPool.java:1194)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1149)
	at java.base/java.lang.Thread.run(Unknown Source)
[ac89de1d-232c-4de3-beef-54edb2cab0a7] 2024-02-26T13:55:52-06:00 DEBUG metabase.server.middleware.log POST /api/pulse/test 200 2.1 s (60 DB calls) App DB connections: 1/10 Jetty threads: 6/50 (3 idle, 0 queued) (126 total active threads) Queries in flight: 0 (0 queued); snowflake DB 3 connections: 0/7 (0 threads blocked)
[ac89de1d-232c-4de3-beef-54edb2cab0a7] 2024-02-26T14:00:00-06:00 INFO metabase.task.send-pulses Sending scheduled pulses...
[ac89de1d-232c-4de3-beef-54edb2cab0a7] 2024-02-26T14:11:00-06:00 INFO metabase.task.sync-databases Starting sync task for Database 2.
[ac89de1d-232c-4de3-beef-54edb2cab0a7] 2024-02-26T14:11:10-06:00 ERROR metabase.driver.util Failed to connect to Database
java.util.concurrent.TimeoutException: Timed out after 10.0 s
	at metabase.util.jvm$deref_with_timeout.invokeStatic(jvm.clj:287)
	at metabase.util.jvm$deref_with_timeout.invoke(jvm.clj:279)
	at metabase.util.jvm$do_with_timeout.invokeStatic(jvm.clj:294)
	at metabase.util.jvm$do_with_timeout.invoke(jvm.clj:290)
	at metabase.driver.util$can_connect_with_details_QMARK_.invokeStatic(util.clj:146)
	at metabase.driver.util$can_connect_with_details_QMARK_.doInvoke(util.clj:135)
	at clojure.lang.RestFn.invoke(RestFn.java:442)
	at metabase.task.sync_databases$sync_and_analyze_database_STAR__BANG_$fn__110809$fn__110810.invoke(sync_databases.clj:88)
	at metabase.task.sync_databases$sync_and_analyze_database_STAR__BANG_$fn__110809.invoke(sync_databases.clj:87)
	at metabase.task.sync_databases$sync_and_analyze_database_STAR__BANG_.invokeStatic(sync_databases.clj:84)
	at metabase.task.sync_databases$sync_and_analyze_database_STAR__BANG_.invoke(sync_databases.clj:77)
	at metabase.task.sync_databases$sync_and_analyze_database_BANG_.invokeStatic(sync_databases.clj:113)
	at metabase.task.sync_databases$sync_and_analyze_database_BANG_.invoke(sync_databases.clj:101)
	at metabase.task.sync_databases.SyncAndAnalyzeDatabase.execute(sync_databases.clj:118)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:202)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
[ac89de1d-232c-4de3-beef-54edb2cab0a7] 2024-02-26T14:11:10-06:00 ERROR metabase.driver.snowflake (type message)
=> java.lang.String
[ac89de1d-232c-4de3-beef-54edb2cab0a7] 2024-02-26T14:11:10-06:00 WARN metabase.task.sync-databases Cannot sync Database Snowflake Dev: Timed out after 10.0 s
clojure.lang.ExceptionInfo: Timed out after 10.0 s {:message ""Timed out after 10.0 s""}
	at metabase.driver.util$can_connect_with_details_QMARK_.invokeStatic(util.clj:164)
	at metabase.driver.util$can_connect_with_details_QMARK_.doInvoke(util.clj:135)
	at clojure.lang.RestFn.invoke(RestFn.java:442)
	at metabase.task.sync_databases$sync_and_analyze_database_STAR__BANG_$fn__110809$fn__110810.invoke(sync_databases.clj:88)
	at metabase.task.sync_databases$sync_and_analyze_database_STAR__BANG_$fn__110809.invoke(sync_databases.clj:87)
	at metabase.task.sync_databases$sync_and_analyze_database_STAR__BANG_.invokeStatic(sync_databases.clj:84)
	at metabase.task.sync_databases$sync_and_analyze_database_STAR__BANG_.invoke(sync_databases.clj:77)
	at metabase.task.sync_databases$sync_and_analyze_database_BANG_.invokeStatic(sync_databases.clj:113)
	at metabase.task.sync_databases$sync_and_analyze_database_BANG_.invoke(sync_databases.clj:101)
	at metabase.task.sync_databases.SyncAndAnalyzeDatabase.execute(sync_databases.clj:118)
	at org.quartz.core.JobRunShell.run(JobRunShell.java:202)
	at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:573)
Caused by: java.util.concurrent.TimeoutException: Timed out after 10.0 s
	at metabase.util.jvm$deref_with_timeout.invokeStatic(jvm.clj:287)
	at metabase.util.jvm$deref_with_timeout.invoke(jvm.clj:279)
	at metabase.util.jvm$do_with_timeout.invokeStatic(jvm.clj:294)
	at metabase.util.jvm$do_with_timeout.invoke(jvm.clj:290)
	at metabase.driver.util$can_connect_with_details_QMARK_.invokeStatic(util.clj:146)
	... 11 more
[ac89de1d-232c-4de3-beef-54edb2cab0a7] 2024-02-26T14:12:00-06:00 INFO metabase.task.sync-databases Starting sync task for Database 3.

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""en-US"",
    ""platform"": ""Win32"",
    ""userAgent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.22+7"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.22"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.22+7"",
    ""os.name"": ""Linux"",
    ""os.version"": ""5.15.133.1-microsoft-standard-WSL2"",
    ""user.language"": ""en"",
    ""user.timezone"": ""GMT""
  },
  ""metabase-info"": {
    ""databases"": [
      ""snowflake"",
      ""h2"",
      ""postgres""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""postgres"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""PostgreSQL"",
        ""version"": ""11.22 (Debian 11.22-1.pgdg110+1)""
      },
      ""jdbc-driver"": {
        ""name"": ""PostgreSQL JDBC Driver"",
        ""version"": ""42.6.0""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-02-12"",
      ""tag"": ""v1.48.6"",
      ""hash"": ""b8818f9""
    },
    ""settings"": {
      ""report-timezone"": null
    }
  }
}
```


### Severity

There are work arounds but it's not very obvious why this is happening or how to work around it.

### Additional context

_No response_",ixipixi,2024-02-26 21:05:33+00:00,['alxnddr'],2024-05-13 14:10:20+00:00,2024-05-13 14:10:20+00:00,https://github.com/metabase/metabase/issues/39178,"[('Type:Bug', 'Product defects'), ('Visualization/Static', 'Subscriptions/pulse generated image'), ('.echarts-scope', 'Issues related to chart types that have already been or will be migrated to echarts.'), ('.Team/DashViz', 'Dashboard and Viz team')]","[{'comment_id': 2017967731, 'issue_id': 2155127465, 'author': 'god-s-perfect-idiot', 'body': '+1 on this.', 'created_at': datetime.datetime(2024, 3, 25, 13, 5, 12, tzinfo=datetime.timezone.utc)}]","god-s-perfect-idiot on (2024-03-25 13:05:12 UTC): +1 on this.

"
2155093901,issue,open,,Capture count of all tables for DBs tier 1 and 2,"**Context**
Knowing the size of tables is a first step to customize Metabase for larger instances.
This process should be as lightweight as possible, ideally in a non-opt-out process (like standard sync)

If it is a view, we should add make it clear we don't know the count (ie null)

- Postgres `pg_stat_user_tables`
- H2 `INFORMATION_SCHEMA.TABLES`
- Redshift `SVV_TABLE_INFO` -- requires superuser
- BigQuery `TABLE_STORAGE` -- requires `roles/bigquery.metadataViewer`
- Snowflake `INFORMATION_SCHEMA.TABLES`
- MySQL `INFORMATION_SCHEMA.TABLES`

We need a fallback in case the connection doesn't have access to these tables. We can start not gathering this metadata.",luizarakaki,2024-02-26 20:48:15+00:00,[],2024-04-22 11:33:32+00:00,,https://github.com/metabase/metabase/issues/39176,"[('Administration/Metadata & Sync', ''), ('.Task', 'Not a part of any Epic, used by the Task Issue Template')]","[{'comment_id': 1965529903, 'issue_id': 2155093901, 'author': 'paoliniluis', 'body': 'We should send this to the partners and also signal the 3rd party drivers', 'created_at': datetime.datetime(2024, 2, 26, 23, 46, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1969122703, 'issue_id': 2155093901, 'author': 'qnkhuat', 'body': ""for connections that we don't have permissions, we'll skip them for now"", 'created_at': datetime.datetime(2024, 2, 28, 14, 36, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 2031359731, 'issue_id': 2155093901, 'author': 'qnkhuat', 'body': ""We've implemented this for postgres. Other drivers will be supported in the future \r\nContext: https://metaboat.slack.com/archives/C0641E4PB9B/p1711457095455119?thread_ts=1711396339.914919&cid=C0641E4PB9B"", 'created_at': datetime.datetime(2024, 4, 2, 8, 15, 58, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-02-26 23:46:10 UTC): We should send this to the partners and also signal the 3rd party drivers

qnkhuat on (2024-02-28 14:36:29 UTC): for connections that we don't have permissions, we'll skip them for now

qnkhuat on (2024-04-02 08:15:58 UTC): We've implemented this for postgres. Other drivers will be supported in the future 
Context: https://metaboat.slack.com/archives/C0641E4PB9B/p1711457095455119?thread_ts=1711396339.914919&cid=C0641E4PB9B

"
2154764940,issue,closed,not_planned,Move mobile breakpoint logic up into the dashboard itself. Pass this mobile breakpoint variable to the grid for setting the mobile view.,,JesseSDevaney,2024-02-26 17:49:20+00:00,[],2024-02-26 17:58:28+00:00,2024-02-26 17:58:28+00:00,https://github.com/metabase/metabase/issues/39169,[],[],
2154667424,issue,open,,Add OSS cache admin page,,rafpaf,2024-02-26 17:02:58+00:00,[],2024-02-26 17:02:58+00:00,,https://github.com/metabase/metabase/issues/39164,[],[],
2154662142,issue,closed,not_planned,"Create new UI for performance admin, with three possible cache invalidation strategies for databases","```[tasklist]
### Milestone 1
- [x] Add Performance tab (https://github.com/metabase/metabase/pull/39234)
- [x] Add data caching settings tab (https://github.com/metabase/metabase/pull/39234)
- [x] Add three-panel configuration editor (https://github.com/metabase/metabase/pull/39234)
- [x] Add don't cache (with no connection to backend (https://github.com/metabase/metabase/pull/39234)
- [x] Add TTL (with no connection to backend) (https://github.com/metabase/metabase/pull/39234)
- [x] Add don't cache (with real connection to backend) https://github.com/metabase/metabase/pull/39234
- [x] Add TTL (with real connection to backend) https://github.com/metabase/metabase/pull/39234
- [x] Split out enterprise-specific code #39234
- [x] Add configuration option for cache strategy: duration #39234
- [x] Add error messages to form (#39234)
- [x] Add confirmation modal before resetting databases to default  (#39234)
- [x] Add confirmation modal before leaving page  (#39234)
- [x] Remove superseded items from cache settings page  (#39234)
- [x] Add basic unit tests  (#39234)
- [x] Ensure ""reset all"" button shows different loading states  (#39234)
- [x] Add background hover color to ""reset all"" button  (#39234)
- [x] Ensure ""Save changes"" button says ""Save changes"" after form is edited  (#39234)
- [x] Ensure ""Reset all to default"" button says ""Reset all to default"" when form is edited  (#39234)
- [x] Add 'example' link with tooltip  (#39234)
- [x] To say that the root strategy is ""nocache, delete it  (#39234)
- [x] Use 'Reset all database caching policies to the default?' in the reset button confirmation modal  (#39234)
- [x] Split StrategyEditorForDatabases into smaller components and hooks  (#39234)
- [x] Split out enterprise code thoroughly
- [x] Tweak: reset button from 'Saved' to 'Save changes' when the user edits the form
```

**Milestone 2 is now in a separate issue: #40978*


```[tasklist]
### Open questions (note: these are not tasks)
- [x] It might be confusing to say 'resetting to duration' if the database strategies are also duration. Perhaps we should say 'resetting to duration (10 hours)' or just 'reset to the default strategy'
```
",rafpaf,2024-02-26 17:00:34+00:00,['rafpaf'],2024-04-06 02:00:45+00:00,2024-04-06 02:00:44+00:00,https://github.com/metabase/metabase/issues/39163,[],"[{'comment_id': 2040856651, 'issue_id': 2154662142, 'author': 'rafpaf', 'body': 'Moved this list into the epic issue: https://github.com/metabase/metabase/issues/39153', 'created_at': datetime.datetime(2024, 4, 6, 2, 0, 45, tzinfo=datetime.timezone.utc)}]","rafpaf (Issue Creator) on (2024-04-06 02:00:45 UTC): Moved this list into the epic issue: https://github.com/metabase/metabase/issues/39153

"
2153984517,issue,open,,"""Question: 123"" column names for columns from joined questions","### Describe the bug

When joining a saved question, in some cases columns in query results are named like ""Question: 123 -> Column name"" instead of using the joined question name.

### To Reproduce

- Open https://stats.metabase.com/question/4859
- Scroll right to see affected columns

### Expected behavior

Question name should be used instead of ID

### Logs

_No response_

### Information about your Metabase installation

```JSON
Stats
```


### Severity

P2/P3

### Additional context

_No response_",ranquild,2024-02-26 11:48:44+00:00,[],2025-02-04 20:27:55+00:00,,https://github.com/metabase/metabase/issues/39155,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Querying/Processor', ''), ('.Backend', ''), ('.Team/Querying', '')]","[{'comment_id': 1965572571, 'issue_id': 2153984517, 'author': 'paoliniluis', 'body': ""Isn't this the same as https://github.com/metabase/metabase/issues/12930?"", 'created_at': datetime.datetime(2024, 2, 27, 0, 25, 32, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-02-27 00:25:32 UTC): Isn't this the same as https://github.com/metabase/metabase/issues/12930?

"
2153918533,issue,closed,completed,[Epic] Cache admin,"**Links**
- [product doc: rework cache setup](https://www.notion.so/metabase/Rework-cache-setup-and-management-db37ccc280db4da484c15770bd18f0bd#7460c0b5537f43339fe1ac354badc60b)
- [product doc: add and refine cache invalidation policies](https://www.notion.so/metabase/Add-and-refine-cache-invalidation-policies-e6d69bd2ffa54351ab0b902637b50b15)
- [technical design doc](https://www.notion.so/metabase/Tech-Cache-arc-bbbdc728e38c49dbad52cebd22c9011e) for the BE
- [figma](https://www.figma.com/file/x87hHuf4RabjMBuyV2Lq7c/caching-arc-low-fi-explorations?type=design&node-id=693-18853&mode=design&t=VqIEhJO0vzEsCzDr-0)

```[tasklist]
- [ ] https://github.com/metabase/metabase/issues/41425
- [ ] https://github.com/metabase/metabase/issues/41426
- [ ] https://github.com/metabase/metabase/issues/41427
- [ ] https://github.com/metabase/metabase/issues/41478
- [ ] https://github.com/metabase/metabase/issues/42591
- [ ] https://github.com/metabase/metabase/issues/42718
- [ ] https://github.com/metabase/metabase/issues/41455
- [ ] https://github.com/metabase/metabase/issues/42568
```",rafpaf,2024-02-26 11:18:18+00:00,"['rafpaf', 'iethree']",2024-10-04 17:24:42+00:00,2024-10-04 17:24:42+00:00,https://github.com/metabase/metabase/issues/39153,"[('.Epic', 'Feature Implementation or Project')]",[],
2153915312,issue,closed,completed,Public Links are null for new questions,"### Describe the bug

When trying to use the embed button + public link with new questions, the public link popover presents the user with a blank input box. When the user copies the link, the link comes out to 
```
<INSTANCE URL>/api/card/null/public_link
```

We shouldn't allow users to share a public link until the question has been saved.

### To Reproduce

1. Create a question (`New` → `Question`)
2. Click on the `Share` button (on the bottom right of the question view)
3. Click `Create a public link`
4. See that the link box is empty and copying the link gives a `null` URL


### Expected behavior

We shouldn't allow users to share a public link until the question has been saved.

### Logs

_No response_

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""en-US"",
    ""platform"": ""MacIntel"",
    ""userAgent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""21.0.2"",
    ""java.vendor"": ""Homebrew"",
    ""java.vendor.url"": ""https://github.com/Homebrew/homebrew-core/issues"",
    ""java.version"": ""21.0.2"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""21.0.2"",
    ""os.name"": ""Mac OS X"",
    ""os.version"": ""14.1.1"",
    ""user.language"": ""en"",
    ""user.timezone"": ""Europe/Rome""
  },
  ""metabase-info"": {
    ""databases"": [
      ""postgres"",
      ""h2""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""postgres"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""PostgreSQL"",
        ""version"": ""13.11""
      },
      ""jdbc-driver"": {
        ""name"": ""PostgreSQL JDBC Driver"",
        ""version"": ""42.7.1""
      }
    },
    ""run-mode"": ""dev"",
    ""version"": {
      ""date"": ""2024-01-29"",
      ""tag"": ""v1.48.1-SNAPSHOT"",
      ""hash"": ""1bb09a7""
    },
    ""settings"": {
      ""report-timezone"": null
    }
  }
}
```


### Severity

P2

### Additional context

_No response_",oisincoveney,2024-02-26 11:16:41+00:00,['oisincoveney'],2024-03-02 08:33:32+00:00,2024-03-02 08:33:32+00:00,https://github.com/metabase/metabase/issues/39152,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Frontend', ''), ('.Needs Triage', ''), ('.Team/Embedding', '')]",[],
2153889567,issue,closed,completed,Custom column with a duplicate name fails in nested models,"### Describe the bug

When you create a custom column, giving it the same name as an existing column fails.

### To Reproduce

3 models, each model has the same custom column name (first model is a simple one, no custom column)

![Screenshot 2024-02-23 at 8 27 38 PM](https://github.com/metabase/metabase/assets/127636/3131f45a-fe49-4726-87fa-5c9e8bb5db45)
![Screenshot 2024-02-23 at 8 28 05 PM](https://github.com/metabase/metabase/assets/127636/4747b5d1-32a7-4984-ac45-1a180487c525)
![Screenshot 2024-02-23 at 8 28 42 PM](https://github.com/metabase/metabase/assets/127636/65afede8-3754-49ed-bbeb-3fd5e635320f)


### Expected behavior

_No response_

### Logs

_No response_

### Information about your Metabase installation

```JSON
48.6

https://vamsi-peri.hosted.staging.metabase.com/model/102-accounts-from-fb-google-v3-model
```


### Severity

P1

### Additional context

_No response_",perivamsi,2024-02-26 11:04:11+00:00,[],2024-10-08 17:09:04+00:00,2024-07-19 00:02:33+00:00,https://github.com/metabase/metabase/issues/39150,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('Querying/Nested Queries', 'Questions based on other saved questions'), ('.Reproduced', 'Issues reproduced in test (usually Cypress)'), ('Querying/Notebook/Custom Column', ''), ('.Already Fixed', 'will apear in ""Already Fixed"" in the release notes (not ""Bug Fixes"" that we actively fixed)')]","[{'comment_id': 1963871371, 'issue_id': 2153889567, 'author': 'perivamsi', 'body': 'This cannot be reproduced on stats/49-RC1 because we detect name collision during custom column naming and block that silently (will create a separate issue for that).', 'created_at': datetime.datetime(2024, 2, 26, 11, 5, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1973758356, 'issue_id': 2153889567, 'author': 'NevRA', 'body': '@perivamsi, is it a blocker for the release?', 'created_at': datetime.datetime(2024, 3, 1, 19, 1, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1975893312, 'issue_id': 2153889567, 'author': 'kamilmielnik', 'body': ""> This cannot be reproduced on stats/49-RC1 \r\n\r\nConfirmed. So it's not a release blocker for 0.49.\r\n\r\n> because we detect name collision during custom column naming\r\n\r\nIt works like that since refactoring that part of GUI editor to MLv2: #36455 (which was targeted for v49 altogether).\r\nI'm not sure if it makes sense to cherry-pick just these related changes - they could bring in some MLv2 bugs that we addressed holistically for v49 (e.g. #36464, #36459, #36168, #36167, #36120).\r\n\r\n> (will create a separate issue for that).\r\n\r\n:pray:"", 'created_at': datetime.datetime(2024, 3, 4, 7, 30, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1976395031, 'issue_id': 2153889567, 'author': 'perivamsi', 'body': 'Opened a new issue for the silent error https://github.com/metabase/metabase/issues/39508', 'created_at': datetime.datetime(2024, 3, 4, 11, 43, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2029796451, 'issue_id': 2153889567, 'author': 'uladzimirdev', 'body': 'I\'m still able to reproduce the issue on master and 6655faa047 and on 0.49.2. \r\n\r\nNothing specific is sent to BE from FE, so I\'d double-check on BE side how the case with the same name of custom columns is handled.\r\n\r\nSteps to reproduce:\r\n\r\n- create a model with a custom column (e.g. `Orders` -> `[Total]` + 1 and name `Total`, name is `Orders_1`).\r\n- create another model form a model from step 1 (`Orders_1`) with a custom column with the same name and formula.\r\n- click preview button -> see the error\r\n\r\n<img width=""1438"" alt=""image"" src=""https://github.com/metabase/metabase/assets/125459446/9b27d374-c6ed-4684-b913-1528c0807ac1"">\r\n\r\n\r\n<details><summary>Error</summary>\r\n<p>\r\n\r\n```\r\nColumn ""source.Total_3"" not found; SQL statement:\r\nSELECT ""source"".""ID"" AS ""ID"", ""source"".""USER_ID"" AS ""USER_ID"", ""source"".""PRODUCT_ID"" AS ""PRODUCT_ID"", ""source"".""SUBTOTAL"" AS ""SUBTOTAL"", ""source"".""TAX"" AS ""TAX"", ""source"".""TOTAL"" AS ""TOTAL"", ""source"".""DISCOUNT"" AS ""DISCOUNT"", ""source"".""CREATED_AT"" AS ""CREATED_AT"", ""source"".""QUANTITY"" AS ""QUANTITY"", ""source"".""Total_2"" AS ""Total_2"", ""source"".""Total_3"" AS ""Total_2_2"" FROM (SELECT ""source"".""ID"" AS ""ID"", ""source"".""USER_ID"" AS ""USER_ID"", ""source"".""PRODUCT_ID"" AS ""PRODUCT_ID"", ""source"".""SUBTOTAL"" AS ""SUBTOTAL"", ""source"".""TAX"" AS ""TAX"", ""source"".""TOTAL"" AS ""TOTAL"", ""source"".""DISCOUNT"" AS ""DISCOUNT"", ""source"".""CREATED_AT"" AS ""CREATED_AT"", ""source"".""QUANTITY"" AS ""QUANTITY"", ""source"".""TOTAL"" + 1 AS ""Total_2"" FROM (SELECT ""source"".""ID"" AS ""ID"", ""source"".""USER_ID"" AS ""USER_ID"", ""source"".""PRODUCT_ID"" AS ""PRODUCT_ID"", ""source"".""SUBTOTAL"" AS ""SUBTOTAL"", ""source"".""TAX"" AS ""TAX"", ""source"".""TOTAL"" AS ""TOTAL"", ""source"".""DISCOUNT"" AS ""DISCOUNT"", ""source"".""CREATED_AT"" AS ""CREATED_AT"", ""source"".""QUANTITY"" AS ""QUANTITY"", ""source"".""Total_2"" AS ""Total_2"" FROM (SELECT ""PUBLIC"".""ORDERS"".""ID"" AS ""ID"", ""PUBLIC"".""ORDERS"".""USER_ID"" AS ""USER_ID"", ""PUBLIC"".""ORDERS"".""PRODUCT_ID"" AS ""PRODUCT_ID"", ""PUBLIC"".""ORDERS"".""SUBTOTAL"" AS ""SUBTOTAL"", ""PUBLIC"".""ORDERS"".""TAX"" AS ""TAX"", ""PUBLIC"".""ORDERS"".""TOTAL"" AS ""TOTAL"", ""PUBLIC"".""ORDERS"".""DISCOUNT"" AS ""DISCOUNT"", ""PUBLIC"".""ORDERS"".""CREATED_AT"" AS ""CREATED_AT"", ""PUBLIC"".""ORDERS"".""QUANTITY"" AS ""QUANTITY"", ""PUBLIC"".""ORDERS"".""TOTAL"" + 1 AS ""Total_2"" FROM ""PUBLIC"".""ORDERS"") AS ""source"") AS ""source"") AS ""source"" LIMIT 2000 [42122-214]\r\n```\r\n\r\n</p>\r\n</details> \r\n\r\n\r\n<details><summary>Stacktrace</summary>\r\n<p>\r\n\r\n```\r\n[\r\n  ""org.h2.message.DbException.getJdbcSQLException(DbException.java:502)"",\r\n  ""org.h2.message.DbException.getJdbcSQLException(DbException.java:477)"",\r\n  ""org.h2.message.DbException.get(DbException.java:223)"",\r\n  ""org.h2.message.DbException.get(DbException.java:199)"",\r\n  ""org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)"",\r\n  ""org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)"",\r\n  ""org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)"",\r\n  ""org.h2.expression.Alias.optimize(Alias.java:52)"",\r\n  ""org.h2.command.query.Select.prepareExpressions(Select.java:1170)"",\r\n  ""org.h2.command.query.Query.prepare(Query.java:218)"",\r\n  ""org.h2.command.Parser.prepareCommand(Parser.java:575)"",\r\n  ""org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)"",\r\n  ""org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)"",\r\n  ""org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)"",\r\n  ""org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)"",\r\n  ""org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)"",\r\n  ""com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:75)"",\r\n  ""--> driver.sql_jdbc.execute$eval101803$fn__101804.invoke(execute.clj:559)"",\r\n  ""driver.sql_jdbc.execute$execute_statement_or_prepared_statement_BANG_.invokeStatic(execute.clj:567)"",\r\n  ""driver.sql_jdbc.execute$execute_statement_or_prepared_statement_BANG_.invoke(execute.clj:564)"",\r\n  ""driver.sql_jdbc.execute$execute_reducible_query$fn__101902$fn__101903.invoke(execute.clj:704)"",\r\n  ""driver.sql_jdbc.execute$execute_reducible_query$fn__101902.invoke(execute.clj:703)"",\r\n  ""driver.h2$eval104694$fn__104696$fn__104698.invoke(h2.clj:535)"",\r\n  ""driver.sql_jdbc.execute$fn__101614$_AMPERSAND_f__101615.invoke(execute.clj:334)"",\r\n  ""driver.sql_jdbc.execute$fn__101614$fn__101618.invoke(execute.clj:317)"",\r\n  ""driver.h2$eval104694$fn__104696.invoke(h2.clj:526)"",\r\n  ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:697)"",\r\n  ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:683)"",\r\n  ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:694)"",\r\n  ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:683)"",\r\n  ""driver.sql_jdbc$eval104197$fn__104198.invoke(sql_jdbc.clj:78)"",\r\n  ""driver.h2$eval104452$fn__104453.invoke(h2.clj:272)"",\r\n  ""query_processor.pipeline$_STAR_execute_STAR_.invokeStatic(pipeline.clj:47)"",\r\n  ""query_processor.pipeline$_STAR_execute_STAR_.invoke(pipeline.clj:34)"",\r\n  ""query_processor.pipeline$_STAR_run_STAR_.invokeStatic(pipeline.clj:88)"",\r\n  ""query_processor.pipeline$_STAR_run_STAR_.invoke(pipeline.clj:81)"",\r\n  ""query_processor.execute$run.invokeStatic(execute.clj:45)"",\r\n  ""query_processor.execute$run.invoke(execute.clj:39)"",\r\n  ""query_processor.execute$add_native_form_to_result_metadata$fn__90574.invoke(execute.clj:21)"",\r\n  ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___90563.invoke(cache.clj:242)"",\r\n  ""query_processor.middleware.permissions$check_query_permissions$fn__89493.invoke(permissions.clj:118)"",\r\n  ""metabase_enterprise.advanced_permissions.query_processor.middleware.permissions$eval140484$check_download_permissions__140485$fn__140486.invoke(permissions.clj:90)"",\r\n  ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__85393.invoke(enterprise.clj:51)"",\r\n  ""metabase_enterprise.sandbox.query_processor.middleware.column_level_perms_check$eval140527$maybe_apply_column_level_perms_check__140528$fn__140529.invoke(column_level_perms_check.clj:38)"",\r\n  ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__85403.invoke(enterprise.clj:64)"",\r\n  ""query_processor.execute$fn__90602$_AMPERSAND_f__90603$fn__90604.invoke(execute.clj:74)"",\r\n  ""query_processor.setup$fn__90134$_AMPERSAND_f__90135.invoke(setup.clj:204)"",\r\n  ""query_processor.setup$fn__90134$fn__90139.invoke(setup.clj:195)"",\r\n  ""query_processor.execute$fn__90602$_AMPERSAND_f__90603.invoke(execute.clj:73)"",\r\n  ""query_processor.execute$fn__90602$fn__90607.invoke(execute.clj:64)"",\r\n  ""query_processor$process_query_STAR__STAR_.invokeStatic(query_processor.clj:47)"",\r\n  ""query_processor$process_query_STAR__STAR_.invoke(query_processor.clj:43)"",\r\n  ""metabase_enterprise.audit_app.query_processor.middleware.handle_audit_queries$eval140413$handle_audit_app_internal_queries__140414$fn__140416.invoke(handle_audit_queries.clj:144)"",\r\n  ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__85431.invoke(enterprise.clj:103)"",\r\n  ""query_processor.middleware.process_userland_query$fn__90924$_AMPERSAND_f__90925$_AMPERSAND_f__90926.invoke(process_userland_query.clj:165)"",\r\n  ""query_processor.middleware.process_userland_query$fn__90924$_AMPERSAND_f__90925$fn__90932.invoke(process_userland_query.clj:155)"",\r\n  ""query_processor.middleware.catch_exceptions$fn__90696$_AMPERSAND_f__90697$_AMPERSAND_f__90698.invoke(catch_exceptions.clj:128)"",\r\n  ""query_processor.middleware.catch_exceptions$fn__90696$_AMPERSAND_f__90697$fn__90709.invoke(catch_exceptions.clj:118)"",\r\n  ""query_processor$fn__91563$_AMPERSAND_f__91564$fn__91565.invoke(query_processor.clj:78)"",\r\n  ""query_processor.setup$fn__90126$_AMPERSAND_f__90127$fn__90128.invoke(setup.clj:168)"",\r\n  ""query_processor.setup$fn__90116$_AMPERSAND_f__90117$fn__90118.invoke(setup.clj:160)"",\r\n  ""query_processor.setup$fn__90106$_AMPERSAND_f__90107$fn__90108$fn__90109.invoke(setup.clj:145)"",\r\n  ""driver$do_with_driver.invokeStatic(driver.clj:97)"",\r\n  ""driver$do_with_driver.invoke(driver.clj:92)"",\r\n  ""query_processor.setup$fn__90106$_AMPERSAND_f__90107$fn__90108.invoke(setup.clj:144)"",\r\n  ""query_processor.setup$fn__90094$_AMPERSAND_f__90095$fn__90096$fn__90099.invoke(setup.clj:131)"",\r\n  ""query_processor.store$fn__74850$_AMPERSAND_f__74851.invoke(store.clj:170)"",\r\n  ""query_processor.store$fn__74850$fn__74854.invoke(store.clj:150)"",\r\n  ""query_processor.store$fn__74850$_AMPERSAND_f__74851.invoke(store.clj:159)"",\r\n  ""query_processor.store$fn__74850$fn__74854.invoke(store.clj:150)"",\r\n  ""query_processor.setup$fn__90094$_AMPERSAND_f__90095$fn__90096.invoke(setup.clj:130)"",\r\n  ""query_processor.setup$fn__90076$_AMPERSAND_f__90077$_AMPERSAND_f__90078.invoke(setup.clj:108)"",\r\n  ""query_processor.setup$fn__90076$_AMPERSAND_f__90077$fn__90081.invoke(setup.clj:102)"",\r\n  ""query_processor.setup$fn__90134$_AMPERSAND_f__90135.invoke(setup.clj:211)"",\r\n  ""query_processor.setup$fn__90134$fn__90139.invoke(setup.clj:195)"",\r\n  ""query_processor$fn__91563$_AMPERSAND_f__91564.invoke(query_processor.clj:76)"",\r\n  ""query_processor$fn__91563$fn__91569.invoke(query_processor.clj:69)"",\r\n  ""api.dataset$fn__114622$_AMPERSAND_f__114625$fn__114629.invoke(dataset.clj:79)"",\r\n  ""query_processor.streaming$_streaming_response$fn__93053$fn__93054$fn__93055.invoke(streaming.clj:171)"",\r\n  ""query_processor.streaming$_streaming_response$fn__93053$fn__93054.invoke(streaming.clj:170)"",\r\n  ""query_processor.streaming$do_with_streaming_rff.invokeStatic(streaming.clj:161)"",\r\n  ""query_processor.streaming$do_with_streaming_rff.invoke(streaming.clj:148)"",\r\n  ""query_processor.streaming$_streaming_response$fn__93053.invoke(streaming.clj:167)"",\r\n  ""async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)"",\r\n  ""async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)"",\r\n  ""async.streaming_response$do_f_async$task__44821.invoke(streaming_response.clj:88)""\r\n]\r\n```\r\n\r\n</p>\r\n</details>', 'created_at': datetime.datetime(2024, 4, 1, 13, 54, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 2150939666, 'issue_id': 2153889567, 'author': 'nemanjaglumac', 'body': '@metabase-bot backport release-x.49.x', 'created_at': datetime.datetime(2024, 6, 5, 20, 49, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 2150941208, 'issue_id': 2153889567, 'author': 'github-actions[bot]', 'body': '@nemanjaglumac something went wrong while creating a backport [[Logs]](https://github.com/metabase/metabase/actions/runs/9391040881)', 'created_at': datetime.datetime(2024, 6, 5, 20, 50, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2153184992, 'issue_id': 2153889567, 'author': 'nemanjaglumac', 'body': ""I have to reopen this issue, unfortunately.\r\nIt's fixed in `master` and in the `release-x.50.x`, but it still fails in the `release-x.49.x`. To be sure, I ran it against the newest `0.49.14` uberjar and was able to reproduce."", 'created_at': datetime.datetime(2024, 6, 6, 18, 50, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 2154936450, 'issue_id': 2153889567, 'author': 'NevRA', 'body': '@nemanjaglumac can you bisect fix?', 'created_at': datetime.datetime(2024, 6, 7, 14, 14, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2182494258, 'issue_id': 2153889567, 'author': 'NevRA', 'body': '@nemanjaglumac can you try to bisect it?', 'created_at': datetime.datetime(2024, 6, 21, 10, 38, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 2186328123, 'issue_id': 2153889567, 'author': 'nemanjaglumac', 'body': 'git bisect points to the https://github.com/metabase/metabase/pull/42302 as the fix.\r\nThe commit in `master` is b67ca77bdb2158f2fc0c4e068d558234e1a31422.', 'created_at': datetime.datetime(2024, 6, 24, 11, 15, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 2194428388, 'issue_id': 2153889567, 'author': 'kamilmielnik', 'body': '@nemanjaglumac can we close this?\r\nWe have 2 repros:\r\n- https://github.com/metabase/metabase/blob/2473fa2f8be9ae2087b78b831713ae6a1c56a984/e2e/test/scenarios/models/reproductions.cy.spec.ts#L259\r\n- https://github.com/metabase/metabase/blob/2473fa2f8be9ae2087b78b831713ae6a1c56a984/e2e/test/scenarios/models/reproductions.cy.spec.ts#L312', 'created_at': datetime.datetime(2024, 6, 27, 11, 23, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 2194465890, 'issue_id': 2153889567, 'author': 'nemanjaglumac', 'body': ""@kamilmielnik we can't because the fix needs to go to 49. More context here: https://metaboat.slack.com/archives/C0645JP1W81/p1718967260211349"", 'created_at': datetime.datetime(2024, 6, 27, 11, 46, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 2236591657, 'issue_id': 2153889567, 'author': 'perivamsi', 'body': 'This is fixed in master, will repro in 50 and we can close this', 'created_at': datetime.datetime(2024, 7, 18, 13, 53, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 2237792959, 'issue_id': 2153889567, 'author': 'perivamsi', 'body': 'Not able to repro on master or on 50. Closing this issue.', 'created_at': datetime.datetime(2024, 7, 19, 0, 2, 33, tzinfo=datetime.timezone.utc)}]","perivamsi (Issue Creator) on (2024-02-26 11:05:25 UTC): This cannot be reproduced on stats/49-RC1 because we detect name collision during custom column naming and block that silently (will create a separate issue for that).

NevRA on (2024-03-01 19:01:32 UTC): @perivamsi, is it a blocker for the release?

kamilmielnik on (2024-03-04 07:30:48 UTC): Confirmed. So it's not a release blocker for 0.49.


It works like that since refactoring that part of GUI editor to MLv2: #36455 (which was targeted for v49 altogether).
I'm not sure if it makes sense to cherry-pick just these related changes - they could bring in some MLv2 bugs that we addressed holistically for v49 (e.g. #36464, #36459, #36168, #36167, #36120).


:pray:

perivamsi (Issue Creator) on (2024-03-04 11:43:44 UTC): Opened a new issue for the silent error https://github.com/metabase/metabase/issues/39508

uladzimirdev on (2024-04-01 13:54:32 UTC): I'm still able to reproduce the issue on master and 6655faa047 and on 0.49.2. 

Nothing specific is sent to BE from FE, so I'd double-check on BE side how the case with the same name of custom columns is handled.

Steps to reproduce:

- create a model with a custom column (e.g. `Orders` -> `[Total]` + 1 and name `Total`, name is `Orders_1`).
- create another model form a model from step 1 (`Orders_1`) with a custom column with the same name and formula.
- click preview button -> see the error

<img width=""1438"" alt=""image"" src=""https://github.com/metabase/metabase/assets/125459446/9b27d374-c6ed-4684-b913-1528c0807ac1"">


<details><summary>Error</summary>
<p>

```
Column ""source.Total_3"" not found; SQL statement:
SELECT ""source"".""ID"" AS ""ID"", ""source"".""USER_ID"" AS ""USER_ID"", ""source"".""PRODUCT_ID"" AS ""PRODUCT_ID"", ""source"".""SUBTOTAL"" AS ""SUBTOTAL"", ""source"".""TAX"" AS ""TAX"", ""source"".""TOTAL"" AS ""TOTAL"", ""source"".""DISCOUNT"" AS ""DISCOUNT"", ""source"".""CREATED_AT"" AS ""CREATED_AT"", ""source"".""QUANTITY"" AS ""QUANTITY"", ""source"".""Total_2"" AS ""Total_2"", ""source"".""Total_3"" AS ""Total_2_2"" FROM (SELECT ""source"".""ID"" AS ""ID"", ""source"".""USER_ID"" AS ""USER_ID"", ""source"".""PRODUCT_ID"" AS ""PRODUCT_ID"", ""source"".""SUBTOTAL"" AS ""SUBTOTAL"", ""source"".""TAX"" AS ""TAX"", ""source"".""TOTAL"" AS ""TOTAL"", ""source"".""DISCOUNT"" AS ""DISCOUNT"", ""source"".""CREATED_AT"" AS ""CREATED_AT"", ""source"".""QUANTITY"" AS ""QUANTITY"", ""source"".""TOTAL"" + 1 AS ""Total_2"" FROM (SELECT ""source"".""ID"" AS ""ID"", ""source"".""USER_ID"" AS ""USER_ID"", ""source"".""PRODUCT_ID"" AS ""PRODUCT_ID"", ""source"".""SUBTOTAL"" AS ""SUBTOTAL"", ""source"".""TAX"" AS ""TAX"", ""source"".""TOTAL"" AS ""TOTAL"", ""source"".""DISCOUNT"" AS ""DISCOUNT"", ""source"".""CREATED_AT"" AS ""CREATED_AT"", ""source"".""QUANTITY"" AS ""QUANTITY"", ""source"".""Total_2"" AS ""Total_2"" FROM (SELECT ""PUBLIC"".""ORDERS"".""ID"" AS ""ID"", ""PUBLIC"".""ORDERS"".""USER_ID"" AS ""USER_ID"", ""PUBLIC"".""ORDERS"".""PRODUCT_ID"" AS ""PRODUCT_ID"", ""PUBLIC"".""ORDERS"".""SUBTOTAL"" AS ""SUBTOTAL"", ""PUBLIC"".""ORDERS"".""TAX"" AS ""TAX"", ""PUBLIC"".""ORDERS"".""TOTAL"" AS ""TOTAL"", ""PUBLIC"".""ORDERS"".""DISCOUNT"" AS ""DISCOUNT"", ""PUBLIC"".""ORDERS"".""CREATED_AT"" AS ""CREATED_AT"", ""PUBLIC"".""ORDERS"".""QUANTITY"" AS ""QUANTITY"", ""PUBLIC"".""ORDERS"".""TOTAL"" + 1 AS ""Total_2"" FROM ""PUBLIC"".""ORDERS"") AS ""source"") AS ""source"") AS ""source"" LIMIT 2000 [42122-214]
```

</p>
</details> 


<details><summary>Stacktrace</summary>
<p>

```
[
  ""org.h2.message.DbException.getJdbcSQLException(DbException.java:502)"",
  ""org.h2.message.DbException.getJdbcSQLException(DbException.java:477)"",
  ""org.h2.message.DbException.get(DbException.java:223)"",
  ""org.h2.message.DbException.get(DbException.java:199)"",
  ""org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)"",
  ""org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)"",
  ""org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)"",
  ""org.h2.expression.Alias.optimize(Alias.java:52)"",
  ""org.h2.command.query.Select.prepareExpressions(Select.java:1170)"",
  ""org.h2.command.query.Query.prepare(Query.java:218)"",
  ""org.h2.command.Parser.prepareCommand(Parser.java:575)"",
  ""org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)"",
  ""org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)"",
  ""org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)"",
  ""org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)"",
  ""org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)"",
  ""com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:75)"",
  ""--> driver.sql_jdbc.execute$eval101803$fn__101804.invoke(execute.clj:559)"",
  ""driver.sql_jdbc.execute$execute_statement_or_prepared_statement_BANG_.invokeStatic(execute.clj:567)"",
  ""driver.sql_jdbc.execute$execute_statement_or_prepared_statement_BANG_.invoke(execute.clj:564)"",
  ""driver.sql_jdbc.execute$execute_reducible_query$fn__101902$fn__101903.invoke(execute.clj:704)"",
  ""driver.sql_jdbc.execute$execute_reducible_query$fn__101902.invoke(execute.clj:703)"",
  ""driver.h2$eval104694$fn__104696$fn__104698.invoke(h2.clj:535)"",
  ""driver.sql_jdbc.execute$fn__101614$_AMPERSAND_f__101615.invoke(execute.clj:334)"",
  ""driver.sql_jdbc.execute$fn__101614$fn__101618.invoke(execute.clj:317)"",
  ""driver.h2$eval104694$fn__104696.invoke(h2.clj:526)"",
  ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:697)"",
  ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:683)"",
  ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:694)"",
  ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:683)"",
  ""driver.sql_jdbc$eval104197$fn__104198.invoke(sql_jdbc.clj:78)"",
  ""driver.h2$eval104452$fn__104453.invoke(h2.clj:272)"",
  ""query_processor.pipeline$_STAR_execute_STAR_.invokeStatic(pipeline.clj:47)"",
  ""query_processor.pipeline$_STAR_execute_STAR_.invoke(pipeline.clj:34)"",
  ""query_processor.pipeline$_STAR_run_STAR_.invokeStatic(pipeline.clj:88)"",
  ""query_processor.pipeline$_STAR_run_STAR_.invoke(pipeline.clj:81)"",
  ""query_processor.execute$run.invokeStatic(execute.clj:45)"",
  ""query_processor.execute$run.invoke(execute.clj:39)"",
  ""query_processor.execute$add_native_form_to_result_metadata$fn__90574.invoke(execute.clj:21)"",
  ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___90563.invoke(cache.clj:242)"",
  ""query_processor.middleware.permissions$check_query_permissions$fn__89493.invoke(permissions.clj:118)"",
  ""metabase_enterprise.advanced_permissions.query_processor.middleware.permissions$eval140484$check_download_permissions__140485$fn__140486.invoke(permissions.clj:90)"",
  ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__85393.invoke(enterprise.clj:51)"",
  ""metabase_enterprise.sandbox.query_processor.middleware.column_level_perms_check$eval140527$maybe_apply_column_level_perms_check__140528$fn__140529.invoke(column_level_perms_check.clj:38)"",
  ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__85403.invoke(enterprise.clj:64)"",
  ""query_processor.execute$fn__90602$_AMPERSAND_f__90603$fn__90604.invoke(execute.clj:74)"",
  ""query_processor.setup$fn__90134$_AMPERSAND_f__90135.invoke(setup.clj:204)"",
  ""query_processor.setup$fn__90134$fn__90139.invoke(setup.clj:195)"",
  ""query_processor.execute$fn__90602$_AMPERSAND_f__90603.invoke(execute.clj:73)"",
  ""query_processor.execute$fn__90602$fn__90607.invoke(execute.clj:64)"",
  ""query_processor$process_query_STAR__STAR_.invokeStatic(query_processor.clj:47)"",
  ""query_processor$process_query_STAR__STAR_.invoke(query_processor.clj:43)"",
  ""metabase_enterprise.audit_app.query_processor.middleware.handle_audit_queries$eval140413$handle_audit_app_internal_queries__140414$fn__140416.invoke(handle_audit_queries.clj:144)"",
  ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__85431.invoke(enterprise.clj:103)"",
  ""query_processor.middleware.process_userland_query$fn__90924$_AMPERSAND_f__90925$_AMPERSAND_f__90926.invoke(process_userland_query.clj:165)"",
  ""query_processor.middleware.process_userland_query$fn__90924$_AMPERSAND_f__90925$fn__90932.invoke(process_userland_query.clj:155)"",
  ""query_processor.middleware.catch_exceptions$fn__90696$_AMPERSAND_f__90697$_AMPERSAND_f__90698.invoke(catch_exceptions.clj:128)"",
  ""query_processor.middleware.catch_exceptions$fn__90696$_AMPERSAND_f__90697$fn__90709.invoke(catch_exceptions.clj:118)"",
  ""query_processor$fn__91563$_AMPERSAND_f__91564$fn__91565.invoke(query_processor.clj:78)"",
  ""query_processor.setup$fn__90126$_AMPERSAND_f__90127$fn__90128.invoke(setup.clj:168)"",
  ""query_processor.setup$fn__90116$_AMPERSAND_f__90117$fn__90118.invoke(setup.clj:160)"",
  ""query_processor.setup$fn__90106$_AMPERSAND_f__90107$fn__90108$fn__90109.invoke(setup.clj:145)"",
  ""driver$do_with_driver.invokeStatic(driver.clj:97)"",
  ""driver$do_with_driver.invoke(driver.clj:92)"",
  ""query_processor.setup$fn__90106$_AMPERSAND_f__90107$fn__90108.invoke(setup.clj:144)"",
  ""query_processor.setup$fn__90094$_AMPERSAND_f__90095$fn__90096$fn__90099.invoke(setup.clj:131)"",
  ""query_processor.store$fn__74850$_AMPERSAND_f__74851.invoke(store.clj:170)"",
  ""query_processor.store$fn__74850$fn__74854.invoke(store.clj:150)"",
  ""query_processor.store$fn__74850$_AMPERSAND_f__74851.invoke(store.clj:159)"",
  ""query_processor.store$fn__74850$fn__74854.invoke(store.clj:150)"",
  ""query_processor.setup$fn__90094$_AMPERSAND_f__90095$fn__90096.invoke(setup.clj:130)"",
  ""query_processor.setup$fn__90076$_AMPERSAND_f__90077$_AMPERSAND_f__90078.invoke(setup.clj:108)"",
  ""query_processor.setup$fn__90076$_AMPERSAND_f__90077$fn__90081.invoke(setup.clj:102)"",
  ""query_processor.setup$fn__90134$_AMPERSAND_f__90135.invoke(setup.clj:211)"",
  ""query_processor.setup$fn__90134$fn__90139.invoke(setup.clj:195)"",
  ""query_processor$fn__91563$_AMPERSAND_f__91564.invoke(query_processor.clj:76)"",
  ""query_processor$fn__91563$fn__91569.invoke(query_processor.clj:69)"",
  ""api.dataset$fn__114622$_AMPERSAND_f__114625$fn__114629.invoke(dataset.clj:79)"",
  ""query_processor.streaming$_streaming_response$fn__93053$fn__93054$fn__93055.invoke(streaming.clj:171)"",
  ""query_processor.streaming$_streaming_response$fn__93053$fn__93054.invoke(streaming.clj:170)"",
  ""query_processor.streaming$do_with_streaming_rff.invokeStatic(streaming.clj:161)"",
  ""query_processor.streaming$do_with_streaming_rff.invoke(streaming.clj:148)"",
  ""query_processor.streaming$_streaming_response$fn__93053.invoke(streaming.clj:167)"",
  ""async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)"",
  ""async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)"",
  ""async.streaming_response$do_f_async$task__44821.invoke(streaming_response.clj:88)""
]
```

</p>
</details>

nemanjaglumac on (2024-06-05 20:49:39 UTC): @metabase-bot backport release-x.49.x

github-actions[bot] on (2024-06-05 20:50:45 UTC): @nemanjaglumac something went wrong while creating a backport [[Logs]](https://github.com/metabase/metabase/actions/runs/9391040881)

nemanjaglumac on (2024-06-06 18:50:42 UTC): I have to reopen this issue, unfortunately.
It's fixed in `master` and in the `release-x.50.x`, but it still fails in the `release-x.49.x`. To be sure, I ran it against the newest `0.49.14` uberjar and was able to reproduce.

NevRA on (2024-06-07 14:14:09 UTC): @nemanjaglumac can you bisect fix?

NevRA on (2024-06-21 10:38:08 UTC): @nemanjaglumac can you try to bisect it?

nemanjaglumac on (2024-06-24 11:15:35 UTC): git bisect points to the https://github.com/metabase/metabase/pull/42302 as the fix.
The commit in `master` is b67ca77bdb2158f2fc0c4e068d558234e1a31422.

kamilmielnik on (2024-06-27 11:23:30 UTC): @nemanjaglumac can we close this?
We have 2 repros:
- https://github.com/metabase/metabase/blob/2473fa2f8be9ae2087b78b831713ae6a1c56a984/e2e/test/scenarios/models/reproductions.cy.spec.ts#L259
- https://github.com/metabase/metabase/blob/2473fa2f8be9ae2087b78b831713ae6a1c56a984/e2e/test/scenarios/models/reproductions.cy.spec.ts#L312

nemanjaglumac on (2024-06-27 11:46:27 UTC): @kamilmielnik we can't because the fix needs to go to 49. More context here: https://metaboat.slack.com/archives/C0645JP1W81/p1718967260211349

perivamsi (Issue Creator) on (2024-07-18 13:53:44 UTC): This is fixed in master, will repro in 50 and we can close this

perivamsi (Issue Creator) on (2024-07-19 00:02:33 UTC): Not able to repro on master or on 50. Closing this issue.

"
2153869827,issue,closed,completed,[BE] Add extract column drill,,ranquild,2024-02-26 10:55:08+00:00,['ranquild'],2024-05-30 12:21:43+00:00,2024-05-30 12:21:43+00:00,https://github.com/metabase/metabase/issues/39149,[],[],
2153750643,issue,open,,"Horizontal Bar Chart always sum ""Other"" label","### Describe the bug

When you have a Horizontal Bar Chart which is taking Average of some group the ""Other"" section ends up summing them up instead of averaging.

So if I’m looking at averages I would expect “Other” to do the same.


### To Reproduce

1. Go to New Question -> Orders -> Average of Tax - Group by Created_at: Month -> Horizontal Bar Chart

2. Notice how the ""Other"" Value ends up adding everything making the chart obsolete if I am looking at Averages:

<img width=""1503"" alt=""image"" src=""https://github.com/metabase/metabase/assets/110378427/2b71f174-fa8f-464c-b5bc-869a476e65dc"">



### Expected behavior

If I’m looking at averages I would expect “Other” to do the same.

### Logs

None that are relevant

### Information about your Metabase installation

```JSON
1.48.6 and master
```


### Severity

Minor but makes the chart useless and you have to end up using Vertical Bar Charts

### Additional context

_No response_",Tony-metabase,2024-02-26 10:02:00+00:00,[],2025-02-04 20:31:30+00:00,,https://github.com/metabase/metabase/issues/39146,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Correctness', ''), ('.Frontend', ''), ('Visualization/Charts', 'Line, area, bar, combo, and scatter charts.'), ('.Reproduced', 'Issues reproduced in test (usually Cypress)'), ('Visualization/Charts/Row', ''), ('.Team/DashViz', 'Dashboard and Viz team')]","[{'comment_id': 2120613309, 'issue_id': 2153750643, 'author': 'cdeweyx', 'body': 'Upgrading to P2 since this feels close to a correctness issue. Recently came up in relation to https://github.com/metabase/metabase/issues/41986 cc: @EmmadUsmani maybe it makes sense to tackle this when we pick that back up', 'created_at': datetime.datetime(2024, 5, 20, 14, 47, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2261547491, 'issue_id': 2153750643, 'author': 'EmmadUsmani', 'body': ""Tried implementing this, but it wasn't easy. To do this on the frontend you would need to derive the aggregation function from the `card` object, but as far as I'm aware there's no way to do that in the frontend alone, since aggregations are handled in clojure metabase lib code. Someone with metabase lib experience would be better suited to tackle this issue, so I'm unassigning myself for now."", 'created_at': datetime.datetime(2024, 7, 31, 22, 12, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2426808984, 'issue_id': 2153750643, 'author': 'ranquild', 'body': ""I don't think it's possible to come with sane results for every possible aggregation expression in the query. Maybe the viz can be adjusted somehow so that we don't need to solve this issue at all."", 'created_at': datetime.datetime(2024, 10, 21, 14, 13, 20, tzinfo=datetime.timezone.utc)}]","cdeweyx on (2024-05-20 14:47:19 UTC): Upgrading to P2 since this feels close to a correctness issue. Recently came up in relation to https://github.com/metabase/metabase/issues/41986 cc: @EmmadUsmani maybe it makes sense to tackle this when we pick that back up

EmmadUsmani on (2024-07-31 22:12:59 UTC): Tried implementing this, but it wasn't easy. To do this on the frontend you would need to derive the aggregation function from the `card` object, but as far as I'm aware there's no way to do that in the frontend alone, since aggregations are handled in clojure metabase lib code. Someone with metabase lib experience would be better suited to tackle this issue, so I'm unassigning myself for now.

ranquild on (2024-10-21 14:13:20 UTC): I don't think it's possible to come with sane results for every possible aggregation expression in the query. Maybe the viz can be adjusted somehow so that we don't need to solve this issue at all.

"
2153000428,issue,closed,completed,Question alert email says the question goal is null,"### Describe the bug

[Slack convo](https://metaboat.slack.com/archives/C052LBPDAF3/p1708797880061789)

When a line chart question has a goal and there is an alert configured for it, the goal value in email is `null`:
<img width=""509"" alt=""Screenshot 2024-02-25 at 8 49 40 PM"" src=""https://github.com/metabase/metabase/assets/14301985/f761302a-476d-4ae8-bc39-e5b20ad33427"">


### To Reproduce

1. New Question -> Orders -> Group by Created At by Month
2. Add goal line with value 1 so that it will trigger the alert
3. Set up an alert that is triggered by reachig the goal
4. In the alert email the goal value is `null`


### Expected behavior

_No response_

### Logs

_No response_

### Information about your Metabase installation

```JSON
—
```


### Severity

Cosmetic bug

### Additional context

_No response_",alxnddr,2024-02-25 23:53:16+00:00,[],2025-01-06 22:30:25+00:00,2025-01-06 22:29:56+00:00,https://github.com/metabase/metabase/issues/39143,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Reporting/Alerts', ''), ('.Backend', ''), ('.Team/DashViz', 'Dashboard and Viz team')]","[{'comment_id': 2515796395, 'issue_id': 2153000428, 'author': 'tsplude', 'body': 'Hey @alxnddr - having trouble reproducing this issue as described, wondering if the representation of the alert email has changed since this was created? I reproduced via the steps described, and also was manually triggering my saved goal line alert with [`send-pulse!`](https://github.com/metabase/metabase/blob/703638cd10b275bf011bdffc81c99be2e01e12b5/src/metabase/pulse/send.clj#L111)\n\n<details>\n<summary>Alert email screenshot</summary>\n<img width=""626"" alt=""Image"" src=""https://github.com/user-attachments/assets/06cba3b4-d8e6-4522-bab4-7f2d063e2233"" />\n\n</details>', 'created_at': datetime.datetime(2024, 12, 3, 23, 26, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 2574039458, 'issue_id': 2153000428, 'author': 'tsplude', 'body': 'Closing as fixed, unable to reproduce', 'created_at': datetime.datetime(2025, 1, 6, 22, 30, 24, tzinfo=datetime.timezone.utc)}]","tsplude on (2024-12-03 23:26:21 UTC): Hey @alxnddr - having trouble reproducing this issue as described, wondering if the representation of the alert email has changed since this was created? I reproduced via the steps described, and also was manually triggering my saved goal line alert with [`send-pulse!`](https://github.com/metabase/metabase/blob/703638cd10b275bf011bdffc81c99be2e01e12b5/src/metabase/pulse/send.clj#L111)

<details>
<summary>Alert email screenshot</summary>
<img width=""626"" alt=""Image"" src=""https://github.com/user-attachments/assets/06cba3b4-d8e6-4522-bab4-7f2d063e2233"" />

</details>

tsplude on (2025-01-06 22:30:24 UTC): Closing as fixed, unable to reproduce

"
2152308058,issue,open,,Add an option to show values from table as percentage of the total and change functionality to change the word Total to something else,"**Is your feature request related to a problem? Please describe.**
[Add an option to show values from table as percentage of the total](https://github.com/metabase/metabase/issues/2120)

**Describe the solution you'd like**

![meta ](https://github.com/metabase/metabase/assets/125581538/9035615e-3e18-4f73-94ca-76abbf00fded)

![image](https://github.com/metabase/metabase/assets/125581538/558798bf-c38b-4d8a-8365-2c2f7798dc75)

can their be a custom field to change ""Total"" to something else such as total orders or something
and if possible need an option to either display the percentage or the query value

thanks

**Describe alternatives you've considered**
some kind of field for ""Total"" , and an on/off button ""percentage"" or  the query value

**How important is this feature to you?**
 the word total is too general , i have two cards side by side representing two opposite things , the word total becomes misleading   
and most of the time clients ask a word with ""Total""


",MeharG811,2024-02-24 13:19:33+00:00,[],2025-02-04 20:30:39+00:00,,https://github.com/metabase/metabase/issues/39142,"[('Type:New Feature', ''), ('.Needs Triage', '')]","[{'comment_id': 2567821649, 'issue_id': 2152308058, 'author': 'brunobergher', 'body': '@MeharG811, are you asking for the ability to define a column to use as the value for ""Total"" in tooltips, and for the percentage calculations shown to come off of that?\n\nIf yes, mid sharing an example where the total is _not_ the sum of the values in the plotted columns?', 'created_at': datetime.datetime(2025, 1, 2, 14, 2, 3, tzinfo=datetime.timezone.utc)}]","brunobergher on (2025-01-02 14:02:03 UTC): @MeharG811, are you asking for the ability to define a column to use as the value for ""Total"" in tooltips, and for the percentage calculations shown to come off of that?

If yes, mid sharing an example where the total is _not_ the sum of the values in the plotted columns?

"
2151919274,issue,closed,completed,DashboardPicker,"- [x] dashboard picker component
- [x] Add question to dashboard
- [x] Dashboard as homepage
- [x] allow on the fly dashboard creation
- [x] add unit tests
- [ ] update unit tests
- [ ] update e2e tests",iethree,2024-02-23 22:49:35+00:00,['iethree'],2024-05-08 23:39:13+00:00,2024-05-08 23:39:13+00:00,https://github.com/metabase/metabase/issues/39140,[],[],
2151900794,issue,closed,completed,"Model Caching stuck in ""pending"" state not cleared out by next scheduled refresh","### Describe the bug

Models scheduled to cache may error for various reasons including but not limited to:
- [Caching process interrupted by SIGTERM] (https://github.com/metabase/metabase/issues/30360)
- data upon which model based changes (i.e. schema change on underlying data)

When this happens, caching status stuck in ""pending"" status and not fixed by next refresh

### To Reproduce

See https://metabase.zendesk.com/agent/tickets/25109

### Expected behavior

Expect errors in models to be handled allowing process to complete and ""pending"" status to be fixed at next refresh

### Logs

Requesting logs from affected Cloud customers.

### Information about your Metabase installation

```JSON
- Metabase v1.48.6
```


### Severity

P1: significant performance degradation with no indication or simple workaround

### Additional context

From customer experiencing:
- `all of this extra work when the model isn't cached puts a huge amount of additional load on our redshift DB in ways that caching is designed precisely to solve for. With caching we can control exactly when data is cached, so that it runs in sequences and often after hours. Because model caching fails transparently - nothing then stops the queries from running when people try to access the data, which then creates the unpredictable load on our DB. This has resulted in a huge amount of wasted time from everyone affected - operations, devops, and of course practitioners using the data in whatever way it's meant to be used.`

Related to:
- https://github.com/metabase/metabase/issues/30360
- https://github.com/metabase/metabase/issues/29689",likeshumidity,2024-02-23 22:27:06+00:00,['dpsutton'],2024-03-26 11:37:57+00:00,2024-03-11 12:42:24+00:00,https://github.com/metabase/metabase/issues/39138,"[('Type:Bug', 'Product defects'), ('.Needs Triage', ''), ('Querying/Models', 'aka Datasets'), ('Querying/Cache', ''), ('.Escalation', '')]",[],
2151717125,issue,open,,Error message is ugly & unhelpful when rendering a map visualization where the custom geojson has been deleted,"### Describe the bug

If you create a map visualization using custom GeoJSON, and then remove the GeoJSON map in the admin panel, the visualization will just display `unknown map` with no formatting, and no indication of what went wrong or how to fix it.

<img width=""1592"" alt=""Screenshot 2024-02-23 at 2 58 45 PM"" src=""https://github.com/metabase/metabase/assets/32746338/a413a2b6-a08a-4dc5-b577-ead9cdbf1521"">


### To Reproduce

1. Add a custom GeoJSON map in the admin panel
2. Create and save a question using the map
3. Delete the map from the admin panel
4. Reload the question and see the error

### Expected behavior

A more standard error message (with CSS) that directs the user to change the map used, or add a new one

### Logs

_No response_

### Information about your Metabase installation

```JSON
current master
```


### Severity

P3

### Additional context

_No response_",noahmoss,2024-02-23 20:01:17+00:00,[],2024-02-27 04:47:09+00:00,,https://github.com/metabase/metabase/issues/39134,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('.Frontend', ''), ('Visualization/Maps', ''), ('.Team/DashViz', 'Dashboard and Viz team')]","[{'comment_id': 1963329660, 'issue_id': 2151717125, 'author': 'Abhishek-90', 'body': 'I would like to take it up!', 'created_at': datetime.datetime(2024, 2, 26, 5, 9, 53, tzinfo=datetime.timezone.utc)}]","Abhishek-90 on (2024-02-26 05:09:53 UTC): I would like to take it up!

"
2151631120,issue,open,,Set all our connections to READ COMMITED,"**Is your feature request related to a problem? Please describe.**
The actual lifecycle of the query is something like the following
```
2024-02-23 18:50:24.830 UTC [301] LOG:  execute <unnamed>: SET SESSION CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
2024-02-23 18:50:24.831 UTC [301] LOG:  execute <unnamed>: SET ROLE NONE
2024-02-23 18:50:24.831 UTC [301] LOG:  execute <unnamed>: -- Metabase:: userID: 1 queryType: MBQL queryHash: 5e6ba288a9d397756e642017a6a16b3a0da3e5a3408edc45564280c663e61c17
	SELECT ""public"".""accounts"".""id"" AS ""id"", ""public"".""accounts"".""email"" AS ""email"", ""public"".""accounts"".""first_name"" AS ""first_name"", ""public"".""accounts"".""last_name"" AS ""last_name"", ""public"".""accounts"".""plan"" AS ""plan"", ""public"".""accounts"".""source"" AS ""source"", ""public"".""accounts"".""seats"" AS ""seats"", ""public"".""accounts"".""created_at"" AS ""created_at"", ""public"".""accounts"".""trial_ends_at"" AS ""trial_ends_at"", ""public"".""accounts"".""canceled_at"" AS ""canceled_at"", ""public"".""accounts"".""trial_converted"" AS ""trial_converted"", ""public"".""accounts"".""active_subscription"" AS ""active_subscription"", ""public"".""accounts"".""legacy_plan"" AS ""legacy_plan"", ""public"".""accounts"".""latitude"" AS ""latitude"", ""public"".""accounts"".""longitude"" AS ""longitude"", ""public"".""accounts"".""country"" AS ""country"" FROM ""public"".""accounts"" LIMIT 2000
2024-02-23 18:50:24.833 UTC [301] LOG:  execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity != '' OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 16390 AS oid , 1 AS attnum UNION ALL SELECT 16390, 2 UNION ALL SELECT 16390, 3 UNION ALL SELECT 16390, 4 UNION ALL SELECT 16390, 5 UNION ALL SELECT 16390, 6 UNION ALL SELECT 16390, 7 UNION ALL SELECT 16390, 8 UNION ALL SELECT 16390, 9 UNION ALL SELECT 16390, 10 UNION ALL SELECT 16390, 11 UNION ALL SELECT 16390, 12 UNION ALL SELECT 16390, 13 UNION ALL SELECT 16390, 14 UNION ALL SELECT 16390, 15 UNION ALL SELECT 16390, 16) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum) 
2024-02-23 18:50:24.894 UTC [301] LOG:  execute <unnamed>: SET SESSION CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL READ COMMITTED
```

- we first set the connection to read uncommited data
- we then do the query
- we do a health check of the connection by selecting the fields that were just pooled
- we set at the end the connection to read commited data

This can lead to us reading dirty data, and possibly giving wrong results
https://www.postgresql.org/docs/current/transaction-iso.html
https://github.com/metabase/metabase/blob/769ace4988c4356398e43f3808f00055b1d018d0/src/metabase/driver/sql_jdbc/execute.clj#L240

**Describe the solution you'd like**
Always read commited, and if possible set this up once when making the connection to the DB

**Describe alternatives you've considered**
NA

**How important is this feature to you?**
just found this while investigating some issue with an external partner

**Additional context**
NA
",paoliniluis,2024-02-23 18:57:07+00:00,[],2025-02-04 20:30:41+00:00,,https://github.com/metabase/metabase/issues/39130,"[('Database/', ''), ('Querying/Processor', ''), ('Type:New Feature', ''), ('.Backend', ''), ('.Team/Querying', '')]","[{'comment_id': 2204435780, 'issue_id': 2151631120, 'author': 'camsaul', 'body': ""I'm not sure how much of a difference this actually makes or not anyway since we're not running DW queries inside a transaction"", 'created_at': datetime.datetime(2024, 7, 2, 21, 11, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 2407371856, 'issue_id': 2151631120, 'author': 'OrkhanAlikhanov', 'body': ""I've ran into an issue (#48612) due to this behavior. And there seem to be no way to change it unfortunately #13254"", 'created_at': datetime.datetime(2024, 10, 11, 13, 3, 8, tzinfo=datetime.timezone.utc)}]","camsaul on (2024-07-02 21:11:45 UTC): I'm not sure how much of a difference this actually makes or not anyway since we're not running DW queries inside a transaction

OrkhanAlikhanov on (2024-10-11 13:03:08 UTC): I've ran into an issue (#48612) due to this behavior. And there seem to be no way to change it unfortunately #13254

"
2151620615,issue,closed,completed,Throw better error messages in trend charts,"Discussion: https://metaboat.slack.com/archives/C064QMXEV9N/p1708360957209439
PR: https://github.com/metabase/metabase/pull/39212",JesseSDevaney,2024-02-23 18:48:51+00:00,['JesseSDevaney'],2024-02-29 17:18:20+00:00,2024-02-29 17:18:20+00:00,https://github.com/metabase/metabase/issues/39129,"[('Visualization/', ''), ('Visualization/Static', 'Subscriptions/pulse generated image'), ('.Team/DashViz', 'Dashboard and Viz team')]",[],
2151417006,issue,closed,completed,Identify global classes needed for SDK and migrate them to be locally scoped (frontend/src/metabase/css).,"Classes used in current simple version of QueryVisualization:

```
Button
CardVisualization
cellData
circular
cursor-pointer
e12a6fu73
e19wb1qy0
e7rj91b1
e7rj91b2
e7rj91b4
emiw9oj1
emiw9oj2
ewypzhr0
eyw0xx60
flex
flex-basis-none
flex-column
flex-full
full-height
full-width
hover--visibility
hover-parent
Icon
Icon-expand
Icon-refresh
justify-end
layout-centered
link
Loading
Loading--hidden
p1
pointer-events-none
px3
py2
react-draggable
ReactVirtualized__Grid
ReactVirtualized__Grid__innerScrollContainer
relative
RunButton
RunButton--compact
RunButton--hidden
scroll-hide-all
shadowed
spread
stacking-context
Table-FK
Table-ID
TableInteractive
TableInteractive--noHover
TableInteractive--ready
TableInteractive-cellWrapper
TableInteractive-cellWrapper--firstColumn
TableInteractive-detailButton
TableInteractive-emptyCell
TableInteractive-gutter
TableInteractive-header
TableInteractive-headerCellData
text-dark
Visualization
z1
z2
```",deniskaber,2024-02-23 16:27:36+00:00,['deniskaber'],2024-04-02 17:50:03+00:00,2024-04-02 17:49:51+00:00,https://github.com/metabase/metabase/issues/39123,[],[],
2151380906,issue,closed,completed,Add the timestamp to the filename in the subscription attachment,"**Is your feature request related to a problem? Please describe.**
We should make all exports have the same naming convention: question_name_timestamp.format. Right now normal exports have this, while the attachments on the subscriptions do not 
 
**Describe the solution you'd like**
Add the timestamp to the subscription attachments

**Describe alternatives you've considered**
None

**How important is this feature to you?**
Requested by a lead

**Additional context**
NA
",paoliniluis,2024-02-23 16:05:46+00:00,['adam-james-v'],2024-03-06 16:03:15+00:00,2024-03-06 04:42:44+00:00,https://github.com/metabase/metabase/issues/39120,"[('Reporting/Pulses', 'Now called Subscriptions'), ('Type:New Feature', ''), ('Reporting/Export', ''), ('.Team/DashViz', 'Dashboard and Viz team'), ('good first issue', 'A starter issue that is good for someone new to the codebase or is a new contributor')]","[{'comment_id': 1969840971, 'issue_id': 2151380906, 'author': 'petrenkorf', 'body': ""I'm looking for a first issue to contribute. @paoliniluis do you have more context on this?"", 'created_at': datetime.datetime(2024, 2, 28, 20, 19, 21, tzinfo=datetime.timezone.utc)}]","petrenkorf on (2024-02-28 20:19:21 UTC): I'm looking for a first issue to contribute. @paoliniluis do you have more context on this?

"
2151278367,issue,closed,completed,[Epic] Embedding SDK PoC,"**Links**
- product doc: https://www.notion.so/metabase/Exploring-different-designs-for-an-SDK-f3028f25d3a446d1afeba4207a031311
- eng doc: https://www.notion.so/metabase/WIP-Embedding-SDK-8103306366be4f0786b489ad2324235c
- feature branch: `embedding-sdk-static-dashboard`
- issue links: _related issues if any_

This task and branch were used to create [Embedding SDK PoC](https://www.notion.so/metabase/Embedding-SDK-Roadmap-02d1fba72171455bb3496d7d996cd302?pvs=4#15b51d467a754839ad00806eb6f13368) and investigate issues, create a full implementation plan and further steps.",deniskaber,2024-02-23 15:06:03+00:00,['deniskaber'],2024-03-18 14:27:04+00:00,2024-03-18 14:27:04+00:00,https://github.com/metabase/metabase/issues/39115,"[('.Epic', 'Feature Implementation or Project')]",[],
2151263741,issue,closed,completed,Add info hover card on data reference in SQL query builder,For #38394 we want to add info icons to the data references in the native query editor.,romeovs,2024-02-23 14:58:19+00:00,['romeovs'],2024-02-29 10:15:35+00:00,2024-02-29 10:15:31+00:00,https://github.com/metabase/metabase/issues/39114,"[('.Team/Querying', '')]","[{'comment_id': 1970819401, 'issue_id': 2151263741, 'author': 'romeovs', 'body': 'Closed by #39144', 'created_at': datetime.datetime(2024, 2, 29, 10, 15, 31, tzinfo=datetime.timezone.utc)}]","romeovs (Issue Creator) on (2024-02-29 10:15:31 UTC): Closed by #39144

"
2151251108,issue,closed,completed,"Use LLMs for autocompletion of Question, Dashboard Titles and Descriptions",Creating the issue for https://github.com/metabase/metabase/pull/38298,paoliniluis,2024-02-23 14:51:18+00:00,[],2024-02-23 14:58:46+00:00,2024-02-23 14:58:46+00:00,https://github.com/metabase/metabase/issues/39112,"[('Reporting/Dashboards', ''), ('Type:New Feature', ''), ('Organization/Saved Questions', '')]",[],
2150901851,issue,closed,completed,Preview results of intermediate stages are wrong in query builder,"### Describe the bug

[For this query](https://stats.metabase.com/question/15906-monthly-active-accounts/notebook), the final result looks correct but the previews for each of the intermediate stages looks wrong.

<img width=""1438"" alt=""Screenshot 2024-02-23 at 6 30 47 AM"" src=""https://github.com/metabase/metabase/assets/127636/f1ea7c94-7de3-419c-a911-18b7228aa51f"">


### To Reproduce

1. Go to https://stats.metabase.com/question/15906-monthly-active-accounts/
2. Edit the query
3. Click on preview for any of the intermediate stages
4. They results are wrong

### Expected behavior

_No response_

### Logs

_No response_

### Information about your Metabase installation

```JSON
Stats
```


### Severity

??

### Additional context

_No response_",perivamsi,2024-02-23 11:31:59+00:00,['ranquild'],2024-02-23 14:54:28+00:00,2024-02-23 14:54:28+00:00,https://github.com/metabase/metabase/issues/39102,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('.Frontend', ''), ('Querying/Notebook', 'Items specific to the Custom/Notebook query builder')]",[],
2150864481,issue,open,,Boolean fields in basic / custom actions stop being sliders,"### Describe the bug

I created a basic create action with one field being boolean and therefore being a slider. 
![image](https://github.com/metabase/metabase/assets/2411066/4a2d3699-4504-4453-acdc-952a5a30f86b)

After I have interacted with the action parameters (hid a field)
![image](https://github.com/metabase/metabase/assets/2411066/309eb87f-3985-4daa-bb65-29ded4e52d28)

The boolean field is not a slider anymore but a text field
![image](https://github.com/metabase/metabase/assets/2411066/8f5d837d-a31f-4a0d-aaa9-0d30306d0e37)

This is also the case for custom actions - boolean fields are not sliders but text fields.

To fix this I have to disable basic actions and create them anew.

### To Reproduce

1. Go to Add action, Create a new action button to create a database entry that has boolean columns
2. Click on ""Edit this action"" 
![image](https://github.com/metabase/metabase/assets/2411066/db405e4e-fba1-495d-8e73-2ae869d2d2ac)
4. Hide a field or something there
5. the boolean will now become a text field

Alternatively:
1. Create a custom action pointing to a database table that has boolean columns
2. none of these are sliders


### Expected behavior

The boolean columns should be sliders when filling in the data

### Logs

_No response_

### Information about your Metabase installation

```JSON
- database: PostgreSQL
- metabse version: 0.48.6
```


### Severity

It's annoying

### Additional context

_No response_",zufanka,2024-02-23 11:07:52+00:00,[],2025-02-06 10:21:24+00:00,,https://github.com/metabase/metabase/issues/39101,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('.Backend', ''), ('Querying/Actions', ''), ('.Team/Workflows', 'aka BEC')]","[{'comment_id': 2443801874, 'issue_id': 2150864481, 'author': 'romeovs', 'body': ""This is a backend issue. The `/api/action/:id` endpoint somehow lowercases the parameter types (ie. `type/Boolean` to `type/boolean`) when the field is updated (using `PUT /api/action/:id`).\n\nThe frontend is sending the correctly cased types, and the default types are correct -- that's why it only happens _after_ editing and saving an action. This means that the lowercasing must be happening somewhere on the backend."", 'created_at': datetime.datetime(2024, 10, 29, 10, 15, 37, tzinfo=datetime.timezone.utc)}]","romeovs on (2024-10-29 10:15:37 UTC): This is a backend issue. The `/api/action/:id` endpoint somehow lowercases the parameter types (ie. `type/Boolean` to `type/boolean`) when the field is updated (using `PUT /api/action/:id`).

The frontend is sending the correctly cased types, and the default types are correct -- that's why it only happens _after_ editing and saving an action. This means that the lowercasing must be happening somewhere on the backend.

"
2150694453,issue,closed,completed,Duplicate column name error when exploring results of native query with join,"### Describe the bug


https://github.com/metabase/metabase/assets/6830683/c35e8123-337c-4b86-be19-2742a76ad758



### To Reproduce

1. Create a new native question
2. Use sample database
3. Use this SQL: `select * from orders o join products p on o.product_id = p.id;`
4. Preview it - it works
5. Save it as a new question
6. Click ""Explore results""

POST `/api/dataset` gives the following error:

```
Duplicate column name ""ID""; SQL statement:
-- Metabase:: userID: 1 queryType: MBQL queryHash: 56c77cd504578108ac83f1b5fa3f7c8bd4cb0753a50657cb376e26608bb07ead
SELECT ""source"".""ID"" AS ""ID"", ""source"".""USER_ID"" AS ""USER_ID"", ""source"".""PRODUCT_ID"" AS ""PRODUCT_ID"", ""source"".""SUBTOTAL"" AS ""SUBTOTAL"", ""source"".""TAX"" AS ""TAX"", ""source"".""TOTAL"" AS ""TOTAL"", ""source"".""DISCOUNT"" AS ""DISCOUNT"", ""source"".""CREATED_AT"" AS ""CREATED_AT"", ""source"".""QUANTITY"" AS ""QUANTITY"", ""source"".""ID_2"" AS ""ID_2"", ""source"".""EAN"" AS ""EAN"", ""source"".""TITLE"" AS ""TITLE"", ""source"".""CATEGORY"" AS ""CATEGORY"", ""source"".""VENDOR"" AS ""VENDOR"", ""source"".""PRICE"" AS ""PRICE"", ""source"".""RATING"" AS ""RATING"", ""source"".""CREATED_AT_2"" AS ""CREATED_AT_2"" FROM (select * from orders o join products p on o.product_id = p.id) AS ""source"" LIMIT 2000 [42121-214]
```

Payload sent to this endpoint:
```JSON
{
    ""database"": 1,
    ""query"": {
        ""source-table"": ""card__3""
    },
    ""type"": ""query"",
    ""parameters"": []
}
```

### Information about your Metabase installation

master, b98bca4
Also reproducible in 0.47.0 & 0.48.0

### Severity

P2
",kamilmielnik,2024-02-23 09:25:02+00:00,['snoe'],2024-08-28 02:12:20+00:00,2024-03-15 17:45:13+00:00,https://github.com/metabase/metabase/issues/39098,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Querying/Processor', ''), ('.Backend', ''), ('.Team/Querying', '')]",[],
2150026567,issue,closed,completed,Multi-question cards filter data incorrectly in email / Slack dashboard subscriptions ,"### Describe the bug

When a card has multiple questions added filters set in the dashboard subscription will only filter the first series of the card.

### To Reproduce

1. Create a dashboard
2. Add a question
3. Add another question to the first card
4. Set up a dashboard filter and wire it to both questions of the first card
5. Set up an email or Slack subscription for the dashboard, set a filter value, and send a test email
6. (!) Only one of the series will be filtered

Dashboard filter with unfiltered data:
<img width=""1003"" alt=""image"" src=""https://github.com/metabase/metabase/assets/11080638/08186da9-e2fb-4df6-897e-a693963539da"">

Output of email subscription when data is filtered (should only return for 1 month for both series)
<img width=""586"" alt=""image"" src=""https://github.com/metabase/metabase/assets/11080638/4fb57091-1980-4ca0-88a9-bde926da602c"">


### Expected behavior

Similarly as it works on a dashboard, the filter should be applied to each series of the card

### Logs

_No response_

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""en-GB"",
    ""platform"": ""MacIntel"",
    ""userAgent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.22+7"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.22"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.22+7"",
    ""os.name"": ""Linux"",
    ""os.version"": ""5.10.209-198.812.amzn2.x86_64"",
    ""user.language"": ""en"",
    ""user.timezone"": ""GMT""
  },
  ""metabase-info"": {
    ""databases"": [
      ""snowflake"",
      ""bigquery-cloud-sdk"",
      ""postgres"",
      ""h2""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""postgres"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""PostgreSQL"",
        ""version"": ""14.10""
      },
      ""jdbc-driver"": {
        ""name"": ""PostgreSQL JDBC Driver"",
        ""version"": ""42.6.0""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-02-06"",
      ""tag"": ""v1.48.5"",
      ""hash"": ""dab12cf""
    },
    ""settings"": {
      ""report-timezone"": ""America/Los_Angeles""
    }
  }
}
```


### Severity

P1 (correctness)

### Additional context

_No response_",zbodi74,2024-02-22 22:10:57+00:00,['adam-james-v'],2024-06-06 17:13:26+00:00,2024-06-06 16:58:59+00:00,https://github.com/metabase/metabase/issues/39083,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('Reporting/Pulses', 'Now called Subscriptions'), ('.Correctness', ''), ('.Team/DashViz', 'Dashboard and Viz team')]",[],
2150001184,issue,closed,completed,Grouping by and summarizing on a custom column fails,"### Describe the bug

When I click on ""Anonymized People"" in this [dashboard](https://stats.metabase.com/dashboard/2268-metrics-v2-dashboard), I go to [this page](https://stats.metabase.com/question#eyJuYW1lIjoiQW5vbnltaXplZCBQZW9wbGUiLCJkZXNjcmlwdGlvbiI6bnVsbCwiZGF0YXNldF9xdWVyeSI6eyJkYXRhYmFzZSI6MSwicXVlcnkiOnsiYWdncmVnYXRpb24iOltbInN1bSIsWyJmaWVsZCIsImNvdW50Iix7ImJhc2UtdHlwZSI6InR5cGUvSW50ZWdlciJ9XV1dLCJzb3VyY2UtcXVlcnkiOnsiYWdncmVnYXRpb24iOltbImNvdW50Il1dLCJicmVha291dCI6W1siZXhwcmVzc2lvbiIsIkJpcnRoIE1vbnRoIix7ImJhc2UtdHlwZSI6InR5cGUvSW50ZWdlciJ9XV0sImV4cHJlc3Npb25zIjp7IkJpcnRoIE1vbnRoIjpbImdldC1tb250aCIsWyJmaWVsZCIsMTcseyJiYXNlLXR5cGUiOiJ0eXBlL0RhdGUifV1dfSwic291cmNlLXRhYmxlIjo0fX0sInR5cGUiOiJxdWVyeSJ9LCJkaXNwbGF5Ijoic2NhbGFyIiwiZGlzcGxheUlzTG9ja2VkIjp0cnVlLCJ2aXN1YWxpemF0aW9uX3NldHRpbmdzIjp7fSwib3JpZ2luYWxfY2FyZF9pZCI6MTU5MTF9) which errors out. But the [question itself ](https://stats.metabase.com/question/15911-anonymized-people)works

### To Reproduce

Open [this question](https://stats.metabase.com/question/15911-anonymized-people) and go to query editor and click on preview at the last stage, it fails 


### Expected behavior

_No response_

### Logs

{
    ""database_id"": 1,
    ""started_at"": ""2024-02-22T21:48:29.638241Z"",
    ""via"": [
        {
            ""status"": ""failed"",
            ""class"": ""class clojure.lang.ExceptionInfo"",
            ""error"": ""Error converting query to pMBQL: null"",
            ""stacktrace"": [
                ""--> query_processor.middleware.annotate$mlv2_query$fn__63935.invoke(annotate.clj:329)"",
                ""query_processor.store$cached_fn.invokeStatic(store.clj:79)"",
                ""query_processor.store$cached_fn.invoke(store.clj:69)"",
                ""query_processor.middleware.annotate$mlv2_query.invokeStatic(annotate.clj:321)"",
                ""query_processor.middleware.annotate$mlv2_query.invoke(annotate.clj:320)"",
                ""query_processor.middleware.annotate$aggregation_name.invokeStatic(annotate.clj:367)"",
                ""query_processor.middleware.annotate$aggregation_name.invoke(annotate.clj:356)"",
                ""query_processor.middleware.pre_alias_aggregations$ag_name.invokeStatic(pre_alias_aggregations.clj:8)"",
                ""query_processor.middleware.pre_alias_aggregations$ag_name.invoke(pre_alias_aggregations.clj:7)"",
                ""mbql.util$pre_alias_aggregations$replace_30861__30862$fn__30874.invoke(util.cljc:629)"",
                ""mbql.util$pre_alias_aggregations$replace_30861__30862.invoke(util.cljc:629)"",
                ""mbql.util.match.impl$replace_in_collection.invokeStatic(impl.cljc:48)"",
                ""mbql.util.match.impl$replace_in_collection.invoke(impl.cljc:39)"",
                ""mbql.util$pre_alias_aggregations$replace_30861__30862$fn__30874.invoke(util.cljc:629)"",
                ""mbql.util$pre_alias_aggregations$replace_30861__30862.invoke(util.cljc:629)"",
                ""mbql.util$pre_alias_aggregations.invokeStatic(util.cljc:629)"",
                ""mbql.util$pre_alias_aggregations.invoke(util.cljc:613)"",
                ""mbql.util$pre_alias_and_uniquify_aggregations.invokeStatic(util.cljc:645)"",
                ""mbql.util$pre_alias_and_uniquify_aggregations.invoke(util.cljc:639)"",
                ""query_processor.middleware.pre_alias_aggregations$pre_alias_and_uniquify.invokeStatic(pre_alias_aggregations.clj:17)"",
                ""query_processor.middleware.pre_alias_aggregations$pre_alias_and_uniquify.invoke(pre_alias_aggregations.clj:10)"",
                ""query_processor.middleware.pre_alias_aggregations$pre_alias_aggregations_in_inner_query.invokeStatic(pre_alias_aggregations.clj:24)"",
                ""query_processor.middleware.pre_alias_aggregations$pre_alias_aggregations_in_inner_query.invoke(pre_alias_aggregations.clj:19)"",
                ""query_processor.middleware.pre_alias_aggregations$pre_alias_aggregations.invokeStatic(pre_alias_aggregations.clj:37)"",
                ""query_processor.middleware.pre_alias_aggregations$pre_alias_aggregations.invoke(pre_alias_aggregations.clj:32)"",
                ""query_processor.preprocess$preprocess$fn__71735$fn__71736.invoke(preprocess.clj:104)"",
                ""query_processor.preprocess$preprocess$fn__71735.invoke(preprocess.clj:94)"",
                ""query_processor.setup$do_with_qp_setup.invokeStatic(setup.clj:204)"",
                ""query_processor.setup$do_with_qp_setup.invoke(setup.clj:195)"",
                ""query_processor.preprocess$preprocess.invokeStatic(preprocess.clj:93)"",
                ""query_processor.preprocess$preprocess.invoke(preprocess.clj:89)"",
                ""query_processor$process_query_STAR__STAR_.invokeStatic(query_processor.clj:61)"",
                ""query_processor$process_query_STAR__STAR_.invoke(query_processor.clj:60)"",
                ""metabase_enterprise.audit_app.query_processor.middleware.handle_audit_queries$fn__78709$handle_audit_app_internal_queries__78710$fn__78712.invoke(handle_audit_queries.clj:144)"",
                ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__66483.invoke(enterprise.clj:103)"",
                ""query_processor.middleware.process_userland_query$process_userland_query_middleware$fn__72087.invoke(process_userland_query.clj:165)"",
                ""query_processor.middleware.normalize_query$normalize_around_middleware$fn__71158.invoke(normalize_query.clj:55)"",
                ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__72361.invoke(catch_exceptions.clj:170)"",
                ""query_processor$process_query$fn__72413.invoke(query_processor.clj:95)"",
                ""query_processor.setup$do_with_canceled_chan$fn__66618.invoke(setup.clj:168)"",
                ""query_processor.setup$do_with_database_local_settings$fn__66613.invoke(setup.clj:160)"",
                ""query_processor.setup$do_with_driver$fn__66608$fn__66609.invoke(setup.clj:145)"",
                ""driver$do_with_driver.invokeStatic(driver.clj:97)"",
                ""driver$do_with_driver.invoke(driver.clj:92)"",
                ""query_processor.setup$do_with_driver$fn__66608.invoke(setup.clj:144)"",
                ""query_processor.setup$do_with_metadata_provider$fn__66601$fn__66604.invoke(setup.clj:131)"",
                ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:170)"",
                ""query_processor.store$do_with_metadata_provider.invoke(store.clj:151)"",
                ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:159)"",
                ""query_processor.store$do_with_metadata_provider.invoke(store.clj:151)"",
                ""query_processor.setup$do_with_metadata_provider$fn__66601.invoke(setup.clj:130)"",
                ""query_processor.setup$do_with_resolved_database$fn__66595.invoke(setup.clj:108)"",
                ""query_processor.setup$do_with_qp_setup.invokeStatic(setup.clj:211)"",
                ""query_processor.setup$do_with_qp_setup.invoke(setup.clj:195)"",
                ""query_processor$process_query.invokeStatic(query_processor.clj:93)"",
                ""query_processor$process_query.invoke(query_processor.clj:86)"",
                ""api.dataset$run_streaming_query$fn__93526.invoke(dataset.clj:79)"",
                ""query_processor.streaming$_streaming_response$fn__52737$fn__52738$fn__52739.invoke(streaming.clj:171)"",
                ""query_processor.streaming$_streaming_response$fn__52737$fn__52738.invoke(streaming.clj:170)"",
                ""query_processor.streaming$do_with_streaming_rff.invokeStatic(streaming.clj:161)"",
                ""query_processor.streaming$do_with_streaming_rff.invoke(streaming.clj:148)"",
                ""query_processor.streaming$_streaming_response$fn__52737.invoke(streaming.clj:167)"",
                ""async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)"",
                ""async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)"",
                ""async.streaming_response$do_f_async$task__43401.invoke(streaming_response.clj:88)""
            ],
            ""error_type"": ""qp"",
            ""ex-data"": {
                ""inner-query"": {
                    ""aggregation"": [
                        [
                            ""sum"",
                            [
                                ""field"",
                                ""count"",
                                {
                                    ""base-type"": ""type/Integer""
                                }
                            ]
                        ]
                    ],
                    ""limit"": 10,
                    ""source-metadata"": [
                        {
                            ""name"": ""month of birth date"",
                            ""display_name"": ""month of birth date"",
                            ""base_type"": ""type/Float"",
                            ""field_ref"": [
                                ""expression"",
                                ""month of birth date"",
                                {
                                    ""base-type"": ""type/Integer""
                                }
                            ]
                        },
                        {
                            ""name"": ""count"",
                            ""display_name"": ""Count"",
                            ""base_type"": ""type/Integer"",
                            ""semantic_type"": ""type/Quantity"",
                            ""field_ref"": [
                                ""aggregation"",
                                0
                            ]
                        }
                    ],
                    ""source-query"": {
                        ""source-table"": 4,
                        ""expressions"": {
                            ""month of birth date"": [
                                ""temporal-extract"",
                                [
                                    ""field"",
                                    17,
                                    {
                                        ""base-type"": ""type/Date"",
                                        ""temporal-unit"": ""default""
                                    }
                                ],
                                ""month-of-year""
                            ]
                        },
                        ""breakout"": [
                            [
                                ""expression"",
                                ""month of birth date"",
                                {
                                    ""base-type"": ""type/Integer""
                                }
                            ]
                        ],
                        ""aggregation"": [
                            [
                                ""count""
                            ]
                        ],
                        ""order-by"": [
                            [
                                ""asc"",
                                [
                                    ""expression"",
                                    ""month of birth date"",
                                    {
                                        ""base-type"": ""type/Integer""
                                    }
                                ]
                            ]
                        ]
                    }
                },
                ""type"": ""qp""
            }
        },
        {
            ""status"": ""failed"",
            ""class"": ""class clojure.lang.ExceptionInfo"",
            ""error"": ""Error preprocessing query in #'metabase.query-processor.middleware.pre-alias-aggregations/pre-alias-aggregations: Error converting query to pMBQL: null"",
            ""stacktrace"": [
                ""--> query_processor.preprocess$preprocess$fn__71735$fn__71736.invoke(preprocess.clj:109)"",
                ""query_processor.preprocess$preprocess$fn__71735.invoke(preprocess.clj:94)"",
                ""query_processor.setup$do_with_qp_setup.invokeStatic(setup.clj:204)"",
                ""query_processor.setup$do_with_qp_setup.invoke(setup.clj:195)"",
                ""query_processor.preprocess$preprocess.invokeStatic(preprocess.clj:93)"",
                ""query_processor.preprocess$preprocess.invoke(preprocess.clj:89)"",
                ""query_processor$process_query_STAR__STAR_.invokeStatic(query_processor.clj:61)"",
                ""query_processor$process_query_STAR__STAR_.invoke(query_processor.clj:60)"",
                ""metabase_enterprise.audit_app.query_processor.middleware.handle_audit_queries$fn__78709$handle_audit_app_internal_queries__78710$fn__78712.invoke(handle_audit_queries.clj:144)"",
                ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__66483.invoke(enterprise.clj:103)"",
                ""query_processor.middleware.process_userland_query$process_userland_query_middleware$fn__72087.invoke(process_userland_query.clj:165)"",
                ""query_processor.middleware.normalize_query$normalize_around_middleware$fn__71158.invoke(normalize_query.clj:55)"",
                ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__72361.invoke(catch_exceptions.clj:170)"",
                ""query_processor$process_query$fn__72413.invoke(query_processor.clj:95)"",
                ""query_processor.setup$do_with_canceled_chan$fn__66618.invoke(setup.clj:168)"",
                ""query_processor.setup$do_with_database_local_settings$fn__66613.invoke(setup.clj:160)"",
                ""query_processor.setup$do_with_driver$fn__66608$fn__66609.invoke(setup.clj:145)"",
                ""driver$do_with_driver.invokeStatic(driver.clj:97)"",
                ""driver$do_with_driver.invoke(driver.clj:92)"",
                ""query_processor.setup$do_with_driver$fn__66608.invoke(setup.clj:144)"",
                ""query_processor.setup$do_with_metadata_provider$fn__66601$fn__66604.invoke(setup.clj:131)"",
                ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:170)"",
                ""query_processor.store$do_with_metadata_provider.invoke(store.clj:151)"",
                ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:159)"",
                ""query_processor.store$do_with_metadata_provider.invoke(store.clj:151)"",
                ""query_processor.setup$do_with_metadata_provider$fn__66601.invoke(setup.clj:130)"",
                ""query_processor.setup$do_with_resolved_database$fn__66595.invoke(setup.clj:108)"",
                ""query_processor.setup$do_with_qp_setup.invokeStatic(setup.clj:211)"",
                ""query_processor.setup$do_with_qp_setup.invoke(setup.clj:195)"",
                ""query_processor$process_query.invokeStatic(query_processor.clj:93)"",
                ""query_processor$process_query.invoke(query_processor.clj:86)"",
                ""api.dataset$run_streaming_query$fn__93526.invoke(dataset.clj:79)"",
                ""query_processor.streaming$_streaming_response$fn__52737$fn__52738$fn__52739.invoke(streaming.clj:171)"",
                ""query_processor.streaming$_streaming_response$fn__52737$fn__52738.invoke(streaming.clj:170)"",
                ""query_processor.streaming$do_with_streaming_rff.invokeStatic(streaming.clj:161)"",
                ""query_processor.streaming$do_with_streaming_rff.invoke(streaming.clj:148)"",
                ""query_processor.streaming$_streaming_response$fn__52737.invoke(streaming.clj:167)"",
                ""async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)"",
                ""async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)"",
                ""async.streaming_response$do_f_async$task__43401.invoke(streaming_response.clj:88)""
            ],
            ""error_type"": ""qp"",
            ""ex-data"": {
                ""fn"": ""#'metabase.query-processor.middleware.pre-alias-aggregations/pre-alias-aggregations"",
                ""query"": {
                    ""database"": 1,
                    ""type"": ""query"",
                    ""query"": {
                        ""aggregation"": [
                            [
                                ""sum"",
                                [
                                    ""field"",
                                    ""count"",
                                    {
                                        ""base-type"": ""type/Integer""
                                    }
                                ]
                            ]
                        ],
                        ""limit"": 10,
                        ""source-metadata"": [
                            {
                                ""name"": ""month of birth date"",
                                ""display_name"": ""month of birth date"",
                                ""base_type"": ""type/Float"",
                                ""field_ref"": [
                                    ""expression"",
                                    ""month of birth date"",
                                    {
                                        ""base-type"": ""type/Integer""
                                    }
                                ]
                            },
                            {
                                ""name"": ""count"",
                                ""display_name"": ""Count"",
                                ""base_type"": ""type/Integer"",
                                ""semantic_type"": ""type/Quantity"",
                                ""field_ref"": [
                                    ""aggregation"",
                                    0
                                ]
                            }
                        ],
                        ""source-query"": {
                            ""source-table"": 4,
                            ""expressions"": {
                                ""month of birth date"": [
                                    ""temporal-extract"",
                                    [
                                        ""field"",
                                        17,
                                        {
                                            ""base-type"": ""type/Date"",
                                            ""temporal-unit"": ""default""
                                        }
                                    ],
                                    ""month-of-year""
                                ]
                            },
                            ""breakout"": [
                                [
                                    ""expression"",
                                    ""month of birth date"",
                                    {
                                        ""base-type"": ""type/Integer""
                                    }
                                ]
                            ],
                            ""aggregation"": [
                                [
                                    ""count""
                                ]
                            ],
                            ""order-by"": [
                                [
                                    ""asc"",
                                    [
                                        ""expression"",
                                        ""month of birth date"",
                                        {
                                            ""base-type"": ""type/Integer""
                                        }
                                    ]
                                ]
                            ]
                        }
                    },
                    ""middleware"": {
                        ""js-int-to-string?"": true,
                        ""userland-query?"": true,
                        ""add-default-userland-constraints?"": true
                    },
                    ""info"": {
                        ""executed-by"": 366,
                        ""context"": ""ad-hoc"",
                        ""query-hash"": ""0x97800D87""
                    },
                    ""constraints"": {
                        ""max-results"": 10000,
                        ""max-results-bare-rows"": 2000
                    }
                },
                ""type"": ""qp""
            }
        }
    ],
    ""action_id"": null,
    ""error_type"": ""qp"",
    ""json_query"": {
        ""database"": 1,
        ""type"": ""query"",
        ""query"": {
            ""aggregation"": [
                [
                    ""sum"",
                    [
                        ""field"",
                        ""count"",
                        {
                            ""base-type"": ""type/Integer""
                        }
                    ]
                ]
            ],
            ""limit"": 10,
            ""source-query"": {
                ""source-table"": 4,
                ""expressions"": {
                    ""month of birth date"": [
                        ""get-month"",
                        [
                            ""field"",
                            17,
                            {
                                ""base-type"": ""type/Date""
                            }
                        ]
                    ]
                },
                ""breakout"": [
                    [
                        ""expression"",
                        ""month of birth date"",
                        {
                            ""base-type"": ""type/Integer""
                        }
                    ]
                ],
                ""aggregation"": [
                    [
                        ""count""
                    ]
                ]
            }
        },
        ""parameters"": [],
        ""middleware"": {
            ""js-int-to-string?"": true,
            ""userland-query?"": true,
            ""add-default-userland-constraints?"": true
        }
    },
    ""native"": null,
    ""status"": ""failed"",
    ""class"": ""class java.lang.ClassCastException"",
    ""stacktrace"": [
        null
    ],
    ""card_id"": null,
    ""context"": ""ad-hoc"",
    ""error"": ""Error running query"",
    ""row_count"": 0,
    ""running_time"": 0,
    ""preprocessed"": null,
    ""data"": {
        ""rows"": [],
        ""cols"": []
    }
}

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""en-US"",
    ""platform"": ""MacIntel"",
    ""userAgent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"",
    ""vendor"": ""Google Inc.""
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.22+7"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.22"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.22+7"",
    ""os.name"": ""Linux"",
    ""os.version"": ""5.10.209-198.812.amzn2.x86_64"",
    ""user.language"": ""en"",
    ""user.timezone"": ""GMT""
  },
  ""metabase-info"": {
    ""databases"": [
      ""druid"",
      ""postgres"",
      ""bigquery-cloud-sdk"",
      ""redshift"",
      ""mysql"",
      ""mongo"",
      ""h2"",
      ""snowflake""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""postgres"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""PostgreSQL"",
        ""version"": ""14.10""
      },
      ""jdbc-driver"": {
        ""name"": ""PostgreSQL JDBC Driver"",
        ""version"": ""42.7.1""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-02-22"",
      ""tag"": ""vUNKNOWN"",
      ""hash"": ""1eb2078""
    },
    ""settings"": {
      ""report-timezone"": ""US/Pacific""
    }
  }
}
```


### Severity

??

### Additional context

_No response_",perivamsi,2024-02-22 21:51:01+00:00,['snoe'],2024-08-28 02:12:19+00:00,2024-02-26 17:06:30+00:00,https://github.com/metabase/metabase/issues/39081,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('Querying/MBQL', ''), ('.Backend', ''), ('.Team/Querying', '')]",[],
2149946404,issue,closed,completed,Hide the default maps,"**Is your feature request related to a problem? Please describe.**
We should have a way to hide the default maps. The reason is that if you want a map of the world that is different from the default one, you'll end up with 2 versions of the world map, and you won't be able to hide the default one and leave the one you created.

**Describe the solution you'd like**
Hide the default maps. This should be done by an admin

**Describe alternatives you've considered**
None, unless you do a custom build

**How important is this feature to you?**
A customer that has many customers around the world needs to hide default maps

**Additional context**
Related to https://github.com/metabase/metabase/issues/38919",paoliniluis,2024-02-22 21:10:56+00:00,['noahmoss'],2024-02-26 16:01:10+00:00,2024-02-23 20:55:31+00:00,https://github.com/metabase/metabase/issues/39079,"[('Type:New Feature', ''), ('Visualization/Maps', '')]",[],
2149755157,issue,closed,completed,"Remove ""Enable nested queries"" setting in the admin panel and set it to True on all instances","**Context**
When nested queries were introduced (many years ago), we added an option to restrict access to this feature (for performance reasons).
![image](https://github.com/metabase/metabase/assets/32561114/0030d796-d3a3-47ff-8ee9-30348c5f91bc)

Metabase evolved significantly and features in the product expect the use of nested queries (like Models).
Very few users change this setting and disabling nested queries makes the product worse.

- [x] Remove the option from the UI
- [x] Set this to True to all instances
- [x] Keep the env var. Users can disable nested queries using the env var.
- [ ] Fix the 20ish failing e2e tests
- [ ] Mention this in release notes 


",luizarakaki,2024-02-22 19:05:07+00:00,['escherize'],2024-10-08 17:05:01+00:00,2024-07-08 21:05:00+00:00,https://github.com/metabase/metabase/issues/39071,"[('Administration/Settings', ''), ('.Team/AdminWebapp', 'Admin and Webapp team')]","[{'comment_id': 1960401718, 'issue_id': 2149755157, 'author': 'nemanjaglumac', 'body': 'Related: https://github.com/metabase/metabase/issues/28908', 'created_at': datetime.datetime(2024, 2, 22, 22, 11, tzinfo=datetime.timezone.utc)}]","nemanjaglumac on (2024-02-22 22:11:00 UTC): Related: https://github.com/metabase/metabase/issues/28908

"
2149545214,issue,closed,completed,Track required parameter toggling in analytics,https://www.notion.so/metabase/Dashboard-filter-required-9e3702101f3748f38e6ed50a0e4c0e74,oleggromov,2024-02-22 17:17:15+00:00,['oleggromov'],2024-02-27 10:17:32+00:00,2024-02-27 10:17:32+00:00,https://github.com/metabase/metabase/issues/39066,"[('Querying/Parameters & Variables', 'Filter widgets, field filters, variables etc.'), ('.Team/Querying', '')]",[],
2149539368,issue,open,,Prevent removing filters that are embedded,"When there's a parameter on a Dashboard that is used in embedding, we could remove it without even a warning.
**Perhaps**, the right solution is to _prevent_ deletion of parameters that are used in embeddings (in some particular state, such is locked?) but this is subject to discussion with the product.",oleggromov,2024-02-22 17:13:49+00:00,[],2024-07-31 10:54:29+00:00,,https://github.com/metabase/metabase/issues/39065,"[('Querying/Parameters & Variables', 'Filter widgets, field filters, variables etc.'), ('.Team/Querying', '')]","[{'comment_id': 1960035310, 'issue_id': 2149539368, 'author': 'albertoperdomo', 'body': 'Just adding a bit of color.\r\n\r\nRemoving a filter with static embedding :\r\n* filter disabled (default state for filters) -> non-consequential because they are not surfaced in the embed\r\n* editable in embed -> consequential because the filter is removed, but that could be deliberate\r\n* locked in embed -> consequential because\r\n** the moment the filter is removed the embed will break and the app code will need to be updated\r\n** locked filters are used most commonly to isolate customer data, e.g. think filter by customer_id and removing this might result in the dashboard accidentally leaking data\r\n\r\nRemoving a filter with public link: consequential - the filter will be removed, but that could be deliberate', 'created_at': datetime.datetime(2024, 2, 22, 18, 36, 21, tzinfo=datetime.timezone.utc)}]","albertoperdomo on (2024-02-22 18:36:21 UTC): Just adding a bit of color.

Removing a filter with static embedding :
* filter disabled (default state for filters) -> non-consequential because they are not surfaced in the embed
* editable in embed -> consequential because the filter is removed, but that could be deliberate
* locked in embed -> consequential because
** the moment the filter is removed the embed will break and the app code will need to be updated
** locked filters are used most commonly to isolate customer data, e.g. think filter by customer_id and removing this might result in the dashboard accidentally leaking data

Removing a filter with public link: consequential - the filter will be removed, but that could be deliberate

"
2149305269,issue,closed,completed,Custom columns that have same name as existing columns cause failure,"### Describe the bug

Using PostgreSQL 15.1 as the data source,

I attempted the following custom column expression within the notebook editor for a model:  
 `coalesce([approved_change_orders], 0)` named: `approved_change_orders`

This results in the following error:
```
ERROR: column source.approved_change_orders does not exist
  Hint: Perhaps you meant to reference the column ""source.approved_change_orders_2"".
  Position: 740
```

### To Reproduce

1. Create a model using the notebook editor
2. Create a custom column that coalesces over an existing column
3. Name the custom column same as the old column
4. Attempt to run

Note: I did try removing the original column and keeping only the custom column- with varying results... At one point, I got it to work. At another point, I couldn't reproduce that success. Metabase seems to want to keep the original column visually checked in the notebook, even if logically it is unchecked.

![image](https://github.com/metabase/metabase/assets/90083658/6124ff8e-caf6-40b3-a396-d61dbab96010)


### Expected behavior

The query should run without error

### Logs

```
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T07:04:23-08:00 INFO metabase.api.dataset Source query for this query is Card 140
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T07:04:23-08:00 ERROR metabase.query-processor.middleware.catch-exceptions Error processing query: ERROR: column source.approved_change_orders does not exist
  Hint: Perhaps you meant to reference the column ""source.approved_change_orders_2"".
  Position: 740
{:database_id 5,
 :started_at #t ""2024-02-22T15:04:23.487278Z[GMT]"",
 :via
 [{:status :failed,
   :class clojure.lang.ExceptionInfo,
   :error
   ""Error executing query: ERROR: column source.approved_change_orders does not exist\n  Hint: Perhaps you meant to reference the column \""source.approved_change_orders_2\"".\n  Position: 740"",
   :stacktrace
   [""--> driver.sql_jdbc.execute$execute_reducible_query$fn__77840$fn__77841.invoke(execute.clj:698)""
    ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:695)""
    ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""
    ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""
    ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""
    ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""
    ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""
    ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""
    ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
    ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""
    ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
    ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""
    ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""
    ""query_processor.context$executef.invokeStatic(context.clj:60)""
    ""query_processor.context$executef.invoke(context.clj:49)""
    ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""
    ""query_processor.context.default$default_runf.invoke(default.clj:42)""
    ""query_processor.context$runf.invokeStatic(context.clj:46)""
    ""query_processor.context$runf.invoke(context.clj:40)""
    ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""
    ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""
    ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""
    ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""
    ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""
    ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""
    ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""
    ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""
    ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""
    ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:299)""
    ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""
    ""driver$do_with_driver.invokeStatic(driver.clj:94)""
    ""driver$do_with_driver.invoke(driver.clj:89)""
    ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""
    ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""
    ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""
    ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
    ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""
    ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
    ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""
    ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""
    ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""
    ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""
    ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""
    ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""
    ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""
    ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""
    ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""
    ""query_processor.reducible$async_qp$qp_STAR___60713.invoke(reducible.clj:132)""
    ""query_processor.reducible$sync_qp$qp_STAR___60725.doInvoke(reducible.clj:153)""
    ""query_processor$process_userland_query.invokeStatic(query_processor.clj:402)""
    ""query_processor$process_userland_query.doInvoke(query_processor.clj:398)""
    ""query_processor$process_query_and_save_execution_BANG_.invokeStatic(query_processor.clj:416)""
    ""query_processor$process_query_and_save_execution_BANG_.invoke(query_processor.clj:406)""
    ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invokeStatic(query_processor.clj:431)""
    ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invoke(query_processor.clj:421)""
    ""api.dataset$run_query_async$fn__93366.invoke(dataset.clj:79)""
    ""query_processor.streaming$streaming_response_STAR_$fn__51578$fn__51580.invoke(streaming.clj:168)""
    ""query_processor.streaming$streaming_response_STAR_$fn__51578.invoke(streaming.clj:167)""
    ""async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)""
    ""async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)""
    ""async.streaming_response$do_f_async$task__42901.invoke(streaming_response.clj:88)""],
   :error_type :invalid-query,
   :ex-data
   {:driver :postgres,
    :sql
    [""-- Metabase:: userID: 1 queryType: MBQL queryHash: 96b313781f5c9de8504952de479874fc1b45878a12b7f9239be6839bc990c6fe""
     ""SELECT""
     ""  \""source\"".\""id\"" AS \""id\"",""
     ""  \""source\"".\""project_id\"" AS \""project_id\"",""
     ""  \""source\"".\""division_id\"" AS \""division_id\"",""
     ""  \""source\"".\""phase_id\"" AS \""phase_id\"",""
     ""  \""source\"".\""subjob_id\"" AS \""subjob_id\"",""
     ""  \""source\"".\""cost_type_id\"" AS \""cost_type_id\"",""
     ""  \""source\"".\""original_budget\"" AS \""original_budget\"",""
     ""  \""source\"".\""budget_modifications\"" AS \""budget_modifications\"",""
     ""  \""source\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"",""
     ""  \""source\"".\""committed_costs\"" AS \""committed_costs\"",""
     ""  \""source\"".\""cost_to_date\"" AS \""cost_to_date\"",""
     ""  \""source\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"",""
     ""  \""source\"".\""source\"" AS \""source\"",""
     ""  \""source\"".\""last_modified\"" AS \""last_modified\"",""
     ""  \""source\"".\""approved_change_orders\"" AS \""approved_change_orders\""""
     ""FROM""
     ""  (""
     ""    SELECT""
     ""      \""source\"".\""id\"" AS \""id\"",""
     ""      \""source\"".\""project_id\"" AS \""project_id\"",""
     ""      \""source\"".\""division_id\"" AS \""division_id\"",""
     ""      \""source\"".\""phase_id\"" AS \""phase_id\"",""
     ""      \""source\"".\""subjob_id\"" AS \""subjob_id\"",""
     ""      \""source\"".\""cost_type_id\"" AS \""cost_type_id\"",""
     ""      \""source\"".\""original_budget\"" AS \""original_budget\"",""
     ""      \""source\"".\""budget_modifications\"" AS \""budget_modifications\"",""
     ""      \""source\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"",""
     ""      \""source\"".\""committed_costs\"" AS \""committed_costs\"",""
     ""      \""source\"".\""cost_to_date\"" AS \""cost_to_date\"",""
     ""      \""source\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"",""
     ""      \""source\"".\""source\"" AS \""source\"",""
     ""      \""source\"".\""last_modified\"" AS \""last_modified\"",""
     ""      \""source\"".\""approved_change_orders_2\"" AS \""approved_change_orders_2\""""
     ""    FROM""
     ""      (""
     ""        SELECT""
     ""          \""budgets\"".\""wbs_cost\"".\""id\"" AS \""id\"",""
     ""          \""budgets\"".\""wbs_cost\"".\""project_id\"" AS \""project_id\"",""
     ""          \""budgets\"".\""wbs_cost\"".\""division_id\"" AS \""division_id\"",""
     ""          \""budgets\"".\""wbs_cost\"".\""phase_id\"" AS \""phase_id\"",""
     ""          \""budgets\"".\""wbs_cost\"".\""subjob_id\"" AS \""subjob_id\"",""
     ""          \""budgets\"".\""wbs_cost\"".\""cost_type_id\"" AS \""cost_type_id\"",""
     ""          \""budgets\"".\""wbs_cost\"".\""original_budget\"" AS \""original_budget\"",""
     ""          \""budgets\"".\""wbs_cost\"".\""budget_modifications\"" AS \""budget_modifications\"",""
     ""          \""budgets\"".\""wbs_cost\"".\""approved_change_orders\"" AS \""approved_change_orders\"",""
     ""          \""budgets\"".\""wbs_cost\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"",""
     ""          \""budgets\"".\""wbs_cost\"".\""committed_costs\"" AS \""committed_costs\"",""
     ""          \""budgets\"".\""wbs_cost\"".\""cost_to_date\"" AS \""cost_to_date\"",""
     ""          \""budgets\"".\""wbs_cost\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"",""
     ""          \""budgets\"".\""wbs_cost\"".\""source\"" AS \""source\"",""
     ""          \""budgets\"".\""wbs_cost\"".\""last_modified\"" AS \""last_modified\"",""
     ""          COALESCE(\""budgets\"".\""wbs_cost\"".\""approved_change_orders\"", 0) AS \""approved_change_orders_2\"",""
     ""          \""phase - phase_id\"".\""cost_code\"" AS \""phase - phase_id__cost_code\"",""
     ""          \""phase - phase_id\"".\""id\"" AS \""phase - phase_id__id\""""
     ""        FROM""
     ""          \""budgets\"".\""wbs_cost\""""
     ""          LEFT JOIN \""wbs\"".\""phase\"" AS \""phase - phase_id\"" ON \""budgets\"".\""wbs_cost\"".\""phase_id\"" = \""phase - phase_id\"".\""id\""""
     ""        WHERE""
     ""          NOT (\""budgets\"".\""wbs_cost\"".\""source\"" = ?)""
     ""          OR (""
     ""            NOT (\""phase - phase_id\"".\""cost_code\"" = ?)""
     ""            AND NOT (\""phase - phase_id\"".\""cost_code\"" = ?)""
     ""          )""
     ""      ) AS \""source\""""
     ""    ORDER BY""
     ""      \""source\"".\""phase - phase_id__cost_code\"" ASC""
     ""  ) AS \""source\""""
     ""LIMIT""
     ""  2000""],
    :params (""realpage"" ""55-9800"" ""55-9900""),
    :type :invalid-query}}],
 :action_id nil,
 :state ""42703"",
 :error_type :invalid-query,
 :json_query
 {:type ""query"",
  :database 5,
  :query {:source-table ""card__140""},
  :parameters [],
  :middleware {:js-int-to-string? true, :add-default-userland-constraints? true}},
 :native
 {:query
  ""SELECT \""source\"".\""id\"" AS \""id\"", \""source\"".\""project_id\"" AS \""project_id\"", \""source\"".\""division_id\"" AS \""division_id\"", \""source\"".\""phase_id\"" AS \""phase_id\"", \""source\"".\""subjob_id\"" AS \""subjob_id\"", \""source\"".\""cost_type_id\"" AS \""cost_type_id\"", \""source\"".\""original_budget\"" AS \""original_budget\"", \""source\"".\""budget_modifications\"" AS \""budget_modifications\"", \""source\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"", \""source\"".\""committed_costs\"" AS \""committed_costs\"", \""source\"".\""cost_to_date\"" AS \""cost_to_date\"", \""source\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"", \""source\"".\""source\"" AS \""source\"", \""source\"".\""last_modified\"" AS \""last_modified\"", \""source\"".\""approved_change_orders\"" AS \""approved_change_orders\"" FROM (SELECT \""source\"".\""id\"" AS \""id\"", \""source\"".\""project_id\"" AS \""project_id\"", \""source\"".\""division_id\"" AS \""division_id\"", \""source\"".\""phase_id\"" AS \""phase_id\"", \""source\"".\""subjob_id\"" AS \""subjob_id\"", \""source\"".\""cost_type_id\"" AS \""cost_type_id\"", \""source\"".\""original_budget\"" AS \""original_budget\"", \""source\"".\""budget_modifications\"" AS \""budget_modifications\"", \""source\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"", \""source\"".\""committed_costs\"" AS \""committed_costs\"", \""source\"".\""cost_to_date\"" AS \""cost_to_date\"", \""source\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"", \""source\"".\""source\"" AS \""source\"", \""source\"".\""last_modified\"" AS \""last_modified\"", \""source\"".\""approved_change_orders_2\"" AS \""approved_change_orders_2\"" FROM (SELECT \""budgets\"".\""wbs_cost\"".\""id\"" AS \""id\"", \""budgets\"".\""wbs_cost\"".\""project_id\"" AS \""project_id\"", \""budgets\"".\""wbs_cost\"".\""division_id\"" AS \""division_id\"", \""budgets\"".\""wbs_cost\"".\""phase_id\"" AS \""phase_id\"", \""budgets\"".\""wbs_cost\"".\""subjob_id\"" AS \""subjob_id\"", \""budgets\"".\""wbs_cost\"".\""cost_type_id\"" AS \""cost_type_id\"", \""budgets\"".\""wbs_cost\"".\""original_budget\"" AS \""original_budget\"", \""budgets\"".\""wbs_cost\"".\""budget_modifications\"" AS \""budget_modifications\"", \""budgets\"".\""wbs_cost\"".\""approved_change_orders\"" AS \""approved_change_orders\"", \""budgets\"".\""wbs_cost\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"", \""budgets\"".\""wbs_cost\"".\""committed_costs\"" AS \""committed_costs\"", \""budgets\"".\""wbs_cost\"".\""cost_to_date\"" AS \""cost_to_date\"", \""budgets\"".\""wbs_cost\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"", \""budgets\"".\""wbs_cost\"".\""source\"" AS \""source\"", \""budgets\"".\""wbs_cost\"".\""last_modified\"" AS \""last_modified\"", COALESCE(\""budgets\"".\""wbs_cost\"".\""approved_change_orders\"", 0) AS \""approved_change_orders_2\"", \""phase - phase_id\"".\""cost_code\"" AS \""phase - phase_id__cost_code\"", \""phase - phase_id\"".\""id\"" AS \""phase - phase_id__id\"" FROM \""budgets\"".\""wbs_cost\"" LEFT JOIN \""wbs\"".\""phase\"" AS \""phase - phase_id\"" ON \""budgets\"".\""wbs_cost\"".\""phase_id\"" = \""phase - phase_id\"".\""id\"" WHERE NOT (\""budgets\"".\""wbs_cost\"".\""source\"" = ?) OR (NOT (\""phase - phase_id\"".\""cost_code\"" = ?) AND NOT (\""phase - phase_id\"".\""cost_code\"" = ?))) AS \""source\"" ORDER BY \""source\"".\""phase - phase_id__cost_code\"" ASC) AS \""source\"" LIMIT 1048575"",
  :params (""realpage"" ""55-9800"" ""55-9900"")},
 :status :failed,
 :class org.postgresql.util.PSQLException,
 :stacktrace
 [""org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)""
  ""org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)""
  ""org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)""
  ""org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)""
  ""org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)""
  ""org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)""
  ""org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:134)""
  ""com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:1471)""
  ""--> driver.sql_jdbc.execute$fn__77757.invokeStatic(execute.clj:556)""
  ""driver.sql_jdbc.execute$fn__77757.invoke(execute.clj:554)""
  ""driver.sql_jdbc.execute$execute_statement_or_prepared_statement_BANG_.invokeStatic(execute.clj:569)""
  ""driver.sql_jdbc.execute$execute_statement_or_prepared_statement_BANG_.invoke(execute.clj:565)""
  ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840$fn__77841.invoke(execute.clj:696)""
  ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:695)""
  ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""
  ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""
  ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""
  ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""
  ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""
  ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""
  ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
  ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""
  ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
  ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""
  ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""
  ""query_processor.context$executef.invokeStatic(context.clj:60)""
  ""query_processor.context$executef.invoke(context.clj:49)""
  ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""
  ""query_processor.context.default$default_runf.invoke(default.clj:42)""
  ""query_processor.context$runf.invokeStatic(context.clj:46)""
  ""query_processor.context$runf.invoke(context.clj:40)""
  ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""
  ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""
  ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""
  ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""
  ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""
  ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""
  ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""
  ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""
  ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""
  ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:299)""
  ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""
  ""driver$do_with_driver.invokeStatic(driver.clj:94)""
  ""driver$do_with_driver.invoke(driver.clj:89)""
  ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""
  ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""
  ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""
  ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
  ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""
  ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
  ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""
  ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""
  ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""
  ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""
  ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""
  ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""
  ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""
  ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""
  ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""
  ""query_processor.reducible$async_qp$qp_STAR___60713.invoke(reducible.clj:132)""
  ""query_processor.reducible$sync_qp$qp_STAR___60725.doInvoke(reducible.clj:153)""
  ""query_processor$process_userland_query.invokeStatic(query_processor.clj:402)""
  ""query_processor$process_userland_query.doInvoke(query_processor.clj:398)""
  ""query_processor$process_query_and_save_execution_BANG_.invokeStatic(query_processor.clj:416)""
  ""query_processor$process_query_and_save_execution_BANG_.invoke(query_processor.clj:406)""
  ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invokeStatic(query_processor.clj:431)""
  ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invoke(query_processor.clj:421)""
  ""api.dataset$run_query_async$fn__93366.invoke(dataset.clj:79)""
  ""query_processor.streaming$streaming_response_STAR_$fn__51578$fn__51580.invoke(streaming.clj:168)""
  ""query_processor.streaming$streaming_response_STAR_$fn__51578.invoke(streaming.clj:167)""
  ""async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)""
  ""async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)""
  ""async.streaming_response$do_f_async$task__42901.invoke(streaming_response.clj:88)""],
 :card_id 140,
 :context :ad-hoc,
 :error
 ""ERROR: column source.approved_change_orders does not exist\n  Hint: Perhaps you meant to reference the column \""source.approved_change_orders_2\"".\n  Position: 740"",
 :row_count 0,
 :running_time 0,
 :preprocessed
 {:type :query,
  :database 5,
  :query
  {:source-card-id 140,
   :source-metadata
   [{:description nil,
     :semantic_type :type/PK,
     :coercion_strategy nil,
     :name ""id"",
     :settings nil,
     :fk_target_field_id nil,
     :field_ref [:field 5136 {:base-type :type/Integer}],
     :effective_type :type/Integer,
     :id 5136,
     :visibility_type :normal,
     :display_name ""id"",
     :fingerprint nil,
     :base_type :type/Integer}
    {:description nil,
     :semantic_type :type/Category,
     :coercion_strategy nil,
     :name ""project_id"",
     :settings nil,
     :fk_target_field_id nil,
     :field_ref [:field 5139 {:base-type :type/BigInteger}],
     :effective_type :type/BigInteger,
     :id 5139,
     :visibility_type :normal,
     :display_name ""project_id"",
     :fingerprint
     {:global {:distinct-count 28, :nil% 0.0},
      :type
      {:type/Number
       {:min 12.0, :q1 19.52158164046306, :q3 30.000926863170704, :max 46.0, :sd 6.529207780843288, :avg 25.4391}}},
     :base_type :type/BigInteger}
    {:description nil,
     :semantic_type :type/FK,
     :coercion_strategy nil,
     :name ""division_id"",
     :settings nil,
     :fk_target_field_id 4809,
     :field_ref [:field 5148 {:base-type :type/BigInteger}],
     :effective_type :type/BigInteger,
     :id 5148,
     :visibility_type :normal,
     :display_name ""division_id"",
     :fingerprint {:global {:distinct-count 50, :nil% 0.0}},
     :base_type :type/BigInteger}
    {:description nil,
     :semantic_type :type/FK,
     :coercion_strategy nil,
     :name ""phase_id"",
     :settings nil,
     :fk_target_field_id 4816,
     :field_ref [:field 5141 {:base-type :type/BigInteger}],
     :effective_type :type/BigInteger,
     :id 5141,
     :visibility_type :normal,
     :display_name ""phase_id"",
     :fingerprint {:global {:distinct-count 444, :nil% 0.0}},
     :base_type :type/BigInteger}
    {:description nil,
     :semantic_type nil,
     :coercion_strategy nil,
     :name ""subjob_id"",
     :settings nil,
     :fk_target_field_id nil,
     :field_ref [:field 5135 {:base-type :type/BigInteger}],
     :effective_type :type/BigInteger,
     :id 5135,
     :visibility_type :normal,
     :display_name ""subjob_id"",
     :fingerprint
     {:global {:distinct-count 215, :nil% 0.4417},
      :type
      {:type/Number
       {:min 153.0,
        :q1 228.7728093528213,
        :q3 324.8630031964761,
        :max 375.0,
        :sd 56.79493084837947,
        :avg 276.75998567078625}}},
     :base_type :type/BigInteger}
    {:description nil,
     :semantic_type :type/FK,
     :coercion_strategy nil,
     :name ""cost_type_id"",
     :settings nil,
     :fk_target_field_id 4805,
     :field_ref [:field 5146 {:base-type :type/BigInteger}],
     :effective_type :type/BigInteger,
     :id 5146,
     :visibility_type :normal,
     :display_name ""cost_type_id"",
     :fingerprint {:global {:distinct-count 12, :nil% 0.0}},
     :base_type :type/BigInteger}
    {:description nil,
     :semantic_type nil,
     :coercion_strategy nil,
     :name ""original_budget"",
     :settings nil,
     :fk_target_field_id nil,
     :field_ref [:field 5142 {:base-type :type/Float}],
     :effective_type :type/Float,
     :id 5142,
     :visibility_type :normal,
     :display_name ""original_budget"",
     :fingerprint
     {:global {:distinct-count 2927, :nil% 0.0},
      :type
      {:type/Number
       {:min -15000.0,
        :q1 1650.862028593805,
        :q3 42427.612653579316,
        :max 6.1998921E7,
        :sd 1222692.0637818938,
        :avg 98694.22240099999}}},
     :base_type :type/Float}
    {:description nil,
     :semantic_type nil,
     :coercion_strategy nil,
     :name ""budget_modifications"",
     :settings nil,
     :fk_target_field_id nil,
     :field_ref [:field 5143 {:base-type :type/Float}],
     :effective_type :type/Float,
     :id 5143,
     :visibility_type :normal,
     :display_name ""budget_modifications"",
     :fingerprint
     {:global {:distinct-count 5372, :nil% 0.0},
      :type
      {:type/Number
       {:min -1.3961544E7,
        :q1 -46696.048316343105,
        :q3 38079.889821447665,
        :max 7593650.0,
        :sd 388669.6167360365,
        :avg 3251.8723759999975}}},
     :base_type :type/Float}
    {:description nil,
     :semantic_type nil,
     :coercion_strategy nil,
     :name ""pending_budget_changes"",
     :settings nil,
     :fk_target_field_id nil,
     :field_ref [:field 5137 {:base-type :type/Float}],
     :effective_type :type/Float,
     :id 5137,
     :visibility_type :normal,
     :display_name ""pending_budget_changes"",
     :fingerprint
     {:global {:distinct-count 2, :nil% 0.0},
      :type {:type/Number {:min -3102.5, :q1 -909.0115014843832, :q3 0.0, :max 0.0, :sd 31.025, :avg -0.31025}}},
     :base_type :type/Float}
    {:description nil,
     :semantic_type nil,
     :coercion_strategy nil,
     :name ""committed_costs"",
     :settings nil,
     :fk_target_field_id nil,
     :field_ref [:field 5138 {:base-type :type/Float}],
     :effective_type :type/Float,
     :id 5138,
     :visibility_type :normal,
     :display_name ""committed_costs"",
     :fingerprint
     {:global {:distinct-count 3608, :nil% 0.0},
      :type
      {:type/Number
       {:min -29039.42,
        :q1 -3164.494824706897,
        :q3 25252.15706035909,
        :max 4299662.6,
        :sd 195574.55726043574,
        :avg 52424.216188}}},
     :base_type :type/Float}
    {:description nil,
     :semantic_type nil,
     :coercion_strategy nil,
     :name ""cost_to_date"",
     :settings nil,
     :fk_target_field_id nil,
     :field_ref [:field 5147 {:base-type :type/Float}],
     :effective_type :type/Float,
     :id 5147,
     :visibility_type :normal,
     :display_name ""cost_to_date"",
     :fingerprint
     {:global {:distinct-count 5167, :nil% 0.0},
      :type
      {:type/Number
       {:min -73583.93,
        :q1 -9618.972334975959,
        :q3 30335.417426701963,
        :max 5.321365176E7,
        :sd 1068676.5332191263,
        :avg 88005.01605499999}}},
     :base_type :type/Float}
    {:description nil,
     :semantic_type nil,
     :coercion_strategy nil,
     :name ""pending_cost_changes"",
     :settings nil,
     :fk_target_field_id nil,
     :field_ref [:field 5144 {:base-type :type/Float}],
     :effective_type :type/Float,
     :id 5144,
     :visibility_type :normal,
     :display_name ""pending_cost_changes"",
     :fingerprint
     {:global {:distinct-count 15, :nil% 0.0},
      :type
      {:type/Number
       {:min -2546.0,
        :q1 -744.6993419748337,
        :q3 282.1369614765108,
        :max 194237.5,
        :sd 2771.6265922608873,
        :avg 52.010897}}},
     :base_type :type/Float}
    {:description nil,
     :semantic_type :type/Source,
     :coercion_strategy nil,
     :name ""source"",
     :settings nil,
     :fk_target_field_id nil,
     :field_ref [:field 5140 {:base-type :type/Text}],
     :effective_type :type/Text,
     :id 5140,
     :visibility_type :normal,
     :display_name ""source"",
     :fingerprint
     {:global {:distinct-count 2, :nil% 0.0},
      :type
      {:type/Text
       {:percent-json 0.0, :percent-url 0.0, :percent-email 0.0, :percent-state 0.0, :average-length 7.0735}}},
     :base_type :type/Text}
    {:description nil,
     :semantic_type nil,
     :coercion_strategy nil,
     :unit :default,
     :name ""last_modified"",
     :settings nil,
     :fk_target_field_id nil,
     :field_ref [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}],
     :effective_type :type/DateTime,
     :id 5145,
     :visibility_type :normal,
     :display_name ""last_modified"",
     :fingerprint
     {:global {:distinct-count 4890, :nil% 0.0},
      :type {:type/DateTime {:earliest ""2024-01-23T18:43:06.147593Z"", :latest ""2024-02-13T15:31:25.346999Z""}}},
     :base_type :type/DateTime}
    {:display_name ""approved_change_orders"",
     :semantic_type nil,
     :field_ref [:expression ""approved_change_orders""],
     :name ""approved_change_orders"",
     :base_type :type/Float,
     :effective_type :type/Float,
     :coercion_strategy nil,
     :fingerprint
     {:global {:distinct-count 1, :nil% 0.0},
      :type {:type/Number {:min 0.0, :q1 0.0, :q3 0.0, :max 0.0, :sd nil, :avg 0.0}}}}],
   :source-query/dataset? true,
   :fields
   [[:field 5136 {:base-type :type/Integer}]
    [:field 5139 {:base-type :type/BigInteger}]
    [:field 5148 {:base-type :type/BigInteger}]
    [:field 5141 {:base-type :type/BigInteger}]
    [:field 5135 {:base-type :type/BigInteger}]
    [:field 5146 {:base-type :type/BigInteger}]
    [:field 5142 {:base-type :type/Float}]
    [:field 5143 {:base-type :type/Float}]
    [:field 5137 {:base-type :type/Float}]
    [:field 5138 {:base-type :type/Float}]
    [:field 5147 {:base-type :type/Float}]
    [:field 5144 {:base-type :type/Float}]
    [:field 5140 {:base-type :type/Text}]
    [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}]
    [:field ""approved_change_orders"" {:base-type :type/Float}]],
   :source-query
   {:source-table 307,
    :order-by [[:asc [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]]],
    :expressions {""approved_change_orders"" [:coalesce [:field 5134 {:base-type :type/Float}] 0]},
    :fields
    [[:field 5136 {:base-type :type/Integer}]
     [:field 5139 {:base-type :type/BigInteger}]
     [:field 5148 {:base-type :type/BigInteger}]
     [:field 5141 {:base-type :type/BigInteger}]
     [:field 5135 {:base-type :type/BigInteger}]
     [:field 5146 {:base-type :type/BigInteger}]
     [:field 5142 {:base-type :type/Float}]
     [:field 5143 {:base-type :type/Float}]
     [:field 5137 {:base-type :type/Float}]
     [:field 5138 {:base-type :type/Float}]
     [:field 5147 {:base-type :type/Float}]
     [:field 5144 {:base-type :type/Float}]
     [:field 5140 {:base-type :type/Text}]
     [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}]
     [:expression ""approved_change_orders""]],
    :filter
    [:or
     [:not
      [:=
       [:field 5140 {:base-type :type/Text}]
       [:value
        ""realpage""
        {:base_type :type/Text,
         :effective_type :type/Text,
         :coercion_strategy nil,
         :semantic_type :type/Source,
         :database_type ""varchar"",
         :name ""source""}]]]
     [:and
      [:not
       [:=
        [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]
        [:value
         ""55-9800""
         {:base_type :type/Text,
          :effective_type :type/Text,
          :coercion_strategy nil,
          :semantic_type nil,
          :database_type ""bpchar"",
          :name ""cost_code""}]]]
      [:not
       [:=
        [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]
        [:value
         ""55-9900""
         {:base_type :type/Text,
          :effective_type :type/Text,
          :coercion_strategy nil,
          :semantic_type nil,
          :database_type ""bpchar"",
          :name ""cost_code""}]]]]],
    :joins
    [{:alias ""phase - phase_id"",
      :strategy :left-join,
      :condition
      [:=
       [:field 5141 {:base-type :type/BigInteger}]
       [:field 4816 {:base-type :type/Integer, :join-alias ""phase - phase_id""}]],
      :source-table 282}]},
   :limit 1048575,
   :metabase.query-processor.middleware.limit/original-limit nil},
  :middleware {:js-int-to-string? true, :add-default-userland-constraints? true},
  :info
  {:executed-by 1,
   :context :ad-hoc,
   :card-id 140,
   :metadata/dataset-metadata
   [{:semantic_type :type/PK,
     :name ""id"",
     :field_ref [:field 5136 {:base-type :type/Integer}],
     :effective_type :type/Integer,
     :id 5136,
     :visibility_type :normal,
     :display_name ""id"",
     :base_type :type/Integer}
    {:semantic_type :type/Category,
     :name ""project_id"",
     :field_ref [:field 5139 {:base-type :type/BigInteger}],
     :effective_type :type/BigInteger,
     :id 5139,
     :visibility_type :normal,
     :display_name ""project_id"",
     :fingerprint
     {:global {:distinct-count 28, :nil% 0.0},
      :type
      {:type/Number
       {:min 12.0, :q1 19.52158164046306, :q3 30.000926863170704, :max 46.0, :sd 6.529207780843288, :avg 25.4391}}},
     :base_type :type/BigInteger}
    {:semantic_type :type/FK,
     :name ""division_id"",
     :fk_target_field_id 4809,
     :field_ref [:field 5148 {:base-type :type/BigInteger}],
     :effective_type :type/BigInteger,
     :id 5148,
     :visibility_type :normal,
     :display_name ""division_id"",
     :fingerprint {:global {:distinct-count 50, :nil% 0.0}},
     :base_type :type/BigInteger}
    {:semantic_type :type/FK,
     :name ""phase_id"",
     :fk_target_field_id 4816,
     :field_ref [:field 5141 {:base-type :type/BigInteger}],
     :effective_type :type/BigInteger,
     :id 5141,
     :visibility_type :normal,
     :display_name ""phase_id"",
     :fingerprint {:global {:distinct-count 444, :nil% 0.0}},
     :base_type :type/BigInteger}
    {:name ""subjob_id"",
     :field_ref [:field 5135 {:base-type :type/BigInteger}],
     :effective_type :type/BigInteger,
     :id 5135,
     :visibility_type :normal,
     :display_name ""subjob_id"",
     :fingerprint
     {:global {:distinct-count 215, :nil% 0.4417},
      :type
      {:type/Number
       {:min 153.0,
        :q1 228.7728093528213,
        :q3 324.8630031964761,
        :max 375.0,
        :sd 56.79493084837947,
        :avg 276.75998567078625}}},
     :base_type :type/BigInteger}
    {:semantic_type :type/FK,
     :name ""cost_type_id"",
     :fk_target_field_id 4805,
     :field_ref [:field 5146 {:base-type :type/BigInteger}],
     :effective_type :type/BigInteger,
     :id 5146,
     :visibility_type :normal,
     :display_name ""cost_type_id"",
     :fingerprint {:global {:distinct-count 12, :nil% 0.0}},
     :base_type :type/BigInteger}
    {:name ""original_budget"",
     :field_ref [:field 5142 {:base-type :type/Float}],
     :effective_type :type/Float,
     :id 5142,
     :visibility_type :normal,
     :display_name ""original_budget"",
     :fingerprint
     {:global {:distinct-count 2927, :nil% 0.0},
      :type
      {:type/Number
       {:min -15000.0,
        :q1 1650.862028593805,
        :q3 42427.612653579316,
        :max 6.1998921E7,
        :sd 1222692.0637818938,
        :avg 98694.22240099999}}},
     :base_type :type/Float}
    {:name ""budget_modifications"",
     :field_ref [:field 5143 {:base-type :type/Float}],
     :effective_type :type/Float,
     :id 5143,
     :visibility_type :normal,
     :display_name ""budget_modifications"",
     :fingerprint
     {:global {:distinct-count 5372, :nil% 0.0},
      :type
      {:type/Number
       {:min -1.3961544E7,
        :q1 -46696.048316343105,
        :q3 38079.889821447665,
        :max 7593650.0,
        :sd 388669.6167360365,
        :avg 3251.8723759999975}}},
     :base_type :type/Float}
    {:name ""pending_budget_changes"",
     :field_ref [:field 5137 {:base-type :type/Float}],
     :effective_type :type/Float,
     :id 5137,
     :visibility_type :normal,
     :display_name ""pending_budget_changes"",
     :fingerprint
     {:global {:distinct-count 2, :nil% 0.0},
      :type {:type/Number {:min -3102.5, :q1 -909.0115014843832, :q3 0.0, :max 0.0, :sd 31.025, :avg -0.31025}}},
     :base_type :type/Float}
    {:name ""committed_costs"",
     :field_ref [:field 5138 {:base-type :type/Float}],
     :effective_type :type/Float,
     :id 5138,
     :visibility_type :normal,
     :display_name ""committed_costs"",
     :fingerprint
     {:global {:distinct-count 3608, :nil% 0.0},
      :type
      {:type/Number
       {:min -29039.42,
        :q1 -3164.494824706897,
        :q3 25252.15706035909,
        :max 4299662.6,
        :sd 195574.55726043574,
        :avg 52424.216188}}},
     :base_type :type/Float}
    {:name ""cost_to_date"",
     :field_ref [:field 5147 {:base-type :type/Float}],
     :effective_type :type/Float,
     :id 5147,
     :visibility_type :normal,
     :display_name ""cost_to_date"",
     :fingerprint
     {:global {:distinct-count 5167, :nil% 0.0},
      :type
      {:type/Number
       {:min -73583.93,
        :q1 -9618.972334975959,
        :q3 30335.417426701963,
        :max 5.321365176E7,
        :sd 1068676.5332191263,
        :avg 88005.01605499999}}},
     :base_type :type/Float}
    {:name ""pending_cost_changes"",
     :field_ref [:field 5144 {:base-type :type/Float}],
     :effective_type :type/Float,
     :id 5144,
     :visibility_type :normal,
     :display_name ""pending_cost_changes"",
     :fingerprint
     {:global {:distinct-count 15, :nil% 0.0},
      :type
      {:type/Number
       {:min -2546.0,
        :q1 -744.6993419748337,
        :q3 282.1369614765108,
        :max 194237.5,
        :sd 2771.6265922608873,
        :avg 52.010897}}},
     :base_type :type/Float}
    {:semantic_type :type/Source,
     :name ""source"",
     :field_ref [:field 5140 {:base-type :type/Text}],
     :effective_type :type/Text,
     :id 5140,
     :visibility_type :normal,
     :display_name ""source"",
     :fingerprint
     {:global {:distinct-count 2, :nil% 0.0},
      :type
      {:type/Text
       {:percent-json 0.0, :percent-url 0.0, :percent-email 0.0, :percent-state 0.0, :average-length 7.0735}}},
     :base_type :type/Text}
    {:unit :default,
     :name ""last_modified"",
     :field_ref [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}],
     :effective_type :type/DateTime,
     :id 5145,
     :visibility_type :normal,
     :display_name ""last_modified"",
     :fingerprint
     {:global {:distinct-count 4890, :nil% 0.0},
      :type {:type/DateTime {:earliest ""2024-01-23T18:43:06.147593Z"", :latest ""2024-02-13T15:31:25.346999Z""}}},
     :base_type :type/DateTime}
    {:display_name ""approved_change_orders"",
     :field_ref [:expression ""approved_change_orders""],
     :name ""approved_change_orders"",
     :base_type :type/Float,
     :effective_type :type/Float,
     :fingerprint
     {:global {:distinct-count 1, :nil% 0.0},
      :type {:type/Number {:min 0.0, :q1 0.0, :q3 0.0, :max 0.0, :avg 0.0}}}}]}},
 :data {:rows [], :cols []}}
```

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""en-US"",
    ""platform"": ""Win32"",
    ""userAgent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0"",
    ""vendor"": """"
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.22+7"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.22"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.22+7"",
    ""os.name"": ""Linux"",
    ""os.version"": ""6.1.55-75.123.amzn2023.x86_64"",
    ""user.language"": ""en"",
    ""user.timezone"": ""GMT""
  },
  ""metabase-info"": {
    ""databases"": [
      ""sqlserver"",
      ""postgres""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""postgres"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""PostgreSQL"",
        ""version"": ""15.5""
      },
      ""jdbc-driver"": {
        ""name"": ""PostgreSQL JDBC Driver"",
        ""version"": ""42.6.0""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-02-12"",
      ""tag"": ""v0.48.6"",
      ""hash"": ""b8818f9""
    },
    ""settings"": {
      ""report-timezone"": null
    }
  }
}
```


### Severity

low - valid workarounds exist. Just move the work onto the db instead.

### Additional context

_No response_",MrChadMWood,2024-02-22 15:15:21+00:00,['bshepherdson'],2024-08-28 02:12:19+00:00,2024-03-04 14:38:16+00:00,https://github.com/metabase/metabase/issues/39059,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('Querying/MBQL', ''), ('.Backend', ''), ('.Team/Querying', '')]","[{'comment_id': 1961751095, 'issue_id': 2149305269, 'author': 'bshepherdson', 'body': ""I'm not able to reproduce this on any version of Metabase. The custom column's duplicated name is correctly deduped to eg. `DISCOUNT_2` and the query works fine. Looking at this and #39037 together, I think there may be something odd about this model or models.\r\n\r\nCan you demonstrate a repro on our sample database? The `Orders.DISCOUNT` column has nulls, if you want to use `coalesce`; but any custom expression should work equally well."", 'created_at': datetime.datetime(2024, 2, 23, 17, 50, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1965332962, 'issue_id': 2149305269, 'author': 'bshepherdson', 'body': '@perivamsi found a repro for (I think) the same issue.\r\n\r\nHere\'s the SQL:\r\n```sql\r\nSELECT -- Q3 outer                                                                                                            \r\n ""source"".""CREATED_AT"" AS ""CREATED_AT"",                                                                                       \r\n  ""source"".""count"" AS ""count"",                                                                                                \r\n  ""source"".""Count_2"" AS ""Count_2"",                                                                                            \r\n  ""source"".""Count_2"" AS ""Count_2_2""                                                                                           \r\nFROM (                                                                                                                        \r\n  SELECT -- Q3 inner                                                                                                          \r\n    ""source"".""CREATED_AT"" AS ""CREATED_AT"",                                                                                    \r\n    ""source"".""count"" AS ""count"",                                                                                              \r\n    ""source"".""Count_2"" AS ""Count_2"",                                                                                          \r\n    ""source"".""Count_3"" AS ""Count_3""                                                                                           \r\n  FROM (                                                                                                                      \r\n    SELECT -- Q2 outer                                                                                                        \r\n      ""source"".""CREATED_AT"" AS ""CREATED_AT"",                                                                                  \r\n      ""source"".""count"" AS ""count"",                                                                                            \r\n      ""source"".""count"" + 10 AS ""Count_2""                                                                                      \r\n    FROM (                                                                                                                    \r\n      SELECT -- Q2 inner                                                                                                      \r\n        ""source"".""CREATED_AT"" AS ""CREATED_AT"",                                                                                \r\n        ""source"".""count"" AS ""count"",                                                                                          \r\n        ""source"".""Count_2"" AS ""Count_2""                                                                                       \r\n      FROM (                                                                                                                  \r\n        SELECT -- Q1 outer                                                                                                    \r\n          ""source"".""CREATED_AT"" AS ""CREATED_AT"",                                                                              \r\n          ""source"".""count"" AS ""count"",                                                                                        \r\n          ""source"".""count"" + 5 AS ""Count_2""                                                                                   \r\n        FROM (                                                                                                                \r\n          SELECT -- Q1 inner                                                                                                  \r\n            DATE_TRUNC(\'month\', ""PUBLIC"".""ACCOUNTS"".""CREATED_AT"") AS ""CREATED_AT"",                                            \r\n            COUNT(*) AS ""count""                                                                                               \r\n          FROM ""PUBLIC"".""ACCOUNTS""                                                                                            \r\n          WHERE                                                                                                               \r\n            (""PUBLIC"".""ACCOUNTS"".""SOURCE"" = ?)                                                                                \r\n            OR (""PUBLIC"".""ACCOUNTS"".""SOURCE"" = ?)                                                                             \r\n          GROUP BY DATE_TRUNC(\'month\', ""PUBLIC"".""ACCOUNTS"".""CREATED_AT"")                                                      \r\n          ORDER BY DATE_TRUNC(\'month\', ""PUBLIC"".""ACCOUNTS"".""CREATED_AT"") ASC                                                  \r\n        ) AS ""source""                                                                                                         \r\n      ) AS ""source""                                                                                                           \r\n    ) AS ""source""                                                                                                             \r\n  ) AS ""source""                                                                                                               \r\n) AS ""source""                                                                                                                 \r\nLIMIT 1048575\r\n```\r\n\r\nThe field and expression names aren\'t what I expected there. First, note that with custom columns we do an inner and outer query, where the filters, aggregations, breakouts etc. go into an inner query, and then custom column values are calculated on the outer query. Think `SELECT source.a AS a, source.a + 1 AS my_custom_column FROM (SELECT a FROM some_table WHERE ...)`.\r\n\r\n- Q1 inner returns `count(*) AS count`\r\n- Q1 outer returns `""source"".""count"" AS ""count""` (vanilla aggregation) *and* `""source"".""count"" + 5 AS ""Count_2""` (custom column `""Count""`)\r\n- Q2 inner returns the same pair as Q1 outer\r\n- Q2 outer returns `""source"".""count"" AS ""count""` *and* `""source"".""count"" + 10 AS ""Count_2""`\r\n    - Note that it\'s discarding the other `""Count_2""` column returned by Q1 outer and Q2 inner!\r\n- Q3 inner returns `""source"".""count"" AS ""count""`, `""source"".""Count_2"" AS ""Count_2""` *and* `""source"".""Count_3"" as ""Count_3""`.\r\n    - There\'s no `Count_3` returned by the above query! This is where it fails to compile.\r\n- Q3 outer is also drunk, and returns `""source"".""Count_2""` twice, as both `""Count_2""` and `""Count_2_2""`. :facepalm: \r\n\r\nI think this is more or less the same issue as we\'re seeing in your example. The outermost query (in yours) or second query (above) is using a column that doesn\'t exist in its source. I think this is a gap between the library on the FE and the BE for calculating which columns are returned from the previous stage/source. (This is worse with models in play than with multi-stage regular queries, because models cache their `results_metadata` in a different form to the original fields, adding a _third_ copy of this information and more room for inconsistencies.)\r\n\r\n| Perspective | Original aggregation | Inner CC | Outer CC |\r\n| :-- | :-- | :-- | :-- |\r\n| GUI metadata | `count` | `Count` | `Count_2` |\r\n| Inner SQL returns | `count` | -- | `Count_2` |\r\n| Outer SQL consumes | `count` | `Count_2` | `Count_3` |', 'created_at': datetime.datetime(2024, 2, 26, 21, 34, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1965374796, 'issue_id': 2149305269, 'author': 'bshepherdson', 'body': 'Here\'s a much simpler repro now that I see how the pieces fit together:\r\n1. Create a new GUI model\r\n2. Orders, de-select the `Discount` column\r\n3. Create a new custom column `coalesce([Discount], 0)` and label it `DISCOUNT` (this exact spelling is important!)\r\n4. The model preview works, but once you save the model an ad-hoc query against it will fail.\r\n\r\nHere\'s the SQL:\r\n```sql\r\nSELECT                                                                                                                        \r\n  ""source"".""ID"" AS ""ID"",                                                                                                      \r\n  ""source"".""USER_ID"" AS ""USER_ID"",                                                                                            \r\n  ""source"".""PRODUCT_ID"" AS ""PRODUCT_ID"",                                                                                      \r\n  ""source"".""SUBTOTAL"" AS ""SUBTOTAL"",                                                                                          \r\n  ""source"".""TAX"" AS ""TAX"",                                                                                                    \r\n  ""source"".""TOTAL"" AS ""TOTAL"",                                                                                                \r\n  ""source"".""CREATED_AT"" AS ""CREATED_AT"",                                                                                      \r\n  ""source"".""QUANTITY"" AS ""QUANTITY"",                                                                                          \r\n  ""source"".""DISCOUNT"" AS ""DISCOUNT""                                                                                           \r\nFROM (                                                                                                                        \r\n  SELECT                                                                                                                      \r\n    ""source"".""ID"" AS ""ID"",                                                                                                    \r\n    ""source"".""USER_ID"" AS ""USER_ID"",                                                                                          \r\n    ""source"".""PRODUCT_ID"" AS ""PRODUCT_ID"",                                                                                    \r\n    ""source"".""SUBTOTAL"" AS ""SUBTOTAL"",                                                                                        \r\n    ""source"".""TAX"" AS ""TAX"",                                                                                                  \r\n    ""source"".""TOTAL"" AS ""TOTAL"",                                                                                              \r\n    ""source"".""CREATED_AT"" AS ""CREATED_AT"",                                                                                    \r\n    ""source"".""QUANTITY"" AS ""QUANTITY"",                                                                                        \r\n    ""source"".""DISCOUNT_2"" AS ""DISCOUNT_2""                                                                                     \r\n  FROM (                                                                                                                      \r\n    SELECT                                                                                                                    \r\n      ""PUBLIC"".""ORDERS"".""ID"" AS ""ID"",                                                                                         \r\n      ""PUBLIC"".""ORDERS"".""USER_ID"" AS ""USER_ID"",                                                                               \r\n      ""PUBLIC"".""ORDERS"".""PRODUCT_ID"" AS ""PRODUCT_ID"",                                                                         \r\n      ""PUBLIC"".""ORDERS"".""SUBTOTAL"" AS ""SUBTOTAL"",                                                                             \r\n      ""PUBLIC"".""ORDERS"".""TAX"" AS ""TAX"",                                                                                       \r\n      ""PUBLIC"".""ORDERS"".""TOTAL"" AS ""TOTAL"",                                                                                   \r\n      ""PUBLIC"".""ORDERS"".""DISCOUNT"" AS ""DISCOUNT"",                                                                             \r\n      ""PUBLIC"".""ORDERS"".""CREATED_AT"" AS ""CREATED_AT"",                                                                         \r\n      ""PUBLIC"".""ORDERS"".""QUANTITY"" AS ""QUANTITY"",                                                                             \r\n      COALESCE(""PUBLIC"".""ORDERS"".""DISCOUNT"", 0) AS ""DISCOUNT_2""                                                               \r\n    FROM ""PUBLIC"".""ORDERS""                                                                                                    \r\n  ) AS ""source""                                                                                                               \r\n  ORDER BY ""source"".""CREATED_AT"" ASC                                                                                          \r\n) AS ""source"" LIMIT 2000\r\n```\r\n\r\nThe trouble is fairly evident now:\r\n- The innermost query is selecting everything from the `Orders` table, including the original `DISCOUNT`.\r\n- So the custom column on it is being returned `AS ""DISCOUNT_2""`.\r\n- The middle query (handling the `:fields` selections for the model I think?) selects `""source"".""DISCOUNT_2"" AS ""DISCOUNT_2""`, which is correct with the renaming.\r\n- However, the `results_metadata` contains only the custom column `DISCOUNT` so it tries to select `""source"".""DISCOUNT"" AS ""DISCOUNT""`\r\n- Which doesn\'t exist, hence the SQL error.\r\n\r\nI think the bug here is that the middle query is selecting `""DISCOUNT_2""` with its internal name, rather than its returned name. I\'m debugging into generating the `SELECT ... FROM` in the SQL driver.', 'created_at': datetime.datetime(2024, 2, 26, 22, 1, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1967676205, 'issue_id': 2149305269, 'author': 'bshepherdson', 'body': ""I've further narrowed down the source of the trouble. [`metabase.query-processor.util.nest-query/nest-expressions`](https://github.com/metabase/metabase/blob/master/src/metabase/query_processor/util/nest_query.clj#L129) is not handling renaming correctly on a multi-stage query.\r\n\r\nThis function is supposed to take a query (complete with `desired-alias`/`source-alias` info) and add a new level of nesting around it. The expressions and joins go on the inside query, and the rest (filters, aggregations, grouping and field selection) are pushed to the outside. This allows custom expressions to be defined once in the `SELECT ... FROM` of the inner query, and consumed by name in the outer query.\r\n\r\nThat's all fine so far. The trouble comes when the expression needs to get renamed by an `AS` clause. The `:fields` of the inner query are possibly a superset of those on the outer query. (Eg. if we use a source field in some filter but don't return it in the fields list, it needs to be `SELECT`ed in the inner query but not the outer one.) That might require some de-duplication in the inner query, renaming the expression from `DISCOUNT` to `DISCOUNT_2` in my [earlier example](https://github.com/metabase/metabase/issues/39059#issuecomment-1965374796).\r\n\r\nThe reason this bug is hard to reproduce is that this issue doesn't cause a problem unless we have a nested query and _exactly_ duplicate the name of an existing column. If it's not nested, everything gets renamed. If the name isn't an exact duplicate, the inner column isn't renamed and the nested query is correct (by accident).\r\n\r\nThe fix isn't clear to me yet. Tracing the threads of fields through all levels of a query is tricky, and to make it more complex, that logic is called repeatedly on parts of the queries. I think the best approach might be to walk the query and assign UUIDs to all the field refs (both providers and consumers). Then the names don't matter and we can restructure the query or reorder the `:fields` clauses if we want. Once all the transformations on the query are complete, a single inside-out pass of (re)naming fields will result in consistent names between each pair of adjacent stages.\r\n\r\nAlso, I note in passing that this is also the cause of #25931, where the expression name is getting escaped and that renaming is likewise not propagated properly through the whole query."", 'created_at': datetime.datetime(2024, 2, 27, 21, 55, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1976976132, 'issue_id': 2149305269, 'author': 'calherries', 'body': '@bshepherdson is the fix being backported to 48?', 'created_at': datetime.datetime(2024, 3, 4, 16, 26, 50, tzinfo=datetime.timezone.utc)}]","bshepherdson (Assginee) on (2024-02-23 17:50:56 UTC): I'm not able to reproduce this on any version of Metabase. The custom column's duplicated name is correctly deduped to eg. `DISCOUNT_2` and the query works fine. Looking at this and #39037 together, I think there may be something odd about this model or models.

Can you demonstrate a repro on our sample database? The `Orders.DISCOUNT` column has nulls, if you want to use `coalesce`; but any custom expression should work equally well.

bshepherdson (Assginee) on (2024-02-26 21:34:59 UTC): @perivamsi found a repro for (I think) the same issue.

Here's the SQL:
```sql
SELECT -- Q3 outer                                                                                                            
 ""source"".""CREATED_AT"" AS ""CREATED_AT"",                                                                                       
  ""source"".""count"" AS ""count"",                                                                                                
  ""source"".""Count_2"" AS ""Count_2"",                                                                                            
  ""source"".""Count_2"" AS ""Count_2_2""                                                                                           
FROM (                                                                                                                        
  SELECT -- Q3 inner                                                                                                          
    ""source"".""CREATED_AT"" AS ""CREATED_AT"",                                                                                    
    ""source"".""count"" AS ""count"",                                                                                              
    ""source"".""Count_2"" AS ""Count_2"",                                                                                          
    ""source"".""Count_3"" AS ""Count_3""                                                                                           
  FROM (                                                                                                                      
    SELECT -- Q2 outer                                                                                                        
      ""source"".""CREATED_AT"" AS ""CREATED_AT"",                                                                                  
      ""source"".""count"" AS ""count"",                                                                                            
      ""source"".""count"" + 10 AS ""Count_2""                                                                                      
    FROM (                                                                                                                    
      SELECT -- Q2 inner                                                                                                      
        ""source"".""CREATED_AT"" AS ""CREATED_AT"",                                                                                
        ""source"".""count"" AS ""count"",                                                                                          
        ""source"".""Count_2"" AS ""Count_2""                                                                                       
      FROM (                                                                                                                  
        SELECT -- Q1 outer                                                                                                    
          ""source"".""CREATED_AT"" AS ""CREATED_AT"",                                                                              
          ""source"".""count"" AS ""count"",                                                                                        
          ""source"".""count"" + 5 AS ""Count_2""                                                                                   
        FROM (                                                                                                                
          SELECT -- Q1 inner                                                                                                  
            DATE_TRUNC('month', ""PUBLIC"".""ACCOUNTS"".""CREATED_AT"") AS ""CREATED_AT"",                                            
            COUNT(*) AS ""count""                                                                                               
          FROM ""PUBLIC"".""ACCOUNTS""                                                                                            
          WHERE                                                                                                               
            (""PUBLIC"".""ACCOUNTS"".""SOURCE"" = ?)                                                                                
            OR (""PUBLIC"".""ACCOUNTS"".""SOURCE"" = ?)                                                                             
          GROUP BY DATE_TRUNC('month', ""PUBLIC"".""ACCOUNTS"".""CREATED_AT"")                                                      
          ORDER BY DATE_TRUNC('month', ""PUBLIC"".""ACCOUNTS"".""CREATED_AT"") ASC                                                  
        ) AS ""source""                                                                                                         
      ) AS ""source""                                                                                                           
    ) AS ""source""                                                                                                             
  ) AS ""source""                                                                                                               
) AS ""source""                                                                                                                 
LIMIT 1048575
```

The field and expression names aren't what I expected there. First, note that with custom columns we do an inner and outer query, where the filters, aggregations, breakouts etc. go into an inner query, and then custom column values are calculated on the outer query. Think `SELECT source.a AS a, source.a + 1 AS my_custom_column FROM (SELECT a FROM some_table WHERE ...)`.

- Q1 inner returns `count(*) AS count`
- Q1 outer returns `""source"".""count"" AS ""count""` (vanilla aggregation) *and* `""source"".""count"" + 5 AS ""Count_2""` (custom column `""Count""`)
- Q2 inner returns the same pair as Q1 outer
- Q2 outer returns `""source"".""count"" AS ""count""` *and* `""source"".""count"" + 10 AS ""Count_2""`
    - Note that it's discarding the other `""Count_2""` column returned by Q1 outer and Q2 inner!
- Q3 inner returns `""source"".""count"" AS ""count""`, `""source"".""Count_2"" AS ""Count_2""` *and* `""source"".""Count_3"" as ""Count_3""`.
    - There's no `Count_3` returned by the above query! This is where it fails to compile.
- Q3 outer is also drunk, and returns `""source"".""Count_2""` twice, as both `""Count_2""` and `""Count_2_2""`. :facepalm: 

I think this is more or less the same issue as we're seeing in your example. The outermost query (in yours) or second query (above) is using a column that doesn't exist in its source. I think this is a gap between the library on the FE and the BE for calculating which columns are returned from the previous stage/source. (This is worse with models in play than with multi-stage regular queries, because models cache their `results_metadata` in a different form to the original fields, adding a _third_ copy of this information and more room for inconsistencies.)

| Perspective | Original aggregation | Inner CC | Outer CC |
| :-- | :-- | :-- | :-- |
| GUI metadata | `count` | `Count` | `Count_2` |
| Inner SQL returns | `count` | -- | `Count_2` |
| Outer SQL consumes | `count` | `Count_2` | `Count_3` |

bshepherdson (Assginee) on (2024-02-26 22:01:02 UTC): Here's a much simpler repro now that I see how the pieces fit together:
1. Create a new GUI model
2. Orders, de-select the `Discount` column
3. Create a new custom column `coalesce([Discount], 0)` and label it `DISCOUNT` (this exact spelling is important!)
4. The model preview works, but once you save the model an ad-hoc query against it will fail.

Here's the SQL:
```sql
SELECT                                                                                                                        
  ""source"".""ID"" AS ""ID"",                                                                                                      
  ""source"".""USER_ID"" AS ""USER_ID"",                                                                                            
  ""source"".""PRODUCT_ID"" AS ""PRODUCT_ID"",                                                                                      
  ""source"".""SUBTOTAL"" AS ""SUBTOTAL"",                                                                                          
  ""source"".""TAX"" AS ""TAX"",                                                                                                    
  ""source"".""TOTAL"" AS ""TOTAL"",                                                                                                
  ""source"".""CREATED_AT"" AS ""CREATED_AT"",                                                                                      
  ""source"".""QUANTITY"" AS ""QUANTITY"",                                                                                          
  ""source"".""DISCOUNT"" AS ""DISCOUNT""                                                                                           
FROM (                                                                                                                        
  SELECT                                                                                                                      
    ""source"".""ID"" AS ""ID"",                                                                                                    
    ""source"".""USER_ID"" AS ""USER_ID"",                                                                                          
    ""source"".""PRODUCT_ID"" AS ""PRODUCT_ID"",                                                                                    
    ""source"".""SUBTOTAL"" AS ""SUBTOTAL"",                                                                                        
    ""source"".""TAX"" AS ""TAX"",                                                                                                  
    ""source"".""TOTAL"" AS ""TOTAL"",                                                                                              
    ""source"".""CREATED_AT"" AS ""CREATED_AT"",                                                                                    
    ""source"".""QUANTITY"" AS ""QUANTITY"",                                                                                        
    ""source"".""DISCOUNT_2"" AS ""DISCOUNT_2""                                                                                     
  FROM (                                                                                                                      
    SELECT                                                                                                                    
      ""PUBLIC"".""ORDERS"".""ID"" AS ""ID"",                                                                                         
      ""PUBLIC"".""ORDERS"".""USER_ID"" AS ""USER_ID"",                                                                               
      ""PUBLIC"".""ORDERS"".""PRODUCT_ID"" AS ""PRODUCT_ID"",                                                                         
      ""PUBLIC"".""ORDERS"".""SUBTOTAL"" AS ""SUBTOTAL"",                                                                             
      ""PUBLIC"".""ORDERS"".""TAX"" AS ""TAX"",                                                                                       
      ""PUBLIC"".""ORDERS"".""TOTAL"" AS ""TOTAL"",                                                                                   
      ""PUBLIC"".""ORDERS"".""DISCOUNT"" AS ""DISCOUNT"",                                                                             
      ""PUBLIC"".""ORDERS"".""CREATED_AT"" AS ""CREATED_AT"",                                                                         
      ""PUBLIC"".""ORDERS"".""QUANTITY"" AS ""QUANTITY"",                                                                             
      COALESCE(""PUBLIC"".""ORDERS"".""DISCOUNT"", 0) AS ""DISCOUNT_2""                                                               
    FROM ""PUBLIC"".""ORDERS""                                                                                                    
  ) AS ""source""                                                                                                               
  ORDER BY ""source"".""CREATED_AT"" ASC                                                                                          
) AS ""source"" LIMIT 2000
```

The trouble is fairly evident now:
- The innermost query is selecting everything from the `Orders` table, including the original `DISCOUNT`.
- So the custom column on it is being returned `AS ""DISCOUNT_2""`.
- The middle query (handling the `:fields` selections for the model I think?) selects `""source"".""DISCOUNT_2"" AS ""DISCOUNT_2""`, which is correct with the renaming.
- However, the `results_metadata` contains only the custom column `DISCOUNT` so it tries to select `""source"".""DISCOUNT"" AS ""DISCOUNT""`
- Which doesn't exist, hence the SQL error.

I think the bug here is that the middle query is selecting `""DISCOUNT_2""` with its internal name, rather than its returned name. I'm debugging into generating the `SELECT ... FROM` in the SQL driver.

bshepherdson (Assginee) on (2024-02-27 21:55:55 UTC): I've further narrowed down the source of the trouble. [`metabase.query-processor.util.nest-query/nest-expressions`](https://github.com/metabase/metabase/blob/master/src/metabase/query_processor/util/nest_query.clj#L129) is not handling renaming correctly on a multi-stage query.

This function is supposed to take a query (complete with `desired-alias`/`source-alias` info) and add a new level of nesting around it. The expressions and joins go on the inside query, and the rest (filters, aggregations, grouping and field selection) are pushed to the outside. This allows custom expressions to be defined once in the `SELECT ... FROM` of the inner query, and consumed by name in the outer query.

That's all fine so far. The trouble comes when the expression needs to get renamed by an `AS` clause. The `:fields` of the inner query are possibly a superset of those on the outer query. (Eg. if we use a source field in some filter but don't return it in the fields list, it needs to be `SELECT`ed in the inner query but not the outer one.) That might require some de-duplication in the inner query, renaming the expression from `DISCOUNT` to `DISCOUNT_2` in my [earlier example](https://github.com/metabase/metabase/issues/39059#issuecomment-1965374796).

The reason this bug is hard to reproduce is that this issue doesn't cause a problem unless we have a nested query and _exactly_ duplicate the name of an existing column. If it's not nested, everything gets renamed. If the name isn't an exact duplicate, the inner column isn't renamed and the nested query is correct (by accident).

The fix isn't clear to me yet. Tracing the threads of fields through all levels of a query is tricky, and to make it more complex, that logic is called repeatedly on parts of the queries. I think the best approach might be to walk the query and assign UUIDs to all the field refs (both providers and consumers). Then the names don't matter and we can restructure the query or reorder the `:fields` clauses if we want. Once all the transformations on the query are complete, a single inside-out pass of (re)naming fields will result in consistent names between each pair of adjacent stages.

Also, I note in passing that this is also the cause of #25931, where the expression name is getting escaped and that renaming is likewise not propagated properly through the whole query.

calherries on (2024-03-04 16:26:50 UTC): @bshepherdson is the fix being backported to 48?

"
2148964014,issue,closed,completed,Native query editor offers data source a user does not have native write permissions for,"### Describe the bug

Native query editor offers data source a user does not have native write permissions for.
This happens only for scenarios when a user has `Unrestricted` OR Granular data permissions but no `Native query editing` permissions.
![image](https://github.com/metabase/metabase/assets/31325167/4615850a-f4dc-45d0-92d6-56e0e23e0709)



### To Reproduce

1. As an admin, create a new regular user `normal@metabase.test`
2. Have at least two databases, and set them up so that ""All users"" group has native query editing permissions for one, but not for the other. It is important to give that group Unrestricted permissions for both databases.
3. Log in as normal user
4. Go to New > SQL query
5. Notice you still have a choice of database selection

![image](https://github.com/metabase/metabase/assets/31325167/15ed164f-0c81-4d44-aa0a-9e48447be951)



### Expected behavior

We should not offer data sources a user cannot use due to the permissions restrictions.

### Logs

_No response_

### Information about your Metabase installation

```JSON
local dev, `master`, 83d79b2, H2, Sample database
```


### Severity

P3

### Additional context

This is only slightly annoying, and it doesn't have any other consequences because user's permissions are actually enforced in two ways:
- such user is not able to type in the editor
- the backend rejects the query

So it's just a matter of not prompting users to do something they can't.",nemanjaglumac,2024-02-22 12:27:09+00:00,[],2024-02-28 14:36:57+00:00,2024-02-28 14:17:04+00:00,https://github.com/metabase/metabase/issues/39053,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Querying/Native', 'The SQL/native query editor'), ('.Team/Querying', '')]",[],
2148583225,issue,closed,completed,BE flakes: redshift-lbv-sync-error-test and redshift-types-test,"These are two seemingly related tests flaking on master. Example runs:

`metabase.driver.redshift-test/redshift-types-test`: https://github.com/metabase/metabase/actions/runs/7979299717/job/21786414703#step:3:954

`metabase.driver.redshift-test/redshift-lbv-sync-error-test `:
`https://github.com/metabase/metabase/actions/runs/7978492812/job/21785111342#step:3:920`

Judging by the stack trace, the only info we have is that a redshift exception is being thrown inside `metabase.sync.sync-metadata/sync-db-metadata!`",calherries,2024-02-22 09:14:48+00:00,['calherries'],2024-03-21 07:22:10+00:00,2024-03-21 07:22:10+00:00,https://github.com/metabase/metabase/issues/39046,"[('flaky-test-fix', ''), ('.Team/Workflows', 'aka BEC')]","[{'comment_id': 2011366373, 'issue_id': 2148583225, 'author': 'WiNloSt', 'body': 'fixed by https://github.com/metabase/metabase/pull/40310', 'created_at': datetime.datetime(2024, 3, 21, 7, 22, 10, tzinfo=datetime.timezone.utc)}]","WiNloSt on (2024-03-21 07:22:10 UTC): fixed by https://github.com/metabase/metabase/pull/40310

"
2148468935,issue,closed,completed,Parameter field mapping,As part of #38394 we want to show the info icon on parameter field mappings.,romeovs,2024-02-22 08:09:37+00:00,['romeovs'],2024-02-29 10:14:57+00:00,2024-02-29 10:14:15+00:00,https://github.com/metabase/metabase/issues/39042,[],"[{'comment_id': 1970817301, 'issue_id': 2148468935, 'author': 'romeovs', 'body': 'Closed by #39099', 'created_at': datetime.datetime(2024, 2, 29, 10, 14, 15, tzinfo=datetime.timezone.utc)}]","romeovs (Issue Creator) on (2024-02-29 10:14:15 UTC): Closed by #39099

"
2148445295,issue,closed,completed,FE - Migrate dataset flag - move changes to master,See [Slack discussion](https://metaboat.slack.com/archives/C051AG38B2S/p1708539067068639),kamilmielnik,2024-02-22 07:55:15+00:00,['kamilmielnik'],2024-02-22 10:58:52+00:00,2024-02-22 10:55:01+00:00,https://github.com/metabase/metabase/issues/39041,"[('.Frontend', ''), ('.Team/Querying', '')]",[],
2148418658,issue,closed,completed,Metabase v48+ does not run on Windows on H2,"### Describe the bug

Just downloaded v49 and it won't run

### To Reproduce

1) set up a plain windows machine, download Metabase v49.x
2) `java -jar metabase.jar`

### Expected behavior

Metabase should start

### Logs
```
2024-02-22 08:18:34,581 ERROR jdbcjobstore.JobStoreTX :: ClusterManager: Error managing cluster: Failed to obtain DB connection from data source 'db': java.sql.SQLException: Connections could not be acquired from the underlying database!
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'db': java.sql.SQLException: Connections could not be acquired from the underlying database! [See nested exception: java.sql.SQLException: Connections could not be acquired from the underlying database!]
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:783)
        at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.doCheckin(JobStoreSupport.java:3322)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager.manage(JobStoreSupport.java:3935)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager.initialize(JobStoreSupport.java:3920)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.schedulerStarted(JobStoreSupport.java:692)
        at org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:539)
        at org.quartz.impl.StdScheduler.start(StdScheduler.java:142)
        at clojurewerkz.quartzite.scheduler$start.invokeStatic(scheduler.clj:33)
        at clojurewerkz.quartzite.scheduler$start.invoke(scheduler.clj:29)
        at metabase.db.custom_migrations.DeleteAbandonmentEmailTask$with_connection_STAR___47404$with_transaction_STAR___47405.invoke(custom_migrations.clj:175)
        at toucan2.connection$bind_current_connectable_fn$fn__20897.invoke(connection.clj:104)
        at metabase.db.connection$do_transaction$thunk__32068.invoke(connection.clj:150)
        at metabase.db.connection$do_transaction.invokeStatic(connection.clj:165)
        at metabase.db.connection$do_transaction.invoke(connection.clj:146)
        at metabase.db.connection$do_with_transaction_primary_method_java_sql_Connection.invokeStatic(connection.clj:199)
        at metabase.db.connection$do_with_transaction_primary_method_java_sql_Connection.invoke(connection.clj:172)
        at clojure.lang.AFn.applyToHelper(AFn.java:165)
        at clojure.lang.AFn.applyTo(AFn.java:144)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:457)
        at clojure.core$partial$fn__5908.invoke(core.clj:2643)
        at clojure.lang.AFn.applyToHelper(AFn.java:160)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:436)
        at methodical.impl.combo.threaded$fn__17987$fn__17988$fn__17991.invoke(threaded.clj:71)
        at methodical.impl.combo.threaded$reducer_fn$fn__17957$fn__17961.invoke(threaded.clj:23)
        at clojure.lang.ArrayChunk.reduce(ArrayChunk.java:58)
        at clojure.core.protocols$fn__8244.invokeStatic(protocols.clj:136)
        at clojure.core.protocols$fn__8244.invoke(protocols.clj:124)
        at clojure.core.protocols$fn__8204$G__8199__8213.invoke(protocols.clj:19)
        at clojure.core.protocols$seq_reduce.invokeStatic(protocols.clj:31)
        at clojure.core.protocols$fn__8236.invokeStatic(protocols.clj:75)
        at clojure.core.protocols$fn__8236.invoke(protocols.clj:75)
        at clojure.core.protocols$fn__8178$G__8173__8191.invoke(protocols.clj:13)
        at clojure.core$reduce.invokeStatic(core.clj:6886)
        at clojure.core$reduce.invoke(core.clj:6868)
        at methodical.impl.combo.threaded$reducer_fn$fn__17957.invoke(threaded.clj:21)
        at clojure.core$comp$fn__5876.invoke(core.clj:2588)
        at methodical.impl.combo.threaded$combine_with_threader$fn__17967.invoke(threaded.clj:44)
        at clojure.lang.AFn.applyToHelper(AFn.java:160)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:436)
        at toucan2.connection$do_with_transaction_around_method_toucan2_connection_default.invokeStatic(connection.clj:249)
        at toucan2.connection$do_with_transaction_around_method_toucan2_connection_default.invoke(connection.clj:245)
        at clojure.lang.AFn.applyToHelper(AFn.java:165)
        at clojure.lang.AFn.applyTo(AFn.java:144)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:457)
        at clojure.core$partial$fn__5908.invoke(core.clj:2643)
        at clojure.lang.AFn.applyToHelper(AFn.java:160)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:436)
        at methodical.impl.standard$invoke_multifn.invokeStatic(standard.clj:58)
        at methodical.impl.standard$invoke_multifn.invoke(standard.clj:47)
        at methodical.impl.standard.StandardMultiFn.invoke(standard.clj:195)
        at metabase.db.custom_migrations.DeleteAbandonmentEmailTask$with_connection_STAR___47404.invoke(custom_migrations.clj:171)
        at toucan2.connection$bind_current_connectable_fn$fn__20897.invoke(connection.clj:104)
        at toucan2.connection$bind_current_connectable_fn$fn__20897.invoke(connection.clj:104)
        at toucan2.jdbc.connection$do_with_connection_primary_method_java_sql_Connection.invokeStatic(connection.clj:13)
        at toucan2.jdbc.connection$do_with_connection_primary_method_java_sql_Connection.invoke(connection.clj:11)
        at clojure.lang.AFn.applyToHelper(AFn.java:160)
        at clojure.lang.AFn.applyTo(AFn.java:144)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:436)
        at clojure.core$partial$fn__5908.invoke(core.clj:2642)
        at clojure.lang.AFn.applyToHelper(AFn.java:156)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:421)
        at methodical.impl.combo.threaded$fn__17987$fn__17988$fn__17989.invoke(threaded.clj:70)
        at methodical.impl.combo.threaded$reducer_fn$fn__17957$fn__17961.invoke(threaded.clj:23)
        at clojure.lang.ArrayChunk.reduce(ArrayChunk.java:58)
        at clojure.core.protocols$fn__8244.invokeStatic(protocols.clj:136)
        at clojure.core.protocols$fn__8244.invoke(protocols.clj:124)
        at clojure.core.protocols$fn__8204$G__8199__8213.invoke(protocols.clj:19)
        at clojure.core.protocols$seq_reduce.invokeStatic(protocols.clj:31)
        at clojure.core.protocols$fn__8236.invokeStatic(protocols.clj:75)
        at clojure.core.protocols$fn__8236.invoke(protocols.clj:75)
        at clojure.core.protocols$fn__8178$G__8173__8191.invoke(protocols.clj:13)
        at clojure.core$reduce.invokeStatic(core.clj:6886)
        at clojure.core$reduce.invoke(core.clj:6868)
        at methodical.impl.combo.threaded$reducer_fn$fn__17957.invoke(threaded.clj:21)
        at clojure.core$comp$fn__5876.invoke(core.clj:2587)
        at methodical.impl.combo.threaded$combine_with_threader$fn__17967.invoke(threaded.clj:43)
        at clojure.lang.AFn.applyToHelper(AFn.java:156)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:421)
        at toucan2.connection$do_with_connection_around_method_toucan2_connection_default.invokeStatic(connection.clj:118)
        at toucan2.connection$do_with_connection_around_method_toucan2_connection_default.invoke(connection.clj:106)
        at clojure.lang.AFn.applyToHelper(AFn.java:160)
        at clojure.lang.AFn.applyTo(AFn.java:144)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:436)
        at clojure.core$partial$fn__5908.invoke(core.clj:2642)
        at clojure.lang.AFn.applyToHelper(AFn.java:156)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:421)
        at methodical.impl.standard$invoke_multifn.invokeStatic(standard.clj:55)
        at methodical.impl.standard$invoke_multifn.invoke(standard.clj:47)
        at methodical.impl.standard.StandardMultiFn.invoke(standard.clj:193)
        at toucan2.connection$do_with_connection_primary_method_.invokeStatic(connection.clj:204)
        at toucan2.connection$do_with_connection_primary_method_.invoke(connection.clj:194)
        at clojure.lang.AFn.applyToHelper(AFn.java:160)
        at clojure.lang.AFn.applyTo(AFn.java:144)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:436)
        at clojure.core$partial$fn__5908.invoke(core.clj:2642)
        at clojure.lang.AFn.applyToHelper(AFn.java:156)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:421)
        at methodical.impl.combo.threaded$fn__17987$fn__17988$fn__17989.invoke(threaded.clj:70)
        at methodical.impl.combo.threaded$reducer_fn$fn__17957$fn__17961.invoke(threaded.clj:23)
        at clojure.lang.ArrayChunk.reduce(ArrayChunk.java:58)
        at clojure.core.protocols$fn__8244.invokeStatic(protocols.clj:136)
        at clojure.core.protocols$fn__8244.invoke(protocols.clj:124)
        at clojure.core.protocols$fn__8204$G__8199__8213.invoke(protocols.clj:19)
        at clojure.core.protocols$seq_reduce.invokeStatic(protocols.clj:31)
        at clojure.core.protocols$fn__8236.invokeStatic(protocols.clj:75)
        at clojure.core.protocols$fn__8236.invoke(protocols.clj:75)
        at clojure.core.protocols$fn__8178$G__8173__8191.invoke(protocols.clj:13)
        at clojure.core$reduce.invokeStatic(core.clj:6886)
        at clojure.core$reduce.invoke(core.clj:6868)
        at methodical.impl.combo.threaded$reducer_fn$fn__17957.invoke(threaded.clj:21)
        at clojure.core$comp$fn__5876.invoke(core.clj:2587)
        at methodical.impl.combo.threaded$combine_with_threader$fn__17967.invoke(threaded.clj:43)
        at clojure.lang.AFn.applyToHelper(AFn.java:156)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:421)
        at toucan2.connection$do_with_connection_around_method_toucan2_connection_default.invokeStatic(connection.clj:118)
        at toucan2.connection$do_with_connection_around_method_toucan2_connection_default.invoke(connection.clj:106)
        at clojure.lang.AFn.applyToHelper(AFn.java:160)
        at clojure.lang.AFn.applyTo(AFn.java:144)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:436)
        at clojure.core$partial$fn__5908.invoke(core.clj:2642)
        at clojure.lang.AFn.applyToHelper(AFn.java:156)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:421)
        at methodical.impl.standard$invoke_multifn.invokeStatic(standard.clj:55)
        at methodical.impl.standard$invoke_multifn.invoke(standard.clj:47)
        at methodical.impl.standard.StandardMultiFn.invoke(standard.clj:193)
        at metabase.db.custom_migrations.DeleteAbandonmentEmailTask.execute(custom_migrations.clj:171)
        at liquibase.change.custom.CustomChangeWrapper.generateStatements(CustomChangeWrapper.java:169)
        at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1271)
        at metabase.db.liquibase.h2.proxy$liquibase.database.core.H2Database$ff19274a.executeStatements(Unknown Source)
        at liquibase.changelog.ChangeSet.execute(ChangeSet.java:755)
        at liquibase.changelog.visitor.UpdateVisitor.executeAcceptedChange(UpdateVisitor.java:119)
        at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:68)
        at liquibase.changelog.ChangeLogIterator$2.lambda$run$0(ChangeLogIterator.java:133)
        at liquibase.Scope.lambda$child$0(Scope.java:186)
        at liquibase.Scope.child(Scope.java:195)
        at liquibase.Scope.child(Scope.java:185)
        at liquibase.Scope.child(Scope.java:164)
        at liquibase.changelog.ChangeLogIterator$2.run(ChangeLogIterator.java:122)
        at liquibase.Scope.lambda$child$0(Scope.java:186)
        at liquibase.Scope.child(Scope.java:195)
        at liquibase.Scope.child(Scope.java:185)
        at liquibase.Scope.child(Scope.java:164)
        at liquibase.Scope.child(Scope.java:252)
        at liquibase.Scope.child(Scope.java:256)
        at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:89)
        at liquibase.command.core.AbstractUpdateCommandStep.lambda$run$0(AbstractUpdateCommandStep.java:110)
        at liquibase.Scope.lambda$child$0(Scope.java:186)
        at liquibase.Scope.child(Scope.java:195)
        at liquibase.Scope.child(Scope.java:185)
        at liquibase.Scope.child(Scope.java:164)
        at liquibase.command.core.AbstractUpdateCommandStep.run(AbstractUpdateCommandStep.java:108)
        at liquibase.command.core.UpdateCommandStep.run(UpdateCommandStep.java:105)
        at liquibase.command.CommandScope.execute(CommandScope.java:217)
        at liquibase.Liquibase.lambda$update$0(Liquibase.java:245)
        at liquibase.Scope.lambda$child$0(Scope.java:186)
        at liquibase.Scope.child(Scope.java:195)
        at liquibase.Scope.child(Scope.java:185)
        at liquibase.Scope.child(Scope.java:164)
        at liquibase.Liquibase.runInScope(Liquibase.java:1419)
        at liquibase.Liquibase.update(Liquibase.java:234)
        at liquibase.Liquibase.update(Liquibase.java:212)
        at liquibase.Liquibase.update(Liquibase.java:194)
        at metabase.db.liquibase$migrate_up_if_needed_BANG_.invokeStatic(liquibase.clj:240)
        at metabase.db.liquibase$migrate_up_if_needed_BANG_.invoke(liquibase.clj:222)
        at metabase.db.setup$migrate_BANG_$fn__50737.invoke(setup.clj:80)
        at metabase.db.liquibase$do_with_liquibase$f_STAR___48449.invoke(liquibase.clj:135)
        at metabase.db.liquibase$do_with_liquibase.invokeStatic(liquibase.clj:138)
        at metabase.db.liquibase$do_with_liquibase.invoke(liquibase.clj:126)
        at metabase.db.setup$migrate_BANG_.invokeStatic(setup.clj:75)
        at metabase.db.setup$migrate_BANG_.doInvoke(setup.clj:56)
        at clojure.lang.RestFn.invoke(RestFn.java:445)
        at metabase.db.setup$run_schema_migrations_BANG_.invokeStatic(setup.clj:148)
        at metabase.db.setup$run_schema_migrations_BANG_.invoke(setup.clj:142)
        at metabase.db.setup$setup_db_BANG_$fn__50767$fn__50768.invoke(setup.clj:166)
        at metabase.util.jvm$do_with_us_locale.invokeStatic(jvm.clj:239)
        at metabase.util.jvm$do_with_us_locale.invoke(jvm.clj:225)
        at metabase.db.setup$setup_db_BANG_$fn__50767.invoke(setup.clj:161)
        at metabase.db.setup$setup_db_BANG_.invokeStatic(setup.clj:160)
        at metabase.db.setup$setup_db_BANG_.invoke(setup.clj:154)
        at metabase.db$setup_db_BANG_$fn__50781.invoke(db.clj:69)
        at metabase.db$setup_db_BANG_.invokeStatic(db.clj:64)
        at metabase.db$setup_db_BANG_.invoke(db.clj:55)
        at metabase.core$init_BANG__STAR_.invokeStatic(core.clj:113)
        at metabase.core$init_BANG__STAR_.invoke(core.clj:98)
        at metabase.core$init_BANG_.invokeStatic(core.clj:156)
        at metabase.core$init_BANG_.invoke(core.clj:151)
        at metabase.core$start_normally.invokeStatic(core.clj:168)
        at metabase.core$start_normally.invoke(core.clj:162)
        at metabase.core$entrypoint.invokeStatic(core.clj:201)
        at metabase.core$entrypoint.doInvoke(core.clj:195)
        at clojure.lang.RestFn.invoke(RestFn.java:397)
        at clojure.lang.AFn.applyToHelper(AFn.java:152)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.Var.applyTo(Var.java:705)
        at clojure.core$apply.invokeStatic(core.clj:667)
        at clojure.core$apply.invoke(core.clj:662)
        at metabase.bootstrap$_main.invokeStatic(bootstrap.clj:31)
        at metabase.bootstrap$_main.doInvoke(bootstrap.clj:28)
        at clojure.lang.RestFn.invoke(RestFn.java:397)
        at clojure.lang.AFn.applyToHelper(AFn.java:152)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at metabase.bootstrap.main(Unknown Source)
Caused by: java.sql.SQLException: Connections could not be acquired from the underlying database!
        at com.mchange.v2.sql.SqlUtils.toSQLException(SqlUtils.java:118)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:692)
        at com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)
        at metabase.db.connection.ApplicationDB.getConnection(connection.clj:47)
        at metabase.task.ConnectionProvider.getConnection(task.clj:105)
        at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
        ... 226 more
Caused by: com.mchange.v2.resourcepool.CannotAcquireResourceException: A ResourcePool could not acquire a resource from its primary factory or source.
        at com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1507)
        at com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:644)
        at com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:554)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:758)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:685)
        ... 231 more
Caused by: java.io.IOException: The process cannot access the file because another process has locked a portion of the file
        at java.base/java.io.FileInputStream.readBytes(Native Method)
        at java.base/java.io.FileInputStream.read(FileInputStream.java:279)
        at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
        at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
        at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
        at java.base/java.io.FilterInputStream.read(FilterInputStream.java:107)
        at metabase.db.update_h2$head.invokeStatic(update_h2.clj:24)
        at metabase.db.update_h2$head.invoke(update_h2.clj:18)
        at metabase.db.update_h2$db_version.invokeStatic(update_h2.clj:45)
        at metabase.db.update_h2$db_version.invoke(update_h2.clj:38)
        at metabase.db.update_h2$update_if_needed_BANG_.invokeStatic(update_h2.clj:95)
        at metabase.db.update_h2$update_if_needed_BANG_.invoke(update_h2.clj:90)
        at metabase.db.data_source.DataSource.getConnection(data_source.clj:29)
        at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:161)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:213)
        at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1176)
        at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1163)
        at com.mchange.v2.resourcepool.BasicResourcePool.access$700(BasicResourcePool.java:44)
        at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1908)
        at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:696)
2024-02-22 08:18:34,599 INFO core.QuartzScheduler :: Scheduler MetabaseScheduler_$_DESKTOP-QL1FHM31708618686914 started.
2024-02-22 08:18:37,152 ERROR liquibase.changelog :: ChangeSet migrations/001_update_migrations.yaml::v46.00-086::calherries encountered an exception.
2024-02-22 08:18:37,152 ERROR core.ErrorLogger :: An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'db': java.sql.SQLException: Connections could not be acquired from the underlying database! [See nested exception: java.sql.SQLException: Connections could not be acquired from the underlying database!]
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:783)
        at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3861)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
        at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: Connections could not be acquired from the underlying database!
        at com.mchange.v2.sql.SqlUtils.toSQLException(SqlUtils.java:118)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:692)
        at com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)
        at metabase.db.connection.ApplicationDB.getConnection(connection.clj:47)
        at metabase.task.ConnectionProvider.getConnection(task.clj:105)
        at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
        ... 4 more
Caused by: com.mchange.v2.resourcepool.CannotAcquireResourceException: A ResourcePool could not acquire a resource from its primary factory or source.
        at com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1507)
        at com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:644)
        at com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:554)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:758)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:685)
        ... 9 more
Caused by: java.io.IOException: The process cannot access the file because another process has locked a portion of the file
        at java.base/java.io.FileInputStream.readBytes(Native Method)
        at java.base/java.io.FileInputStream.read(FileInputStream.java:279)
        at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
        at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
        at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
        at java.base/java.io.FilterInputStream.read(FilterInputStream.java:107)
        at metabase.db.update_h2$head.invokeStatic(update_h2.clj:24)
        at metabase.db.update_h2$head.invoke(update_h2.clj:18)
        at metabase.db.update_h2$db_version.invokeStatic(update_h2.clj:45)
        at metabase.db.update_h2$db_version.invoke(update_h2.clj:38)
        at metabase.db.update_h2$update_if_needed_BANG_.invokeStatic(update_h2.clj:95)
        at metabase.db.update_h2$update_if_needed_BANG_.invoke(update_h2.clj:90)
        at metabase.db.data_source.DataSource.getConnection(data_source.clj:29)
        at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:161)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:213)
        at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1176)
        at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1163)
        at com.mchange.v2.resourcepool.BasicResourcePool.access$700(BasicResourcePool.java:44)
        at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1908)
        at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:696)
2024-02-22 08:18:37,152 ERROR jdbcjobstore.JobStoreTX :: MisfireHandler: Error handling misfires: Failed to obtain DB connection from data source 'db': java.sql.SQLException: Connections could not be acquired from the underlying database!
org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'db': java.sql.SQLException: Connections could not be acquired from the underlying database! [See nested exception: java.sql.SQLException: Connections could not be acquired from the underlying database!]
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:783)
        at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.doRecoverMisfires(JobStoreSupport.java:3246)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.manage(JobStoreSupport.java:4012)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler.run(JobStoreSupport.java:4033)
Caused by: java.sql.SQLException: Connections could not be acquired from the underlying database!
        at com.mchange.v2.sql.SqlUtils.toSQLException(SqlUtils.java:118)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:692)
        at com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)
        at metabase.db.connection.ApplicationDB.getConnection(connection.clj:47)
        at metabase.task.ConnectionProvider.getConnection(task.clj:105)
        at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
        ... 4 more
Caused by: com.mchange.v2.resourcepool.CannotAcquireResourceException: A ResourcePool could not acquire a resource from its primary factory or source.
        at com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1507)
        at com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:644)
        at com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:554)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:758)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:685)
        ... 9 more
Caused by: java.io.IOException: The process cannot access the file because another process has locked a portion of the file
        at java.base/java.io.FileInputStream.readBytes(Native Method)
        at java.base/java.io.FileInputStream.read(FileInputStream.java:279)
        at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
        at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
        at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
        at java.base/java.io.FilterInputStream.read(FilterInputStream.java:107)
        at metabase.db.update_h2$head.invokeStatic(update_h2.clj:24)
        at metabase.db.update_h2$head.invoke(update_h2.clj:18)
        at metabase.db.update_h2$db_version.invokeStatic(update_h2.clj:45)
        at metabase.db.update_h2$db_version.invoke(update_h2.clj:38)
        at metabase.db.update_h2$update_if_needed_BANG_.invokeStatic(update_h2.clj:95)
        at metabase.db.update_h2$update_if_needed_BANG_.invoke(update_h2.clj:90)
        at metabase.db.data_source.DataSource.getConnection(data_source.clj:29)
        at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:161)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:213)
        at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1176)
        at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1163)
        at com.mchange.v2.resourcepool.BasicResourcePool.access$700(BasicResourcePool.java:44)
        at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1908)
        at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:696)

UPDATE SUMMARY
Run:                        262
Previously run:               0
Filtered out:                18
-------------------------------
Total change sets:          280


FILTERED CHANGE SETS SUMMARY
DBMS mismatch:               18

2024-02-22 08:18:37,190 ERROR metabase.core :: Metabase Initialization FAILED
liquibase.exception.CommandExecutionException: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset migrations/001_update_migrations.yaml::v46.00-086::calherries:
     Reason: clojure.lang.ExceptionInfo: Failed to obtain DB connection from data source 'db': java.sql.SQLException: Connections could not be acquired from the underlying database! {:toucan2/context-trace [[""resolve connection"" {:toucan2.connection/connectable org.h2.jdbc.JdbcConnection}] [""resolve connection"" {:toucan2.connection/connectable nil}]]}
        at liquibase.command.CommandScope.execute(CommandScope.java:253)
        at liquibase.Liquibase.lambda$update$0(Liquibase.java:245)
        at liquibase.Scope.lambda$child$0(Scope.java:186)
        at liquibase.Scope.child(Scope.java:195)
        at liquibase.Scope.child(Scope.java:185)
        at liquibase.Scope.child(Scope.java:164)
        at liquibase.Liquibase.runInScope(Liquibase.java:1419)
        at liquibase.Liquibase.update(Liquibase.java:234)
        at liquibase.Liquibase.update(Liquibase.java:212)
        at liquibase.Liquibase.update(Liquibase.java:194)
        at metabase.db.liquibase$migrate_up_if_needed_BANG_.invokeStatic(liquibase.clj:240)
        at metabase.db.liquibase$migrate_up_if_needed_BANG_.invoke(liquibase.clj:222)
        at metabase.db.setup$migrate_BANG_$fn__50737.invoke(setup.clj:80)
        at metabase.db.liquibase$do_with_liquibase$f_STAR___48449.invoke(liquibase.clj:135)
        at metabase.db.liquibase$do_with_liquibase.invokeStatic(liquibase.clj:138)
        at metabase.db.liquibase$do_with_liquibase.invoke(liquibase.clj:126)
        at metabase.db.setup$migrate_BANG_.invokeStatic(setup.clj:75)
        at metabase.db.setup$migrate_BANG_.doInvoke(setup.clj:56)
        at clojure.lang.RestFn.invoke(RestFn.java:445)
        at metabase.db.setup$run_schema_migrations_BANG_.invokeStatic(setup.clj:148)
        at metabase.db.setup$run_schema_migrations_BANG_.invoke(setup.clj:142)
        at metabase.db.setup$setup_db_BANG_$fn__50767$fn__50768.invoke(setup.clj:166)
        at metabase.util.jvm$do_with_us_locale.invokeStatic(jvm.clj:239)
        at metabase.util.jvm$do_with_us_locale.invoke(jvm.clj:225)
        at metabase.db.setup$setup_db_BANG_$fn__50767.invoke(setup.clj:161)
        at metabase.db.setup$setup_db_BANG_.invokeStatic(setup.clj:160)
        at metabase.db.setup$setup_db_BANG_.invoke(setup.clj:154)
        at metabase.db$setup_db_BANG_$fn__50781.invoke(db.clj:69)
        at metabase.db$setup_db_BANG_.invokeStatic(db.clj:64)
        at metabase.db$setup_db_BANG_.invoke(db.clj:55)
        at metabase.core$init_BANG__STAR_.invokeStatic(core.clj:113)
        at metabase.core$init_BANG__STAR_.invoke(core.clj:98)
        at metabase.core$init_BANG_.invokeStatic(core.clj:156)
        at metabase.core$init_BANG_.invoke(core.clj:151)
        at metabase.core$start_normally.invokeStatic(core.clj:168)
        at metabase.core$start_normally.invoke(core.clj:162)
        at metabase.core$entrypoint.invokeStatic(core.clj:201)
        at metabase.core$entrypoint.doInvoke(core.clj:195)
        at clojure.lang.RestFn.invoke(RestFn.java:397)
        at clojure.lang.AFn.applyToHelper(AFn.java:152)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.Var.applyTo(Var.java:705)
        at clojure.core$apply.invokeStatic(core.clj:667)
        at clojure.core$apply.invoke(core.clj:662)
        at metabase.bootstrap$_main.invokeStatic(bootstrap.clj:31)
        at metabase.bootstrap$_main.doInvoke(bootstrap.clj:28)
        at clojure.lang.RestFn.invoke(RestFn.java:397)
        at clojure.lang.AFn.applyToHelper(AFn.java:152)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at metabase.bootstrap.main(Unknown Source)
Caused by: liquibase.exception.LiquibaseException: liquibase.exception.MigrationFailedException: Migration failed for changeset migrations/001_update_migrations.yaml::v46.00-086::calherries:
     Reason: clojure.lang.ExceptionInfo: Failed to obtain DB connection from data source 'db': java.sql.SQLException: Connections could not be acquired from the underlying database! {:toucan2/context-trace [[""resolve connection"" {:toucan2.connection/connectable org.h2.jdbc.JdbcConnection}] [""resolve connection"" {:toucan2.connection/connectable nil}]]}
        at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:151)
        at liquibase.command.core.AbstractUpdateCommandStep.lambda$run$0(AbstractUpdateCommandStep.java:110)
        at liquibase.Scope.lambda$child$0(Scope.java:186)
        at liquibase.Scope.child(Scope.java:195)
        at liquibase.Scope.child(Scope.java:185)
        at liquibase.Scope.child(Scope.java:164)
        at liquibase.command.core.AbstractUpdateCommandStep.run(AbstractUpdateCommandStep.java:108)
        at liquibase.command.core.UpdateCommandStep.run(UpdateCommandStep.java:105)
        at liquibase.command.CommandScope.execute(CommandScope.java:217)
        ... 49 more
Caused by: liquibase.exception.MigrationFailedException: Migration failed for changeset migrations/001_update_migrations.yaml::v46.00-086::calherries:
     Reason: clojure.lang.ExceptionInfo: Failed to obtain DB connection from data source 'db': java.sql.SQLException: Connections could not be acquired from the underlying database! {:toucan2/context-trace [[""resolve connection"" {:toucan2.connection/connectable org.h2.jdbc.JdbcConnection}] [""resolve connection"" {:toucan2.connection/connectable nil}]]}
        at liquibase.changelog.ChangeSet.execute(ChangeSet.java:797)
        at liquibase.changelog.visitor.UpdateVisitor.executeAcceptedChange(UpdateVisitor.java:119)
        at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:68)
        at liquibase.changelog.ChangeLogIterator$2.lambda$run$0(ChangeLogIterator.java:133)
        at liquibase.Scope.lambda$child$0(Scope.java:186)
        at liquibase.Scope.child(Scope.java:195)
        at liquibase.Scope.child(Scope.java:185)
        at liquibase.Scope.child(Scope.java:164)
        at liquibase.changelog.ChangeLogIterator$2.run(ChangeLogIterator.java:122)
        at liquibase.Scope.lambda$child$0(Scope.java:186)
        at liquibase.Scope.child(Scope.java:195)
        at liquibase.Scope.child(Scope.java:185)
        at liquibase.Scope.child(Scope.java:164)
        at liquibase.Scope.child(Scope.java:252)
        at liquibase.Scope.child(Scope.java:256)
        at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:89)
        ... 57 more
Caused by: clojure.lang.ExceptionInfo: Failed to obtain DB connection from data source 'db': java.sql.SQLException: Connections could not be acquired from the underlying database! {:toucan2/context-trace [[""resolve connection"" {:toucan2.connection/connectable org.h2.jdbc.JdbcConnection}] [""resolve connection"" {:toucan2.connection/connectable nil}]]}
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:783)
        at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3854)
        at org.quartz.impl.jdbcjobstore.JobStoreTX.executeInLock(JobStoreTX.java:93)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.removeTrigger(JobStoreSupport.java:1428)
        at org.quartz.core.QuartzScheduler.unscheduleJob(QuartzScheduler.java:1065)
        at org.quartz.impl.StdScheduler.unscheduleJob(StdScheduler.java:311)
        at clojurewerkz.quartzite.scheduler$delete_trigger.invokeStatic(scheduler.clj:94)
        at clojurewerkz.quartzite.scheduler$delete_trigger.invoke(scheduler.clj:90)
        at metabase.db.custom_migrations.DeleteAbandonmentEmailTask$with_connection_STAR___47404$with_transaction_STAR___47405.invoke(custom_migrations.clj:176)
        at toucan2.connection$bind_current_connectable_fn$fn__20897.invoke(connection.clj:104)
        at metabase.db.connection$do_transaction$thunk__32068.invoke(connection.clj:150)
        at metabase.db.connection$do_transaction.invokeStatic(connection.clj:165)
        at metabase.db.connection$do_transaction.invoke(connection.clj:146)
        at metabase.db.connection$do_with_transaction_primary_method_java_sql_Connection.invokeStatic(connection.clj:199)
        at metabase.db.connection$do_with_transaction_primary_method_java_sql_Connection.invoke(connection.clj:172)
        at clojure.lang.AFn.applyToHelper(AFn.java:165)
        at clojure.lang.AFn.applyTo(AFn.java:144)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:457)
        at clojure.core$partial$fn__5908.invoke(core.clj:2643)
        at clojure.lang.AFn.applyToHelper(AFn.java:160)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:436)
        at methodical.impl.combo.threaded$fn__17987$fn__17988$fn__17991.invoke(threaded.clj:71)
        at methodical.impl.combo.threaded$reducer_fn$fn__17957$fn__17961.invoke(threaded.clj:23)
        at clojure.lang.ArrayChunk.reduce(ArrayChunk.java:58)
        at clojure.core.protocols$fn__8244.invokeStatic(protocols.clj:136)
        at clojure.core.protocols$fn__8244.invoke(protocols.clj:124)
        at clojure.core.protocols$fn__8204$G__8199__8213.invoke(protocols.clj:19)
        at clojure.core.protocols$seq_reduce.invokeStatic(protocols.clj:31)
        at clojure.core.protocols$fn__8236.invokeStatic(protocols.clj:75)
        at clojure.core.protocols$fn__8236.invoke(protocols.clj:75)
        at clojure.core.protocols$fn__8178$G__8173__8191.invoke(protocols.clj:13)
        at clojure.core$reduce.invokeStatic(core.clj:6886)
        at clojure.core$reduce.invoke(core.clj:6868)
        at methodical.impl.combo.threaded$reducer_fn$fn__17957.invoke(threaded.clj:21)
        at clojure.core$comp$fn__5876.invoke(core.clj:2588)
        at methodical.impl.combo.threaded$combine_with_threader$fn__17967.invoke(threaded.clj:44)
        at clojure.lang.AFn.applyToHelper(AFn.java:160)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:436)
        at toucan2.connection$do_with_transaction_around_method_toucan2_connection_default.invokeStatic(connection.clj:249)
        at toucan2.connection$do_with_transaction_around_method_toucan2_connection_default.invoke(connection.clj:245)
        at clojure.lang.AFn.applyToHelper(AFn.java:165)
        at clojure.lang.AFn.applyTo(AFn.java:144)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:457)
        at clojure.core$partial$fn__5908.invoke(core.clj:2643)
        at clojure.lang.AFn.applyToHelper(AFn.java:160)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:436)
        at methodical.impl.standard$invoke_multifn.invokeStatic(standard.clj:58)
        at methodical.impl.standard$invoke_multifn.invoke(standard.clj:47)
        at methodical.impl.standard.StandardMultiFn.invoke(standard.clj:195)
        at metabase.db.custom_migrations.DeleteAbandonmentEmailTask$with_connection_STAR___47404.invoke(custom_migrations.clj:171)
        at toucan2.connection$bind_current_connectable_fn$fn__20897.invoke(connection.clj:104)
        at toucan2.connection$bind_current_connectable_fn$fn__20897.invoke(connection.clj:104)
        at toucan2.jdbc.connection$do_with_connection_primary_method_java_sql_Connection.invokeStatic(connection.clj:13)
        at toucan2.jdbc.connection$do_with_connection_primary_method_java_sql_Connection.invoke(connection.clj:11)
        at clojure.lang.AFn.applyToHelper(AFn.java:160)
        at clojure.lang.AFn.applyTo(AFn.java:144)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:436)
        at clojure.core$partial$fn__5908.invoke(core.clj:2642)
        at clojure.lang.AFn.applyToHelper(AFn.java:156)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:421)
        at methodical.impl.combo.threaded$fn__17987$fn__17988$fn__17989.invoke(threaded.clj:70)
        at methodical.impl.combo.threaded$reducer_fn$fn__17957$fn__17961.invoke(threaded.clj:23)
        at clojure.lang.ArrayChunk.reduce(ArrayChunk.java:58)
        at clojure.core.protocols$fn__8244.invokeStatic(protocols.clj:136)
        at clojure.core.protocols$fn__8244.invoke(protocols.clj:124)
        at clojure.core.protocols$fn__8204$G__8199__8213.invoke(protocols.clj:19)
        at clojure.core.protocols$seq_reduce.invokeStatic(protocols.clj:31)
        at clojure.core.protocols$fn__8236.invokeStatic(protocols.clj:75)
        at clojure.core.protocols$fn__8236.invoke(protocols.clj:75)
        at clojure.core.protocols$fn__8178$G__8173__8191.invoke(protocols.clj:13)
        at clojure.core$reduce.invokeStatic(core.clj:6886)
        at clojure.core$reduce.invoke(core.clj:6868)
        at methodical.impl.combo.threaded$reducer_fn$fn__17957.invoke(threaded.clj:21)
        at clojure.core$comp$fn__5876.invoke(core.clj:2587)
        at methodical.impl.combo.threaded$combine_with_threader$fn__17967.invoke(threaded.clj:43)
        at clojure.lang.AFn.applyToHelper(AFn.java:156)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:421)
        at toucan2.connection$do_with_connection_around_method_toucan2_connection_default.invokeStatic(connection.clj:118)
        at toucan2.connection$do_with_connection_around_method_toucan2_connection_default.invoke(connection.clj:106)
        at clojure.lang.AFn.applyToHelper(AFn.java:160)
        at clojure.lang.AFn.applyTo(AFn.java:144)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:436)
        at clojure.core$partial$fn__5908.invoke(core.clj:2642)
        at clojure.lang.AFn.applyToHelper(AFn.java:156)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:421)
        at methodical.impl.standard$invoke_multifn.invokeStatic(standard.clj:55)
        at methodical.impl.standard$invoke_multifn.invoke(standard.clj:47)
        at methodical.impl.standard.StandardMultiFn.invoke(standard.clj:193)
        at toucan2.connection$do_with_connection_primary_method_.invokeStatic(connection.clj:204)
        at toucan2.connection$do_with_connection_primary_method_.invoke(connection.clj:194)
        at clojure.lang.AFn.applyToHelper(AFn.java:160)
        at clojure.lang.AFn.applyTo(AFn.java:144)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:436)
        at clojure.core$partial$fn__5908.invoke(core.clj:2642)
        at clojure.lang.AFn.applyToHelper(AFn.java:156)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:421)
        at methodical.impl.combo.threaded$fn__17987$fn__17988$fn__17989.invoke(threaded.clj:70)
        at methodical.impl.combo.threaded$reducer_fn$fn__17957$fn__17961.invoke(threaded.clj:23)
        at clojure.lang.ArrayChunk.reduce(ArrayChunk.java:58)
        at clojure.core.protocols$fn__8244.invokeStatic(protocols.clj:136)
        at clojure.core.protocols$fn__8244.invoke(protocols.clj:124)
        at clojure.core.protocols$fn__8204$G__8199__8213.invoke(protocols.clj:19)
        at clojure.core.protocols$seq_reduce.invokeStatic(protocols.clj:31)
        at clojure.core.protocols$fn__8236.invokeStatic(protocols.clj:75)
        at clojure.core.protocols$fn__8236.invoke(protocols.clj:75)
        at clojure.core.protocols$fn__8178$G__8173__8191.invoke(protocols.clj:13)
        at clojure.core$reduce.invokeStatic(core.clj:6886)
        at clojure.core$reduce.invoke(core.clj:6868)
        at methodical.impl.combo.threaded$reducer_fn$fn__17957.invoke(threaded.clj:21)
        at clojure.core$comp$fn__5876.invoke(core.clj:2587)
        at methodical.impl.combo.threaded$combine_with_threader$fn__17967.invoke(threaded.clj:43)
        at clojure.lang.AFn.applyToHelper(AFn.java:156)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:421)
        at toucan2.connection$do_with_connection_around_method_toucan2_connection_default.invokeStatic(connection.clj:118)
        at toucan2.connection$do_with_connection_around_method_toucan2_connection_default.invoke(connection.clj:106)
        at clojure.lang.AFn.applyToHelper(AFn.java:160)
        at clojure.lang.AFn.applyTo(AFn.java:144)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:436)
        at clojure.core$partial$fn__5908.invoke(core.clj:2642)
        at clojure.lang.AFn.applyToHelper(AFn.java:156)
        at clojure.lang.RestFn.applyTo(RestFn.java:132)
        at clojure.lang.AFunction$1.doInvoke(AFunction.java:31)
        at clojure.lang.RestFn.invoke(RestFn.java:421)
        at methodical.impl.standard$invoke_multifn.invokeStatic(standard.clj:55)
        at methodical.impl.standard$invoke_multifn.invoke(standard.clj:47)
        at methodical.impl.standard.StandardMultiFn.invoke(standard.clj:193)
        at metabase.db.custom_migrations.DeleteAbandonmentEmailTask.execute(custom_migrations.clj:171)
        at liquibase.change.custom.CustomChangeWrapper.generateStatements(CustomChangeWrapper.java:169)
        at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1271)
        at metabase.db.liquibase.h2.proxy$liquibase.database.core.H2Database$ff19274a.executeStatements(Unknown Source)
        at liquibase.changelog.ChangeSet.execute(ChangeSet.java:755)
        ... 72 more
Caused by: org.quartz.JobPersistenceException: Failed to obtain DB connection from data source 'db': java.sql.SQLException: Connections could not be acquired from the underlying database! [See nested exception: java.sql.SQLException: Connections could not be acquired from the underlying database!]
        ... 226 more
Caused by: java.sql.SQLException: Connections could not be acquired from the underlying database!
        at com.mchange.v2.sql.SqlUtils.toSQLException(SqlUtils.java:118)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:692)
        at com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)
        at metabase.db.connection.ApplicationDB.getConnection(connection.clj:47)
        at metabase.task.ConnectionProvider.getConnection(task.clj:105)
        at org.quartz.utils.DBConnectionManager.getConnection(DBConnectionManager.java:108)
        at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:780)
        ... 225 more
Caused by: com.mchange.v2.resourcepool.CannotAcquireResourceException: A ResourcePool could not acquire a resource from its primary factory or source.
        at com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1507)
        at com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:644)
        at com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:554)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:758)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:685)
        ... 230 more
Caused by: java.io.IOException: The process cannot access the file because another process has locked a portion of the file
        at java.base/java.io.FileInputStream.readBytes(Native Method)
        at java.base/java.io.FileInputStream.read(FileInputStream.java:279)
        at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
        at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
        at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
        at java.base/java.io.FilterInputStream.read(FilterInputStream.java:107)
        at metabase.db.update_h2$head.invokeStatic(update_h2.clj:24)
        at metabase.db.update_h2$head.invoke(update_h2.clj:18)
        at metabase.db.update_h2$db_version.invokeStatic(update_h2.clj:45)
        at metabase.db.update_h2$db_version.invoke(update_h2.clj:38)
        at metabase.db.update_h2$update_if_needed_BANG_.invokeStatic(update_h2.clj:95)
        at metabase.db.update_h2$update_if_needed_BANG_.invoke(update_h2.clj:90)
        at metabase.db.data_source.DataSource.getConnection(data_source.clj:29)
        at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:161)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:213)
        at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1176)
        at com.mchange.v2.resourcepool.BasicResourcePool.doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess(BasicResourcePool.java:1163)
        at com.mchange.v2.resourcepool.BasicResourcePool.access$700(BasicResourcePool.java:44)
        at com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask.run(BasicResourcePool.java:1908)
        at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:696)
2024-02-22 08:18:37,223 INFO metabase.core :: Metabase Shutting Down ...
2024-02-22 08:18:37,223 INFO metabase.server :: Shutting Down Embedded Jetty Webserver
2024-02-22 08:18:37,229 INFO metabase.core :: Metabase Shutdown COMPLETE
```

### Information about your Metabase installation
Win 10 Home Java 11

### Severity

P1

### Additional context

_No response_",armgong,2024-02-22 07:39:09+00:00,['qnkhuat'],2024-03-12 05:39:52+00:00,2024-03-12 03:33:20+00:00,https://github.com/metabase/metabase/issues/39040,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('Operation/Database Migrations', 'Issues with application DB migrations when launching Metabase'), ('.Regression', 'Bugs that were previously fixed and/or bugs unintentionally shipped with new features.'), ('.Team/Workflows', 'aka BEC')]","[{'comment_id': 1959401447, 'issue_id': 2148418658, 'author': 'paoliniluis', 'body': 'Please try with Java 11', 'created_at': datetime.datetime(2024, 2, 22, 12, 54, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1959440547, 'issue_id': 2148418658, 'author': 'armgong', 'body': '> Please try with Java 11\r\n\r\ntest with jdk 11.0.22_7 and 17.0.10+7 and 21.0.2_13 , windows 10 LSTC and windows 11 22H2 and Windows server 2022 , all them run failed.\r\nwin10 and win11 are running  in windows 2022 hyper-v host , Windows server 2022  run on bare metal.\r\n\r\n0.47.x is ok , but 0.48 and master branch build failed start on windows. \r\nFurthermore 0.47.x and 0.48 and master branch run ok on linux', 'created_at': datetime.datetime(2024, 2, 22, 13, 19, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1959506377, 'issue_id': 2148418658, 'author': 'paoliniluis', 'body': 'why do you run the master branch and not the release?', 'created_at': datetime.datetime(2024, 2, 22, 13, 58, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1959578532, 'issue_id': 2148418658, 'author': 'armgong', 'body': '> why do you run the master branch and not the release?\r\nCuriosity, after found 0.47.x run ok ,but 0.48.x failed to start . so  move to master branch see the problem  still exist or not ?', 'created_at': datetime.datetime(2024, 2, 22, 14, 34, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1959635646, 'issue_id': 2148418658, 'author': 'armgong', 'body': 'another report about this problem.\r\nhttps://discourse.metabase.com/t/metabase-installation-fail/80878', 'created_at': datetime.datetime(2024, 2, 22, 15, 1, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1959799660, 'issue_id': 2148418658, 'author': 'paoliniluis', 'body': ""Just tested it, it won't work"", 'created_at': datetime.datetime(2024, 2, 22, 16, 21, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1960615516, 'issue_id': 2148418658, 'author': 'armgong', 'body': 'a bit more info maybe help to locate the bug.\r\nfisrt install and config 0.47, then run  0.48 on h2 database 0.47 created , metabase will start successful.', 'created_at': datetime.datetime(2024, 2, 23, 1, 32, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1962947180, 'issue_id': 2148418658, 'author': 'rkapl123', 'body': '> a bit more info maybe help to locate the bug. fisrt install and config 0.47, then run 0.48 on h2 database 0.47 created , metabase will start successful.\r\n\r\nI can confirm that this works, however the error messages are still there.', 'created_at': datetime.datetime(2024, 2, 25, 13, 49, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1974891197, 'issue_id': 2148418658, 'author': 'grimlinda56', 'body': 'Just FYI- Downloaded release version 48.7 today and experienced the exact same problem.  Downloaded 47.13 and it worked no prob.', 'created_at': datetime.datetime(2024, 3, 2, 19, 46, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1975209598, 'issue_id': 2148418658, 'author': 'EDIflyer', 'body': 'Glad to have found this bug as was pulling my hair out trying to work out what was going on!\r\n\r\nFresh VM\r\nRunning openJDK 17.0.6\r\nDownloaded latest Metabase version from website - v0.48.7 (c192db1)\r\n\r\nCould get it to display initial loading splashscreen on localhost:3000 but then would crash out.\r\n\r\nFull startup as follows:\r\n[startup_output.txt](https://github.com/metabase/metabase/files/14473670/startup_output.txt)\r\n\r\n(tried a few other v.0.48 versions and v.0.49-RC1 but no change, v.0.47 works OK for fresh usage)', 'created_at': datetime.datetime(2024, 3, 3, 16, 12, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1982185725, 'issue_id': 2148418658, 'author': 'qnkhuat', 'body': ""Here is the fix https://github.com/metabase/metabase/pull/39739, I've tested it using a VM. It would be nice if someone who runs native Windows could test it. You can download a jar from our CI [here](https://github.com/metabase/metabase/actions/runs/8181500560?pr=39739)"", 'created_at': datetime.datetime(2024, 3, 7, 1, 41, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1982283118, 'issue_id': 2148418658, 'author': 'armgong', 'body': 'thanks , test on win10 , issue fixed.\r\n~~~\r\njava -jar metabase.jar\r\nWarning: environ value C:\\Program Files\\Eclipse Adoptium\\jdk-17.0.10.7-hotspot\\ for key :java-home has been overwritten with C:\\Program Files\\Eclipse Adoptium\\jdk-17.0.10.7-hotspot\r\n2024-03-07 11:25:31,485 INFO metabase.util :: Maximum memory available to JVM: 4.0 GB\r\n2024-03-07 11:25:33,407 WARN db.env :: WARNING: Using Metabase with an H2 application database is not recommended for production deployments. For production deployments, we highly recommend using Postgres, MySQL, or MariaDB instead. If you decide to continue to use H2, please be sure to back up the database file regularly. For more information, see https://metabase.com/docs/latest/operations-guide/migrating-from-h2.html\r\n2024-03-07 11:25:33,594 INFO util.encryption :: Saved credentials encryption is DISABLED for this Metabase instance.\r\n\r\n For more information, see https://metabase.com/docs/latest/operations-guide/encrypting-database-details-at-rest.html\r\n2024-03-07 11:25:39,485 INFO driver.impl :: Registered abstract driver :sql\r\n2024-03-07 11:25:39,500 INFO driver.impl :: Registered abstract driver :sql-jdbc (parents: [:sql])\r\n2024-03-07 11:25:39,500 INFO metabase.util :: Load driver :sql-jdbc took 79.6 ms\r\n2024-03-07 11:25:39,500 INFO driver.impl :: Registered driver :h2 (parents: [:sql-jdbc])\r\n2024-03-07 11:25:39,688 INFO driver.impl :: Registered driver :mysql (parents: [:sql-jdbc])\r\n2024-03-07 11:25:39,735 INFO driver.impl :: Registered driver :postgres (parents: [:sql-jdbc])\r\n2024-03-07 11:25:41,391 INFO metabase.core ::\r\nMetabase vUNKNOWN (4e1dc28)\r\n\r\nCopyright ? 2024 Metabase, Inc.\r\n\r\nMetabase Enterprise Edition extensions are NOT PRESENT.\r\n2024-03-07 11:25:41,407 INFO metabase.core :: Starting Metabase in STANDALONE mode\r\n2024-03-07 11:25:41,454 INFO metabase.server :: Launching Embedded Jetty Webserver with config:\r\n {:port 3000}\r\n\r\n2024-03-07 11:25:41,532 INFO metabase.core :: Starting Metabase version vUNKNOWN (4e1dc28) ...\r\n2024-03-07 11:25:41,532 INFO metabase.core :: System info:\r\n {""file.encoding"" ""GBK"",\r\n ""java.runtime.name"" ""OpenJDK Runtime Environment"",\r\n ""java.runtime.version"" ""17.0.10+7"",\r\n ""java.vendor"" ""Eclipse Adoptium"",\r\n ""java.vendor.url"" ""https://adoptium.net/"",\r\n ""java.version"" ""17.0.10"",\r\n ""java.vm.name"" ""OpenJDK 64-Bit Server VM"",\r\n ""java.vm.version"" ""17.0.10+7"",\r\n ""os.name"" ""Windows 10"",\r\n ""os.version"" ""10.0"",\r\n ""user.language"" ""zh"",\r\n ""user.timezone"" ""Asia/Shanghai""}\r\n\r\n2024-03-07 11:25:41,532 INFO metabase.plugins :: Loading plugins in D:\\downloads\\plugins...\r\n2024-03-07 11:25:41,719 INFO util.files :: Extract file /modules/druid.metabase-driver.jar -> D:\\downloads\\plugins\\druid.metabase-driver.jar\r\n2024-03-07 11:25:41,750 INFO util.files :: Extract file /modules/googleanalytics.metabase-driver.jar -> D:\\downloads\\plugins\\googleanalytics.metabase-driver.jar\r\n2024-03-07 11:25:41,797 INFO util.files :: Extract file /modules/sparksql.metabase-driver.jar -> D:\\downloads\\plugins\\sparksql.metabase-driver.jar\r\n2024-03-07 11:25:41,891 INFO util.files :: Extract file /modules/bigquery-cloud-sdk.metabase-driver.jar -> D:\\downloads\\plugins\\bigquery-cloud-sdk.metabase-driver.jar\r\n2024-03-07 11:25:42,188 INFO util.files :: Extract file /modules/sqlite.metabase-driver.jar -> D:\\downloads\\plugins\\sqlite.metabase-driver.jar\r\n2024-03-07 11:25:42,235 INFO util.files :: Extract file /modules/snowflake.metabase-driver.jar -> D:\\downloads\\plugins\\snowflake.metabase-driver.jar\r\n2024-03-07 11:25:42,735 INFO util.files :: Extract file /modules/oracle.metabase-driver.jar -> D:\\downloads\\plugins\\oracle.metabase-driver.jar\r\n2024-03-07 11:25:42,735 INFO util.files :: Extract file /modules/presto-jdbc.metabase-driver.jar -> D:\\downloads\\plugins\\presto-jdbc.metabase-driver.jar\r\n2024-03-07 11:25:42,829 INFO util.files :: Extract file /modules/vertica.metabase-driver.jar -> D:\\downloads\\plugins\\vertica.metabase-driver.jar\r\n2024-03-07 11:25:42,829 INFO util.files :: Extract file /modules/athena.metabase-driver.jar -> D:\\downloads\\plugins\\athena.metabase-driver.jar\r\n2024-03-07 11:25:42,954 INFO util.files :: Extract file /modules/redshift.metabase-driver.jar -> D:\\downloads\\plugins\\redshift.metabase-driver.jar\r\n2024-03-07 11:25:42,954 INFO util.files :: Extract file /modules/sqlserver.metabase-driver.jar -> D:\\downloads\\plugins\\sqlserver.metabase-driver.jar\r\n2024-03-07 11:25:42,969 INFO util.files :: Extract file /modules/mongo.metabase-driver.jar -> D:\\downloads\\plugins\\mongo.metabase-driver.jar\r\n2024-03-07 11:25:43,219 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :athena...\r\n2024-03-07 11:25:43,219 INFO driver.impl :: Registered driver :athena (parents: [:sql-jdbc])\r\n2024-03-07 11:25:43,266 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :bigquery-cloud-sdk...\r\n2024-03-07 11:25:43,266 INFO driver.impl :: Registered driver :bigquery-cloud-sdk (parents: [:sql])\r\n2024-03-07 11:25:43,266 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :druid...\r\n2024-03-07 11:25:43,266 INFO driver.impl :: Registered driver :druid\r\n2024-03-07 11:25:43,282 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :googleanalytics...\r\n2024-03-07 11:25:43,282 INFO driver.impl :: Registered driver :googleanalytics\r\n2024-03-07 11:25:43,297 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :mongo...\r\n2024-03-07 11:25:43,297 INFO driver.impl :: Registered driver :mongo\r\n2024-03-07 11:25:43,329 INFO plugins.dependencies :: Metabase cannot initialize plugin Metabase Oracle Driver due to required dependencies. Metabase requires the Oracle JDBC driver in order to connect to Oracle databases, but we can\'t ship it as part of Metabase due to licensing restrictions. See https://metabase.com/docs/latest/administration-guide/databases/oracle.html for more details.\r\n\r\n2024-03-07 11:25:43,329 INFO plugins.dependencies :: Metabase Oracle Driver dependency {:class oracle.jdbc.OracleDriver} satisfied? false\r\n2024-03-07 11:25:43,329 INFO plugins.dependencies :: Plugins with unsatisfied deps: [""Metabase Oracle Driver""]\r\n2024-03-07 11:25:43,375 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :presto-jdbc...\r\n2024-03-07 11:25:43,375 INFO driver.impl :: Registered driver :presto-jdbc (parents: [:sql-jdbc])\r\n2024-03-07 11:25:43,375 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :redshift...\r\n2024-03-07 11:25:43,375 INFO driver.impl :: Registered driver :redshift (parents: [:postgres])\r\n2024-03-07 11:25:43,407 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :snowflake...\r\n2024-03-07 11:25:43,407 INFO driver.impl :: Registered driver :snowflake (parents: [:sql-jdbc])\r\n2024-03-07 11:25:43,422 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :hive-like...\r\n2024-03-07 11:25:43,438 INFO driver.impl :: Registered abstract driver :hive-like (parents: [:sql-jdbc])\r\n2024-03-07 11:25:43,438 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :sparksql...\r\n2024-03-07 11:25:43,438 INFO driver.impl :: Registered driver :sparksql (parents: [:hive-like])\r\n2024-03-07 11:25:43,438 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :sqlite...\r\n2024-03-07 11:25:43,454 INFO driver.impl :: Registered driver :sqlite (parents: [:sql-jdbc])\r\n2024-03-07 11:25:43,485 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :sqlserver...\r\n2024-03-07 11:25:43,485 INFO driver.impl :: Registered driver :sqlserver (parents: [:sql-jdbc])\r\n2024-03-07 11:25:43,485 INFO plugins.dependencies :: Metabase cannot initialize plugin Metabase Vertica Driver due to required dependencies. Metabase requires the Vertica JDBC driver in order to connect to Vertica databases, but we can\'t ship it as part of Metabase due to licensing restrictions. See https://metabase.com/docs/latest/administration-guide/databases/vertica.html for more details.\r\n\r\n2024-03-07 11:25:43,485 INFO plugins.dependencies :: Metabase Vertica Driver dependency {:class com.vertica.jdbc.Driver} satisfied? false\r\n2024-03-07 11:25:43,485 INFO plugins.dependencies :: Plugins with unsatisfied deps: [""Metabase Oracle Driver"" ""Metabase Vertica Driver""]\r\n2024-03-07 11:25:43,500 INFO metabase.core :: Setting up and migrating Metabase DB. Please sit tight, this may take a minute...\r\n2024-03-07 11:25:43,516 INFO db.setup :: Verifying h2 Database Connection ...\r\n2024-03-07 11:25:43,813 INFO db.setup :: Successfully verified H2 2.1.214 (2022-06-13) application database connection.\r\n2024-03-07 11:25:43,813 INFO db.setup :: Checking if a database downgrade is required...\r\n2024-03-07 11:25:44,547 INFO db.setup :: Running Database Migrations...\r\n2024-03-07 11:25:44,547 INFO db.setup :: Setting up Liquibase...\r\n2024-03-07 11:25:44,766 INFO db.liquibase :: Updating liquibase table to reflect consolidated changeset filenames\r\n2024-03-07 11:25:44,782 INFO db.liquibase :: No migration lock found.\r\n2024-03-07 11:25:44,782 INFO db.liquibase :: Migration lock acquired.\r\n2024-03-07 11:25:44,797 INFO db.setup :: Liquibase is ready.\r\n2024-03-07 11:25:44,797 INFO db.liquibase :: Checking if Database has unrun migrations...\r\n2024-03-07 11:25:45,422 INFO db.liquibase :: Database has unrun migrations. Checking if migration lock is taken...\r\n2024-03-07 11:25:45,438 INFO db.liquibase :: No migration lock found.\r\n2024-03-07 11:25:45,438 INFO db.liquibase :: Migration lock acquired.\r\n2024-03-07 11:25:45,704 INFO db.liquibase :: Running 265 migrations ...\r\n2024-03-07 11:25:47,079 INFO impl.StdSchedulerFactory :: Using default implementation for ThreadExecutor\r\n2024-03-07 11:25:47,095 INFO core.SchedulerSignalerImpl :: Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl\r\n2024-03-07 11:25:47,095 INFO core.QuartzScheduler :: Quartz Scheduler v.2.3.2 created.\r\n2024-03-07 11:25:47,095 INFO jdbcjobstore.JobStoreTX :: Using db table-based data access locking (synchronization). 2024-03-07 11:25:47,095 INFO jdbcjobstore.JobStoreTX :: JobStoreTX initialized.\r\n2024-03-07 11:25:47,095 INFO core.QuartzScheduler :: Scheduler meta-data: Quartz Scheduler (v2.3.2) \'MetabaseScheduler\' with instanceId \'win10-hyperv1709781947079\'\r\n  Scheduler class: \'org.quartz.core.QuartzScheduler\' - running locally.\r\n  NOT STARTED.\r\n  Currently in standby mode.\r\n  Number of jobs executed: 0\r\n  Using thread pool \'org.quartz.simpl.SimpleThreadPool\' - with 10 threads.\r\n  Using job-store \'org.quartz.impl.jdbcjobstore.JobStoreTX\' - which supports persistence. and is clustered.\r\n\r\n2024-03-07 11:25:47,095 INFO impl.StdSchedulerFactory :: Quartz scheduler \'MetabaseScheduler\' initialized from default resource file in Quartz package: \'quartz.properties\'\r\n2024-03-07 11:25:47,095 INFO impl.StdSchedulerFactory :: Quartz scheduler version: 2.3.2\r\n2024-03-07 11:25:47,126 INFO core.QuartzScheduler :: Scheduler MetabaseScheduler_$_win10-hyperv1709781947079 started.\r\n2024-03-07 11:25:47,139 INFO core.QuartzScheduler :: Scheduler MetabaseScheduler_$_win10-hyperv1709781947079 shutting down.\r\n2024-03-07 11:25:47,141 INFO core.QuartzScheduler :: Scheduler MetabaseScheduler_$_win10-hyperv1709781947079 paused.\r\n\r\n2024-03-07 11:25:47,141 INFO core.QuartzScheduler :: Scheduler MetabaseScheduler_$_win10-hyperv1709781947079 shutdown complete.\r\n2024-03-07 11:25:47,532 INFO db.custom-migrations :: No forward migration for DowngradeDashboardTab\r\n\r\nUPDATE SUMMARY\r\nRun:                        265\r\nPreviously run:               0\r\nFiltered out:                18\r\n-------------------------------\r\nTotal change sets:          283\r\n\r\n\r\nFILTERED CHANGE SETS SUMMARY\r\nDBMS mismatch:               18\r\n\r\n2024-03-07 11:25:48,688 INFO db.liquibase :: Migration complete in 3.0 s\r\n2024-03-07 11:25:48,688 INFO db.setup :: Database Migrations Current ...\r\n2024-03-07 11:25:48,688 INFO metabase.util :: Database setup took 5.2 s\r\n2024-03-07 11:25:48,735 INFO metabase.core :: Looks like this is a new installation ... preparing setup wizard\r\n2024-03-07 11:25:48,844 INFO metabase.core :: Please use the following URL to setup your Metabase installation:\r\n\r\nhttp://localhost:3000/setup/\r\n\r\n\r\n2024-03-07 11:25:48,875 INFO metabase.events :: Loading events namespace: metabase.events.audit-log\r\n2024-03-07 11:25:48,938 INFO metabase.events :: Loading events namespace: metabase.events.driver-notifications\r\n2024-03-07 11:25:48,954 INFO metabase.events :: Loading events namespace: metabase.events.last-login\r\n2024-03-07 11:25:48,969 INFO metabase.events :: Loading events namespace: metabase.events.persisted-info\r\n2024-03-07 11:25:48,985 INFO metabase.events :: Loading events namespace: metabase.events.recent-views\r\n2024-03-07 11:25:48,985 INFO metabase.events :: Loading events namespace: metabase.events.revision\r\n2024-03-07 11:25:49,032 INFO metabase.events :: Loading events namespace: metabase.events.schema\r\n2024-03-07 11:25:49,032 INFO metabase.events :: Loading events namespace: metabase.events.sync-database\r\n2024-03-07 11:25:49,047 INFO metabase.events :: Loading events namespace: metabase.events.view-log\r\n2024-03-07 11:25:49,110 INFO metabase.sample-data :: Loading sample database\r\n2024-03-07 11:25:49,204 INFO util.files :: Extract file /sample-database.db.mv.db -> D:\\downloads\\plugins\\sample-database.db.mv.db\r\n2024-03-07 11:25:49,266 INFO driver.impl :: Initializing driver :sql...\r\n2024-03-07 11:25:49,266 INFO driver.impl :: Initializing driver :sql-jdbc...\r\n2024-03-07 11:25:49,266 INFO driver.impl :: Initializing driver :h2...\r\n2024-03-07 11:25:49,391 INFO task.sync-databases :: Scheduling sync/analyze for database 1: trigger: metabase.task.sync-and-analyze.trigger.1\r\n2024-03-07 11:25:49,391 INFO task.sync-databases :: Scheduling field-values for database 1: trigger: metabase.task.update-field-values.trigger.1\r\n2024-03-07 11:25:49,391 INFO sync.util :: STARTING: Sync h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:49,407 INFO sync.util :: STARTING: Sync metadata for h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:49,511 INFO sync.util :: STARTING: step \'\'sync-dbms-version\'\' for h2 Database 1 \'\'Sample Database\'\'\r\n\r\n2024-03-07 11:25:49,532 INFO sync.util :: FINISHED: step \'\'sync-dbms-version\'\' for h2 Database 1 \'\'Sample Database\'\' (30.9 ms)\r\n2024-03-07 11:25:49,548 INFO sync.util :: STARTING: step \'\'sync-timezone\'\' for h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:49,548 INFO sync-metadata.sync-timezone :: :h2 database 1 default timezone is ""Asia/Shanghai""\r\n2024-03-07 11:25:49,563 INFO sync.util :: FINISHED: step \'\'sync-timezone\'\' for h2 Database 1 \'\'Sample Database\'\' (20.3 ms)\r\n2024-03-07 11:25:49,563 INFO sync.util :: STARTING: step \'\'sync-tables\'\' for h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:49,594 INFO sync-metadata.tables :: Found new tables: (Table  \'\'PUBLIC.ANALYTIC_EVENTS\'\' Table  \'\'PUBLIC.FEEDBACK\'\' Table  \'\'PUBLIC.PEOPLE\'\' Table  \'\'PUBLIC.REVIEWS\'\' Table  \'\'PUBLIC.ORDERS\'\' Table  \'\'PUBLIC.ACCOUNTS\'\' Table  \'\'PUBLIC.INVOICES\'\' Table  \'\'PUBLIC.PRODUCTS\'\')\r\n2024-03-07 11:25:49,766 INFO sync-metadata.tables :: Updating table metadata for Table 8 \'\'PUBLIC.PRODUCTS\'\'\r\n2024-03-07 11:25:49,766 INFO sync-metadata.tables :: Updating table metadata for Table 3 \'\'PUBLIC.PEOPLE\'\'\r\n2024-03-07 11:25:49,766 INFO sync-metadata.tables :: Updating table metadata for Table 7 \'\'PUBLIC.INVOICES\'\'\r\n2024-03-07 11:25:49,766 INFO sync-metadata.tables :: Updating table metadata for Table 5 \'\'PUBLIC.ORDERS\'\'\r\n2024-03-07 11:25:49,782 INFO sync-metadata.tables :: Updating table metadata for Table 4 \'\'PUBLIC.REVIEWS\'\'\r\n2024-03-07 11:25:49,782 INFO sync-metadata.tables :: Updating table metadata for Table 2 \'\'PUBLIC.FEEDBACK\'\'\r\n2024-03-07 11:25:49,782 INFO sync-metadata.tables :: Updating table metadata for Table 1 \'\'PUBLIC.ANALYTIC_EVENTS\'\' 2024-03-07 11:25:49,782 INFO sync-metadata.tables :: Updating table metadata for Table 6 \'\'PUBLIC.ACCOUNTS\'\'\r\n2024-03-07 11:25:49,813 INFO sync.util :: FINISHED: step \'\'sync-tables\'\' for h2 Database 1 \'\'Sample Database\'\' (250.1 ms)\r\n2024-03-07 11:25:49,813 INFO sync.util :: STARTING: step \'\'sync-fields\'\' for h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:50,485 INFO sync.util :: FINISHED: step \'\'sync-fields\'\' for h2 Database 1 \'\'Sample Database\'\' (664.9 ms)\r\n2024-03-07 11:25:50,485 INFO sync.util :: STARTING: step \'\'sync-fks\'\' for h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:50,579 INFO sync-metadata.fks :: Marking foreign key from Table 1 \'\'PUBLIC.ANALYTIC_EVENTS\'\' Field 5 \'\'ACCOUNT_ID\'\' -> Table 6 \'\'PUBLIC.ACCOUNTS\'\' Field 48 \'\'ID\'\'\r\n2024-03-07 11:25:50,625 INFO sync-metadata.fks :: Marking foreign key from Table 2 \'\'PUBLIC.FEEDBACK\'\' Field 9 \'\'ACCOUNT_ID\'\' -> Table 6 \'\'PUBLIC.ACCOUNTS\'\' Field 48 \'\'ID\'\'\r\n2024-03-07 11:25:50,657 INFO sync-metadata.fks :: Marking foreign key from Table 4 \'\'PUBLIC.REVIEWS\'\' Field 32 \'\'PRODUCT_ID\'\' -> Table 8 \'\'PUBLIC.PRODUCTS\'\' Field 68 \'\'ID\'\'\r\n2024-03-07 11:25:50,688 INFO sync-metadata.fks :: Marking foreign key from Table 5 \'\'PUBLIC.ORDERS\'\' Field 40 \'\'USER_ID\'\' -> Table 3 \'\'PUBLIC.PEOPLE\'\' Field 15 \'\'ID\'\'\r\n2024-03-07 11:25:50,719 INFO sync-metadata.fks :: Marking foreign key from Table 5 \'\'PUBLIC.ORDERS\'\' Field 37 \'\'PRODUCT_ID\'\' -> Table 8 \'\'PUBLIC.PRODUCTS\'\' Field 68 \'\'ID\'\'\r\n2024-03-07 11:25:50,753 INFO sync-metadata.fks :: Marking foreign key from Table 7 \'\'PUBLIC.INVOICES\'\' Field 60 \'\'ACCOUNT_ID\'\' -> Table 6 \'\'PUBLIC.ACCOUNTS\'\' Field 48 \'\'ID\'\'\r\n2024-03-07 11:25:50,766 INFO sync.util :: FINISHED: step \'\'sync-fks\'\' for h2 Database 1 \'\'Sample Database\'\' (283.1 ms)\r\n2024-03-07 11:25:50,766 INFO sync.util :: STARTING: step \'\'sync-indexes\'\' for h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:50,954 INFO sync-metadata.indexes :: Marking Field 4 as indexed\r\n2024-03-07 11:25:50,954 INFO sync-metadata.indexes :: Marking Field 5 as indexed\r\n2024-03-07 11:25:50,985 INFO sync-metadata.indexes :: Marking Field 9 as indexed\r\n2024-03-07 11:25:50,985 INFO sync-metadata.indexes :: Marking Field 8 as indexed\r\n2024-03-07 11:25:51,016 INFO sync-metadata.indexes :: Marking Field 15 as indexed\r\n2024-03-07 11:25:51,032 INFO sync-metadata.indexes :: Marking Field 32 as indexed\r\n2024-03-07 11:25:51,032 INFO sync-metadata.indexes :: Marking Field 29 as indexed\r\n2024-03-07 11:25:51,141 INFO sync-metadata.indexes :: Marking Field 40 as indexed\r\n2024-03-07 11:25:51,141 INFO sync-metadata.indexes :: Marking Field 34 as indexed\r\n2024-03-07 11:25:51,141 INFO sync-metadata.indexes :: Marking Field 37 as indexed\r\n2024-03-07 11:25:51,188 INFO sync-metadata.indexes :: Marking Field 48 as indexed\r\n2024-03-07 11:25:51,219 INFO sync-metadata.indexes :: Marking Field 59 as indexed\r\n2024-03-07 11:25:51,219 INFO sync-metadata.indexes :: Marking Field 60 as indexed\r\n2024-03-07 11:25:51,251 INFO sync-metadata.indexes :: Marking Field 68 as indexed\r\n2024-03-07 11:25:51,266 INFO sync.util :: FINISHED: step \'\'sync-indexes\'\' for h2 Database 1 \'\'Sample Database\'\' (493.4 ms)\r\n2024-03-07 11:25:51,266 INFO sync.util :: STARTING: step \'\'sync-metabase-metadata\'\' for h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:51,594 INFO sync.util :: FINISHED: step \'\'sync-metabase-metadata\'\' for h2 Database 1 \'\'Sample Database\'\' (326.8 ms)\r\n2024-03-07 11:25:51,594 INFO sync.util :: STARTING: step \'\'sync-table-privileges\'\' for h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:51,594 INFO sync.util :: FINISHED: step \'\'sync-table-privileges\'\' for h2 Database 1 \'\'Sample Database\'\' (1.1 ms)\r\n2024-03-07 11:25:51,625 INFO sync.util :: FINISHED: Sync metadata for h2 Database 1 \'\'Sample Database\'\' (2.2 s)\r\n2024-03-07 11:25:51,641 INFO sync.util :: STARTING: Analyze data for h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:51,641 INFO sync.util :: STARTING: step \'\'fingerprint-fields\'\' for h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:53,485 INFO sync.analyze :: fingerprint-fields Analyzed [*****··················\r\n···························]    12% Table 3 \'\'PUBLIC.PEOPLE\'\'\r\n2024-03-07 11:25:54,907 INFO sync.analyze :: fingerprint-fields Analyzed [***********···············\r\n························]    24% Table 6 \'\'PUBLIC.ACCOUNTS\'\'\r\n2024-03-07 11:25:55,657 INFO sync.util :: FINISHED: step \'\'fingerprint-fields\'\' for h2 Database 1 \'\'Sample Database\'\' (4.0 s)\r\n2024-03-07 11:25:55,657 INFO sync.util :: STARTING: step \'\'classify-fields\'\' for h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:55,695 INFO sync.analyze :: classify-fields Analyzed [******************·············\r\n···················]    36% Table 1 \'\'PUBLIC.ANALYTIC_EVENTS\'\'\r\n2024-03-07 11:25:55,782 INFO sync.analyze :: classify-fields Analyzed [***********************···········\r\n················]    48% Table 4 \'\'PUBLIC.REVIEWS\'\'\r\n2024-03-07 11:25:55,891 INFO sync.analyze :: classify-fields Analyzed [******************************·······\r\n·············]    60% Table 7 \'\'PUBLIC.INVOICES\'\'\r\n2024-03-07 11:25:55,922 INFO sync.util :: FINISHED: step \'\'classify-fields\'\' for h2 Database 1 \'\'Sample Database\'\' (264.4 ms)\r\n2024-03-07 11:25:55,922 INFO sync.util :: STARTING: step \'\'classify-tables\'\' for h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:55,938 INFO sync.analyze :: classify-tables Analyzed [************************************····\r\n··········]    72% Table 2 \'\'PUBLIC.FEEDBACK\'\'\r\n2024-03-07 11:25:55,954 INFO sync.analyze :: classify-tables Analyzed [*****************************************··\r\n·······]    84% Table 5 \'\'PUBLIC.ORDERS\'\'\r\n2024-03-07 11:25:55,969 INFO sync.analyze :: classify-tables Analyzed [***********************************************···]    96% Table 8 \'\'PUBLIC.PRODUCTS\'\'\r\n2024-03-07 11:25:55,969 INFO sync.util :: FINISHED: step \'\'classify-tables\'\' for h2 Database 1 \'\'Sample Database\'\' (37.5 ms)\r\n2024-03-07 11:25:56,047 INFO sync.util :: FINISHED: Analyze data for h2 Database 1 \'\'Sample Database\'\' (4.4 s)\r\n2024-03-07 11:25:56,047 INFO sync.util :: STARTING: Cache field values in h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:56,047 INFO sync.util :: STARTING: step \'\'delete-expired-advanced-field-values\'\' for h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:56,329 INFO sync.util :: FINISHED: step \'\'delete-expired-advanced-field-values\'\' for h2 Database 1 \'\'Sample Database\'\' (281.8 ms)\r\n2024-03-07 11:25:56,344 INFO sync.util :: STARTING: step \'\'update-field-values\'\' for h2 Database 1 \'\'Sample Database\'\'\r\n2024-03-07 11:25:56,938 INFO models.field-values :: Field BODY was previously automatically set to show a list widget, but now has 231 values. Switching Field to use a search widget instead.\r\n2024-03-07 11:25:57,485 INFO sync.util :: FINISHED: step \'\'update-field-values\'\' for h2 Database 1 \'\'Sample Database\'\' (1.1 s)\r\n2024-03-07 11:25:57,485 INFO sync.util :: FINISHED: Cache field values in h2 Database 1 \'\'Sample Database\'\' (1.4 s) 2024-03-07 11:25:57,485 INFO sync.util :: FINISHED: Sync h2 Database 1 \'\'Sample Database\'\' (8.1 s)\r\n2024-03-07 11:25:57,501 INFO impl.StdSchedulerFactory :: Using default implementation for ThreadExecutor\r\n2024-03-07 11:25:57,501 INFO core.SchedulerSignalerImpl :: Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl\r\n2024-03-07 11:25:57,501 INFO core.QuartzScheduler :: Quartz Scheduler v.2.3.2 created.\r\n2024-03-07 11:25:57,501 INFO jdbcjobstore.JobStoreTX :: Using db table-based data access locking (synchronization). 2024-03-07 11:25:57,516 INFO jdbcjobstore.JobStoreTX :: JobStoreTX initialized.\r\n2024-03-07 11:25:57,516 INFO core.QuartzScheduler :: Scheduler meta-data: Quartz Scheduler (v2.3.2) \'MetabaseScheduler\' with instanceId \'win10-hyperv1709781957501\'\r\n  Scheduler class: \'org.quartz.core.QuartzScheduler\' - running locally.\r\n  NOT STARTED.\r\n  Currently in standby mode.\r\n  Number of jobs executed: 0\r\n  Using thread pool \'org.quartz.simpl.SimpleThreadPool\' - with 10 threads.\r\n  Using job-store \'org.quartz.impl.jdbcjobstore.JobStoreTX\' - which supports persistence. and is clustered.\r\n\r\n2024-03-07 11:25:57,516 INFO impl.StdSchedulerFactory :: Quartz scheduler \'MetabaseScheduler\' initialized from default resource file in Quartz package: \'quartz.properties\'\r\n2024-03-07 11:25:57,516 INFO impl.StdSchedulerFactory :: Quartz scheduler version: 2.3.2\r\n2024-03-07 11:25:57,610 INFO core.QuartzScheduler :: Scheduler MetabaseScheduler_$_win10-hyperv1709781957501 paused.\r\n\r\n2024-03-07 11:25:57,610 INFO metabase.task :: Task scheduler initialized into standby mode.\r\n2024-03-07 11:25:57,610 INFO metabase.task :: Initializing task SyncDatabases\r\n2024-03-07 11:25:57,672 INFO models.database :: :h2 Database \'Sample Database\' sync/analyze schedules have changed!\r\n\r\n Sync metadata was: \'0 50 * * * ? *\' is now: \'0 59 * * * ? *\'\r\n Cache FieldValues was: \'0 50 0 * * ? *\', is now: \'0 0 4 * * ? *\'\r\n2024-03-07 11:25:57,704 INFO task.sync-databases :: Scheduling sync/analyze for database 1: trigger: metabase.task.sync-and-analyze.trigger.1\r\n2024-03-07 11:25:57,719 INFO task.sync-databases :: Scheduling field-values for database 1: trigger: metabase.task.update-field-values.trigger.1\r\n2024-03-07 11:25:57,735 INFO task.sync-databases :: Updated default schedules for %d databases 1\r\n2024-03-07 11:25:57,751 INFO metabase.task :: Initializing task PersistRefresh\r\n2024-03-07 11:25:57,751 INFO metabase.task :: Initializing task CheckForNewVersions\r\n2024-03-07 11:25:57,751 INFO metabase.task :: Initializing task PersistPrune\r\n2024-03-07 11:25:57,766 INFO metabase.task :: Initializing task SendAnonymousUsageStats\r\n2024-03-07 11:25:57,766 INFO metabase.task :: Initializing task ModelIndexValues\r\n2024-03-07 11:25:57,782 INFO metabase.task :: Initializing task RefreshSlackChannelsAndUsers\r\n2024-03-07 11:25:57,782 INFO metabase.task :: Initializing task TruncateAuditTables\r\n2024-03-07 11:25:57,782 INFO metabase.task :: Initializing task SendPulses\r\n2024-03-07 11:25:57,782 INFO metabase.task :: Initializing task SendFollowUpEmails\r\n2024-03-07 11:25:57,782 INFO metabase.task :: Initializing task SendCreatorSentimentEmails\r\n2024-03-07 11:25:57,797 INFO metabase.task :: Initializing task TaskHistoryCleanup\r\n2024-03-07 11:25:57,797 INFO metabase.task :: Initializing task SendWarnPulseRemovalEmail\r\n2024-03-07 11:25:57,797 INFO core.QuartzScheduler :: Scheduler MetabaseScheduler_$_win10-hyperv1709781957501 started.\r\n2024-03-07 11:25:57,837 INFO metabase.task :: Task scheduler started\r\n2024-03-07 11:25:57,855 INFO task.refresh-slack-channel-user-cache :: Slack is not configured, not refreshing slack user/channel cache.\r\n2024-03-07 11:25:57,864 INFO metabase.core :: Metabase Initialization COMPLETE in 31.8 s\r\n2024-03-07 11:26:05,314 INFO jdbcjobstore.JobStoreTX :: ClusterManager: detected 1 failed or restarted instances.\r\n2024-03-07 11:26:05,315 INFO jdbcjobstore.JobStoreTX :: ClusterManager: Scanning for instance ""win10-hyperv1709781947079""\'s failed in-progress jobs.\r\n~~~', 'created_at': datetime.datetime(2024, 3, 7, 3, 27, 47, tzinfo=datetime.timezone.utc)}]","paoliniluis on (2024-02-22 12:54:51 UTC): Please try with Java 11

armgong (Issue Creator) on (2024-02-22 13:19:03 UTC): test with jdk 11.0.22_7 and 17.0.10+7 and 21.0.2_13 , windows 10 LSTC and windows 11 22H2 and Windows server 2022 , all them run failed.
win10 and win11 are running  in windows 2022 hyper-v host , Windows server 2022  run on bare metal.

0.47.x is ok , but 0.48 and master branch build failed start on windows. 
Furthermore 0.47.x and 0.48 and master branch run ok on linux

paoliniluis on (2024-02-22 13:58:49 UTC): why do you run the master branch and not the release?

armgong (Issue Creator) on (2024-02-22 14:34:12 UTC): Curiosity, after found 0.47.x run ok ,but 0.48.x failed to start . so  move to master branch see the problem  still exist or not ?

armgong (Issue Creator) on (2024-02-22 15:01:46 UTC): another report about this problem.
https://discourse.metabase.com/t/metabase-installation-fail/80878

paoliniluis on (2024-02-22 16:21:26 UTC): Just tested it, it won't work

armgong (Issue Creator) on (2024-02-23 01:32:38 UTC): a bit more info maybe help to locate the bug.
fisrt install and config 0.47, then run  0.48 on h2 database 0.47 created , metabase will start successful.

rkapl123 on (2024-02-25 13:49:21 UTC): I can confirm that this works, however the error messages are still there.

grimlinda56 on (2024-03-02 19:46:25 UTC): Just FYI- Downloaded release version 48.7 today and experienced the exact same problem.  Downloaded 47.13 and it worked no prob.

EDIflyer on (2024-03-03 16:12:16 UTC): Glad to have found this bug as was pulling my hair out trying to work out what was going on!

Fresh VM
Running openJDK 17.0.6
Downloaded latest Metabase version from website - v0.48.7 (c192db1)

Could get it to display initial loading splashscreen on localhost:3000 but then would crash out.

Full startup as follows:
[startup_output.txt](https://github.com/metabase/metabase/files/14473670/startup_output.txt)

(tried a few other v.0.48 versions and v.0.49-RC1 but no change, v.0.47 works OK for fresh usage)

qnkhuat (Assginee) on (2024-03-07 01:41:44 UTC): Here is the fix https://github.com/metabase/metabase/pull/39739, I've tested it using a VM. It would be nice if someone who runs native Windows could test it. You can download a jar from our CI [here](https://github.com/metabase/metabase/actions/runs/8181500560?pr=39739)

armgong (Issue Creator) on (2024-03-07 03:27:47 UTC): thanks , test on win10 , issue fixed.
~~~
java -jar metabase.jar
Warning: environ value C:\Program Files\Eclipse Adoptium\jdk-17.0.10.7-hotspot\ for key :java-home has been overwritten with C:\Program Files\Eclipse Adoptium\jdk-17.0.10.7-hotspot
2024-03-07 11:25:31,485 INFO metabase.util :: Maximum memory available to JVM: 4.0 GB
2024-03-07 11:25:33,407 WARN db.env :: WARNING: Using Metabase with an H2 application database is not recommended for production deployments. For production deployments, we highly recommend using Postgres, MySQL, or MariaDB instead. If you decide to continue to use H2, please be sure to back up the database file regularly. For more information, see https://metabase.com/docs/latest/operations-guide/migrating-from-h2.html
2024-03-07 11:25:33,594 INFO util.encryption :: Saved credentials encryption is DISABLED for this Metabase instance.

 For more information, see https://metabase.com/docs/latest/operations-guide/encrypting-database-details-at-rest.html
2024-03-07 11:25:39,485 INFO driver.impl :: Registered abstract driver :sql
2024-03-07 11:25:39,500 INFO driver.impl :: Registered abstract driver :sql-jdbc (parents: [:sql])
2024-03-07 11:25:39,500 INFO metabase.util :: Load driver :sql-jdbc took 79.6 ms
2024-03-07 11:25:39,500 INFO driver.impl :: Registered driver :h2 (parents: [:sql-jdbc])
2024-03-07 11:25:39,688 INFO driver.impl :: Registered driver :mysql (parents: [:sql-jdbc])
2024-03-07 11:25:39,735 INFO driver.impl :: Registered driver :postgres (parents: [:sql-jdbc])
2024-03-07 11:25:41,391 INFO metabase.core ::
Metabase vUNKNOWN (4e1dc28)

Copyright ? 2024 Metabase, Inc.

Metabase Enterprise Edition extensions are NOT PRESENT.
2024-03-07 11:25:41,407 INFO metabase.core :: Starting Metabase in STANDALONE mode
2024-03-07 11:25:41,454 INFO metabase.server :: Launching Embedded Jetty Webserver with config:
 {:port 3000}

2024-03-07 11:25:41,532 INFO metabase.core :: Starting Metabase version vUNKNOWN (4e1dc28) ...
2024-03-07 11:25:41,532 INFO metabase.core :: System info:
 {""file.encoding"" ""GBK"",
 ""java.runtime.name"" ""OpenJDK Runtime Environment"",
 ""java.runtime.version"" ""17.0.10+7"",
 ""java.vendor"" ""Eclipse Adoptium"",
 ""java.vendor.url"" ""https://adoptium.net/"",
 ""java.version"" ""17.0.10"",
 ""java.vm.name"" ""OpenJDK 64-Bit Server VM"",
 ""java.vm.version"" ""17.0.10+7"",
 ""os.name"" ""Windows 10"",
 ""os.version"" ""10.0"",
 ""user.language"" ""zh"",
 ""user.timezone"" ""Asia/Shanghai""}

2024-03-07 11:25:41,532 INFO metabase.plugins :: Loading plugins in D:\downloads\plugins...
2024-03-07 11:25:41,719 INFO util.files :: Extract file /modules/druid.metabase-driver.jar -> D:\downloads\plugins\druid.metabase-driver.jar
2024-03-07 11:25:41,750 INFO util.files :: Extract file /modules/googleanalytics.metabase-driver.jar -> D:\downloads\plugins\googleanalytics.metabase-driver.jar
2024-03-07 11:25:41,797 INFO util.files :: Extract file /modules/sparksql.metabase-driver.jar -> D:\downloads\plugins\sparksql.metabase-driver.jar
2024-03-07 11:25:41,891 INFO util.files :: Extract file /modules/bigquery-cloud-sdk.metabase-driver.jar -> D:\downloads\plugins\bigquery-cloud-sdk.metabase-driver.jar
2024-03-07 11:25:42,188 INFO util.files :: Extract file /modules/sqlite.metabase-driver.jar -> D:\downloads\plugins\sqlite.metabase-driver.jar
2024-03-07 11:25:42,235 INFO util.files :: Extract file /modules/snowflake.metabase-driver.jar -> D:\downloads\plugins\snowflake.metabase-driver.jar
2024-03-07 11:25:42,735 INFO util.files :: Extract file /modules/oracle.metabase-driver.jar -> D:\downloads\plugins\oracle.metabase-driver.jar
2024-03-07 11:25:42,735 INFO util.files :: Extract file /modules/presto-jdbc.metabase-driver.jar -> D:\downloads\plugins\presto-jdbc.metabase-driver.jar
2024-03-07 11:25:42,829 INFO util.files :: Extract file /modules/vertica.metabase-driver.jar -> D:\downloads\plugins\vertica.metabase-driver.jar
2024-03-07 11:25:42,829 INFO util.files :: Extract file /modules/athena.metabase-driver.jar -> D:\downloads\plugins\athena.metabase-driver.jar
2024-03-07 11:25:42,954 INFO util.files :: Extract file /modules/redshift.metabase-driver.jar -> D:\downloads\plugins\redshift.metabase-driver.jar
2024-03-07 11:25:42,954 INFO util.files :: Extract file /modules/sqlserver.metabase-driver.jar -> D:\downloads\plugins\sqlserver.metabase-driver.jar
2024-03-07 11:25:42,969 INFO util.files :: Extract file /modules/mongo.metabase-driver.jar -> D:\downloads\plugins\mongo.metabase-driver.jar
2024-03-07 11:25:43,219 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :athena...
2024-03-07 11:25:43,219 INFO driver.impl :: Registered driver :athena (parents: [:sql-jdbc])
2024-03-07 11:25:43,266 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :bigquery-cloud-sdk...
2024-03-07 11:25:43,266 INFO driver.impl :: Registered driver :bigquery-cloud-sdk (parents: [:sql])
2024-03-07 11:25:43,266 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :druid...
2024-03-07 11:25:43,266 INFO driver.impl :: Registered driver :druid
2024-03-07 11:25:43,282 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :googleanalytics...
2024-03-07 11:25:43,282 INFO driver.impl :: Registered driver :googleanalytics
2024-03-07 11:25:43,297 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :mongo...
2024-03-07 11:25:43,297 INFO driver.impl :: Registered driver :mongo
2024-03-07 11:25:43,329 INFO plugins.dependencies :: Metabase cannot initialize plugin Metabase Oracle Driver due to required dependencies. Metabase requires the Oracle JDBC driver in order to connect to Oracle databases, but we can't ship it as part of Metabase due to licensing restrictions. See https://metabase.com/docs/latest/administration-guide/databases/oracle.html for more details.

2024-03-07 11:25:43,329 INFO plugins.dependencies :: Metabase Oracle Driver dependency {:class oracle.jdbc.OracleDriver} satisfied? false
2024-03-07 11:25:43,329 INFO plugins.dependencies :: Plugins with unsatisfied deps: [""Metabase Oracle Driver""]
2024-03-07 11:25:43,375 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :presto-jdbc...
2024-03-07 11:25:43,375 INFO driver.impl :: Registered driver :presto-jdbc (parents: [:sql-jdbc])
2024-03-07 11:25:43,375 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :redshift...
2024-03-07 11:25:43,375 INFO driver.impl :: Registered driver :redshift (parents: [:postgres])
2024-03-07 11:25:43,407 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :snowflake...
2024-03-07 11:25:43,407 INFO driver.impl :: Registered driver :snowflake (parents: [:sql-jdbc])
2024-03-07 11:25:43,422 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :hive-like...
2024-03-07 11:25:43,438 INFO driver.impl :: Registered abstract driver :hive-like (parents: [:sql-jdbc])
2024-03-07 11:25:43,438 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :sparksql...
2024-03-07 11:25:43,438 INFO driver.impl :: Registered driver :sparksql (parents: [:hive-like])
2024-03-07 11:25:43,438 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :sqlite...
2024-03-07 11:25:43,454 INFO driver.impl :: Registered driver :sqlite (parents: [:sql-jdbc])
2024-03-07 11:25:43,485 DEBUG plugins.lazy-loaded-driver :: Registering lazy loading driver :sqlserver...
2024-03-07 11:25:43,485 INFO driver.impl :: Registered driver :sqlserver (parents: [:sql-jdbc])
2024-03-07 11:25:43,485 INFO plugins.dependencies :: Metabase cannot initialize plugin Metabase Vertica Driver due to required dependencies. Metabase requires the Vertica JDBC driver in order to connect to Vertica databases, but we can't ship it as part of Metabase due to licensing restrictions. See https://metabase.com/docs/latest/administration-guide/databases/vertica.html for more details.

2024-03-07 11:25:43,485 INFO plugins.dependencies :: Metabase Vertica Driver dependency {:class com.vertica.jdbc.Driver} satisfied? false
2024-03-07 11:25:43,485 INFO plugins.dependencies :: Plugins with unsatisfied deps: [""Metabase Oracle Driver"" ""Metabase Vertica Driver""]
2024-03-07 11:25:43,500 INFO metabase.core :: Setting up and migrating Metabase DB. Please sit tight, this may take a minute...
2024-03-07 11:25:43,516 INFO db.setup :: Verifying h2 Database Connection ...
2024-03-07 11:25:43,813 INFO db.setup :: Successfully verified H2 2.1.214 (2022-06-13) application database connection.
2024-03-07 11:25:43,813 INFO db.setup :: Checking if a database downgrade is required...
2024-03-07 11:25:44,547 INFO db.setup :: Running Database Migrations...
2024-03-07 11:25:44,547 INFO db.setup :: Setting up Liquibase...
2024-03-07 11:25:44,766 INFO db.liquibase :: Updating liquibase table to reflect consolidated changeset filenames
2024-03-07 11:25:44,782 INFO db.liquibase :: No migration lock found.
2024-03-07 11:25:44,782 INFO db.liquibase :: Migration lock acquired.
2024-03-07 11:25:44,797 INFO db.setup :: Liquibase is ready.
2024-03-07 11:25:44,797 INFO db.liquibase :: Checking if Database has unrun migrations...
2024-03-07 11:25:45,422 INFO db.liquibase :: Database has unrun migrations. Checking if migration lock is taken...
2024-03-07 11:25:45,438 INFO db.liquibase :: No migration lock found.
2024-03-07 11:25:45,438 INFO db.liquibase :: Migration lock acquired.
2024-03-07 11:25:45,704 INFO db.liquibase :: Running 265 migrations ...
2024-03-07 11:25:47,079 INFO impl.StdSchedulerFactory :: Using default implementation for ThreadExecutor
2024-03-07 11:25:47,095 INFO core.SchedulerSignalerImpl :: Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2024-03-07 11:25:47,095 INFO core.QuartzScheduler :: Quartz Scheduler v.2.3.2 created.
2024-03-07 11:25:47,095 INFO jdbcjobstore.JobStoreTX :: Using db table-based data access locking (synchronization). 2024-03-07 11:25:47,095 INFO jdbcjobstore.JobStoreTX :: JobStoreTX initialized.
2024-03-07 11:25:47,095 INFO core.QuartzScheduler :: Scheduler meta-data: Quartz Scheduler (v2.3.2) 'MetabaseScheduler' with instanceId 'win10-hyperv1709781947079'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is clustered.

2024-03-07 11:25:47,095 INFO impl.StdSchedulerFactory :: Quartz scheduler 'MetabaseScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2024-03-07 11:25:47,095 INFO impl.StdSchedulerFactory :: Quartz scheduler version: 2.3.2
2024-03-07 11:25:47,126 INFO core.QuartzScheduler :: Scheduler MetabaseScheduler_$_win10-hyperv1709781947079 started.
2024-03-07 11:25:47,139 INFO core.QuartzScheduler :: Scheduler MetabaseScheduler_$_win10-hyperv1709781947079 shutting down.
2024-03-07 11:25:47,141 INFO core.QuartzScheduler :: Scheduler MetabaseScheduler_$_win10-hyperv1709781947079 paused.

2024-03-07 11:25:47,141 INFO core.QuartzScheduler :: Scheduler MetabaseScheduler_$_win10-hyperv1709781947079 shutdown complete.
2024-03-07 11:25:47,532 INFO db.custom-migrations :: No forward migration for DowngradeDashboardTab

UPDATE SUMMARY
Run:                        265
Previously run:               0
Filtered out:                18
-------------------------------
Total change sets:          283


FILTERED CHANGE SETS SUMMARY
DBMS mismatch:               18

2024-03-07 11:25:48,688 INFO db.liquibase :: Migration complete in 3.0 s
2024-03-07 11:25:48,688 INFO db.setup :: Database Migrations Current ...
2024-03-07 11:25:48,688 INFO metabase.util :: Database setup took 5.2 s
2024-03-07 11:25:48,735 INFO metabase.core :: Looks like this is a new installation ... preparing setup wizard
2024-03-07 11:25:48,844 INFO metabase.core :: Please use the following URL to setup your Metabase installation:

http://localhost:3000/setup/


2024-03-07 11:25:48,875 INFO metabase.events :: Loading events namespace: metabase.events.audit-log
2024-03-07 11:25:48,938 INFO metabase.events :: Loading events namespace: metabase.events.driver-notifications
2024-03-07 11:25:48,954 INFO metabase.events :: Loading events namespace: metabase.events.last-login
2024-03-07 11:25:48,969 INFO metabase.events :: Loading events namespace: metabase.events.persisted-info
2024-03-07 11:25:48,985 INFO metabase.events :: Loading events namespace: metabase.events.recent-views
2024-03-07 11:25:48,985 INFO metabase.events :: Loading events namespace: metabase.events.revision
2024-03-07 11:25:49,032 INFO metabase.events :: Loading events namespace: metabase.events.schema
2024-03-07 11:25:49,032 INFO metabase.events :: Loading events namespace: metabase.events.sync-database
2024-03-07 11:25:49,047 INFO metabase.events :: Loading events namespace: metabase.events.view-log
2024-03-07 11:25:49,110 INFO metabase.sample-data :: Loading sample database
2024-03-07 11:25:49,204 INFO util.files :: Extract file /sample-database.db.mv.db -> D:\downloads\plugins\sample-database.db.mv.db
2024-03-07 11:25:49,266 INFO driver.impl :: Initializing driver :sql...
2024-03-07 11:25:49,266 INFO driver.impl :: Initializing driver :sql-jdbc...
2024-03-07 11:25:49,266 INFO driver.impl :: Initializing driver :h2...
2024-03-07 11:25:49,391 INFO task.sync-databases :: Scheduling sync/analyze for database 1: trigger: metabase.task.sync-and-analyze.trigger.1
2024-03-07 11:25:49,391 INFO task.sync-databases :: Scheduling field-values for database 1: trigger: metabase.task.update-field-values.trigger.1
2024-03-07 11:25:49,391 INFO sync.util :: STARTING: Sync h2 Database 1 ''Sample Database''
2024-03-07 11:25:49,407 INFO sync.util :: STARTING: Sync metadata for h2 Database 1 ''Sample Database''
2024-03-07 11:25:49,511 INFO sync.util :: STARTING: step ''sync-dbms-version'' for h2 Database 1 ''Sample Database''

2024-03-07 11:25:49,532 INFO sync.util :: FINISHED: step ''sync-dbms-version'' for h2 Database 1 ''Sample Database'' (30.9 ms)
2024-03-07 11:25:49,548 INFO sync.util :: STARTING: step ''sync-timezone'' for h2 Database 1 ''Sample Database''
2024-03-07 11:25:49,548 INFO sync-metadata.sync-timezone :: :h2 database 1 default timezone is ""Asia/Shanghai""
2024-03-07 11:25:49,563 INFO sync.util :: FINISHED: step ''sync-timezone'' for h2 Database 1 ''Sample Database'' (20.3 ms)
2024-03-07 11:25:49,563 INFO sync.util :: STARTING: step ''sync-tables'' for h2 Database 1 ''Sample Database''
2024-03-07 11:25:49,594 INFO sync-metadata.tables :: Found new tables: (Table  ''PUBLIC.ANALYTIC_EVENTS'' Table  ''PUBLIC.FEEDBACK'' Table  ''PUBLIC.PEOPLE'' Table  ''PUBLIC.REVIEWS'' Table  ''PUBLIC.ORDERS'' Table  ''PUBLIC.ACCOUNTS'' Table  ''PUBLIC.INVOICES'' Table  ''PUBLIC.PRODUCTS'')
2024-03-07 11:25:49,766 INFO sync-metadata.tables :: Updating table metadata for Table 8 ''PUBLIC.PRODUCTS''
2024-03-07 11:25:49,766 INFO sync-metadata.tables :: Updating table metadata for Table 3 ''PUBLIC.PEOPLE''
2024-03-07 11:25:49,766 INFO sync-metadata.tables :: Updating table metadata for Table 7 ''PUBLIC.INVOICES''
2024-03-07 11:25:49,766 INFO sync-metadata.tables :: Updating table metadata for Table 5 ''PUBLIC.ORDERS''
2024-03-07 11:25:49,782 INFO sync-metadata.tables :: Updating table metadata for Table 4 ''PUBLIC.REVIEWS''
2024-03-07 11:25:49,782 INFO sync-metadata.tables :: Updating table metadata for Table 2 ''PUBLIC.FEEDBACK''
2024-03-07 11:25:49,782 INFO sync-metadata.tables :: Updating table metadata for Table 1 ''PUBLIC.ANALYTIC_EVENTS'' 2024-03-07 11:25:49,782 INFO sync-metadata.tables :: Updating table metadata for Table 6 ''PUBLIC.ACCOUNTS''
2024-03-07 11:25:49,813 INFO sync.util :: FINISHED: step ''sync-tables'' for h2 Database 1 ''Sample Database'' (250.1 ms)
2024-03-07 11:25:49,813 INFO sync.util :: STARTING: step ''sync-fields'' for h2 Database 1 ''Sample Database''
2024-03-07 11:25:50,485 INFO sync.util :: FINISHED: step ''sync-fields'' for h2 Database 1 ''Sample Database'' (664.9 ms)
2024-03-07 11:25:50,485 INFO sync.util :: STARTING: step ''sync-fks'' for h2 Database 1 ''Sample Database''
2024-03-07 11:25:50,579 INFO sync-metadata.fks :: Marking foreign key from Table 1 ''PUBLIC.ANALYTIC_EVENTS'' Field 5 ''ACCOUNT_ID'' -> Table 6 ''PUBLIC.ACCOUNTS'' Field 48 ''ID''
2024-03-07 11:25:50,625 INFO sync-metadata.fks :: Marking foreign key from Table 2 ''PUBLIC.FEEDBACK'' Field 9 ''ACCOUNT_ID'' -> Table 6 ''PUBLIC.ACCOUNTS'' Field 48 ''ID''
2024-03-07 11:25:50,657 INFO sync-metadata.fks :: Marking foreign key from Table 4 ''PUBLIC.REVIEWS'' Field 32 ''PRODUCT_ID'' -> Table 8 ''PUBLIC.PRODUCTS'' Field 68 ''ID''
2024-03-07 11:25:50,688 INFO sync-metadata.fks :: Marking foreign key from Table 5 ''PUBLIC.ORDERS'' Field 40 ''USER_ID'' -> Table 3 ''PUBLIC.PEOPLE'' Field 15 ''ID''
2024-03-07 11:25:50,719 INFO sync-metadata.fks :: Marking foreign key from Table 5 ''PUBLIC.ORDERS'' Field 37 ''PRODUCT_ID'' -> Table 8 ''PUBLIC.PRODUCTS'' Field 68 ''ID''
2024-03-07 11:25:50,753 INFO sync-metadata.fks :: Marking foreign key from Table 7 ''PUBLIC.INVOICES'' Field 60 ''ACCOUNT_ID'' -> Table 6 ''PUBLIC.ACCOUNTS'' Field 48 ''ID''
2024-03-07 11:25:50,766 INFO sync.util :: FINISHED: step ''sync-fks'' for h2 Database 1 ''Sample Database'' (283.1 ms)
2024-03-07 11:25:50,766 INFO sync.util :: STARTING: step ''sync-indexes'' for h2 Database 1 ''Sample Database''
2024-03-07 11:25:50,954 INFO sync-metadata.indexes :: Marking Field 4 as indexed
2024-03-07 11:25:50,954 INFO sync-metadata.indexes :: Marking Field 5 as indexed
2024-03-07 11:25:50,985 INFO sync-metadata.indexes :: Marking Field 9 as indexed
2024-03-07 11:25:50,985 INFO sync-metadata.indexes :: Marking Field 8 as indexed
2024-03-07 11:25:51,016 INFO sync-metadata.indexes :: Marking Field 15 as indexed
2024-03-07 11:25:51,032 INFO sync-metadata.indexes :: Marking Field 32 as indexed
2024-03-07 11:25:51,032 INFO sync-metadata.indexes :: Marking Field 29 as indexed
2024-03-07 11:25:51,141 INFO sync-metadata.indexes :: Marking Field 40 as indexed
2024-03-07 11:25:51,141 INFO sync-metadata.indexes :: Marking Field 34 as indexed
2024-03-07 11:25:51,141 INFO sync-metadata.indexes :: Marking Field 37 as indexed
2024-03-07 11:25:51,188 INFO sync-metadata.indexes :: Marking Field 48 as indexed
2024-03-07 11:25:51,219 INFO sync-metadata.indexes :: Marking Field 59 as indexed
2024-03-07 11:25:51,219 INFO sync-metadata.indexes :: Marking Field 60 as indexed
2024-03-07 11:25:51,251 INFO sync-metadata.indexes :: Marking Field 68 as indexed
2024-03-07 11:25:51,266 INFO sync.util :: FINISHED: step ''sync-indexes'' for h2 Database 1 ''Sample Database'' (493.4 ms)
2024-03-07 11:25:51,266 INFO sync.util :: STARTING: step ''sync-metabase-metadata'' for h2 Database 1 ''Sample Database''
2024-03-07 11:25:51,594 INFO sync.util :: FINISHED: step ''sync-metabase-metadata'' for h2 Database 1 ''Sample Database'' (326.8 ms)
2024-03-07 11:25:51,594 INFO sync.util :: STARTING: step ''sync-table-privileges'' for h2 Database 1 ''Sample Database''
2024-03-07 11:25:51,594 INFO sync.util :: FINISHED: step ''sync-table-privileges'' for h2 Database 1 ''Sample Database'' (1.1 ms)
2024-03-07 11:25:51,625 INFO sync.util :: FINISHED: Sync metadata for h2 Database 1 ''Sample Database'' (2.2 s)
2024-03-07 11:25:51,641 INFO sync.util :: STARTING: Analyze data for h2 Database 1 ''Sample Database''
2024-03-07 11:25:51,641 INFO sync.util :: STARTING: step ''fingerprint-fields'' for h2 Database 1 ''Sample Database''
2024-03-07 11:25:53,485 INFO sync.analyze :: fingerprint-fields Analyzed [*****··················
···························]    12% Table 3 ''PUBLIC.PEOPLE''
2024-03-07 11:25:54,907 INFO sync.analyze :: fingerprint-fields Analyzed [***********···············
························]    24% Table 6 ''PUBLIC.ACCOUNTS''
2024-03-07 11:25:55,657 INFO sync.util :: FINISHED: step ''fingerprint-fields'' for h2 Database 1 ''Sample Database'' (4.0 s)
2024-03-07 11:25:55,657 INFO sync.util :: STARTING: step ''classify-fields'' for h2 Database 1 ''Sample Database''
2024-03-07 11:25:55,695 INFO sync.analyze :: classify-fields Analyzed [******************·············
···················]    36% Table 1 ''PUBLIC.ANALYTIC_EVENTS''
2024-03-07 11:25:55,782 INFO sync.analyze :: classify-fields Analyzed [***********************···········
················]    48% Table 4 ''PUBLIC.REVIEWS''
2024-03-07 11:25:55,891 INFO sync.analyze :: classify-fields Analyzed [******************************·······
·············]    60% Table 7 ''PUBLIC.INVOICES''
2024-03-07 11:25:55,922 INFO sync.util :: FINISHED: step ''classify-fields'' for h2 Database 1 ''Sample Database'' (264.4 ms)
2024-03-07 11:25:55,922 INFO sync.util :: STARTING: step ''classify-tables'' for h2 Database 1 ''Sample Database''
2024-03-07 11:25:55,938 INFO sync.analyze :: classify-tables Analyzed [************************************····
··········]    72% Table 2 ''PUBLIC.FEEDBACK''
2024-03-07 11:25:55,954 INFO sync.analyze :: classify-tables Analyzed [*****************************************··
·······]    84% Table 5 ''PUBLIC.ORDERS''
2024-03-07 11:25:55,969 INFO sync.analyze :: classify-tables Analyzed [***********************************************···]    96% Table 8 ''PUBLIC.PRODUCTS''
2024-03-07 11:25:55,969 INFO sync.util :: FINISHED: step ''classify-tables'' for h2 Database 1 ''Sample Database'' (37.5 ms)
2024-03-07 11:25:56,047 INFO sync.util :: FINISHED: Analyze data for h2 Database 1 ''Sample Database'' (4.4 s)
2024-03-07 11:25:56,047 INFO sync.util :: STARTING: Cache field values in h2 Database 1 ''Sample Database''
2024-03-07 11:25:56,047 INFO sync.util :: STARTING: step ''delete-expired-advanced-field-values'' for h2 Database 1 ''Sample Database''
2024-03-07 11:25:56,329 INFO sync.util :: FINISHED: step ''delete-expired-advanced-field-values'' for h2 Database 1 ''Sample Database'' (281.8 ms)
2024-03-07 11:25:56,344 INFO sync.util :: STARTING: step ''update-field-values'' for h2 Database 1 ''Sample Database''
2024-03-07 11:25:56,938 INFO models.field-values :: Field BODY was previously automatically set to show a list widget, but now has 231 values. Switching Field to use a search widget instead.
2024-03-07 11:25:57,485 INFO sync.util :: FINISHED: step ''update-field-values'' for h2 Database 1 ''Sample Database'' (1.1 s)
2024-03-07 11:25:57,485 INFO sync.util :: FINISHED: Cache field values in h2 Database 1 ''Sample Database'' (1.4 s) 2024-03-07 11:25:57,485 INFO sync.util :: FINISHED: Sync h2 Database 1 ''Sample Database'' (8.1 s)
2024-03-07 11:25:57,501 INFO impl.StdSchedulerFactory :: Using default implementation for ThreadExecutor
2024-03-07 11:25:57,501 INFO core.SchedulerSignalerImpl :: Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2024-03-07 11:25:57,501 INFO core.QuartzScheduler :: Quartz Scheduler v.2.3.2 created.
2024-03-07 11:25:57,501 INFO jdbcjobstore.JobStoreTX :: Using db table-based data access locking (synchronization). 2024-03-07 11:25:57,516 INFO jdbcjobstore.JobStoreTX :: JobStoreTX initialized.
2024-03-07 11:25:57,516 INFO core.QuartzScheduler :: Scheduler meta-data: Quartz Scheduler (v2.3.2) 'MetabaseScheduler' with instanceId 'win10-hyperv1709781957501'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.impl.jdbcjobstore.JobStoreTX' - which supports persistence. and is clustered.

2024-03-07 11:25:57,516 INFO impl.StdSchedulerFactory :: Quartz scheduler 'MetabaseScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2024-03-07 11:25:57,516 INFO impl.StdSchedulerFactory :: Quartz scheduler version: 2.3.2
2024-03-07 11:25:57,610 INFO core.QuartzScheduler :: Scheduler MetabaseScheduler_$_win10-hyperv1709781957501 paused.

2024-03-07 11:25:57,610 INFO metabase.task :: Task scheduler initialized into standby mode.
2024-03-07 11:25:57,610 INFO metabase.task :: Initializing task SyncDatabases
2024-03-07 11:25:57,672 INFO models.database :: :h2 Database 'Sample Database' sync/analyze schedules have changed!

 Sync metadata was: '0 50 * * * ? *' is now: '0 59 * * * ? *'
 Cache FieldValues was: '0 50 0 * * ? *', is now: '0 0 4 * * ? *'
2024-03-07 11:25:57,704 INFO task.sync-databases :: Scheduling sync/analyze for database 1: trigger: metabase.task.sync-and-analyze.trigger.1
2024-03-07 11:25:57,719 INFO task.sync-databases :: Scheduling field-values for database 1: trigger: metabase.task.update-field-values.trigger.1
2024-03-07 11:25:57,735 INFO task.sync-databases :: Updated default schedules for %d databases 1
2024-03-07 11:25:57,751 INFO metabase.task :: Initializing task PersistRefresh
2024-03-07 11:25:57,751 INFO metabase.task :: Initializing task CheckForNewVersions
2024-03-07 11:25:57,751 INFO metabase.task :: Initializing task PersistPrune
2024-03-07 11:25:57,766 INFO metabase.task :: Initializing task SendAnonymousUsageStats
2024-03-07 11:25:57,766 INFO metabase.task :: Initializing task ModelIndexValues
2024-03-07 11:25:57,782 INFO metabase.task :: Initializing task RefreshSlackChannelsAndUsers
2024-03-07 11:25:57,782 INFO metabase.task :: Initializing task TruncateAuditTables
2024-03-07 11:25:57,782 INFO metabase.task :: Initializing task SendPulses
2024-03-07 11:25:57,782 INFO metabase.task :: Initializing task SendFollowUpEmails
2024-03-07 11:25:57,782 INFO metabase.task :: Initializing task SendCreatorSentimentEmails
2024-03-07 11:25:57,797 INFO metabase.task :: Initializing task TaskHistoryCleanup
2024-03-07 11:25:57,797 INFO metabase.task :: Initializing task SendWarnPulseRemovalEmail
2024-03-07 11:25:57,797 INFO core.QuartzScheduler :: Scheduler MetabaseScheduler_$_win10-hyperv1709781957501 started.
2024-03-07 11:25:57,837 INFO metabase.task :: Task scheduler started
2024-03-07 11:25:57,855 INFO task.refresh-slack-channel-user-cache :: Slack is not configured, not refreshing slack user/channel cache.
2024-03-07 11:25:57,864 INFO metabase.core :: Metabase Initialization COMPLETE in 31.8 s
2024-03-07 11:26:05,314 INFO jdbcjobstore.JobStoreTX :: ClusterManager: detected 1 failed or restarted instances.
2024-03-07 11:26:05,315 INFO jdbcjobstore.JobStoreTX :: ClusterManager: Scanning for instance ""win10-hyperv1709781947079""'s failed in-progress jobs.
~~~

"
2147931675,issue,closed,completed,"After Latest Update: Can't Open Notebook Editor for Reports, and Questions Can't be Viewed on First Attempt","### Describe the bug

After updating to the latest version of Metabase I can not review several questions. The questions immediately open up to reveal the following error:
```
Something's gone wrong
We've run into an error. You can try refreshing the page, or just go back.
```
However, the question will load the second time if the page is reloaded.

Despite reloading, the notebook editor for the questions will never open. It yields the above error every time there is an attempt to open the editor.

All questions have a single source model in common. However, I can load the notebook editor for the source model.

### To Reproduce

Steps to reproduce are unknown. Based on logs, it seems that the model may have been corrupted somehow.

### Expected behavior

The notebook should open.

### Logs

```
...
metabase  | 2024-02-22 00:05:15,658 WARN middleware.fix-bad-references :: Bad :field clause [:field 4746 {:base-type :type/Float}] for field ""wbs_cost.committed_costs"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,659 WARN middleware.fix-bad-references :: Bad :field clause [:field 4756 {:base-type :type/Float}] for field ""wbs_cost.cost_to_date"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,660 WARN middleware.fix-bad-references :: Bad :field clause [:field 4753 {:base-type :type/Float}] for field ""wbs_cost.pending_cost_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,660 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,661 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:fields]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,662 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:condition :=]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,663 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:source-query :breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,663 WARN middleware.fix-bad-references :: Bad :field clause [:field 4751 {:base-type :type/Float}] for field ""wbs_cost.original_budget"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,664 WARN middleware.fix-bad-references :: Bad :field clause [:field 4752 {:base-type :type/Float}] for field ""wbs_cost.budget_modifications"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,665 WARN middleware.fix-bad-references :: Bad :field clause [:field 4748 {:base-type :type/Float}] for field ""wbs_cost.approved_change_orders"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,668 WARN middleware.fix-bad-references :: Bad :field clause [:field 4745 {:base-type :type/Float}] for field ""wbs_cost.pending_budget_changes"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,670 WARN middleware.fix-bad-references :: Bad :field clause [:field 4746 {:base-type :type/Float}] for field ""wbs_cost.committed_costs"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,671 WARN middleware.fix-bad-references :: Bad :field clause [:field 4756 {:base-type :type/Float}] for field ""wbs_cost.cost_to_date"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,672 WARN middleware.fix-bad-references :: Bad :field clause [:field 4753 {:base-type :type/Float}] for field ""wbs_cost.pending_cost_changes"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,673 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:source-query :order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,935 ERROR middleware.catch-exceptions :: Error processing query: ERROR: canceling statement due to user request
metabase  | {:database_id 5,
metabase  |  :started_at #t ""2024-02-22T00:05:10.151105Z[GMT]"",
metabase  |  :via
metabase  |  [{:status :failed,
metabase  |    :class clojure.lang.ExceptionInfo,
metabase  |    :error ""Error executing query: ERROR: canceling statement due to user request"",
metabase  |    :stacktrace
metabase  |    [""--> driver.sql_jdbc.execute$execute_reducible_query$fn__77840$fn__77841.invoke(execute.clj:698)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:695)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""
metabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""
metabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |     ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""
metabase  |     ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""
metabase  |     ""query_processor.context$executef.invokeStatic(context.clj:60)""
metabase  |     ""query_processor.context$executef.invoke(context.clj:49)""
metabase  |     ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""
metabase  |     ""query_processor.context.default$default_runf.invoke(default.clj:42)""
metabase  |     ""query_processor.context$runf.invokeStatic(context.clj:46)""
metabase  |     ""query_processor.context$runf.invoke(context.clj:40)""
metabase  |     ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""
metabase  |     ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""
metabase  |     ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""
metabase  |     ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""
metabase  |     ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""
metabase  |     ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""
metabase  |     ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""
metabase  |     ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""
metabase  |     ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""
metabase  |     ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:303)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""
metabase  |     ""driver$do_with_driver.invokeStatic(driver.clj:94)""
metabase  |     ""driver$do_with_driver.invoke(driver.clj:89)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""
metabase  |     ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |     ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""
metabase  |     ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""
metabase  |     ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""
metabase  |     ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""
metabase  |     ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""
metabase  |     ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""
metabase  |     ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""
metabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""
metabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713$fn__60717.invoke(reducible.clj:131)""],
metabase  |    :error_type :invalid-query,
metabase  |    :ex-data
metabase  |    {:driver :postgres,
metabase  |     :sql
metabase  |     [""-- Metabase:: userID: 1 queryType: MBQL queryHash: 3ec7385076b17837169132625446907db2116f2982e267b6d04660b30763d6d3""
metabase  |      ""SELECT""
metabase  |      ""  \""source\"".\""project_id\"" AS \""project_id\"",""
metabase  |      ""  \""source\"".\""sum\"" AS \""sum\"",""
metabase  |      ""  \""source\"".\""sum_2\"" AS \""sum_2\"",""
metabase  |      ""  \""source\"".\""sum_3\"" AS \""sum_3\"",""
metabase  |      ""  \""source\"".\""sum_4\"" AS \""sum_4\"",""
metabase  |      ""  \""source\"".\""sum_5\"" AS \""sum_5\"",""
metabase  |      ""  \""source\"".\""sum_6\"" AS \""sum_6\"",""
metabase  |      ""  \""source\"".\""sum_7\"" AS \""sum_7\"",""
metabase  |      ""  \""source\"".\""revised_budget\"" AS \""revised_budget\"",""
metabase  |      ""  \""source\"".\""project - project_id__name\"" AS \""project - project_id__name\""""
metabase  |      ""FROM""
metabase  |      ""  (""
metabase  |      ""    SELECT""
metabase  |      ""      \""source\"".\""project_id\"" AS \""project_id\"",""
metabase  |      ""      \""source\"".\""sum\"" AS \""sum\"",""
metabase  |      ""      \""source\"".\""sum_2\"" AS \""sum_2\"",""
metabase  |      ""      \""source\"".\""sum_3\"" AS \""sum_3\"",""
metabase  |      ""      \""source\"".\""sum_4\"" AS \""sum_4\"",""
metabase  |      ""      \""source\"".\""sum_5\"" AS \""sum_5\"",""
metabase  |      ""      \""source\"".\""sum_6\"" AS \""sum_6\"",""
metabase  |      ""      \""source\"".\""sum_7\"" AS \""sum_7\"",""
metabase  |      ""      \""source\"".\""sum\"" + \""source\"".\""sum_2\"" + \""source\"".\""sum_3\"" AS \""revised_budget\"",""
metabase  |      ""      \""project - project_id\"".\""name\"" AS \""project - project_id__name\"",""
metabase  |      ""      \""project - project_id\"".\""id\"" AS \""project - project_id__id\""""
metabase  |      ""    FROM""
metabase  |      ""      (""
metabase  |      ""        SELECT""
metabase  |      ""          \""source\"".\""project_id\"" AS \""project_id\"",""
metabase  |      ""          SUM(\""source\"".\""original_budget\"") AS \""sum\"",""
metabase  |      ""          SUM(\""source\"".\""budget_modifications\"") AS \""sum_2\"",""
metabase  |      ""          SUM(\""source\"".\""approved_change_orders\"") AS \""sum_3\"",""
metabase  |      ""          SUM(\""source\"".\""pending_budget_changes\"") AS \""sum_4\"",""
metabase  |      ""          SUM(\""source\"".\""committed_costs\"") AS \""sum_5\"",""
metabase  |      ""          SUM(\""source\"".\""cost_to_date\"") AS \""sum_6\"",""
metabase  |      ""          SUM(\""source\"".\""pending_cost_changes\"") AS \""sum_7\""""
metabase  |      ""        FROM""
metabase  |      ""          (""
metabase  |      ""            SELECT""
metabase  |      ""              \""source\"".\""id\"" AS \""id\"",""
metabase  |      ""              \""source\"".\""project_id\"" AS \""project_id\"",""
metabase  |      ""              \""source\"".\""division_id\"" AS \""division_id\"",""
metabase  |      ""              \""source\"".\""phase_id\"" AS \""phase_id\"",""
metabase  |      ""              \""source\"".\""subjob_id\"" AS \""subjob_id\"",""
metabase  |      ""              \""source\"".\""cost_type_id\"" AS \""cost_type_id\"",""
metabase  |      ""              \""source\"".\""original_budget\"" AS \""original_budget\"",""
metabase  |      ""              \""source\"".\""budget_modifications\"" AS \""budget_modifications\"",""
metabase  |      ""              \""source\"".\""approved_change_orders\"" AS \""approved_change_orders\"",""
metabase  |      ""              \""source\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"",""
metabase  |      ""              \""source\"".\""committed_costs\"" AS \""committed_costs\"",""
metabase  |      ""              \""source\"".\""cost_to_date\"" AS \""cost_to_date\"",""
metabase  |      ""              \""source\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"",""
metabase  |      ""              \""source\"".\""source\"" AS \""source\"",""
metabase  |      ""              \""source\"".\""last_modified\"" AS \""last_modified\""""
metabase  |      ""            FROM""
metabase  |      ""              (""
metabase  |      ""                SELECT""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""id\"" AS \""id\"",""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""project_id\"" AS \""project_id\"",""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""division_id\"" AS \""division_id\"",""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""phase_id\"" AS \""phase_id\"",""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""subjob_id\"" AS \""subjob_id\"",""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""cost_type_id\"" AS \""cost_type_id\"",""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""original_budget\"" AS \""original_budget\"",""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""budget_modifications\"" AS \""budget_modifications\"",""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""approved_change_orders\"" AS \""approved_change_orders\"",""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"",""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""committed_costs\"" AS \""committed_costs\"",""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""cost_to_date\"" AS \""cost_to_date\"",""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"",""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""source\"" AS \""source\"",""
metabase  |      ""                  \""budgets\"".\""wbs_cost\"".\""last_modified\"" AS \""last_modified\"",""
metabase  |      ""                  \""phase - phase_id\"".\""cost_code\"" AS \""phase - phase_id__cost_code\"",""
metabase  |      ""                  \""phase - phase_id\"".\""id\"" AS \""phase - phase_id__id\""""
metabase  |      ""                FROM""
metabase  |      ""                  \""budgets\"".\""wbs_cost\""""
metabase  |      ""                  LEFT JOIN \""wbs\"".\""phase\"" AS \""phase - phase_id\"" ON \""budgets\"".\""wbs_cost\"".\""phase_id\"" = \""phase - phase_id\"".\""id\""""
metabase  |      ""                WHERE""
metabase  |      ""                  NOT (\""budgets\"".\""wbs_cost\"".\""source\"" = ?)""
metabase  |      ""                  OR (""
metabase  |      ""                    NOT (\""phase - phase_id\"".\""cost_code\"" = ?)""
metabase  |      ""                    AND NOT (\""phase - phase_id\"".\""cost_code\"" = ?)""
metabase  |      ""                  )""
metabase  |      ""              ) AS \""source\""""
metabase  |      ""            ORDER BY""
metabase  |      ""              \""source\"".\""phase - phase_id__cost_code\"" ASC""
metabase  |      ""          ) AS \""source\""""
metabase  |      ""        GROUP BY""
metabase  |      ""          \""source\"".\""project_id\""""
metabase  |      ""        ORDER BY""
metabase  |      ""          \""source\"".\""project_id\"" ASC""
metabase  |      ""      ) AS \""source\""""
metabase  |      ""      LEFT JOIN \""projects\"".\""project\"" AS \""project - project_id\"" ON \""source\"".\""project_id\"" = \""project - project_id\"".\""id\""""
metabase  |      ""  ) AS \""source\""""
metabase  |      ""ORDER BY""
metabase  |      ""  \""source\"".\""project - project_id__name\"" ASC""
metabase  |      ""LIMIT""
metabase  |      ""  2000""],
metabase  |     :params (""realpage"" ""55-9800"" ""55-9900""),
metabase  |     :type :invalid-query}}],
metabase  |  :action_id nil,
metabase  |  :state ""57014"",
metabase  |  :error_type :invalid-query,
metabase  |  :json_query
metabase  |  {:constraints {:max-results 10000, :max-results-bare-rows 2000},
metabase  |   :type :query,
metabase  |   :middleware {:js-int-to-string? true, :ignore-cached-results? false},
metabase  |   :viz-settings {},
metabase  |   :database 5,
metabase  |   :query
metabase  |   {:joins
metabase  |    [{:fields [[:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]],
metabase  |      :strategy :left-join,
metabase  |      :alias ""project - project_id"",
metabase  |      :condition
metabase  |      [:=
metabase  |       [:field ""project_id"" {:base-type :type/BigInteger}]
metabase  |       [:field 4761 {:base-type :type/Integer, :join-alias ""project - project_id""}]],
metabase  |      :source-table 272}],
metabase  |    :expressions
metabase  |    {""revised_budget""
metabase  |     [:+
metabase  |      [:field ""sum"" {:base-type :type/Float}]
metabase  |      [:field ""sum_2"" {:base-type :type/Float}]
metabase  |      [:field ""sum_3"" {:base-type :type/Float}]]},
metabase  |    :order-by [[:asc [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]]],
metabase  |    :source-query
metabase  |    {:breakout [[:field 4747 {:base-type :type/BigInteger}]],
metabase  |     :aggregation
metabase  |     [[:sum [:field 4751 {:base-type :type/Float}]]
metabase  |      [:sum [:field 4752 {:base-type :type/Float}]]
metabase  |      [:sum [:field 4748 {:base-type :type/Float}]]
metabase  |      [:sum [:field 4745 {:base-type :type/Float}]]
metabase  |      [:sum [:field 4746 {:base-type :type/Float}]]
metabase  |      [:sum [:field 4756 {:base-type :type/Float}]]
metabase  |      [:sum [:field 4753 {:base-type :type/Float}]]],
metabase  |     :source-table ""card__140""}},
metabase  |   :parameters
metabase  |   [{:type :string/=, :id ""71b936d7"", :target [:dimension [:field 4762 {:join-alias ""project - project_id""}]]}],
metabase  |   :async? true,
metabase  |   :cache-ttl nil},
metabase  |  :native
metabase  |  {:query
metabase  |   ""SELECT \""source\"".\""project_id\"" AS \""project_id\"", \""source\"".\""sum\"" AS \""sum\"", \""source\"".\""sum_2\"" AS \""sum_2\"", \""source\"".\""sum_3\"" AS \""sum_3\"", \""source\"".\""sum_4\"" AS \""sum_4\"", \""source\"".\""sum_5\"" AS \""sum_5\"", \""source\"".\""sum_6\"" AS \""sum_6\"", \""source\"".\""sum_7\"" AS \""sum_7\"", \""source\"".\""revised_budget\"" AS \""revised_budget\"", \""source\"".\""project - project_id__name\"" AS \""project - project_id__name\"" FROM (SELECT \""source\"".\""project_id\"" AS \""project_id\"", \""source\"".\""sum\"" AS \""sum\"", \""source\"".\""sum_2\"" AS \""sum_2\"", \""source\"".\""sum_3\"" AS \""sum_3\"", \""source\"".\""sum_4\"" AS \""sum_4\"", \""source\"".\""sum_5\"" AS \""sum_5\"", \""source\"".\""sum_6\"" AS \""sum_6\"", \""source\"".\""sum_7\"" AS \""sum_7\"", \""source\"".\""sum\"" + \""source\"".\""sum_2\"" + \""source\"".\""sum_3\"" AS \""revised_budget\"", \""project - project_id\"".\""name\"" AS \""project - project_id__name\"", \""project - project_id\"".\""id\"" AS \""project - project_id__id\"" FROM (SELECT \""source\"".\""project_id\"" AS \""project_id\"", SUM(\""source\"".\""original_budget\"") AS \""sum\"", SUM(\""source\"".\""budget_modifications\"") AS \""sum_2\"", SUM(\""source\"".\""approved_change_orders\"") AS \""sum_3\"", SUM(\""source\"".\""pending_budget_changes\"") AS \""sum_4\"", SUM(\""source\"".\""committed_costs\"") AS \""sum_5\"", SUM(\""source\"".\""cost_to_date\"") AS \""sum_6\"", SUM(\""source\"".\""pending_cost_changes\"") AS \""sum_7\"" FROM (SELECT \""source\"".\""id\"" AS \""id\"", \""source\"".\""project_id\"" AS \""project_id\"", \""source\"".\""division_id\"" AS \""division_id\"", \""source\"".\""phase_id\"" AS \""phase_id\"", \""source\"".\""subjob_id\"" AS \""subjob_id\"", \""source\"".\""cost_type_id\"" AS \""cost_type_id\"", \""source\"".\""original_budget\"" AS \""original_budget\"", \""source\"".\""budget_modifications\"" AS \""budget_modifications\"", \""source\"".\""approved_change_orders\"" AS \""approved_change_orders\"", \""source\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"", \""source\"".\""committed_costs\"" AS \""committed_costs\"", \""source\"".\""cost_to_date\"" AS \""cost_to_date\"", \""source\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"", \""source\"".\""source\"" AS \""source\"", \""source\"".\""last_modified\"" AS \""last_modified\"" FROM (SELECT \""budgets\"".\""wbs_cost\"".\""id\"" AS \""id\"", \""budgets\"".\""wbs_cost\"".\""project_id\"" AS \""project_id\"", \""budgets\"".\""wbs_cost\"".\""division_id\"" AS \""division_id\"", \""budgets\"".\""wbs_cost\"".\""phase_id\"" AS \""phase_id\"", \""budgets\"".\""wbs_cost\"".\""subjob_id\"" AS \""subjob_id\"", \""budgets\"".\""wbs_cost\"".\""cost_type_id\"" AS \""cost_type_id\"", \""budgets\"".\""wbs_cost\"".\""original_budget\"" AS \""original_budget\"", \""budgets\"".\""wbs_cost\"".\""budget_modifications\"" AS \""budget_modifications\"", \""budgets\"".\""wbs_cost\"".\""approved_change_orders\"" AS \""approved_change_orders\"", \""budgets\"".\""wbs_cost\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"", \""budgets\"".\""wbs_cost\"".\""committed_costs\"" AS \""committed_costs\"", \""budgets\"".\""wbs_cost\"".\""cost_to_date\"" AS \""cost_to_date\"", \""budgets\"".\""wbs_cost\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"", \""budgets\"".\""wbs_cost\"".\""source\"" AS \""source\"", \""budgets\"".\""wbs_cost\"".\""last_modified\"" AS \""last_modified\"", \""phase - phase_id\"".\""cost_code\"" AS \""phase - phase_id__cost_code\"", \""phase - phase_id\"".\""id\"" AS \""phase - phase_id__id\"" FROM \""budgets\"".\""wbs_cost\"" LEFT JOIN \""wbs\"".\""phase\"" AS \""phase - phase_id\"" ON \""budgets\"".\""wbs_cost\"".\""phase_id\"" = \""phase - phase_id\"".\""id\"" WHERE NOT (\""budgets\"".\""wbs_cost\"".\""source\"" = ?) OR (NOT (\""phase - phase_id\"".\""cost_code\"" = ?) AND NOT (\""phase - phase_id\"".\""cost_code\"" = ?))) AS \""source\"" ORDER BY \""source\"".\""phase - phase_id__cost_code\"" ASC) AS \""source\"" GROUP BY \""source\"".\""project_id\"" ORDER BY \""source\"".\""project_id\"" ASC) AS \""source\"" LEFT JOIN \""projects\"".\""project\"" AS \""project - project_id\"" ON \""source\"".\""project_id\"" = \""project - project_id\"".\""id\"") AS \""source\"" ORDER BY \""source\"".\""project - project_id__name\"" ASC LIMIT 2000"",
metabase  |   :params (""realpage"" ""55-9800"" ""55-9900"")},
metabase  |  :status :failed,
metabase  |  :class org.postgresql.util.PSQLException,
metabase  |  :stacktrace
metabase  |  [""org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)""
metabase  |   ""org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)""
metabase  |   ""org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)""
metabase  |   ""org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)""
metabase  |   ""org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)""
metabase  |   ""org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)""
metabase  |   ""org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:134)""
metabase  |   ""com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:1471)""
metabase  |   ""--> driver.sql_jdbc.execute$fn__77757.invokeStatic(execute.clj:556)""
metabase  |   ""driver.sql_jdbc.execute$fn__77757.invoke(execute.clj:554)""
metabase  |   ""driver.sql_jdbc.execute$execute_statement_or_prepared_statement_BANG_.invokeStatic(execute.clj:569)""
metabase  |   ""driver.sql_jdbc.execute$execute_statement_or_prepared_statement_BANG_.invoke(execute.clj:565)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840$fn__77841.invoke(execute.clj:696)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:695)""
metabase  |   ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""
metabase  |   ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""
metabase  |   ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""
metabase  |   ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""
metabase  |   ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |   ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""
metabase  |   ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""
metabase  |   ""query_processor.context$executef.invokeStatic(context.clj:60)""
metabase  |   ""query_processor.context$executef.invoke(context.clj:49)""
metabase  |   ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""
metabase  |   ""query_processor.context.default$default_runf.invoke(default.clj:42)""
metabase  |   ""query_processor.context$runf.invokeStatic(context.clj:46)""
metabase  |   ""query_processor.context$runf.invoke(context.clj:40)""
metabase  |   ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""
metabase  |   ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""
metabase  |   ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""
metabase  |   ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""
metabase  |   ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""
metabase  |   ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""
metabase  |   ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""
metabase  |   ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""
metabase  |   ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""
metabase  |   ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:303)""
metabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""
metabase  |   ""driver$do_with_driver.invokeStatic(driver.clj:94)""
metabase  |   ""driver$do_with_driver.invoke(driver.clj:89)""
metabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""
metabase  |   ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""
metabase  |   ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""
metabase  |   ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |   ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""
metabase  |   ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |   ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""
metabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""
metabase  |   ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""
metabase  |   ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""
metabase  |   ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""
metabase  |   ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""
metabase  |   ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""
metabase  |   ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""
metabase  |   ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""
metabase  |   ""query_processor.reducible$async_qp$qp_STAR___60713$fn__60717.invoke(reducible.clj:131)""],
metabase  |  :card_id 145,
metabase  |  :context :dashboard,
metabase  |  :error ""ERROR: canceling statement due to user request"",
metabase  |  :row_count 0,
metabase  |  :running_time 0,
metabase  |  :preprocessed
metabase  |  {:constraints {:max-results 10000, :max-results-bare-rows 2000},
metabase  |   :type :query,
metabase  |   :middleware {:js-int-to-string? true, :ignore-cached-results? false},
metabase  |   :user-parameters
metabase  |   [{:type :string/=, :id ""71b936d7"", :target [:dimension [:field 4762 {:join-alias ""project - project_id""}]]}],
metabase  |   :viz-settings {},
metabase  |   :info
metabase  |   {:executed-by 1,
metabase  |    :context :dashboard,
metabase  |    :card-id 145,
metabase  |    :card-name ""All Projects - Project level"",
metabase  |    :dashboard-id 18,
metabase  |    :visualization-settings
metabase  |    {:table.columns
metabase  |     [{:name ""name"", :fieldref [:field 4762 {:join-alias ""project - project_id""}], :enabled true}
metabase  |      {:name ""sum"", :fieldref [:aggregation 0], :enabled true}
metabase  |      {:name ""sum_2"", :fieldref [:aggregation 1], :enabled true}
metabase  |      {:name ""sum_3"", :fieldref [:aggregation 2], :enabled true}
metabase  |      {:name ""revised_budget"", :fieldref [:expression ""revised_budget""], :enabled true}
metabase  |      {:name ""sum_4"", :fieldref [:aggregation 3], :enabled true}
metabase  |      {:name ""sum_7"", :fieldref [:aggregation 6], :enabled true}
metabase  |      {:name ""sum_5"", :fieldref [:aggregation 4], :enabled true}
metabase  |      {:name ""sum_6"", :fieldref [:aggregation 5], :enabled true}
metabase  |      {:name ""project_id"", :fieldref [:field 4747 nil], :enabled true}],
metabase  |     :table.pivot-column ""pending_budget_changes"",
metabase  |     :table.cell-column ""original_budget"",
metabase  |     :column-settings
metabase  |     {:[""name"",""sum""] {:column-title ""original_budget""},
metabase  |      :[""name"",""sum-5""] {:column-title ""committed_costs""},
metabase  |      :[""ref"",[""field"",4810,{""base-type"":""type/text"",""join-alias"":""division - division-id""}]] {:column-title ""division""},
metabase  |      :[""ref"",[""field"",4775,{""base-type"":""type/text"",""join-alias"":""subjob - subjob-id""}]] {:column-title ""subjob_label""},
metabase  |      :[""name"",""sum-6""] {:column-title ""cost_to_date""},
metabase  |      :[""name"",""sum-4""] {:column-title ""pending_budget_changes""},
metabase  |      :[""ref"",[""field"",4806,{""base-type"":""type/text"",""join-alias"":""cost-type - cost-type-id""}]]
metabase  |      {:column-title ""cost_type_label""},
metabase  |      :[""ref"",[""field"",4817,{""base-type"":""type/text"",""join-alias"":""phase - phase-id""}]] {:column-title ""phase""},
metabase  |      :[""ref"",[""field"",4762,{""base-type"":""type/text"",""join-alias"":""project - project-id""}]] {:column-title ""project""},
metabase  |      :[""ref"",[""field"",4818,{""base-type"":""type/text"",""join-alias"":""phase - phase-id""}]] {:column-title ""cost_code""},
metabase  |      :[""ref"",[""field"",4755,{""base-type"":""type/biginteger""}]] {:column-title ""cost_type_db_id""},
metabase  |      :[""ref"",[""field"",4757,{""base-type"":""type/biginteger""}]] {:column-title ""division_db_id""},
metabase  |      :[""name"",""sum-2""] {:column-title ""budget_modifications"", :number-style ""decimal"", :show-mini-bar false},
metabase  |      :[""ref"",[""field"",4820,{""base-type"":""type/text"",""join-alias"":""phase - phase-id""}]] {:column-title ""phase_id""},
metabase  |      :[""name"",""sum-3""] {:column-title ""approved_change_orders""},
metabase  |      :[""ref"",[""field"",4750,{""base-type"":""type/biginteger""}]] {:column-title ""phase_db_id""},
metabase  |      :[""name"",""sum-7""] {:column-title ""pending_cost_changes""},
metabase  |      :[""ref"",[""field"",4812,{""base-type"":""type/text"",""join-alias"":""division - division-id""}]]
metabase  |      {:column-title ""division_id""},
metabase  |      :[""ref"",[""field"",4747,{""base-type"":""type/biginteger""}]] {:column-title ""project_db_id""}}}},
metabase  |   :database 5,
metabase  |   :query
metabase  |   {:expressions
metabase  |    {""revised_budget""
metabase  |     [:+
metabase  |      [:field ""sum"" {:base-type :type/Float}]
metabase  |      [:field ""sum_2"" {:base-type :type/Float}]
metabase  |      [:field ""sum_3"" {:base-type :type/Float}]]},
metabase  |    :order-by [[:asc [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]]],
metabase  |    :source-metadata
metabase  |    [{:semantic_type :type/FK,
metabase  |      :table_id 275,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""project_id"",
metabase  |      :settings nil,
metabase  |      :field_ref [:field 4747 {:base-type :type/BigInteger}],
metabase  |      :effective_type :type/BigInteger,
metabase  |      :nfc_path nil,
metabase  |      :parent_id nil,
metabase  |      :id 4747,
metabase  |      :display_name ""project_id"",
metabase  |      :fingerprint {:global {:distinct-count 6, :nil% 0.0}},
metabase  |      :base_type :type/BigInteger}
metabase  |     {:name ""sum"",
metabase  |      :display_name ""Sum of original_budget"",
metabase  |      :base_type :type/Float,
metabase  |      :settings nil,
metabase  |      :field_ref [:aggregation 0]}
metabase  |     {:name ""sum_2"",
metabase  |      :display_name ""Sum of budget_modifications"",
metabase  |      :base_type :type/Float,
metabase  |      :settings nil,
metabase  |      :field_ref [:aggregation 1]}
metabase  |     {:name ""sum_3"",
metabase  |      :display_name ""Sum of approved_change_orders"",
metabase  |      :base_type :type/Float,
metabase  |      :settings nil,
metabase  |      :field_ref [:aggregation 2]}
metabase  |     {:name ""sum_4"",
metabase  |      :display_name ""Sum of pending_budget_changes"",
metabase  |      :base_type :type/Float,
metabase  |      :settings nil,
metabase  |      :field_ref [:aggregation 3]}
metabase  |     {:name ""sum_5"",
metabase  |      :display_name ""Sum of committed_costs"",
metabase  |      :base_type :type/Float,
metabase  |      :settings nil,
metabase  |      :field_ref [:aggregation 4]}
metabase  |     {:name ""sum_6"",
metabase  |      :display_name ""Sum of cost_to_date"",
metabase  |      :base_type :type/Float,
metabase  |      :settings nil,
metabase  |      :field_ref [:aggregation 5]}
metabase  |     {:name ""sum_7"",
metabase  |      :display_name ""Sum of pending_cost_changes"",
metabase  |      :base_type :type/Float,
metabase  |      :settings nil,
metabase  |      :field_ref [:aggregation 6]}],
metabase  |    :fields
metabase  |    [[:field 4747 {:base-type :type/BigInteger}]
metabase  |     [:field ""sum"" {:base-type :type/Float}]
metabase  |     [:field ""sum_2"" {:base-type :type/Float}]
metabase  |     [:field ""sum_3"" {:base-type :type/Float}]
metabase  |     [:field ""sum_4"" {:base-type :type/Float}]
metabase  |     [:field ""sum_5"" {:base-type :type/Float}]
metabase  |     [:field ""sum_6"" {:base-type :type/Float}]
metabase  |     [:field ""sum_7"" {:base-type :type/Float}]
metabase  |     [:expression ""revised_budget""]
metabase  |     [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]],
metabase  |    :joins
metabase  |    [{:alias ""project - project_id"",
metabase  |      :strategy :left-join,
metabase  |      :fields [[:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]],
metabase  |      :condition
metabase  |      [:=
metabase  |       [:field 4747 {:base-type :type/BigInteger}]
metabase  |       [:field 4761 {:base-type :type/Integer, :join-alias ""project - project_id""}]],
metabase  |      :source-table 272}],
metabase  |    :source-query
metabase  |    {:breakout [[:field 4747 {:base-type :type/BigInteger}]],
metabase  |     :aggregation
metabase  |     [[:aggregation-options [:sum [:field 4751 {:base-type :type/Float}]] {:name ""sum""}]
metabase  |      [:aggregation-options [:sum [:field 4752 {:base-type :type/Float}]] {:name ""sum_2""}]
metabase  |      [:aggregation-options [:sum [:field 4748 {:base-type :type/Float}]] {:name ""sum_3""}]
metabase  |      [:aggregation-options [:sum [:field 4745 {:base-type :type/Float}]] {:name ""sum_4""}]
metabase  |      [:aggregation-options [:sum [:field 4746 {:base-type :type/Float}]] {:name ""sum_5""}]
metabase  |      [:aggregation-options [:sum [:field 4756 {:base-type :type/Float}]] {:name ""sum_6""}]
metabase  |      [:aggregation-options [:sum [:field 4753 {:base-type :type/Float}]] {:name ""sum_7""}]],
metabase  |     :source-card-id 140,
metabase  |     :source-metadata
metabase  |     [{:description nil,
metabase  |       :semantic_type :type/PK,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""id"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5136 {:base-type :type/Integer}],
metabase  |       :effective_type :type/Integer,
metabase  |       :id 5136,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""id"",
metabase  |       :fingerprint nil,
metabase  |       :base_type :type/Integer}
metabase  |      {:description nil,
metabase  |       :semantic_type :type/Category,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""project_id"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5139 {:base-type :type/BigInteger}],
metabase  |       :effective_type :type/BigInteger,
metabase  |       :id 5139,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""project_id"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 28, :nil% 0},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min 12, :q1 19.52158164046306, :q3 30.000926863170704, :max 46, :sd 6.529207780843288, :avg 25.4391}}},
metabase  |       :base_type :type/BigInteger}
metabase  |      {:description nil,
metabase  |       :semantic_type :type/FK,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""division_id"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id 4809,
metabase  |       :field_ref [:field 5148 {:base-type :type/BigInteger}],
metabase  |       :effective_type :type/BigInteger,
metabase  |       :id 5148,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""division_id"",
metabase  |       :fingerprint {:global {:distinct-count 50, :nil% 0}},
metabase  |       :base_type :type/BigInteger}
metabase  |      {:description nil,
metabase  |       :semantic_type :type/FK,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""phase_id"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id 4816,
metabase  |       :field_ref [:field 5141 {:base-type :type/BigInteger}],
metabase  |       :effective_type :type/BigInteger,
metabase  |       :id 5141,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""phase_id"",
metabase  |       :fingerprint {:global {:distinct-count 444, :nil% 0}},
metabase  |       :base_type :type/BigInteger}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""subjob_id"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5135 {:base-type :type/BigInteger}],
metabase  |       :effective_type :type/BigInteger,
metabase  |       :id 5135,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""subjob_id"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 215, :nil% 0.4417},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min 153,
metabase  |          :q1 228.7728093528213,
metabase  |          :q3 324.8630031964761,
metabase  |          :max 375,
metabase  |          :sd 56.79493084837947,
metabase  |          :avg 276.75998567078625}}},
metabase  |       :base_type :type/BigInteger}
metabase  |      {:description nil,
metabase  |       :semantic_type :type/FK,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""cost_type_id"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id 4805,
metabase  |       :field_ref [:field 5146 {:base-type :type/BigInteger}],
metabase  |       :effective_type :type/BigInteger,
metabase  |       :id 5146,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""cost_type_id"",
metabase  |       :fingerprint {:global {:distinct-count 12, :nil% 0}},
metabase  |       :base_type :type/BigInteger}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""original_budget"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5142 {:base-type :type/Float}],
metabase  |       :effective_type :type/Float,
metabase  |       :id 5142,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""original_budget"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 2927, :nil% 0},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min -15000,
metabase  |          :q1 1650.862028593805,
metabase  |          :q3 42427.612653579316,
metabase  |          :max 61998921,
metabase  |          :sd 1222692.0637818938,
metabase  |          :avg 98694.22240099999}}},
metabase  |       :base_type :type/Float}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""budget_modifications"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5143 {:base-type :type/Float}],
metabase  |       :effective_type :type/Float,
metabase  |       :id 5143,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""budget_modifications"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 5372, :nil% 0},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min -13961544,
metabase  |          :q1 -46696.048316343105,
metabase  |          :q3 38079.889821447665,
metabase  |          :max 7593650,
metabase  |          :sd 388669.6167360365,
metabase  |          :avg 3251.8723759999975}}},
metabase  |       :base_type :type/Float}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""approved_change_orders"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5134 {:base-type :type/Float}],
metabase  |       :effective_type :type/Float,
metabase  |       :id 5134,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""approved_change_orders"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 112, :nil% 0.0735},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min -2118563,
metabase  |          :q1 -201.38202331354478,
metabase  |          :q3 191.7514213997219,
metabase  |          :max 7593650,
metabase  |          :sd 84794.24111903225,
metabase  |          :avg 1132.1864522396115}}},
metabase  |       :base_type :type/Float}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""pending_budget_changes"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5137 {:base-type :type/Float}],
metabase  |       :effective_type :type/Float,
metabase  |       :id 5137,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""pending_budget_changes"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 2, :nil% 0},
metabase  |        :type {:type/Number {:min -3102.5, :q1 -909.0115014843832, :q3 0, :max 0, :sd 31.025, :avg -0.31025}}},
metabase  |       :base_type :type/Float}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""committed_costs"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5138 {:base-type :type/Float}],
metabase  |       :effective_type :type/Float,
metabase  |       :id 5138,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""committed_costs"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 3608, :nil% 0},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min -29039.42,
metabase  |          :q1 -3164.494824706897,
metabase  |          :q3 25252.15706035909,
metabase  |          :max 4299662.6,
metabase  |          :sd 195574.55726043574,
metabase  |          :avg 52424.216188}}},
metabase  |       :base_type :type/Float}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""cost_to_date"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5147 {:base-type :type/Float}],
metabase  |       :effective_type :type/Float,
metabase  |       :id 5147,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""cost_to_date"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 5167, :nil% 0},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min -73583.93,
metabase  |          :q1 -9618.972334975959,
metabase  |          :q3 30335.417426701963,
metabase  |          :max 5.321365176E7,
metabase  |          :sd 1068676.5332191263,
metabase  |          :avg 88005.01605499999}}},
metabase  |       :base_type :type/Float}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""pending_cost_changes"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5144 {:base-type :type/Float}],
metabase  |       :effective_type :type/Float,
metabase  |       :id 5144,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""pending_cost_changes"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 15, :nil% 0},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min -2546,
metabase  |          :q1 -744.6993419748337,
metabase  |          :q3 282.1369614765108,
metabase  |          :max 194237.5,
metabase  |          :sd 2771.6265922608873,
metabase  |          :avg 52.010897}}},
metabase  |       :base_type :type/Float}
metabase  |      {:description nil,
metabase  |       :semantic_type :type/Source,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""source"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5140 {:base-type :type/Text}],
metabase  |       :effective_type :type/Text,
metabase  |       :id 5140,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""source"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 2, :nil% 0},
metabase  |        :type
metabase  |        {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 7.0735}}},
metabase  |       :base_type :type/Text}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :unit :default,
metabase  |       :name ""last_modified"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}],
metabase  |       :effective_type :type/DateTime,
metabase  |       :id 5145,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""last_modified"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 4890, :nil% 0},
metabase  |        :type {:type/DateTime {:earliest ""2024-01-23T18:43:06.147593Z"", :latest ""2024-02-13T15:31:25.346999Z""}}},
metabase  |       :base_type :type/DateTime}],
metabase  |     :source-query/dataset? true,
metabase  |     :order-by [[:asc [:field 4747 {:base-type :type/BigInteger}]]],
metabase  |     :source-query
metabase  |     {:source-table 307,
metabase  |      :order-by [[:asc [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]]],
metabase  |      :fields
metabase  |      [[:field 5136 {:base-type :type/Integer}]
metabase  |       [:field 5139 {:base-type :type/BigInteger}]
metabase  |       [:field 5148 {:base-type :type/BigInteger}]
metabase  |       [:field 5141 {:base-type :type/BigInteger}]
metabase  |       [:field 5135 {:base-type :type/BigInteger}]
metabase  |       [:field 5146 {:base-type :type/BigInteger}]
metabase  |       [:field 5142 {:base-type :type/Float}]
metabase  |       [:field 5143 {:base-type :type/Float}]
metabase  |       [:field 5134 {:base-type :type/Float}]
metabase  |       [:field 5137 {:base-type :type/Float}]
metabase  |       [:field 5138 {:base-type :type/Float}]
metabase  |       [:field 5147 {:base-type :type/Float}]
metabase  |       [:field 5144 {:base-type :type/Float}]
metabase  |       [:field 5140 {:base-type :type/Text}]
metabase  |       [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}]],
metabase  |      :expressions {""approved_change_orders"" [:coalesce [:field 5134 nil] 0]},
metabase  |      :filter
metabase  |      [:or
metabase  |       [:not
metabase  |        [:=
metabase  |         [:field 5140 {:base-type :type/Text}]
metabase  |         [:value
metabase  |          ""realpage""
metabase  |          {:base_type :type/Text,
metabase  |           :effective_type :type/Text,
metabase  |           :coercion_strategy nil,
metabase  |           :semantic_type :type/Source,
metabase  |           :database_type ""varchar"",
metabase  |           :name ""source""}]]]
metabase  |       [:and
metabase  |        [:not
metabase  |         [:=
metabase  |          [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]
metabase  |          [:value
metabase  |           ""55-9800""
metabase  |           {:base_type :type/Text,
metabase  |            :effective_type :type/Text,
metabase  |            :coercion_strategy nil,
metabase  |            :semantic_type nil,
metabase  |            :database_type ""bpchar"",
metabase  |            :name ""cost_code""}]]]
metabase  |        [:not
metabase  |         [:=
metabase  |          [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]
metabase  |          [:value
metabase  |           ""55-9900""
metabase  |           {:base_type :type/Text,
metabase  |            :effective_type :type/Text,
metabase  |            :coercion_strategy nil,
metabase  |            :semantic_type nil,
metabase  |            :database_type ""bpchar"",
metabase  |            :name ""cost_code""}]]]]],
metabase  |      :joins
metabase  |      [{:alias ""phase - phase_id"",
metabase  |        :strategy :left-join,
metabase  |        :condition
metabase  |        [:=
metabase  |         [:field 5141 {:base-type :type/BigInteger}]
metabase  |         [:field 4816 {:base-type :type/Integer, :join-alias ""phase - phase_id""}]],
metabase  |        :source-table 282}]}},
metabase  |    :limit 2000,
metabase  |    :metabase.query-processor.middleware.limit/original-limit nil},
metabase  |   :async? true},
metabase  |  :data {:rows [], :cols []}}
metabase  |
...
```

### Information about your Metabase installation

```JSON
{
  ""browser-info"": {
    ""language"": ""en-US"",
    ""platform"": ""Win32"",
    ""userAgent"": ""Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0"",
    ""vendor"": """"
  },
  ""system-info"": {
    ""file.encoding"": ""UTF-8"",
    ""java.runtime.name"": ""OpenJDK Runtime Environment"",
    ""java.runtime.version"": ""11.0.22+7"",
    ""java.vendor"": ""Eclipse Adoptium"",
    ""java.vendor.url"": ""https://adoptium.net/"",
    ""java.version"": ""11.0.22"",
    ""java.vm.name"": ""OpenJDK 64-Bit Server VM"",
    ""java.vm.version"": ""11.0.22+7"",
    ""os.name"": ""Linux"",
    ""os.version"": ""6.1.55-75.123.amzn2023.x86_64"",
    ""user.language"": ""en"",
    ""user.timezone"": ""GMT""
  },
  ""metabase-info"": {
    ""databases"": [
      ""sqlserver"",
      ""postgres""
    ],
    ""hosting-env"": ""unknown"",
    ""application-database"": ""postgres"",
    ""application-database-details"": {
      ""database"": {
        ""name"": ""PostgreSQL"",
        ""version"": ""15.5""
      },
      ""jdbc-driver"": {
        ""name"": ""PostgreSQL JDBC Driver"",
        ""version"": ""42.6.0""
      }
    },
    ""run-mode"": ""prod"",
    ""version"": {
      ""date"": ""2024-02-12"",
      ""tag"": ""v0.48.6"",
      ""hash"": ""b8818f9""
    },
    ""settings"": {
      ""report-timezone"": null
    }
  }
}
```


### Severity

High

### Additional context

_No response_",MrChadMWood,2024-02-22 00:16:56+00:00,['bshepherdson'],2024-08-23 14:44:29+00:00,2024-08-23 14:44:29+00:00,https://github.com/metabase/metabase/issues/39037,"[('Type:Bug', 'Product defects'), ('Priority:P1', 'Security holes w/o exploit, crashing, setup/upgrade, login, broken common features, correctness'), ('Querying/MBQL', ''), ('.Backend', ''), ('Visualization/Tables', 'raw, summarized and tabular visualizations'), ('.Team/Querying', '')]","[{'comment_id': 1958435510, 'issue_id': 2147931675, 'author': 'MrChadMWood', 'body': 'More logs, too long for the post body:\r\n\r\n\r\n```\r\nmetabase  | 2024-02-22 00:05:15,131 WARN middleware.fix-bad-references :: Bad :field clause [:field 4752 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""budget_modifications""}] for field ""wbs_cost.budget_modifications"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,137 WARN middleware.fix-bad-references :: Bad :field clause [:field 4748 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""approved_change_orders""}] for field ""wbs_cost.approved_change_orders"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,137 WARN middleware.fix-bad-references :: Bad :field clause [:field 4745 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_budget_changes""}] for field ""wbs_cost.pending_budget_changes"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,138 WARN middleware.fix-bad-references :: Bad :field clause [:field 4746 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""committed_costs""}] for field ""wbs_cost.committed_costs"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,147 WARN middleware.fix-bad-references :: Bad :field clause [:field 4756 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""cost_to_date""}] for field ""wbs_cost.cost_to_date"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,148 WARN middleware.fix-bad-references :: Bad :field clause [:field 4753 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_cost_changes""}] for field ""wbs_cost.pending_cost_changes"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,148 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,150 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:fields]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,151 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:condition :=]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,151 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:source-query :breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,154 WARN middleware.fix-bad-references :: Bad :field clause [:field 4751 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""original_budget""}] for field ""wbs_cost.original_budget"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,155 WARN middleware.fix-bad-references :: Bad :field clause [:field 4752 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""budget_modifications""}] for field ""wbs_cost.budget_modifications"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,155 WARN middleware.fix-bad-references :: Bad :field clause [:field 4748 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""approved_change_orders""}] for field ""wbs_cost.approved_change_orders"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,156 WARN middleware.fix-bad-references :: Bad :field clause [:field 4745 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_budget_changes""}] for field ""wbs_cost.pending_budget_changes"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,157 WARN middleware.fix-bad-references :: Bad :field clause [:field 4746 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""committed_costs""}] for field ""wbs_cost.committed_costs"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,161 WARN middleware.fix-bad-references :: Bad :field clause [:field 4756 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""cost_to_date""}] for field ""wbs_cost.cost_to_date"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,162 WARN middleware.fix-bad-references :: Bad :field clause [:field 4753 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_cost_changes""}] for field ""wbs_cost.pending_cost_changes"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,162 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:source-query :order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,426 DEBUG middleware.log :: POST /api/dashboard/18/dashcard/136/card/144/query 202 [ASYNC: completed] 4.1 s (24 DB calls) App DB connections: 2/10 Jetty threads: 2/50 (5 idle, 0 queued) (52 total active threads) Queries in flight: 0 (0 queued); postgres DB 5 connections: 0/0 (1 threads blocked)\r\nmetabase  | 2024-02-22 00:05:15,568 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,569 WARN middleware.fix-bad-references :: Bad :field clause [:field 4751 {:base-type :type/Float}] for field ""wbs_cost.original_budget"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,569 WARN middleware.fix-bad-references :: Bad :field clause [:field 4752 {:base-type :type/Float}] for field ""wbs_cost.budget_modifications"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,570 WARN middleware.fix-bad-references :: Bad :field clause [:field 4748 {:base-type :type/Float}] for field ""wbs_cost.approved_change_orders"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,571 WARN middleware.fix-bad-references :: Bad :field clause [:field 4745 {:base-type :type/Float}] for field ""wbs_cost.pending_budget_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,571 WARN middleware.fix-bad-references :: Bad :field clause [:field 4746 {:base-type :type/Float}] for field ""wbs_cost.committed_costs"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,572 WARN middleware.fix-bad-references :: Bad :field clause [:field 4756 {:base-type :type/Float}] for field ""wbs_cost.cost_to_date"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,573 WARN middleware.fix-bad-references :: Bad :field clause [:field 4753 {:base-type :type/Float}] for field ""wbs_cost.pending_cost_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,573 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,645 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,655 WARN middleware.fix-bad-references :: Bad :field clause [:field 4751 {:base-type :type/Float}] for field ""wbs_cost.original_budget"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,656 WARN middleware.fix-bad-references :: Bad :field clause [:field 4752 {:base-type :type/Float}] for field ""wbs_cost.budget_modifications"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,657 WARN middleware.fix-bad-references :: Bad :field clause [:field 4748 {:base-type :type/Float}] for field ""wbs_cost.approved_change_orders"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\nmetabase  | 2024-02-22 00:05:15,658 WARN middleware.fix-bad-references :: Bad :field clause [:field 4745 {:base-type :type/Float}] for field ""wbs_cost.pending_budget_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n```', 'created_at': datetime.datetime(2024, 2, 22, 0, 18, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1958436535, 'issue_id': 2147931675, 'author': 'MrChadMWood', 'body': 'More logs, too long for the post body:\r\n\r\n```\r\nmetabase  | 2024-02-22 00:09:30,458 ERROR middleware.catch-exceptions :: Error processing query: Broken pipe\r\nmetabase  | {:database_id 5,\r\nmetabase  |  :started_at #t ""2024-02-22T00:09:26.123183Z[GMT]"",\r\nmetabase  |  :via\r\nmetabase  |  [{:status :failed,\r\nmetabase  |    :class org.eclipse.jetty.io.EofException,\r\nmetabase  |    :error nil,\r\nmetabase  |    :stacktrace\r\nmetabase  |    [""org.eclipse.jetty.io.SocketChannelEndPoint.flush(SocketChannelEndPoint.java:116)""\r\nmetabase  |     ""org.eclipse.jetty.io.WriteFlusher.flush(WriteFlusher.java:422)""\r\nmetabase  |     ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:275)""\r\nmetabase  |     ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:254)""\r\nmetabase  |     ""org.eclipse.jetty.io.AbstractEndPoint.write(AbstractEndPoint.java:386)""\r\nmetabase  |     ""org.eclipse.jetty.server.HttpConnection$SendCallback.process(HttpConnection.java:832)""\r\nmetabase  |     ""org.eclipse.jetty.util.IteratingCallback.processing(IteratingCallback.java:243)""\r\nmetabase  |     ""org.eclipse.jetty.util.IteratingCallback.iterate(IteratingCallback.java:224)""\r\nmetabase  |     ""org.eclipse.jetty.server.HttpConnection.send(HttpConnection.java:589)""\r\nmetabase  |     ""org.eclipse.jetty.server.HttpChannel.sendResponse(HttpChannel.java:1051)""\r\nmetabase  |     ""org.eclipse.jetty.server.HttpChannel.write(HttpChannel.java:1123)""\r\nmetabase  |     ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:270)""\r\nmetabase  |     ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:254)""\r\nmetabase  |     ""org.eclipse.jetty.server.HttpOutput.flush(HttpOutput.java:736)""\r\nmetabase  |     ""java.base/java.util.zip.DeflaterOutputStream.flush(Unknown Source)""\r\nmetabase  |     ""--> async.streaming_response$delay_output_stream$fn__42918.invoke(streaming_response.clj:123)""\r\nmetabase  |     ""async.streaming_response.proxy$java.io.OutputStream$ff19274a.flush(Unknown Source)""\r\nmetabase  |     ""query_processor.streaming.json$fn$reify__50704.write_row_BANG_(json.clj:75)""\r\nmetabase  |     ""query_processor.streaming$streaming_rff$fn__51519$fn__51524.invoke(streaming.clj:127)""\r\nmetabase  |     ""query_processor.middleware.process_userland_query$add_and_save_execution_info_xform_BANG_$execution_info_rf_STAR___70969.invoke(process_userland_query.clj:110)""\r\nmetabase  |     ""query_processor.reducible$combine_additional_reducing_fns$combine_additional_reducing_fns_rf_STAR___60736.invoke(reducible.clj:233)""\r\nmetabase  |     ""query_processor.middleware.add_rows_truncated$add_rows_truncated_xform$fn__69577.invoke(add_rows_truncated.clj:34)""\r\nmetabase  |     ""query_processor.middleware.format_rows$format_rows_xform$fn__71472.invoke(format_rows.clj:74)""\r\nmetabase  |     ""query_processor.reducible$reducible_rows$reify__60728.reduce(reducible.clj:177)""\r\nmetabase  |     ""query_processor.context.default$default_reducef$fn__49405.invoke(default.clj:34)""\r\nmetabase  |     ""query_processor.context.default$default_reducef.invokeStatic(default.clj:33)""\r\nmetabase  |     ""query_processor.context.default$default_reducef.invoke(default.clj:25)""\r\nmetabase  |     ""query_processor.context$reducef.invokeStatic(context.clj:70)""\r\nmetabase  |     ""query_processor.context$reducef.invoke(context.clj:63)""\r\nmetabase  |     ""query_processor.context.default$default_runf$respond_STAR___49409.invoke(default.clj:45)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:706)""\r\nmetabase  |     ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""\r\nmetabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""\r\nmetabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""\r\nmetabase  |     ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""\r\nmetabase  |     ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""\r\nmetabase  |     ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""\r\nmetabase  |     ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""\r\nmetabase  |     ""query_processor.context$executef.invokeStatic(context.clj:60)""\r\nmetabase  |     ""query_processor.context$executef.invoke(context.clj:49)""\r\nmetabase  |     ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""\r\nmetabase  |     ""query_processor.context.default$default_runf.invoke(default.clj:42)""\r\nmetabase  |     ""query_processor.context$runf.invokeStatic(context.clj:46)""\r\nmetabase  |     ""query_processor.context$runf.invoke(context.clj:40)""\r\nmetabase  |     ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""\r\nmetabase  |     ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""\r\nmetabase  |     ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""\r\nmetabase  |     ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""\r\nmetabase  |     ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""\r\nmetabase  |     ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""\r\nmetabase  |     ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""\r\nmetabase  |     ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""\r\nmetabase  |     ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""\r\nmetabase  |     ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:303)""\r\nmetabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""\r\nmetabase  |     ""driver$do_with_driver.invokeStatic(driver.clj:94)""\r\nmetabase  |     ""driver$do_with_driver.invoke(driver.clj:89)""\r\nmetabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""\r\nmetabase  |     ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""\r\nmetabase  |     ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""\r\nmetabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""\r\nmetabase  |     ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""\r\nmetabase  |     ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""\r\nmetabase  |     ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""\r\nmetabase  |     ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""\r\nmetabase  |     ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""\r\nmetabase  |     ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""\r\nmetabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""\r\nmetabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713$fn__60717.invoke(reducible.clj:131)""]}\r\nmetabase  |   {:status :failed,\r\nmetabase  |    :class clojure.lang.ExceptionInfo,\r\nmetabase  |    :error ""Error reducing result rows: null"",\r\nmetabase  |    :stacktrace\r\nmetabase  |    [""--> query_processor.context.default$default_reducef$fn__49405.invoke(default.clj:36)""\r\nmetabase  |     ""query_processor.context.default$default_reducef.invokeStatic(default.clj:33)""\r\nmetabase  |     ""query_processor.context.default$default_reducef.invoke(default.clj:25)""\r\nmetabase  |     ""query_processor.context$reducef.invokeStatic(context.clj:70)""\r\nmetabase  |     ""query_processor.context$reducef.invoke(context.clj:63)""\r\nmetabase  |     ""query_processor.context.default$default_runf$respond_STAR___49409.invoke(default.clj:45)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:706)""\r\nmetabase  |     ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""\r\nmetabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""\r\nmetabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""\r\nmetabase  |     ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""\r\nmetabase  |     ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""\r\nmetabase  |     ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""\r\nmetabase  |     ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""\r\nmetabase  |     ""query_processor.context$executef.invokeStatic(context.clj:60)""\r\nmetabase  |     ""query_processor.context$executef.invoke(context.clj:49)""\r\nmetabase  |     ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""\r\nmetabase  |     ""query_processor.context.default$default_runf.invoke(default.clj:42)""\r\nmetabase  |     ""query_processor.context$runf.invokeStatic(context.clj:46)""\r\nmetabase  |     ""query_processor.context$runf.invoke(context.clj:40)""\r\nmetabase  |     ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""\r\nmetabase  |     ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""\r\nmetabase  |     ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""\r\nmetabase  |     ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""\r\nmetabase  |     ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""\r\nmetabase  |     ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""\r\nmetabase  |     ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""\r\nmetabase  |     ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""\r\nmetabase  |     ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""\r\nmetabase  |     ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:303)""\r\nmetabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""\r\nmetabase  |     ""driver$do_with_driver.invokeStatic(driver.clj:94)""\r\nmetabase  |     ""driver$do_with_driver.invoke(driver.clj:89)""\r\nmetabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""\r\nmetabase  |     ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""\r\nmetabase  |     ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""\r\nmetabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""\r\nmetabase  |     ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""\r\nmetabase  |     ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""\r\nmetabase  |     ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""\r\nmetabase  |     ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""\r\nmetabase  |     ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""\r\nmetabase  |     ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""\r\nmetabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""\r\nmetabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713$fn__60717.invoke(reducible.clj:131)""],\r\nmetabase  |    :error_type :qp,\r\nmetabase  |    :ex-data {:type :qp}}],\r\nmetabase  |  :action_id nil,\r\nmetabase  |  :error_type :qp,\r\nmetabase  |  :json_query\r\nmetabase  |  {:constraints {:max-results 10000, :max-results-bare-rows 2000},\r\nmetabase  |   :type :query,\r\nmetabase  |   :middleware {:js-int-to-string? true, :ignore-cached-results? false},\r\nmetabase  |   :viz-settings {},\r\nmetabase  |   :database 5,\r\nmetabase  |   :query\r\nmetabase  |   {:joins\r\nmetabase  |    [{:fields [[:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]],\r\nmetabase  |      :strategy :left-join,\r\nmetabase  |      :alias ""project - project_id"",\r\nmetabase  |      :condition\r\nmetabase  |      [:=\r\nmetabase  |       [:field ""project_id"" {:base-type :type/BigInteger}]\r\nmetabase  |       [:field 4761 {:base-type :type/Integer, :join-alias ""project - project_id""}]],\r\nmetabase  |      :source-table 272}],\r\nmetabase  |    :expressions\r\nmetabase  |    {""revised_budget""\r\nmetabase  |     [:+\r\nmetabase  |      [:field ""sum"" {:base-type :type/Float}]\r\nmetabase  |      [:field ""sum_2"" {:base-type :type/Float}]\r\nmetabase  |      [:field ""sum_3"" {:base-type :type/Float}]]},\r\nmetabase  |    :order-by [[:asc [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]]],\r\nmetabase  |    :source-query\r\nmetabase  |    {:breakout [[:field 4747 {:base-type :type/BigInteger}]],\r\nmetabase  |     :aggregation\r\nmetabase  |     [[:sum [:field 4751 {:base-type :type/Float}]]\r\nmetabase  |      [:sum [:field 4752 {:base-type :type/Float}]]\r\nmetabase  |      [:sum [:field 4748 {:base-type :type/Float}]]\r\nmetabase  |      [:sum [:field 4745 {:base-type :type/Float}]]\r\nmetabase  |      [:sum [:field 4746 {:base-type :type/Float}]]\r\nmetabase  |      [:sum [:field 4756 {:base-type :type/Float}]]\r\nmetabase  |      [:sum [:field 4753 {:base-type :type/Float}]]],\r\nmetabase  |     :source-table ""card__140""}},\r\nmetabase  |   :parameters\r\nmetabase  |   [{:type :string/=, :id ""71b936d7"", :target [:dimension [:field 4762 {:join-alias ""project - project_id""}]]}],\r\nmetabase  |   :async? true,\r\nmetabase  |   :cache-ttl nil},\r\nmetabase  |  :native\r\nmetabase  |  {:query\r\nmetabase  |   ""SELECT \\""source\\"".\\""project_id\\"" AS \\""project_id\\"", \\""source\\"".\\""sum\\"" AS \\""sum\\"", \\""source\\"".\\""sum_2\\"" AS \\""sum_2\\"", \\""source\\"".\\""sum_3\\"" AS \\""sum_3\\"", \\""source\\"".\\""sum_4\\"" AS \\""sum_4\\"", \\""source\\"".\\""sum_5\\"" AS \\""sum_5\\"", \\""source\\"".\\""sum_6\\"" AS \\""sum_6\\"", \\""source\\"".\\""sum_7\\"" AS \\""sum_7\\"", \\""source\\"".\\""revised_budget\\"" AS \\""revised_budget\\"", \\""source\\"".\\""project - project_id__name\\"" AS \\""project - project_id__name\\"" FROM (SELECT \\""source\\"".\\""project_id\\"" AS \\""project_id\\"", \\""source\\"".\\""sum\\"" AS \\""sum\\"", \\""source\\"".\\""sum_2\\"" AS \\""sum_2\\"", \\""source\\"".\\""sum_3\\"" AS \\""sum_3\\"", \\""source\\"".\\""sum_4\\"" AS \\""sum_4\\"", \\""source\\"".\\""sum_5\\"" AS \\""sum_5\\"", \\""source\\"".\\""sum_6\\"" AS \\""sum_6\\"", \\""source\\"".\\""sum_7\\"" AS \\""sum_7\\"", \\""source\\"".\\""sum\\"" + \\""source\\"".\\""sum_2\\"" + \\""source\\"".\\""sum_3\\"" AS \\""revised_budget\\"", \\""project - project_id\\"".\\""name\\"" AS \\""project - project_id__name\\"", \\""project - project_id\\"".\\""id\\"" AS \\""project - project_id__id\\"" FROM (SELECT \\""source\\"".\\""project_id\\"" AS \\""project_id\\"", SUM(\\""source\\"".\\""original_budget\\"") AS \\""sum\\"", SUM(\\""source\\"".\\""budget_modifications\\"") AS \\""sum_2\\"", SUM(\\""source\\"".\\""approved_change_orders\\"") AS \\""sum_3\\"", SUM(\\""source\\"".\\""pending_budget_changes\\"") AS \\""sum_4\\"", SUM(\\""source\\"".\\""committed_costs\\"") AS \\""sum_5\\"", SUM(\\""source\\"".\\""cost_to_date\\"") AS \\""sum_6\\"", SUM(\\""source\\"".\\""pending_cost_changes\\"") AS \\""sum_7\\"" FROM (SELECT \\""source\\"".\\""id\\"" AS \\""id\\"", \\""source\\"".\\""project_id\\"" AS \\""project_id\\"", \\""source\\"".\\""division_id\\"" AS \\""division_id\\"", \\""source\\"".\\""phase_id\\"" AS \\""phase_id\\"", \\""source\\"".\\""subjob_id\\"" AS \\""subjob_id\\"", \\""source\\"".\\""cost_type_id\\"" AS \\""cost_type_id\\"", \\""source\\"".\\""original_budget\\"" AS \\""original_budget\\"", \\""source\\"".\\""budget_modifications\\"" AS \\""budget_modifications\\"", \\""source\\"".\\""approved_change_orders\\"" AS \\""approved_change_orders\\"", \\""source\\"".\\""pending_budget_changes\\"" AS \\""pending_budget_changes\\"", \\""source\\"".\\""committed_costs\\"" AS \\""committed_costs\\"", \\""source\\"".\\""cost_to_date\\"" AS \\""cost_to_date\\"", \\""source\\"".\\""pending_cost_changes\\"" AS \\""pending_cost_changes\\"", \\""source\\"".\\""source\\"" AS \\""source\\"", \\""source\\"".\\""last_modified\\"" AS \\""last_modified\\"" FROM (SELECT \\""budgets\\"".\\""wbs_cost\\"".\\""id\\"" AS \\""id\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""project_id\\"" AS \\""project_id\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""division_id\\"" AS \\""division_id\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""phase_id\\"" AS \\""phase_id\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""subjob_id\\"" AS \\""subjob_id\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""cost_type_id\\"" AS \\""cost_type_id\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""original_budget\\"" AS \\""original_budget\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""budget_modifications\\"" AS \\""budget_modifications\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""approved_change_orders\\"" AS \\""approved_change_orders\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""pending_budget_changes\\"" AS \\""pending_budget_changes\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""committed_costs\\"" AS \\""committed_costs\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""cost_to_date\\"" AS \\""cost_to_date\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""pending_cost_changes\\"" AS \\""pending_cost_changes\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""source\\"" AS \\""source\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""last_modified\\"" AS \\""last_modified\\"", \\""phase - phase_id\\"".\\""cost_code\\"" AS \\""phase - phase_id__cost_code\\"", \\""phase - phase_id\\"".\\""id\\"" AS \\""phase - phase_id__id\\"" FROM \\""budgets\\"".\\""wbs_cost\\"" LEFT JOIN \\""wbs\\"".\\""phase\\"" AS \\""phase - phase_id\\"" ON \\""budgets\\"".\\""wbs_cost\\"".\\""phase_id\\"" = \\""phase - phase_id\\"".\\""id\\"" WHERE NOT (\\""budgets\\"".\\""wbs_cost\\"".\\""source\\"" = ?) OR (NOT (\\""phase - phase_id\\"".\\""cost_code\\"" = ?) AND NOT (\\""phase - phase_id\\"".\\""cost_code\\"" = ?))) AS \\""source\\"" ORDER BY \\""source\\"".\\""phase - phase_id__cost_code\\"" ASC) AS \\""source\\"" GROUP BY \\""source\\"".\\""project_id\\"" ORDER BY \\""source\\"".\\""project_id\\"" ASC) AS \\""source\\"" LEFT JOIN \\""projects\\"".\\""project\\"" AS \\""project - project_id\\"" ON \\""source\\"".\\""project_id\\"" = \\""project - project_id\\"".\\""id\\"") AS \\""source\\"" ORDER BY \\""source\\"".\\""project - project_id__name\\"" ASC LIMIT 2000"",\r\nmetabase  |   :params (""realpage"" ""55-9800"" ""55-9900"")},\r\nmetabase  |  :status :failed,\r\nmetabase  |  :class java.io.IOException,\r\nmetabase  |  :stacktrace\r\nmetabase  |  [""java.base/sun.nio.ch.FileDispatcherImpl.writev0(Native Method)""\r\nmetabase  |   ""java.base/sun.nio.ch.SocketDispatcher.writev(Unknown Source)""\r\nmetabase  |   ""java.base/sun.nio.ch.IOUtil.write(Unknown Source)""\r\nmetabase  |   ""java.base/sun.nio.ch.IOUtil.write(Unknown Source)""\r\nmetabase  |   ""java.base/sun.nio.ch.SocketChannelImpl.write(Unknown Source)""\r\nmetabase  |   ""java.base/java.nio.channels.SocketChannel.write(Unknown Source)""\r\nmetabase  |   ""org.eclipse.jetty.io.SocketChannelEndPoint.flush(SocketChannelEndPoint.java:110)""\r\nmetabase  |   ""org.eclipse.jetty.io.WriteFlusher.flush(WriteFlusher.java:422)""\r\nmetabase  |   ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:275)""\r\nmetabase  |   ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:254)""\r\nmetabase  |   ""org.eclipse.jetty.io.AbstractEndPoint.write(AbstractEndPoint.java:386)""\r\nmetabase  |   ""org.eclipse.jetty.server.HttpConnection$SendCallback.process(HttpConnection.java:832)""\r\nmetabase  |   ""org.eclipse.jetty.util.IteratingCallback.processing(IteratingCallback.java:243)""\r\nmetabase  |   ""org.eclipse.jetty.util.IteratingCallback.iterate(IteratingCallback.java:224)""\r\nmetabase  |   ""org.eclipse.jetty.server.HttpConnection.send(HttpConnection.java:589)""\r\nmetabase  |   ""org.eclipse.jetty.server.HttpChannel.sendResponse(HttpChannel.java:1051)""\r\nmetabase  |   ""org.eclipse.jetty.server.HttpChannel.write(HttpChannel.java:1123)""\r\nmetabase  |   ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:270)""\r\nmetabase  |   ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:254)""\r\nmetabase  |   ""org.eclipse.jetty.server.HttpOutput.flush(HttpOutput.java:736)""\r\nmetabase  |   ""java.base/java.util.zip.DeflaterOutputStream.flush(Unknown Source)""\r\nmetabase  |   ""--> async.streaming_response$delay_output_stream$fn__42918.invoke(streaming_response.clj:123)""\r\nmetabase  |   ""async.streaming_response.proxy$java.io.OutputStream$ff19274a.flush(Unknown Source)""\r\nmetabase  |   ""query_processor.streaming.json$fn$reify__50704.write_row_BANG_(json.clj:75)""\r\nmetabase  |   ""query_processor.streaming$streaming_rff$fn__51519$fn__51524.invoke(streaming.clj:127)""\r\nmetabase  |   ""query_processor.middleware.process_userland_query$add_and_save_execution_info_xform_BANG_$execution_info_rf_STAR___70969.invoke(process_userland_query.clj:110)""\r\nmetabase  |   ""query_processor.reducible$combine_additional_reducing_fns$combine_additional_reducing_fns_rf_STAR___60736.invoke(reducible.clj:233)""\r\nmetabase  |   ""query_processor.middleware.add_rows_truncated$add_rows_truncated_xform$fn__69577.invoke(add_rows_truncated.clj:34)""\r\nmetabase  |   ""query_processor.middleware.format_rows$format_rows_xform$fn__71472.invoke(format_rows.clj:74)""\r\nmetabase  |   ""query_processor.reducible$reducible_rows$reify__60728.reduce(reducible.clj:177)""\r\nmetabase  |   ""query_processor.context.default$default_reducef$fn__49405.invoke(default.clj:34)""\r\nmetabase  |   ""query_processor.context.default$default_reducef.invokeStatic(default.clj:33)""\r\nmetabase  |   ""query_processor.context.default$default_reducef.invoke(default.clj:25)""\r\nmetabase  |   ""query_processor.context$reducef.invokeStatic(context.clj:70)""\r\nmetabase  |   ""query_processor.context$reducef.invoke(context.clj:63)""\r\nmetabase  |   ""query_processor.context.default$default_runf$respond_STAR___49409.invoke(default.clj:45)""\r\nmetabase  |   ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:706)""\r\nmetabase  |   ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""\r\nmetabase  |   ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""\r\nmetabase  |   ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""\r\nmetabase  |   ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""\r\nmetabase  |   ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""\r\nmetabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""\r\nmetabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""\r\nmetabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""\r\nmetabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""\r\nmetabase  |   ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""\r\nmetabase  |   ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""\r\nmetabase  |   ""query_processor.context$executef.invokeStatic(context.clj:60)""\r\nmetabase  |   ""query_processor.context$executef.invoke(context.clj:49)""\r\nmetabase  |   ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""\r\nmetabase  |   ""query_processor.context.default$default_runf.invoke(default.clj:42)""\r\nmetabase  |   ""query_processor.context$runf.invokeStatic(context.clj:46)""\r\nmetabase  |   ""query_processor.context$runf.invoke(context.clj:40)""\r\nmetabase  |   ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""\r\nmetabase  |   ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""\r\nmetabase  |   ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""\r\nmetabase  |   ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""\r\nmetabase  |   ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""\r\nmetabase  |   ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""\r\nmetabase  |   ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""\r\nmetabase  |   ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""\r\nmetabase  |   ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""\r\nmetabase  |   ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:303)""\r\nmetabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""\r\nmetabase  |   ""driver$do_with_driver.invokeStatic(driver.clj:94)""\r\nmetabase  |   ""driver$do_with_driver.invoke(driver.clj:89)""\r\nmetabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""\r\nmetabase  |   ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""\r\nmetabase  |   ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""\r\nmetabase  |   ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""\r\nmetabase  |   ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""\r\nmetabase  |   ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""\r\nmetabase  |   ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""\r\nmetabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""\r\nmetabase  |   ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""\r\nmetabase  |   ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""\r\nmetabase  |   ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""\r\nmetabase  |   ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""\r\nmetabase  |   ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""\r\nmetabase  |   ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""\r\nmetabase  |   ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""\r\nmetabase  |   ""query_processor.reducible$async_qp$qp_STAR___60713$fn__60717.invoke(reducible.clj:131)""],\r\nmetabase  |  :card_id 145,\r\nmetabase  |  :context :dashboard,\r\nmetabase  |  :error ""Broken pipe"",\r\nmetabase  |  :row_count 0,\r\nmetabase  |  :running_time 0,\r\nmetabase  |  :preprocessed\r\nmetabase  |  {:constraints {:max-results 10000, :max-results-bare-rows 2000},\r\nmetabase  |   :type :query,\r\nmetabase  |   :middleware {:js-int-to-string? true, :ignore-cached-results? false},\r\nmetabase  |   :user-parameters\r\nmetabase  |   [{:type :string/=, :id ""71b936d7"", :target [:dimension [:field 4762 {:join-alias ""project - project_id""}]]}],\r\nmetabase  |   :viz-settings {},\r\nmetabase  |   :info\r\nmetabase  |   {:executed-by 1,\r\nmetabase  |    :context :dashboard,\r\nmetabase  |    :card-id 145,\r\nmetabase  |    :card-name ""All Projects - Project level"",\r\nmetabase  |    :dashboard-id 18,\r\nmetabase  |    :visualization-settings\r\nmetabase  |    {:table.columns\r\nmetabase  |     [{:name ""name"", :fieldref [:field 4762 {:join-alias ""project - project_id""}], :enabled true}\r\nmetabase  |      {:name ""sum"", :fieldref [:aggregation 0], :enabled true}\r\nmetabase  |      {:name ""sum_2"", :fieldref [:aggregation 1], :enabled true}\r\nmetabase  |      {:name ""sum_3"", :fieldref [:aggregation 2], :enabled true}\r\nmetabase  |      {:name ""revised_budget"", :fieldref [:expression ""revised_budget""], :enabled true}\r\nmetabase  |      {:name ""sum_4"", :fieldref [:aggregation 3], :enabled true}\r\nmetabase  |      {:name ""sum_7"", :fieldref [:aggregation 6], :enabled true}\r\nmetabase  |      {:name ""sum_5"", :fieldref [:aggregation 4], :enabled true}\r\nmetabase  |      {:name ""sum_6"", :fieldref [:aggregation 5], :enabled true}\r\nmetabase  |      {:name ""project_id"", :fieldref [:field 4747 nil], :enabled true}],\r\nmetabase  |     :table.pivot-column ""pending_budget_changes"",\r\nmetabase  |     :table.cell-column ""original_budget"",\r\nmetabase  |     :column-settings\r\nmetabase  |     {:[""name"",""sum""] {:column-title ""original_budget""},\r\nmetabase  |      :[""name"",""sum-5""] {:column-title ""committed_costs""},\r\nmetabase  |      :[""ref"",[""field"",4810,{""base-type"":""type/text"",""join-alias"":""division - division-id""}]] {:column-title ""division""},\r\nmetabase  |      :[""ref"",[""field"",4775,{""base-type"":""type/text"",""join-alias"":""subjob - subjob-id""}]] {:column-title ""subjob_label""},\r\nmetabase  |      :[""name"",""sum-6""] {:column-title ""cost_to_date""},\r\nmetabase  |      :[""name"",""sum-4""] {:column-title ""pending_budget_changes""},\r\nmetabase  |      :[""ref"",[""field"",4806,{""base-type"":""type/text"",""join-alias"":""cost-type - cost-type-id""}]]\r\nmetabase  |      {:column-title ""cost_type_label""},\r\nmetabase  |      :[""ref"",[""field"",4817,{""base-type"":""type/text"",""join-alias"":""phase - phase-id""}]] {:column-title ""phase""},\r\nmetabase  |      :[""ref"",[""field"",4762,{""base-type"":""type/text"",""join-alias"":""project - project-id""}]] {:column-title ""project""},\r\nmetabase  |      :[""ref"",[""field"",4818,{""base-type"":""type/text"",""join-alias"":""phase - phase-id""}]] {:column-title ""cost_code""},\r\nmetabase  |      :[""ref"",[""field"",4755,{""base-type"":""type/biginteger""}]] {:column-title ""cost_type_db_id""},\r\nmetabase  |      :[""ref"",[""field"",4757,{""base-type"":""type/biginteger""}]] {:column-title ""division_db_id""},\r\nmetabase  |      :[""name"",""sum-2""] {:column-title ""budget_modifications"", :number-style ""decimal"", :show-mini-bar false},\r\nmetabase  |      :[""ref"",[""field"",4820,{""base-type"":""type/text"",""join-alias"":""phase - phase-id""}]] {:column-title ""phase_id""},\r\nmetabase  |      :[""name"",""sum-3""] {:column-title ""approved_change_orders""},\r\nmetabase  |      :[""ref"",[""field"",4750,{""base-type"":""type/biginteger""}]] {:column-title ""phase_db_id""},\r\nmetabase  |      :[""name"",""sum-7""] {:column-title ""pending_cost_changes""},\r\nmetabase  |      :[""ref"",[""field"",4812,{""base-type"":""type/text"",""join-alias"":""division - division-id""}]]\r\nmetabase  |      {:column-title ""division_id""},\r\nmetabase  |      :[""ref"",[""field"",4747,{""base-type"":""type/biginteger""}]] {:column-title ""project_db_id""}}}},\r\nmetabase  |   :database 5,\r\nmetabase  |   :query\r\nmetabase  |   {:expressions\r\nmetabase  |    {""revised_budget""\r\nmetabase  |     [:+\r\nmetabase  |      [:field ""sum"" {:base-type :type/Float}]\r\nmetabase  |      [:field ""sum_2"" {:base-type :type/Float}]\r\nmetabase  |      [:field ""sum_3"" {:base-type :type/Float}]]},\r\nmetabase  |    :order-by [[:asc [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]]],\r\nmetabase  |    :source-metadata\r\nmetabase  |    [{:semantic_type :type/FK,\r\nmetabase  |      :table_id 275,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :name ""project_id"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :field_ref [:field 4747 {:base-type :type/BigInteger}],\r\nmetabase  |      :effective_type :type/BigInteger,\r\nmetabase  |      :nfc_path nil,\r\nmetabase  |      :parent_id nil,\r\nmetabase  |      :id 4747,\r\nmetabase  |      :display_name ""project_id"",\r\nmetabase  |      :fingerprint {:global {:distinct-count 6, :nil% 0.0}},\r\nmetabase  |      :base_type :type/BigInteger}\r\nmetabase  |     {:name ""sum"",\r\nmetabase  |      :display_name ""Sum of original_budget"",\r\nmetabase  |      :base_type :type/Float,\r\nmetabase  |      :settings nil,\r\nmetabase  |      :field_ref [:aggregation 0]}\r\nmetabase  |     {:name ""sum_2"",\r\nmetabase  |      :display_name ""Sum of budget_modifications"",\r\nmetabase  |      :base_type :type/Float,\r\nmetabase  |      :settings nil,\r\nmetabase  |      :field_ref [:aggregation 1]}\r\nmetabase  |     {:name ""sum_3"",\r\nmetabase  |      :display_name ""Sum of approved_change_orders"",\r\nmetabase  |      :base_type :type/Float,\r\nmetabase  |      :settings nil,\r\nmetabase  |      :field_ref [:aggregation 2]}\r\nmetabase  |     {:name ""sum_4"",\r\nmetabase  |      :display_name ""Sum of pending_budget_changes"",\r\nmetabase  |      :base_type :type/Float,\r\nmetabase  |      :settings nil,\r\nmetabase  |      :field_ref [:aggregation 3]}\r\nmetabase  |     {:name ""sum_5"",\r\nmetabase  |      :display_name ""Sum of committed_costs"",\r\nmetabase  |      :base_type :type/Float,\r\nmetabase  |      :settings nil,\r\nmetabase  |      :field_ref [:aggregation 4]}\r\nmetabase  |     {:name ""sum_6"",\r\nmetabase  |      :display_name ""Sum of cost_to_date"",\r\nmetabase  |      :base_type :type/Float,\r\nmetabase  |      :settings nil,\r\nmetabase  |      :field_ref [:aggregation 5]}\r\nmetabase  |     {:name ""sum_7"",\r\nmetabase  |      :display_name ""Sum of pending_cost_changes"",\r\nmetabase  |      :base_type :type/Float,\r\nmetabase  |      :settings nil,\r\nmetabase  |      :field_ref [:aggregation 6]}],\r\nmetabase  |    :fields\r\nmetabase  |    [[:field 4747 {:base-type :type/BigInteger}]\r\nmetabase  |     [:field ""sum"" {:base-type :type/Float}]\r\nmetabase  |     [:field ""sum_2"" {:base-type :type/Float}]\r\nmetabase  |     [:field ""sum_3"" {:base-type :type/Float}]\r\nmetabase  |     [:field ""sum_4"" {:base-type :type/Float}]\r\nmetabase  |     [:field ""sum_5"" {:base-type :type/Float}]\r\nmetabase  |     [:field ""sum_6"" {:base-type :type/Float}]\r\nmetabase  |     [:field ""sum_7"" {:base-type :type/Float}]\r\nmetabase  |     [:expression ""revised_budget""]\r\nmetabase  |     [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]],\r\nmetabase  |    :joins\r\nmetabase  |    [{:alias ""project - project_id"",\r\nmetabase  |      :strategy :left-join,\r\nmetabase  |      :fields [[:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]],\r\nmetabase  |      :condition\r\nmetabase  |      [:=\r\nmetabase  |       [:field 4747 {:base-type :type/BigInteger}]\r\nmetabase  |       [:field 4761 {:base-type :type/Integer, :join-alias ""project - project_id""}]],\r\nmetabase  |      :source-table 272}],\r\nmetabase  |    :source-query\r\nmetabase  |    {:breakout [[:field 4747 {:base-type :type/BigInteger}]],\r\nmetabase  |     :aggregation\r\nmetabase  |     [[:aggregation-options [:sum [:field 4751 {:base-type :type/Float}]] {:name ""sum""}]\r\nmetabase  |      [:aggregation-options [:sum [:field 4752 {:base-type :type/Float}]] {:name ""sum_2""}]\r\nmetabase  |      [:aggregation-options [:sum [:field 4748 {:base-type :type/Float}]] {:name ""sum_3""}]\r\nmetabase  |      [:aggregation-options [:sum [:field 4745 {:base-type :type/Float}]] {:name ""sum_4""}]\r\nmetabase  |      [:aggregation-options [:sum [:field 4746 {:base-type :type/Float}]] {:name ""sum_5""}]\r\nmetabase  |      [:aggregation-options [:sum [:field 4756 {:base-type :type/Float}]] {:name ""sum_6""}]\r\nmetabase  |      [:aggregation-options [:sum [:field 4753 {:base-type :type/Float}]] {:name ""sum_7""}]],\r\nmetabase  |     :source-card-id 140,\r\nmetabase  |     :source-metadata\r\nmetabase  |     [{:description nil,\r\nmetabase  |       :semantic_type :type/PK,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :name ""id"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id nil,\r\nmetabase  |       :field_ref [:field 5136 {:base-type :type/Integer}],\r\nmetabase  |       :effective_type :type/Integer,\r\nmetabase  |       :id 5136,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""id"",\r\nmetabase  |       :fingerprint nil,\r\nmetabase  |       :base_type :type/Integer}\r\nmetabase  |      {:description nil,\r\nmetabase  |       :semantic_type :type/Category,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :name ""project_id"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id nil,\r\nmetabase  |       :field_ref [:field 5139 {:base-type :type/BigInteger}],\r\nmetabase  |       :effective_type :type/BigInteger,\r\nmetabase  |       :id 5139,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""project_id"",\r\nmetabase  |       :fingerprint\r\nmetabase  |       {:global {:distinct-count 28, :nil% 0},\r\nmetabase  |        :type\r\nmetabase  |        {:type/Number\r\nmetabase  |         {:min 12, :q1 19.52158164046306, :q3 30.000926863170704, :max 46, :sd 6.529207780843288, :avg 25.4391}}},\r\nmetabase  |       :base_type :type/BigInteger}\r\nmetabase  |      {:description nil,\r\nmetabase  |       :semantic_type :type/FK,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :name ""division_id"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id 4809,\r\nmetabase  |       :field_ref [:field 5148 {:base-type :type/BigInteger}],\r\nmetabase  |       :effective_type :type/BigInteger,\r\nmetabase  |       :id 5148,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""division_id"",\r\nmetabase  |       :fingerprint {:global {:distinct-count 50, :nil% 0}},\r\nmetabase  |       :base_type :type/BigInteger}\r\nmetabase  |      {:description nil,\r\nmetabase  |       :semantic_type :type/FK,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :name ""phase_id"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id 4816,\r\nmetabase  |       :field_ref [:field 5141 {:base-type :type/BigInteger}],\r\nmetabase  |       :effective_type :type/BigInteger,\r\nmetabase  |       :id 5141,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""phase_id"",\r\nmetabase  |       :fingerprint {:global {:distinct-count 444, :nil% 0}},\r\nmetabase  |       :base_type :type/BigInteger}\r\nmetabase  |      {:description nil,\r\nmetabase  |       :semantic_type nil,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :name ""subjob_id"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id nil,\r\nmetabase  |       :field_ref [:field 5135 {:base-type :type/BigInteger}],\r\nmetabase  |       :effective_type :type/BigInteger,\r\nmetabase  |       :id 5135,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""subjob_id"",\r\nmetabase  |       :fingerprint\r\nmetabase  |       {:global {:distinct-count 215, :nil% 0.4417},\r\nmetabase  |        :type\r\nmetabase  |        {:type/Number\r\nmetabase  |         {:min 153,\r\nmetabase  |          :q1 228.7728093528213,\r\nmetabase  |          :q3 324.8630031964761,\r\nmetabase  |          :max 375,\r\nmetabase  |          :sd 56.79493084837947,\r\nmetabase  |          :avg 276.75998567078625}}},\r\nmetabase  |       :base_type :type/BigInteger}\r\nmetabase  |      {:description nil,\r\nmetabase  |       :semantic_type :type/FK,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :name ""cost_type_id"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id 4805,\r\nmetabase  |       :field_ref [:field 5146 {:base-type :type/BigInteger}],\r\nmetabase  |       :effective_type :type/BigInteger,\r\nmetabase  |       :id 5146,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""cost_type_id"",\r\nmetabase  |       :fingerprint {:global {:distinct-count 12, :nil% 0}},\r\nmetabase  |       :base_type :type/BigInteger}\r\nmetabase  |      {:description nil,\r\nmetabase  |       :semantic_type nil,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :name ""original_budget"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id nil,\r\nmetabase  |       :field_ref [:field 5142 {:base-type :type/Float}],\r\nmetabase  |       :effective_type :type/Float,\r\nmetabase  |       :id 5142,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""original_budget"",\r\nmetabase  |       :fingerprint\r\nmetabase  |       {:global {:distinct-count 2927, :nil% 0},\r\nmetabase  |        :type\r\nmetabase  |        {:type/Number\r\nmetabase  |         {:min -15000,\r\nmetabase  |          :q1 1650.862028593805,\r\nmetabase  |          :q3 42427.612653579316,\r\nmetabase  |          :max 61998921,\r\nmetabase  |          :sd 1222692.0637818938,\r\nmetabase  |          :avg 98694.22240099999}}},\r\nmetabase  |       :base_type :type/Float}\r\nmetabase  |      {:description nil,\r\nmetabase  |       :semantic_type nil,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :name ""budget_modifications"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id nil,\r\nmetabase  |       :field_ref [:field 5143 {:base-type :type/Float}],\r\nmetabase  |       :effective_type :type/Float,\r\nmetabase  |       :id 5143,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""budget_modifications"",\r\nmetabase  |       :fingerprint\r\nmetabase  |       {:global {:distinct-count 5372, :nil% 0},\r\nmetabase  |        :type\r\nmetabase  |        {:type/Number\r\nmetabase  |         {:min -13961544,\r\nmetabase  |          :q1 -46696.048316343105,\r\nmetabase  |          :q3 38079.889821447665,\r\nmetabase  |          :max 7593650,\r\nmetabase  |          :sd 388669.6167360365,\r\nmetabase  |          :avg 3251.8723759999975}}},\r\nmetabase  |       :base_type :type/Float}\r\nmetabase  |      {:description nil,\r\nmetabase  |       :semantic_type nil,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :name ""approved_change_orders"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id nil,\r\nmetabase  |       :field_ref [:field 5134 {:base-type :type/Float}],\r\nmetabase  |       :effective_type :type/Float,\r\nmetabase  |       :id 5134,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""approved_change_orders"",\r\nmetabase  |       :fingerprint\r\nmetabase  |       {:global {:distinct-count 112, :nil% 0.0735},\r\nmetabase  |        :type\r\nmetabase  |        {:type/Number\r\nmetabase  |         {:min -2118563,\r\nmetabase  |          :q1 -201.38202331354478,\r\nmetabase  |          :q3 191.7514213997219,\r\nmetabase  |          :max 7593650,\r\nmetabase  |          :sd 84794.24111903225,\r\nmetabase  |          :avg 1132.1864522396115}}},\r\nmetabase  |       :base_type :type/Float}\r\nmetabase  |      {:description nil,\r\nmetabase  |       :semantic_type nil,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :name ""pending_budget_changes"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id nil,\r\nmetabase  |       :field_ref [:field 5137 {:base-type :type/Float}],\r\nmetabase  |       :effective_type :type/Float,\r\nmetabase  |       :id 5137,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""pending_budget_changes"",\r\nmetabase  |       :fingerprint\r\nmetabase  |       {:global {:distinct-count 2, :nil% 0},\r\nmetabase  |        :type {:type/Number {:min -3102.5, :q1 -909.0115014843832, :q3 0, :max 0, :sd 31.025, :avg -0.31025}}},\r\nmetabase  |       :base_type :type/Float}\r\nmetabase  |      {:description nil,\r\nmetabase  |       :semantic_type nil,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :name ""committed_costs"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id nil,\r\nmetabase  |       :field_ref [:field 5138 {:base-type :type/Float}],\r\nmetabase  |       :effective_type :type/Float,\r\nmetabase  |       :id 5138,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""committed_costs"",\r\nmetabase  |       :fingerprint\r\nmetabase  |       {:global {:distinct-count 3608, :nil% 0},\r\nmetabase  |        :type\r\nmetabase  |        {:type/Number\r\nmetabase  |         {:min -29039.42,\r\nmetabase  |          :q1 -3164.494824706897,\r\nmetabase  |          :q3 25252.15706035909,\r\nmetabase  |          :max 4299662.6,\r\nmetabase  |          :sd 195574.55726043574,\r\nmetabase  |          :avg 52424.216188}}},\r\nmetabase  |       :base_type :type/Float}\r\nmetabase  |      {:description nil,\r\nmetabase  |       :semantic_type nil,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :name ""cost_to_date"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id nil,\r\nmetabase  |       :field_ref [:field 5147 {:base-type :type/Float}],\r\nmetabase  |       :effective_type :type/Float,\r\nmetabase  |       :id 5147,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""cost_to_date"",\r\nmetabase  |       :fingerprint\r\nmetabase  |       {:global {:distinct-count 5167, :nil% 0},\r\nmetabase  |        :type\r\nmetabase  |        {:type/Number\r\nmetabase  |         {:min -73583.93,\r\nmetabase  |          :q1 -9618.972334975959,\r\nmetabase  |          :q3 30335.417426701963,\r\nmetabase  |          :max 5.321365176E7,\r\nmetabase  |          :sd 1068676.5332191263,\r\nmetabase  |          :avg 88005.01605499999}}},\r\nmetabase  |       :base_type :type/Float}\r\nmetabase  |      {:description nil,\r\nmetabase  |       :semantic_type nil,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :name ""pending_cost_changes"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id nil,\r\nmetabase  |       :field_ref [:field 5144 {:base-type :type/Float}],\r\nmetabase  |       :effective_type :type/Float,\r\nmetabase  |       :id 5144,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""pending_cost_changes"",\r\nmetabase  |       :fingerprint\r\nmetabase  |       {:global {:distinct-count 15, :nil% 0},\r\nmetabase  |        :type\r\nmetabase  |        {:type/Number\r\nmetabase  |         {:min -2546,\r\nmetabase  |          :q1 -744.6993419748337,\r\nmetabase  |          :q3 282.1369614765108,\r\nmetabase  |          :max 194237.5,\r\nmetabase  |          :sd 2771.6265922608873,\r\nmetabase  |          :avg 52.010897}}},\r\nmetabase  |       :base_type :type/Float}\r\nmetabase  |      {:description nil,\r\nmetabase  |       :semantic_type :type/Source,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :name ""source"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id nil,\r\nmetabase  |       :field_ref [:field 5140 {:base-type :type/Text}],\r\nmetabase  |       :effective_type :type/Text,\r\nmetabase  |       :id 5140,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""source"",\r\nmetabase  |       :fingerprint\r\nmetabase  |       {:global {:distinct-count 2, :nil% 0},\r\nmetabase  |        :type\r\nmetabase  |        {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 7.0735}}},\r\nmetabase  |       :base_type :type/Text}\r\nmetabase  |      {:description nil,\r\nmetabase  |       :semantic_type nil,\r\nmetabase  |       :coercion_strategy nil,\r\nmetabase  |       :unit :default,\r\nmetabase  |       :name ""last_modified"",\r\nmetabase  |       :settings nil,\r\nmetabase  |       :fk_target_field_id nil,\r\nmetabase  |       :field_ref [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}],\r\nmetabase  |       :effective_type :type/DateTime,\r\nmetabase  |       :id 5145,\r\nmetabase  |       :visibility_type :normal,\r\nmetabase  |       :display_name ""last_modified"",\r\nmetabase  |       :fingerprint\r\nmetabase  |       {:global {:distinct-count 4890, :nil% 0},\r\nmetabase  |        :type {:type/DateTime {:earliest ""2024-01-23T18:43:06.147593Z"", :latest ""2024-02-13T15:31:25.346999Z""}}},\r\nmetabase  |       :base_type :type/DateTime}],\r\nmetabase  |     :source-query/dataset? true,\r\nmetabase  |     :order-by [[:asc [:field 4747 {:base-type :type/BigInteger}]]],\r\nmetabase  |     :source-query\r\nmetabase  |     {:source-table 307,\r\nmetabase  |      :order-by [[:asc [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]]],\r\nmetabase  |      :fields\r\nmetabase  |      [[:field 5136 {:base-type :type/Integer}]\r\nmetabase  |       [:field 5139 {:base-type :type/BigInteger}]\r\nmetabase  |       [:field 5148 {:base-type :type/BigInteger}]\r\nmetabase  |       [:field 5141 {:base-type :type/BigInteger}]\r\nmetabase  |       [:field 5135 {:base-type :type/BigInteger}]\r\nmetabase  |       [:field 5146 {:base-type :type/BigInteger}]\r\nmetabase  |       [:field 5142 {:base-type :type/Float}]\r\nmetabase  |       [:field 5143 {:base-type :type/Float}]\r\nmetabase  |       [:field 5134 {:base-type :type/Float}]\r\nmetabase  |       [:field 5137 {:base-type :type/Float}]\r\nmetabase  |       [:field 5138 {:base-type :type/Float}]\r\nmetabase  |       [:field 5147 {:base-type :type/Float}]\r\nmetabase  |       [:field 5144 {:base-type :type/Float}]\r\nmetabase  |       [:field 5140 {:base-type :type/Text}]\r\nmetabase  |       [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}]],\r\nmetabase  |      :expressions {""approved_change_orders"" [:coalesce [:field 5134 nil] 0]},\r\nmetabase  |      :filter\r\nmetabase  |      [:or\r\nmetabase  |       [:not\r\nmetabase  |        [:=\r\nmetabase  |         [:field 5140 {:base-type :type/Text}]\r\nmetabase  |         [:value\r\nmetabase  |          ""realpage""\r\nmetabase  |          {:base_type :type/Text,\r\nmetabase  |           :effective_type :type/Text,\r\nmetabase  |           :coercion_strategy nil,\r\nmetabase  |           :semantic_type :type/Source,\r\nmetabase  |           :database_type ""varchar"",\r\nmetabase  |           :name ""source""}]]]\r\nmetabase  |       [:and\r\nmetabase  |        [:not\r\nmetabase  |         [:=\r\nmetabase  |          [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]\r\nmetabase  |          [:value\r\nmetabase  |           ""55-9800""\r\nmetabase  |           {:base_type :type/Text,\r\nmetabase  |            :effective_type :type/Text,\r\nmetabase  |            :coercion_strategy nil,\r\nmetabase  |            :semantic_type nil,\r\nmetabase  |            :database_type ""bpchar"",\r\nmetabase  |            :name ""cost_code""}]]]\r\nmetabase  |        [:not\r\nmetabase  |         [:=\r\nmetabase  |          [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]\r\nmetabase  |          [:value\r\nmetabase  |           ""55-9900""\r\nmetabase  |           {:base_type :type/Text,\r\nmetabase  |            :effective_type :type/Text,\r\nmetabase  |            :coercion_strategy nil,\r\nmetabase  |            :semantic_type nil,\r\nmetabase  |            :database_type ""bpchar"",\r\nmetabase  |            :name ""cost_code""}]]]]],\r\nmetabase  |      :joins\r\nmetabase  |      [{:alias ""phase - phase_id"",\r\nmetabase  |        :strategy :left-join,\r\nmetabase  |        :condition\r\nmetabase  |        [:=\r\nmetabase  |         [:field 5141 {:base-type :type/BigInteger}]\r\nmetabase  |         [:field 4816 {:base-type :type/Integer, :join-alias ""phase - phase_id""}]],\r\nmetabase  |        :source-table 282}]}},\r\nmetabase  |    :limit 2000,\r\nmetabase  |    :metabase.query-processor.middleware.limit/original-limit nil},\r\nmetabase  |   :async? true},\r\nmetabase  |  :data {:rows [], :cols []}}\r\nmetabase  |\r\nmetabase  | 2024-02-22 00:09:30,749 ERROR middleware.catch-exceptions :: Error processing query: Broken pipe\r\nmetabase  | {:database_id 5,\r\nmetabase  |  :started_at #t ""2024-02-22T00:09:27.401505Z[GMT]"",\r\nmetabase  |  :via\r\nmetabase  |  [{:status :failed,\r\nmetabase  |    :class org.eclipse.jetty.io.EofException,\r\nmetabase  |    :error nil,\r\nmetabase  |    :stacktrace\r\nmetabase  |    [""org.eclipse.jetty.io.SocketChannelEndPoint.flush(SocketChannelEndPoint.java:116)""\r\nmetabase  |     ""org.eclipse.jetty.io.WriteFlusher.flush(WriteFlusher.java:422)""\r\nmetabase  |     ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:275)""\r\nmetabase  |     ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:254)""\r\nmetabase  |     ""org.eclipse.jetty.io.AbstractEndPoint.write(AbstractEndPoint.java:386)""\r\nmetabase  |     ""org.eclipse.jetty.server.HttpConnection$SendCallback.process(HttpConnection.java:832)""\r\nmetabase  |     ""org.eclipse.jetty.util.IteratingCallback.processing(IteratingCallback.java:243)""\r\nmetabase  |     ""org.eclipse.jetty.util.IteratingCallback.iterate(IteratingCallback.java:224)""\r\nmetabase  |     ""org.eclipse.jetty.server.HttpConnection.send(HttpConnection.java:589)""\r\nmetabase  |     ""org.eclipse.jetty.server.HttpChannel.sendResponse(HttpChannel.java:1051)""\r\nmetabase  |     ""org.eclipse.jetty.server.HttpChannel.write(HttpChannel.java:1123)""\r\nmetabase  |     ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:270)""\r\nmetabase  |     ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:254)""\r\nmetabase  |     ""org.eclipse.jetty.server.HttpOutput.flush(HttpOutput.java:736)""\r\nmetabase  |     ""java.base/java.util.zip.DeflaterOutputStream.flush(Unknown Source)""\r\nmetabase  |     ""--> async.streaming_response$delay_output_stream$fn__42918.invoke(streaming_response.clj:123)""\r\nmetabase  |     ""async.streaming_response.proxy$java.io.OutputStream$ff19274a.flush(Unknown Source)""\r\nmetabase  |     ""query_processor.streaming.json$fn$reify__50704.write_row_BANG_(json.clj:75)""\r\nmetabase  |     ""query_processor.streaming$streaming_rff$fn__51519$fn__51524.invoke(streaming.clj:127)""\r\nmetabase  |     ""query_processor.middleware.process_userland_query$add_and_save_execution_info_xform_BANG_$execution_info_rf_STAR___70969.invoke(process_userland_query.clj:110)""\r\nmetabase  |     ""query_processor.reducible$combine_additional_reducing_fns$combine_additional_reducing_fns_rf_STAR___60736.invoke(reducible.clj:233)""\r\nmetabase  |     ""query_processor.middleware.add_rows_truncated$add_rows_truncated_xform$fn__69577.invoke(add_rows_truncated.clj:34)""\r\nmetabase  |     ""query_processor.middleware.format_rows$format_rows_xform$fn__71472.invoke(format_rows.clj:74)""\r\nmetabase  |     ""query_processor.reducible$reducible_rows$reify__60728.reduce(reducible.clj:177)""\r\nmetabase  |     ""query_processor.context.default$default_reducef$fn__49405.invoke(default.clj:34)""\r\nmetabase  |     ""query_processor.context.default$default_reducef.invokeStatic(default.clj:33)""\r\nmetabase  |     ""query_processor.context.default$default_reducef.invoke(default.clj:25)""\r\nmetabase  |     ""query_processor.context$reducef.invokeStatic(context.clj:70)""\r\nmetabase  |     ""query_processor.context$reducef.invoke(context.clj:63)""\r\nmetabase  |     ""query_processor.context.default$default_runf$respond_STAR___49409.invoke(default.clj:45)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:706)""\r\nmetabase  |     ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""\r\nmetabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""\r\nmetabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""\r\nmetabase  |     ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""\r\nmetabase  |     ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""\r\nmetabase  |     ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""\r\nmetabase  |     ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""\r\nmetabase  |     ""query_processor.context$executef.invokeStatic(context.clj:60)""\r\nmetabase  |     ""query_processor.context$executef.invoke(context.clj:49)""\r\nmetabase  |     ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""\r\nmetabase  |     ""query_processor.context.default$default_runf.invoke(default.clj:42)""\r\nmetabase  |     ""query_processor.context$runf.invokeStatic(context.clj:46)""\r\nmetabase  |     ""query_processor.context$runf.invoke(context.clj:40)""\r\nmetabase  |     ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""\r\nmetabase  |     ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""\r\nmetabase  |     ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""\r\nmetabase  |     ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""\r\nmetabase  |     ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""\r\nmetabase  |     ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""\r\nmetabase  |     ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""\r\nmetabase  |     ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""\r\nmetabase  |     ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""\r\nmetabase  |     ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:299)""\r\nmetabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""\r\nmetabase  |     ""driver$do_with_driver.invokeStatic(driver.clj:94)""\r\nmetabase  |     ""driver$do_with_driver.invoke(driver.clj:89)""\r\nmetabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""\r\nmetabase  |     ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""\r\nmetabase  |     ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""\r\nmetabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""\r\nmetabase  |     ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""\r\nmetabase  |     ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""\r\nmetabase  |     ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""\r\nmetabase  |     ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""\r\nmetabase  |     ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""\r\nmetabase  |     ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""\r\nmetabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""\r\nmetabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713.invoke(reducible.clj:132)""\r\nmetabase  |     ""query_processor.reducible$sync_qp$qp_STAR___60725.doInvoke(reducible.clj:153)""\r\nmetabase  |     ""query_processor$process_userland_query.invokeStatic(query_processor.clj:402)""\r\nmetabase  |     ""query_processor$process_userland_query.doInvoke(query_processor.clj:398)""\r\nmetabase  |     ""query_processor$process_query_and_save_execution_BANG_.invokeStatic(query_processor.clj:416)""\r\nmetabase  |     ""query_processor$process_query_and_save_execution_BANG_.invoke(query_processor.clj:406)""\r\nmetabase  |     ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invokeStatic(query_processor.clj:431)""\r\nmetabase  |     ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invoke(query_processor.clj:421)""\r\nmetabase  |     ""api.dataset$run_query_async$fn__93366.invoke(dataset.clj:79)""\r\nmetabase  |     ""query_processor.streaming$streaming_response_STAR_$fn__51578$fn__51580.invoke(streaming.clj:168)""\r\nmetabase  |     ""query_processor.streaming$streaming_response_STAR_$fn__51578.invoke(streaming.clj:167)""\r\nmetabase  |     ""async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)""\r\nmetabase  |     ""async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)""\r\nmetabase  |     ""async.streaming_response$do_f_async$task__42901.invoke(streaming_response.clj:88)""]}\r\nmetabase  |   {:status :failed,\r\nmetabase  |    :class clojure.lang.ExceptionInfo,\r\nmetabase  |    :error ""Error reducing result rows: null"",\r\nmetabase  |    :stacktrace\r\nmetabase  |    [""--> query_processor.context.default$default_reducef$fn__49405.invoke(default.clj:36)""\r\nmetabase  |     ""query_processor.context.default$default_reducef.invokeStatic(default.clj:33)""\r\nmetabase  |     ""query_processor.context.default$default_reducef.invoke(default.clj:25)""\r\nmetabase  |     ""query_processor.context$reducef.invokeStatic(context.clj:70)""\r\nmetabase  |     ""query_processor.context$reducef.invoke(context.clj:63)""\r\nmetabase  |     ""query_processor.context.default$default_runf$respond_STAR___49409.invoke(default.clj:45)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:706)""\r\nmetabase  |     ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""\r\nmetabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""\r\nmetabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""\r\nmetabase  |     ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""\r\nmetabase  |     ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""\r\nmetabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""\r\nmetabase  |     ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""\r\nmetabase  |     ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""\r\nmetabase  |     ""query_processor.context$executef.invokeStatic(context.clj:60)""\r\nmetabase  |     ""query_processor.context$executef.invoke(context.clj:49)""\r\nmetabase  |     ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""\r\nmetabase  |     ""query_processor.context.default$default_runf.invoke(default.clj:42)""\r\nmetabase  |     ""query_processor.context$runf.invokeStatic(context.clj:46)""\r\nmetabase  |     ""query_processor.context$runf.invoke(context.clj:40)""\r\nmetabase  |     ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""\r\nmetabase  |     ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""\r\nmetabase  |     ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""\r\nmetabase  |     ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""\r\nmetabase  |     ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""\r\nmetabase  |     ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""\r\nmetabase  |     ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""\r\nmetabase  |     ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""\r\nmetabase  |     ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""\r\nmetabase  |     ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:299)""\r\nmetabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""\r\nmetabase  |     ""driver$do_with_driver.invokeStatic(driver.clj:94)""\r\nmetabase  |     ""driver$do_with_driver.invoke(driver.clj:89)""\r\nmetabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""\r\nmetabase  |     ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""\r\nmetabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""\r\nmetabase  |     ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""\r\nmetabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""\r\nmetabase  |     ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""\r\nmetabase  |     ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""\r\nmetabase  |     ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""\r\nmetabase  |     ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""\r\nmetabase  |     ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""\r\nmetabase  |     ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""\r\nmetabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""\r\nmetabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713.invoke(reducible.clj:132)""\r\nmetabase  |     ""query_processor.reducible$sync_qp$qp_STAR___60725.doInvoke(reducible.clj:153)""\r\nmetabase  |     ""query_processor$process_userland_query.invokeStatic(query_processor.clj:402)""\r\nmetabase  |     ""query_processor$process_userland_query.doInvoke(query_processor.clj:398)""\r\nmetabase  |     ""query_processor$process_query_and_save_execution_BANG_.invokeStatic(query_processor.clj:416)""\r\nmetabase  |     ""query_processor$process_query_and_save_execution_BANG_.invoke(query_processor.clj:406)""\r\nmetabase  |     ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invokeStatic(query_processor.clj:431)""\r\nmetabase  |     ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invoke(query_processor.clj:421)""\r\nmetabase  |     ""api.dataset$run_query_async$fn__93366.invoke(dataset.clj:79)""\r\nmetabase  |     ""query_processor.streaming$streaming_response_STAR_$fn__51578$fn__51580.invoke(streaming.clj:168)""\r\nmetabase  |     ""query_processor.streaming$streaming_response_STAR_$fn__51578.invoke(streaming.clj:167)""\r\nmetabase  |     ""async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)""\r\nmetabase  |     ""async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)""\r\nmetabase  |     ""async.streaming_response$do_f_async$task__42901.invoke(streaming_response.clj:88)""],\r\nmetabase  |    :error_type :qp,\r\nmetabase  |    :ex-data {:type :qp}}],\r\nmetabase  |  :action_id nil,\r\nmetabase  |  :error_type :qp,\r\nmetabase  |  :json_query\r\nmetabase  |  {:type ""query"",\r\nmetabase  |   :database 5,\r\nmetabase  |   :query {:source-table ""card__170""},\r\nmetabase  |   :parameters [],\r\nmetabase  |   :middleware {:js-int-to-string? true, :add-default-userland-constraints? true}},\r\nmetabase  |  :native\r\nmetabase  |  {:query\r\nmetabase  |   ""SELECT \\""source\\"".\\""original_budget\\"" AS \\""original_budget\\"", \\""source\\"".\\""budget_modifications\\"" AS \\""budget_modifications\\"", \\""source\\"".\\""approved_change_orders\\"" AS \\""approved_change_orders\\"", \\""source\\"".\\""pending_budget_changes\\"" AS \\""pending_budget_changes\\"", \\""source\\"".\\""committed_costs\\"" AS \\""committed_costs\\"", \\""source\\"".\\""cost_to_date\\"" AS \\""cost_to_date\\"", \\""source\\"".\\""pending_cost_changes\\"" AS \\""pending_cost_changes\\"", \\""source\\"".\\""source\\"" AS \\""source\\"", \\""source\\"".\\""last_modified\\"" AS \\""last_modified\\"", \\""source\\"".\\""cost_code_type\\"" AS \\""cost_code_type\\"", \\""source\\"".\\""revised_budget\\"" AS \\""revised_budget\\"", \\""source\\"".\\""project - project_id__name\\"" AS \\""project - project_id__name\\"", \\""source\\"".\\""division - division_id__pretty_name\\"" AS \\""division - division_id__pretty_name\\"", \\""source\\"".\\""phase - phase_id__pretty_name\\"" AS \\""phase - phase_id__pretty_name\\"", \\""source\\"".\\""cost_type - cost_type_id__label\\"" AS \\""cost_type - cost_type_id__label\\"", \\""source\\"".\\""subjob__name\\"" AS \\""subjob__name\\"" FROM (SELECT \\""source\\"".\\""original_budget\\"" AS \\""original_budget\\"", \\""source\\"".\\""budget_modifications\\"" AS \\""budget_modifications\\"", \\""source\\"".\\""approved_change_orders\\"" AS \\""approved_change_orders\\"", \\""source\\"".\\""pending_budget_changes\\"" AS \\""pending_budget_changes\\"", \\""source\\"".\\""committed_costs\\"" AS \\""committed_costs\\"", \\""source\\"".\\""cost_to_date\\"" AS \\""cost_to_date\\"", \\""source\\"".\\""pending_cost_changes\\"" AS \\""pending_cost_changes\\"", \\""source\\"".\\""source\\"" AS \\""source\\"", \\""source\\"".\\""last_modified\\"" AS \\""last_modified\\"", \\""source\\"".\\""cost_code_type\\"" AS \\""cost_code_type\\"", \\""source\\"".\\""revised_budget\\"" AS \\""revised_budget\\"", \\""source\\"".\\""project - project_id__name\\"" AS \\""project - project_id__name\\"", \\""source\\"".\\""division - division_id__pretty_name\\"" AS \\""division - division_id__pretty_name\\"", \\""source\\"".\\""phase - phase_id__pretty_name\\"" AS \\""phase - phase_id__pretty_name\\"", \\""source\\"".\\""cost_type - cost_type_id__label\\"" AS \\""cost_type - cost_type_id__label\\"", \\""source\\"".\\""subjob__name\\"" AS \\""subjob__name\\"" FROM (SELECT \\""budgets\\"".\\""wbs_cost\\"".\\""project_id\\"" AS \\""project_id\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""division_id\\"" AS \\""division_id\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""phase_id\\"" AS \\""phase_id\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""subjob_id\\"" AS \\""subjob_id\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""cost_type_id\\"" AS \\""cost_type_id\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""original_budget\\"" AS \\""original_budget\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""budget_modifications\\"" AS \\""budget_modifications\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""approved_change_orders\\"" AS \\""approved_change_orders\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""pending_budget_changes\\"" AS \\""pending_budget_changes\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""committed_costs\\"" AS \\""committed_costs\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""cost_to_date\\"" AS \\""cost_to_date\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""pending_cost_changes\\"" AS \\""pending_cost_changes\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""source\\"" AS \\""source\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""last_modified\\"" AS \\""last_modified\\"", CONCAT(\\""phase - phase_id\\"".\\""cost_code\\"", \\""cost_type - cost_type_id\\"".\\""label\\"") AS \\""cost_code_type\\"", \\""budgets\\"".\\""wbs_cost\\"".\\""original_budget\\"" + \\""budgets\\"".\\""wbs_cost\\"".\\""budget_modifications\\"" + \\""budgets\\"".\\""wbs_cost\\"".\\""approved_change_orders\\"" AS \\""revised_budget\\"", \\""project - project_id\\"".\\""name\\"" AS \\""project - project_id__name\\"", \\""division - division_id\\"".\\""pretty_name\\"" AS \\""division - division_id__pretty_name\\"", \\""phase - phase_id\\"".\\""pretty_name\\"" AS \\""phase - phase_id__pretty_name\\"", \\""cost_type - cost_type_id\\"".\\""label\\"" AS \\""cost_type - cost_type_id__label\\"", \\""subjob\\"".\\""name\\"" AS \\""subjob__name\\"", \\""phase - phase_id\\"".\\""cost_code\\"" AS \\""phase - phase_id__cost_code\\"", \\""subjob\\"".\\""label\\"" AS \\""subjob__label\\"", \\""project - project_id\\"".\\""id\\"" AS \\""project - project_id__id\\"", \\""division - division_id\\"".\\""id\\"" AS \\""division - division_id__id\\"", \\""phase - phase_id\\"".\\""id\\"" AS \\""phase - phase_id__id\\"", \\""cost_type - cost_type_id\\"".\\""id\\"" AS \\""cost_type - cost_type_id__id\\"", \\""subjob\\"".\\""id\\"" AS \\""subjob__id\\"" FROM \\""budgets\\"".\\""wbs_cost\\"" LEFT JOIN \\""projects\\"".\\""project\\"" AS \\""project - project_id\\"" ON \\""budgets\\"".\\""wbs_cost\\"".\\""project_id\\"" = \\""project - project_id\\"".\\""id\\"" LEFT JOIN \\""wbs\\"".\\""division\\"" AS \\""division - division_id\\"" ON \\""budgets\\"".\\""wbs_cost\\"".\\""division_id\\"" = \\""division - division_id\\"".\\""id\\"" LEFT JOIN \\""wbs\\"".\\""phase\\"" AS \\""phase - phase_id\\"" ON \\""budgets\\"".\\""wbs_cost\\"".\\""phase_id\\"" = \\""phase - phase_id\\"".\\""id\\"" LEFT JOIN \\""wbs\\"".\\""cost_type\\"" AS \\""cost_type - cost_type_id\\"" ON \\""budgets\\"".\\""wbs_cost\\"".\\""cost_type_id\\"" = \\""cost_type - cost_type_id\\"".\\""id\\"" LEFT JOIN \\""projects\\"".\\""subjob\\"" AS \\""subjob\\"" ON \\""budgets\\"".\\""wbs_cost\\"".\\""subjob_id\\"" = \\""subjob\\"".\\""id\\"") AS \\""source\\"" ORDER BY \\""source\\"".\\""project - project_id__name\\"" ASC, \\""source\\"".\\""phase - phase_id__cost_code\\"" ASC, \\""source\\"".\\""cost_type - cost_type_id__label\\"" ASC, \\""source\\"".\\""subjob__label\\"" ASC) AS \\""source\\"" LIMIT 1048575"",\r\nmetabase  |   :params nil},\r\nmetabase  |  :status :failed,\r\nmetabase  |  :class java.io.IOException,\r\nmetabase  |  :stacktrace\r\nmetabase  |  [""java.base/sun.nio.ch.FileDispatcherImpl.writev0(Native Method)""\r\nmetabase  |   ""java.base/sun.nio.ch.SocketDispatcher.writev(Unknown Source)""\r\nmetabase  |   ""java.base/sun.nio.ch.IOUtil.write(Unknown Source)""\r\nmetabase  |   ""java.base/sun.nio.ch.IOUtil.write(Unknown Source)""\r\nmetabase  |   ""java.base/sun.nio.ch.SocketChannelImpl.write(Unknown Source)""\r\nmetabase  |   ""java.base/java.nio.channels.SocketChannel.write(Unknown Source)""\r\nmetabase  |   ""org.eclipse.jetty.io.SocketChannelEndPoint.flush(SocketChannelEndPoint.java:110)""\r\nmetabase  |   ""org.eclipse.jetty.io.WriteFlusher.flush(WriteFlusher.java:422)""\r\nmetabase  |   ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:275)""\r\nmetabase  |   ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:254)""\r\nmetabase  |   ""org.eclipse.jetty.io.AbstractEndPoint.write(AbstractEndPoint.java:386)""\r\nmetabase  |   ""org.eclipse.jetty.server.HttpConnection$SendCallback.process(HttpConnection.java:832)""\r\nmetabase  |   ""org.eclipse.jetty.util.IteratingCallback.processing(IteratingCallback.java:243)""\r\nmetabase  |   ""org.eclipse.jetty.util.IteratingCallback.iterate(IteratingCallback.java:224)""\r\nmetabase  |   ""org.eclipse.jetty.server.HttpConnection.send(HttpConnection.java:589)""\r\nmetabase  |   ""org.eclipse.jetty.server.HttpChannel.sendResponse(HttpChannel.java:1051)""\r\nmetabase  |   ""org.eclipse.jetty.server.HttpChannel.write(HttpChannel.java:1123)""\r\nmetabase  |   ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:270)""\r\nmetabase  |   ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:254)""\r\nmetabase  |   ""org.eclipse.jetty.server.HttpOutput.flush(HttpOutput.java:736)""\r\nmetabase  |   ""java.base/java.util.zip.DeflaterOutputStream.flush(Unknown Source)""\r\nmetabase  |   ""--> async.streaming_response$delay_output_stream$fn__42918.invoke(streaming_response.clj:123)""\r\nmetabase  |   ""async.streaming_response.proxy$java.io.OutputStream$ff19274a.flush(Unknown Source)""\r\nmetabase  |   ""query_processor.streaming.json$fn$reify__50704.write_row_BANG_(json.clj:75)""\r\nmetabase  |   ""query_processor.streaming$streaming_rff$fn__51519$fn__51524.invoke(streaming.clj:127)""\r\nmetabase  |   ""query_processor.middleware.process_userland_query$add_and_save_execution_info_xform_BANG_$execution_info_rf_STAR___70969.invoke(process_userland_query.clj:110)""\r\nmetabase  |   ""query_processor.reducible$combine_additional_reducing_fns$combine_additional_reducing_fns_rf_STAR___60736.invoke(reducible.clj:233)""\r\nmetabase  |   ""query_processor.middleware.add_rows_truncated$add_rows_truncated_xform$fn__69577.invoke(add_rows_truncated.clj:34)""\r\nmetabase  |   ""query_processor.middleware.format_rows$format_rows_xform$fn__71472.invoke(format_rows.clj:74)""\r\nmetabase  |   ""query_processor.reducible$reducible_rows$reify__60728.reduce(reducible.clj:177)""\r\nmetabase  |   ""query_processor.context.default$default_reducef$fn__49405.invoke(default.clj:34)""\r\nmetabase  |   ""query_processor.context.default$default_reducef.invokeStatic(default.clj:33)""\r\nmetabase  |   ""query_processor.context.default$default_reducef.invoke(default.clj:25)""\r\nmetabase  |   ""query_processor.context$reducef.invokeStatic(context.clj:70)""\r\nmetabase  |   ""query_processor.context$reducef.invoke(context.clj:63)""\r\nmetabase  |   ""query_processor.context.default$default_runf$respond_STAR___49409.invoke(default.clj:45)""\r\nmetabase  |   ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:706)""\r\nmetabase  |   ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""\r\nmetabase  |   ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""\r\nmetabase  |   ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""\r\nmetabase  |   ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""\r\nmetabase  |   ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""\r\nmetabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""\r\nmetabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""\r\nmetabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""\r\nmetabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""\r\nmetabase  |   ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""\r\nmetabase  |   ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""\r\nmetabase  |   ""query_processor.context$executef.invokeStatic(context.clj:60)""\r\nmetabase  |   ""query_processor.context$executef.invoke(context.clj:49)""\r\nmetabase  |   ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""\r\nmetabase  |   ""query_processor.context.default$default_runf.invoke(default.clj:42)""\r\nmetabase  |   ""query_processor.context$runf.invokeStatic(context.clj:46)""\r\nmetabase  |   ""query_processor.context$runf.invoke(context.clj:40)""\r\nmetabase  |   ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""\r\nmetabase  |   ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""\r\nmetabase  |   ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""\r\nmetabase  |   ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""\r\nmetabase  |   ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""\r\nmetabase  |   ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""\r\nmetabase  |   ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""\r\nmetabase  |   ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""\r\nmetabase  |   ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""\r\nmetabase  |   ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:299)""\r\nmetabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""\r\nmetabase  |   ""driver$do_with_driver.invokeStatic(driver.clj:94)""\r\nmetabase  |   ""driver$do_with_driver.invoke(driver.clj:89)""\r\nmetabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""\r\nmetabase  |   ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""\r\nmetabase  |   ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""\r\nmetabase  |   ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""\r\nmetabase  |   ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""\r\nmetabase  |   ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""\r\nmetabase  |   ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""\r\nmetabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""\r\nmetabase  |   ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""\r\nmetabase  |   ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""\r\nmetabase  |   ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""\r\nmetabase  |   ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""\r\nmetabase  |   ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""\r\nmetabase  |   ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""\r\nmetabase  |   ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""\r\nmetabase  |   ""query_processor.reducible$async_qp$qp_STAR___60713.invoke(reducible.clj:132)""\r\nmetabase  |   ""query_processor.reducible$sync_qp$qp_STAR___60725.doInvoke(reducible.clj:153)""\r\nmetabase  |   ""query_processor$process_userland_query.invokeStatic(query_processor.clj:402)""\r\nmetabase  |   ""query_processor$process_userland_query.doInvoke(query_processor.clj:398)""\r\nmetabase  |   ""query_processor$process_query_and_save_execution_BANG_.invokeStatic(query_processor.clj:416)""\r\nmetabase  |   ""query_processor$process_query_and_save_execution_BANG_.invoke(query_processor.clj:406)""\r\nmetabase  |   ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invokeStatic(query_processor.clj:431)""\r\nmetabase  |   ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invoke(query_processor.clj:421)""\r\nmetabase  |   ""api.dataset$run_query_async$fn__93366.invoke(dataset.clj:79)""\r\nmetabase  |   ""query_processor.streaming$streaming_response_STAR_$fn__51578$fn__51580.invoke(streaming.clj:168)""\r\nmetabase  |   ""query_processor.streaming$streaming_response_STAR_$fn__51578.invoke(streaming.clj:167)""\r\nmetabase  |   ""async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)""\r\nmetabase  |   ""async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)""\r\nmetabase  |   ""async.streaming_response$do_f_async$task__42901.invoke(streaming_response.clj:88)""],\r\nmetabase  |  :card_id 170,\r\nmetabase  |  :context :ad-hoc,\r\nmetabase  |  :error ""Broken pipe"",\r\nmetabase  |  :row_count 0,\r\nmetabase  |  :running_time 0,\r\nmetabase  |  :preprocessed\r\nmetabase  |  {:type :query,\r\nmetabase  |   :database 5,\r\nmetabase  |   :query\r\nmetabase  |   {:source-card-id 170,\r\nmetabase  |    :source-metadata\r\nmetabase  |    [{:description nil,\r\nmetabase  |      :semantic_type nil,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :name ""original_budget"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :fk_target_field_id nil,\r\nmetabase  |      :field_ref [:field 5142 {:base-type :type/Float}],\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :id 5142,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""original_budget"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 2927, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Number\r\nmetabase  |        {:min -15000,\r\nmetabase  |         :q1 1650.862028593805,\r\nmetabase  |         :q3 42427.612653579316,\r\nmetabase  |         :max 61998921,\r\nmetabase  |         :sd 1222692.0637818938,\r\nmetabase  |         :avg 98694.22240099999}}},\r\nmetabase  |      :base_type :type/Float}\r\nmetabase  |     {:description nil,\r\nmetabase  |      :semantic_type nil,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :name ""budget_modifications"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :fk_target_field_id nil,\r\nmetabase  |      :field_ref [:field 5143 {:base-type :type/Float}],\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :id 5143,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""budget_modifications"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 5372, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Number\r\nmetabase  |        {:min -13961544,\r\nmetabase  |         :q1 -46696.048316343105,\r\nmetabase  |         :q3 38079.889821447665,\r\nmetabase  |         :max 7593650,\r\nmetabase  |         :sd 388669.6167360365,\r\nmetabase  |         :avg 3251.8723759999975}}},\r\nmetabase  |      :base_type :type/Float}\r\nmetabase  |     {:description nil,\r\nmetabase  |      :semantic_type nil,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :name ""approved_change_orders"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :fk_target_field_id nil,\r\nmetabase  |      :field_ref [:field 5134 {:base-type :type/Float}],\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :id 5134,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""approved_change_orders"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 112, :nil% 0.0735},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Number\r\nmetabase  |        {:min -2118563,\r\nmetabase  |         :q1 -201.38202331354478,\r\nmetabase  |         :q3 191.7514213997219,\r\nmetabase  |         :max 7593650,\r\nmetabase  |         :sd 84794.24111903225,\r\nmetabase  |         :avg 1132.1864522396115}}},\r\nmetabase  |      :base_type :type/Float}\r\nmetabase  |     {:description nil,\r\nmetabase  |      :semantic_type nil,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :name ""pending_budget_changes"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :fk_target_field_id nil,\r\nmetabase  |      :field_ref [:field 5137 {:base-type :type/Float}],\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :id 5137,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""pending_budget_changes"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 2, :nil% 0},\r\nmetabase  |       :type {:type/Number {:min -3102.5, :q1 -909.0115014843832, :q3 0, :max 0, :sd 31.025, :avg -0.31025}}},\r\nmetabase  |      :base_type :type/Float}\r\nmetabase  |     {:description nil,\r\nmetabase  |      :semantic_type :type/Cost,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :name ""committed_costs"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :fk_target_field_id nil,\r\nmetabase  |      :field_ref [:field 5138 {:base-type :type/Float}],\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :id 5138,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""committed_costs"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 3608, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Number\r\nmetabase  |        {:min -29039.42,\r\nmetabase  |         :q1 -3164.494824706897,\r\nmetabase  |         :q3 25252.15706035909,\r\nmetabase  |         :max 4299662.6,\r\nmetabase  |         :sd 195574.55726043574,\r\nmetabase  |         :avg 52424.216188}}},\r\nmetabase  |      :base_type :type/Float}\r\nmetabase  |     {:description nil,\r\nmetabase  |      :semantic_type :type/Cost,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :name ""cost_to_date"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :fk_target_field_id nil,\r\nmetabase  |      :field_ref [:field 5147 {:base-type :type/Float}],\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :id 5147,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""cost_to_date"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 5167, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Number\r\nmetabase  |        {:min -73583.93,\r\nmetabase  |         :q1 -9618.972334975959,\r\nmetabase  |         :q3 30335.417426701963,\r\nmetabase  |         :max 5.321365176E7,\r\nmetabase  |         :sd 1068676.5332191263,\r\nmetabase  |         :avg 88005.01605499999}}},\r\nmetabase  |      :base_type :type/Float}\r\nmetabase  |     {:description nil,\r\nmetabase  |      :semantic_type :type/Cost,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :name ""pending_cost_changes"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :fk_target_field_id nil,\r\nmetabase  |      :field_ref [:field 5144 {:base-type :type/Float}],\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :id 5144,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""pending_cost_changes"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 15, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Number\r\nmetabase  |        {:min -2546,\r\nmetabase  |         :q1 -744.6993419748337,\r\nmetabase  |         :q3 282.1369614765108,\r\nmetabase  |         :max 194237.5,\r\nmetabase  |         :sd 2771.6265922608873,\r\nmetabase  |         :avg 52.010897}}},\r\nmetabase  |      :base_type :type/Float}\r\nmetabase  |     {:description nil,\r\nmetabase  |      :semantic_type :type/Source,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :name ""source"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :fk_target_field_id nil,\r\nmetabase  |      :field_ref [:field 5140 {:base-type :type/Text}],\r\nmetabase  |      :effective_type :type/Text,\r\nmetabase  |      :id 5140,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""source"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 2, :nil% 0},\r\nmetabase  |       :type {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 7.0735}}},\r\nmetabase  |      :base_type :type/Text}\r\nmetabase  |     {:description nil,\r\nmetabase  |      :semantic_type nil,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :unit :default,\r\nmetabase  |      :name ""last_modified"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :fk_target_field_id nil,\r\nmetabase  |      :field_ref [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}],\r\nmetabase  |      :effective_type :type/DateTime,\r\nmetabase  |      :id 5145,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""last_modified"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 4890, :nil% 0},\r\nmetabase  |       :type {:type/DateTime {:earliest ""2024-01-23T18:43:06.147593Z"", :latest ""2024-02-13T15:31:25.346999Z""}}},\r\nmetabase  |      :base_type :type/DateTime}\r\nmetabase  |     {:display_name ""cost_code_type"",\r\nmetabase  |      :semantic_type :type/Category,\r\nmetabase  |      :field_ref [:field ""cost_code_type"" {:base-type :type/Text}],\r\nmetabase  |      :name ""cost_code_type"",\r\nmetabase  |      :base_type :type/Text,\r\nmetabase  |      :effective_type :type/Text,\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 1, :nil% 0},\r\nmetabase  |       :type {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 8}}}}\r\nmetabase  |     {:display_name ""revised_budget"",\r\nmetabase  |      :semantic_type nil,\r\nmetabase  |      :field_ref [:field ""revised_budget"" {:base-type :type/Float}],\r\nmetabase  |      :name ""revised_budget"",\r\nmetabase  |      :base_type :type/Float,\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 1, :nil% 0},\r\nmetabase  |       :type {:type/Number {:min 53132.46, :q1 53132.46, :q3 53132.46, :max 53132.46, :sd nil, :avg 53132.46}}}}\r\nmetabase  |     {:description nil,\r\nmetabase  |      :semantic_type :type/Name,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :name ""name"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :fk_target_field_id nil,\r\nmetabase  |      :field_ref [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}],\r\nmetabase  |      :effective_type :type/Text,\r\nmetabase  |      :id 4762,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""project"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 36, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Text\r\nmetabase  |        {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 20.666666666666668}}},\r\nmetabase  |      :base_type :type/Text}\r\nmetabase  |     {:description nil,\r\nmetabase  |      :semantic_type nil,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :name ""pretty_name"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :fk_target_field_id nil,\r\nmetabase  |      :field_ref [:field 4811 {:base-type :type/Text, :join-alias ""division - division_id""}],\r\nmetabase  |      :effective_type :type/Text,\r\nmetabase  |      :id 4811,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""division"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 50, :nil% 0},\r\nmetabase  |       :type {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 19.9}}},\r\nmetabase  |      :base_type :type/Text}\r\nmetabase  |     {:description nil,\r\nmetabase  |      :semantic_type :type/Category,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :name ""pretty_name_2"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :fk_target_field_id nil,\r\nmetabase  |      :field_ref [:field 4821 {:base-type :type/Text, :join-alias ""phase - phase_id""}],\r\nmetabase  |      :effective_type :type/Text,\r\nmetabase  |      :id 4821,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""phase"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 784, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Text\r\nmetabase  |        {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 24.92091836734694}}},\r\nmetabase  |      :base_type :type/Text}\r\nmetabase  |     {:description nil,\r\nmetabase  |      :semantic_type :type/Category,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :name ""label"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :fk_target_field_id nil,\r\nmetabase  |      :field_ref [:field 4806 {:base-type :type/Text, :join-alias ""cost_type - cost_type_id""}],\r\nmetabase  |      :effective_type :type/Text,\r\nmetabase  |      :id 4806,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""cost_type_label"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 29, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Text\r\nmetabase  |        {:percent-json 0,\r\nmetabase  |         :percent-url 0,\r\nmetabase  |         :percent-email 0,\r\nmetabase  |         :percent-state 0.103448275862069,\r\nmetabase  |         :average-length 1.6551724137931034}}},\r\nmetabase  |      :base_type :type/Text}\r\nmetabase  |     {:description nil,\r\nmetabase  |      :semantic_type :type/Name,\r\nmetabase  |      :coercion_strategy nil,\r\nmetabase  |      :name ""name_2"",\r\nmetabase  |      :settings nil,\r\nmetabase  |      :fk_target_field_id nil,\r\nmetabase  |      :field_ref [:field 4776 {:base-type :type/Text, :join-alias ""subjob""}],\r\nmetabase  |      :effective_type :type/Text,\r\nmetabase  |      :id 4776,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""subjob"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 22, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Text\r\nmetabase  |        {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 8.51578947368421}}},\r\nmetabase  |      :base_type :type/Text}],\r\nmetabase  |    :source-query/dataset? true,\r\nmetabase  |    :fields\r\nmetabase  |    [[:field 5142 {:base-type :type/Float}]\r\nmetabase  |     [:field 5143 {:base-type :type/Float}]\r\nmetabase  |     [:field 5134 {:base-type :type/Float}]\r\nmetabase  |     [:field 5137 {:base-type :type/Float}]\r\nmetabase  |     [:field 5138 {:base-type :type/Float}]\r\nmetabase  |     [:field 5147 {:base-type :type/Float}]\r\nmetabase  |     [:field 5144 {:base-type :type/Float}]\r\nmetabase  |     [:field 5140 {:base-type :type/Text}]\r\nmetabase  |     [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}]\r\nmetabase  |     [:field ""cost_code_type"" {:base-type :type/Text}]\r\nmetabase  |     [:field ""revised_budget"" {:base-type :type/Float}]\r\nmetabase  |     [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]\r\nmetabase  |     [:field 4811 {:base-type :type/Text, :join-alias ""division - division_id""}]\r\nmetabase  |     [:field 4821 {:base-type :type/Text, :join-alias ""phase - phase_id""}]\r\nmetabase  |     [:field 4806 {:base-type :type/Text, :join-alias ""cost_type - cost_type_id""}]\r\nmetabase  |     [:field 4776 {:base-type :type/Text, :join-alias ""subjob""}]],\r\nmetabase  |    :source-query\r\nmetabase  |    {:source-table 307,\r\nmetabase  |     :expressions\r\nmetabase  |     {""cost_code_type""\r\nmetabase  |      [:concat\r\nmetabase  |       [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]\r\nmetabase  |       [:field 4806 {:base-type :type/Text, :join-alias ""cost_type - cost_type_id""}]],\r\nmetabase  |      ""revised_budget""\r\nmetabase  |      [:+\r\nmetabase  |       [:field 5142 {:base-type :type/Float}]\r\nmetabase  |       [:field 5143 {:base-type :type/Float}]\r\nmetabase  |       [:field 5134 {:base-type :type/Float}]]},\r\nmetabase  |     :fields\r\nmetabase  |     [[:field 5142 {:base-type :type/Float}]\r\nmetabase  |      [:field 5143 {:base-type :type/Float}]\r\nmetabase  |      [:field 5134 {:base-type :type/Float}]\r\nmetabase  |      [:field 5137 {:base-type :type/Float}]\r\nmetabase  |      [:field 5138 {:base-type :type/Float}]\r\nmetabase  |      [:field 5147 {:base-type :type/Float}]\r\nmetabase  |      [:field 5144 {:base-type :type/Float}]\r\nmetabase  |      [:field 5140 {:base-type :type/Text}]\r\nmetabase  |      [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}]\r\nmetabase  |      [:expression ""cost_code_type""]\r\nmetabase  |      [:expression ""revised_budget""]\r\nmetabase  |      [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]\r\nmetabase  |      [:field 4811 {:base-type :type/Text, :join-alias ""division - division_id""}]\r\nmetabase  |      [:field 4821 {:base-type :type/Text, :join-alias ""phase - phase_id""}]\r\nmetabase  |      [:field 4806 {:base-type :type/Text, :join-alias ""cost_type - cost_type_id""}]\r\nmetabase  |      [:field 4776 {:base-type :type/Text, :join-alias ""subjob""}]],\r\nmetabase  |     :order-by\r\nmetabase  |     [[:asc [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]]\r\nmetabase  |      [:asc [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]]\r\nmetabase  |      [:asc [:field 4806 {:base-type :type/Text, :join-alias ""cost_type - cost_type_id""}]]\r\nmetabase  |      [:asc [:field 4775 {:base-type :type/Text, :join-alias ""subjob""}]]],\r\nmetabase  |     :joins\r\nmetabase  |     [{:alias ""project - project_id"",\r\nmetabase  |       :strategy :left-join,\r\nmetabase  |       :fields [[:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]],\r\nmetabase  |       :condition\r\nmetabase  |       [:=\r\nmetabase  |        [:field 5139 {:base-type :type/BigInteger}]\r\nmetabase  |        [:field 4761 {:base-type :type/Integer, :join-alias ""project - project_id""}]],\r\nmetabase  |       :source-table 272}\r\nmetabase  |      {:alias ""division - division_id"",\r\nmetabase  |       :strategy :left-join,\r\nmetabase  |       :fields [[:field 4811 {:base-type :type/Text, :join-alias ""division - division_id""}]],\r\nmetabase  |       :condition\r\nmetabase  |       [:=\r\nmetabase  |        [:field 5148 {:base-type :type/BigInteger}]\r\nmetabase  |        [:field 4809 {:base-type :type/Integer, :join-alias ""division - division_id""}]],\r\nmetabase  |       :source-table 279}\r\nmetabase  |      {:alias ""phase - phase_id"",\r\nmetabase  |       :strategy :left-join,\r\nmetabase  |       :fields [[:field 4821 {:base-type :type/Text, :join-alias ""phase - phase_id""}]],\r\nmetabase  |       :condition\r\nmetabase  |       [:=\r\nmetabase  |        [:field 5141 {:base-type :type/BigInteger}]\r\nmetabase  |        [:field 4816 {:base-type :type/Integer, :join-alias ""phase - phase_id""}]],\r\nmetabase  |       :source-table 282}\r\nmetabase  |      {:alias ""cost_type - cost_type_id"",\r\nmetabase  |       :strategy :left-join,\r\nmetabase  |       :fields [[:field 4806 {:base-type :type/Text, :join-alias ""cost_type - cost_type_id""}]],\r\nmetabase  |       :condition\r\nmetabase  |       [:=\r\nmetabase  |        [:field 5146 {:base-type :type/BigInteger}]\r\nmetabase  |        [:field 4805 {:base-type :type/Integer, :join-alias ""cost_type - cost_type_id""}]],\r\nmetabase  |       :source-table 274}\r\nmetabase  |      {:alias ""subjob"",\r\nmetabase  |       :strategy :left-join,\r\nmetabase  |       :fields [[:field 4776 {:base-type :type/Text, :join-alias ""subjob""}]],\r\nmetabase  |       :condition\r\nmetabase  |       [:= [:field 5135 {:base-type :type/BigInteger}] [:field 4774 {:base-type :type/Integer, :join-alias ""subjob""}]],\r\nmetabase  |       :source-table 277}]},\r\nmetabase  |    :limit 1048575,\r\nmetabase  |    :metabase.query-processor.middleware.limit/original-limit nil},\r\nmetabase  |   :middleware {:js-int-to-string? true, :add-default-userland-constraints? true},\r\nmetabase  |   :info\r\nmetabase  |   {:executed-by 9,\r\nmetabase  |    :context :ad-hoc,\r\nmetabase  |    :card-id 170,\r\nmetabase  |    :metadata/dataset-metadata\r\nmetabase  |    [{:name ""original_budget"",\r\nmetabase  |      :field_ref [:field 5142 {:base-type :type/Float}],\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :id 5142,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""original_budget"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 2927, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Number\r\nmetabase  |        {:min -15000,\r\nmetabase  |         :q1 1650.862028593805,\r\nmetabase  |         :q3 42427.612653579316,\r\nmetabase  |         :max 61998921,\r\nmetabase  |         :sd 1222692.0637818938,\r\nmetabase  |         :avg 98694.22240099999}}},\r\nmetabase  |      :base_type :type/Float}\r\nmetabase  |     {:name ""budget_modifications"",\r\nmetabase  |      :field_ref [:field 5143 {:base-type :type/Float}],\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :id 5143,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""budget_modifications"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 5372, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Number\r\nmetabase  |        {:min -13961544,\r\nmetabase  |         :q1 -46696.048316343105,\r\nmetabase  |         :q3 38079.889821447665,\r\nmetabase  |         :max 7593650,\r\nmetabase  |         :sd 388669.6167360365,\r\nmetabase  |         :avg 3251.8723759999975}}},\r\nmetabase  |      :base_type :type/Float}\r\nmetabase  |     {:name ""approved_change_orders"",\r\nmetabase  |      :field_ref [:field 5134 {:base-type :type/Float}],\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :id 5134,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""approved_change_orders"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 112, :nil% 0.0735},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Number\r\nmetabase  |        {:min -2118563,\r\nmetabase  |         :q1 -201.38202331354478,\r\nmetabase  |         :q3 191.7514213997219,\r\nmetabase  |         :max 7593650,\r\nmetabase  |         :sd 84794.24111903225,\r\nmetabase  |         :avg 1132.1864522396115}}},\r\nmetabase  |      :base_type :type/Float}\r\nmetabase  |     {:name ""pending_budget_changes"",\r\nmetabase  |      :field_ref [:field 5137 {:base-type :type/Float}],\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :id 5137,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""pending_budget_changes"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 2, :nil% 0},\r\nmetabase  |       :type {:type/Number {:min -3102.5, :q1 -909.0115014843832, :q3 0, :max 0, :sd 31.025, :avg -0.31025}}},\r\nmetabase  |      :base_type :type/Float}\r\nmetabase  |     {:semantic_type :type/Cost,\r\nmetabase  |      :name ""committed_costs"",\r\nmetabase  |      :field_ref [:field 5138 {:base-type :type/Float}],\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :id 5138,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""committed_costs"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 3608, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Number\r\nmetabase  |        {:min -29039.42,\r\nmetabase  |         :q1 -3164.494824706897,\r\nmetabase  |         :q3 25252.15706035909,\r\nmetabase  |         :max 4299662.6,\r\nmetabase  |         :sd 195574.55726043574,\r\nmetabase  |         :avg 52424.216188}}},\r\nmetabase  |      :base_type :type/Float}\r\nmetabase  |     {:semantic_type :type/Cost,\r\nmetabase  |      :name ""cost_to_date"",\r\nmetabase  |      :field_ref [:field 5147 {:base-type :type/Float}],\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :id 5147,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""cost_to_date"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 5167, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Number\r\nmetabase  |        {:min -73583.93,\r\nmetabase  |         :q1 -9618.972334975959,\r\nmetabase  |         :q3 30335.417426701963,\r\nmetabase  |         :max 5.321365176E7,\r\nmetabase  |         :sd 1068676.5332191263,\r\nmetabase  |         :avg 88005.01605499999}}},\r\nmetabase  |      :base_type :type/Float}\r\nmetabase  |     {:semantic_type :type/Cost,\r\nmetabase  |      :name ""pending_cost_changes"",\r\nmetabase  |      :field_ref [:field 5144 {:base-type :type/Float}],\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :id 5144,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""pending_cost_changes"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 15, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Number\r\nmetabase  |        {:min -2546,\r\nmetabase  |         :q1 -744.6993419748337,\r\nmetabase  |         :q3 282.1369614765108,\r\nmetabase  |         :max 194237.5,\r\nmetabase  |         :sd 2771.6265922608873,\r\nmetabase  |         :avg 52.010897}}},\r\nmetabase  |      :base_type :type/Float}\r\nmetabase  |     {:semantic_type :type/Source,\r\nmetabase  |      :name ""source"",\r\nmetabase  |      :field_ref [:field 5140 {:base-type :type/Text}],\r\nmetabase  |      :effective_type :type/Text,\r\nmetabase  |      :id 5140,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""source"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 2, :nil% 0},\r\nmetabase  |       :type {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 7.0735}}},\r\nmetabase  |      :base_type :type/Text}\r\nmetabase  |     {:unit :default,\r\nmetabase  |      :name ""last_modified"",\r\nmetabase  |      :field_ref [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}],\r\nmetabase  |      :effective_type :type/DateTime,\r\nmetabase  |      :id 5145,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""last_modified"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 4890, :nil% 0},\r\nmetabase  |       :type {:type/DateTime {:earliest ""2024-01-23T18:43:06.147593Z"", :latest ""2024-02-13T15:31:25.346999Z""}}},\r\nmetabase  |      :base_type :type/DateTime}\r\nmetabase  |     {:display_name ""cost_code_type"",\r\nmetabase  |      :semantic_type :type/Category,\r\nmetabase  |      :field_ref [:field ""cost_code_type"" {:base-type :type/Text}],\r\nmetabase  |      :name ""cost_code_type"",\r\nmetabase  |      :base_type :type/Text,\r\nmetabase  |      :effective_type :type/Text,\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 1, :nil% 0},\r\nmetabase  |       :type {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 8}}}}\r\nmetabase  |     {:display_name ""revised_budget"",\r\nmetabase  |      :field_ref [:field ""revised_budget"" {:base-type :type/Float}],\r\nmetabase  |      :name ""revised_budget"",\r\nmetabase  |      :base_type :type/Float,\r\nmetabase  |      :effective_type :type/Float,\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 1, :nil% 0},\r\nmetabase  |       :type {:type/Number {:min 53132.46, :q1 53132.46, :q3 53132.46, :max 53132.46, :avg 53132.46}}}}\r\nmetabase  |     {:semantic_type :type/Name,\r\nmetabase  |      :name ""name"",\r\nmetabase  |      :field_ref [:field 4762 {:base-type :type/Text}],\r\nmetabase  |      :effective_type :type/Text,\r\nmetabase  |      :id 4762,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""project"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 36, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Text\r\nmetabase  |        {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 20.666666666666668}}},\r\nmetabase  |      :base_type :type/Text}\r\nmetabase  |     {:name ""pretty_name"",\r\nmetabase  |      :field_ref [:field 4811 {:base-type :type/Text}],\r\nmetabase  |      :effective_type :type/Text,\r\nmetabase  |      :id 4811,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""division"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 50, :nil% 0},\r\nmetabase  |       :type {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 19.9}}},\r\nmetabase  |      :base_type :type/Text}\r\nmetabase  |     {:semantic_type :type/Category,\r\nmetabase  |      :name ""pretty_name_2"",\r\nmetabase  |      :field_ref [:field 4821 {:base-type :type/Text}],\r\nmetabase  |      :effective_type :type/Text,\r\nmetabase  |      :id 4821,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""phase"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 784, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Text\r\nmetabase  |        {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 24.92091836734694}}},\r\nmetabase  |      :base_type :type/Text}\r\nmetabase  |     {:semantic_type :type/Category,\r\nmetabase  |      :name ""label"",\r\nmetabase  |      :field_ref [:field 4806 {:base-type :type/Text}],\r\nmetabase  |      :effective_type :type/Text,\r\nmetabase  |      :id 4806,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""cost_type_label"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 29, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Text\r\nmetabase  |        {:percent-json 0,\r\nmetabase  |         :percent-url 0,\r\nmetabase  |         :percent-email 0,\r\nmetabase  |         :percent-state 0.103448275862069,\r\nmetabase  |         :average-length 1.6551724137931034}}},\r\nmetabase  |      :base_type :type/Text}\r\nmetabase  |     {:semantic_type :type/Name,\r\nmetabase  |      :name ""name_2"",\r\nmetabase  |      :field_ref [:field 4776 {:base-type :type/Text}],\r\nmetabase  |      :effective_type :type/Text,\r\nmetabase  |      :id 4776,\r\nmetabase  |      :visibility_type :normal,\r\nmetabase  |      :display_name ""subjob"",\r\nmetabase  |      :fingerprint\r\nmetabase  |      {:global {:distinct-count 22, :nil% 0},\r\nmetabase  |       :type\r\nmetabase  |       {:type/Text\r\nmetabase  |        {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 8.51578947368421}}},\r\nmetabase  |      :base_type :type/Text}]}},\r\nmetabase  |  :data {:rows [], :cols []}}\r\nmetabase  |\r\nmetabase  | 2024-02-22 00:09:30,797 ERROR async.streaming-response :: Caught unexpected Exception in streaming response body\r\nmetabase  | java.lang.NullPointerException: Deflater has been closed\r\nmetabase  |     at java.base/java.util.zip.Deflater.ensureOpen(Unknown Source)\r\nmetabase  |     at java.base/java.util.zip.Deflater.deflate(Unknown Source)\r\nmetabase  |     at java.base/java.util.zip.Deflater.deflate(Unknown Source)\r\nmetabase  |     at java.base/java.util.zip.GZIPOutputStream.finish(Unknown Source)\r\nmetabase  |     at java.base/java.util.zip.DeflaterOutputStream.close(Unknown Source)\r\nmetabase  |     at metabase.async.streaming_response$delay_output_stream$fn__42916.invoke(streaming_response.clj:121)\r\nmetabase  |     at metabase.async.streaming_response.proxy$java.io.OutputStream$ff19274a.close(Unknown Source)\r\nmetabase  |     at metabase.async.streaming_response$write_error_BANG_.invokeStatic(streaming_response.clj:58)\r\nmetabase  |     at metabase.async.streaming_response$write_error_BANG_.invoke(streaming_response.clj:46)\r\nmetabase  |     at metabase.query_processor.streaming$streaming_response_STAR_$fn__51578.invoke(streaming.clj:176)\r\nmetabase  |     at clojure.lang.AFn.applyToHelper(AFn.java:156)\r\nmetabase  |     at clojure.lang.AFn.applyTo(AFn.java:144)\r\nmetabase  |     at clojure.core$apply.invokeStatic(core.clj:667)\r\nmetabase  |     at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)\r\nmetabase  |     at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)\r\nmetabase  |     at clojure.lang.RestFn.applyTo(RestFn.java:142)\r\nmetabase  |     at clojure.core$apply.invokeStatic(core.clj:671)\r\nmetabase  |     at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)\r\nmetabase  |     at clojure.lang.RestFn.invoke(RestFn.java:421)\r\nmetabase  |     at metabase.async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)\r\nmetabase  |     at metabase.async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)\r\nmetabase  |     at metabase.async.streaming_response$do_f_async$task__42901.invoke(streaming_response.clj:88)\r\nmetabase  |     at clojure.lang.AFn.run(AFn.java:22)\r\nmetabase  |     at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\nmetabase  |     at java.base/java.util.concurrent.FutureTask.run(Unknown Source)\r\nmetabase  |     at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\nmetabase  |     at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\nmetabase  |     at java.base/java.lang.Thread.run(Unknown Source)\r\nmetabase  | 2024-02-22 00:09:30,841 ERROR async.streaming-response :: Error writing error to output stream {:via [{:type java.lang.NullPointerException, :message Deflater has been closed, :at [java.util.zip.Deflater ensureOpen nil -1]}], :trace [[java.util.zip.Deflater ensureOpen nil -1] [java.util.zip.Deflater deflate nil -1] [java.util.zip.Deflater deflate nil -1] [java.util.zip.GZIPOutputStream finish nil -1] [java.util.zip.DeflaterOutputStream close nil -1] [metabase.async.streaming_response$delay_output_stream$fn__42916 invoke streaming_response.clj 121] [metabase.async.streaming_response.proxy$java.io.OutputStream$ff19274a close nil -1] [metabase.async.streaming_response$write_error_BANG_ invokeStatic streaming_response.clj 58] [metabase.async.streaming_response$write_error_BANG_ invoke streaming_response.clj 46] [metabase.query_processor.streaming$streaming_response_STAR_$fn__51578 invoke streaming.clj 176] [clojure.lang.AFn applyToHelper AFn.java 156] [clojure.lang.AFn applyTo AFn.java 144] [clojure.core$apply invokeStatic core.clj 667] [clojure.core$with_bindings_STAR_ invokeStatic core.clj 1990] [clojure.core$with_bindings_STAR_ doInvoke core.clj 1990] [clojure.lang.RestFn applyTo RestFn.java 142] [clojure.core$apply invokeStatic core.clj 671] [clojure.core$bound_fn_STAR_$fn__5818 doInvoke core.clj 2020] [clojure.lang.RestFn invoke RestFn.java 421] [metabase.async.streaming_response$do_f_STAR_ invokeStatic streaming_response.clj 69] [metabase.async.streaming_response$do_f_STAR_ invoke streaming_response.clj 67] [metabase.async.streaming_response$do_f_async$task__42901 invoke streaming_response.clj 88] [clojure.lang.AFn run AFn.java 22] [java.util.concurrent.Executors$RunnableAdapter call nil -1] [java.util.concurrent.FutureTask run nil -1] [java.util.concurrent.ThreadPoolExecutor runWorker nil -1] [java.util.concurrent.ThreadPoolExecutor$Worker run nil -1] [java.lang.Thread run nil -1]], :cause Deflater has been closed, :_status 500}\r\nmetabase  | java.lang.NullPointerException: Deflater has been closed\r\nmetabase  |     at java.base/java.util.zip.Deflater.ensureOpen(Unknown Source)\r\nmetabase  |     at java.base/java.util.zip.Deflater.deflate(Unknown Source)\r\nmetabase  |     at java.base/java.util.zip.Deflater.deflate(Unknown Source)\r\nmetabase  |     at java.base/java.util.zip.GZIPOutputStream.finish(Unknown Source)\r\nmetabase  |     at java.base/java.util.zip.DeflaterOutputStream.close(Unknown Source)\r\nmetabase  |     at metabase.async.streaming_response$delay_output_stream$fn__42916.invoke(streaming_response.clj:121)\r\nmetabase  |     at metabase.async.streaming_response.proxy$java.io.OutputStream$ff19274a.close(Unknown Source)\r\nmetabase  |     at java.base/sun.nio.cs.StreamEncoder.implClose(Unknown Source)\r\nmetabase  |     at java.base/sun.nio.cs.StreamEncoder.close(Unknown Source)\r\nmetabase  |     at java.base/java.io.OutputStreamWriter.close(Unknown Source)\r\nmetabase  |     at java.base/java.io.BufferedWriter.close(Unknown Source)\r\nmetabase  |     at metabase.async.streaming_response$write_error_BANG_.invokeStatic(streaming_response.clj:61)\r\nmetabase  |     at metabase.async.streaming_response$write_error_BANG_.invoke(streaming_response.clj:46)\r\nmetabase  |     at metabase.async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:78)\r\nmetabase  |     at metabase.async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)\r\nmetabase  |     at metabase.async.streaming_response$do_f_async$task__42901.invoke(streaming_response.clj:88)\r\nmetabase  |     at clojure.lang.AFn.run(AFn.java:22)\r\nmetabase  |     at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\nmetabase  |     at java.base/java.util.concurrent.FutureTask.run(Unknown Source)\r\nmetabase  |     at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\nmetabase  |     at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\nmetabase  |     at java.base/java.lang.Thread.run(Unknown Source)\r\nmetabase  | 2024-02-22 00:09:30,847 ERROR async.streaming-response :: bound-fn caught unexpected Exception\r\nmetabase  | java.lang.NullPointerException: Deflater has been closed\r\nmetabase  |     at java.base/java.util.zip.Deflater.ensureOpen(Unknown Source)\r\nmetabase  |     at java.base/java.util.zip.Deflater.deflate(Unknown Source)\r\nmetabase  |     at java.base/java.util.zip.Deflater.deflate(Unknown Source)\r\nmetabase  |     at java.base/java.util.zip.GZIPOutputStream.finish(Unknown Source)\r\nmetabase  |     at java.base/java.util.zip.DeflaterOutputStream.close(Unknown Source)\r\nmetabase  |     at metabase.async.streaming_response$delay_output_stream$fn__42916.invoke(streaming_response.clj:121)\r\nmetabase  |     at metabase.async.streaming_response.proxy$java.io.OutputStream$ff19274a.close(Unknown Source)\r\nmetabase  |     at metabase.async.streaming_response$write_error_BANG_.invokeStatic(streaming_response.clj:58)\r\nmetabase  |     at metabase.async.streaming_response$write_error_BANG_.invoke(streaming_response.clj:46)\r\nmetabase  |     at metabase.async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:78)\r\nmetabase  |     at metabase.async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)\r\nmetabase  |     at metabase.async.streaming_response$do_f_async$task__42901.invoke(streaming_response.clj:88)\r\nmetabase  |     at clojure.lang.AFn.run(AFn.java:22)\r\nmetabase  |     at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\nmetabase  |     at java.base/java.util.concurrent.FutureTask.run(Unknown Source)\r\nmetabase  |     at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\nmetabase  |     at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\nmetabase  |     at java.base/java.lang.Thread.run(Unknown Source)\r\n```', 'created_at': datetime.datetime(2024, 2, 22, 0, 19, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1958868809, 'issue_id': 2147931675, 'author': 'ranquild', 'body': '@MrChadMWood could you share browser logs (console logs) as well please?', 'created_at': datetime.datetime(2024, 2, 22, 7, 40, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1959630905, 'issue_id': 2147931675, 'author': 'MrChadMWood', 'body': '@ranquild Yes, these stand out:\r\n\r\n```\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4751 {:base-type :type/Float}] for field ""wbs_cost.original_budget"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4745 {:base-type :type/Float}] for field ""wbs_cost.pending_budget_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4746 {:base-type :type/Float}] for field ""wbs_cost.committed_costs"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4748 {:base-type :type/Float}] for field ""wbs_cost.approved_change_orders"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4752 {:base-type :type/Float}] for field ""wbs_cost.budget_modifications"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4753 {:base-type :type/Float}] for field ""wbs_cost.pending_cost_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4756 {:base-type :type/Float}] for field ""wbs_cost.cost_to_date"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4751 {:base-type :type/Float}] for field ""wbs_cost.original_budget"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4752 {:base-type :type/Float}] for field ""wbs_cost.budget_modifications"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4745 {:base-type :type/Float}] for field ""wbs_cost.pending_budget_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4746 {:base-type :type/Float}] for field ""wbs_cost.committed_costs"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4748 {:base-type :type/Float}] for field ""wbs_cost.approved_change_orders"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4756 {:base-type :type/Float}] for field ""wbs_cost.cost_to_date"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4753 {:base-type :type/Float}] for field ""wbs_cost.pending_cost_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:condition :=]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:fields]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:fields]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:source-query :breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:condition :=]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:source-query :breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4745 {:base-type :type/Float}] for field ""wbs_cost.pending_budget_changes"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4748 {:base-type :type/Float}] for field ""wbs_cost.approved_change_orders"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4751 {:base-type :type/Float}] for field ""wbs_cost.original_budget"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4752 {:base-type :type/Float}] for field ""wbs_cost.budget_modifications"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4746 {:base-type :type/Float}] for field ""wbs_cost.committed_costs"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:source-query :order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4753 {:base-type :type/Float}] for field ""wbs_cost.pending_cost_changes"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4756 {:base-type :type/Float}] for field ""wbs_cost.cost_to_date"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:source-query :order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4751 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""original_budget""}] for field ""wbs_cost.original_budget"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""division_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""division_id"", :metabase.query-processor.util.add-alias-info/position 1}] for field ""wbs_cost.division_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4745 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_budget_changes""}] for field ""wbs_cost.pending_budget_changes"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4746 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""committed_costs""}] for field ""wbs_cost.committed_costs"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4748 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""approved_change_orders""}] for field ""wbs_cost.approved_change_orders"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4752 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""budget_modifications""}] for field ""wbs_cost.budget_modifications"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4753 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_cost_changes""}] for field ""wbs_cost.pending_cost_changes"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4756 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""cost_to_date""}] for field ""wbs_cost.cost_to_date"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:fields]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""division_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""division_id"", :metabase.query-processor.util.add-alias-info/position 1}] for field ""wbs_cost.division_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:condition :=]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""division_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""division_id"", :metabase.query-processor.util.add-alias-info/position 1}] for field ""wbs_cost.division_id"" at [:condition :=]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:fields]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:source-query :breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4751 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""original_budget""}] for field ""wbs_cost.original_budget"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""division_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""division_id"", :metabase.query-processor.util.add-alias-info/position 1}] for field ""wbs_cost.division_id"" at [:source-query :breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4745 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_budget_changes""}] for field ""wbs_cost.pending_budget_changes"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4746 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""committed_costs""}] for field ""wbs_cost.committed_costs"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4748 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""approved_change_orders""}] for field ""wbs_cost.approved_change_orders"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4752 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""budget_modifications""}] for field ""wbs_cost.budget_modifications"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:source-query :order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4753 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_cost_changes""}] for field ""wbs_cost.pending_cost_changes"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4756 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""cost_to_date""}] for field ""wbs_cost.cost_to_date"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""division_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""division_id"", :metabase.query-processor.util.add-alias-info/position 1}] for field ""wbs_cost.division_id"" at [:source-query :order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.\r\n```', 'created_at': datetime.datetime(2024, 2, 22, 14, 59, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1959731830, 'issue_id': 2147931675, 'author': 'ranquild', 'body': '@MrChadMWood these are BE logs, not browser logs. What you see in Console in DevTools in the browser when the app crashes?', 'created_at': datetime.datetime(2024, 2, 22, 15, 48, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1959854194, 'issue_id': 2147931675, 'author': 'MrChadMWood', 'body': 'Sorry about that. Here you go:\r\n\r\n\r\n#### Error 1: TypeError: e.toLowerCase is not a function\r\n```\r\nTypeError: e.toLowerCase is not a function\r\n    fB metabase.util.js:21\r\n    e metabase.lib.util.js:5\r\n    a metabase.lib.util.js:6\r\n    r cljs.core.js:278\r\n    i metabase.lib.stage.js:9\r\n    i metabase.lib.stage.js:9\r\n    eK cljs.core.js:65\r\n    ga cljs.core.js:256\r\n    y cljs.core.js:38\r\n    Fe cljs.core.js:77\r\n[react-dom.production.min.js:209:194](webpack:///node_modules/react-dom/cjs/react-dom.production.min.js)\r\n    React 9\r\n    unstable_runWithPriority scheduler.production.min.js:19\r\n    React 6\r\n    _unlisten Router.js:109\r\n    r createTransitionManager.js:228\r\n    u createTransitionManager.js:83\r\n    S AsyncUtils.js:74\r\n    S getComponents.js:6\r\n    S getComponents.js:30\r\n    S AsyncUtils.js:79\r\n    S AsyncUtils.js:78\r\n    S getComponents.js:29\r\n    u createTransitionManager.js:77\r\n    r TransitionUtils.js:74\r\n    runEnterHooks TransitionUtils.js:107\r\n    l createTransitionManager.js:70\r\n    l AsyncUtils.js:47\r\n    O AsyncUtils.js:49\r\n    r TransitionUtils.js:83\r\n    runChangeHooks TransitionUtils.js:131\r\n    l createTransitionManager.js:67\r\n    c createTransitionManager.js:45\r\n    l AsyncUtils.js:41\r\n    O AsyncUtils.js:49\r\n    N matchRoutes.js:231\r\n    c createTransitionManager.js:41\r\n    r createTransitionManager.js:222\r\n    Redux 6\r\n    listen useQueries.js:75\r\n    listen useBasename.js:67\r\n    g createHistory.js:55\r\n    g createHistory.js:54\r\n    M createHistory.js:119\r\n    m createHistory.js:90\r\n    l AsyncUtils.js:51\r\n    loopAsync AsyncUtils.js:53\r\n    m createHistory.js:80\r\n    M createHistory.js:100\r\n    replace createHistory.js:135\r\n    replace useBasename.js:77\r\n    replace useQueries.js:85\r\n    Redux 4\r\n        default\r\n        default\r\n        ee\r\n        dispatch\r\n    eG navigation.js:200\r\n    Redux 3\r\n        n\r\n        ee\r\n        dispatch\r\n    ej ui.js:30\r\n    Redux 2\r\n        ee\r\n        r\r\n    onClick QuestionNotebookButton.jsx:27\r\n    React 12\r\n        A\r\n        z\r\n        w\r\n        w\r\n        ti\r\n        tn\r\n        to\r\n        tp\r\n        X\r\n        G\r\n        t$\r\n        tQ\r\n    unstable_runWithPriority scheduler.production.min.js:19\r\n    React 3\r\n        ir\r\n        Y\r\n        tU\r\n```\r\n\r\n#### Error 2: Error: Object\r\n```\r\nError: \r\nObject { componentStack: ""\\n    in xg\\n    in div\\n    in Styled(div)\\n    in Unknown\\n    in h\\n    in Connect(h)\\n    in EntityType\\n    in Connect(EntityType)\\n    in Unknown\\n    in div\\n    in Styled(div)\\n    in Pq\\n    in div\\n    in Styled(div)\\n    in div\\n    in Styled(div)\\n    in div\\n    in Ef\\n    in ExplicitSize[Ef]\\n    in Unknown\\n    in Unknown\\n    in Title[]\\n    in Title[Title[]]\\n    in Favicon\\n    in Connect(Favicon)\\n    in b\\n    in Connect(b)\\n    in Unknown\\n    in EntityType\\n    in Connect(EntityType)\\n    in Connect(EntityType)\\n    in Connect(Favicon)\\n    in d\\n    in b\\n    in Connect(b)\\n    in Unknown\\n    in EntityType\\n    in Connect(EntityType)\\n    in Connect(EntityType)\\n    in Connect(Favicon)\\n    in Unknown\\n    in UserIsAuthenticated(Component)\\n    in Connect(UserIsAuthenticated(Component))\\n    in MetabaseIsSetup(Connect(UserIsAuthenticated(Component)))\\n    in Connect(MetabaseIsSetup(Connect(UserIsAuthenticated(Component))))\\n    in main\\n    in Styled(main)\\n    in div\\n    in Styled(div)\\n    in div\\n    in Styled(div)\\n    in y\\n    in withRouter(y)\\n    in a\\n    in Unknown\\n    in Connect(Component)\\n    in Title[Connect(Component)]\\n    in RouterContext\\n    in Router\\n    in d\\n    in ej\\n    in f\\n    in @mantine/core/MantineProvider\\n    in ForwardRef\\n    in DragDropContextProvider\\n    in lq\\n    in N"" }\r\n```\r\n\r\nBoth errors screenshot:\r\n![image](https://github.com/metabase/metabase/assets/90083658/f0184989-6ceb-4048-bf2a-6959d2f1fd6a)', 'created_at': datetime.datetime(2024, 2, 22, 16, 49, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1959965991, 'issue_id': 2147931675, 'author': 'bshepherdson', 'body': ""Nothing obvious is jumping out at me, looking at the query compared to those warnings about the missing join aliases. It suggests that field refs from one stage and getting used in another, but it's hard to pin down which refs it's referring to.\r\n\r\nI'll keep digging.\r\n\r\n@MrChadMWood  The network request and response for the query might be useful too, if you can screenshot or copy-paste them in the browser DevTools. The request path would be `/api/card/$ID`."", 'created_at': datetime.datetime(2024, 2, 22, 17, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1960069742, 'issue_id': 2147931675, 'author': 'bshepherdson', 'body': 'Looking at the query again, it looks like it is using bad references in the first stage, hence the warnings. (Though the message is a bit misleading, since this isn\'t really about join aliases per se.)\r\n\r\nThe real problem is that columns returned by the model are being referenced by their numeric IDs, which is not correct. We\'ve been trying to fix those cases to write correct, `""field_name""`-based references instead. Even if we\'ve fixed them all now, there are still saved questions with these bad references in them.\r\n\r\nI think that comparing the input query with the preprocessed one will be instructive, but I have to go for a couple of hours. I\'ll be back looking into this issue later this afternoon.', 'created_at': datetime.datetime(2024, 2, 22, 18, 59, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1960407859, 'issue_id': 2147931675, 'author': 'bshepherdson', 'body': ""Has this model been edited to return something different? It looks like the first stage of the question itself and the last stage of the model duplicate the same set of aggregations and the breakout, but possibly with different fields? It's hard to tell when it's just field IDs. If the model was edited after this question was created, it might have ended up in a broken state like this.\r\n\r\n@MrChadMWood Can you try to rebuild this question on top of the model and see if it works? If it does, I'd be glad to see the JSON response for its `/api/card/$ID` (if you save the question) or `/api/dataset` if not."", 'created_at': datetime.datetime(2024, 2, 22, 22, 16, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1971335927, 'issue_id': 2147931675, 'author': 'iethree', 'body': 'since this is on 48.6, should the milestone here be 48.8 ?', 'created_at': datetime.datetime(2024, 2, 29, 15, 4, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2307242493, 'issue_id': 2147931675, 'author': 'NevRA', 'body': 'If you still have this issue feel free to reopen and answer to https://github.com/metabase/metabase/issues/39037#issuecomment-1960407859', 'created_at': datetime.datetime(2024, 8, 23, 14, 44, 29, tzinfo=datetime.timezone.utc)}]","MrChadMWood (Issue Creator) on (2024-02-22 00:18:03 UTC): More logs, too long for the post body:


```
metabase  | 2024-02-22 00:05:15,131 WARN middleware.fix-bad-references :: Bad :field clause [:field 4752 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""budget_modifications""}] for field ""wbs_cost.budget_modifications"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,137 WARN middleware.fix-bad-references :: Bad :field clause [:field 4748 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""approved_change_orders""}] for field ""wbs_cost.approved_change_orders"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,137 WARN middleware.fix-bad-references :: Bad :field clause [:field 4745 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_budget_changes""}] for field ""wbs_cost.pending_budget_changes"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,138 WARN middleware.fix-bad-references :: Bad :field clause [:field 4746 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""committed_costs""}] for field ""wbs_cost.committed_costs"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,147 WARN middleware.fix-bad-references :: Bad :field clause [:field 4756 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""cost_to_date""}] for field ""wbs_cost.cost_to_date"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,148 WARN middleware.fix-bad-references :: Bad :field clause [:field 4753 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_cost_changes""}] for field ""wbs_cost.pending_cost_changes"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,148 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,150 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:fields]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,151 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:condition :=]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,151 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:source-query :breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,154 WARN middleware.fix-bad-references :: Bad :field clause [:field 4751 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""original_budget""}] for field ""wbs_cost.original_budget"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,155 WARN middleware.fix-bad-references :: Bad :field clause [:field 4752 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""budget_modifications""}] for field ""wbs_cost.budget_modifications"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,155 WARN middleware.fix-bad-references :: Bad :field clause [:field 4748 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""approved_change_orders""}] for field ""wbs_cost.approved_change_orders"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,156 WARN middleware.fix-bad-references :: Bad :field clause [:field 4745 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_budget_changes""}] for field ""wbs_cost.pending_budget_changes"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,157 WARN middleware.fix-bad-references :: Bad :field clause [:field 4746 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""committed_costs""}] for field ""wbs_cost.committed_costs"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,161 WARN middleware.fix-bad-references :: Bad :field clause [:field 4756 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""cost_to_date""}] for field ""wbs_cost.cost_to_date"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,162 WARN middleware.fix-bad-references :: Bad :field clause [:field 4753 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_cost_changes""}] for field ""wbs_cost.pending_cost_changes"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,162 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:source-query :order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,426 DEBUG middleware.log :: POST /api/dashboard/18/dashcard/136/card/144/query 202 [ASYNC: completed] 4.1 s (24 DB calls) App DB connections: 2/10 Jetty threads: 2/50 (5 idle, 0 queued) (52 total active threads) Queries in flight: 0 (0 queued); postgres DB 5 connections: 0/0 (1 threads blocked)
metabase  | 2024-02-22 00:05:15,568 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,569 WARN middleware.fix-bad-references :: Bad :field clause [:field 4751 {:base-type :type/Float}] for field ""wbs_cost.original_budget"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,569 WARN middleware.fix-bad-references :: Bad :field clause [:field 4752 {:base-type :type/Float}] for field ""wbs_cost.budget_modifications"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,570 WARN middleware.fix-bad-references :: Bad :field clause [:field 4748 {:base-type :type/Float}] for field ""wbs_cost.approved_change_orders"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,571 WARN middleware.fix-bad-references :: Bad :field clause [:field 4745 {:base-type :type/Float}] for field ""wbs_cost.pending_budget_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,571 WARN middleware.fix-bad-references :: Bad :field clause [:field 4746 {:base-type :type/Float}] for field ""wbs_cost.committed_costs"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,572 WARN middleware.fix-bad-references :: Bad :field clause [:field 4756 {:base-type :type/Float}] for field ""wbs_cost.cost_to_date"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,573 WARN middleware.fix-bad-references :: Bad :field clause [:field 4753 {:base-type :type/Float}] for field ""wbs_cost.pending_cost_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,573 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,645 WARN middleware.fix-bad-references :: Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,655 WARN middleware.fix-bad-references :: Bad :field clause [:field 4751 {:base-type :type/Float}] for field ""wbs_cost.original_budget"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,656 WARN middleware.fix-bad-references :: Bad :field clause [:field 4752 {:base-type :type/Float}] for field ""wbs_cost.budget_modifications"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,657 WARN middleware.fix-bad-references :: Bad :field clause [:field 4748 {:base-type :type/Float}] for field ""wbs_cost.approved_change_orders"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
metabase  | 2024-02-22 00:05:15,658 WARN middleware.fix-bad-references :: Bad :field clause [:field 4745 {:base-type :type/Float}] for field ""wbs_cost.pending_budget_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
```

MrChadMWood (Issue Creator) on (2024-02-22 00:19:02 UTC): More logs, too long for the post body:

```
metabase  | 2024-02-22 00:09:30,458 ERROR middleware.catch-exceptions :: Error processing query: Broken pipe
metabase  | {:database_id 5,
metabase  |  :started_at #t ""2024-02-22T00:09:26.123183Z[GMT]"",
metabase  |  :via
metabase  |  [{:status :failed,
metabase  |    :class org.eclipse.jetty.io.EofException,
metabase  |    :error nil,
metabase  |    :stacktrace
metabase  |    [""org.eclipse.jetty.io.SocketChannelEndPoint.flush(SocketChannelEndPoint.java:116)""
metabase  |     ""org.eclipse.jetty.io.WriteFlusher.flush(WriteFlusher.java:422)""
metabase  |     ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:275)""
metabase  |     ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:254)""
metabase  |     ""org.eclipse.jetty.io.AbstractEndPoint.write(AbstractEndPoint.java:386)""
metabase  |     ""org.eclipse.jetty.server.HttpConnection$SendCallback.process(HttpConnection.java:832)""
metabase  |     ""org.eclipse.jetty.util.IteratingCallback.processing(IteratingCallback.java:243)""
metabase  |     ""org.eclipse.jetty.util.IteratingCallback.iterate(IteratingCallback.java:224)""
metabase  |     ""org.eclipse.jetty.server.HttpConnection.send(HttpConnection.java:589)""
metabase  |     ""org.eclipse.jetty.server.HttpChannel.sendResponse(HttpChannel.java:1051)""
metabase  |     ""org.eclipse.jetty.server.HttpChannel.write(HttpChannel.java:1123)""
metabase  |     ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:270)""
metabase  |     ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:254)""
metabase  |     ""org.eclipse.jetty.server.HttpOutput.flush(HttpOutput.java:736)""
metabase  |     ""java.base/java.util.zip.DeflaterOutputStream.flush(Unknown Source)""
metabase  |     ""--> async.streaming_response$delay_output_stream$fn__42918.invoke(streaming_response.clj:123)""
metabase  |     ""async.streaming_response.proxy$java.io.OutputStream$ff19274a.flush(Unknown Source)""
metabase  |     ""query_processor.streaming.json$fn$reify__50704.write_row_BANG_(json.clj:75)""
metabase  |     ""query_processor.streaming$streaming_rff$fn__51519$fn__51524.invoke(streaming.clj:127)""
metabase  |     ""query_processor.middleware.process_userland_query$add_and_save_execution_info_xform_BANG_$execution_info_rf_STAR___70969.invoke(process_userland_query.clj:110)""
metabase  |     ""query_processor.reducible$combine_additional_reducing_fns$combine_additional_reducing_fns_rf_STAR___60736.invoke(reducible.clj:233)""
metabase  |     ""query_processor.middleware.add_rows_truncated$add_rows_truncated_xform$fn__69577.invoke(add_rows_truncated.clj:34)""
metabase  |     ""query_processor.middleware.format_rows$format_rows_xform$fn__71472.invoke(format_rows.clj:74)""
metabase  |     ""query_processor.reducible$reducible_rows$reify__60728.reduce(reducible.clj:177)""
metabase  |     ""query_processor.context.default$default_reducef$fn__49405.invoke(default.clj:34)""
metabase  |     ""query_processor.context.default$default_reducef.invokeStatic(default.clj:33)""
metabase  |     ""query_processor.context.default$default_reducef.invoke(default.clj:25)""
metabase  |     ""query_processor.context$reducef.invokeStatic(context.clj:70)""
metabase  |     ""query_processor.context$reducef.invoke(context.clj:63)""
metabase  |     ""query_processor.context.default$default_runf$respond_STAR___49409.invoke(default.clj:45)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:706)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""
metabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""
metabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |     ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""
metabase  |     ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""
metabase  |     ""query_processor.context$executef.invokeStatic(context.clj:60)""
metabase  |     ""query_processor.context$executef.invoke(context.clj:49)""
metabase  |     ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""
metabase  |     ""query_processor.context.default$default_runf.invoke(default.clj:42)""
metabase  |     ""query_processor.context$runf.invokeStatic(context.clj:46)""
metabase  |     ""query_processor.context$runf.invoke(context.clj:40)""
metabase  |     ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""
metabase  |     ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""
metabase  |     ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""
metabase  |     ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""
metabase  |     ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""
metabase  |     ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""
metabase  |     ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""
metabase  |     ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""
metabase  |     ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""
metabase  |     ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:303)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""
metabase  |     ""driver$do_with_driver.invokeStatic(driver.clj:94)""
metabase  |     ""driver$do_with_driver.invoke(driver.clj:89)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""
metabase  |     ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |     ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""
metabase  |     ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""
metabase  |     ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""
metabase  |     ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""
metabase  |     ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""
metabase  |     ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""
metabase  |     ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""
metabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""
metabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713$fn__60717.invoke(reducible.clj:131)""]}
metabase  |   {:status :failed,
metabase  |    :class clojure.lang.ExceptionInfo,
metabase  |    :error ""Error reducing result rows: null"",
metabase  |    :stacktrace
metabase  |    [""--> query_processor.context.default$default_reducef$fn__49405.invoke(default.clj:36)""
metabase  |     ""query_processor.context.default$default_reducef.invokeStatic(default.clj:33)""
metabase  |     ""query_processor.context.default$default_reducef.invoke(default.clj:25)""
metabase  |     ""query_processor.context$reducef.invokeStatic(context.clj:70)""
metabase  |     ""query_processor.context$reducef.invoke(context.clj:63)""
metabase  |     ""query_processor.context.default$default_runf$respond_STAR___49409.invoke(default.clj:45)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:706)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""
metabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""
metabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |     ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""
metabase  |     ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""
metabase  |     ""query_processor.context$executef.invokeStatic(context.clj:60)""
metabase  |     ""query_processor.context$executef.invoke(context.clj:49)""
metabase  |     ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""
metabase  |     ""query_processor.context.default$default_runf.invoke(default.clj:42)""
metabase  |     ""query_processor.context$runf.invokeStatic(context.clj:46)""
metabase  |     ""query_processor.context$runf.invoke(context.clj:40)""
metabase  |     ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""
metabase  |     ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""
metabase  |     ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""
metabase  |     ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""
metabase  |     ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""
metabase  |     ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""
metabase  |     ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""
metabase  |     ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""
metabase  |     ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""
metabase  |     ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:303)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""
metabase  |     ""driver$do_with_driver.invokeStatic(driver.clj:94)""
metabase  |     ""driver$do_with_driver.invoke(driver.clj:89)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""
metabase  |     ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |     ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""
metabase  |     ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""
metabase  |     ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""
metabase  |     ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""
metabase  |     ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""
metabase  |     ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""
metabase  |     ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""
metabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""
metabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713$fn__60717.invoke(reducible.clj:131)""],
metabase  |    :error_type :qp,
metabase  |    :ex-data {:type :qp}}],
metabase  |  :action_id nil,
metabase  |  :error_type :qp,
metabase  |  :json_query
metabase  |  {:constraints {:max-results 10000, :max-results-bare-rows 2000},
metabase  |   :type :query,
metabase  |   :middleware {:js-int-to-string? true, :ignore-cached-results? false},
metabase  |   :viz-settings {},
metabase  |   :database 5,
metabase  |   :query
metabase  |   {:joins
metabase  |    [{:fields [[:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]],
metabase  |      :strategy :left-join,
metabase  |      :alias ""project - project_id"",
metabase  |      :condition
metabase  |      [:=
metabase  |       [:field ""project_id"" {:base-type :type/BigInteger}]
metabase  |       [:field 4761 {:base-type :type/Integer, :join-alias ""project - project_id""}]],
metabase  |      :source-table 272}],
metabase  |    :expressions
metabase  |    {""revised_budget""
metabase  |     [:+
metabase  |      [:field ""sum"" {:base-type :type/Float}]
metabase  |      [:field ""sum_2"" {:base-type :type/Float}]
metabase  |      [:field ""sum_3"" {:base-type :type/Float}]]},
metabase  |    :order-by [[:asc [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]]],
metabase  |    :source-query
metabase  |    {:breakout [[:field 4747 {:base-type :type/BigInteger}]],
metabase  |     :aggregation
metabase  |     [[:sum [:field 4751 {:base-type :type/Float}]]
metabase  |      [:sum [:field 4752 {:base-type :type/Float}]]
metabase  |      [:sum [:field 4748 {:base-type :type/Float}]]
metabase  |      [:sum [:field 4745 {:base-type :type/Float}]]
metabase  |      [:sum [:field 4746 {:base-type :type/Float}]]
metabase  |      [:sum [:field 4756 {:base-type :type/Float}]]
metabase  |      [:sum [:field 4753 {:base-type :type/Float}]]],
metabase  |     :source-table ""card__140""}},
metabase  |   :parameters
metabase  |   [{:type :string/=, :id ""71b936d7"", :target [:dimension [:field 4762 {:join-alias ""project - project_id""}]]}],
metabase  |   :async? true,
metabase  |   :cache-ttl nil},
metabase  |  :native
metabase  |  {:query
metabase  |   ""SELECT \""source\"".\""project_id\"" AS \""project_id\"", \""source\"".\""sum\"" AS \""sum\"", \""source\"".\""sum_2\"" AS \""sum_2\"", \""source\"".\""sum_3\"" AS \""sum_3\"", \""source\"".\""sum_4\"" AS \""sum_4\"", \""source\"".\""sum_5\"" AS \""sum_5\"", \""source\"".\""sum_6\"" AS \""sum_6\"", \""source\"".\""sum_7\"" AS \""sum_7\"", \""source\"".\""revised_budget\"" AS \""revised_budget\"", \""source\"".\""project - project_id__name\"" AS \""project - project_id__name\"" FROM (SELECT \""source\"".\""project_id\"" AS \""project_id\"", \""source\"".\""sum\"" AS \""sum\"", \""source\"".\""sum_2\"" AS \""sum_2\"", \""source\"".\""sum_3\"" AS \""sum_3\"", \""source\"".\""sum_4\"" AS \""sum_4\"", \""source\"".\""sum_5\"" AS \""sum_5\"", \""source\"".\""sum_6\"" AS \""sum_6\"", \""source\"".\""sum_7\"" AS \""sum_7\"", \""source\"".\""sum\"" + \""source\"".\""sum_2\"" + \""source\"".\""sum_3\"" AS \""revised_budget\"", \""project - project_id\"".\""name\"" AS \""project - project_id__name\"", \""project - project_id\"".\""id\"" AS \""project - project_id__id\"" FROM (SELECT \""source\"".\""project_id\"" AS \""project_id\"", SUM(\""source\"".\""original_budget\"") AS \""sum\"", SUM(\""source\"".\""budget_modifications\"") AS \""sum_2\"", SUM(\""source\"".\""approved_change_orders\"") AS \""sum_3\"", SUM(\""source\"".\""pending_budget_changes\"") AS \""sum_4\"", SUM(\""source\"".\""committed_costs\"") AS \""sum_5\"", SUM(\""source\"".\""cost_to_date\"") AS \""sum_6\"", SUM(\""source\"".\""pending_cost_changes\"") AS \""sum_7\"" FROM (SELECT \""source\"".\""id\"" AS \""id\"", \""source\"".\""project_id\"" AS \""project_id\"", \""source\"".\""division_id\"" AS \""division_id\"", \""source\"".\""phase_id\"" AS \""phase_id\"", \""source\"".\""subjob_id\"" AS \""subjob_id\"", \""source\"".\""cost_type_id\"" AS \""cost_type_id\"", \""source\"".\""original_budget\"" AS \""original_budget\"", \""source\"".\""budget_modifications\"" AS \""budget_modifications\"", \""source\"".\""approved_change_orders\"" AS \""approved_change_orders\"", \""source\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"", \""source\"".\""committed_costs\"" AS \""committed_costs\"", \""source\"".\""cost_to_date\"" AS \""cost_to_date\"", \""source\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"", \""source\"".\""source\"" AS \""source\"", \""source\"".\""last_modified\"" AS \""last_modified\"" FROM (SELECT \""budgets\"".\""wbs_cost\"".\""id\"" AS \""id\"", \""budgets\"".\""wbs_cost\"".\""project_id\"" AS \""project_id\"", \""budgets\"".\""wbs_cost\"".\""division_id\"" AS \""division_id\"", \""budgets\"".\""wbs_cost\"".\""phase_id\"" AS \""phase_id\"", \""budgets\"".\""wbs_cost\"".\""subjob_id\"" AS \""subjob_id\"", \""budgets\"".\""wbs_cost\"".\""cost_type_id\"" AS \""cost_type_id\"", \""budgets\"".\""wbs_cost\"".\""original_budget\"" AS \""original_budget\"", \""budgets\"".\""wbs_cost\"".\""budget_modifications\"" AS \""budget_modifications\"", \""budgets\"".\""wbs_cost\"".\""approved_change_orders\"" AS \""approved_change_orders\"", \""budgets\"".\""wbs_cost\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"", \""budgets\"".\""wbs_cost\"".\""committed_costs\"" AS \""committed_costs\"", \""budgets\"".\""wbs_cost\"".\""cost_to_date\"" AS \""cost_to_date\"", \""budgets\"".\""wbs_cost\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"", \""budgets\"".\""wbs_cost\"".\""source\"" AS \""source\"", \""budgets\"".\""wbs_cost\"".\""last_modified\"" AS \""last_modified\"", \""phase - phase_id\"".\""cost_code\"" AS \""phase - phase_id__cost_code\"", \""phase - phase_id\"".\""id\"" AS \""phase - phase_id__id\"" FROM \""budgets\"".\""wbs_cost\"" LEFT JOIN \""wbs\"".\""phase\"" AS \""phase - phase_id\"" ON \""budgets\"".\""wbs_cost\"".\""phase_id\"" = \""phase - phase_id\"".\""id\"" WHERE NOT (\""budgets\"".\""wbs_cost\"".\""source\"" = ?) OR (NOT (\""phase - phase_id\"".\""cost_code\"" = ?) AND NOT (\""phase - phase_id\"".\""cost_code\"" = ?))) AS \""source\"" ORDER BY \""source\"".\""phase - phase_id__cost_code\"" ASC) AS \""source\"" GROUP BY \""source\"".\""project_id\"" ORDER BY \""source\"".\""project_id\"" ASC) AS \""source\"" LEFT JOIN \""projects\"".\""project\"" AS \""project - project_id\"" ON \""source\"".\""project_id\"" = \""project - project_id\"".\""id\"") AS \""source\"" ORDER BY \""source\"".\""project - project_id__name\"" ASC LIMIT 2000"",
metabase  |   :params (""realpage"" ""55-9800"" ""55-9900"")},
metabase  |  :status :failed,
metabase  |  :class java.io.IOException,
metabase  |  :stacktrace
metabase  |  [""java.base/sun.nio.ch.FileDispatcherImpl.writev0(Native Method)""
metabase  |   ""java.base/sun.nio.ch.SocketDispatcher.writev(Unknown Source)""
metabase  |   ""java.base/sun.nio.ch.IOUtil.write(Unknown Source)""
metabase  |   ""java.base/sun.nio.ch.IOUtil.write(Unknown Source)""
metabase  |   ""java.base/sun.nio.ch.SocketChannelImpl.write(Unknown Source)""
metabase  |   ""java.base/java.nio.channels.SocketChannel.write(Unknown Source)""
metabase  |   ""org.eclipse.jetty.io.SocketChannelEndPoint.flush(SocketChannelEndPoint.java:110)""
metabase  |   ""org.eclipse.jetty.io.WriteFlusher.flush(WriteFlusher.java:422)""
metabase  |   ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:275)""
metabase  |   ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:254)""
metabase  |   ""org.eclipse.jetty.io.AbstractEndPoint.write(AbstractEndPoint.java:386)""
metabase  |   ""org.eclipse.jetty.server.HttpConnection$SendCallback.process(HttpConnection.java:832)""
metabase  |   ""org.eclipse.jetty.util.IteratingCallback.processing(IteratingCallback.java:243)""
metabase  |   ""org.eclipse.jetty.util.IteratingCallback.iterate(IteratingCallback.java:224)""
metabase  |   ""org.eclipse.jetty.server.HttpConnection.send(HttpConnection.java:589)""
metabase  |   ""org.eclipse.jetty.server.HttpChannel.sendResponse(HttpChannel.java:1051)""
metabase  |   ""org.eclipse.jetty.server.HttpChannel.write(HttpChannel.java:1123)""
metabase  |   ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:270)""
metabase  |   ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:254)""
metabase  |   ""org.eclipse.jetty.server.HttpOutput.flush(HttpOutput.java:736)""
metabase  |   ""java.base/java.util.zip.DeflaterOutputStream.flush(Unknown Source)""
metabase  |   ""--> async.streaming_response$delay_output_stream$fn__42918.invoke(streaming_response.clj:123)""
metabase  |   ""async.streaming_response.proxy$java.io.OutputStream$ff19274a.flush(Unknown Source)""
metabase  |   ""query_processor.streaming.json$fn$reify__50704.write_row_BANG_(json.clj:75)""
metabase  |   ""query_processor.streaming$streaming_rff$fn__51519$fn__51524.invoke(streaming.clj:127)""
metabase  |   ""query_processor.middleware.process_userland_query$add_and_save_execution_info_xform_BANG_$execution_info_rf_STAR___70969.invoke(process_userland_query.clj:110)""
metabase  |   ""query_processor.reducible$combine_additional_reducing_fns$combine_additional_reducing_fns_rf_STAR___60736.invoke(reducible.clj:233)""
metabase  |   ""query_processor.middleware.add_rows_truncated$add_rows_truncated_xform$fn__69577.invoke(add_rows_truncated.clj:34)""
metabase  |   ""query_processor.middleware.format_rows$format_rows_xform$fn__71472.invoke(format_rows.clj:74)""
metabase  |   ""query_processor.reducible$reducible_rows$reify__60728.reduce(reducible.clj:177)""
metabase  |   ""query_processor.context.default$default_reducef$fn__49405.invoke(default.clj:34)""
metabase  |   ""query_processor.context.default$default_reducef.invokeStatic(default.clj:33)""
metabase  |   ""query_processor.context.default$default_reducef.invoke(default.clj:25)""
metabase  |   ""query_processor.context$reducef.invokeStatic(context.clj:70)""
metabase  |   ""query_processor.context$reducef.invoke(context.clj:63)""
metabase  |   ""query_processor.context.default$default_runf$respond_STAR___49409.invoke(default.clj:45)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:706)""
metabase  |   ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""
metabase  |   ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""
metabase  |   ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""
metabase  |   ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""
metabase  |   ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |   ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""
metabase  |   ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""
metabase  |   ""query_processor.context$executef.invokeStatic(context.clj:60)""
metabase  |   ""query_processor.context$executef.invoke(context.clj:49)""
metabase  |   ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""
metabase  |   ""query_processor.context.default$default_runf.invoke(default.clj:42)""
metabase  |   ""query_processor.context$runf.invokeStatic(context.clj:46)""
metabase  |   ""query_processor.context$runf.invoke(context.clj:40)""
metabase  |   ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""
metabase  |   ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""
metabase  |   ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""
metabase  |   ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""
metabase  |   ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""
metabase  |   ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""
metabase  |   ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""
metabase  |   ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""
metabase  |   ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""
metabase  |   ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:303)""
metabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""
metabase  |   ""driver$do_with_driver.invokeStatic(driver.clj:94)""
metabase  |   ""driver$do_with_driver.invoke(driver.clj:89)""
metabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""
metabase  |   ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""
metabase  |   ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""
metabase  |   ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |   ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""
metabase  |   ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |   ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""
metabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""
metabase  |   ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""
metabase  |   ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""
metabase  |   ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""
metabase  |   ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""
metabase  |   ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""
metabase  |   ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""
metabase  |   ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""
metabase  |   ""query_processor.reducible$async_qp$qp_STAR___60713$fn__60717.invoke(reducible.clj:131)""],
metabase  |  :card_id 145,
metabase  |  :context :dashboard,
metabase  |  :error ""Broken pipe"",
metabase  |  :row_count 0,
metabase  |  :running_time 0,
metabase  |  :preprocessed
metabase  |  {:constraints {:max-results 10000, :max-results-bare-rows 2000},
metabase  |   :type :query,
metabase  |   :middleware {:js-int-to-string? true, :ignore-cached-results? false},
metabase  |   :user-parameters
metabase  |   [{:type :string/=, :id ""71b936d7"", :target [:dimension [:field 4762 {:join-alias ""project - project_id""}]]}],
metabase  |   :viz-settings {},
metabase  |   :info
metabase  |   {:executed-by 1,
metabase  |    :context :dashboard,
metabase  |    :card-id 145,
metabase  |    :card-name ""All Projects - Project level"",
metabase  |    :dashboard-id 18,
metabase  |    :visualization-settings
metabase  |    {:table.columns
metabase  |     [{:name ""name"", :fieldref [:field 4762 {:join-alias ""project - project_id""}], :enabled true}
metabase  |      {:name ""sum"", :fieldref [:aggregation 0], :enabled true}
metabase  |      {:name ""sum_2"", :fieldref [:aggregation 1], :enabled true}
metabase  |      {:name ""sum_3"", :fieldref [:aggregation 2], :enabled true}
metabase  |      {:name ""revised_budget"", :fieldref [:expression ""revised_budget""], :enabled true}
metabase  |      {:name ""sum_4"", :fieldref [:aggregation 3], :enabled true}
metabase  |      {:name ""sum_7"", :fieldref [:aggregation 6], :enabled true}
metabase  |      {:name ""sum_5"", :fieldref [:aggregation 4], :enabled true}
metabase  |      {:name ""sum_6"", :fieldref [:aggregation 5], :enabled true}
metabase  |      {:name ""project_id"", :fieldref [:field 4747 nil], :enabled true}],
metabase  |     :table.pivot-column ""pending_budget_changes"",
metabase  |     :table.cell-column ""original_budget"",
metabase  |     :column-settings
metabase  |     {:[""name"",""sum""] {:column-title ""original_budget""},
metabase  |      :[""name"",""sum-5""] {:column-title ""committed_costs""},
metabase  |      :[""ref"",[""field"",4810,{""base-type"":""type/text"",""join-alias"":""division - division-id""}]] {:column-title ""division""},
metabase  |      :[""ref"",[""field"",4775,{""base-type"":""type/text"",""join-alias"":""subjob - subjob-id""}]] {:column-title ""subjob_label""},
metabase  |      :[""name"",""sum-6""] {:column-title ""cost_to_date""},
metabase  |      :[""name"",""sum-4""] {:column-title ""pending_budget_changes""},
metabase  |      :[""ref"",[""field"",4806,{""base-type"":""type/text"",""join-alias"":""cost-type - cost-type-id""}]]
metabase  |      {:column-title ""cost_type_label""},
metabase  |      :[""ref"",[""field"",4817,{""base-type"":""type/text"",""join-alias"":""phase - phase-id""}]] {:column-title ""phase""},
metabase  |      :[""ref"",[""field"",4762,{""base-type"":""type/text"",""join-alias"":""project - project-id""}]] {:column-title ""project""},
metabase  |      :[""ref"",[""field"",4818,{""base-type"":""type/text"",""join-alias"":""phase - phase-id""}]] {:column-title ""cost_code""},
metabase  |      :[""ref"",[""field"",4755,{""base-type"":""type/biginteger""}]] {:column-title ""cost_type_db_id""},
metabase  |      :[""ref"",[""field"",4757,{""base-type"":""type/biginteger""}]] {:column-title ""division_db_id""},
metabase  |      :[""name"",""sum-2""] {:column-title ""budget_modifications"", :number-style ""decimal"", :show-mini-bar false},
metabase  |      :[""ref"",[""field"",4820,{""base-type"":""type/text"",""join-alias"":""phase - phase-id""}]] {:column-title ""phase_id""},
metabase  |      :[""name"",""sum-3""] {:column-title ""approved_change_orders""},
metabase  |      :[""ref"",[""field"",4750,{""base-type"":""type/biginteger""}]] {:column-title ""phase_db_id""},
metabase  |      :[""name"",""sum-7""] {:column-title ""pending_cost_changes""},
metabase  |      :[""ref"",[""field"",4812,{""base-type"":""type/text"",""join-alias"":""division - division-id""}]]
metabase  |      {:column-title ""division_id""},
metabase  |      :[""ref"",[""field"",4747,{""base-type"":""type/biginteger""}]] {:column-title ""project_db_id""}}}},
metabase  |   :database 5,
metabase  |   :query
metabase  |   {:expressions
metabase  |    {""revised_budget""
metabase  |     [:+
metabase  |      [:field ""sum"" {:base-type :type/Float}]
metabase  |      [:field ""sum_2"" {:base-type :type/Float}]
metabase  |      [:field ""sum_3"" {:base-type :type/Float}]]},
metabase  |    :order-by [[:asc [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]]],
metabase  |    :source-metadata
metabase  |    [{:semantic_type :type/FK,
metabase  |      :table_id 275,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""project_id"",
metabase  |      :settings nil,
metabase  |      :field_ref [:field 4747 {:base-type :type/BigInteger}],
metabase  |      :effective_type :type/BigInteger,
metabase  |      :nfc_path nil,
metabase  |      :parent_id nil,
metabase  |      :id 4747,
metabase  |      :display_name ""project_id"",
metabase  |      :fingerprint {:global {:distinct-count 6, :nil% 0.0}},
metabase  |      :base_type :type/BigInteger}
metabase  |     {:name ""sum"",
metabase  |      :display_name ""Sum of original_budget"",
metabase  |      :base_type :type/Float,
metabase  |      :settings nil,
metabase  |      :field_ref [:aggregation 0]}
metabase  |     {:name ""sum_2"",
metabase  |      :display_name ""Sum of budget_modifications"",
metabase  |      :base_type :type/Float,
metabase  |      :settings nil,
metabase  |      :field_ref [:aggregation 1]}
metabase  |     {:name ""sum_3"",
metabase  |      :display_name ""Sum of approved_change_orders"",
metabase  |      :base_type :type/Float,
metabase  |      :settings nil,
metabase  |      :field_ref [:aggregation 2]}
metabase  |     {:name ""sum_4"",
metabase  |      :display_name ""Sum of pending_budget_changes"",
metabase  |      :base_type :type/Float,
metabase  |      :settings nil,
metabase  |      :field_ref [:aggregation 3]}
metabase  |     {:name ""sum_5"",
metabase  |      :display_name ""Sum of committed_costs"",
metabase  |      :base_type :type/Float,
metabase  |      :settings nil,
metabase  |      :field_ref [:aggregation 4]}
metabase  |     {:name ""sum_6"",
metabase  |      :display_name ""Sum of cost_to_date"",
metabase  |      :base_type :type/Float,
metabase  |      :settings nil,
metabase  |      :field_ref [:aggregation 5]}
metabase  |     {:name ""sum_7"",
metabase  |      :display_name ""Sum of pending_cost_changes"",
metabase  |      :base_type :type/Float,
metabase  |      :settings nil,
metabase  |      :field_ref [:aggregation 6]}],
metabase  |    :fields
metabase  |    [[:field 4747 {:base-type :type/BigInteger}]
metabase  |     [:field ""sum"" {:base-type :type/Float}]
metabase  |     [:field ""sum_2"" {:base-type :type/Float}]
metabase  |     [:field ""sum_3"" {:base-type :type/Float}]
metabase  |     [:field ""sum_4"" {:base-type :type/Float}]
metabase  |     [:field ""sum_5"" {:base-type :type/Float}]
metabase  |     [:field ""sum_6"" {:base-type :type/Float}]
metabase  |     [:field ""sum_7"" {:base-type :type/Float}]
metabase  |     [:expression ""revised_budget""]
metabase  |     [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]],
metabase  |    :joins
metabase  |    [{:alias ""project - project_id"",
metabase  |      :strategy :left-join,
metabase  |      :fields [[:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]],
metabase  |      :condition
metabase  |      [:=
metabase  |       [:field 4747 {:base-type :type/BigInteger}]
metabase  |       [:field 4761 {:base-type :type/Integer, :join-alias ""project - project_id""}]],
metabase  |      :source-table 272}],
metabase  |    :source-query
metabase  |    {:breakout [[:field 4747 {:base-type :type/BigInteger}]],
metabase  |     :aggregation
metabase  |     [[:aggregation-options [:sum [:field 4751 {:base-type :type/Float}]] {:name ""sum""}]
metabase  |      [:aggregation-options [:sum [:field 4752 {:base-type :type/Float}]] {:name ""sum_2""}]
metabase  |      [:aggregation-options [:sum [:field 4748 {:base-type :type/Float}]] {:name ""sum_3""}]
metabase  |      [:aggregation-options [:sum [:field 4745 {:base-type :type/Float}]] {:name ""sum_4""}]
metabase  |      [:aggregation-options [:sum [:field 4746 {:base-type :type/Float}]] {:name ""sum_5""}]
metabase  |      [:aggregation-options [:sum [:field 4756 {:base-type :type/Float}]] {:name ""sum_6""}]
metabase  |      [:aggregation-options [:sum [:field 4753 {:base-type :type/Float}]] {:name ""sum_7""}]],
metabase  |     :source-card-id 140,
metabase  |     :source-metadata
metabase  |     [{:description nil,
metabase  |       :semantic_type :type/PK,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""id"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5136 {:base-type :type/Integer}],
metabase  |       :effective_type :type/Integer,
metabase  |       :id 5136,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""id"",
metabase  |       :fingerprint nil,
metabase  |       :base_type :type/Integer}
metabase  |      {:description nil,
metabase  |       :semantic_type :type/Category,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""project_id"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5139 {:base-type :type/BigInteger}],
metabase  |       :effective_type :type/BigInteger,
metabase  |       :id 5139,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""project_id"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 28, :nil% 0},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min 12, :q1 19.52158164046306, :q3 30.000926863170704, :max 46, :sd 6.529207780843288, :avg 25.4391}}},
metabase  |       :base_type :type/BigInteger}
metabase  |      {:description nil,
metabase  |       :semantic_type :type/FK,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""division_id"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id 4809,
metabase  |       :field_ref [:field 5148 {:base-type :type/BigInteger}],
metabase  |       :effective_type :type/BigInteger,
metabase  |       :id 5148,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""division_id"",
metabase  |       :fingerprint {:global {:distinct-count 50, :nil% 0}},
metabase  |       :base_type :type/BigInteger}
metabase  |      {:description nil,
metabase  |       :semantic_type :type/FK,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""phase_id"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id 4816,
metabase  |       :field_ref [:field 5141 {:base-type :type/BigInteger}],
metabase  |       :effective_type :type/BigInteger,
metabase  |       :id 5141,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""phase_id"",
metabase  |       :fingerprint {:global {:distinct-count 444, :nil% 0}},
metabase  |       :base_type :type/BigInteger}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""subjob_id"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5135 {:base-type :type/BigInteger}],
metabase  |       :effective_type :type/BigInteger,
metabase  |       :id 5135,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""subjob_id"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 215, :nil% 0.4417},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min 153,
metabase  |          :q1 228.7728093528213,
metabase  |          :q3 324.8630031964761,
metabase  |          :max 375,
metabase  |          :sd 56.79493084837947,
metabase  |          :avg 276.75998567078625}}},
metabase  |       :base_type :type/BigInteger}
metabase  |      {:description nil,
metabase  |       :semantic_type :type/FK,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""cost_type_id"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id 4805,
metabase  |       :field_ref [:field 5146 {:base-type :type/BigInteger}],
metabase  |       :effective_type :type/BigInteger,
metabase  |       :id 5146,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""cost_type_id"",
metabase  |       :fingerprint {:global {:distinct-count 12, :nil% 0}},
metabase  |       :base_type :type/BigInteger}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""original_budget"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5142 {:base-type :type/Float}],
metabase  |       :effective_type :type/Float,
metabase  |       :id 5142,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""original_budget"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 2927, :nil% 0},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min -15000,
metabase  |          :q1 1650.862028593805,
metabase  |          :q3 42427.612653579316,
metabase  |          :max 61998921,
metabase  |          :sd 1222692.0637818938,
metabase  |          :avg 98694.22240099999}}},
metabase  |       :base_type :type/Float}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""budget_modifications"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5143 {:base-type :type/Float}],
metabase  |       :effective_type :type/Float,
metabase  |       :id 5143,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""budget_modifications"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 5372, :nil% 0},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min -13961544,
metabase  |          :q1 -46696.048316343105,
metabase  |          :q3 38079.889821447665,
metabase  |          :max 7593650,
metabase  |          :sd 388669.6167360365,
metabase  |          :avg 3251.8723759999975}}},
metabase  |       :base_type :type/Float}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""approved_change_orders"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5134 {:base-type :type/Float}],
metabase  |       :effective_type :type/Float,
metabase  |       :id 5134,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""approved_change_orders"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 112, :nil% 0.0735},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min -2118563,
metabase  |          :q1 -201.38202331354478,
metabase  |          :q3 191.7514213997219,
metabase  |          :max 7593650,
metabase  |          :sd 84794.24111903225,
metabase  |          :avg 1132.1864522396115}}},
metabase  |       :base_type :type/Float}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""pending_budget_changes"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5137 {:base-type :type/Float}],
metabase  |       :effective_type :type/Float,
metabase  |       :id 5137,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""pending_budget_changes"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 2, :nil% 0},
metabase  |        :type {:type/Number {:min -3102.5, :q1 -909.0115014843832, :q3 0, :max 0, :sd 31.025, :avg -0.31025}}},
metabase  |       :base_type :type/Float}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""committed_costs"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5138 {:base-type :type/Float}],
metabase  |       :effective_type :type/Float,
metabase  |       :id 5138,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""committed_costs"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 3608, :nil% 0},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min -29039.42,
metabase  |          :q1 -3164.494824706897,
metabase  |          :q3 25252.15706035909,
metabase  |          :max 4299662.6,
metabase  |          :sd 195574.55726043574,
metabase  |          :avg 52424.216188}}},
metabase  |       :base_type :type/Float}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""cost_to_date"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5147 {:base-type :type/Float}],
metabase  |       :effective_type :type/Float,
metabase  |       :id 5147,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""cost_to_date"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 5167, :nil% 0},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min -73583.93,
metabase  |          :q1 -9618.972334975959,
metabase  |          :q3 30335.417426701963,
metabase  |          :max 5.321365176E7,
metabase  |          :sd 1068676.5332191263,
metabase  |          :avg 88005.01605499999}}},
metabase  |       :base_type :type/Float}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""pending_cost_changes"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5144 {:base-type :type/Float}],
metabase  |       :effective_type :type/Float,
metabase  |       :id 5144,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""pending_cost_changes"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 15, :nil% 0},
metabase  |        :type
metabase  |        {:type/Number
metabase  |         {:min -2546,
metabase  |          :q1 -744.6993419748337,
metabase  |          :q3 282.1369614765108,
metabase  |          :max 194237.5,
metabase  |          :sd 2771.6265922608873,
metabase  |          :avg 52.010897}}},
metabase  |       :base_type :type/Float}
metabase  |      {:description nil,
metabase  |       :semantic_type :type/Source,
metabase  |       :coercion_strategy nil,
metabase  |       :name ""source"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5140 {:base-type :type/Text}],
metabase  |       :effective_type :type/Text,
metabase  |       :id 5140,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""source"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 2, :nil% 0},
metabase  |        :type
metabase  |        {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 7.0735}}},
metabase  |       :base_type :type/Text}
metabase  |      {:description nil,
metabase  |       :semantic_type nil,
metabase  |       :coercion_strategy nil,
metabase  |       :unit :default,
metabase  |       :name ""last_modified"",
metabase  |       :settings nil,
metabase  |       :fk_target_field_id nil,
metabase  |       :field_ref [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}],
metabase  |       :effective_type :type/DateTime,
metabase  |       :id 5145,
metabase  |       :visibility_type :normal,
metabase  |       :display_name ""last_modified"",
metabase  |       :fingerprint
metabase  |       {:global {:distinct-count 4890, :nil% 0},
metabase  |        :type {:type/DateTime {:earliest ""2024-01-23T18:43:06.147593Z"", :latest ""2024-02-13T15:31:25.346999Z""}}},
metabase  |       :base_type :type/DateTime}],
metabase  |     :source-query/dataset? true,
metabase  |     :order-by [[:asc [:field 4747 {:base-type :type/BigInteger}]]],
metabase  |     :source-query
metabase  |     {:source-table 307,
metabase  |      :order-by [[:asc [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]]],
metabase  |      :fields
metabase  |      [[:field 5136 {:base-type :type/Integer}]
metabase  |       [:field 5139 {:base-type :type/BigInteger}]
metabase  |       [:field 5148 {:base-type :type/BigInteger}]
metabase  |       [:field 5141 {:base-type :type/BigInteger}]
metabase  |       [:field 5135 {:base-type :type/BigInteger}]
metabase  |       [:field 5146 {:base-type :type/BigInteger}]
metabase  |       [:field 5142 {:base-type :type/Float}]
metabase  |       [:field 5143 {:base-type :type/Float}]
metabase  |       [:field 5134 {:base-type :type/Float}]
metabase  |       [:field 5137 {:base-type :type/Float}]
metabase  |       [:field 5138 {:base-type :type/Float}]
metabase  |       [:field 5147 {:base-type :type/Float}]
metabase  |       [:field 5144 {:base-type :type/Float}]
metabase  |       [:field 5140 {:base-type :type/Text}]
metabase  |       [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}]],
metabase  |      :expressions {""approved_change_orders"" [:coalesce [:field 5134 nil] 0]},
metabase  |      :filter
metabase  |      [:or
metabase  |       [:not
metabase  |        [:=
metabase  |         [:field 5140 {:base-type :type/Text}]
metabase  |         [:value
metabase  |          ""realpage""
metabase  |          {:base_type :type/Text,
metabase  |           :effective_type :type/Text,
metabase  |           :coercion_strategy nil,
metabase  |           :semantic_type :type/Source,
metabase  |           :database_type ""varchar"",
metabase  |           :name ""source""}]]]
metabase  |       [:and
metabase  |        [:not
metabase  |         [:=
metabase  |          [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]
metabase  |          [:value
metabase  |           ""55-9800""
metabase  |           {:base_type :type/Text,
metabase  |            :effective_type :type/Text,
metabase  |            :coercion_strategy nil,
metabase  |            :semantic_type nil,
metabase  |            :database_type ""bpchar"",
metabase  |            :name ""cost_code""}]]]
metabase  |        [:not
metabase  |         [:=
metabase  |          [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]
metabase  |          [:value
metabase  |           ""55-9900""
metabase  |           {:base_type :type/Text,
metabase  |            :effective_type :type/Text,
metabase  |            :coercion_strategy nil,
metabase  |            :semantic_type nil,
metabase  |            :database_type ""bpchar"",
metabase  |            :name ""cost_code""}]]]]],
metabase  |      :joins
metabase  |      [{:alias ""phase - phase_id"",
metabase  |        :strategy :left-join,
metabase  |        :condition
metabase  |        [:=
metabase  |         [:field 5141 {:base-type :type/BigInteger}]
metabase  |         [:field 4816 {:base-type :type/Integer, :join-alias ""phase - phase_id""}]],
metabase  |        :source-table 282}]}},
metabase  |    :limit 2000,
metabase  |    :metabase.query-processor.middleware.limit/original-limit nil},
metabase  |   :async? true},
metabase  |  :data {:rows [], :cols []}}
metabase  |
metabase  | 2024-02-22 00:09:30,749 ERROR middleware.catch-exceptions :: Error processing query: Broken pipe
metabase  | {:database_id 5,
metabase  |  :started_at #t ""2024-02-22T00:09:27.401505Z[GMT]"",
metabase  |  :via
metabase  |  [{:status :failed,
metabase  |    :class org.eclipse.jetty.io.EofException,
metabase  |    :error nil,
metabase  |    :stacktrace
metabase  |    [""org.eclipse.jetty.io.SocketChannelEndPoint.flush(SocketChannelEndPoint.java:116)""
metabase  |     ""org.eclipse.jetty.io.WriteFlusher.flush(WriteFlusher.java:422)""
metabase  |     ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:275)""
metabase  |     ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:254)""
metabase  |     ""org.eclipse.jetty.io.AbstractEndPoint.write(AbstractEndPoint.java:386)""
metabase  |     ""org.eclipse.jetty.server.HttpConnection$SendCallback.process(HttpConnection.java:832)""
metabase  |     ""org.eclipse.jetty.util.IteratingCallback.processing(IteratingCallback.java:243)""
metabase  |     ""org.eclipse.jetty.util.IteratingCallback.iterate(IteratingCallback.java:224)""
metabase  |     ""org.eclipse.jetty.server.HttpConnection.send(HttpConnection.java:589)""
metabase  |     ""org.eclipse.jetty.server.HttpChannel.sendResponse(HttpChannel.java:1051)""
metabase  |     ""org.eclipse.jetty.server.HttpChannel.write(HttpChannel.java:1123)""
metabase  |     ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:270)""
metabase  |     ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:254)""
metabase  |     ""org.eclipse.jetty.server.HttpOutput.flush(HttpOutput.java:736)""
metabase  |     ""java.base/java.util.zip.DeflaterOutputStream.flush(Unknown Source)""
metabase  |     ""--> async.streaming_response$delay_output_stream$fn__42918.invoke(streaming_response.clj:123)""
metabase  |     ""async.streaming_response.proxy$java.io.OutputStream$ff19274a.flush(Unknown Source)""
metabase  |     ""query_processor.streaming.json$fn$reify__50704.write_row_BANG_(json.clj:75)""
metabase  |     ""query_processor.streaming$streaming_rff$fn__51519$fn__51524.invoke(streaming.clj:127)""
metabase  |     ""query_processor.middleware.process_userland_query$add_and_save_execution_info_xform_BANG_$execution_info_rf_STAR___70969.invoke(process_userland_query.clj:110)""
metabase  |     ""query_processor.reducible$combine_additional_reducing_fns$combine_additional_reducing_fns_rf_STAR___60736.invoke(reducible.clj:233)""
metabase  |     ""query_processor.middleware.add_rows_truncated$add_rows_truncated_xform$fn__69577.invoke(add_rows_truncated.clj:34)""
metabase  |     ""query_processor.middleware.format_rows$format_rows_xform$fn__71472.invoke(format_rows.clj:74)""
metabase  |     ""query_processor.reducible$reducible_rows$reify__60728.reduce(reducible.clj:177)""
metabase  |     ""query_processor.context.default$default_reducef$fn__49405.invoke(default.clj:34)""
metabase  |     ""query_processor.context.default$default_reducef.invokeStatic(default.clj:33)""
metabase  |     ""query_processor.context.default$default_reducef.invoke(default.clj:25)""
metabase  |     ""query_processor.context$reducef.invokeStatic(context.clj:70)""
metabase  |     ""query_processor.context$reducef.invoke(context.clj:63)""
metabase  |     ""query_processor.context.default$default_runf$respond_STAR___49409.invoke(default.clj:45)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:706)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""
metabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""
metabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |     ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""
metabase  |     ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""
metabase  |     ""query_processor.context$executef.invokeStatic(context.clj:60)""
metabase  |     ""query_processor.context$executef.invoke(context.clj:49)""
metabase  |     ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""
metabase  |     ""query_processor.context.default$default_runf.invoke(default.clj:42)""
metabase  |     ""query_processor.context$runf.invokeStatic(context.clj:46)""
metabase  |     ""query_processor.context$runf.invoke(context.clj:40)""
metabase  |     ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""
metabase  |     ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""
metabase  |     ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""
metabase  |     ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""
metabase  |     ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""
metabase  |     ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""
metabase  |     ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""
metabase  |     ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""
metabase  |     ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""
metabase  |     ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:299)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""
metabase  |     ""driver$do_with_driver.invokeStatic(driver.clj:94)""
metabase  |     ""driver$do_with_driver.invoke(driver.clj:89)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""
metabase  |     ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |     ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""
metabase  |     ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""
metabase  |     ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""
metabase  |     ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""
metabase  |     ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""
metabase  |     ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""
metabase  |     ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""
metabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""
metabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713.invoke(reducible.clj:132)""
metabase  |     ""query_processor.reducible$sync_qp$qp_STAR___60725.doInvoke(reducible.clj:153)""
metabase  |     ""query_processor$process_userland_query.invokeStatic(query_processor.clj:402)""
metabase  |     ""query_processor$process_userland_query.doInvoke(query_processor.clj:398)""
metabase  |     ""query_processor$process_query_and_save_execution_BANG_.invokeStatic(query_processor.clj:416)""
metabase  |     ""query_processor$process_query_and_save_execution_BANG_.invoke(query_processor.clj:406)""
metabase  |     ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invokeStatic(query_processor.clj:431)""
metabase  |     ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invoke(query_processor.clj:421)""
metabase  |     ""api.dataset$run_query_async$fn__93366.invoke(dataset.clj:79)""
metabase  |     ""query_processor.streaming$streaming_response_STAR_$fn__51578$fn__51580.invoke(streaming.clj:168)""
metabase  |     ""query_processor.streaming$streaming_response_STAR_$fn__51578.invoke(streaming.clj:167)""
metabase  |     ""async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)""
metabase  |     ""async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)""
metabase  |     ""async.streaming_response$do_f_async$task__42901.invoke(streaming_response.clj:88)""]}
metabase  |   {:status :failed,
metabase  |    :class clojure.lang.ExceptionInfo,
metabase  |    :error ""Error reducing result rows: null"",
metabase  |    :stacktrace
metabase  |    [""--> query_processor.context.default$default_reducef$fn__49405.invoke(default.clj:36)""
metabase  |     ""query_processor.context.default$default_reducef.invokeStatic(default.clj:33)""
metabase  |     ""query_processor.context.default$default_reducef.invoke(default.clj:25)""
metabase  |     ""query_processor.context$reducef.invokeStatic(context.clj:70)""
metabase  |     ""query_processor.context$reducef.invoke(context.clj:63)""
metabase  |     ""query_processor.context.default$default_runf$respond_STAR___49409.invoke(default.clj:45)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:706)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""
metabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""
metabase  |     ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""
metabase  |     ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""
metabase  |     ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |     ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""
metabase  |     ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""
metabase  |     ""query_processor.context$executef.invokeStatic(context.clj:60)""
metabase  |     ""query_processor.context$executef.invoke(context.clj:49)""
metabase  |     ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""
metabase  |     ""query_processor.context.default$default_runf.invoke(default.clj:42)""
metabase  |     ""query_processor.context$runf.invokeStatic(context.clj:46)""
metabase  |     ""query_processor.context$runf.invoke(context.clj:40)""
metabase  |     ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""
metabase  |     ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""
metabase  |     ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""
metabase  |     ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""
metabase  |     ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""
metabase  |     ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""
metabase  |     ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""
metabase  |     ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""
metabase  |     ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""
metabase  |     ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:299)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""
metabase  |     ""driver$do_with_driver.invokeStatic(driver.clj:94)""
metabase  |     ""driver$do_with_driver.invoke(driver.clj:89)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""
metabase  |     ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""
metabase  |     ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |     ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""
metabase  |     ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""
metabase  |     ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""
metabase  |     ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""
metabase  |     ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""
metabase  |     ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""
metabase  |     ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""
metabase  |     ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""
metabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""
metabase  |     ""query_processor.reducible$async_qp$qp_STAR___60713.invoke(reducible.clj:132)""
metabase  |     ""query_processor.reducible$sync_qp$qp_STAR___60725.doInvoke(reducible.clj:153)""
metabase  |     ""query_processor$process_userland_query.invokeStatic(query_processor.clj:402)""
metabase  |     ""query_processor$process_userland_query.doInvoke(query_processor.clj:398)""
metabase  |     ""query_processor$process_query_and_save_execution_BANG_.invokeStatic(query_processor.clj:416)""
metabase  |     ""query_processor$process_query_and_save_execution_BANG_.invoke(query_processor.clj:406)""
metabase  |     ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invokeStatic(query_processor.clj:431)""
metabase  |     ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invoke(query_processor.clj:421)""
metabase  |     ""api.dataset$run_query_async$fn__93366.invoke(dataset.clj:79)""
metabase  |     ""query_processor.streaming$streaming_response_STAR_$fn__51578$fn__51580.invoke(streaming.clj:168)""
metabase  |     ""query_processor.streaming$streaming_response_STAR_$fn__51578.invoke(streaming.clj:167)""
metabase  |     ""async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)""
metabase  |     ""async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)""
metabase  |     ""async.streaming_response$do_f_async$task__42901.invoke(streaming_response.clj:88)""],
metabase  |    :error_type :qp,
metabase  |    :ex-data {:type :qp}}],
metabase  |  :action_id nil,
metabase  |  :error_type :qp,
metabase  |  :json_query
metabase  |  {:type ""query"",
metabase  |   :database 5,
metabase  |   :query {:source-table ""card__170""},
metabase  |   :parameters [],
metabase  |   :middleware {:js-int-to-string? true, :add-default-userland-constraints? true}},
metabase  |  :native
metabase  |  {:query
metabase  |   ""SELECT \""source\"".\""original_budget\"" AS \""original_budget\"", \""source\"".\""budget_modifications\"" AS \""budget_modifications\"", \""source\"".\""approved_change_orders\"" AS \""approved_change_orders\"", \""source\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"", \""source\"".\""committed_costs\"" AS \""committed_costs\"", \""source\"".\""cost_to_date\"" AS \""cost_to_date\"", \""source\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"", \""source\"".\""source\"" AS \""source\"", \""source\"".\""last_modified\"" AS \""last_modified\"", \""source\"".\""cost_code_type\"" AS \""cost_code_type\"", \""source\"".\""revised_budget\"" AS \""revised_budget\"", \""source\"".\""project - project_id__name\"" AS \""project - project_id__name\"", \""source\"".\""division - division_id__pretty_name\"" AS \""division - division_id__pretty_name\"", \""source\"".\""phase - phase_id__pretty_name\"" AS \""phase - phase_id__pretty_name\"", \""source\"".\""cost_type - cost_type_id__label\"" AS \""cost_type - cost_type_id__label\"", \""source\"".\""subjob__name\"" AS \""subjob__name\"" FROM (SELECT \""source\"".\""original_budget\"" AS \""original_budget\"", \""source\"".\""budget_modifications\"" AS \""budget_modifications\"", \""source\"".\""approved_change_orders\"" AS \""approved_change_orders\"", \""source\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"", \""source\"".\""committed_costs\"" AS \""committed_costs\"", \""source\"".\""cost_to_date\"" AS \""cost_to_date\"", \""source\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"", \""source\"".\""source\"" AS \""source\"", \""source\"".\""last_modified\"" AS \""last_modified\"", \""source\"".\""cost_code_type\"" AS \""cost_code_type\"", \""source\"".\""revised_budget\"" AS \""revised_budget\"", \""source\"".\""project - project_id__name\"" AS \""project - project_id__name\"", \""source\"".\""division - division_id__pretty_name\"" AS \""division - division_id__pretty_name\"", \""source\"".\""phase - phase_id__pretty_name\"" AS \""phase - phase_id__pretty_name\"", \""source\"".\""cost_type - cost_type_id__label\"" AS \""cost_type - cost_type_id__label\"", \""source\"".\""subjob__name\"" AS \""subjob__name\"" FROM (SELECT \""budgets\"".\""wbs_cost\"".\""project_id\"" AS \""project_id\"", \""budgets\"".\""wbs_cost\"".\""division_id\"" AS \""division_id\"", \""budgets\"".\""wbs_cost\"".\""phase_id\"" AS \""phase_id\"", \""budgets\"".\""wbs_cost\"".\""subjob_id\"" AS \""subjob_id\"", \""budgets\"".\""wbs_cost\"".\""cost_type_id\"" AS \""cost_type_id\"", \""budgets\"".\""wbs_cost\"".\""original_budget\"" AS \""original_budget\"", \""budgets\"".\""wbs_cost\"".\""budget_modifications\"" AS \""budget_modifications\"", \""budgets\"".\""wbs_cost\"".\""approved_change_orders\"" AS \""approved_change_orders\"", \""budgets\"".\""wbs_cost\"".\""pending_budget_changes\"" AS \""pending_budget_changes\"", \""budgets\"".\""wbs_cost\"".\""committed_costs\"" AS \""committed_costs\"", \""budgets\"".\""wbs_cost\"".\""cost_to_date\"" AS \""cost_to_date\"", \""budgets\"".\""wbs_cost\"".\""pending_cost_changes\"" AS \""pending_cost_changes\"", \""budgets\"".\""wbs_cost\"".\""source\"" AS \""source\"", \""budgets\"".\""wbs_cost\"".\""last_modified\"" AS \""last_modified\"", CONCAT(\""phase - phase_id\"".\""cost_code\"", \""cost_type - cost_type_id\"".\""label\"") AS \""cost_code_type\"", \""budgets\"".\""wbs_cost\"".\""original_budget\"" + \""budgets\"".\""wbs_cost\"".\""budget_modifications\"" + \""budgets\"".\""wbs_cost\"".\""approved_change_orders\"" AS \""revised_budget\"", \""project - project_id\"".\""name\"" AS \""project - project_id__name\"", \""division - division_id\"".\""pretty_name\"" AS \""division - division_id__pretty_name\"", \""phase - phase_id\"".\""pretty_name\"" AS \""phase - phase_id__pretty_name\"", \""cost_type - cost_type_id\"".\""label\"" AS \""cost_type - cost_type_id__label\"", \""subjob\"".\""name\"" AS \""subjob__name\"", \""phase - phase_id\"".\""cost_code\"" AS \""phase - phase_id__cost_code\"", \""subjob\"".\""label\"" AS \""subjob__label\"", \""project - project_id\"".\""id\"" AS \""project - project_id__id\"", \""division - division_id\"".\""id\"" AS \""division - division_id__id\"", \""phase - phase_id\"".\""id\"" AS \""phase - phase_id__id\"", \""cost_type - cost_type_id\"".\""id\"" AS \""cost_type - cost_type_id__id\"", \""subjob\"".\""id\"" AS \""subjob__id\"" FROM \""budgets\"".\""wbs_cost\"" LEFT JOIN \""projects\"".\""project\"" AS \""project - project_id\"" ON \""budgets\"".\""wbs_cost\"".\""project_id\"" = \""project - project_id\"".\""id\"" LEFT JOIN \""wbs\"".\""division\"" AS \""division - division_id\"" ON \""budgets\"".\""wbs_cost\"".\""division_id\"" = \""division - division_id\"".\""id\"" LEFT JOIN \""wbs\"".\""phase\"" AS \""phase - phase_id\"" ON \""budgets\"".\""wbs_cost\"".\""phase_id\"" = \""phase - phase_id\"".\""id\"" LEFT JOIN \""wbs\"".\""cost_type\"" AS \""cost_type - cost_type_id\"" ON \""budgets\"".\""wbs_cost\"".\""cost_type_id\"" = \""cost_type - cost_type_id\"".\""id\"" LEFT JOIN \""projects\"".\""subjob\"" AS \""subjob\"" ON \""budgets\"".\""wbs_cost\"".\""subjob_id\"" = \""subjob\"".\""id\"") AS \""source\"" ORDER BY \""source\"".\""project - project_id__name\"" ASC, \""source\"".\""phase - phase_id__cost_code\"" ASC, \""source\"".\""cost_type - cost_type_id__label\"" ASC, \""source\"".\""subjob__label\"" ASC) AS \""source\"" LIMIT 1048575"",
metabase  |   :params nil},
metabase  |  :status :failed,
metabase  |  :class java.io.IOException,
metabase  |  :stacktrace
metabase  |  [""java.base/sun.nio.ch.FileDispatcherImpl.writev0(Native Method)""
metabase  |   ""java.base/sun.nio.ch.SocketDispatcher.writev(Unknown Source)""
metabase  |   ""java.base/sun.nio.ch.IOUtil.write(Unknown Source)""
metabase  |   ""java.base/sun.nio.ch.IOUtil.write(Unknown Source)""
metabase  |   ""java.base/sun.nio.ch.SocketChannelImpl.write(Unknown Source)""
metabase  |   ""java.base/java.nio.channels.SocketChannel.write(Unknown Source)""
metabase  |   ""org.eclipse.jetty.io.SocketChannelEndPoint.flush(SocketChannelEndPoint.java:110)""
metabase  |   ""org.eclipse.jetty.io.WriteFlusher.flush(WriteFlusher.java:422)""
metabase  |   ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:275)""
metabase  |   ""org.eclipse.jetty.io.WriteFlusher.write(WriteFlusher.java:254)""
metabase  |   ""org.eclipse.jetty.io.AbstractEndPoint.write(AbstractEndPoint.java:386)""
metabase  |   ""org.eclipse.jetty.server.HttpConnection$SendCallback.process(HttpConnection.java:832)""
metabase  |   ""org.eclipse.jetty.util.IteratingCallback.processing(IteratingCallback.java:243)""
metabase  |   ""org.eclipse.jetty.util.IteratingCallback.iterate(IteratingCallback.java:224)""
metabase  |   ""org.eclipse.jetty.server.HttpConnection.send(HttpConnection.java:589)""
metabase  |   ""org.eclipse.jetty.server.HttpChannel.sendResponse(HttpChannel.java:1051)""
metabase  |   ""org.eclipse.jetty.server.HttpChannel.write(HttpChannel.java:1123)""
metabase  |   ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:270)""
metabase  |   ""org.eclipse.jetty.server.HttpOutput.channelWrite(HttpOutput.java:254)""
metabase  |   ""org.eclipse.jetty.server.HttpOutput.flush(HttpOutput.java:736)""
metabase  |   ""java.base/java.util.zip.DeflaterOutputStream.flush(Unknown Source)""
metabase  |   ""--> async.streaming_response$delay_output_stream$fn__42918.invoke(streaming_response.clj:123)""
metabase  |   ""async.streaming_response.proxy$java.io.OutputStream$ff19274a.flush(Unknown Source)""
metabase  |   ""query_processor.streaming.json$fn$reify__50704.write_row_BANG_(json.clj:75)""
metabase  |   ""query_processor.streaming$streaming_rff$fn__51519$fn__51524.invoke(streaming.clj:127)""
metabase  |   ""query_processor.middleware.process_userland_query$add_and_save_execution_info_xform_BANG_$execution_info_rf_STAR___70969.invoke(process_userland_query.clj:110)""
metabase  |   ""query_processor.reducible$combine_additional_reducing_fns$combine_additional_reducing_fns_rf_STAR___60736.invoke(reducible.clj:233)""
metabase  |   ""query_processor.middleware.add_rows_truncated$add_rows_truncated_xform$fn__69577.invoke(add_rows_truncated.clj:34)""
metabase  |   ""query_processor.middleware.format_rows$format_rows_xform$fn__71472.invoke(format_rows.clj:74)""
metabase  |   ""query_processor.reducible$reducible_rows$reify__60728.reduce(reducible.clj:177)""
metabase  |   ""query_processor.context.default$default_reducef$fn__49405.invoke(default.clj:34)""
metabase  |   ""query_processor.context.default$default_reducef.invokeStatic(default.clj:33)""
metabase  |   ""query_processor.context.default$default_reducef.invoke(default.clj:25)""
metabase  |   ""query_processor.context$reducef.invokeStatic(context.clj:70)""
metabase  |   ""query_processor.context$reducef.invoke(context.clj:63)""
metabase  |   ""query_processor.context.default$default_runf$respond_STAR___49409.invoke(default.clj:45)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query$fn__77840.invoke(execute.clj:706)""
metabase  |   ""driver.sql_jdbc.execute$fn__77633$fn__77634.invoke(execute.clj:388)""
metabase  |   ""driver.sql_jdbc.execute$do_with_resolved_connection.invokeStatic(execute.clj:334)""
metabase  |   ""driver.sql_jdbc.execute$do_with_resolved_connection.invoke(execute.clj:317)""
metabase  |   ""driver.sql_jdbc.execute$fn__77633.invokeStatic(execute.clj:382)""
metabase  |   ""driver.sql_jdbc.execute$fn__77633.invoke(execute.clj:380)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:689)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invokeStatic(execute.clj:686)""
metabase  |   ""driver.sql_jdbc.execute$execute_reducible_query.invoke(execute.clj:678)""
metabase  |   ""driver.sql_jdbc$fn__105608.invokeStatic(sql_jdbc.clj:82)""
metabase  |   ""driver.sql_jdbc$fn__105608.invoke(sql_jdbc.clj:80)""
metabase  |   ""query_processor.context$executef.invokeStatic(context.clj:60)""
metabase  |   ""query_processor.context$executef.invoke(context.clj:49)""
metabase  |   ""query_processor.context.default$default_runf.invokeStatic(default.clj:44)""
metabase  |   ""query_processor.context.default$default_runf.invoke(default.clj:42)""
metabase  |   ""query_processor.context$runf.invokeStatic(context.clj:46)""
metabase  |   ""query_processor.context$runf.invoke(context.clj:40)""
metabase  |   ""query_processor.reducible$identity_qp.invokeStatic(reducible.clj:39)""
metabase  |   ""query_processor.reducible$identity_qp.invoke(reducible.clj:36)""
metabase  |   ""query_processor.middleware.cache$maybe_return_cached_results$maybe_return_cached_results_STAR___70834.invoke(cache.clj:229)""
metabase  |   ""query_processor.middleware.permissions$check_query_permissions$fn__65043.invoke(permissions.clj:140)""
metabase  |   ""query_processor.middleware.enterprise$check_download_permissions_middleware$fn__70655.invoke(enterprise.clj:51)""
metabase  |   ""query_processor.middleware.enterprise$maybe_apply_column_level_perms_check_middleware$fn__70665.invoke(enterprise.clj:64)""
metabase  |   ""query_processor.middleware.mbql_to_native$mbql__GT_native$fn__69902.invoke(mbql_to_native.clj:24)""
metabase  |   ""query_processor$fn__71968$combined_post_process__71973$combined_post_process_STAR___71974.invoke(query_processor.clj:262)""
metabase  |   ""query_processor$fn__71968$combined_pre_process__71969$combined_pre_process_STAR___71970.invoke(query_processor.clj:259)""
metabase  |   ""query_processor.middleware.fetch_source_query$resolve_card_id_source_tables$fn__65140.invoke(fetch_source_query.clj:299)""
metabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745$fn__70749.invoke(resolve_database_and_driver.clj:77)""
metabase  |   ""driver$do_with_driver.invokeStatic(driver.clj:94)""
metabase  |   ""driver$do_with_driver.invoke(driver.clj:89)""
metabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_driver_and_database_local_values$fn__70745.invoke(resolve_database_and_driver.clj:76)""
metabase  |   ""query_processor.middleware.store$initialize_store$fn__65532$fn__65533.invoke(store.clj:14)""
metabase  |   ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:169)""
metabase  |   ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |   ""query_processor.store$do_with_metadata_provider.invokeStatic(store.clj:158)""
metabase  |   ""query_processor.store$do_with_metadata_provider.invoke(store.clj:150)""
metabase  |   ""query_processor.middleware.store$initialize_store$fn__65532.invoke(store.clj:13)""
metabase  |   ""query_processor.middleware.resolve_database_and_driver$resolve_database$fn__70742.invoke(resolve_database_and_driver.clj:60)""
metabase  |   ""query_processor.middleware.normalize_query$normalize$fn__71047.invoke(normalize_query.clj:38)""
metabase  |   ""query_processor.middleware.enterprise$fn__70682$handle_audit_app_internal_queries__70683$fn__70685.invoke(enterprise.clj:96)""
metabase  |   ""query_processor.middleware.enterprise$handle_audit_app_internal_queries_middleware$fn__70693.invoke(enterprise.clj:103)""
metabase  |   ""query_processor.middleware.constraints$mark_needs_default_userland_constraints$fn__69617.invoke(constraints.clj:102)""
metabase  |   ""query_processor.middleware.process_userland_query$process_userland_query$fn__70978.invoke(process_userland_query.clj:156)""
metabase  |   ""query_processor.middleware.catch_exceptions$catch_exceptions$fn__71568.invoke(catch_exceptions.clj:171)""
metabase  |   ""query_processor.reducible$async_qp$qp_STAR___60713$thunk__60715.invoke(reducible.clj:126)""
metabase  |   ""query_processor.reducible$async_qp$qp_STAR___60713.invoke(reducible.clj:132)""
metabase  |   ""query_processor.reducible$sync_qp$qp_STAR___60725.doInvoke(reducible.clj:153)""
metabase  |   ""query_processor$process_userland_query.invokeStatic(query_processor.clj:402)""
metabase  |   ""query_processor$process_userland_query.doInvoke(query_processor.clj:398)""
metabase  |   ""query_processor$process_query_and_save_execution_BANG_.invokeStatic(query_processor.clj:416)""
metabase  |   ""query_processor$process_query_and_save_execution_BANG_.invoke(query_processor.clj:406)""
metabase  |   ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invokeStatic(query_processor.clj:431)""
metabase  |   ""query_processor$process_query_and_save_with_max_results_constraints_BANG_.invoke(query_processor.clj:421)""
metabase  |   ""api.dataset$run_query_async$fn__93366.invoke(dataset.clj:79)""
metabase  |   ""query_processor.streaming$streaming_response_STAR_$fn__51578$fn__51580.invoke(streaming.clj:168)""
metabase  |   ""query_processor.streaming$streaming_response_STAR_$fn__51578.invoke(streaming.clj:167)""
metabase  |   ""async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)""
metabase  |   ""async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)""
metabase  |   ""async.streaming_response$do_f_async$task__42901.invoke(streaming_response.clj:88)""],
metabase  |  :card_id 170,
metabase  |  :context :ad-hoc,
metabase  |  :error ""Broken pipe"",
metabase  |  :row_count 0,
metabase  |  :running_time 0,
metabase  |  :preprocessed
metabase  |  {:type :query,
metabase  |   :database 5,
metabase  |   :query
metabase  |   {:source-card-id 170,
metabase  |    :source-metadata
metabase  |    [{:description nil,
metabase  |      :semantic_type nil,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""original_budget"",
metabase  |      :settings nil,
metabase  |      :fk_target_field_id nil,
metabase  |      :field_ref [:field 5142 {:base-type :type/Float}],
metabase  |      :effective_type :type/Float,
metabase  |      :id 5142,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""original_budget"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 2927, :nil% 0},
metabase  |       :type
metabase  |       {:type/Number
metabase  |        {:min -15000,
metabase  |         :q1 1650.862028593805,
metabase  |         :q3 42427.612653579316,
metabase  |         :max 61998921,
metabase  |         :sd 1222692.0637818938,
metabase  |         :avg 98694.22240099999}}},
metabase  |      :base_type :type/Float}
metabase  |     {:description nil,
metabase  |      :semantic_type nil,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""budget_modifications"",
metabase  |      :settings nil,
metabase  |      :fk_target_field_id nil,
metabase  |      :field_ref [:field 5143 {:base-type :type/Float}],
metabase  |      :effective_type :type/Float,
metabase  |      :id 5143,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""budget_modifications"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 5372, :nil% 0},
metabase  |       :type
metabase  |       {:type/Number
metabase  |        {:min -13961544,
metabase  |         :q1 -46696.048316343105,
metabase  |         :q3 38079.889821447665,
metabase  |         :max 7593650,
metabase  |         :sd 388669.6167360365,
metabase  |         :avg 3251.8723759999975}}},
metabase  |      :base_type :type/Float}
metabase  |     {:description nil,
metabase  |      :semantic_type nil,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""approved_change_orders"",
metabase  |      :settings nil,
metabase  |      :fk_target_field_id nil,
metabase  |      :field_ref [:field 5134 {:base-type :type/Float}],
metabase  |      :effective_type :type/Float,
metabase  |      :id 5134,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""approved_change_orders"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 112, :nil% 0.0735},
metabase  |       :type
metabase  |       {:type/Number
metabase  |        {:min -2118563,
metabase  |         :q1 -201.38202331354478,
metabase  |         :q3 191.7514213997219,
metabase  |         :max 7593650,
metabase  |         :sd 84794.24111903225,
metabase  |         :avg 1132.1864522396115}}},
metabase  |      :base_type :type/Float}
metabase  |     {:description nil,
metabase  |      :semantic_type nil,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""pending_budget_changes"",
metabase  |      :settings nil,
metabase  |      :fk_target_field_id nil,
metabase  |      :field_ref [:field 5137 {:base-type :type/Float}],
metabase  |      :effective_type :type/Float,
metabase  |      :id 5137,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""pending_budget_changes"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 2, :nil% 0},
metabase  |       :type {:type/Number {:min -3102.5, :q1 -909.0115014843832, :q3 0, :max 0, :sd 31.025, :avg -0.31025}}},
metabase  |      :base_type :type/Float}
metabase  |     {:description nil,
metabase  |      :semantic_type :type/Cost,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""committed_costs"",
metabase  |      :settings nil,
metabase  |      :fk_target_field_id nil,
metabase  |      :field_ref [:field 5138 {:base-type :type/Float}],
metabase  |      :effective_type :type/Float,
metabase  |      :id 5138,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""committed_costs"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 3608, :nil% 0},
metabase  |       :type
metabase  |       {:type/Number
metabase  |        {:min -29039.42,
metabase  |         :q1 -3164.494824706897,
metabase  |         :q3 25252.15706035909,
metabase  |         :max 4299662.6,
metabase  |         :sd 195574.55726043574,
metabase  |         :avg 52424.216188}}},
metabase  |      :base_type :type/Float}
metabase  |     {:description nil,
metabase  |      :semantic_type :type/Cost,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""cost_to_date"",
metabase  |      :settings nil,
metabase  |      :fk_target_field_id nil,
metabase  |      :field_ref [:field 5147 {:base-type :type/Float}],
metabase  |      :effective_type :type/Float,
metabase  |      :id 5147,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""cost_to_date"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 5167, :nil% 0},
metabase  |       :type
metabase  |       {:type/Number
metabase  |        {:min -73583.93,
metabase  |         :q1 -9618.972334975959,
metabase  |         :q3 30335.417426701963,
metabase  |         :max 5.321365176E7,
metabase  |         :sd 1068676.5332191263,
metabase  |         :avg 88005.01605499999}}},
metabase  |      :base_type :type/Float}
metabase  |     {:description nil,
metabase  |      :semantic_type :type/Cost,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""pending_cost_changes"",
metabase  |      :settings nil,
metabase  |      :fk_target_field_id nil,
metabase  |      :field_ref [:field 5144 {:base-type :type/Float}],
metabase  |      :effective_type :type/Float,
metabase  |      :id 5144,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""pending_cost_changes"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 15, :nil% 0},
metabase  |       :type
metabase  |       {:type/Number
metabase  |        {:min -2546,
metabase  |         :q1 -744.6993419748337,
metabase  |         :q3 282.1369614765108,
metabase  |         :max 194237.5,
metabase  |         :sd 2771.6265922608873,
metabase  |         :avg 52.010897}}},
metabase  |      :base_type :type/Float}
metabase  |     {:description nil,
metabase  |      :semantic_type :type/Source,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""source"",
metabase  |      :settings nil,
metabase  |      :fk_target_field_id nil,
metabase  |      :field_ref [:field 5140 {:base-type :type/Text}],
metabase  |      :effective_type :type/Text,
metabase  |      :id 5140,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""source"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 2, :nil% 0},
metabase  |       :type {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 7.0735}}},
metabase  |      :base_type :type/Text}
metabase  |     {:description nil,
metabase  |      :semantic_type nil,
metabase  |      :coercion_strategy nil,
metabase  |      :unit :default,
metabase  |      :name ""last_modified"",
metabase  |      :settings nil,
metabase  |      :fk_target_field_id nil,
metabase  |      :field_ref [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}],
metabase  |      :effective_type :type/DateTime,
metabase  |      :id 5145,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""last_modified"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 4890, :nil% 0},
metabase  |       :type {:type/DateTime {:earliest ""2024-01-23T18:43:06.147593Z"", :latest ""2024-02-13T15:31:25.346999Z""}}},
metabase  |      :base_type :type/DateTime}
metabase  |     {:display_name ""cost_code_type"",
metabase  |      :semantic_type :type/Category,
metabase  |      :field_ref [:field ""cost_code_type"" {:base-type :type/Text}],
metabase  |      :name ""cost_code_type"",
metabase  |      :base_type :type/Text,
metabase  |      :effective_type :type/Text,
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 1, :nil% 0},
metabase  |       :type {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 8}}}}
metabase  |     {:display_name ""revised_budget"",
metabase  |      :semantic_type nil,
metabase  |      :field_ref [:field ""revised_budget"" {:base-type :type/Float}],
metabase  |      :name ""revised_budget"",
metabase  |      :base_type :type/Float,
metabase  |      :effective_type :type/Float,
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 1, :nil% 0},
metabase  |       :type {:type/Number {:min 53132.46, :q1 53132.46, :q3 53132.46, :max 53132.46, :sd nil, :avg 53132.46}}}}
metabase  |     {:description nil,
metabase  |      :semantic_type :type/Name,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""name"",
metabase  |      :settings nil,
metabase  |      :fk_target_field_id nil,
metabase  |      :field_ref [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}],
metabase  |      :effective_type :type/Text,
metabase  |      :id 4762,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""project"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 36, :nil% 0},
metabase  |       :type
metabase  |       {:type/Text
metabase  |        {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 20.666666666666668}}},
metabase  |      :base_type :type/Text}
metabase  |     {:description nil,
metabase  |      :semantic_type nil,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""pretty_name"",
metabase  |      :settings nil,
metabase  |      :fk_target_field_id nil,
metabase  |      :field_ref [:field 4811 {:base-type :type/Text, :join-alias ""division - division_id""}],
metabase  |      :effective_type :type/Text,
metabase  |      :id 4811,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""division"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 50, :nil% 0},
metabase  |       :type {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 19.9}}},
metabase  |      :base_type :type/Text}
metabase  |     {:description nil,
metabase  |      :semantic_type :type/Category,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""pretty_name_2"",
metabase  |      :settings nil,
metabase  |      :fk_target_field_id nil,
metabase  |      :field_ref [:field 4821 {:base-type :type/Text, :join-alias ""phase - phase_id""}],
metabase  |      :effective_type :type/Text,
metabase  |      :id 4821,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""phase"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 784, :nil% 0},
metabase  |       :type
metabase  |       {:type/Text
metabase  |        {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 24.92091836734694}}},
metabase  |      :base_type :type/Text}
metabase  |     {:description nil,
metabase  |      :semantic_type :type/Category,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""label"",
metabase  |      :settings nil,
metabase  |      :fk_target_field_id nil,
metabase  |      :field_ref [:field 4806 {:base-type :type/Text, :join-alias ""cost_type - cost_type_id""}],
metabase  |      :effective_type :type/Text,
metabase  |      :id 4806,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""cost_type_label"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 29, :nil% 0},
metabase  |       :type
metabase  |       {:type/Text
metabase  |        {:percent-json 0,
metabase  |         :percent-url 0,
metabase  |         :percent-email 0,
metabase  |         :percent-state 0.103448275862069,
metabase  |         :average-length 1.6551724137931034}}},
metabase  |      :base_type :type/Text}
metabase  |     {:description nil,
metabase  |      :semantic_type :type/Name,
metabase  |      :coercion_strategy nil,
metabase  |      :name ""name_2"",
metabase  |      :settings nil,
metabase  |      :fk_target_field_id nil,
metabase  |      :field_ref [:field 4776 {:base-type :type/Text, :join-alias ""subjob""}],
metabase  |      :effective_type :type/Text,
metabase  |      :id 4776,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""subjob"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 22, :nil% 0},
metabase  |       :type
metabase  |       {:type/Text
metabase  |        {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 8.51578947368421}}},
metabase  |      :base_type :type/Text}],
metabase  |    :source-query/dataset? true,
metabase  |    :fields
metabase  |    [[:field 5142 {:base-type :type/Float}]
metabase  |     [:field 5143 {:base-type :type/Float}]
metabase  |     [:field 5134 {:base-type :type/Float}]
metabase  |     [:field 5137 {:base-type :type/Float}]
metabase  |     [:field 5138 {:base-type :type/Float}]
metabase  |     [:field 5147 {:base-type :type/Float}]
metabase  |     [:field 5144 {:base-type :type/Float}]
metabase  |     [:field 5140 {:base-type :type/Text}]
metabase  |     [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}]
metabase  |     [:field ""cost_code_type"" {:base-type :type/Text}]
metabase  |     [:field ""revised_budget"" {:base-type :type/Float}]
metabase  |     [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]
metabase  |     [:field 4811 {:base-type :type/Text, :join-alias ""division - division_id""}]
metabase  |     [:field 4821 {:base-type :type/Text, :join-alias ""phase - phase_id""}]
metabase  |     [:field 4806 {:base-type :type/Text, :join-alias ""cost_type - cost_type_id""}]
metabase  |     [:field 4776 {:base-type :type/Text, :join-alias ""subjob""}]],
metabase  |    :source-query
metabase  |    {:source-table 307,
metabase  |     :expressions
metabase  |     {""cost_code_type""
metabase  |      [:concat
metabase  |       [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]
metabase  |       [:field 4806 {:base-type :type/Text, :join-alias ""cost_type - cost_type_id""}]],
metabase  |      ""revised_budget""
metabase  |      [:+
metabase  |       [:field 5142 {:base-type :type/Float}]
metabase  |       [:field 5143 {:base-type :type/Float}]
metabase  |       [:field 5134 {:base-type :type/Float}]]},
metabase  |     :fields
metabase  |     [[:field 5142 {:base-type :type/Float}]
metabase  |      [:field 5143 {:base-type :type/Float}]
metabase  |      [:field 5134 {:base-type :type/Float}]
metabase  |      [:field 5137 {:base-type :type/Float}]
metabase  |      [:field 5138 {:base-type :type/Float}]
metabase  |      [:field 5147 {:base-type :type/Float}]
metabase  |      [:field 5144 {:base-type :type/Float}]
metabase  |      [:field 5140 {:base-type :type/Text}]
metabase  |      [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}]
metabase  |      [:expression ""cost_code_type""]
metabase  |      [:expression ""revised_budget""]
metabase  |      [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]
metabase  |      [:field 4811 {:base-type :type/Text, :join-alias ""division - division_id""}]
metabase  |      [:field 4821 {:base-type :type/Text, :join-alias ""phase - phase_id""}]
metabase  |      [:field 4806 {:base-type :type/Text, :join-alias ""cost_type - cost_type_id""}]
metabase  |      [:field 4776 {:base-type :type/Text, :join-alias ""subjob""}]],
metabase  |     :order-by
metabase  |     [[:asc [:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]]
metabase  |      [:asc [:field 4818 {:base-type :type/Text, :join-alias ""phase - phase_id""}]]
metabase  |      [:asc [:field 4806 {:base-type :type/Text, :join-alias ""cost_type - cost_type_id""}]]
metabase  |      [:asc [:field 4775 {:base-type :type/Text, :join-alias ""subjob""}]]],
metabase  |     :joins
metabase  |     [{:alias ""project - project_id"",
metabase  |       :strategy :left-join,
metabase  |       :fields [[:field 4762 {:base-type :type/Text, :join-alias ""project - project_id""}]],
metabase  |       :condition
metabase  |       [:=
metabase  |        [:field 5139 {:base-type :type/BigInteger}]
metabase  |        [:field 4761 {:base-type :type/Integer, :join-alias ""project - project_id""}]],
metabase  |       :source-table 272}
metabase  |      {:alias ""division - division_id"",
metabase  |       :strategy :left-join,
metabase  |       :fields [[:field 4811 {:base-type :type/Text, :join-alias ""division - division_id""}]],
metabase  |       :condition
metabase  |       [:=
metabase  |        [:field 5148 {:base-type :type/BigInteger}]
metabase  |        [:field 4809 {:base-type :type/Integer, :join-alias ""division - division_id""}]],
metabase  |       :source-table 279}
metabase  |      {:alias ""phase - phase_id"",
metabase  |       :strategy :left-join,
metabase  |       :fields [[:field 4821 {:base-type :type/Text, :join-alias ""phase - phase_id""}]],
metabase  |       :condition
metabase  |       [:=
metabase  |        [:field 5141 {:base-type :type/BigInteger}]
metabase  |        [:field 4816 {:base-type :type/Integer, :join-alias ""phase - phase_id""}]],
metabase  |       :source-table 282}
metabase  |      {:alias ""cost_type - cost_type_id"",
metabase  |       :strategy :left-join,
metabase  |       :fields [[:field 4806 {:base-type :type/Text, :join-alias ""cost_type - cost_type_id""}]],
metabase  |       :condition
metabase  |       [:=
metabase  |        [:field 5146 {:base-type :type/BigInteger}]
metabase  |        [:field 4805 {:base-type :type/Integer, :join-alias ""cost_type - cost_type_id""}]],
metabase  |       :source-table 274}
metabase  |      {:alias ""subjob"",
metabase  |       :strategy :left-join,
metabase  |       :fields [[:field 4776 {:base-type :type/Text, :join-alias ""subjob""}]],
metabase  |       :condition
metabase  |       [:= [:field 5135 {:base-type :type/BigInteger}] [:field 4774 {:base-type :type/Integer, :join-alias ""subjob""}]],
metabase  |       :source-table 277}]},
metabase  |    :limit 1048575,
metabase  |    :metabase.query-processor.middleware.limit/original-limit nil},
metabase  |   :middleware {:js-int-to-string? true, :add-default-userland-constraints? true},
metabase  |   :info
metabase  |   {:executed-by 9,
metabase  |    :context :ad-hoc,
metabase  |    :card-id 170,
metabase  |    :metadata/dataset-metadata
metabase  |    [{:name ""original_budget"",
metabase  |      :field_ref [:field 5142 {:base-type :type/Float}],
metabase  |      :effective_type :type/Float,
metabase  |      :id 5142,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""original_budget"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 2927, :nil% 0},
metabase  |       :type
metabase  |       {:type/Number
metabase  |        {:min -15000,
metabase  |         :q1 1650.862028593805,
metabase  |         :q3 42427.612653579316,
metabase  |         :max 61998921,
metabase  |         :sd 1222692.0637818938,
metabase  |         :avg 98694.22240099999}}},
metabase  |      :base_type :type/Float}
metabase  |     {:name ""budget_modifications"",
metabase  |      :field_ref [:field 5143 {:base-type :type/Float}],
metabase  |      :effective_type :type/Float,
metabase  |      :id 5143,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""budget_modifications"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 5372, :nil% 0},
metabase  |       :type
metabase  |       {:type/Number
metabase  |        {:min -13961544,
metabase  |         :q1 -46696.048316343105,
metabase  |         :q3 38079.889821447665,
metabase  |         :max 7593650,
metabase  |         :sd 388669.6167360365,
metabase  |         :avg 3251.8723759999975}}},
metabase  |      :base_type :type/Float}
metabase  |     {:name ""approved_change_orders"",
metabase  |      :field_ref [:field 5134 {:base-type :type/Float}],
metabase  |      :effective_type :type/Float,
metabase  |      :id 5134,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""approved_change_orders"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 112, :nil% 0.0735},
metabase  |       :type
metabase  |       {:type/Number
metabase  |        {:min -2118563,
metabase  |         :q1 -201.38202331354478,
metabase  |         :q3 191.7514213997219,
metabase  |         :max 7593650,
metabase  |         :sd 84794.24111903225,
metabase  |         :avg 1132.1864522396115}}},
metabase  |      :base_type :type/Float}
metabase  |     {:name ""pending_budget_changes"",
metabase  |      :field_ref [:field 5137 {:base-type :type/Float}],
metabase  |      :effective_type :type/Float,
metabase  |      :id 5137,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""pending_budget_changes"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 2, :nil% 0},
metabase  |       :type {:type/Number {:min -3102.5, :q1 -909.0115014843832, :q3 0, :max 0, :sd 31.025, :avg -0.31025}}},
metabase  |      :base_type :type/Float}
metabase  |     {:semantic_type :type/Cost,
metabase  |      :name ""committed_costs"",
metabase  |      :field_ref [:field 5138 {:base-type :type/Float}],
metabase  |      :effective_type :type/Float,
metabase  |      :id 5138,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""committed_costs"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 3608, :nil% 0},
metabase  |       :type
metabase  |       {:type/Number
metabase  |        {:min -29039.42,
metabase  |         :q1 -3164.494824706897,
metabase  |         :q3 25252.15706035909,
metabase  |         :max 4299662.6,
metabase  |         :sd 195574.55726043574,
metabase  |         :avg 52424.216188}}},
metabase  |      :base_type :type/Float}
metabase  |     {:semantic_type :type/Cost,
metabase  |      :name ""cost_to_date"",
metabase  |      :field_ref [:field 5147 {:base-type :type/Float}],
metabase  |      :effective_type :type/Float,
metabase  |      :id 5147,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""cost_to_date"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 5167, :nil% 0},
metabase  |       :type
metabase  |       {:type/Number
metabase  |        {:min -73583.93,
metabase  |         :q1 -9618.972334975959,
metabase  |         :q3 30335.417426701963,
metabase  |         :max 5.321365176E7,
metabase  |         :sd 1068676.5332191263,
metabase  |         :avg 88005.01605499999}}},
metabase  |      :base_type :type/Float}
metabase  |     {:semantic_type :type/Cost,
metabase  |      :name ""pending_cost_changes"",
metabase  |      :field_ref [:field 5144 {:base-type :type/Float}],
metabase  |      :effective_type :type/Float,
metabase  |      :id 5144,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""pending_cost_changes"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 15, :nil% 0},
metabase  |       :type
metabase  |       {:type/Number
metabase  |        {:min -2546,
metabase  |         :q1 -744.6993419748337,
metabase  |         :q3 282.1369614765108,
metabase  |         :max 194237.5,
metabase  |         :sd 2771.6265922608873,
metabase  |         :avg 52.010897}}},
metabase  |      :base_type :type/Float}
metabase  |     {:semantic_type :type/Source,
metabase  |      :name ""source"",
metabase  |      :field_ref [:field 5140 {:base-type :type/Text}],
metabase  |      :effective_type :type/Text,
metabase  |      :id 5140,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""source"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 2, :nil% 0},
metabase  |       :type {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 7.0735}}},
metabase  |      :base_type :type/Text}
metabase  |     {:unit :default,
metabase  |      :name ""last_modified"",
metabase  |      :field_ref [:field 5145 {:base-type :type/DateTime, :temporal-unit :default}],
metabase  |      :effective_type :type/DateTime,
metabase  |      :id 5145,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""last_modified"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 4890, :nil% 0},
metabase  |       :type {:type/DateTime {:earliest ""2024-01-23T18:43:06.147593Z"", :latest ""2024-02-13T15:31:25.346999Z""}}},
metabase  |      :base_type :type/DateTime}
metabase  |     {:display_name ""cost_code_type"",
metabase  |      :semantic_type :type/Category,
metabase  |      :field_ref [:field ""cost_code_type"" {:base-type :type/Text}],
metabase  |      :name ""cost_code_type"",
metabase  |      :base_type :type/Text,
metabase  |      :effective_type :type/Text,
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 1, :nil% 0},
metabase  |       :type {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 8}}}}
metabase  |     {:display_name ""revised_budget"",
metabase  |      :field_ref [:field ""revised_budget"" {:base-type :type/Float}],
metabase  |      :name ""revised_budget"",
metabase  |      :base_type :type/Float,
metabase  |      :effective_type :type/Float,
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 1, :nil% 0},
metabase  |       :type {:type/Number {:min 53132.46, :q1 53132.46, :q3 53132.46, :max 53132.46, :avg 53132.46}}}}
metabase  |     {:semantic_type :type/Name,
metabase  |      :name ""name"",
metabase  |      :field_ref [:field 4762 {:base-type :type/Text}],
metabase  |      :effective_type :type/Text,
metabase  |      :id 4762,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""project"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 36, :nil% 0},
metabase  |       :type
metabase  |       {:type/Text
metabase  |        {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 20.666666666666668}}},
metabase  |      :base_type :type/Text}
metabase  |     {:name ""pretty_name"",
metabase  |      :field_ref [:field 4811 {:base-type :type/Text}],
metabase  |      :effective_type :type/Text,
metabase  |      :id 4811,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""division"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 50, :nil% 0},
metabase  |       :type {:type/Text {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 19.9}}},
metabase  |      :base_type :type/Text}
metabase  |     {:semantic_type :type/Category,
metabase  |      :name ""pretty_name_2"",
metabase  |      :field_ref [:field 4821 {:base-type :type/Text}],
metabase  |      :effective_type :type/Text,
metabase  |      :id 4821,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""phase"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 784, :nil% 0},
metabase  |       :type
metabase  |       {:type/Text
metabase  |        {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 24.92091836734694}}},
metabase  |      :base_type :type/Text}
metabase  |     {:semantic_type :type/Category,
metabase  |      :name ""label"",
metabase  |      :field_ref [:field 4806 {:base-type :type/Text}],
metabase  |      :effective_type :type/Text,
metabase  |      :id 4806,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""cost_type_label"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 29, :nil% 0},
metabase  |       :type
metabase  |       {:type/Text
metabase  |        {:percent-json 0,
metabase  |         :percent-url 0,
metabase  |         :percent-email 0,
metabase  |         :percent-state 0.103448275862069,
metabase  |         :average-length 1.6551724137931034}}},
metabase  |      :base_type :type/Text}
metabase  |     {:semantic_type :type/Name,
metabase  |      :name ""name_2"",
metabase  |      :field_ref [:field 4776 {:base-type :type/Text}],
metabase  |      :effective_type :type/Text,
metabase  |      :id 4776,
metabase  |      :visibility_type :normal,
metabase  |      :display_name ""subjob"",
metabase  |      :fingerprint
metabase  |      {:global {:distinct-count 22, :nil% 0},
metabase  |       :type
metabase  |       {:type/Text
metabase  |        {:percent-json 0, :percent-url 0, :percent-email 0, :percent-state 0, :average-length 8.51578947368421}}},
metabase  |      :base_type :type/Text}]}},
metabase  |  :data {:rows [], :cols []}}
metabase  |
metabase  | 2024-02-22 00:09:30,797 ERROR async.streaming-response :: Caught unexpected Exception in streaming response body
metabase  | java.lang.NullPointerException: Deflater has been closed
metabase  |     at java.base/java.util.zip.Deflater.ensureOpen(Unknown Source)
metabase  |     at java.base/java.util.zip.Deflater.deflate(Unknown Source)
metabase  |     at java.base/java.util.zip.Deflater.deflate(Unknown Source)
metabase  |     at java.base/java.util.zip.GZIPOutputStream.finish(Unknown Source)
metabase  |     at java.base/java.util.zip.DeflaterOutputStream.close(Unknown Source)
metabase  |     at metabase.async.streaming_response$delay_output_stream$fn__42916.invoke(streaming_response.clj:121)
metabase  |     at metabase.async.streaming_response.proxy$java.io.OutputStream$ff19274a.close(Unknown Source)
metabase  |     at metabase.async.streaming_response$write_error_BANG_.invokeStatic(streaming_response.clj:58)
metabase  |     at metabase.async.streaming_response$write_error_BANG_.invoke(streaming_response.clj:46)
metabase  |     at metabase.query_processor.streaming$streaming_response_STAR_$fn__51578.invoke(streaming.clj:176)
metabase  |     at clojure.lang.AFn.applyToHelper(AFn.java:156)
metabase  |     at clojure.lang.AFn.applyTo(AFn.java:144)
metabase  |     at clojure.core$apply.invokeStatic(core.clj:667)
metabase  |     at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
metabase  |     at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
metabase  |     at clojure.lang.RestFn.applyTo(RestFn.java:142)
metabase  |     at clojure.core$apply.invokeStatic(core.clj:671)
metabase  |     at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
metabase  |     at clojure.lang.RestFn.invoke(RestFn.java:421)
metabase  |     at metabase.async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:69)
metabase  |     at metabase.async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)
metabase  |     at metabase.async.streaming_response$do_f_async$task__42901.invoke(streaming_response.clj:88)
metabase  |     at clojure.lang.AFn.run(AFn.java:22)
metabase  |     at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
metabase  |     at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
metabase  |     at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
metabase  |     at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
metabase  |     at java.base/java.lang.Thread.run(Unknown Source)
metabase  | 2024-02-22 00:09:30,841 ERROR async.streaming-response :: Error writing error to output stream {:via [{:type java.lang.NullPointerException, :message Deflater has been closed, :at [java.util.zip.Deflater ensureOpen nil -1]}], :trace [[java.util.zip.Deflater ensureOpen nil -1] [java.util.zip.Deflater deflate nil -1] [java.util.zip.Deflater deflate nil -1] [java.util.zip.GZIPOutputStream finish nil -1] [java.util.zip.DeflaterOutputStream close nil -1] [metabase.async.streaming_response$delay_output_stream$fn__42916 invoke streaming_response.clj 121] [metabase.async.streaming_response.proxy$java.io.OutputStream$ff19274a close nil -1] [metabase.async.streaming_response$write_error_BANG_ invokeStatic streaming_response.clj 58] [metabase.async.streaming_response$write_error_BANG_ invoke streaming_response.clj 46] [metabase.query_processor.streaming$streaming_response_STAR_$fn__51578 invoke streaming.clj 176] [clojure.lang.AFn applyToHelper AFn.java 156] [clojure.lang.AFn applyTo AFn.java 144] [clojure.core$apply invokeStatic core.clj 667] [clojure.core$with_bindings_STAR_ invokeStatic core.clj 1990] [clojure.core$with_bindings_STAR_ doInvoke core.clj 1990] [clojure.lang.RestFn applyTo RestFn.java 142] [clojure.core$apply invokeStatic core.clj 671] [clojure.core$bound_fn_STAR_$fn__5818 doInvoke core.clj 2020] [clojure.lang.RestFn invoke RestFn.java 421] [metabase.async.streaming_response$do_f_STAR_ invokeStatic streaming_response.clj 69] [metabase.async.streaming_response$do_f_STAR_ invoke streaming_response.clj 67] [metabase.async.streaming_response$do_f_async$task__42901 invoke streaming_response.clj 88] [clojure.lang.AFn run AFn.java 22] [java.util.concurrent.Executors$RunnableAdapter call nil -1] [java.util.concurrent.FutureTask run nil -1] [java.util.concurrent.ThreadPoolExecutor runWorker nil -1] [java.util.concurrent.ThreadPoolExecutor$Worker run nil -1] [java.lang.Thread run nil -1]], :cause Deflater has been closed, :_status 500}
metabase  | java.lang.NullPointerException: Deflater has been closed
metabase  |     at java.base/java.util.zip.Deflater.ensureOpen(Unknown Source)
metabase  |     at java.base/java.util.zip.Deflater.deflate(Unknown Source)
metabase  |     at java.base/java.util.zip.Deflater.deflate(Unknown Source)
metabase  |     at java.base/java.util.zip.GZIPOutputStream.finish(Unknown Source)
metabase  |     at java.base/java.util.zip.DeflaterOutputStream.close(Unknown Source)
metabase  |     at metabase.async.streaming_response$delay_output_stream$fn__42916.invoke(streaming_response.clj:121)
metabase  |     at metabase.async.streaming_response.proxy$java.io.OutputStream$ff19274a.close(Unknown Source)
metabase  |     at java.base/sun.nio.cs.StreamEncoder.implClose(Unknown Source)
metabase  |     at java.base/sun.nio.cs.StreamEncoder.close(Unknown Source)
metabase  |     at java.base/java.io.OutputStreamWriter.close(Unknown Source)
metabase  |     at java.base/java.io.BufferedWriter.close(Unknown Source)
metabase  |     at metabase.async.streaming_response$write_error_BANG_.invokeStatic(streaming_response.clj:61)
metabase  |     at metabase.async.streaming_response$write_error_BANG_.invoke(streaming_response.clj:46)
metabase  |     at metabase.async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:78)
metabase  |     at metabase.async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)
metabase  |     at metabase.async.streaming_response$do_f_async$task__42901.invoke(streaming_response.clj:88)
metabase  |     at clojure.lang.AFn.run(AFn.java:22)
metabase  |     at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
metabase  |     at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
metabase  |     at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
metabase  |     at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
metabase  |     at java.base/java.lang.Thread.run(Unknown Source)
metabase  | 2024-02-22 00:09:30,847 ERROR async.streaming-response :: bound-fn caught unexpected Exception
metabase  | java.lang.NullPointerException: Deflater has been closed
metabase  |     at java.base/java.util.zip.Deflater.ensureOpen(Unknown Source)
metabase  |     at java.base/java.util.zip.Deflater.deflate(Unknown Source)
metabase  |     at java.base/java.util.zip.Deflater.deflate(Unknown Source)
metabase  |     at java.base/java.util.zip.GZIPOutputStream.finish(Unknown Source)
metabase  |     at java.base/java.util.zip.DeflaterOutputStream.close(Unknown Source)
metabase  |     at metabase.async.streaming_response$delay_output_stream$fn__42916.invoke(streaming_response.clj:121)
metabase  |     at metabase.async.streaming_response.proxy$java.io.OutputStream$ff19274a.close(Unknown Source)
metabase  |     at metabase.async.streaming_response$write_error_BANG_.invokeStatic(streaming_response.clj:58)
metabase  |     at metabase.async.streaming_response$write_error_BANG_.invoke(streaming_response.clj:46)
metabase  |     at metabase.async.streaming_response$do_f_STAR_.invokeStatic(streaming_response.clj:78)
metabase  |     at metabase.async.streaming_response$do_f_STAR_.invoke(streaming_response.clj:67)
metabase  |     at metabase.async.streaming_response$do_f_async$task__42901.invoke(streaming_response.clj:88)
metabase  |     at clojure.lang.AFn.run(AFn.java:22)
metabase  |     at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
metabase  |     at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
metabase  |     at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
metabase  |     at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
metabase  |     at java.base/java.lang.Thread.run(Unknown Source)
```

ranquild on (2024-02-22 07:40:42 UTC): @MrChadMWood could you share browser logs (console logs) as well please?

MrChadMWood (Issue Creator) on (2024-02-22 14:59:28 UTC): @ranquild Yes, these stand out:

```
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4751 {:base-type :type/Float}] for field ""wbs_cost.original_budget"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4745 {:base-type :type/Float}] for field ""wbs_cost.pending_budget_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4746 {:base-type :type/Float}] for field ""wbs_cost.committed_costs"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4748 {:base-type :type/Float}] for field ""wbs_cost.approved_change_orders"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4752 {:base-type :type/Float}] for field ""wbs_cost.budget_modifications"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4753 {:base-type :type/Float}] for field ""wbs_cost.pending_cost_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4756 {:base-type :type/Float}] for field ""wbs_cost.cost_to_date"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4751 {:base-type :type/Float}] for field ""wbs_cost.original_budget"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4752 {:base-type :type/Float}] for field ""wbs_cost.budget_modifications"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4745 {:base-type :type/Float}] for field ""wbs_cost.pending_budget_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4746 {:base-type :type/Float}] for field ""wbs_cost.committed_costs"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4748 {:base-type :type/Float}] for field ""wbs_cost.approved_change_orders"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4756 {:base-type :type/Float}] for field ""wbs_cost.cost_to_date"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4753 {:base-type :type/Float}] for field ""wbs_cost.pending_cost_changes"" at [:aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:condition :=]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:fields]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:fields]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:source-query :breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:condition :=]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:source-query :breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4745 {:base-type :type/Float}] for field ""wbs_cost.pending_budget_changes"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4748 {:base-type :type/Float}] for field ""wbs_cost.approved_change_orders"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4751 {:base-type :type/Float}] for field ""wbs_cost.original_budget"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4752 {:base-type :type/Float}] for field ""wbs_cost.budget_modifications"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4746 {:base-type :type/Float}] for field ""wbs_cost.committed_costs"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:source-query :order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4753 {:base-type :type/Float}] for field ""wbs_cost.pending_cost_changes"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4756 {:base-type :type/Float}] for field ""wbs_cost.cost_to_date"" at [:source-query :aggregation :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:source-query :order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4751 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""original_budget""}] for field ""wbs_cost.original_budget"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""division_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""division_id"", :metabase.query-processor.util.add-alias-info/position 1}] for field ""wbs_cost.division_id"" at [:breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4745 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_budget_changes""}] for field ""wbs_cost.pending_budget_changes"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4746 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""committed_costs""}] for field ""wbs_cost.committed_costs"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4748 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""approved_change_orders""}] for field ""wbs_cost.approved_change_orders"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4752 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""budget_modifications""}] for field ""wbs_cost.budget_modifications"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4753 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_cost_changes""}] for field ""wbs_cost.pending_cost_changes"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4756 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""cost_to_date""}] for field ""wbs_cost.cost_to_date"" at [:aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger}] for field ""wbs_cost.project_id"" at [:fields]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""division_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""division_id"", :metabase.query-processor.util.add-alias-info/position 1}] for field ""wbs_cost.division_id"" at [:order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:condition :=]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""division_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""division_id"", :metabase.query-processor.util.add-alias-info/position 1}] for field ""wbs_cost.division_id"" at [:condition :=]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger}] for field ""wbs_cost.division_id"" at [:fields]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:source-query :breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4751 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""original_budget""}] for field ""wbs_cost.original_budget"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""division_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""division_id"", :metabase.query-processor.util.add-alias-info/position 1}] for field ""wbs_cost.division_id"" at [:source-query :breakout]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4745 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_budget_changes""}] for field ""wbs_cost.pending_budget_changes"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4746 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""committed_costs""}] for field ""wbs_cost.committed_costs"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4748 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""approved_change_orders""}] for field ""wbs_cost.approved_change_orders"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4752 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""budget_modifications""}] for field ""wbs_cost.budget_modifications"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4747 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""project_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""project_id"", :metabase.query-processor.util.add-alias-info/position 0}] for field ""wbs_cost.project_id"" at [:source-query :order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4753 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""pending_cost_changes""}] for field ""wbs_cost.pending_cost_changes"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4756 {:base-type :type/Float, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""cost_to_date""}] for field ""wbs_cost.cost_to_date"" at [:source-query :aggregation :aggregation-options :sum]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
[f813fc80-23db-477a-8fd7-1a59e35a2d41] 2024-02-22T06:58:05-08:00 WARN metabase.query-processor.middleware.fix-bad-references Bad :field clause [:field 4757 {:base-type :type/BigInteger, :metabase.query-processor.util.add-alias-info/source-table :metabase.query-processor.util.add-alias-info/source, :metabase.query-processor.util.add-alias-info/source-alias ""division_id"", :metabase.query-processor.util.add-alias-info/desired-alias ""division_id"", :metabase.query-processor.util.add-alias-info/position 1}] for field ""wbs_cost.division_id"" at [:source-query :order-by :asc]: clause should have a :join-alias. Unable to infer an appropriate join. Query may not work as expected.
```

ranquild on (2024-02-22 15:48:50 UTC): @MrChadMWood these are BE logs, not browser logs. What you see in Console in DevTools in the browser when the app crashes?

MrChadMWood (Issue Creator) on (2024-02-22 16:49:25 UTC): Sorry about that. Here you go:


#### Error 1: TypeError: e.toLowerCase is not a function
```
TypeError: e.toLowerCase is not a function
    fB metabase.util.js:21
    e metabase.lib.util.js:5
    a metabase.lib.util.js:6
    r cljs.core.js:278
    i metabase.lib.stage.js:9
    i metabase.lib.stage.js:9
    eK cljs.core.js:65
    ga cljs.core.js:256
    y cljs.core.js:38
    Fe cljs.core.js:77
[react-dom.production.min.js:209:194](webpack:///node_modules/react-dom/cjs/react-dom.production.min.js)
    React 9
    unstable_runWithPriority scheduler.production.min.js:19
    React 6
    _unlisten Router.js:109
    r createTransitionManager.js:228
    u createTransitionManager.js:83
    S AsyncUtils.js:74
    S getComponents.js:6
    S getComponents.js:30
    S AsyncUtils.js:79
    S AsyncUtils.js:78
    S getComponents.js:29
    u createTransitionManager.js:77
    r TransitionUtils.js:74
    runEnterHooks TransitionUtils.js:107
    l createTransitionManager.js:70
    l AsyncUtils.js:47
    O AsyncUtils.js:49
    r TransitionUtils.js:83
    runChangeHooks TransitionUtils.js:131
    l createTransitionManager.js:67
    c createTransitionManager.js:45
    l AsyncUtils.js:41
    O AsyncUtils.js:49
    N matchRoutes.js:231
    c createTransitionManager.js:41
    r createTransitionManager.js:222
    Redux 6
    listen useQueries.js:75
    listen useBasename.js:67
    g createHistory.js:55
    g createHistory.js:54
    M createHistory.js:119
    m createHistory.js:90
    l AsyncUtils.js:51
    loopAsync AsyncUtils.js:53
    m createHistory.js:80
    M createHistory.js:100
    replace createHistory.js:135
    replace useBasename.js:77
    replace useQueries.js:85
    Redux 4
        default
        default
        ee
        dispatch
    eG navigation.js:200
    Redux 3
        n
        ee
        dispatch
    ej ui.js:30
    Redux 2
        ee
        r
    onClick QuestionNotebookButton.jsx:27
    React 12
        A
        z
        w
        w
        ti
        tn
        to
        tp
        X
        G
        t$
        tQ
    unstable_runWithPriority scheduler.production.min.js:19
    React 3
        ir
        Y
        tU
```

#### Error 2: Error: Object
```
Error: 
Object { componentStack: ""\n    in xg\n    in div\n    in Styled(div)\n    in Unknown\n    in h\n    in Connect(h)\n    in EntityType\n    in Connect(EntityType)\n    in Unknown\n    in div\n    in Styled(div)\n    in Pq\n    in div\n    in Styled(div)\n    in div\n    in Styled(div)\n    in div\n    in Ef\n    in ExplicitSize[Ef]\n    in Unknown\n    in Unknown\n    in Title[]\n    in Title[Title[]]\n    in Favicon\n    in Connect(Favicon)\n    in b\n    in Connect(b)\n    in Unknown\n    in EntityType\n    in Connect(EntityType)\n    in Connect(EntityType)\n    in Connect(Favicon)\n    in d\n    in b\n    in Connect(b)\n    in Unknown\n    in EntityType\n    in Connect(EntityType)\n    in Connect(EntityType)\n    in Connect(Favicon)\n    in Unknown\n    in UserIsAuthenticated(Component)\n    in Connect(UserIsAuthenticated(Component))\n    in MetabaseIsSetup(Connect(UserIsAuthenticated(Component)))\n    in Connect(MetabaseIsSetup(Connect(UserIsAuthenticated(Component))))\n    in main\n    in Styled(main)\n    in div\n    in Styled(div)\n    in div\n    in Styled(div)\n    in y\n    in withRouter(y)\n    in a\n    in Unknown\n    in Connect(Component)\n    in Title[Connect(Component)]\n    in RouterContext\n    in Router\n    in d\n    in ej\n    in f\n    in @mantine/core/MantineProvider\n    in ForwardRef\n    in DragDropContextProvider\n    in lq\n    in N"" }
```

Both errors screenshot:
![image](https://github.com/metabase/metabase/assets/90083658/f0184989-6ceb-4048-bf2a-6959d2f1fd6a)

bshepherdson (Assginee) on (2024-02-22 17:53:00 UTC): Nothing obvious is jumping out at me, looking at the query compared to those warnings about the missing join aliases. It suggests that field refs from one stage and getting used in another, but it's hard to pin down which refs it's referring to.

I'll keep digging.

@MrChadMWood  The network request and response for the query might be useful too, if you can screenshot or copy-paste them in the browser DevTools. The request path would be `/api/card/$ID`.

bshepherdson (Assginee) on (2024-02-22 18:59:33 UTC): Looking at the query again, it looks like it is using bad references in the first stage, hence the warnings. (Though the message is a bit misleading, since this isn't really about join aliases per se.)

The real problem is that columns returned by the model are being referenced by their numeric IDs, which is not correct. We've been trying to fix those cases to write correct, `""field_name""`-based references instead. Even if we've fixed them all now, there are still saved questions with these bad references in them.

I think that comparing the input query with the preprocessed one will be instructive, but I have to go for a couple of hours. I'll be back looking into this issue later this afternoon.

bshepherdson (Assginee) on (2024-02-22 22:16:10 UTC): Has this model been edited to return something different? It looks like the first stage of the question itself and the last stage of the model duplicate the same set of aggregations and the breakout, but possibly with different fields? It's hard to tell when it's just field IDs. If the model was edited after this question was created, it might have ended up in a broken state like this.

@MrChadMWood Can you try to rebuild this question on top of the model and see if it works? If it does, I'd be glad to see the JSON response for its `/api/card/$ID` (if you save the question) or `/api/dataset` if not.

iethree on (2024-02-29 15:04:40 UTC): since this is on 48.6, should the milestone here be 48.8 ?

NevRA on (2024-08-23 14:44:29 UTC): If you still have this issue feel free to reopen and answer to https://github.com/metabase/metabase/issues/39037#issuecomment-1960407859

"
2147861527,issue,closed,completed,[Testing Plan] Make new native queries default to using the last-selected database,"For issue: #8780

## Dimensions
- User
    - Id (this should be a user-local setting) 
    - Permissions
        - With native write permissions
        - Without native write permissions
    - Session (should persist after logging out and logging in again)
- Database type
    - Requires an additional table to run native query
    - Runs native query without a table
- Where native query editor is instantiated from
    - SQL query
    - Model
    - Action
- Does database still exist?
    - Yes
    - No

~~- Is there a query, was query run and was it saved?~~
    - This bit is irrelevant because the action is fired upon selecting a database and has nothing to do with actually running a query

## Actions
- Starting new (SQL Question | Model | Action)
- Database gets deleted after it's persisted
- User logs out, logs in again
- User logs out, some other user logs in in the same browser
- ~~Editing previously saved (SQL Question | Model | Action)~~

## Test Cases
### Unit tests
_Will implement only backend unit tests._
- Make sure the setting can be set
- Make sure the setting can be read
- Make sure the setting is user-local only

### Integration tests
_Not going to implement these. They will require insane effort and will be almost as close as an E2E test._

### E2E tests
(Prerequisites: _set up postgres and mongo as additional databases, have at least one additional user in All users group_)
- As admin, open new native question
    - Choose a database (let's say Sample Database)
    - Navigate away from that page
    - Open new native question again
    - Make sure previously selected database is pre-selected
    - Log out
    - Log in as normal user
    - Open new native question
    - Make sure you are offered a choice of a database selection
    - Choose a different database (Mongo, for example)
    - Navigate away
    - Start new native question again
    - Make sure Mongo is the pre-selected database, and make sure the table picker is rendered
    - Log out
    - Log in as admin again
    - Start new native question
    - Make sure Sample Database is still selected for you, and not Mongo

- As admin, open new native question
    - Choose a database (let's say Postgres)
    - Go to admin settings and delete Postgres
    - Start new native question again
    - Make sure nothing breaks, and the UI prompts you to select database (Sample or Mongo)

- Make sure no redundant requests are fired when selecting the same database again

- Make sure this setting does not apply to model actions
    - Persisting a database for a native model or a native question should not influence model actions, and vice versa

- Make sure users without sufficient permissions cannot choose or persist databases they cannot query against",nemanjaglumac,2024-02-21 23:04:17+00:00,['nemanjaglumac'],2024-02-28 13:39:53+00:00,2024-02-28 13:39:53+00:00,https://github.com/metabase/metabase/issues/39035,"[('.Frontend', ''), ('.TestingStrategy/FE', ''), ('.Team/Querying', '')]",[],
2147830400,issue,open,,findColumnIndexesFromLegacyRefs doesn't handle columns with the same name,"### Describe the bug

When there are columns with the same name coming from different sources (e.g. source table and a joined table) then `findColumnIndexesFromLegacyRefs` won't match the columns correctly even if `field_ref` has the correct join alias.

### To Reproduce

1. Create native question Q1 `select ID, PRODUCT_ID, TOTAL from orders`
2. Create native question Q2 `select * from products`
3. Create GUI question Q3 based on Q1, joins Q2 on Q1.PRODUCT_ID = Q2.ID
4. Visualize the question in branch `new-table-viz-settings-2`
5. `Q2.ID` column would not be shown in the table because the corresponding table setting wasn't matched with the column

For this question
```
findColumnIndexesFromLegacyRefs(
  query,
  -1,
  data.cols,
  data.cols.map(col => col.field_ref)
);
```

doesn't match for one of the joined columns.

<img width=""954"" alt=""Screenshot 2024-02-22 at 00 39 18"" src=""https://github.com/metabase/metabase/assets/8542534/ae706304-b6c6-4794-bb6e-99b5148ad983"">

### Expected behavior

All columns should be matched given that all data here is coming from QP

### Logs

_No response_

### Information about your Metabase installation

```JSON
-
```


### Severity

P1/P2 no data shown

### Additional context

_No response_",ranquild,2024-02-21 22:36:42+00:00,['bshepherdson'],2025-02-04 20:27:14+00:00,,https://github.com/metabase/metabase/issues/39033,"[('Type:Bug', 'Product defects'), ('Priority:P3', 'Cosmetic bugs, minor bugs with a clear workaround'), ('Querying/MBQL', ''), ('.Backend', ''), ('.Team/Querying', '')]","[{'comment_id': 1960409766, 'issue_id': 2147830400, 'author': 'bshepherdson', 'body': ""Context: @ranquild lowered the priority here because he found a workaround for the worst symptoms and committed it. This should still be fixed, but it's not on fire now."", 'created_at': datetime.datetime(2024, 2, 22, 22, 17, 50, tzinfo=datetime.timezone.utc)}]","bshepherdson (Assginee) on (2024-02-22 22:17:50 UTC): Context: @ranquild lowered the priority here because he found a workaround for the worst symptoms and committed it. This should still be fixed, but it's not on fire now.

"
2147667380,issue,open,,Collapse/Expand subcollections in the sidebar,"**Is your feature request related to a problem? Please describe.**
It would be useful if we can have a button for collapsing and expanding the collection tree as admins can expand a lot of collections and then collapsing all those at the same time is time consuming

**Describe the solution you'd like**
Simple buttons to collapse or expand the collection tree

**Describe alternatives you've considered**
NA

**How important is this feature to you?**
Requested by a customer for ergonomics

**Additional context**
NA
",paoliniluis,2024-02-21 20:40:44+00:00,[],2024-02-21 20:40:45+00:00,,https://github.com/metabase/metabase/issues/39027,"[('Type:New Feature', ''), ('Organization/Collections', '')]",[],
2147603004,issue,closed,completed,BE - Rename v1 Metrics to LegacyMetrics,"We should rename the old `:model/Metric` to `:model/LegacyMetric`, `::lib.schema.metadata/metric` to `::lib.schema.metadata/legacy-metric`, `lib/metric` to `lib/legacy-metric`, etc. 

This will avoid confusion with the new V2 metrics and free up those names for V2 Metrics so we can call them ""Metrics"" instead of ""V2Metrics"" going forward.

I'm on the fence about whether we should bother to rename the API endpoints or not e.g. `POST /api/metric` becomes `POST /api/legacy-metric`, it will require FE changes but I think those are pretty small and could be done by a BE person without too much confusion. It's nice but since V2 Metrics will use the Card endpoints not a super important requirement",camsaul,2024-02-21 20:13:14+00:00,['metamben'],2024-03-20 15:03:27+00:00,2024-03-20 15:03:27+00:00,https://github.com/metabase/metabase/issues/39026,"[('Type:Tech Debt', 'or Refactoring'), ('Administration/Metrics & Segments', ''), ('.Backend', ''), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib')]","[{'comment_id': 1957837833, 'issue_id': 2147603004, 'author': 'camsaul', 'body': ""I don't think we should bother with V1 Metric `:metric` references in MBQL since it would be a huge amount of work to refactor everything to rename those clauses"", 'created_at': datetime.datetime(2024, 2, 21, 20, 19, 46, tzinfo=datetime.timezone.utc)}]","camsaul (Issue Creator) on (2024-02-21 20:19:46 UTC): I don't think we should bother with V1 Metric `:metric` references in MBQL since it would be a huge amount of work to refactor everything to rename those clauses

"
2147567685,issue,closed,completed,admin logs in the UI are hard to follow,"### Describe the bug

the logs scroll now. But they also scroll when you found interesting bits you want to watch. this is an issue to make them better with no specific dictated goal in mind except ""better"".

### To Reproduce

view the logs of an instance that has some moderate traffic.

### Expected behavior

_No response_

### Logs

_No response_

### Information about your Metabase installation

```JSON
master
```


### Severity

p2

### Additional context

_No response_",dpsutton,2024-02-21 19:55:48+00:00,['sloansparger'],2024-02-28 20:56:15+00:00,2024-02-28 20:56:15+00:00,https://github.com/metabase/metabase/issues/39025,"[('Type:Bug', 'Product defects'), ('Priority:P2', 'Average run of the mill bug'), ('Administration/Troubleshooting', ''), ('.Team/AdminWebapp', 'Admin and Webapp team')]",[],
2147559197,issue,closed,completed,BE - Support MLv2 queries end-to-end (REST API and application database),"We need to support MLv2/pMBQL queries at the REST API and application database level in order to power Metrics v2. Metrics v2 will require some changes to MBQL, and we don't want to have to backport these changes to legacy MBQL as well.

@ranquild confirmed that the FE is ready to go WRT to sending MLv2 queries over the wire without converting to legacy (and vice versa), with the exception of QP results metadata, which we should leave in legacy format for the near-term future. See https://metaboat.slack.com/archives/C051AG38B2S/p1708542180586809 for more info. 

Right now the QP supports pMBQL queries at the `qp/process-query` level -- if it sees them, it will convert them to legacy, since the QP middleware is still written for legacy at the time of this writing. So nothing needs to change in QP internals as part of this issue.

We do however need to change the various REST API endpoints to make sure they accept MLv2 queries **in addition to** legacy queries:

- ad-hoc query endpoints like `POST /api/dataset`
- endpoints for running queries saved in the app DB like `POST /api/card/:id/query` and the DashCard version
- endpoints for saving Cards like `POST /api/card` 

These endpoints should leave the MLv2 queries as-is and let the QP do whatever it wants with it. **We should start saving MLv2 queries in the application database as MLv2**, which means some code will need to be updated to be cool with this (e.g. stuff that pulls Cards out of the app to get statistics or stuff like that about them). We can either have these sorts of places convert pMBQL to legacy as needed or convert from legacy to pMBQL as needed and update them to use MLv2 instead of digging into the query manually. The latter is obviously preferrable (our ultimate goal is to use MLv2 everywhere) but it is more work and ok to punt to a later date.

- The behavior for legacy queries should remain unchanged at this point in time. 
- Endpoints that return queries should return legacy queries as legacy and MLv2 queries as MLv2
- MLv2 queries should get saved as and come out of the application database as MLv2; legacy should get saved as and come out as legacy (for the near-term, at least)

The MLv2 code used by the FE should already be smart enough to do the right thing when given either a MLv2 or legacy query. We might need to tweak the MLv2 normalization code a bit tho so a JSON-serialized MLv2 code gets deserialized correctly for use in the FE (or when coming out of the app DB) -- not sure how much needs to be done there or not; it may be worth creating a separate subissue if it turns out to be a bigger project.

We should not update the Metrics v1 and Segments v2 endpoints or related code, since these are being deprecated we can leave them as legacy-only.

",camsaul,2024-02-21 19:50:33+00:00,['camsaul'],2024-03-21 01:16:13+00:00,2024-03-21 01:16:13+00:00,https://github.com/metabase/metabase/issues/39024,"[('Misc/API', ''), ('Administration/Metrics & Segments', ''), ('.Backend', ''), ('.metabase-lib', 'Label for tracking all issues related to the shared CLJC metabase-lib')]",[],
