id,type,state,state_reason,title,body,author,created_at,assignees,updated_at,closed_at,url,labels,comments_list,comment_thread
1525834540,pull_request,closed,,[KMSv2] apiserver/kmsv2: mv Service interface into kmsv2,"Signed-off-by: Krzysztof Ostrowski <kostrows@redhat.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

Removes duplicate kms v2 service interface.

It got copied into k8s.io/kms as a first step and it is now being remove from k8s.io/apiserver (but imported).

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs
- [KEP] https://github.com/kubernetes/enhancements/tree/master/keps/sig-auth/3299-kms-v2-improvements
```
",ibihim,2023-01-09 15:37:17+00:00,"['dims', 'enj']",2023-01-17 18:10:36+00:00,2023-01-17 18:10:34+00:00,https://github.com/kubernetes/kubernetes/pull/114922,"[('area/test', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1375813839, 'issue_id': 1525834540, 'author': 'k8s-ci-robot', 'body': ""Hi @ibihim. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 9, 15, 37, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377124083, 'issue_id': 1525834540, 'author': 'enj', 'body': '/ok-to-test', 'created_at': datetime.datetime(2023, 1, 10, 11, 36, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377859965, 'issue_id': 1525834540, 'author': 'cici37', 'body': '/remove-sig api-machinery', 'created_at': datetime.datetime(2023, 1, 10, 21, 10, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379610038, 'issue_id': 1525834540, 'author': 'aramase', 'body': '/triage accepted\r\n/cc', 'created_at': datetime.datetime(2023, 1, 11, 23, 25, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1385652060, 'issue_id': 1525834540, 'author': 'enj', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 17, 16, 3, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1385652243, 'issue_id': 1525834540, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 289f4f626a7e502edfe52c06a75049330ef89a60</details>', 'created_at': datetime.datetime(2023, 1, 17, 16, 3, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1385742558, 'issue_id': 1525834540, 'author': 'dims', 'body': '/approve\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 17, 17, 3, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1385743122, 'issue_id': 1525834540, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114922#issuecomment-1385742558"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114922#issuecomment-1385652060"" title=""Approved"">enj</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114922#"" title=""Author self-approved"">ibihim</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/apiserver/pkg/server/options/encryptionconfig/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/server/options/encryptionconfig/OWNERS)~~ [dims,enj]\n- ~~[staging/src/k8s.io/apiserver/pkg/storage/value/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/storage/value/OWNERS)~~ [dims,enj]\n- ~~[staging/src/k8s.io/kms/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kms/OWNERS)~~ [dims,enj]\n- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [dims,enj]\n- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [dims]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 17, 17, 3, 28, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-09 15:37:26 UTC): Hi @ibihim. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

enj (Assginee) on (2023-01-10 11:36:31 UTC): /ok-to-test

cici37 on (2023-01-10 21:10:39 UTC): /remove-sig api-machinery

aramase on (2023-01-11 23:25:28 UTC): /triage accepted
/cc

enj (Assginee) on (2023-01-17 16:03:13 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-17 16:03:20 UTC): LGTM label has been added.  <details>Git tree hash: 289f4f626a7e502edfe52c06a75049330ef89a60</details>

dims (Assginee) on (2023-01-17 17:03:03 UTC): /approve
/lgtm

k8s-ci-robot on (2023-01-17 17:03:28 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114922#issuecomment-1385742558"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114922#issuecomment-1385652060"" title=""Approved"">enj</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114922#"" title=""Author self-approved"">ibihim</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/apiserver/pkg/server/options/encryptionconfig/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/server/options/encryptionconfig/OWNERS)~~ [dims,enj]
- ~~[staging/src/k8s.io/apiserver/pkg/storage/value/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/storage/value/OWNERS)~~ [dims,enj]
- ~~[staging/src/k8s.io/kms/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kms/OWNERS)~~ [dims,enj]
- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [dims,enj]
- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [dims]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1525802405,pull_request,closed,,upgrade etcd dependencies to v3.5.6,"#### What type of PR is this?
/kind cleanup

#### What this PR does / why we need it:
follow up of 
- https://github.com/etcd-io/etcd/pull/14489
- https://github.com/kubernetes/kubernetes/pull/114912

upgrade etcd server dependency to v3.5.6 to remove  `github.com/form3tech-oss/jwt-go`.
#### Which issue(s) this PR fixes:

Fixes None

#### Special notes for your reviewer:
/cc @dims @liggitt

#### Does this PR introduce a user-facing change?

```release-note
None
```
",pacoxu,2023-01-09 15:20:02+00:00,[],2023-01-10 21:10:57+00:00,2023-01-09 16:01:42+00:00,https://github.com/kubernetes/kubernetes/pull/114921,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('area/cloudprovider', None), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('do-not-merge/hold', 'Indicates that a PR should not merge because someone has issued a /hold command.'), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1375785280, 'issue_id': 1525802405, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114921#"" title=""Author self-approved"">pacoxu</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign dims, sttts for approval by writing `/assign @dims @sttts` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)**\n- **[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)**\n- **[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)**\n- **[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)**\n- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**\n- **[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)**\n- **[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)**\n- **[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)**\n- **[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)**\n- **[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)**\n- **[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)**\n- **[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""dims"",""sttts""]} -->', 'created_at': datetime.datetime(2023, 1, 9, 15, 20, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375845266, 'issue_id': 1525802405, 'author': 'k8s-ci-robot', 'body': '@pacoxu: The following test **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:\n\nTest name | Commit | Details | Required | Rerun command\n--- | --- | --- | --- | ---\npull-kubernetes-unit | a7f34ff8c484ad398686e47ab3582549839efbc9 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114921/pull-kubernetes-unit/1612469262176227328) | true | `/test pull-kubernetes-unit`\n\n[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114921). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3Apacoxu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).\n</details>\n<!-- test report -->', 'created_at': datetime.datetime(2023, 1, 9, 15, 53, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377860402, 'issue_id': 1525802405, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 10, 52, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-09 15:20:46 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114921#"" title=""Author self-approved"">pacoxu</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign dims, sttts for approval by writing `/assign @dims @sttts` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)**
- **[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)**
- **[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)**
- **[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)**
- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**
- **[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)**
- **[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)**
- **[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)**
- **[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)**
- **[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)**
- **[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)**
- **[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""dims"",""sttts""]} -->

k8s-ci-robot on (2023-01-09 15:53:24 UTC): @pacoxu: The following test **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:

Test name | Commit | Details | Required | Rerun command
--- | --- | --- | --- | ---
pull-kubernetes-unit | a7f34ff8c484ad398686e47ab3582549839efbc9 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114921/pull-kubernetes-unit/1612469262176227328) | true | `/test pull-kubernetes-unit`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114921). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3Apacoxu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->

cici37 on (2023-01-10 21:10:52 UTC): /triage accepted

"
1525606398,pull_request,closed,,fix: applyconfiguration-gen fails for types with non-builtin map fields,"#### What type of PR is this?

/kind bug

#### Which issue(s) this PR fixes:

Fixes kubernetes/code-generator#144

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?

```release-note
Apply configurations can be generated for types with non-builtin map fields
```",astefanutti,2023-01-09 13:34:18+00:00,"['sttts', 'stevekuznetsov', 'deads2k']",2023-02-13 14:49:33+00:00,2023-02-13 14:49:31+00:00,https://github.com/kubernetes/kubernetes/pull/114920,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('area/code-generation', ''), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1375634781, 'issue_id': 1525606398, 'author': 'k8s-ci-robot', 'body': ""Hi @astefanutti. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 9, 13, 34, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377394628, 'issue_id': 1525606398, 'author': 'stevekuznetsov', 'body': '/ok-to-test\r\n/lgtm\r\n/assign @deads2k @sttts', 'created_at': datetime.datetime(2023, 1, 10, 14, 51, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377394800, 'issue_id': 1525606398, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 297e14d549f0e613a7abe2c7df9b55d01945be48</details>', 'created_at': datetime.datetime(2023, 1, 10, 14, 51, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377530234, 'issue_id': 1525606398, 'author': 'astefanutti', 'body': '/test pull-kubernetes-e2e-kind', 'created_at': datetime.datetime(2023, 1, 10, 16, 29, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377862872, 'issue_id': 1525606398, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 12, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1427916859, 'issue_id': 1525606398, 'author': 'sttts', 'body': '/approve', 'created_at': datetime.datetime(2023, 2, 13, 13, 10, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1427917551, 'issue_id': 1525606398, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114920#"" title=""Author self-approved"">astefanutti</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114920#issuecomment-1427916859"" title=""Approved"">sttts</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [sttts]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 2, 13, 13, 10, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1428017943, 'issue_id': 1525606398, 'author': 'astefanutti', 'body': '/test pull-kubernetes-node-e2e-containerd', 'created_at': datetime.datetime(2023, 2, 13, 14, 19, 15, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-09 13:34:28 UTC): Hi @astefanutti. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

stevekuznetsov (Assginee) on (2023-01-10 14:51:33 UTC): /ok-to-test
/lgtm
/assign @deads2k @sttts

k8s-ci-robot on (2023-01-10 14:51:41 UTC): LGTM label has been added.  <details>Git tree hash: 297e14d549f0e613a7abe2c7df9b55d01945be48</details>

astefanutti (Issue Creator) on (2023-01-10 16:29:47 UTC): /test pull-kubernetes-e2e-kind

cici37 on (2023-01-10 21:12:02 UTC): /triage accepted

sttts (Assginee) on (2023-02-13 13:10:05 UTC): /approve

k8s-ci-robot on (2023-02-13 13:10:30 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114920#"" title=""Author self-approved"">astefanutti</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114920#issuecomment-1427916859"" title=""Approved"">sttts</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [sttts]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

astefanutti (Issue Creator) on (2023-02-13 14:19:15 UTC): /test pull-kubernetes-node-e2e-containerd

"
1525520083,pull_request,closed,,Reduce simultaneous calls to quota queries,"#### What type of PR is this?
/kind bug
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
Use singleflight to avoid throttling if there are multiple quota queries at the same time and cache has just expired.
#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Follows https://github.com/kubernetes/kubernetes/pull/112696
Fixes https://github.com/kubernetes/kubernetes/issues/22422

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
None.
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",DrAuYueng,2023-01-09 12:37:38+00:00,"['liggitt', 'aojea']",2024-03-29 18:52:08+00:00,2024-03-29 18:52:07+00:00,https://github.com/kubernetes/kubernetes/pull/114919,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('area/apiserver', None), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('lifecycle/rotten', 'Denotes an issue or PR that has aged beyond stale and will be auto-closed.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1375566047, 'issue_id': 1525520083, 'author': 'k8s-ci-robot', 'body': ""Hi @DrAuYueng. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 9, 12, 37, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377867920, 'issue_id': 1525520083, 'author': 'cici37', 'body': '/assign @liggitt @aojea \r\n/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 14, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1400327356, 'issue_id': 1525520083, 'author': 'DrAuYueng', 'body': '@liggitt @aojea Please take a moment to review the code, thanks.', 'created_at': datetime.datetime(2023, 1, 23, 13, 19, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1588509175, 'issue_id': 1525520083, 'author': 'moficodes', 'body': '@aojea @liggitt \r\n\r\n1.28 Bug Triage Shadow here.\r\n\r\nJust checking-in, if this is still on track for the 1.28 release?', 'created_at': datetime.datetime(2023, 6, 13, 4, 25, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 1625260949, 'issue_id': 1525520083, 'author': 'furkatgofurov7', 'body': ""@DrAuYueng hey, Bug Triage Team here!\r\n\r\nCan you please label it with kind and priority? Also, this PR has not been updated for long time, so I'd like to check what's the status and if there are plans moving it forward.\r\n\r\nPlease be aware that the code freeze is starting [01:00 UTC Wednesday 19th July 2023 / 18:00 PDT Tuesday 18th July 2023](https://everytimezone.com/s/72ee8496) (about less than 2 weeks from now).\r\n\r\nAs the PR is tagged for 1.28, is it still planned for this release?"", 'created_at': datetime.datetime(2023, 7, 7, 11, 18, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1626463023, 'issue_id': 1525520083, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114919#"" title=""Author self-approved"">DrAuYueng</a>*\n**Once this PR has been reviewed and has the lgtm label**, please ask for approval from [liggitt](https://github.com/liggitt). For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""liggitt""]} -->', 'created_at': datetime.datetime(2023, 7, 8, 2, 6, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1626482473, 'issue_id': 1525520083, 'author': 'DrAuYueng', 'body': 'Rebased.', 'created_at': datetime.datetime(2023, 7, 8, 2, 16, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1632784930, 'issue_id': 1525520083, 'author': 'moficodes', 'body': 'Week 9 update: Code Freeze is approaching!\r\n\r\nHey! We are currently in Week 9, and Code Freeze is just over a week away. It will begin at 01:00 UTC on Wednesday, 19th July 2023 / 18:00 PDT on Tuesday, 18th July 2023. Please ensure all necessary submissions are made before the deadline. Let me know if you need any assistance. :)', 'created_at': datetime.datetime(2023, 7, 12, 15, 46, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1666970700, 'issue_id': 1525520083, 'author': 'aojea', 'body': '/ok-to-test', 'created_at': datetime.datetime(2023, 8, 6, 21, 22, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1715696032, 'issue_id': 1525520083, 'author': 'DrAuYueng', 'body': '/kind bug', 'created_at': datetime.datetime(2023, 9, 12, 13, 9, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 1902627587, 'issue_id': 1525520083, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 1, 21, 13, 20, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1969576346, 'issue_id': 1525520083, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle rotten\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 2, 28, 18, 19, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 2027604324, 'issue_id': 1525520083, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 3, 29, 18, 52, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2027604418, 'issue_id': 1525520083, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114919#issuecomment-2027604324):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 3, 29, 18, 52, 8, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-09 12:37:51 UTC): Hi @DrAuYueng. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

cici37 on (2023-01-10 21:14:50 UTC): /assign @liggitt @aojea 
/triage accepted

DrAuYueng (Issue Creator) on (2023-01-23 13:19:13 UTC): @liggitt @aojea Please take a moment to review the code, thanks.

moficodes on (2023-06-13 04:25:37 UTC): @aojea @liggitt 

1.28 Bug Triage Shadow here.

Just checking-in, if this is still on track for the 1.28 release?

furkatgofurov7 on (2023-07-07 11:18:04 UTC): @DrAuYueng hey, Bug Triage Team here!

Can you please label it with kind and priority? Also, this PR has not been updated for long time, so I'd like to check what's the status and if there are plans moving it forward.

Please be aware that the code freeze is starting [01:00 UTC Wednesday 19th July 2023 / 18:00 PDT Tuesday 18th July 2023](https://everytimezone.com/s/72ee8496) (about less than 2 weeks from now).

As the PR is tagged for 1.28, is it still planned for this release?

k8s-ci-robot on (2023-07-08 02:06:41 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114919#"" title=""Author self-approved"">DrAuYueng</a>*
**Once this PR has been reviewed and has the lgtm label**, please ask for approval from [liggitt](https://github.com/liggitt). For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""liggitt""]} -->

DrAuYueng (Issue Creator) on (2023-07-08 02:16:26 UTC): Rebased.

moficodes on (2023-07-12 15:46:24 UTC): Week 9 update: Code Freeze is approaching!

Hey! We are currently in Week 9, and Code Freeze is just over a week away. It will begin at 01:00 UTC on Wednesday, 19th July 2023 / 18:00 PDT on Tuesday, 18th July 2023. Please ensure all necessary submissions are made before the deadline. Let me know if you need any assistance. :)

aojea (Assginee) on (2023-08-06 21:22:43 UTC): /ok-to-test

DrAuYueng (Issue Creator) on (2023-09-12 13:09:37 UTC): /kind bug

k8s-triage-robot on (2024-01-21 13:20:56 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2024-02-28 18:19:58 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle rotten

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2024-03-29 18:52:03 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2024-03-29 18:52:08 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114919#issuecomment-2027604324):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1525440966,pull_request,closed,,Migrating `pkg/controller/serviceaccount` to contextual logging,"Signed-off-by: Naman <namanlakhwani@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind feature
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
Use contextual logging for `pkg/controller/serviceaccount`
#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Part of https://github.com/kubernetes/enhancements/issues/3077

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Migrated the service-account controller (within `kube-controller-manager`) to use [contextual logging](https://k8s.io/docs/concepts/cluster-administration/system-logs/#contextual-logging).
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs
- [KEP]: https://github.com/kubernetes/enhancements/tree/master/keps/sig-instrumentation/3077-contextual-logging
```

/wg structured-logging
/area logging
/assign @pohly",Namanl2001,2023-01-09 11:54:00+00:00,"['pohly', 'soltysh']",2023-03-13 22:50:43+00:00,2023-03-07 12:20:00+00:00,https://github.com/kubernetes/kubernetes/pull/114918,"[('area/test', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/logging', None), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/instrumentation', 'Categorizes an issue or PR as relevant to SIG Instrumentation.'), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('tide/merge-method-squash', 'Denotes a PR that should be squashed by tide when it merges.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.'), ('wg/structured-logging', 'Categorizes an issue or PR as relevant to WG Structured Logging.')]","[{'comment_id': 1375692192, 'issue_id': 1525440966, 'author': 'yangjunmyfm192085', 'body': '/sig instrumentation', 'created_at': datetime.datetime(2023, 1, 9, 14, 18, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377869169, 'issue_id': 1525440966, 'author': 'cici37', 'body': '/remove-sig api-machinery', 'created_at': datetime.datetime(2023, 1, 10, 21, 15, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380767512, 'issue_id': 1525440966, 'author': 'logicalhan', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 12, 17, 35, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1435100400, 'issue_id': 1525440966, 'author': 'Namanl2001', 'body': 'Thanks @pohly for the detailed review, addressed all comments.', 'created_at': datetime.datetime(2023, 2, 17, 18, 55, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1435926658, 'issue_id': 1525440966, 'author': 'pohly', 'body': '@Namanl2001 : please check and fix the error in https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114918/pull-kubernetes-verify/1626656596278906880', 'created_at': datetime.datetime(2023, 2, 19, 8, 40, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1438219964, 'issue_id': 1525440966, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 59cde6c0a6ec57643c993d35c45097addaf91da7</details>', 'created_at': datetime.datetime(2023, 2, 21, 10, 20, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1439751147, 'issue_id': 1525440966, 'author': 'pohly', 'body': '/assign @soltysh \r\n\r\nFor approval.', 'created_at': datetime.datetime(2023, 2, 22, 10, 12, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1457701245, 'issue_id': 1525440966, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114918#"" title=""Author self-approved"">Namanl2001</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114918#pullrequestreview-1307122084"" title=""LGTM"">pohly</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114918#pullrequestreview-1327809524"" title=""Approved"">soltysh</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[cmd/kube-controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-controller-manager/OWNERS)~~ [soltysh]\n- ~~[pkg/controller/serviceaccount/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/serviceaccount/OWNERS)~~ [soltysh]\n- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [pohly,soltysh]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 3, 7, 7, 46, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1457701364, 'issue_id': 1525440966, 'author': 'soltysh', 'body': '/triage accepted\r\n/priority important-longterm', 'created_at': datetime.datetime(2023, 3, 7, 7, 46, 27, tzinfo=datetime.timezone.utc)}]","yangjunmyfm192085 on (2023-01-09 14:18:03 UTC): /sig instrumentation

cici37 on (2023-01-10 21:15:28 UTC): /remove-sig api-machinery

logicalhan on (2023-01-12 17:35:26 UTC): /triage accepted

Namanl2001 (Issue Creator) on (2023-02-17 18:55:57 UTC): Thanks @pohly for the detailed review, addressed all comments.

pohly (Assginee) on (2023-02-19 08:40:03 UTC): @Namanl2001 : please check and fix the error in https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114918/pull-kubernetes-verify/1626656596278906880

k8s-ci-robot on (2023-02-21 10:20:20 UTC): LGTM label has been added.  <details>Git tree hash: 59cde6c0a6ec57643c993d35c45097addaf91da7</details>

pohly (Assginee) on (2023-02-22 10:12:05 UTC): /assign @soltysh 

For approval.

k8s-ci-robot on (2023-03-07 07:46:21 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114918#"" title=""Author self-approved"">Namanl2001</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114918#pullrequestreview-1307122084"" title=""LGTM"">pohly</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114918#pullrequestreview-1327809524"" title=""Approved"">soltysh</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[cmd/kube-controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-controller-manager/OWNERS)~~ [soltysh]
- ~~[pkg/controller/serviceaccount/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/serviceaccount/OWNERS)~~ [soltysh]
- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [pohly,soltysh]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

soltysh (Assginee) on (2023-03-07 07:46:27 UTC): /triage accepted
/priority important-longterm

"
1525377483,pull_request,closed,,api: rename internal struct core.ResourceClaim -> ResourceAttachment,"#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

This avoids confusion between resource.Claim and
core.ResourceClaim. ResourceAttachment is a better name because it describes what the struct does (""attach a pod resource to a container"").

#### Which issue(s) this PR fixes:

Fixes #113771 

The issue also mentions renaming types like `ResourceClassParametersReference` to `ResourceClassParametersRef`, but that would make them inconsistent with other reference types and therefore I propose that we keep those names.

#### Special notes for your reviewer:

This struct is only used inside Go code, therefore this is not an API change. YAML files work as they did before.

#### Does this PR introduce a user-facing change?
```release-note
k8s.io/api/core/v1: the Go API now uses `ResourceAttachment` as type name instead of `ResourceClaim`.
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

```docs
- [KEP]: https://github.com/kubernetes/enhancements/issues/3063
```
",pohly,2023-01-09 11:11:48+00:00,"['klueska', 'bart0sh']",2023-02-10 14:39:04+00:00,2023-02-10 14:39:01+00:00,https://github.com/kubernetes/kubernetes/pull/114917,"[('area/test', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('kind/api-change', 'Categorizes issue or PR as related to adding, removing, or otherwise changing an API'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/instrumentation', 'Categorizes an issue or PR as relevant to SIG Instrumentation.'), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('area/code-generation', ''), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.'), ('wg/structured-logging', 'Categorizes an issue or PR as relevant to WG Structured Logging.')]","[{'comment_id': 1375458633, 'issue_id': 1525377483, 'author': 'pohly', 'body': '/sig node', 'created_at': datetime.datetime(2023, 1, 9, 11, 12, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375505073, 'issue_id': 1525377483, 'author': 'k8s-triage-robot', 'body': 'This PR [may require API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#what-apis-need-to-be-reviewed).\n\nIf so, when the changes are ready, [complete the pre-review checklist and request an API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#mechanics).\n\nStatus of requested reviews is tracked in the [API Review project](https://github.com/orgs/kubernetes/projects/13).', 'created_at': datetime.datetime(2023, 1, 9, 11, 45, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376190817, 'issue_id': 1525377483, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114917#"" title=""Author self-approved"">pohly</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign liggitt for approval by writing `/assign @liggitt` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/api/OWNERS)**\n- **[pkg/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/api/OWNERS)**\n- **[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)**\n- **[pkg/generated/openapi/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/generated/openapi/OWNERS)**\n- **[staging/src/k8s.io/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api/OWNERS)**\n- **[staging/src/k8s.io/client-go/applyconfigurations/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/applyconfigurations/OWNERS)**\n- ~~[test/e2e/dra/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/dra/OWNERS)~~ [pohly]\n- ~~[test/integration/logs/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/integration/logs/OWNERS)~~ [pohly]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""liggitt""]} -->', 'created_at': datetime.datetime(2023, 1, 9, 19, 47, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377459210, 'issue_id': 1525377483, 'author': 'pohly', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 10, 15, 38, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377871807, 'issue_id': 1525377483, 'author': 'cici37', 'body': '/remove-sig api-machinery', 'created_at': datetime.datetime(2023, 1, 10, 21, 16, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378323411, 'issue_id': 1525377483, 'author': 'bart0sh', 'body': '/triage accepted\r\n/priority important-longterm\r\n/retest', 'created_at': datetime.datetime(2023, 1, 11, 7, 10, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378323965, 'issue_id': 1525377483, 'author': 'bart0sh', 'body': '/assign\r\n/assign @klueska', 'created_at': datetime.datetime(2023, 1, 11, 7, 11, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378714299, 'issue_id': 1525377483, 'author': 'klueska', 'body': 'As mentioned in the linked issue, I would prefer `ResourceClaimAttachment` over just `ResourceAttachment`. That said, the word ""attachment"" sounds a little awkward to me. Is there precedent for such a name in the storage world, or is this something new you came up with?', 'created_at': datetime.datetime(2023, 1, 11, 13, 1, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378741099, 'issue_id': 1525377483, 'author': 'pohly', 'body': 'ResourceClaimAttachment seems unnecessarily long to me, but I don\'t care too much.\r\n\r\nVolumes are ""attached"" to nodes, and there is a storage.VolumeAttachment type. I think originally the proposal came from thockin, though, so I don\'t know whether that is what he had in mind.', 'created_at': datetime.datetime(2023, 1, 11, 13, 18, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378744015, 'issue_id': 1525377483, 'author': 'pohly', 'body': ""The directly corresponding type in the v1 API is [`VolumeMount`](https://pkg.go.dev/k8s.io/api/core/v1#VolumeMount). But resource claims don't get mounted..."", 'created_at': datetime.datetime(2023, 1, 11, 13, 20, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378744884, 'issue_id': 1525377483, 'author': 'klueska', 'body': 'Can you show an example of how this would be used in go code? Maybe that would help with deciding which name makes the most sense.', 'created_at': datetime.datetime(2023, 1, 11, 13, 21, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378801989, 'issue_id': 1525377483, 'author': 'pohly', 'body': ""I don't think it'll be used much in Go code. In Kubernetes, it's used when constructing a pod, for example in https://github.com/kubernetes/kubernetes/pull/114917/files#diff-7ee023b4401073292170227985c8ac98015db0c1980657c277a7cea011c24830"", 'created_at': datetime.datetime(2023, 1, 11, 14, 4, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378804233, 'issue_id': 1525377483, 'author': 'klueska', 'body': ""OK. Then I don't have a strong opinion. `ResourceAttachment` is probably fine."", 'created_at': datetime.datetime(2023, 1, 11, 14, 6, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378997562, 'issue_id': 1525377483, 'author': 'pohly', 'body': 'Is that an LGTM?', 'created_at': datetime.datetime(2023, 1, 11, 15, 48, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1382749519, 'issue_id': 1525377483, 'author': 'bart0sh', 'body': '`ResourceAttachment` name is still confusing to me, especially in the changes like this:\r\n```\r\n-\t\t\t\t\t\t\tClaims: []api.ResourceClaim{{Name: ""my-claim""}},\r\n+\t\t\t\t\t\t\tClaims: []api.ResourceAttachment{{Name: ""my-claim""}},\r\n```\r\nSo, ResourceAttachment is still a claim, but we want to call it \'attachment\', correct?', 'created_at': datetime.datetime(2023, 1, 14, 14, 7, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1382848130, 'issue_id': 1525377483, 'author': 'pohly', 'body': 'We want to ""attach"" a pod resource to a container. For volumes, the corresponding operation is ""mount a volume"".\r\n\r\nThe ""pod resource"" itself is a reference to a resource claim.\r\n\r\nIf there ever are other kinds of pod resources, `ResourceAttachment` as a name still works. It\'s not likely, but that it could be done without changing the name IMHO implies that adding `Claim` to it as in `ResourceClaimAttachement` is unnecessarily specific.', 'created_at': datetime.datetime(2023, 1, 14, 16, 37, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1382883112, 'issue_id': 1525377483, 'author': 'bart0sh', 'body': 'It still looks to me like we\'re creating a new confusion to avoid another confusion. Again, I think this is confusing:\r\n```\r\nClaims: []api.ResourceAttachment{{Name: ""my-claim""}},\r\n```\r\nWe put `ResourceAttachement` object into the `Claims` field and name it `my-claim`. Why to call it attachement then?', 'created_at': datetime.datetime(2023, 1, 14, 18, 35, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1383090701, 'issue_id': 1525377483, 'author': 'pohly', 'body': 'That it\'s used for `Claims` refutes my argument that it could be generic resource in the future.\r\n\r\nSo let\'s use `Claims: []api.ResourceClaimAttachment{{Name: ""my-claim""}}` after all? Or do you have some other suggestion?', 'created_at': datetime.datetime(2023, 1, 15, 8, 41, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1383131215, 'issue_id': 1525377483, 'author': 'bart0sh', 'body': ""ResourceClaimAttachment looks better to me. However, I must note that I probably don't fully understand a confusion between resource.Claim and core.ResourceClaim. Let's discuss this offline."", 'created_at': datetime.datetime(2023, 1, 15, 11, 58, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1425534338, 'issue_id': 1525377483, 'author': 'bart0sh', 'body': '@pohly so, where we are with this?', 'created_at': datetime.datetime(2023, 2, 10, 9, 51, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1425569956, 'issue_id': 1525377483, 'author': 'pohly', 'body': 'I think I need to change to `api.ResourceClaimAttachment` as there have been no other suggestions.', 'created_at': datetime.datetime(2023, 2, 10, 10, 18, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1425572148, 'issue_id': 1525377483, 'author': 'bart0sh', 'body': 'Another option was not to rename as far as I remember.', 'created_at': datetime.datetime(2023, 2, 10, 10, 20, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1425882496, 'issue_id': 1525377483, 'author': 'pohly', 'body': '@klueska: what do you prefer?', 'created_at': datetime.datetime(2023, 2, 10, 14, 25, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1425884029, 'issue_id': 1525377483, 'author': 'pohly', 'body': 'Looking at the issue, doing nothing was indeed our conclusion: https://github.com/kubernetes/kubernetes/issues/113771#issuecomment-1383854599', 'created_at': datetime.datetime(2023, 2, 10, 14, 26, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1425899195, 'issue_id': 1525377483, 'author': 'pohly', 'body': ""/close\r\n\r\nI'll reopen if this is needed after all."", 'created_at': datetime.datetime(2023, 2, 10, 14, 38, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1425899315, 'issue_id': 1525377483, 'author': 'k8s-ci-robot', 'body': ""@pohly: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114917#issuecomment-1425899195):\n\n>/close\r\n>\r\n>I'll reopen if this is needed after all.\r\n>\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 2, 10, 14, 39, 2, tzinfo=datetime.timezone.utc)}]","pohly (Issue Creator) on (2023-01-09 11:12:34 UTC): /sig node

k8s-triage-robot on (2023-01-09 11:45:21 UTC): This PR [may require API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#what-apis-need-to-be-reviewed).

If so, when the changes are ready, [complete the pre-review checklist and request an API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#mechanics).

Status of requested reviews is tracked in the [API Review project](https://github.com/orgs/kubernetes/projects/13).

k8s-ci-robot on (2023-01-09 19:47:15 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114917#"" title=""Author self-approved"">pohly</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign liggitt for approval by writing `/assign @liggitt` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/api/OWNERS)**
- **[pkg/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/api/OWNERS)**
- **[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)**
- **[pkg/generated/openapi/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/generated/openapi/OWNERS)**
- **[staging/src/k8s.io/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api/OWNERS)**
- **[staging/src/k8s.io/client-go/applyconfigurations/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/applyconfigurations/OWNERS)**
- ~~[test/e2e/dra/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/dra/OWNERS)~~ [pohly]
- ~~[test/integration/logs/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/integration/logs/OWNERS)~~ [pohly]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""liggitt""]} -->

pohly (Issue Creator) on (2023-01-10 15:38:53 UTC): /retest

cici37 on (2023-01-10 21:16:53 UTC): /remove-sig api-machinery

bart0sh (Assginee) on (2023-01-11 07:10:24 UTC): /triage accepted
/priority important-longterm
/retest

bart0sh (Assginee) on (2023-01-11 07:11:05 UTC): /assign
/assign @klueska

klueska (Assginee) on (2023-01-11 13:01:27 UTC): As mentioned in the linked issue, I would prefer `ResourceClaimAttachment` over just `ResourceAttachment`. That said, the word ""attachment"" sounds a little awkward to me. Is there precedent for such a name in the storage world, or is this something new you came up with?

pohly (Issue Creator) on (2023-01-11 13:18:44 UTC): ResourceClaimAttachment seems unnecessarily long to me, but I don't care too much.

Volumes are ""attached"" to nodes, and there is a storage.VolumeAttachment type. I think originally the proposal came from thockin, though, so I don't know whether that is what he had in mind.

pohly (Issue Creator) on (2023-01-11 13:20:49 UTC): The directly corresponding type in the v1 API is [`VolumeMount`](https://pkg.go.dev/k8s.io/api/core/v1#VolumeMount). But resource claims don't get mounted...

klueska (Assginee) on (2023-01-11 13:21:29 UTC): Can you show an example of how this would be used in go code? Maybe that would help with deciding which name makes the most sense.

pohly (Issue Creator) on (2023-01-11 14:04:59 UTC): I don't think it'll be used much in Go code. In Kubernetes, it's used when constructing a pod, for example in https://github.com/kubernetes/kubernetes/pull/114917/files#diff-7ee023b4401073292170227985c8ac98015db0c1980657c277a7cea011c24830

klueska (Assginee) on (2023-01-11 14:06:27 UTC): OK. Then I don't have a strong opinion. `ResourceAttachment` is probably fine.

pohly (Issue Creator) on (2023-01-11 15:48:51 UTC): Is that an LGTM?

bart0sh (Assginee) on (2023-01-14 14:07:59 UTC): `ResourceAttachment` name is still confusing to me, especially in the changes like this:
```
-							Claims: []api.ResourceClaim{{Name: ""my-claim""}},
+							Claims: []api.ResourceAttachment{{Name: ""my-claim""}},
```
So, ResourceAttachment is still a claim, but we want to call it 'attachment', correct?

pohly (Issue Creator) on (2023-01-14 16:37:04 UTC): We want to ""attach"" a pod resource to a container. For volumes, the corresponding operation is ""mount a volume"".

The ""pod resource"" itself is a reference to a resource claim.

If there ever are other kinds of pod resources, `ResourceAttachment` as a name still works. It's not likely, but that it could be done without changing the name IMHO implies that adding `Claim` to it as in `ResourceClaimAttachement` is unnecessarily specific.

bart0sh (Assginee) on (2023-01-14 18:35:48 UTC): It still looks to me like we're creating a new confusion to avoid another confusion. Again, I think this is confusing:
```
Claims: []api.ResourceAttachment{{Name: ""my-claim""}},
```
We put `ResourceAttachement` object into the `Claims` field and name it `my-claim`. Why to call it attachement then?

pohly (Issue Creator) on (2023-01-15 08:41:47 UTC): That it's used for `Claims` refutes my argument that it could be generic resource in the future.

So let's use `Claims: []api.ResourceClaimAttachment{{Name: ""my-claim""}}` after all? Or do you have some other suggestion?

bart0sh (Assginee) on (2023-01-15 11:58:30 UTC): ResourceClaimAttachment looks better to me. However, I must note that I probably don't fully understand a confusion between resource.Claim and core.ResourceClaim. Let's discuss this offline.

bart0sh (Assginee) on (2023-02-10 09:51:51 UTC): @pohly so, where we are with this?

pohly (Issue Creator) on (2023-02-10 10:18:23 UTC): I think I need to change to `api.ResourceClaimAttachment` as there have been no other suggestions.

bart0sh (Assginee) on (2023-02-10 10:20:09 UTC): Another option was not to rename as far as I remember.

pohly (Issue Creator) on (2023-02-10 14:25:24 UTC): @klueska: what do you prefer?

pohly (Issue Creator) on (2023-02-10 14:26:40 UTC): Looking at the issue, doing nothing was indeed our conclusion: https://github.com/kubernetes/kubernetes/issues/113771#issuecomment-1383854599

pohly (Issue Creator) on (2023-02-10 14:38:56 UTC): /close

I'll reopen if this is needed after all.

k8s-ci-robot on (2023-02-10 14:39:02 UTC): @pohly: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114917#issuecomment-1425899195):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1525268102,pull_request,closed,,test images: Update CudaVectorAdd test image to support arm64,"tested on arm64/amd64

Signed-off-by: briwan01 <Brian.Wang@arm.com>

What type of PR is this?
/sig-testing

What this PR does / why we need it:
This PR update CudaVectorAdd test image to support arm64

Build:
 $make all WHAT=cuda-vector-add
There is a detailed log in the build process of cuda-vector-add. [cuda_vector_add_build_image.txt](https://github.com/kubernetes/kubernetes/files/10380328/cuda_vector_add_build_image.txt)

The results are as followed:
registry.k8s.io/e2e-test-images/cuda-vector-add   2.2-linux-ppc64le                                9dd5d7c994ba   16 minutes ago   5.18GB
registry.k8s.io/e2e-test-images/cuda-vector-add   2.2-linux-arm64                                  172ebac45e7c   22 minutes ago   4.98GB
registry.k8s.io/e2e-test-images/cuda-vector-add   2.2-linux-amd64                                  4c3ff3bcf0d7   26 minutes ago   5.02GB
",brianwang12,2023-01-09 10:03:08+00:00,['mkumatag'],2023-01-20 04:30:17+00:00,2023-01-20 04:30:15+00:00,https://github.com/kubernetes/kubernetes/pull/114915,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('area/test', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1375364966, 'issue_id': 1525268102, 'author': 'k8s-ci-robot', 'body': '@brianwang12: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 9, 10, 3, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375364988, 'issue_id': 1525268102, 'author': 'k8s-ci-robot', 'body': ""Hi @brianwang12. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 9, 10, 3, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376631905, 'issue_id': 1525268102, 'author': 'chendave', 'body': '/ok-to-test\r\n/release-note none', 'created_at': datetime.datetime(2023, 1, 10, 2, 16, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376632643, 'issue_id': 1525268102, 'author': 'chendave', 'body': '/release-note-none\r\n\r\nif you need to add release note, pls edit it by yourself.', 'created_at': datetime.datetime(2023, 1, 10, 2, 17, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387122513, 'issue_id': 1525268102, 'author': 'dims', 'body': '@brianwang12 please update [VERSION](https://github.com/kubernetes/kubernetes/blob/master/test/images/cuda-vector-add/VERSION) file.', 'created_at': datetime.datetime(2023, 1, 18, 14, 2, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396357926, 'issue_id': 1525268102, 'author': 'brianwang12', 'body': '> @brianwang12 please update [VERSION](https://github.com/kubernetes/kubernetes/blob/master/test/images/cuda-vector-add/VERSION) file.\r\n\r\nThanks for your reply, I updated the version from 2.2 to 2.3', 'created_at': datetime.datetime(2023, 1, 19, 2, 20, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1397880139, 'issue_id': 1525268102, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: fea4e3014a3068490339b909454146cfe9c0d9f2</details>', 'created_at': datetime.datetime(2023, 1, 20, 3, 24, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1397880239, 'issue_id': 1525268102, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114915#"" title=""Author self-approved"">brianwang12</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114915#pullrequestreview-1262928520"" title=""LGTM"">mkumatag</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[test/images/cuda-vector-add/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/images/cuda-vector-add/OWNERS)~~ [mkumatag]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 20, 3, 25, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-09 10:03:16 UTC): @brianwang12: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-09 10:03:17 UTC): Hi @brianwang12. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

chendave on (2023-01-10 02:16:31 UTC): /ok-to-test
/release-note none

chendave on (2023-01-10 02:17:38 UTC): /release-note-none

if you need to add release note, pls edit it by yourself.

dims on (2023-01-18 14:02:23 UTC): @brianwang12 please update [VERSION](https://github.com/kubernetes/kubernetes/blob/master/test/images/cuda-vector-add/VERSION) file.

brianwang12 (Issue Creator) on (2023-01-19 02:20:28 UTC): Thanks for your reply, I updated the version from 2.2 to 2.3

k8s-ci-robot on (2023-01-20 03:24:44 UTC): LGTM label has been added.  <details>Git tree hash: fea4e3014a3068490339b909454146cfe9c0d9f2</details>

k8s-ci-robot on (2023-01-20 03:25:00 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114915#"" title=""Author self-approved"">brianwang12</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114915#pullrequestreview-1262928520"" title=""LGTM"">mkumatag</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/images/cuda-vector-add/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/images/cuda-vector-add/OWNERS)~~ [mkumatag]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1525170695,pull_request,closed,,Adjust DisruptionTarget condition message to do not include preemptor pod metadata,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind bug
/kind regression

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Part of #114882 (in condition)
- Tracking issue: https://github.com/kubernetes/enhancements/issues/3329

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Fix a regression in default 1.26 configurations with the PodDisruptionConditions feature enabled where preemptor pod metadata can be included in the message of DisruptionTarget condition
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",mimowo,2023-01-09 08:54:17+00:00,"['Huang-Wei', 'chendave']",2024-09-19 18:03:50+00:00,2023-01-09 19:15:41+00:00,https://github.com/kubernetes/kubernetes/pull/114914,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('kind/regression', 'Categorizes issue or PR as related to a regression from a prior release.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1375283364, 'issue_id': 1525170695, 'author': 'k8s-ci-robot', 'body': '@mimowo: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 9, 8, 54, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375284179, 'issue_id': 1525170695, 'author': 'mimowo', 'body': '/assign @Huang-Wei', 'created_at': datetime.datetime(2023, 1, 9, 8, 55, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375295882, 'issue_id': 1525170695, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 82359027eb66235b0bc7f3b9106820a9df3e1a2c</details>', 'created_at': datetime.datetime(2023, 1, 9, 9, 4, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375370568, 'issue_id': 1525170695, 'author': 'mimowo', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 9, 10, 7, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375722272, 'issue_id': 1525170695, 'author': 'alculquicondor', 'body': '/approve', 'created_at': datetime.datetime(2023, 1, 9, 14, 39, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375722905, 'issue_id': 1525170695, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114914#issuecomment-1375722272"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114914#"" title=""Author self-approved"">mimowo</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [alculquicondor]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 9, 14, 39, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375997388, 'issue_id': 1525170695, 'author': 'Huang-Wei', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 9, 17, 32, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375997527, 'issue_id': 1525170695, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 1930bf61fe8d829a3a40decad40f1d96ad6790ee</details>', 'created_at': datetime.datetime(2023, 1, 9, 17, 32, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2361804159, 'issue_id': 1525170695, 'author': 'hLanceNuro', 'body': 'Drive by comment: Is there any way to opt into this behavior? It is useful for us to determine which pod was the preemptor for a given preempted pod.', 'created_at': datetime.datetime(2024, 9, 19, 17, 37, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 2361817068, 'issue_id': 1525170695, 'author': 'alculquicondor', 'body': 'we changed the event to include pod UID https://github.com/mimowo/kubernetes/blob/f0415a65b41e5eecc04425992c612832b27915f9/pkg/scheduler/framework/preemption/preemption.go#L388\r\n\r\nWe can do the same for the condition. Feel free to send a PR.', 'created_at': datetime.datetime(2024, 9, 19, 17, 44, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2361848669, 'issue_id': 1525170695, 'author': 'hLanceNuro', 'body': ""> we changed the event to include pod UID https://github.com/mimowo/kubernetes/blob/f0415a65b41e5eecc04425992c612832b27915f9/pkg/scheduler/framework/preemption/preemption.go#L388\r\n> \r\n> We can do the same for the condition. Feel free to send a PR.\r\n\r\nOh that's exactly what we need. Our version of k8s is still logging `Preempted by a pod on node` so we must be on a version cut between this PR and https://github.com/kubernetes/kubernetes/pull/119971.\r\n\r\nThanks for the quick reply :slightly_smiling_face:"", 'created_at': datetime.datetime(2024, 9, 19, 18, 3, 49, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-09 08:54:25 UTC): @mimowo: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

mimowo (Issue Creator) on (2023-01-09 08:55:24 UTC): /assign @Huang-Wei

k8s-ci-robot on (2023-01-09 09:04:39 UTC): LGTM label has been added.  <details>Git tree hash: 82359027eb66235b0bc7f3b9106820a9df3e1a2c</details>

mimowo (Issue Creator) on (2023-01-09 10:07:06 UTC): /retest

alculquicondor on (2023-01-09 14:39:16 UTC): /approve

k8s-ci-robot on (2023-01-09 14:39:45 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114914#issuecomment-1375722272"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114914#"" title=""Author self-approved"">mimowo</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [alculquicondor]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

Huang-Wei (Assginee) on (2023-01-09 17:32:07 UTC): /lgtm

k8s-ci-robot on (2023-01-09 17:32:13 UTC): LGTM label has been added.  <details>Git tree hash: 1930bf61fe8d829a3a40decad40f1d96ad6790ee</details>

hLanceNuro on (2024-09-19 17:37:09 UTC): Drive by comment: Is there any way to opt into this behavior? It is useful for us to determine which pod was the preemptor for a given preempted pod.

alculquicondor on (2024-09-19 17:44:56 UTC): we changed the event to include pod UID https://github.com/mimowo/kubernetes/blob/f0415a65b41e5eecc04425992c612832b27915f9/pkg/scheduler/framework/preemption/preemption.go#L388

We can do the same for the condition. Feel free to send a PR.

hLanceNuro on (2024-09-19 18:03:49 UTC): Oh that's exactly what we need. Our version of k8s is still logging `Preempted by a pod on node` so we must be on a version cut between this PR and https://github.com/kubernetes/kubernetes/pull/119971.

Thanks for the quick reply :slightly_smiling_face:

"
1525084619,pull_request,closed,,update license date,"#### What type of PR is this?
update license date

/kind cleanup
/kind deprecation

#### Special notes for your reviewer:
I appreciate k8s a lot.
I just found this outdated license, so updated it.
This PR is small, but in the future I would like to contribute a lot in the future.",Gekko0114,2023-01-09 07:40:07+00:00,[],2023-01-10 21:17:10+00:00,2023-01-09 22:11:46+00:00,https://github.com/kubernetes/kubernetes/pull/114913,"[('area/test', None), ('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('area/kubelet', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('area/apiserver', None), ('area/kubectl', None), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('sig/cluster-lifecycle', 'Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.'), ('sig/autoscaling', 'Categorizes an issue or PR as relevant to SIG Autoscaling.'), ('size/XXL', 'Denotes a PR that changes 1000+ lines, ignoring generated files.'), ('kind/api-change', 'Categorizes issue or PR as related to adding, removing, or otherwise changing an API'), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('sig/windows', 'Categorizes an issue or PR as relevant to SIG Windows.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('area/kubeadm', None), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/instrumentation', 'Categorizes an issue or PR as relevant to SIG Instrumentation.'), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('do-not-merge/release-note-label-needed', ""Indicates that a PR should not merge because it's missing one of the release note labels.""), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('area/e2e-test-framework', 'Issues or PRs related to refactoring the kubernetes e2e test framework'), ('kind/deprecation', 'Categorizes issue or PR as related to a feature/enhancement marked for deprecation.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.'), ('wg/structured-logging', 'Categorizes an issue or PR as relevant to WG Structured Logging.')]","[{'comment_id': 1375212557, 'issue_id': 1525084619, 'author': 'k8s-ci-robot', 'body': '@Gekko0114: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 9, 7, 40, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375212624, 'issue_id': 1525084619, 'author': 'k8s-ci-robot', 'body': ""Welcome @Gekko0114! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:"", 'created_at': datetime.datetime(2023, 1, 9, 7, 40, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375212635, 'issue_id': 1525084619, 'author': 'k8s-ci-robot', 'body': ""Hi @Gekko0114. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 9, 7, 40, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375213042, 'issue_id': 1525084619, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114913#"" title=""Author self-approved"">Gekko0114</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign lavalamp, maciekpytel, thockin for approval by writing `/assign @lavalamp @maciekpytel @thockin` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)**\n- **[cmd/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/OWNERS)**\n- **[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)**\n- **[pkg/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/api/OWNERS)**\n- **[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)**\n- **[pkg/controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/OWNERS)**\n- **[pkg/controlplane/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controlplane/OWNERS)**\n- **[pkg/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/OWNERS)**\n- **[pkg/kubelet/apis/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/apis/config/OWNERS)**\n- **[pkg/probe/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/probe/OWNERS)**\n- **[pkg/proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/OWNERS)**\n- **[pkg/quota/v1/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/quota/v1/OWNERS)**\n- **[pkg/registry/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/registry/OWNERS)**\n- **[pkg/routes/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/routes/OWNERS)**\n- **[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)**\n- **[pkg/scheduler/framework/autoscaler_contract/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/framework/autoscaler_contract/OWNERS)**\n- **[pkg/util/iptables/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/util/iptables/OWNERS)**\n- **[pkg/volume/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/volume/OWNERS)**\n- **[staging/src/k8s.io/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api/OWNERS)**\n- **[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)**\n- **[staging/src/k8s.io/apiextensions-apiserver/pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/pkg/apis/OWNERS)**\n- **[staging/src/k8s.io/apimachinery/pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/OWNERS)**\n- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**\n- **[staging/src/k8s.io/apiserver/pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/apis/OWNERS)**\n- **[staging/src/k8s.io/apiserver/pkg/storage/value/encrypt/envelope/kmsv2/v2alpha1/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/storage/value/encrypt/envelope/kmsv2/v2alpha1/OWNERS)**\n- **[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)**\n- **[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)**\n- **[staging/src/k8s.io/component-base/logs/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/logs/OWNERS)**\n- **[staging/src/k8s.io/component-base/logs/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/logs/api/OWNERS)**\n- **[staging/src/k8s.io/component-base/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/metrics/OWNERS)**\n- **[staging/src/k8s.io/component-base/tracing/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/tracing/OWNERS)**\n- **[staging/src/k8s.io/component-base/tracing/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/tracing/api/OWNERS)**\n- **[staging/src/k8s.io/controller-manager/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/config/OWNERS)**\n- **[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)**\n- **[staging/src/k8s.io/kms/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kms/OWNERS)**\n- **[staging/src/k8s.io/kms/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kms/apis/OWNERS)**\n- **[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)**\n- **[staging/src/k8s.io/kube-scheduler/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-scheduler/config/OWNERS)**\n- **[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)**\n- **[staging/src/k8s.io/kubelet/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubelet/config/OWNERS)**\n- **[staging/src/k8s.io/kubelet/pkg/apis/credentialprovider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubelet/pkg/apis/credentialprovider/OWNERS)**\n- **[staging/src/k8s.io/kubelet/pkg/apis/dra/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubelet/pkg/apis/dra/OWNERS)**\n- **[staging/src/k8s.io/noderesourcetopology-api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/noderesourcetopology-api/OWNERS)**\n- **[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)**\n- **[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)**\n- **[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""lavalamp"",""maciekpytel"",""thockin""]} -->', 'created_at': datetime.datetime(2023, 1, 9, 7, 40, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375272854, 'issue_id': 1525084619, 'author': 'k8s-triage-robot', 'body': 'This PR [may require API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#what-apis-need-to-be-reviewed).\n\nIf so, when the changes are ready, [complete the pre-review checklist and request an API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#mechanics).\n\nStatus of requested reviews is tracked in the [API Review project](https://github.com/orgs/kubernetes/projects/13).', 'created_at': datetime.datetime(2023, 1, 9, 8, 42, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376399638, 'issue_id': 1525084619, 'author': 'aojea', 'body': 'thanks for your interest and willingness but the license data reflects the time it was added, not the current time\r\n\r\n/close', 'created_at': datetime.datetime(2023, 1, 9, 22, 11, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376399731, 'issue_id': 1525084619, 'author': 'k8s-ci-robot', 'body': '@aojea: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114913#issuecomment-1376399638):\n\n>thanks for your interest and willingness but the license data reflects the time it was added, not the current time\r\n>\r\n>/close\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 9, 22, 11, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376511387, 'issue_id': 1525084619, 'author': 'Gekko0114', 'body': ""@aojea \r\nI see, thank you. I found other repository's PR updating license date, so I misunderstood we have to update it as well."", 'created_at': datetime.datetime(2023, 1, 9, 23, 58, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377872247, 'issue_id': 1525084619, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 17, 5, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-09 07:40:08 UTC): @Gekko0114: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-09 07:40:15 UTC): Welcome @Gekko0114! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:

k8s-ci-robot on (2023-01-09 07:40:15 UTC): Hi @Gekko0114. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-09 07:40:58 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114913#"" title=""Author self-approved"">Gekko0114</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign lavalamp, maciekpytel, thockin for approval by writing `/assign @lavalamp @maciekpytel @thockin` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)**
- **[cmd/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/OWNERS)**
- **[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)**
- **[pkg/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/api/OWNERS)**
- **[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)**
- **[pkg/controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/OWNERS)**
- **[pkg/controlplane/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controlplane/OWNERS)**
- **[pkg/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/OWNERS)**
- **[pkg/kubelet/apis/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/apis/config/OWNERS)**
- **[pkg/probe/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/probe/OWNERS)**
- **[pkg/proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/OWNERS)**
- **[pkg/quota/v1/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/quota/v1/OWNERS)**
- **[pkg/registry/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/registry/OWNERS)**
- **[pkg/routes/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/routes/OWNERS)**
- **[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)**
- **[pkg/scheduler/framework/autoscaler_contract/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/framework/autoscaler_contract/OWNERS)**
- **[pkg/util/iptables/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/util/iptables/OWNERS)**
- **[pkg/volume/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/volume/OWNERS)**
- **[staging/src/k8s.io/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api/OWNERS)**
- **[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)**
- **[staging/src/k8s.io/apiextensions-apiserver/pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/pkg/apis/OWNERS)**
- **[staging/src/k8s.io/apimachinery/pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/OWNERS)**
- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**
- **[staging/src/k8s.io/apiserver/pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/apis/OWNERS)**
- **[staging/src/k8s.io/apiserver/pkg/storage/value/encrypt/envelope/kmsv2/v2alpha1/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/storage/value/encrypt/envelope/kmsv2/v2alpha1/OWNERS)**
- **[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)**
- **[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)**
- **[staging/src/k8s.io/component-base/logs/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/logs/OWNERS)**
- **[staging/src/k8s.io/component-base/logs/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/logs/api/OWNERS)**
- **[staging/src/k8s.io/component-base/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/metrics/OWNERS)**
- **[staging/src/k8s.io/component-base/tracing/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/tracing/OWNERS)**
- **[staging/src/k8s.io/component-base/tracing/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/tracing/api/OWNERS)**
- **[staging/src/k8s.io/controller-manager/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/config/OWNERS)**
- **[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)**
- **[staging/src/k8s.io/kms/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kms/OWNERS)**
- **[staging/src/k8s.io/kms/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kms/apis/OWNERS)**
- **[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)**
- **[staging/src/k8s.io/kube-scheduler/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-scheduler/config/OWNERS)**
- **[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)**
- **[staging/src/k8s.io/kubelet/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubelet/config/OWNERS)**
- **[staging/src/k8s.io/kubelet/pkg/apis/credentialprovider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubelet/pkg/apis/credentialprovider/OWNERS)**
- **[staging/src/k8s.io/kubelet/pkg/apis/dra/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubelet/pkg/apis/dra/OWNERS)**
- **[staging/src/k8s.io/noderesourcetopology-api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/noderesourcetopology-api/OWNERS)**
- **[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)**
- **[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)**
- **[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""lavalamp"",""maciekpytel"",""thockin""]} -->

k8s-triage-robot on (2023-01-09 08:42:20 UTC): This PR [may require API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#what-apis-need-to-be-reviewed).

If so, when the changes are ready, [complete the pre-review checklist and request an API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#mechanics).

Status of requested reviews is tracked in the [API Review project](https://github.com/orgs/kubernetes/projects/13).

aojea on (2023-01-09 22:11:42 UTC): thanks for your interest and willingness but the license data reflects the time it was added, not the current time

/close

k8s-ci-robot on (2023-01-09 22:11:47 UTC): @aojea: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114913#issuecomment-1376399638):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

Gekko0114 (Issue Creator) on (2023-01-09 23:58:24 UTC): @aojea 
I see, thank you. I found other repository's PR updating license date, so I misunderstood we have to update it as well.

cici37 on (2023-01-10 21:17:05 UTC): /triage accepted

"
1525070567,pull_request,closed,,add archived dependencies into unwanted-dependencies.json,"#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:
archived repos
- [x] https://github.com/pkg/errors 
- - https://github.com/kubernetes/kubernetes/issues/113627 
- [x] https://github.com/getsentry/raven-go
- - https://github.com/etcd-io/raft/issues/19 : after upgrading cockroachdb/datadriven to v1.0.2, this can be fixed in etcd/raft
- [x] https://github.com/google/shlex
- - https://github.com/kubernetes-sigs/kustomize/issues/4963
- [x] https://github.com/form3tech-oss/jwt-go
- - https://github.com/kubernetes/kubernetes/pull/114921
- - https://github.com/kubernetes/kubernetes/pull/114403 after upgrade to v3.5.6 this will be fixed.
- [x] https://github.com/PuerkitoBio/urlesc
- - https://github.com/kubernetes-sigs/kustomize/issues/4962
- - https://github.com/kubernetes/kube-openapi/issues/356

#### Which issue(s) this PR fixes:

When looking into https://github.com/kubernetes/kubernetes/issues/114836, I realized the health status of dependencies, especially the archived projects.


#### Special notes for your reviewer:

I added all GitHub-related dependencies and their status in https://github.com/pacoxu/github-repos-stats/tree/add-archived
- run per month.
#### Does this PR introduce a user-facing change?
```release-note
None
```
",pacoxu,2023-01-09 07:24:22+00:00,['liggitt'],2023-01-10 05:22:03+00:00,2023-01-09 12:19:31+00:00,https://github.com/kubernetes/kubernetes/pull/114912,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('area/code-organization', 'Issues or PRs related to kubernetes code organization'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1375201808, 'issue_id': 1525070567, 'author': 'k8s-ci-robot', 'body': '@pacoxu: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 9, 7, 24, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375270895, 'issue_id': 1525070567, 'author': 'pacoxu', 'body': '/sig architecture\r\n/area code-organization\r\n/cc @liggitt @dims', 'created_at': datetime.datetime(2023, 1, 9, 8, 40, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375533391, 'issue_id': 1525070567, 'author': 'dims', 'body': '/assign @liggitt', 'created_at': datetime.datetime(2023, 1, 9, 12, 10, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375544383, 'issue_id': 1525070567, 'author': 'liggitt', 'body': '/lgtm\r\n/approve\r\n\r\nthanks! For the referents that are in Kubernetes, can you spawn issues in those repos tracking removal of these deps?', 'created_at': datetime.datetime(2023, 1, 9, 12, 18, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375544555, 'issue_id': 1525070567, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 79874eb651115400176fbe170ca7ff49bff644cf</details>', 'created_at': datetime.datetime(2023, 1, 9, 12, 18, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375544873, 'issue_id': 1525070567, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114912#issuecomment-1375544383"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114912#"" title=""Author self-approved"">pacoxu</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 9, 12, 18, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375771065, 'issue_id': 1525070567, 'author': 'pacoxu', 'body': '> thanks! For the referents that are in Kubernetes, can you spawn issues in those repos tracking removal of these deps?\r\n\r\nYes. I will open issues later.', 'created_at': datetime.datetime(2023, 1, 9, 15, 12, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375930915, 'issue_id': 1525070567, 'author': 'pacoxu', 'body': 'Opened issues for tracking these deps in those repo and `github.com/pkg/errors` is tracked in https://github.com/kubernetes/kubernetes/issues/113627.\r\n\r\narchived repos\r\n- [x] https://github.com/pkg/errors \r\n- - [ ] Track in https://github.com/kubernetes/kubernetes/issues/113627 \r\n- - [ ] https://github.com/microsoft/hcsshim/issues/1614\r\n- - [ ] https://github.com/google/cadvisor/issues/3227\r\n- - [ ] https://github.com/kubernetes-sigs/kustomize/issues/4964\r\n- - [ ] **In Review** https://github.com/kubernetes/system-validators/issues/33\r\n- - [ ] https://github.com/aws/aws-sdk-go/issues/4683\r\n- [x] https://github.com/getsentry/raven-go\r\n- - [ ] **WIP** https://github.com/etcd-io/raft/issues/19 : after upgrading cockroachdb/datadriven to v1.0.2, this can be fixed in etcd/raft. Pending on etcd/raft next release.\r\n- [x] https://github.com/google/shlex\r\n- - [ ] https://github.com/kubernetes-sigs/kustomize/issues/4963\r\n- [x] https://github.com/form3tech-oss/jwt-go\r\n- - https://github.com/kubernetes/kubernetes/pull/114921\r\n- - [ ]  **WIP** https://github.com/kubernetes/kubernetes/pull/114403 after upgrade to v3.5.6 this will be fixed. \r\n- [x] https://github.com/PuerkitoBio/urlesc\r\n- - [ ] **WIP** https://github.com/kubernetes-sigs/kustomize/issues/4962\r\n- - [x] https://github.com/kubernetes/kube-openapi/issues/356', 'created_at': datetime.datetime(2023, 1, 9, 16, 43, 34, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-09 07:24:30 UTC): @pacoxu: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

pacoxu (Issue Creator) on (2023-01-09 08:40:09 UTC): /sig architecture
/area code-organization
/cc @liggitt @dims

dims on (2023-01-09 12:10:14 UTC): /assign @liggitt

liggitt (Assginee) on (2023-01-09 12:18:31 UTC): /lgtm
/approve

thanks! For the referents that are in Kubernetes, can you spawn issues in those repos tracking removal of these deps?

k8s-ci-robot on (2023-01-09 12:18:40 UTC): LGTM label has been added.  <details>Git tree hash: 79874eb651115400176fbe170ca7ff49bff644cf</details>

k8s-ci-robot on (2023-01-09 12:18:55 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114912#issuecomment-1375544383"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114912#"" title=""Author self-approved"">pacoxu</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

pacoxu (Issue Creator) on (2023-01-09 15:12:45 UTC): Yes. I will open issues later.

pacoxu (Issue Creator) on (2023-01-09 16:43:34 UTC): Opened issues for tracking these deps in those repo and `github.com/pkg/errors` is tracked in https://github.com/kubernetes/kubernetes/issues/113627.

archived repos
- [x] https://github.com/pkg/errors 
- - [ ] Track in https://github.com/kubernetes/kubernetes/issues/113627 
- - [ ] https://github.com/microsoft/hcsshim/issues/1614
- - [ ] https://github.com/google/cadvisor/issues/3227
- - [ ] https://github.com/kubernetes-sigs/kustomize/issues/4964
- - [ ] **In Review** https://github.com/kubernetes/system-validators/issues/33
- - [ ] https://github.com/aws/aws-sdk-go/issues/4683
- [x] https://github.com/getsentry/raven-go
- - [ ] **WIP** https://github.com/etcd-io/raft/issues/19 : after upgrading cockroachdb/datadriven to v1.0.2, this can be fixed in etcd/raft. Pending on etcd/raft next release.
- [x] https://github.com/google/shlex
- - [ ] https://github.com/kubernetes-sigs/kustomize/issues/4963
- [x] https://github.com/form3tech-oss/jwt-go
- - https://github.com/kubernetes/kubernetes/pull/114921
- - [ ]  **WIP** https://github.com/kubernetes/kubernetes/pull/114403 after upgrade to v3.5.6 this will be fixed. 
- [x] https://github.com/PuerkitoBio/urlesc
- - [ ] **WIP** https://github.com/kubernetes-sigs/kustomize/issues/4962
- - [x] https://github.com/kubernetes/kube-openapi/issues/356

"
1524915223,pull_request,closed,,Update staging README.md,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind cleanup
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
update staging README.md:
- add `k8s.io/dynamic-resource-allocation` repo to the list of staging repos
- update publishing-bot repo list link

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",SataQiu,2023-01-09 04:28:58+00:00,['liggitt'],2023-01-11 03:51:21+00:00,2023-01-11 03:51:19+00:00,https://github.com/kubernetes/kubernetes/pull/114910,"[('kind/documentation', 'Categorizes issue or PR as related to documentation.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1375095912, 'issue_id': 1524915223, 'author': 'k8s-ci-robot', 'body': '@SataQiu: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 9, 4, 29, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375139154, 'issue_id': 1524915223, 'author': 'SataQiu', 'body': '/test pull-kubernetes-e2e-gce', 'created_at': datetime.datetime(2023, 1, 9, 6, 2, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376418550, 'issue_id': 1524915223, 'author': 'olivierlemasle', 'body': '/kind documentation\r\n/sig architecture', 'created_at': datetime.datetime(2023, 1, 9, 22, 27, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378159973, 'issue_id': 1524915223, 'author': 'SataQiu', 'body': '/assign @liggitt', 'created_at': datetime.datetime(2023, 1, 11, 2, 21, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378172768, 'issue_id': 1524915223, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 11, 2, 45, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378172817, 'issue_id': 1524915223, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 2ce32a9ccb69be5258c4c5001dea26dde6fa6427</details>', 'created_at': datetime.datetime(2023, 1, 11, 2, 45, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378172936, 'issue_id': 1524915223, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114910#issuecomment-1378172768"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114910#"" title=""Author self-approved"">SataQiu</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 11, 2, 45, 46, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-09 04:29:07 UTC): @SataQiu: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

SataQiu (Issue Creator) on (2023-01-09 06:02:48 UTC): /test pull-kubernetes-e2e-gce

olivierlemasle on (2023-01-09 22:27:08 UTC): /kind documentation
/sig architecture

SataQiu (Issue Creator) on (2023-01-11 02:21:56 UTC): /assign @liggitt

liggitt (Assginee) on (2023-01-11 02:45:25 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-11 02:45:30 UTC): LGTM label has been added.  <details>Git tree hash: 2ce32a9ccb69be5258c4c5001dea26dde6fa6427</details>

k8s-ci-robot on (2023-01-11 02:45:46 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114910#issuecomment-1378172768"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114910#"" title=""Author self-approved"">SataQiu</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1524878353,pull_request,closed,,"fix: kubectl expose fails for apps with same-port, different-protocol","Fixed: https://github.com/kubernetes/kubernetes/issues/114402
Signed-off-by: aimuz <mr.imuz@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

/kind bug

#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #114402

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Kubectl expose supports the creation of different protocol service on the same port
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",aimuz,2023-01-09 03:39:40+00:00,['ardaguclu'],2023-07-07 05:51:46+00:00,2023-07-06 10:27:03+00:00,https://github.com/kubernetes/kubernetes/pull/114909,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('priority/backlog', 'Higher priority than priority/awaiting-more-evidence.'), ('area/kubectl', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1375069009, 'issue_id': 1524878353, 'author': 'aimuz', 'body': '/sig cli', 'created_at': datetime.datetime(2023, 1, 9, 3, 40, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375069430, 'issue_id': 1524878353, 'author': 'aimuz', 'body': '/assign anggao\r\n\r\nCan you review the code for me', 'created_at': datetime.datetime(2023, 1, 9, 3, 41, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375069440, 'issue_id': 1524878353, 'author': 'k8s-ci-robot', 'body': ""@aimuz: GitHub didn't allow me to assign the following users: anggao.\n\nNote that only [kubernetes members](https://github.com/orgs/kubernetes/people) with read permissions, repo collaborators and people who have commented on this issue/PR can be assigned. Additionally, issues/PRs can only have 10 assignees at the same time.\nFor more information please see [the contributor guide](https://git.k8s.io/community/contributors/guide/first-contribution.md#issue-assignment-in-github)\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114909#issuecomment-1375069430):\n\n>/assign anggao\r\n>\r\n>Can you review the code for me \r\n>\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 9, 3, 41, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375070462, 'issue_id': 1524878353, 'author': 'aimuz', 'body': '/assign @anggao', 'created_at': datetime.datetime(2023, 1, 9, 3, 45, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375070465, 'issue_id': 1524878353, 'author': 'k8s-ci-robot', 'body': ""@aimuz: GitHub didn't allow me to assign the following users: anggao.\n\nNote that only [kubernetes members](https://github.com/orgs/kubernetes/people) with read permissions, repo collaborators and people who have commented on this issue/PR can be assigned. Additionally, issues/PRs can only have 10 assignees at the same time.\nFor more information please see [the contributor guide](https://git.k8s.io/community/contributors/guide/first-contribution.md#issue-assignment-in-github)\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114909#issuecomment-1375070462):\n\n>/assign @anggao\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 9, 3, 45, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375224324, 'issue_id': 1524878353, 'author': 'aimuz', 'body': '/test pull-kubernetes-integration', 'created_at': datetime.datetime(2023, 1, 9, 7, 58, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375255976, 'issue_id': 1524878353, 'author': 'ardaguclu', 'body': 'As far as I can see, integration test failure is real.', 'created_at': datetime.datetime(2023, 1, 9, 8, 22, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375285652, 'issue_id': 1524878353, 'author': 'aimuz', 'body': '> Maybe it is better to do less changes to fix that issue without touching generated files.\r\n\r\n Yes, the best way is to complete the bug repair with the least code \r\n\r\nFor example, I can roll back the changes to the portname, which will reduce the number of changes, but this will result in inconsistent portname naming.\r\n\r\nFor example, for public method extraction, I can roll back this part and only modify the required part, but it will be difficult to maintain. For the same logic code, modify and maintain multiple copies.\r\n\r\n@ardaguclu If you need to do so, please let me know at any time, and it will be rolled back', 'created_at': datetime.datetime(2023, 1, 9, 8, 57, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376614455, 'issue_id': 1524878353, 'author': 'aimuz', 'body': ""Thank you. Your suggestion is necessary. I will readjust it. I'm sorry I don't know the delete of the generate plan. Next, I will correct it\r\n\r\n@brianpursley @ardaguclu"", 'created_at': datetime.datetime(2023, 1, 10, 1, 54, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378133495, 'issue_id': 1524878353, 'author': 'aimuz', 'body': 'I made an update. Can you have a look', 'created_at': datetime.datetime(2023, 1, 11, 1, 42, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379764636, 'issue_id': 1524878353, 'author': 'aimuz', 'body': '/test pull-kubernetes-e2e-gce-100-performance', 'created_at': datetime.datetime(2023, 1, 12, 3, 26, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1382680385, 'issue_id': 1524878353, 'author': 'aimuz', 'body': '@brianpursley @ardaguclu \r\nCan you help me review the code again to see if there are any problems with the code', 'created_at': datetime.datetime(2023, 1, 14, 7, 12, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1522726645, 'issue_id': 1524878353, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 4, 26, 3, 34, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1522830387, 'issue_id': 1524878353, 'author': 'aimuz', 'body': '/remove-lifecycle stale', 'created_at': datetime.datetime(2023, 4, 26, 6, 0, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1586605535, 'issue_id': 1524878353, 'author': 'aimuz', 'body': '/pin @brianpursley', 'created_at': datetime.datetime(2023, 6, 12, 5, 25, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1591194198, 'issue_id': 1524878353, 'author': 'aimuz', 'body': '/ping @brianpursley @ardaguclu', 'created_at': datetime.datetime(2023, 6, 14, 13, 18, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1617429841, 'issue_id': 1524878353, 'author': 'ardaguclu', 'body': ""Thanks @aimuz \r\n\r\n/lgtm\r\n/triage accepted\r\n/priority backlog\r\n\r\nI'm deferring to @brianpursley for last approval, if he wants to check."", 'created_at': datetime.datetime(2023, 7, 3, 6, 18, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1617429940, 'issue_id': 1524878353, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: c399785bd6ad0c6770a0bab6a2abd7a85a4f843f</details>', 'created_at': datetime.datetime(2023, 7, 3, 6, 18, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1617801278, 'issue_id': 1524878353, 'author': 'aimuz', 'body': '/pin @brianpursley\r\n\r\nDo you have time for a code review, thank you', 'created_at': datetime.datetime(2023, 7, 3, 10, 10, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1623274318, 'issue_id': 1524878353, 'author': 'aojea', 'body': 'great 👏', 'created_at': datetime.datetime(2023, 7, 6, 9, 8, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1623316843, 'issue_id': 1524878353, 'author': 'ardaguclu', 'body': '/hold cancel\r\n/approve', 'created_at': datetime.datetime(2023, 7, 6, 9, 25, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1623317837, 'issue_id': 1524878353, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114909#"" title=""Author self-approved"">aimuz</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114909#issuecomment-1623316843"" title=""Approved"">ardaguclu</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [ardaguclu]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 7, 6, 9, 25, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1623433500, 'issue_id': 1524878353, 'author': 'aimuz', 'body': 'Thank you all for your hard work!', 'created_at': datetime.datetime(2023, 7, 6, 10, 33, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1624784572, 'issue_id': 1524878353, 'author': 'aimuz', 'body': 'Does this need to be Cherry-picked to another branch?\r\n\r\n@ardaguclu @aojea', 'created_at': datetime.datetime(2023, 7, 7, 5, 51, 46, tzinfo=datetime.timezone.utc)}]","aimuz (Issue Creator) on (2023-01-09 03:40:25 UTC): /sig cli

aimuz (Issue Creator) on (2023-01-09 03:41:48 UTC): /assign anggao

Can you review the code for me

k8s-ci-robot on (2023-01-09 03:41:49 UTC): @aimuz: GitHub didn't allow me to assign the following users: anggao.

Note that only [kubernetes members](https://github.com/orgs/kubernetes/people) with read permissions, repo collaborators and people who have commented on this issue/PR can be assigned. Additionally, issues/PRs can only have 10 assignees at the same time.
For more information please see [the contributor guide](https://git.k8s.io/community/contributors/guide/first-contribution.md#issue-assignment-in-github)

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114909#issuecomment-1375069430):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

aimuz (Issue Creator) on (2023-01-09 03:45:09 UTC): /assign @anggao

k8s-ci-robot on (2023-01-09 03:45:10 UTC): @aimuz: GitHub didn't allow me to assign the following users: anggao.

Note that only [kubernetes members](https://github.com/orgs/kubernetes/people) with read permissions, repo collaborators and people who have commented on this issue/PR can be assigned. Additionally, issues/PRs can only have 10 assignees at the same time.
For more information please see [the contributor guide](https://git.k8s.io/community/contributors/guide/first-contribution.md#issue-assignment-in-github)

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114909#issuecomment-1375070462):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

aimuz (Issue Creator) on (2023-01-09 07:58:26 UTC): /test pull-kubernetes-integration

ardaguclu (Assginee) on (2023-01-09 08:22:55 UTC): As far as I can see, integration test failure is real.

aimuz (Issue Creator) on (2023-01-09 08:57:01 UTC): Yes, the best way is to complete the bug repair with the least code 

For example, I can roll back the changes to the portname, which will reduce the number of changes, but this will result in inconsistent portname naming.

For example, for public method extraction, I can roll back this part and only modify the required part, but it will be difficult to maintain. For the same logic code, modify and maintain multiple copies.

@ardaguclu If you need to do so, please let me know at any time, and it will be rolled back

aimuz (Issue Creator) on (2023-01-10 01:54:54 UTC): Thank you. Your suggestion is necessary. I will readjust it. I'm sorry I don't know the delete of the generate plan. Next, I will correct it

@brianpursley @ardaguclu

aimuz (Issue Creator) on (2023-01-11 01:42:02 UTC): I made an update. Can you have a look

aimuz (Issue Creator) on (2023-01-12 03:26:35 UTC): /test pull-kubernetes-e2e-gce-100-performance

aimuz (Issue Creator) on (2023-01-14 07:12:43 UTC): @brianpursley @ardaguclu 
Can you help me review the code again to see if there are any problems with the code

k8s-triage-robot on (2023-04-26 03:34:45 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

aimuz (Issue Creator) on (2023-04-26 06:00:10 UTC): /remove-lifecycle stale

aimuz (Issue Creator) on (2023-06-12 05:25:46 UTC): /pin @brianpursley

aimuz (Issue Creator) on (2023-06-14 13:18:08 UTC): /ping @brianpursley @ardaguclu

ardaguclu (Assginee) on (2023-07-03 06:18:16 UTC): Thanks @aimuz 

/lgtm
/triage accepted
/priority backlog

I'm deferring to @brianpursley for last approval, if he wants to check.

k8s-ci-robot on (2023-07-03 06:18:23 UTC): LGTM label has been added.  <details>Git tree hash: c399785bd6ad0c6770a0bab6a2abd7a85a4f843f</details>

aimuz (Issue Creator) on (2023-07-03 10:10:41 UTC): /pin @brianpursley

Do you have time for a code review, thank you

aojea on (2023-07-06 09:08:50 UTC): great 👏

ardaguclu (Assginee) on (2023-07-06 09:25:16 UTC): /hold cancel
/approve

k8s-ci-robot on (2023-07-06 09:25:40 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114909#"" title=""Author self-approved"">aimuz</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114909#issuecomment-1623316843"" title=""Approved"">ardaguclu</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [ardaguclu]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

aimuz (Issue Creator) on (2023-07-06 10:33:19 UTC): Thank you all for your hard work!

aimuz (Issue Creator) on (2023-07-07 05:51:46 UTC): Does this need to be Cherry-picked to another branch?

@ardaguclu @aojea

"
1524782514,pull_request,closed,,fix a typo in pkg/proxy/ipvs/proxier.go,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind cleanup
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
fix a typo in pkg/proxy/ipvs/proxier.go
#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
None
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs
None
```
",haoruan,2023-01-09 01:32:24+00:00,['MrHohn'],2023-01-09 20:47:46+00:00,2023-01-09 20:47:40+00:00,https://github.com/kubernetes/kubernetes/pull/114907,"[('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('area/ipvs', None), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1375001548, 'issue_id': 1524782514, 'author': 'k8s-ci-robot', 'body': '@haoruan: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 9, 1, 32, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375001556, 'issue_id': 1524782514, 'author': 'k8s-ci-robot', 'body': ""Hi @haoruan. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 9, 1, 32, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376081734, 'issue_id': 1524782514, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 8f7afd5982f349e60a0a8722b1ace2481b7e5247</details>', 'created_at': datetime.datetime(2023, 1, 9, 18, 29, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376085522, 'issue_id': 1524782514, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114907#"" title=""Author self-approved"">haoruan</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114907#pullrequestreview-1240987320"" title=""Approved"">MrHohn</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/proxy/ipvs/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/ipvs/OWNERS)~~ [MrHohn]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 9, 18, 30, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376144355, 'issue_id': 1524782514, 'author': 'k8s-ci-robot', 'body': '@haoruan: The following test **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:\n\nTest name | Commit | Details | Required | Rerun command\n--- | --- | --- | --- | ---\npull-kubernetes-e2e-gci-gce-ipvs | 7f3de6e53a0201836345e9094c6ecf57bef53476 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114907/pull-kubernetes-e2e-gci-gce-ipvs/1612516865261703168) | false | `/test pull-kubernetes-e2e-gci-gce-ipvs`\n\n[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114907). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3Ahaoruan). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).\n</details>\n<!-- test report -->', 'created_at': datetime.datetime(2023, 1, 9, 19, 8, 7, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-09 01:32:31 UTC): @haoruan: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-09 01:32:32 UTC): Hi @haoruan. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-09 18:29:17 UTC): LGTM label has been added.  <details>Git tree hash: 8f7afd5982f349e60a0a8722b1ace2481b7e5247</details>

k8s-ci-robot on (2023-01-09 18:30:40 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114907#"" title=""Author self-approved"">haoruan</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114907#pullrequestreview-1240987320"" title=""Approved"">MrHohn</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/proxy/ipvs/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/ipvs/OWNERS)~~ [MrHohn]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-ci-robot on (2023-01-09 19:08:07 UTC): @haoruan: The following test **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:

Test name | Commit | Details | Required | Rerun command
--- | --- | --- | --- | ---
pull-kubernetes-e2e-gci-gce-ipvs | 7f3de6e53a0201836345e9094c6ecf57bef53476 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114907/pull-kubernetes-e2e-gci-gce-ipvs/1612516865261703168) | false | `/test pull-kubernetes-e2e-gci-gce-ipvs`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114907). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3Ahaoruan). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->

"
1524708042,pull_request,closed,,Promote e2e test for SubjectAccessReview & createAuthorizationV1NamespacedLocalSubjectAccessReview +2 Endpoints,"**What type of PR is this?**
/kind cleanup

**What this PR does / why we need it:**
This PR adds a test to test the following untested endpoints:
- SubjectAccessReview 
- createAuthorizationV1NamespacedLocalSubjectAccessReview

**Which issue(s) this PR fixes:**
Fixes #114344

**Testgrid Link:** 
[testgrid-link](https://testgrid.k8s.io/sig-release-master-blocking#gce-cos-master-default&width=5&graph-metrics=test-duration-minutes&include-filter-by-regex=should.support.SubjectReview.API.operations)

**Special notes for your reviewer:**
Adds +2 endpoint test coverage (good for conformance)

**Does this PR introduce a user-facing change?:**
```
NONE

```

**Release note:**
```release-note
NONE
```

**Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:**
```
NONE

```

/sig testing
/sig architecture
/area conformance
",riaankleinhans,2023-01-08 22:28:02+00:00,"['dims', 'liggitt', 'smarterclayton', 'johnbelamaric']",2023-01-09 01:09:29+00:00,2023-01-09 01:09:28+00:00,https://github.com/kubernetes/kubernetes/pull/114906,"[('area/test', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('area/conformance', 'Issues or PRs related to kubernetes conformance tests'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1374952393, 'issue_id': 1524708042, 'author': 'riaankleinhans', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 8, 23, 5, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374953300, 'issue_id': 1524708042, 'author': 'riaankleinhans', 'body': '/assign @smarterclayton @dims @johnbelamaric\r\n\r\nThe e2e test had a perfect green run since 16 December, ready for promotion of the first 2 endpoints of 2023!\r\nThanks', 'created_at': datetime.datetime(2023, 1, 8, 23, 8, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374990281, 'issue_id': 1524708042, 'author': 'dims', 'body': 'cc @enj @liggitt \r\n\r\nsounds great @Riaankl !\r\n\r\n/approve\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 9, 1, 7, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374990315, 'issue_id': 1524708042, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: bb3b9ba5bb809bbe944b4be03314c43e13850a5e</details>', 'created_at': datetime.datetime(2023, 1, 9, 1, 7, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374990459, 'issue_id': 1524708042, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114906#issuecomment-1374990281"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114906#"" title=""Author self-approved"">Riaankl</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[test/conformance/testdata/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/conformance/testdata/OWNERS)~~ [dims]\n- ~~[test/e2e/auth/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/auth/OWNERS)~~ [dims]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 9, 1, 7, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374990806, 'issue_id': 1524708042, 'author': 'liggitt', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 9, 1, 8, 36, tzinfo=datetime.timezone.utc)}]","riaankleinhans (Issue Creator) on (2023-01-08 23:05:33 UTC): /triage accepted

riaankleinhans (Issue Creator) on (2023-01-08 23:08:17 UTC): /assign @smarterclayton @dims @johnbelamaric

The e2e test had a perfect green run since 16 December, ready for promotion of the first 2 endpoints of 2023!
Thanks

dims (Assginee) on (2023-01-09 01:07:30 UTC): cc @enj @liggitt 

sounds great @Riaankl !

/approve
/lgtm

k8s-ci-robot on (2023-01-09 01:07:35 UTC): LGTM label has been added.  <details>Git tree hash: bb3b9ba5bb809bbe944b4be03314c43e13850a5e</details>

k8s-ci-robot on (2023-01-09 01:07:52 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114906#issuecomment-1374990281"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114906#"" title=""Author self-approved"">Riaankl</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/conformance/testdata/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/conformance/testdata/OWNERS)~~ [dims]
- ~~[test/e2e/auth/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/auth/OWNERS)~~ [dims]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

liggitt (Assginee) on (2023-01-09 01:08:36 UTC): /lgtm

"
1524670810,pull_request,closed,,Fix SyncPastDeadlineJobFinished for enabling finalizer path,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind bug
/kind flake
/kind depreciation
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
While working on https://github.com/kubernetes/kubernetes/pull/114647, I discovered that the SyncPastDeadlineJobFinished fails when you enable the new finalizer code path.

When enabling the finalizer in this test case, I noticed that the condition that says that the job hit an active deadline was reset.  This caused the test to never register that we hit the active deadline.  


#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",kannon92,2023-01-08 20:40:18+00:00,['alculquicondor'],2023-01-09 20:47:30+00:00,2023-01-09 20:47:28+00:00,https://github.com/kubernetes/kubernetes/pull/114905,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('kind/flake', 'Categorizes issue or PR as related to a flaky test.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374922548, 'issue_id': 1524670810, 'author': 'k8s-ci-robot', 'body': ""@kannon92: The label(s) `kind/depreciation` cannot be applied, because the repository doesn't have them.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114905):\n\n>\r\n>\r\n>#### What type of PR is this?\r\n>/kind bug\r\n>/kind flake\r\n>/kind depreciation\r\n>\r\n>\r\n>#### What this PR does / why we need it:\r\n>While working on https://github.com/kubernetes/kubernetes/pull/114647, I discovered that the SyncPastDeadlineJobFinished fails when you enable the new finalizer code path.\r\n>\r\n>When enabling the finalizer in this test case, I noticed that the condition that says that the job hit an active deadline was reset.  This caused the test to never register that we hit the active deadline.  \r\n>\r\n>\r\n>#### Which issue(s) this PR fixes:\r\n>\r\n>Fixes #\r\n>\r\n>#### Special notes for your reviewer:\r\n>\r\n>#### Does this PR introduce a user-facing change?\r\n>\r\n>```release-note\r\n>NONE\r\n>```\r\n>\r\n>#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:\r\n>\r\n>\r\n>```docs\r\n>\r\n>```\r\n>\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 8, 20, 40, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374922562, 'issue_id': 1524670810, 'author': 'k8s-ci-robot', 'body': '@kannon92: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 8, 20, 40, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375841665, 'issue_id': 1524670810, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114905#pullrequestreview-1240726037"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114905#"" title=""Author self-approved"">kannon92</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/controller/job/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/job/OWNERS)~~ [alculquicondor]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 9, 15, 50, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375842165, 'issue_id': 1524670810, 'author': 'alculquicondor', 'body': 'Btw, this PR should handle the flaky #114876', 'created_at': datetime.datetime(2023, 1, 9, 15, 51, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375847906, 'issue_id': 1524670810, 'author': 'alculquicondor', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 9, 15, 55, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375848061, 'issue_id': 1524670810, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 6bf8c4d336d24cf7f26b237158581e79c3879c1d</details>', 'created_at': datetime.datetime(2023, 1, 9, 15, 55, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375849548, 'issue_id': 1524670810, 'author': 'kannon92', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 9, 15, 56, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375998130, 'issue_id': 1524670810, 'author': 'alculquicondor', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 9, 17, 32, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376000091, 'issue_id': 1524670810, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: aa7d2b847c09f7b724e063d59f6343e601f45cdc</details>', 'created_at': datetime.datetime(2023, 1, 9, 17, 34, 23, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-08 20:40:21 UTC): @kannon92: The label(s) `kind/depreciation` cannot be applied, because the repository doesn't have them.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114905):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-08 20:40:25 UTC): @kannon92: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-09 15:50:51 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114905#pullrequestreview-1240726037"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114905#"" title=""Author self-approved"">kannon92</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/controller/job/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/job/OWNERS)~~ [alculquicondor]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

alculquicondor (Assginee) on (2023-01-09 15:51:13 UTC): Btw, this PR should handle the flaky #114876

alculquicondor (Assginee) on (2023-01-09 15:55:23 UTC): /lgtm

k8s-ci-robot on (2023-01-09 15:55:30 UTC): LGTM label has been added.  <details>Git tree hash: 6bf8c4d336d24cf7f26b237158581e79c3879c1d</details>

kannon92 (Issue Creator) on (2023-01-09 15:56:36 UTC): /retest

alculquicondor (Assginee) on (2023-01-09 17:32:34 UTC): /lgtm

k8s-ci-robot on (2023-01-09 17:34:23 UTC): LGTM label has been added.  <details>Git tree hash: aa7d2b847c09f7b724e063d59f6343e601f45cdc</details>

"
1524587866,pull_request,closed,,kubelet: fix recording when pulling image did finish,"Signed-off-by: TommyStarK <thomasmilox@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind bug

#### What this PR does / why we need it:

Kubelet image manager wasn't recording when pulling the image did finish, it is now available for the pod_startup_latency_tracker.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #114903 

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
kubelet: fix recording issue when pulling image did finish
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",TommyStarK,2023-01-08 16:50:41+00:00,"['mrunalp', 'pacoxu', 'SergeyKanzhelev', 'bart0sh']",2023-03-14 17:08:43+00:00,2023-03-14 16:39:02+00:00,https://github.com/kubernetes/kubernetes/pull/114904,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('area/kubelet', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1374879194, 'issue_id': 1524587866, 'author': 'k8s-ci-robot', 'body': ""Hi @TommyStarK. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 8, 16, 50, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374879738, 'issue_id': 1524587866, 'author': 'TommyStarK', 'body': 'cc @aojea, a first draft to address the issue #114903, any feedback will be greatly appreciated (If you feel the approach is too naive please dont hesitate to tell me if you had something else in mind)\r\n\r\nBest,', 'created_at': datetime.datetime(2023, 1, 8, 16, 53, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374894699, 'issue_id': 1524587866, 'author': 'aojea', 'body': '/ok-to-test\r\n\r\nsome comments but I think that this is good to cover from regressions, \r\nThanks', 'created_at': datetime.datetime(2023, 1, 8, 18, 11, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378329093, 'issue_id': 1524587866, 'author': 'bart0sh', 'body': '/triage accepted\r\n/priority important-longterm', 'created_at': datetime.datetime(2023, 1, 11, 7, 17, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1425536802, 'issue_id': 1524587866, 'author': 'bart0sh', 'body': '/lgtm\r\n/assign @mrunalp @SergeyKanzhelev', 'created_at': datetime.datetime(2023, 2, 10, 9, 54, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1425536949, 'issue_id': 1524587866, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 416bfffde59d907fa452fd007b82ee3488a39de2</details>', 'created_at': datetime.datetime(2023, 2, 10, 9, 54, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1426219379, 'issue_id': 1524587866, 'author': 'SergeyKanzhelev', 'body': 'Is there any user visible changes beyond the log? Briefly looking into code I see it is used beyond just kubelet.log. So I would expect this PR include some release notes explaining what bug is fixed (again, beyond just kubelet.log).\r\n\r\nThis value seems to be used in startup SLO and no tests were broken by https://github.com/kubernetes/kubernetes/pull/111772 (CC @pacoxu)\r\n\r\nOriginally this was introduced in https://github.com/kubernetes/kubernetes/pull/111930 (cc @azylinski) and it seems that the logic of duration calculation has no objections of finish time be zero and start time be Now. Should there be tests for this?\r\n\r\nAlso I am a bit on edge we will set the time for the containers with image pull policy `Never`. And for the error cases - should we include those values initialization for errors as well? Will those be used for SLO calculations? Will we be interested in how failing image pull slows down everything?\r\n\r\nOverall code LGTM, but I really want questions above to be answered before merging or an issue created to investigate those.', 'created_at': datetime.datetime(2023, 2, 10, 19, 4, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1426793137, 'issue_id': 1524587866, 'author': 'TommyStarK', 'body': ""@SergeyKanzhelev  May I suggest a release not like: \r\n`image pulling: fix recording when pulling image did finish. The time of when pulling image is done was always equal to Go's zero date. The timestamp is now correctly set. In addition, when the image is already present, timestamps recording when pulling the image started and finished are set to Time.Now()` ?\r\n\r\nIf you validate the release note I will update the PR description to include it.\r\n\r\n> Also I am a bit on edge we will set the time for the containers with image pull policy Never\r\n\r\nMaybe I could update the condition to something `if the image is present and the policy isn't Never` ?\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/10639a7963b31f43765d2abf53aa946fd1123bcc/pkg/kubelet/images/image_manager.go#L134-L145"", 'created_at': datetime.datetime(2023, 2, 11, 15, 1, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1427313124, 'issue_id': 1524587866, 'author': 'pacoxu', 'body': '> This value seems to be used in startup SLO and no tests were broken by #111772 (CC @pacoxu)\r\n\r\nI only updated the event in #111772. The key issue of #111772 is that there is a waiting duration for the serialized pull image.', 'created_at': datetime.datetime(2023, 2, 13, 4, 12, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1427461320, 'issue_id': 1524587866, 'author': 'pacoxu', 'body': '/release-note-edit\r\n```release-note\r\nkubelet: fix recording issue when pulling image did finish\r\n```', 'created_at': datetime.datetime(2023, 2, 13, 7, 18, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1435493754, 'issue_id': 1524587866, 'author': 'SergeyKanzhelev', 'body': '> /release-note-edit\r\n> \r\n> ```\r\n> kubelet: fix recording issue when pulling image did finish\r\n> ```\r\n\r\nCan you please clarify in release notes how this is exposed to the customer. I understand there is some sort of duration metric that was miscalculated (beyond just kubelet.log)', 'created_at': datetime.datetime(2023, 2, 18, 5, 58, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1435494304, 'issue_id': 1524587866, 'author': 'SergeyKanzhelev', 'body': ""> > This value seems to be used in startup SLO and no tests were broken by #111772 (CC @pacoxu)\r\n> \r\n> I only updated the event in #111772. The key issue of #111772 is that there is a waiting duration for the serialized pull image.\r\n\r\nI thought the `m.podPullingTimeRecorder.RecordImageFinishedPulling(pod.UID)` was removed in the referred PR and now being restored back. Is the value not used in SLO calculation? I didn't dig deep, just confused"", 'created_at': datetime.datetime(2023, 2, 18, 6, 1, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1435756434, 'issue_id': 1524587866, 'author': 'TommyStarK', 'body': ""@ruiwen-zhao, Thank you very much for the review, all your suggestions have been taken care of in dda229a93c8.\r\n\r\n@SergeyKanzhelev, This is the original release note I suggested. Is it detailed enough ?\r\n\r\n`image pulling: fix recording when pulling image did finish. The time of when pulling image is done was always equal to Go's zero date. The timestamp is now correctly set.`\r\n\r\nI will look @pacoxu's suggestion to set an empty date  when image is already present if it is possible."", 'created_at': datetime.datetime(2023, 2, 18, 19, 54, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1435828692, 'issue_id': 1524587866, 'author': 'pacoxu', 'body': ""> > I only updated the event in #111772. The key issue of #111772 is that there is a waiting duration for the serialized pull image.\r\n> \r\n> I thought the `m.podPullingTimeRecorder.RecordImageFinishedPulling(pod.UID)` was removed in the referred PR and now being restored back. Is the value not used in SLO calculation? I didn't dig deep, just confused\r\n\r\nIt seems to be a mistaken removal during rebasing. My fault."", 'created_at': datetime.datetime(2023, 2, 19, 2, 58, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1435909186, 'issue_id': 1524587866, 'author': 'SergeyKanzhelev', 'body': '> > > I only updated the event in #111772. The key issue of #111772 is that there is a waiting duration for the serialized pull image.\r\n> > \r\n> > \r\n> > I thought the `m.podPullingTimeRecorder.RecordImageFinishedPulling(pod.UID)` was removed in the referred PR and now being restored back. Is the value not used in SLO calculation? I didn\'t dig deep, just confused\r\n> \r\n> It seems to be a mistaken removal during rebasing. My fault.\r\n\r\nNo worries. What worries me that no tests failed. It indicates that there is a feature that is not covered by tests and I want to understand what this feature is, what is the plan to cover it with tests, and how it is exposed to customers. Something like ""SLO metrics are not calculated correctly"". But with more details.\r\n\r\nI dont think this should block the PR. I just want to make sure if there is a KEP tracking this feature, this KEP needs to be updated to make sure the test will be implemented.', 'created_at': datetime.datetime(2023, 2, 19, 6, 56, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1439033715, 'issue_id': 1524587866, 'author': 'TommyStarK', 'body': '@pacoxu, I looked back to the code and as you mentioned using `time.Now()` to set `firstStartedPulling` and `lastFinishedPulling` when the image is already present could lead the users to some misunderstanding.\r\nI suggest then to remove those lines:\r\nhttps://github.com/kubernetes/kubernetes/pull/114904/files#diff-b22ab169cdc70b2e968bb653f29cf0a1384d3bccaebeef96aebf2a5a40821bbeR137-R138\r\n\r\nBy doing that, in case of image already present, timestamps will be equal to `time.Time{}` (Go zero date)  which is `0001-01-01 00:00:00 +0000 UTC`.\r\n\r\nIf you validate this, I will update my PR accordingly. cc @SergeyKanzhelev \r\n\r\nBest regards,', 'created_at': datetime.datetime(2023, 2, 21, 20, 10, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1440664198, 'issue_id': 1524587866, 'author': 'TommyStarK', 'body': ""@pacoxu, I took your emoji as a yes and removed recording timestamps when image is present. If there is anything please don't hesitate.\r\n\r\nBest,"", 'created_at': datetime.datetime(2023, 2, 22, 19, 21, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1440728541, 'issue_id': 1524587866, 'author': 'TommyStarK', 'body': '/retest-required', 'created_at': datetime.datetime(2023, 2, 22, 20, 5, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1441130696, 'issue_id': 1524587866, 'author': 'pacoxu', 'body': 'Either is OK with me.\r\n/lgtm\r\nThe current change is very clear to add the `RecordImageFinishedPulling` back.', 'created_at': datetime.datetime(2023, 2, 23, 2, 6, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1441130747, 'issue_id': 1524587866, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: ba3fb5ab8aad6345750b64af5114623e6eb8f9f8</details>', 'created_at': datetime.datetime(2023, 2, 23, 2, 6, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1452433311, 'issue_id': 1524587866, 'author': 'TommyStarK', 'body': '@pacoxu PR has been rebased', 'created_at': datetime.datetime(2023, 3, 2, 19, 24, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1452589830, 'issue_id': 1524587866, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: bcc5430b294763dead11beab7610d48b5d2aa654</details>', 'created_at': datetime.datetime(2023, 3, 2, 21, 44, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1457894779, 'issue_id': 1524587866, 'author': 'TommyStarK', 'body': '@SergeyKanzhelev I tried to contact kubelet approvers to move on on those PRs and avoid the lifecycle/stale label', 'created_at': datetime.datetime(2023, 3, 7, 10, 8, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1459498109, 'issue_id': 1524587866, 'author': 'pacoxu', 'body': '/remove-priority important-longterm\r\n/priority important-soon\r\n/assign @kubernetes/sig-node-leads', 'created_at': datetime.datetime(2023, 3, 8, 5, 5, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1463592915, 'issue_id': 1524587866, 'author': 'TommyStarK', 'body': '@derekwaynecarr any feedback from you will be greatly appreciated', 'created_at': datetime.datetime(2023, 3, 10, 10, 25, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1468221367, 'issue_id': 1524587866, 'author': 'derekwaynecarr', 'body': 'thanks for the fix.\r\n\r\n/approve', 'created_at': datetime.datetime(2023, 3, 14, 14, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1468222027, 'issue_id': 1524587866, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114904#issuecomment-1468221367"" title=""Approved"">derekwaynecarr</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114904#pullrequestreview-1322701891"" title=""LGTM"">SergeyKanzhelev</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114904#"" title=""Author self-approved"">TommyStarK</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/OWNERS)~~ [derekwaynecarr]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 3, 14, 14, 38, 26, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-08 16:50:51 UTC): Hi @TommyStarK. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

TommyStarK (Issue Creator) on (2023-01-08 16:53:53 UTC): cc @aojea, a first draft to address the issue #114903, any feedback will be greatly appreciated (If you feel the approach is too naive please dont hesitate to tell me if you had something else in mind)

Best,

aojea on (2023-01-08 18:11:16 UTC): /ok-to-test

some comments but I think that this is good to cover from regressions, 
Thanks

bart0sh (Assginee) on (2023-01-11 07:17:35 UTC): /triage accepted
/priority important-longterm

bart0sh (Assginee) on (2023-02-10 09:54:02 UTC): /lgtm
/assign @mrunalp @SergeyKanzhelev

k8s-ci-robot on (2023-02-10 09:54:10 UTC): LGTM label has been added.  <details>Git tree hash: 416bfffde59d907fa452fd007b82ee3488a39de2</details>

SergeyKanzhelev (Assginee) on (2023-02-10 19:04:11 UTC): Is there any user visible changes beyond the log? Briefly looking into code I see it is used beyond just kubelet.log. So I would expect this PR include some release notes explaining what bug is fixed (again, beyond just kubelet.log).

This value seems to be used in startup SLO and no tests were broken by https://github.com/kubernetes/kubernetes/pull/111772 (CC @pacoxu)

Originally this was introduced in https://github.com/kubernetes/kubernetes/pull/111930 (cc @azylinski) and it seems that the logic of duration calculation has no objections of finish time be zero and start time be Now. Should there be tests for this?

Also I am a bit on edge we will set the time for the containers with image pull policy `Never`. And for the error cases - should we include those values initialization for errors as well? Will those be used for SLO calculations? Will we be interested in how failing image pull slows down everything?

Overall code LGTM, but I really want questions above to be answered before merging or an issue created to investigate those.

TommyStarK (Issue Creator) on (2023-02-11 15:01:35 UTC): @SergeyKanzhelev  May I suggest a release not like: 
`image pulling: fix recording when pulling image did finish. The time of when pulling image is done was always equal to Go's zero date. The timestamp is now correctly set. In addition, when the image is already present, timestamps recording when pulling the image started and finished are set to Time.Now()` ?

If you validate the release note I will update the PR description to include it.


Maybe I could update the condition to something `if the image is present and the policy isn't Never` ?

https://github.com/kubernetes/kubernetes/blob/10639a7963b31f43765d2abf53aa946fd1123bcc/pkg/kubelet/images/image_manager.go#L134-L145

pacoxu (Assginee) on (2023-02-13 04:12:14 UTC): I only updated the event in #111772. The key issue of #111772 is that there is a waiting duration for the serialized pull image.

pacoxu (Assginee) on (2023-02-13 07:18:43 UTC): /release-note-edit
```release-note
kubelet: fix recording issue when pulling image did finish
```

SergeyKanzhelev (Assginee) on (2023-02-18 05:58:20 UTC): Can you please clarify in release notes how this is exposed to the customer. I understand there is some sort of duration metric that was miscalculated (beyond just kubelet.log)

SergeyKanzhelev (Assginee) on (2023-02-18 06:01:22 UTC): I thought the `m.podPullingTimeRecorder.RecordImageFinishedPulling(pod.UID)` was removed in the referred PR and now being restored back. Is the value not used in SLO calculation? I didn't dig deep, just confused

TommyStarK (Issue Creator) on (2023-02-18 19:54:15 UTC): @ruiwen-zhao, Thank you very much for the review, all your suggestions have been taken care of in dda229a93c8.

@SergeyKanzhelev, This is the original release note I suggested. Is it detailed enough ?

`image pulling: fix recording when pulling image did finish. The time of when pulling image is done was always equal to Go's zero date. The timestamp is now correctly set.`

I will look @pacoxu's suggestion to set an empty date  when image is already present if it is possible.

pacoxu (Assginee) on (2023-02-19 02:58:14 UTC): It seems to be a mistaken removal during rebasing. My fault.

SergeyKanzhelev (Assginee) on (2023-02-19 06:56:34 UTC): No worries. What worries me that no tests failed. It indicates that there is a feature that is not covered by tests and I want to understand what this feature is, what is the plan to cover it with tests, and how it is exposed to customers. Something like ""SLO metrics are not calculated correctly"". But with more details.

I dont think this should block the PR. I just want to make sure if there is a KEP tracking this feature, this KEP needs to be updated to make sure the test will be implemented.

TommyStarK (Issue Creator) on (2023-02-21 20:10:32 UTC): @pacoxu, I looked back to the code and as you mentioned using `time.Now()` to set `firstStartedPulling` and `lastFinishedPulling` when the image is already present could lead the users to some misunderstanding.
I suggest then to remove those lines:
https://github.com/kubernetes/kubernetes/pull/114904/files#diff-b22ab169cdc70b2e968bb653f29cf0a1384d3bccaebeef96aebf2a5a40821bbeR137-R138

By doing that, in case of image already present, timestamps will be equal to `time.Time{}` (Go zero date)  which is `0001-01-01 00:00:00 +0000 UTC`.

If you validate this, I will update my PR accordingly. cc @SergeyKanzhelev 

Best regards,

TommyStarK (Issue Creator) on (2023-02-22 19:21:25 UTC): @pacoxu, I took your emoji as a yes and removed recording timestamps when image is present. If there is anything please don't hesitate.

Best,

TommyStarK (Issue Creator) on (2023-02-22 20:05:08 UTC): /retest-required

pacoxu (Assginee) on (2023-02-23 02:06:33 UTC): Either is OK with me.
/lgtm
The current change is very clear to add the `RecordImageFinishedPulling` back.

k8s-ci-robot on (2023-02-23 02:06:39 UTC): LGTM label has been added.  <details>Git tree hash: ba3fb5ab8aad6345750b64af5114623e6eb8f9f8</details>

TommyStarK (Issue Creator) on (2023-03-02 19:24:22 UTC): @pacoxu PR has been rebased

k8s-ci-robot on (2023-03-02 21:44:20 UTC): LGTM label has been added.  <details>Git tree hash: bcc5430b294763dead11beab7610d48b5d2aa654</details>

TommyStarK (Issue Creator) on (2023-03-07 10:08:02 UTC): @SergeyKanzhelev I tried to contact kubelet approvers to move on on those PRs and avoid the lifecycle/stale label

pacoxu (Assginee) on (2023-03-08 05:05:04 UTC): /remove-priority important-longterm
/priority important-soon
/assign @kubernetes/sig-node-leads

TommyStarK (Issue Creator) on (2023-03-10 10:25:32 UTC): @derekwaynecarr any feedback from you will be greatly appreciated

derekwaynecarr on (2023-03-14 14:38:00 UTC): thanks for the fix.

/approve

k8s-ci-robot on (2023-03-14 14:38:26 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114904#issuecomment-1468221367"" title=""Approved"">derekwaynecarr</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114904#pullrequestreview-1322701891"" title=""LGTM"">SergeyKanzhelev</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114904#"" title=""Author self-approved"">TommyStarK</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/OWNERS)~~ [derekwaynecarr]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1524492070,pull_request,closed,,pkg/apis: Replace deprecated pointer function,"Signed-off-by: TommyStarK <thomasmilox@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

If applied this commit will replace the deprecated `(Int32|Int64|Bool)Ptr` function by `Int32|Int64|Bool`.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",TommyStarK,2023-01-08 12:41:34+00:00,"['smarterclayton', 'alculquicondor']",2023-03-10 10:11:22+00:00,2023-03-10 05:34:15+00:00,https://github.com/kubernetes/kubernetes/pull/114902,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('size/XL', 'Denotes a PR that changes 500-999 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374826991, 'issue_id': 1524492070, 'author': 'k8s-ci-robot', 'body': '@TommyStarK: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 8, 12, 41, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374826993, 'issue_id': 1524492070, 'author': 'k8s-ci-robot', 'body': ""Hi @TommyStarK. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 8, 12, 41, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375630847, 'issue_id': 1524492070, 'author': 'alculquicondor', 'body': '/ok-to-test', 'created_at': datetime.datetime(2023, 1, 9, 13, 31, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375681498, 'issue_id': 1524492070, 'author': 'TommyStarK', 'body': 'I already saw this test failing in other open PRs that I have.\r\n\r\n```\r\nk8s.io/kubernetes/vendor/k8s.io/kube-aggregator/pkg/apiserver: TestRemoveAPIService \r\n{Failed  === RUN   TestRemoveAPIService\r\nI0109 13:56:34.552335   84044 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 凣OC瓴业ǯSfĹǳƘ繙e to ResourceManager\r\nI0109 13:56:34.554316   84044 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 ɰ薗w2;3 to ResourceManager\r\nI0109 13:56:34.554485   84044 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 ȵʭ洒$\\\' to ResourceManager\r\nI0109 13:56:34.554608   84044 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 壊3囜n繊ŀ槉@ to ResourceManager\r\nI0109 13:56:34.554720   84044 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º Hľȋ?{ə%ĺ誟ǀ還N儮 to ResourceManager\r\nI0109 13:56:34.554811   84044 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º ǭȐÿ to ResourceManager\r\nI0109 13:56:34.554898   84044 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º 闀8ǿ滃 to ResourceManager\r\nI0109 13:56:34.554992   84044 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º 覒ęȽ鉹鏪_败>ŵx¤蕰 to ResourceManager\r\nI0109 13:56:34.555499   84044 handler_discovery.go:403] Starting ResourceDiscoveryManager\r\nI0109 13:56:34.588796   84044 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 ɰ薗w2;3 to ResourceManager\r\nI0109 13:56:34.592680   84044 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 凣OC瓴业ǯSfĹǳƘ繙e to ResourceManager\r\nI0109 13:56:34.592935   84044 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 凣OC瓴业ǯSfĹǳƘ繙e to ResourceManager\r\n    handler_discovery_test.go:203: expected to find no groups after service deletion (got 1 groups)\r\n--- FAIL: TestRemoveAPIService (0.12s)\r\n}\r\n```\r\nMay I consider it as flaky and try to ""deflake"" it ?\r\nIf yes, to be sure I understand the flow, changes need to target `staging/` and then will be published to the kube-aggregator repository by the bot. At that point it would be possible to update the `vendor/` ?', 'created_at': datetime.datetime(2023, 1, 9, 14, 11, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375684411, 'issue_id': 1524492070, 'author': 'TommyStarK', 'body': '/test pull-kubernetes-unit', 'created_at': datetime.datetime(2023, 1, 9, 14, 12, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375725140, 'issue_id': 1524492070, 'author': 'alculquicondor', 'body': 'flaky #114438', 'created_at': datetime.datetime(2023, 1, 9, 14, 41, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375728351, 'issue_id': 1524492070, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 55b3ad6231647fc90d7b4443929a81c2e854143a</details>', 'created_at': datetime.datetime(2023, 1, 9, 14, 43, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375738462, 'issue_id': 1524492070, 'author': 'TommyStarK', 'body': '/assign @smarterclayton', 'created_at': datetime.datetime(2023, 1, 9, 14, 51, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1463229154, 'issue_id': 1524492070, 'author': 'smarterclayton', 'body': '/approve', 'created_at': datetime.datetime(2023, 3, 10, 4, 14, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1463229542, 'issue_id': 1524492070, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114902#pullrequestreview-1240607850"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114902#issuecomment-1463229154"" title=""Approved"">smarterclayton</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114902#"" title=""Author self-approved"">TommyStarK</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)~~ [smarterclayton]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 3, 10, 4, 14, 45, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-08 12:41:42 UTC): @TommyStarK: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-08 12:41:43 UTC): Hi @TommyStarK. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

alculquicondor (Assginee) on (2023-01-09 13:31:04 UTC): /ok-to-test

TommyStarK (Issue Creator) on (2023-01-09 14:11:11 UTC): I already saw this test failing in other open PRs that I have.

```
k8s.io/kubernetes/vendor/k8s.io/kube-aggregator/pkg/apiserver: TestRemoveAPIService 
{Failed  === RUN   TestRemoveAPIService
I0109 13:56:34.552335   84044 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 凣OC瓴业ǯSfĹǳƘ繙e to ResourceManager
I0109 13:56:34.554316   84044 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 ɰ薗w2;3 to ResourceManager
I0109 13:56:34.554485   84044 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 ȵʭ洒$\' to ResourceManager
I0109 13:56:34.554608   84044 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 壊3囜n繊ŀ槉@ to ResourceManager
I0109 13:56:34.554720   84044 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º Hľȋ?{ə%ĺ誟ǀ還N儮 to ResourceManager
I0109 13:56:34.554811   84044 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º ǭȐÿ to ResourceManager
I0109 13:56:34.554898   84044 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º 闀8ǿ滃 to ResourceManager
I0109 13:56:34.554992   84044 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º 覒ęȽ鉹鏪_败>ŵx¤蕰 to ResourceManager
I0109 13:56:34.555499   84044 handler_discovery.go:403] Starting ResourceDiscoveryManager
I0109 13:56:34.588796   84044 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 ɰ薗w2;3 to ResourceManager
I0109 13:56:34.592680   84044 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 凣OC瓴业ǯSfĹǳƘ繙e to ResourceManager
I0109 13:56:34.592935   84044 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 凣OC瓴业ǯSfĹǳƘ繙e to ResourceManager
    handler_discovery_test.go:203: expected to find no groups after service deletion (got 1 groups)
--- FAIL: TestRemoveAPIService (0.12s)
}
```
May I consider it as flaky and try to ""deflake"" it ?
If yes, to be sure I understand the flow, changes need to target `staging/` and then will be published to the kube-aggregator repository by the bot. At that point it would be possible to update the `vendor/` ?

TommyStarK (Issue Creator) on (2023-01-09 14:12:55 UTC): /test pull-kubernetes-unit

alculquicondor (Assginee) on (2023-01-09 14:41:15 UTC): flaky #114438

k8s-ci-robot on (2023-01-09 14:43:40 UTC): LGTM label has been added.  <details>Git tree hash: 55b3ad6231647fc90d7b4443929a81c2e854143a</details>

TommyStarK (Issue Creator) on (2023-01-09 14:51:09 UTC): /assign @smarterclayton

smarterclayton (Assginee) on (2023-03-10 04:14:09 UTC): /approve

k8s-ci-robot on (2023-03-10 04:14:45 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114902#pullrequestreview-1240607850"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114902#issuecomment-1463229154"" title=""Approved"">smarterclayton</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114902#"" title=""Author self-approved"">TommyStarK</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)~~ [smarterclayton]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1524300777,pull_request,closed,,Fix gocritic lint errors for cmd/kubeadm/*,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind cleanup
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
Fix gocritic lint errors for `cmd/kubeadm/*`

FYI: https://go-critic.com/overview.html#equalfold

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",SataQiu,2023-01-08 03:27:27+00:00,"['dims', 'neolit123', 'derekwaynecarr']",2023-01-12 17:05:08+00:00,2023-01-12 17:05:06+00:00,https://github.com/kubernetes/kubernetes/pull/114901,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/cluster-lifecycle', 'Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('area/kubeadm', None), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1374797270, 'issue_id': 1524300777, 'author': 'SataQiu', 'body': '/cc @neolit123 @dims', 'created_at': datetime.datetime(2023, 1, 8, 10, 42, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374814001, 'issue_id': 1524300777, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: aee50d20e0835c53bf8cde6d7b3b412a8f046c92</details>', 'created_at': datetime.datetime(2023, 1, 8, 11, 41, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375058042, 'issue_id': 1524300777, 'author': 'SataQiu', 'body': '/assign @derekwaynecarr', 'created_at': datetime.datetime(2023, 1, 9, 3, 17, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379804924, 'issue_id': 1524300777, 'author': 'SataQiu', 'body': 'Hi @dims, cloud you please have a look?\r\n/assign @dims', 'created_at': datetime.datetime(2023, 1, 12, 4, 39, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380226743, 'issue_id': 1524300777, 'author': 'dims', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 12, 12, 3, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380227603, 'issue_id': 1524300777, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114901#issuecomment-1380226743"" title=""Approved"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114901#pullrequestreview-1239769274"" title=""Approved"">neolit123</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114901#"" title=""Author self-approved"">SataQiu</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [dims]\n- ~~[cmd/kubeadm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/OWNERS)~~ [SataQiu,dims,neolit123]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 12, 12, 3, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380601746, 'issue_id': 1524300777, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114901) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 12, 15, 52, 50, tzinfo=datetime.timezone.utc)}]","SataQiu (Issue Creator) on (2023-01-08 10:42:59 UTC): /cc @neolit123 @dims

k8s-ci-robot on (2023-01-08 11:41:35 UTC): LGTM label has been added.  <details>Git tree hash: aee50d20e0835c53bf8cde6d7b3b412a8f046c92</details>

SataQiu (Issue Creator) on (2023-01-09 03:17:11 UTC): /assign @derekwaynecarr

SataQiu (Issue Creator) on (2023-01-12 04:39:33 UTC): Hi @dims, cloud you please have a look?
/assign @dims

dims (Assginee) on (2023-01-12 12:03:15 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-12 12:03:57 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114901#issuecomment-1380226743"" title=""Approved"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114901#pullrequestreview-1239769274"" title=""Approved"">neolit123</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114901#"" title=""Author self-approved"">SataQiu</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [dims]
- ~~[cmd/kubeadm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/OWNERS)~~ [SataQiu,dims,neolit123]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-triage-robot on (2023-01-12 15:52:50 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114901) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

"
1523935872,pull_request,closed,,Update SUPPORT.md based on feedback,"#### What type of PR is this?

/kind documentation

#### What this PR does / why we need it:

Revise [SUPPORT.md](https://github.com/kubernetes/kubernetes/blob/ca5c522080bc62e2e6387516a605c24bb513256b/SUPPORT.md) to better serve readers.

- Mention asking for help on Slack
- Mention ~Stack Overflow~ Server Fault (which is like Stack Overflow, except that Stack Overflow is for coding questions, and a lot of Kubernetes questions are more about systems administration in some form)
- Link to [Report an issue with Kubernetes](https://github.com/kubernetes/kubernetes/issues/new/choose) (last), mainly because there's a further flow to direct people _away_ from filing GitHub issues, but also because people might genuinely be in a position to report a bug.

#### Which issue(s) this PR fixes:

Fixes # 114050

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?

```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:",sftim,2023-01-07 15:55:19+00:00,[],2024-03-19 02:46:08+00:00,2024-03-19 02:46:06+00:00,https://github.com/kubernetes/kubernetes/pull/114900,"[('kind/documentation', 'Categorizes issue or PR as related to documentation.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/docs', 'Categorizes an issue or PR as relevant to SIG Docs.'), ('do-not-merge/work-in-progress', 'Indicates that a PR should not merge because it is a work in progress.'), ('lifecycle/rotten', 'Denotes an issue or PR that has aged beyond stale and will be auto-closed.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374523829, 'issue_id': 1523935872, 'author': 'linux-foundation-easycla[bot]', 'body': '<a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Sajiyah-Salat / name: Sajiyah Salat  (cba209a8666593e2db5588c4aebe9e7eb7ea311b)</li><li>:white_check_mark: login: sftim / name: Tim Bannister  (f349ab8ff309031e432cdbc22bd7905a0a9f382e)</li></ul>', 'created_at': datetime.datetime(2023, 1, 7, 15, 55, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374523851, 'issue_id': 1523935872, 'author': 'k8s-ci-robot', 'body': '@sftim: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 7, 15, 55, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374523978, 'issue_id': 1523935872, 'author': 'sftim', 'body': ""Inspired by https://github.com/kubernetes/kubernetes/issues/114050#issuecomment-1374419160\r\n\r\nI didn't spot the CLA issue before, oops."", 'created_at': datetime.datetime(2023, 1, 7, 15, 55, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374524176, 'issue_id': 1523935872, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114900#"" title=""Author self-approved"">sftim</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign liggitt for approval by writing `/assign @liggitt` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""liggitt""]} -->', 'created_at': datetime.datetime(2023, 1, 7, 15, 56, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387124589, 'issue_id': 1523935872, 'author': 'dims', 'body': ""want to formalize this @sftim (looks like it's still a draft)"", 'created_at': datetime.datetime(2023, 1, 18, 14, 3, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387295019, 'issue_id': 1523935872, 'author': 'sftim', 'body': ""It's a pain but I don't have a CLA for this: I cherry-picked a commit that hadn't passed CLA checks. :facepalm:"", 'created_at': datetime.datetime(2023, 1, 18, 15, 52, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1502955383, 'issue_id': 1523935872, 'author': 'rsoika', 'body': 'I just would like to suggest again the idea to enable the Github discussion function. This makes it possible to move issues directly into the discussion. This can be very helpful for maintaining the issue list as you can move issues which are not a bug into the discussion and other users can try help.\r\nI know this is overlapping the discussion forum at https://discuss.kubernetes.io/ but maybe this will help...?', 'created_at': datetime.datetime(2023, 4, 11, 9, 6, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1533070004, 'issue_id': 1523935872, 'author': 'dims', 'body': '/sig docs', 'created_at': datetime.datetime(2023, 5, 3, 13, 52, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1899515717, 'issue_id': 1523935872, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 1, 19, 1, 57, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1950767967, 'issue_id': 1523935872, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle rotten\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 2, 18, 2, 0, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 2005647820, 'issue_id': 1523935872, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 3, 19, 2, 46, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 2005647881, 'issue_id': 1523935872, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114900#issuecomment-2005647820):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 3, 19, 2, 46, 7, tzinfo=datetime.timezone.utc)}]","linux-foundation-easycla[bot] on (2023-01-07 15:55:22 UTC): <a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Sajiyah-Salat / name: Sajiyah Salat  (cba209a8666593e2db5588c4aebe9e7eb7ea311b)</li><li>:white_check_mark: login: sftim / name: Tim Bannister  (f349ab8ff309031e432cdbc22bd7905a0a9f382e)</li></ul>

k8s-ci-robot on (2023-01-07 15:55:26 UTC): @sftim: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

sftim (Issue Creator) on (2023-01-07 15:55:54 UTC): Inspired by https://github.com/kubernetes/kubernetes/issues/114050#issuecomment-1374419160

I didn't spot the CLA issue before, oops.

k8s-ci-robot on (2023-01-07 15:56:37 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114900#"" title=""Author self-approved"">sftim</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign liggitt for approval by writing `/assign @liggitt` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""liggitt""]} -->

dims on (2023-01-18 14:03:45 UTC): want to formalize this @sftim (looks like it's still a draft)

sftim (Issue Creator) on (2023-01-18 15:52:22 UTC): It's a pain but I don't have a CLA for this: I cherry-picked a commit that hadn't passed CLA checks. :facepalm:

rsoika on (2023-04-11 09:06:49 UTC): I just would like to suggest again the idea to enable the Github discussion function. This makes it possible to move issues directly into the discussion. This can be very helpful for maintaining the issue list as you can move issues which are not a bug into the discussion and other users can try help.
I know this is overlapping the discussion forum at https://discuss.kubernetes.io/ but maybe this will help...?

dims on (2023-05-03 13:52:39 UTC): /sig docs

k8s-triage-robot on (2024-01-19 01:57:07 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2024-02-18 02:00:15 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle rotten

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2024-03-19 02:46:03 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2024-03-19 02:46:07 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114900#issuecomment-2005647820):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1523935423,pull_request,closed,,kubeadm: update .import-restrictions,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind cleanup
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
kubeadm is no longer imports `k8s.io/kube-openapi` and `gopkg.in` packages.
And I believe we're only concerned about whether we're blocking the import of `k8s.io/kubernetes`.
Just like what #90600 did.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",SataQiu,2023-01-07 15:54:39+00:00,['neolit123'],2023-01-07 16:59:28+00:00,2023-01-07 16:59:27+00:00,https://github.com/kubernetes/kubernetes/pull/114899,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/cluster-lifecycle', 'Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('area/kubeadm', None), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374523676, 'issue_id': 1523935423, 'author': 'k8s-ci-robot', 'body': '@SataQiu: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 7, 15, 54, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374523984, 'issue_id': 1523935423, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114899#"" title=""Author self-approved"">SataQiu</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[cmd/kubeadm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/OWNERS)~~ [SataQiu]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 7, 15, 55, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374539102, 'issue_id': 1523935423, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 868c28e323a48f3d324669dad73a9e6f1b46dc5f</details>', 'created_at': datetime.datetime(2023, 1, 7, 16, 55, 14, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-07 15:54:46 UTC): @SataQiu: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-07 15:55:55 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114899#"" title=""Author self-approved"">SataQiu</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[cmd/kubeadm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/OWNERS)~~ [SataQiu]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-ci-robot on (2023-01-07 16:55:14 UTC): LGTM label has been added.  <details>Git tree hash: 868c28e323a48f3d324669dad73a9e6f1b46dc5f</details>

"
1523871216,pull_request,closed,,feature(volume_restrictions): return Skip in PreFilter,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind feature
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
return Skip in volume_restrictions PreFilter when the following condition is satisfied:

- pod doesn't have a volume

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Part of #114399

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",AxeZhan,2023-01-07 14:28:19+00:00,"['alculquicondor', 'kerthcet', 'sanposhiho']",2023-04-11 22:35:08+00:00,2023-04-11 22:35:05+00:00,https://github.com/kubernetes/kubernetes/pull/114898,"[('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374498963, 'issue_id': 1523871216, 'author': 'k8s-ci-robot', 'body': '@kidddddddddddddddddddddd: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 7, 14, 28, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374498967, 'issue_id': 1523871216, 'author': 'k8s-ci-robot', 'body': ""Hi @kidddddddddddddddddddddd. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 7, 14, 28, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374835575, 'issue_id': 1523871216, 'author': 'AxeZhan', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 8, 13, 25, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1429241426, 'issue_id': 1523871216, 'author': 'AxeZhan', 'body': 'pr is updated after #114051 merged.\r\n/cc @kerthcet', 'created_at': datetime.datetime(2023, 2, 14, 7, 15, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1451878562, 'issue_id': 1523871216, 'author': 'AxeZhan', 'body': '/hold cancel', 'created_at': datetime.datetime(2023, 3, 2, 13, 37, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1451885676, 'issue_id': 1523871216, 'author': 'sanposhiho', 'body': '/assign\r\n\r\nI think I can make time to review it this weekend', 'created_at': datetime.datetime(2023, 3, 2, 13, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1470192630, 'issue_id': 1523871216, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: db8c31c1083ab016768e202215caec8608bcc072</details>', 'created_at': datetime.datetime(2023, 3, 15, 15, 16, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1470428572, 'issue_id': 1523871216, 'author': 'alculquicondor', 'body': 'I will leave this review for next week or later.', 'created_at': datetime.datetime(2023, 3, 15, 17, 11, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1471235721, 'issue_id': 1523871216, 'author': 'kerthcet', 'body': ""A strong feeling came to my mind is that we'd better not touch the logics in Filter phase. 🤔  Volumes is empty seems good enough to me. WDYT?"", 'created_at': datetime.datetime(2023, 3, 16, 3, 25, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1471258876, 'issue_id': 1523871216, 'author': 'AxeZhan', 'body': ""> A strong feeling came to me is that we'd better not touch the logics in Filter phase. 🤔 Volumes is empty seems good enough to me. WDYT?\r\n\r\nAt the beginning, I did do it this way, see [comment](https://github.com/kubernetes/kubernetes/pull/114898#discussion_r1064053975). I think we should bring @sanposhiho to this discussion."", 'created_at': datetime.datetime(2023, 3, 16, 3, 50, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1471350911, 'issue_id': 1523871216, 'author': 'sanposhiho', 'body': 'Hmm, so, we need to choose either of:\r\n- to make the Skip logic simpler for ease of maintenance\r\n  - -> only check if Volume is empty or not.\r\n- [the current impl] to make the plugin fully-optimized via Skip\r\n  - -> check further stuff to seek the possibility of returning Skip.', 'created_at': datetime.datetime(2023, 3, 16, 5, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1481330068, 'issue_id': 1523871216, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114898#pullrequestreview-1354758323"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114898#"" title=""Author self-approved"">kidddddddddddddddddddddd</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114898#pullrequestreview-1276330356"" title=""LGTM"">sanposhiho</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [alculquicondor]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 3, 23, 14, 47, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1481331358, 'issue_id': 1523871216, 'author': 'alculquicondor', 'body': ""I'm ok with the current implementation. The changes in Filter are trivial."", 'created_at': datetime.datetime(2023, 3, 23, 14, 48, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1482302056, 'issue_id': 1523871216, 'author': 'kerthcet', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 3, 24, 6, 7, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1482302124, 'issue_id': 1523871216, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 5b4b627cd0c09c8e75858d431b70a108172bd380</details>', 'created_at': datetime.datetime(2023, 3, 24, 6, 7, 26, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-07 14:28:26 UTC): @kidddddddddddddddddddddd: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-07 14:28:27 UTC): Hi @kidddddddddddddddddddddd. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

AxeZhan (Issue Creator) on (2023-01-08 13:25:18 UTC): /retest

AxeZhan (Issue Creator) on (2023-02-14 07:15:56 UTC): pr is updated after #114051 merged.
/cc @kerthcet

AxeZhan (Issue Creator) on (2023-03-02 13:37:42 UTC): /hold cancel

sanposhiho (Assginee) on (2023-03-02 13:43:00 UTC): /assign

I think I can make time to review it this weekend

k8s-ci-robot on (2023-03-15 15:16:46 UTC): LGTM label has been added.  <details>Git tree hash: db8c31c1083ab016768e202215caec8608bcc072</details>

alculquicondor (Assginee) on (2023-03-15 17:11:09 UTC): I will leave this review for next week or later.

kerthcet (Assginee) on (2023-03-16 03:25:16 UTC): A strong feeling came to my mind is that we'd better not touch the logics in Filter phase. 🤔  Volumes is empty seems good enough to me. WDYT?

AxeZhan (Issue Creator) on (2023-03-16 03:50:03 UTC): At the beginning, I did do it this way, see [comment](https://github.com/kubernetes/kubernetes/pull/114898#discussion_r1064053975). I think we should bring @sanposhiho to this discussion.

sanposhiho (Assginee) on (2023-03-16 05:39:00 UTC): Hmm, so, we need to choose either of:
- to make the Skip logic simpler for ease of maintenance
  - -> only check if Volume is empty or not.
- [the current impl] to make the plugin fully-optimized via Skip
  - -> check further stuff to seek the possibility of returning Skip.

k8s-ci-robot on (2023-03-23 14:47:38 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114898#pullrequestreview-1354758323"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114898#"" title=""Author self-approved"">kidddddddddddddddddddddd</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114898#pullrequestreview-1276330356"" title=""LGTM"">sanposhiho</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [alculquicondor]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

alculquicondor (Assginee) on (2023-03-23 14:48:23 UTC): I'm ok with the current implementation. The changes in Filter are trivial.

kerthcet (Assginee) on (2023-03-24 06:07:20 UTC): /lgtm

k8s-ci-robot on (2023-03-24 06:07:26 UTC): LGTM label has been added.  <details>Git tree hash: 5b4b627cd0c09c8e75858d431b70a108172bd380</details>

"
1523850728,pull_request,closed,,feature(volumebinding): return Skip in PreFilter,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind feature
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
return Skip in volumebinding PreFilter when the following condition is satisfied:

- pod doesn't have a pvc.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Part of #114399

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",AxeZhan,2023-01-07 14:01:15+00:00,"['gnufied', 'sanposhiho']",2023-01-17 07:38:34+00:00,2023-01-17 07:38:32+00:00,https://github.com/kubernetes/kubernetes/pull/114897,"[('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374491271, 'issue_id': 1523850728, 'author': 'k8s-ci-robot', 'body': '@kidddddddddddddddddddddd: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 7, 14, 1, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374491274, 'issue_id': 1523850728, 'author': 'k8s-ci-robot', 'body': ""Hi @kidddddddddddddddddddddd. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 7, 14, 1, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374636280, 'issue_id': 1523850728, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 111b8bb96f4099a5bc62d330a696d4422c11dcc5</details>', 'created_at': datetime.datetime(2023, 1, 7, 22, 30, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374702389, 'issue_id': 1523850728, 'author': 'AxeZhan', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 8, 4, 2, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374741457, 'issue_id': 1523850728, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 1e7cc31c637b0b3a9af72cfd37af704f05b3c9b1</details>', 'created_at': datetime.datetime(2023, 1, 8, 7, 32, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1381206522, 'issue_id': 1523850728, 'author': 'AxeZhan', 'body': '/assign @gnufied \nfor another review and approve', 'created_at': datetime.datetime(2023, 1, 13, 1, 46, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1384850894, 'issue_id': 1523850728, 'author': 'ahg-g', 'body': '/approve', 'created_at': datetime.datetime(2023, 1, 17, 5, 24, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1384851702, 'issue_id': 1523850728, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114897#issuecomment-1384850894"" title=""Approved"">ahg-g</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114897#"" title=""Author self-approved"">kidddddddddddddddddddddd</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114897#pullrequestreview-1239740881"" title=""LGTM"">sanposhiho</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/scheduler/framework/plugins/volumebinding/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/framework/plugins/volumebinding/OWNERS)~~ [ahg-g]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 17, 5, 25, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1384900696, 'issue_id': 1523850728, 'author': 'AxeZhan', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 17, 6, 36, 35, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-07 14:01:23 UTC): @kidddddddddddddddddddddd: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-07 14:01:23 UTC): Hi @kidddddddddddddddddddddd. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-07 22:30:08 UTC): LGTM label has been added.  <details>Git tree hash: 111b8bb96f4099a5bc62d330a696d4422c11dcc5</details>

AxeZhan (Issue Creator) on (2023-01-08 04:02:08 UTC): /retest

k8s-ci-robot on (2023-01-08 07:32:41 UTC): LGTM label has been added.  <details>Git tree hash: 1e7cc31c637b0b3a9af72cfd37af704f05b3c9b1</details>

AxeZhan (Issue Creator) on (2023-01-13 01:46:58 UTC): /assign @gnufied 
for another review and approve

ahg-g on (2023-01-17 05:24:56 UTC): /approve

k8s-ci-robot on (2023-01-17 05:25:35 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114897#issuecomment-1384850894"" title=""Approved"">ahg-g</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114897#"" title=""Author self-approved"">kidddddddddddddddddddddd</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114897#pullrequestreview-1239740881"" title=""LGTM"">sanposhiho</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/scheduler/framework/plugins/volumebinding/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/framework/plugins/volumebinding/OWNERS)~~ [ahg-g]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

AxeZhan (Issue Creator) on (2023-01-17 06:36:35 UTC): /retest

"
1523839117,pull_request,closed,,feature(volume_zone): return Skip in PreFilter,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind feature 
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
return Skip in volume_zone PreFilter when the following condition is satisfied:

- pod doesn't have a topologyLabel.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Part of #114399

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",AxeZhan,2023-01-07 13:45:58+00:00,"['ahg-g', 'sanposhiho']",2023-01-14 07:14:15+00:00,2023-01-14 07:14:13+00:00,https://github.com/kubernetes/kubernetes/pull/114896,"[('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374487011, 'issue_id': 1523839117, 'author': 'k8s-ci-robot', 'body': '@kidddddddddddddddddddddd: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 7, 13, 46, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374487016, 'issue_id': 1523839117, 'author': 'k8s-ci-robot', 'body': ""Hi @kidddddddddddddddddddddd. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 7, 13, 46, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374497910, 'issue_id': 1523839117, 'author': 'sanposhiho', 'body': '@kidddddddddddddddddddddd I guess you mentioned a wrong PR in the PR description.', 'created_at': datetime.datetime(2023, 1, 7, 14, 24, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374498722, 'issue_id': 1523839117, 'author': 'AxeZhan', 'body': '> @kidddddddddddddddddddddd I guess you mentioned a wrong PR in the PR description.\r\n\r\nyea missed a 1,fixed now.', 'created_at': datetime.datetime(2023, 1, 7, 14, 27, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374730884, 'issue_id': 1523839117, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 31833061103567d32f4f52694d11b030eeb92219</details>', 'created_at': datetime.datetime(2023, 1, 8, 6, 50, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1381207775, 'issue_id': 1523839117, 'author': 'AxeZhan', 'body': '/assign @ahg-g \nfor another review and approve', 'created_at': datetime.datetime(2023, 1, 13, 1, 48, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1382671442, 'issue_id': 1523839117, 'author': 'ahg-g', 'body': '/approve\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 14, 6, 7, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1382671493, 'issue_id': 1523839117, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114896#issuecomment-1382671442"" title=""LGTM"">ahg-g</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114896#"" title=""Author self-approved"">kidddddddddddddddddddddd</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114896#pullrequestreview-1239737834"" title=""LGTM"">sanposhiho</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [ahg-g]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 14, 6, 7, 40, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-07 13:46:06 UTC): @kidddddddddddddddddddddd: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-07 13:46:06 UTC): Hi @kidddddddddddddddddddddd. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

sanposhiho (Assginee) on (2023-01-07 14:24:37 UTC): @kidddddddddddddddddddddd I guess you mentioned a wrong PR in the PR description.

AxeZhan (Issue Creator) on (2023-01-07 14:27:38 UTC): yea missed a 1,fixed now.

k8s-ci-robot on (2023-01-08 06:50:51 UTC): LGTM label has been added.  <details>Git tree hash: 31833061103567d32f4f52694d11b030eeb92219</details>

AxeZhan (Issue Creator) on (2023-01-13 01:48:45 UTC): /assign @ahg-g 
for another review and approve

ahg-g (Assginee) on (2023-01-14 06:07:16 UTC): /approve
/lgtm

k8s-ci-robot on (2023-01-14 06:07:40 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114896#issuecomment-1382671442"" title=""LGTM"">ahg-g</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114896#"" title=""Author self-approved"">kidddddddddddddddddddddd</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114896#pullrequestreview-1239737834"" title=""LGTM"">sanposhiho</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [ahg-g]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1523750633,pull_request,closed,,Documentation fix,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind documentation
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
Fixes the documentation
#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:
Minor changes in documentation for maxSurge ('during' was put twice) and maxUnavailable terms for DaemonSets
#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note

```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",MandarJKulkarni,2023-01-07 11:47:40+00:00,[],2023-01-11 12:44:38+00:00,2023-01-11 12:44:36+00:00,https://github.com/kubernetes/kubernetes/pull/114895,"[('kind/documentation', 'Categorizes issue or PR as related to documentation.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('kind/api-change', 'Categorizes issue or PR as related to adding, removing, or otherwise changing an API'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('do-not-merge/release-note-label-needed', ""Indicates that a PR should not merge because it's missing one of the release note labels.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374453490, 'issue_id': 1523750633, 'author': 'k8s-ci-robot', 'body': '@MandarJKulkarni: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 7, 11, 47, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374453519, 'issue_id': 1523750633, 'author': 'k8s-ci-robot', 'body': '@MandarJKulkarni: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 7, 11, 47, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374453521, 'issue_id': 1523750633, 'author': 'k8s-ci-robot', 'body': ""Hi @MandarJKulkarni. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 7, 11, 47, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374453625, 'issue_id': 1523750633, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114895#"" title=""Author self-approved"">MandarJKulkarni</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign thockin for approval by writing `/assign @thockin` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)**\n- **[staging/src/k8s.io/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""thockin""]} -->', 'created_at': datetime.datetime(2023, 1, 7, 11, 48, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374465293, 'issue_id': 1523750633, 'author': 'k8s-triage-robot', 'body': 'This PR [may require API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#what-apis-need-to-be-reviewed).\n\nIf so, when the changes are ready, [complete the pre-review checklist and request an API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#mechanics).\n\nStatus of requested reviews is tracked in the [API Review project](https://github.com/orgs/kubernetes/projects/13).', 'created_at': datetime.datetime(2023, 1, 7, 12, 29, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374548113, 'issue_id': 1523750633, 'author': 'pravarag', 'body': '/ok-to-test', 'created_at': datetime.datetime(2023, 1, 7, 17, 43, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374571409, 'issue_id': 1523750633, 'author': 'k8s-ci-robot', 'body': '@MandarJKulkarni: The following tests **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:\n\nTest name | Commit | Details | Required | Rerun command\n--- | --- | --- | --- | ---\npull-kubernetes-verify | 661ab5117d06692bc3a8270d05e23a654254ca89 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114895/pull-kubernetes-verify/1611780483501264896) | true | `/test pull-kubernetes-verify`\npull-kubernetes-e2e-gce | 661ab5117d06692bc3a8270d05e23a654254ca89 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114895/pull-kubernetes-e2e-gce/1611780481894846464/) | true | `/test pull-kubernetes-e2e-gce`\n\n[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114895). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3AMandarJKulkarni). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).\n</details>\n<!-- test report -->', 'created_at': datetime.datetime(2023, 1, 7, 18, 45, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378232266, 'issue_id': 1523750633, 'author': 'pravarag', 'body': 'Closing this PR as the minor doc change can be included with another big PR or shall be ignored.', 'created_at': datetime.datetime(2023, 1, 11, 4, 39, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378694928, 'issue_id': 1523750633, 'author': 'pravarag', 'body': '/close', 'created_at': datetime.datetime(2023, 1, 11, 12, 44, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378695069, 'issue_id': 1523750633, 'author': 'k8s-ci-robot', 'body': '@pravarag: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114895#issuecomment-1378694928):\n\n>/close\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 11, 12, 44, 37, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-07 11:47:41 UTC): @MandarJKulkarni: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-07 11:47:47 UTC): @MandarJKulkarni: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-07 11:47:48 UTC): Hi @MandarJKulkarni. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-07 11:48:10 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114895#"" title=""Author self-approved"">MandarJKulkarni</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign thockin for approval by writing `/assign @thockin` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)**
- **[staging/src/k8s.io/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""thockin""]} -->

k8s-triage-robot on (2023-01-07 12:29:19 UTC): This PR [may require API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#what-apis-need-to-be-reviewed).

If so, when the changes are ready, [complete the pre-review checklist and request an API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#mechanics).

Status of requested reviews is tracked in the [API Review project](https://github.com/orgs/kubernetes/projects/13).

pravarag on (2023-01-07 17:43:04 UTC): /ok-to-test

k8s-ci-robot on (2023-01-07 18:45:34 UTC): @MandarJKulkarni: The following tests **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:

Test name | Commit | Details | Required | Rerun command
--- | --- | --- | --- | ---
pull-kubernetes-verify | 661ab5117d06692bc3a8270d05e23a654254ca89 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114895/pull-kubernetes-verify/1611780483501264896) | true | `/test pull-kubernetes-verify`
pull-kubernetes-e2e-gce | 661ab5117d06692bc3a8270d05e23a654254ca89 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114895/pull-kubernetes-e2e-gce/1611780481894846464/) | true | `/test pull-kubernetes-e2e-gce`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114895). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3AMandarJKulkarni). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->

pravarag on (2023-01-11 04:39:47 UTC): Closing this PR as the minor doc change can be included with another big PR or shall be ignored.

pravarag on (2023-01-11 12:44:31 UTC): /close

k8s-ci-robot on (2023-01-11 12:44:37 UTC): @pravarag: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114895#issuecomment-1378694928):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1523688903,pull_request,closed,,Added error handling in ValidateAdmissionPolicy,"Signed-off-by: Dipankar Das <dipankardas0115@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->
/kind bug
/kind cleanup

#### What this PR does / why we need it:
there is no error handling in the mentioned lines

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #114726

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",dipankardas011,2023-01-07 10:26:01+00:00,['DangerOnTheRanger'],2023-02-03 20:14:32+00:00,2023-02-03 20:14:30+00:00,https://github.com/kubernetes/kubernetes/pull/114894,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1374433533, 'issue_id': 1523688903, 'author': 'k8s-ci-robot', 'body': ""Hi @dipankardas011. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 7, 10, 26, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377660469, 'issue_id': 1523688903, 'author': 'aojea', 'body': '/ok-to-test\r\n/assign @DangerOnTheRanger \r\n\r\nhe volunteered to follow up on this https://github.com/kubernetes/kubernetes/issues/114726#issuecomment-1374185371', 'created_at': datetime.datetime(2023, 1, 10, 18, 13, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377873104, 'issue_id': 1523688903, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 17, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387452761, 'issue_id': 1523688903, 'author': 'DangerOnTheRanger', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 18, 17, 29, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387452871, 'issue_id': 1523688903, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: f5567f50169961c2908e9fe136adf0a267f3522d</details>', 'created_at': datetime.datetime(2023, 1, 18, 17, 29, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1416186347, 'issue_id': 1523688903, 'author': 'dipankardas011', 'body': '@DangerOnTheRanger is this PR mergeable?', 'created_at': datetime.datetime(2023, 2, 3, 17, 34, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1416286454, 'issue_id': 1523688903, 'author': 'jpbetz', 'body': '/approve', 'created_at': datetime.datetime(2023, 2, 3, 19, 10, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1416286825, 'issue_id': 1523688903, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114894#"" title=""Author self-approved"">dipankardas011</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114894#issuecomment-1416286454"" title=""Approved"">jpbetz</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/apiserver/pkg/admission/plugin/validatingadmissionpolicy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/admission/plugin/validatingadmissionpolicy/OWNERS)~~ [jpbetz]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 2, 3, 19, 10, 39, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-07 10:26:10 UTC): Hi @dipankardas011. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

aojea on (2023-01-10 18:13:12 UTC): /ok-to-test
/assign @DangerOnTheRanger 

he volunteered to follow up on this https://github.com/kubernetes/kubernetes/issues/114726#issuecomment-1374185371

cici37 on (2023-01-10 21:17:29 UTC): /triage accepted

DangerOnTheRanger (Assginee) on (2023-01-18 17:29:42 UTC): /lgtm

k8s-ci-robot on (2023-01-18 17:29:49 UTC): LGTM label has been added.  <details>Git tree hash: f5567f50169961c2908e9fe136adf0a267f3522d</details>

dipankardas011 (Issue Creator) on (2023-02-03 17:34:04 UTC): @DangerOnTheRanger is this PR mergeable?

jpbetz on (2023-02-03 19:10:16 UTC): /approve

k8s-ci-robot on (2023-02-03 19:10:39 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114894#"" title=""Author self-approved"">dipankardas011</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114894#issuecomment-1416286454"" title=""Approved"">jpbetz</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/apiserver/pkg/admission/plugin/validatingadmissionpolicy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/admission/plugin/validatingadmissionpolicy/OWNERS)~~ [jpbetz]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1523621248,pull_request,closed,,staging/publishing: remove rules for 1.22,"#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

1.22 is not supported anymore.

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```
",nikhita,2023-01-07 08:45:51+00:00,"['dims', 'palnabarun']",2023-01-07 16:49:54+00:00,2023-01-07 12:31:27+00:00,https://github.com/kubernetes/kubernetes/pull/114892,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('area/release-eng', 'Issues or PRs related to the Release Engineering subproject'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374418033, 'issue_id': 1523621248, 'author': 'k8s-ci-robot', 'body': '@nikhita: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 7, 8, 45, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374418056, 'issue_id': 1523621248, 'author': 'nikhita', 'body': '/assign @palnabarun', 'created_at': datetime.datetime(2023, 1, 7, 8, 46, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374465312, 'issue_id': 1523621248, 'author': 'dims', 'body': '/approve\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 7, 12, 29, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374465339, 'issue_id': 1523621248, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: a69d4605f0d9f68ba04c08adcd02c8818594d63b</details>', 'created_at': datetime.datetime(2023, 1, 7, 12, 29, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374465389, 'issue_id': 1523621248, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114892#issuecomment-1374465312"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114892#"" title=""Author self-approved"">nikhita</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/publishing/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/publishing/OWNERS)~~ [dims,nikhita]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 7, 12, 29, 42, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-07 08:45:59 UTC): @nikhita: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

nikhita (Issue Creator) on (2023-01-07 08:46:09 UTC): /assign @palnabarun

dims (Assginee) on (2023-01-07 12:29:23 UTC): /approve
/lgtm

k8s-ci-robot on (2023-01-07 12:29:29 UTC): LGTM label has been added.  <details>Git tree hash: a69d4605f0d9f68ba04c08adcd02c8818594d63b</details>

k8s-ci-robot on (2023-01-07 12:29:42 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114892#issuecomment-1374465312"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114892#"" title=""Author self-approved"">nikhita</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/publishing/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/publishing/OWNERS)~~ [dims,nikhita]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1523617302,pull_request,closed,,cleanup(nodeaffinity): remove impossible scenario from test cases,"…

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

/kind cleanup

#### What this PR does / why we need it:

Currently, in NodeAffinity plugin, empty NodeSelectorTerms for a non-nil RequiredDuringScheduling means ""doesn't match with all Nodes"". But, actually, such a Pod will be rejected in validation. This PR changes this behavior to ""does match with all Nodes"".

https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/core/validation/validation.go#L4012-L4014

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Follow up: https://github.com/kubernetes/kubernetes/pull/114125/files#r1056150739

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",sanposhiho,2023-01-07 08:39:49+00:00,['alculquicondor'],2023-01-09 14:53:42+00:00,2023-01-09 14:53:40+00:00,https://github.com/kubernetes/kubernetes/pull/114891,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374417093, 'issue_id': 1523617302, 'author': 'k8s-ci-robot', 'body': '@sanposhiho: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 7, 8, 39, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374417127, 'issue_id': 1523617302, 'author': 'sanposhiho', 'body': '/cc @alculquicondor', 'created_at': datetime.datetime(2023, 1, 7, 8, 40, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374417646, 'issue_id': 1523617302, 'author': 'sanposhiho', 'body': 'Hmm. On the second thought, we may not need to change the behavior itself. \r\nLet me just remove the corresponding test cases.', 'created_at': datetime.datetime(2023, 1, 7, 8, 43, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374418206, 'issue_id': 1523617302, 'author': 'sanposhiho', 'body': '/retitle cleanup(nodeaffinity): remove impossible scenario from test cases', 'created_at': datetime.datetime(2023, 1, 7, 8, 47, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374639048, 'issue_id': 1523617302, 'author': 'sanposhiho', 'body': '/retest\r\n\r\nhttps://github.com/kubernetes/kubernetes/issues/114438', 'created_at': datetime.datetime(2023, 1, 7, 22, 40, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375626422, 'issue_id': 1523617302, 'author': 'alculquicondor', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 9, 13, 27, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375626663, 'issue_id': 1523617302, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 50aacc6403ffc30a31f5aefd65a70d6252412353</details>', 'created_at': datetime.datetime(2023, 1, 9, 13, 27, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375626965, 'issue_id': 1523617302, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114891#issuecomment-1375626422"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114891#"" title=""Author self-approved"">sanposhiho</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [alculquicondor]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 9, 13, 27, 40, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-07 08:39:57 UTC): @sanposhiho: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

sanposhiho (Issue Creator) on (2023-01-07 08:40:09 UTC): /cc @alculquicondor

sanposhiho (Issue Creator) on (2023-01-07 08:43:31 UTC): Hmm. On the second thought, we may not need to change the behavior itself. 
Let me just remove the corresponding test cases.

sanposhiho (Issue Creator) on (2023-01-07 08:47:03 UTC): /retitle cleanup(nodeaffinity): remove impossible scenario from test cases

sanposhiho (Issue Creator) on (2023-01-07 22:40:08 UTC): /retest

https://github.com/kubernetes/kubernetes/issues/114438

alculquicondor (Assginee) on (2023-01-09 13:27:11 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-09 13:27:23 UTC): LGTM label has been added.  <details>Git tree hash: 50aacc6403ffc30a31f5aefd65a70d6252412353</details>

k8s-ci-robot on (2023-01-09 13:27:40 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114891#issuecomment-1375626422"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114891#"" title=""Author self-approved"">sanposhiho</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [alculquicondor]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1523574967,pull_request,closed,,feature(InterPodAffinity): return Skip in PreFilter,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

/kind feature

#### What this PR does / why we need it:

return Skip in InterPodAffinity PreFilter when **both** of the following condition is satisfied:
- no PodAffinity and PodAntiAffinity on an incoming Pod.
- no PodAntiAffinity on existing Pod which match with an incoming Pod.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Part of https://github.com/kubernetes/kubernetes/issues/114399

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Scheduler skips InterPodAffinity Filter plugin when InterPodAffinity Filter plugin has nothing to do with a Pod.
It may affect some metrics values related to the InterPodAffinity Filter plugin.
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",sanposhiho,2023-01-07 07:38:12+00:00,['ahg-g'],2023-01-19 04:36:39+00:00,2023-01-19 04:36:36+00:00,https://github.com/kubernetes/kubernetes/pull/114889,"[('area/test', None), ('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374406509, 'issue_id': 1523574967, 'author': 'k8s-ci-robot', 'body': '@sanposhiho: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 7, 7, 38, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1386673516, 'issue_id': 1523574967, 'author': 'sanposhiho', 'body': '@ahg-g Thanks for reviewing. Fixed.', 'created_at': datetime.datetime(2023, 1, 18, 8, 34, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1386796562, 'issue_id': 1523574967, 'author': 'sanposhiho', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 18, 10, 8, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387249440, 'issue_id': 1523574967, 'author': 'ahg-g', 'body': 'Thanks, please squash.', 'created_at': datetime.datetime(2023, 1, 18, 15, 24, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396338815, 'issue_id': 1523574967, 'author': 'sanposhiho', 'body': 'Squashed', 'created_at': datetime.datetime(2023, 1, 19, 1, 51, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396361601, 'issue_id': 1523574967, 'author': 'ahg-g', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 19, 2, 27, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396361664, 'issue_id': 1523574967, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 3024c224cabeb3612d0e1d408301eba43176797f</details>', 'created_at': datetime.datetime(2023, 1, 19, 2, 27, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396361822, 'issue_id': 1523574967, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114889#issuecomment-1396361601"" title=""Approved"">ahg-g</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114889#"" title=""Author self-approved"">sanposhiho</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [ahg-g]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 19, 2, 27, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396406362, 'issue_id': 1523574967, 'author': 'sanposhiho', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 19, 3, 55, 26, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-07 07:38:20 UTC): @sanposhiho: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

sanposhiho (Issue Creator) on (2023-01-18 08:34:45 UTC): @ahg-g Thanks for reviewing. Fixed.

sanposhiho (Issue Creator) on (2023-01-18 10:08:08 UTC): /retest

ahg-g (Assginee) on (2023-01-18 15:24:25 UTC): Thanks, please squash.

sanposhiho (Issue Creator) on (2023-01-19 01:51:18 UTC): Squashed

ahg-g (Assginee) on (2023-01-19 02:27:25 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-19 02:27:32 UTC): LGTM label has been added.  <details>Git tree hash: 3024c224cabeb3612d0e1d408301eba43176797f</details>

k8s-ci-robot on (2023-01-19 02:27:52 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114889#issuecomment-1396361601"" title=""Approved"">ahg-g</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114889#"" title=""Author self-approved"">sanposhiho</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [ahg-g]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

sanposhiho (Issue Creator) on (2023-01-19 03:55:26 UTC): /retest

"
1523471498,pull_request,closed,,cleanup: simplify pickOneNodeForPreemption in preemption,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

Simplify the implementation logic of `pickOneNodeForPreemption` to make it clearer.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

NONE

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs
NONE
```
",binacs,2023-01-07 04:50:18+00:00,"['damemi', 'sanposhiho']",2023-02-15 00:15:54+00:00,2023-02-14 22:25:51+00:00,https://github.com/kubernetes/kubernetes/pull/114887,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374378484, 'issue_id': 1523471498, 'author': 'k8s-ci-robot', 'body': '@BinacsLee: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 7, 4, 50, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379761650, 'issue_id': 1523471498, 'author': 'binacs', 'body': 'kindly ping @sanposhiho', 'created_at': datetime.datetime(2023, 1, 12, 3, 20, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1383071711, 'issue_id': 1523471498, 'author': 'sanposhiho', 'body': ""Sorry, I cannot take time for reviewing this soon. I'll definitely keep this in mind and hopefully review it by next weekend. 🙏 \r\n\r\n/assign"", 'created_at': datetime.datetime(2023, 1, 15, 6, 48, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1403012836, 'issue_id': 1523471498, 'author': 'binacs', 'body': 'kindly ping @sanposhiho', 'created_at': datetime.datetime(2023, 1, 25, 2, 29, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1407642652, 'issue_id': 1523471498, 'author': 'binacs', 'body': 'hi @sanposhiho , thanks for review!\r\n\r\nI have updated the PR, PTAL', 'created_at': datetime.datetime(2023, 1, 29, 11, 57, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1418315864, 'issue_id': 1523471498, 'author': 'binacs', 'body': 'ping @sanposhiho', 'created_at': datetime.datetime(2023, 2, 6, 0, 23, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1419261200, 'issue_id': 1523471498, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: d7f665e9582cb20f3cec46c58a6f49cb53d60c2f</details>', 'created_at': datetime.datetime(2023, 2, 6, 15, 24, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1419261559, 'issue_id': 1523471498, 'author': 'sanposhiho', 'body': '/assign @damemi\r\n\r\nFor approval', 'created_at': datetime.datetime(2023, 2, 6, 15, 24, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1428028515, 'issue_id': 1523471498, 'author': 'binacs', 'body': 'kindly ping @damemi', 'created_at': datetime.datetime(2023, 2, 13, 14, 25, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1430287393, 'issue_id': 1523471498, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114887#"" title=""Author self-approved"">binacs</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114887#pullrequestreview-1298299586"" title=""Approved"">damemi</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114887#pullrequestreview-1285428841"" title=""LGTM"">sanposhiho</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [damemi]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 2, 14, 19, 45, 49, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-07 04:50:26 UTC): @BinacsLee: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

binacs (Issue Creator) on (2023-01-12 03:20:27 UTC): kindly ping @sanposhiho

sanposhiho (Assginee) on (2023-01-15 06:48:54 UTC): Sorry, I cannot take time for reviewing this soon. I'll definitely keep this in mind and hopefully review it by next weekend. 🙏 

/assign

binacs (Issue Creator) on (2023-01-25 02:29:58 UTC): kindly ping @sanposhiho

binacs (Issue Creator) on (2023-01-29 11:57:59 UTC): hi @sanposhiho , thanks for review!

I have updated the PR, PTAL

binacs (Issue Creator) on (2023-02-06 00:23:58 UTC): ping @sanposhiho

k8s-ci-robot on (2023-02-06 15:24:07 UTC): LGTM label has been added.  <details>Git tree hash: d7f665e9582cb20f3cec46c58a6f49cb53d60c2f</details>

sanposhiho (Assginee) on (2023-02-06 15:24:19 UTC): /assign @damemi

For approval

binacs (Issue Creator) on (2023-02-13 14:25:32 UTC): kindly ping @damemi

k8s-ci-robot on (2023-02-14 19:45:49 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114887#"" title=""Author self-approved"">binacs</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114887#pullrequestreview-1298299586"" title=""Approved"">damemi</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114887#pullrequestreview-1285428841"" title=""LGTM"">sanposhiho</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [damemi]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1523471051,pull_request,closed,,kubectl: use autoscaling v2 for hpa,"Signed-off-by: Amir Alavi <amiralavi7@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind feature
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
autoscaling/v2 was introduced in 1.23 but is not being used in kubectl for querying HPA. 

```
autoscaling/v2beta2 HorizontalPodAutoscaler is deprecated in v1.23+, unavailable in v1.26+; use autoscaling/v2 HorizontalPodAutoscaler
```

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #114908 

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Use HorizontalPodAutoscaler v2 for kubectl
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",a7i,2023-01-07 04:49:32+00:00,['rikatz'],2023-01-24 16:26:04+00:00,2023-01-17 10:54:33+00:00,https://github.com/kubernetes/kubernetes/pull/114886,"[('priority/backlog', 'Higher priority than priority/awaiting-more-evidence.'), ('area/kubectl', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/XL', 'Denotes a PR that changes 500-999 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1374378366, 'issue_id': 1523471051, 'author': 'k8s-ci-robot', 'body': ""Welcome @a7i! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:"", 'created_at': datetime.datetime(2023, 1, 7, 4, 49, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374378368, 'issue_id': 1523471051, 'author': 'k8s-ci-robot', 'body': ""Hi @a7i. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 7, 4, 49, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374422518, 'issue_id': 1523471051, 'author': 'pacoxu', 'body': '/ok-to-test\r\nsound valid to me', 'created_at': datetime.datetime(2023, 1, 7, 9, 12, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375160489, 'issue_id': 1523471051, 'author': 'ardaguclu', 'body': ""/triage accepted\r\n/priority backlog\r\n\r\nThanks for the PR. Looks good to me. I'll defer to @soltysh @KnVerey for the approval"", 'created_at': datetime.datetime(2023, 1, 9, 6, 22, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1381240492, 'issue_id': 1523471051, 'author': 'rikatz', 'body': '/lgtm\nThanks!', 'created_at': datetime.datetime(2023, 1, 13, 2, 37, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1381240559, 'issue_id': 1523471051, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 73de9e5e5f9f7fa7f47227dad9e6ef73a7340a81</details>', 'created_at': datetime.datetime(2023, 1, 13, 2, 38, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1385115909, 'issue_id': 1523471051, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114886#"" title=""Author self-approved"">a7i</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114886#pullrequestreview-1251226275"" title=""Approved"">soltysh</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [soltysh]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 17, 9, 48, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1402228065, 'issue_id': 1523471051, 'author': 'KnVerey', 'body': '@soltysh since the autoscaling/v2beta2 is not served in 1.26, do we need to backport this change to that version? It looks like `describe` at least will fall back on the v1 version of the API, but that might be unexpected.', 'created_at': datetime.datetime(2023, 1, 24, 16, 26, 3, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-07 04:49:40 UTC): Welcome @a7i! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:

k8s-ci-robot on (2023-01-07 04:49:41 UTC): Hi @a7i. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

pacoxu on (2023-01-07 09:12:31 UTC): /ok-to-test
sound valid to me

ardaguclu on (2023-01-09 06:22:26 UTC): /triage accepted
/priority backlog

Thanks for the PR. Looks good to me. I'll defer to @soltysh @KnVerey for the approval

rikatz (Assginee) on (2023-01-13 02:37:56 UTC): /lgtm
Thanks!

k8s-ci-robot on (2023-01-13 02:38:04 UTC): LGTM label has been added.  <details>Git tree hash: 73de9e5e5f9f7fa7f47227dad9e6ef73a7340a81</details>

k8s-ci-robot on (2023-01-17 09:48:36 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114886#"" title=""Author self-approved"">a7i</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114886#pullrequestreview-1251226275"" title=""Approved"">soltysh</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [soltysh]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

KnVerey on (2023-01-24 16:26:03 UTC): @soltysh since the autoscaling/v2beta2 is not served in 1.26, do we need to backport this change to that version? It looks like `describe` at least will fall back on the v1 version of the API, but that might be unexpected.

"
1523393284,pull_request,closed,,Enable all features during etcd storage path test,"Signed-off-by: Monis Khan <mok@microsoft.com>

/kind cleanup
/triage accepted
/assign @liggitt 

```release-note
NONE
```",enj,2023-01-07 01:42:51+00:00,['liggitt'],2023-01-07 05:01:40+00:00,2023-01-07 05:01:38+00:00,https://github.com/kubernetes/kubernetes/pull/114885,"[('area/test', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1374359972, 'issue_id': 1523393284, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 7, 2, 59, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374359985, 'issue_id': 1523393284, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 7b62cc899a039423c67ae37dd7636c61685da47c</details>', 'created_at': datetime.datetime(2023, 1, 7, 2, 59, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374359991, 'issue_id': 1523393284, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114885#"" title=""Author self-approved"">enj</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114885#issuecomment-1374359972"" title=""Approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[test/integration/etcd/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/integration/etcd/OWNERS)~~ [enj,liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 7, 2, 59, 32, tzinfo=datetime.timezone.utc)}]","liggitt (Assginee) on (2023-01-07 02:59:26 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-07 02:59:31 UTC): LGTM label has been added.  <details>Git tree hash: 7b62cc899a039423c67ae37dd7636c61685da47c</details>

k8s-ci-robot on (2023-01-07 02:59:32 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114885#"" title=""Author self-approved"">enj</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114885#issuecomment-1374359972"" title=""Approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/integration/etcd/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/integration/etcd/OWNERS)~~ [enj,liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1523182192,pull_request,closed,,deps: Bump cAdvisor to v0.47.1,"Signed-off-by: David Porter <david@porter.me>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind feature

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

Bump cAdvisor to latest version. See https://github.com/google/cadvisor/compare/v0.46.0...v0.47.1 for diff.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Updated cAdvisor to v0.47.0
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs
```
",bobbypage,2023-01-06 21:20:04+00:00,"['liggitt', 'pacoxu']",2023-01-12 17:04:57+00:00,2023-01-12 17:04:55+00:00,https://github.com/kubernetes/kubernetes/pull/114883,"[('area/kubelet', None), ('area/apiserver', None), ('area/kubectl', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/cloudprovider', None), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/cluster-lifecycle', 'Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/instrumentation', 'Categorizes an issue or PR as relevant to SIG Instrumentation.'), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('area/code-generation', ''), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374144695, 'issue_id': 1523182192, 'author': 'k8s-ci-robot', 'body': '@bobbypage: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 6, 21, 20, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374144831, 'issue_id': 1523182192, 'author': 'bobbypage', 'body': '/assign @liggitt', 'created_at': datetime.datetime(2023, 1, 6, 21, 20, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374148189, 'issue_id': 1523182192, 'author': 'bobbypage', 'body': '/cc @dims', 'created_at': datetime.datetime(2023, 1, 6, 21, 22, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374165381, 'issue_id': 1523182192, 'author': 'bobbypage', 'body': 'will rebase and fix the build issue...', 'created_at': datetime.datetime(2023, 1, 6, 21, 39, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374172764, 'issue_id': 1523182192, 'author': 'bobbypage', 'body': ""rebased and removed accelerator metrics from kubelet. The feature gate is GA'd and locked as part of https://github.com/kubernetes/kubernetes/pull/110940\r\n\r\nxref: https://github.com/kubernetes/enhancements/issues/1867"", 'created_at': datetime.datetime(2023, 1, 6, 21, 47, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374172874, 'issue_id': 1523182192, 'author': 'bobbypage', 'body': '/cc @pacoxu', 'created_at': datetime.datetime(2023, 1, 6, 21, 47, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374175024, 'issue_id': 1523182192, 'author': 'dims', 'body': ""/hold\r\nlet's hang on to this until we have the `cloud.google.com/go*` problems with publishing bot.\r\n\r\ncc @nikhita @liggitt"", 'created_at': datetime.datetime(2023, 1, 6, 21, 50, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376574406, 'issue_id': 1523182192, 'author': 'dims', 'body': 'hmm, https://github.com/kubernetes/kubernetes/issues/56876 is closed (publishing-bot is working fine now), however, we need to rebase!', 'created_at': datetime.datetime(2023, 1, 10, 1, 4, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376580399, 'issue_id': 1523182192, 'author': 'bobbypage', 'body': 'rebased!', 'created_at': datetime.datetime(2023, 1, 10, 1, 10, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376617169, 'issue_id': 1523182192, 'author': 'dims', 'body': 'needs a bit more \r\n```\r\n2023/01/10 01:16:36 Good news! Unwanted module ""github.com/pkg/errors"" dropped the following dependants:\r\n2023/01/10 01:16:36    github.com/moby/term\r\n2023/01/10 01:16:36 !!! Remove those from status.unwantedReferences[""github.com/pkg/errors""] in /home/prow/go/src/k8s.io/kubernetes/hack/unwanted-dependencies.json to ensure they don\'t get reintroduced.\r\n```', 'created_at': datetime.datetime(2023, 1, 10, 1, 59, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376643868, 'issue_id': 1523182192, 'author': 'pacoxu', 'body': 'https://github.com/kubernetes/kubernetes/blob/1d6ae20301ba36c016af3d696716bd3eca5b0f89/hack/unwanted-dependencies.json#L105\r\n\r\n- update `hack/unwanted-dependencies.json`\r\n- run `hack/lint-dependencies.sh` to check if the `status.unwantedReferences` is updated correctly.', 'created_at': datetime.datetime(2023, 1, 10, 2, 35, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377875277, 'issue_id': 1523182192, 'author': 'cici37', 'body': '/remove-sig api-machinery', 'created_at': datetime.datetime(2023, 1, 10, 21, 18, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379647143, 'issue_id': 1523182192, 'author': 'bobbypage', 'body': 'Updated the PR to bump to cAdvisor v0.47.1 which includes https://github.com/google/cadvisor/pull/3231. This points to `cloud.google.com/go` to address https://github.com/kubernetes/kubernetes/pull/114883#discussion_r1065284014', 'created_at': datetime.datetime(2023, 1, 12, 0, 17, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379648261, 'issue_id': 1523182192, 'author': 'dims', 'body': 'thanks @bobbypage sorry about the 2-step-forward-1-step-back-tango :)', 'created_at': datetime.datetime(2023, 1, 12, 0, 18, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379811301, 'issue_id': 1523182192, 'author': 'pacoxu', 'body': '```\r\n-Direct Dependencies: 211 \r\n-Transitive Dependencies: 234 \r\n-Total Dependencies: 285 \r\n+Direct Dependencies: 209 \r\n+Transitive Dependencies: 233 \r\n+Total Dependencies: 284 \r\n\r\n-github.com/mindprince/gonvml\r\n```\r\nIt looks good now.\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 12, 4, 52, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379811357, 'issue_id': 1523182192, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: fd229e8b05b0a22ab6fec6d439f83097076a7af2</details>', 'created_at': datetime.datetime(2023, 1, 12, 4, 52, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380008742, 'issue_id': 1523182192, 'author': 'xuzhenglun', 'body': ""After this pr is merged, are we able to disable `cgo` when building `kubelet` ?  https://github.com/kubernetes/kubernetes/blob/master/hack/lib/golang.sh#L422\r\n\r\nbecause in my understand the only `cgo` dependency is `go-nvml` lib. If this dependency is gone, It's seems like there is no reason to build `kubelet` with `cgo` (static binary is easier to build and distribute."", 'created_at': datetime.datetime(2023, 1, 12, 9, 3, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380364934, 'issue_id': 1523182192, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 12, 13, 34, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380365521, 'issue_id': 1523182192, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114883#"" title=""Author self-approved"">bobbypage</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114883#issuecomment-1380364934"" title=""Approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [liggitt]\n- ~~[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)~~ [liggitt]\n- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [liggitt]\n- ~~[pkg/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [liggitt]\n- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 12, 13, 34, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380606709, 'issue_id': 1523182192, 'author': 'liggitt', 'body': '/hold cancel', 'created_at': datetime.datetime(2023, 1, 12, 15, 56, 19, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-06 21:20:13 UTC): @bobbypage: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

bobbypage (Issue Creator) on (2023-01-06 21:20:25 UTC): /assign @liggitt

bobbypage (Issue Creator) on (2023-01-06 21:22:41 UTC): /cc @dims

bobbypage (Issue Creator) on (2023-01-06 21:39:52 UTC): will rebase and fix the build issue...

bobbypage (Issue Creator) on (2023-01-06 21:47:49 UTC): rebased and removed accelerator metrics from kubelet. The feature gate is GA'd and locked as part of https://github.com/kubernetes/kubernetes/pull/110940

xref: https://github.com/kubernetes/enhancements/issues/1867

bobbypage (Issue Creator) on (2023-01-06 21:47:58 UTC): /cc @pacoxu

dims on (2023-01-06 21:50:18 UTC): /hold
let's hang on to this until we have the `cloud.google.com/go*` problems with publishing bot.

cc @nikhita @liggitt

dims on (2023-01-10 01:04:06 UTC): hmm, https://github.com/kubernetes/kubernetes/issues/56876 is closed (publishing-bot is working fine now), however, we need to rebase!

bobbypage (Issue Creator) on (2023-01-10 01:10:04 UTC): rebased!

dims on (2023-01-10 01:59:18 UTC): needs a bit more 
```
2023/01/10 01:16:36 Good news! Unwanted module ""github.com/pkg/errors"" dropped the following dependants:
2023/01/10 01:16:36    github.com/moby/term
2023/01/10 01:16:36 !!! Remove those from status.unwantedReferences[""github.com/pkg/errors""] in /home/prow/go/src/k8s.io/kubernetes/hack/unwanted-dependencies.json to ensure they don't get reintroduced.
```

pacoxu (Assginee) on (2023-01-10 02:35:04 UTC): https://github.com/kubernetes/kubernetes/blob/1d6ae20301ba36c016af3d696716bd3eca5b0f89/hack/unwanted-dependencies.json#L105

- update `hack/unwanted-dependencies.json`
- run `hack/lint-dependencies.sh` to check if the `status.unwantedReferences` is updated correctly.

cici37 on (2023-01-10 21:18:38 UTC): /remove-sig api-machinery

bobbypage (Issue Creator) on (2023-01-12 00:17:12 UTC): Updated the PR to bump to cAdvisor v0.47.1 which includes https://github.com/google/cadvisor/pull/3231. This points to `cloud.google.com/go` to address https://github.com/kubernetes/kubernetes/pull/114883#discussion_r1065284014

dims on (2023-01-12 00:18:52 UTC): thanks @bobbypage sorry about the 2-step-forward-1-step-back-tango :)

pacoxu (Assginee) on (2023-01-12 04:52:38 UTC): ```
-Direct Dependencies: 211 
-Transitive Dependencies: 234 
-Total Dependencies: 285 
+Direct Dependencies: 209 
+Transitive Dependencies: 233 
+Total Dependencies: 284 

-github.com/mindprince/gonvml
```
It looks good now.
/lgtm

k8s-ci-robot on (2023-01-12 04:52:44 UTC): LGTM label has been added.  <details>Git tree hash: fd229e8b05b0a22ab6fec6d439f83097076a7af2</details>

xuzhenglun on (2023-01-12 09:03:45 UTC): After this pr is merged, are we able to disable `cgo` when building `kubelet` ?  https://github.com/kubernetes/kubernetes/blob/master/hack/lib/golang.sh#L422

because in my understand the only `cgo` dependency is `go-nvml` lib. If this dependency is gone, It's seems like there is no reason to build `kubelet` with `cgo` (static binary is easier to build and distribute.

liggitt (Assginee) on (2023-01-12 13:34:18 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-12 13:34:44 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114883#"" title=""Author self-approved"">bobbypage</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114883#issuecomment-1380364934"" title=""Approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [liggitt]
- ~~[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)~~ [liggitt]
- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [liggitt]
- ~~[pkg/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [liggitt]
- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

liggitt (Assginee) on (2023-01-12 15:56:19 UTC): /hold cancel

"
1523128008,pull_request,closed,,kms gRPC test: wait until server is healthy,"Signed-off-by: Monis Khan <mok@microsoft.com>

/kind bug
/kind failing-test
/kind flake

```release-note
NONE
```",enj,2023-01-06 20:33:17+00:00,['liggitt'],2023-01-07 02:59:29+00:00,2023-01-07 02:59:28+00:00,https://github.com/kubernetes/kubernetes/pull/114881,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('kind/flake', 'Categorizes issue or PR as related to a flaky test.'), ('area/release-eng', 'Issues or PRs related to the Release Engineering subproject'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('kind/failing-test', 'Categorizes issue or PR as related to a consistently or frequently failing test.'), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1374114015, 'issue_id': 1523128008, 'author': 'enj', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 6, 20, 47, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374124755, 'issue_id': 1523128008, 'author': 'liggitt', 'body': '/lgtm\r\n/approve\r\n/retest', 'created_at': datetime.datetime(2023, 1, 6, 20, 59, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374124819, 'issue_id': 1523128008, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 5fbf1c0e877ca4061ff6749385f18bd501371328</details>', 'created_at': datetime.datetime(2023, 1, 6, 20, 59, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374236409, 'issue_id': 1523128008, 'author': 'liggitt', 'body': '@enj publishing bot verify is unhappy... it needs the new dependency added', 'created_at': datetime.datetime(2023, 1, 6, 23, 2, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374252270, 'issue_id': 1523128008, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114881#"" title=""Author self-approved"">enj</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114881#issuecomment-1374124755"" title=""Approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/publishing/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/publishing/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kms/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kms/OWNERS)~~ [enj,liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 6, 23, 27, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374359738, 'issue_id': 1523128008, 'author': 'liggitt', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 7, 2, 57, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374359749, 'issue_id': 1523128008, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 8d00e28c5c0e93a4ff018fe604a204cfc9673bdf</details>', 'created_at': datetime.datetime(2023, 1, 7, 2, 57, 45, tzinfo=datetime.timezone.utc)}]","enj (Issue Creator) on (2023-01-06 20:47:18 UTC): /triage accepted

liggitt (Assginee) on (2023-01-06 20:59:23 UTC): /lgtm
/approve
/retest

k8s-ci-robot on (2023-01-06 20:59:30 UTC): LGTM label has been added.  <details>Git tree hash: 5fbf1c0e877ca4061ff6749385f18bd501371328</details>

liggitt (Assginee) on (2023-01-06 23:02:32 UTC): @enj publishing bot verify is unhappy... it needs the new dependency added

k8s-ci-robot on (2023-01-06 23:27:26 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114881#"" title=""Author self-approved"">enj</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114881#issuecomment-1374124755"" title=""Approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/publishing/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/publishing/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kms/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kms/OWNERS)~~ [enj,liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

liggitt (Assginee) on (2023-01-07 02:57:40 UTC): /lgtm

k8s-ci-robot on (2023-01-07 02:57:45 UTC): LGTM label has been added.  <details>Git tree hash: 8d00e28c5c0e93a4ff018fe604a204cfc9673bdf</details>

"
1523040764,pull_request,closed,,Documentation fix,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind documentation
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
Fixes the documentation
#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:
Minor changes in documentation for maxSurge ('during' was put twice) and maxUnavailable terms for DaemonSets
#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note

```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",MandarJKulkarni,2023-01-06 19:30:17+00:00,[],2023-01-07 11:36:45+00:00,2023-01-07 11:36:12+00:00,https://github.com/kubernetes/kubernetes/pull/114880,"[('kind/documentation', 'Categorizes issue or PR as related to documentation.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('kind/api-change', 'Categorizes issue or PR as related to adding, removing, or otherwise changing an API'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('do-not-merge/release-note-label-needed', ""Indicates that a PR should not merge because it's missing one of the release note labels.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374038008, 'issue_id': 1523040764, 'author': 'k8s-ci-robot', 'body': '@MandarJKulkarni: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 6, 19, 30, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374038079, 'issue_id': 1523040764, 'author': 'k8s-ci-robot', 'body': '@MandarJKulkarni: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 6, 19, 30, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374038086, 'issue_id': 1523040764, 'author': 'k8s-ci-robot', 'body': ""Welcome @MandarJKulkarni! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:"", 'created_at': datetime.datetime(2023, 1, 6, 19, 30, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374038090, 'issue_id': 1523040764, 'author': 'k8s-ci-robot', 'body': ""Hi @MandarJKulkarni. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 6, 19, 30, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374092665, 'issue_id': 1523040764, 'author': 'k8s-triage-robot', 'body': 'This PR [may require API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#what-apis-need-to-be-reviewed).\n\nIf so, when the changes are ready, [complete the pre-review checklist and request an API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#mechanics).\n\nStatus of requested reviews is tracked in the [API Review project](https://github.com/orgs/kubernetes/projects/13).', 'created_at': datetime.datetime(2023, 1, 6, 20, 24, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374121735, 'issue_id': 1523040764, 'author': 'alculquicondor', 'body': 'This is a generated file. You need to update these 2 files instead:\r\n- https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api/apps/v1/types.go\r\n- https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/apps/types.go\r\n\r\n\r\nAnd run `make update`', 'created_at': datetime.datetime(2023, 1, 6, 20, 56, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374450609, 'issue_id': 1523040764, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114880#"" title=""Author self-approved"">MandarJKulkarni</a>*\n\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 7, 11, 36, 45, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-06 19:30:18 UTC): @MandarJKulkarni: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-06 19:30:24 UTC): @MandarJKulkarni: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-06 19:30:24 UTC): Welcome @MandarJKulkarni! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:

k8s-ci-robot on (2023-01-06 19:30:25 UTC): Hi @MandarJKulkarni. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-triage-robot on (2023-01-06 20:24:26 UTC): This PR [may require API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#what-apis-need-to-be-reviewed).

If so, when the changes are ready, [complete the pre-review checklist and request an API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#mechanics).

Status of requested reviews is tracked in the [API Review project](https://github.com/orgs/kubernetes/projects/13).

alculquicondor on (2023-01-06 20:56:04 UTC): This is a generated file. You need to update these 2 files instead:
- https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api/apps/v1/types.go
- https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/apps/types.go


And run `make update`

k8s-ci-robot on (2023-01-07 11:36:45 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114880#"" title=""Author self-approved"">MandarJKulkarni</a>*


The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:


Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1523035119,pull_request,closed,,Bump kube-openapi,"#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

Update `k8s.io/kube-openapi` to include https://github.com/kubernetes/kube-openapi/pull/344, in order to update `github.com/go-openapi/jsonreference`.

Fixes https://github.com/kubernetes/kube-openapi/issues/356

Remove `k8s.io/kube-openapi` from the exceptions in `hack/unwanted-dependencies.json`.

#### Which issue(s) this PR fixes:

Follow-up of #114912

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?

```release-note
NONE
```

/cc @apelisse
/hold",olivierlemasle,2023-01-06 19:24:20+00:00,"['liggitt', 'apelisse', 'deads2k']",2023-01-11 22:38:40+00:00,2023-01-11 22:28:21+00:00,https://github.com/kubernetes/kubernetes/pull/114879,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('area/kubectl', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/cloudprovider', None), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('sig/cluster-lifecycle', 'Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/instrumentation', 'Categorizes an issue or PR as relevant to SIG Instrumentation.'), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('area/code-generation', ''), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1376191058, 'issue_id': 1523035119, 'author': 'olivierlemasle', 'body': 'Now that https://github.com/kubernetes/kube-openapi/pull/344 has been merged:\r\n/hold cancel', 'created_at': datetime.datetime(2023, 1, 9, 19, 47, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376407138, 'issue_id': 1523035119, 'author': 'olivierlemasle', 'body': '/auto-cc', 'created_at': datetime.datetime(2023, 1, 9, 22, 17, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376711635, 'issue_id': 1523035119, 'author': 'apelisse', 'body': 'Thanks,\r\n/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 10, 4, 17, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376711719, 'issue_id': 1523035119, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: a18d544a947f24424a619dc5e2a96db2291c7696</details>', 'created_at': datetime.datetime(2023, 1, 10, 4, 17, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377018779, 'issue_id': 1523035119, 'author': 'olivierlemasle', 'body': '/assign @deads2k @liggitt', 'created_at': datetime.datetime(2023, 1, 10, 10, 10, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377606105, 'issue_id': 1523035119, 'author': 'liggitt', 'body': '/test pull-kubernetes-dependencies\r\nto run check added in https://github.com/kubernetes/kubernetes/pull/114952', 'created_at': datetime.datetime(2023, 1, 10, 17, 26, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377876676, 'issue_id': 1523035119, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 19, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378562156, 'issue_id': 1523035119, 'author': 'olivierlemasle', 'body': 'Had to rebase to fix a merge conflict', 'created_at': datetime.datetime(2023, 1, 11, 10, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379487843, 'issue_id': 1523035119, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 11, 21, 10, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379488009, 'issue_id': 1523035119, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: e11056da55e06751fa843ca743bc13aa252d30ec</details>', 'created_at': datetime.datetime(2023, 1, 11, 21, 10, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379491703, 'issue_id': 1523035119, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114879#issuecomment-1376711635"" title=""Approved"">apelisse</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114879#issuecomment-1379487843"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114879#"" title=""Author self-approved"">olivierlemasle</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [liggitt]\n- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apimachinery/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cluster-bootstrap/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cluster-bootstrap/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cri-api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cri-api/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/csi-translation-lib/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/csi-translation-lib/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kube-controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-controller-manager/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kube-proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-proxy/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kube-scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-scheduler/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [apelisse,liggitt]\n- ~~[staging/src/k8s.io/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubelet/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/mount-utils/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/mount-utils/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/noderesourcetopology-api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/noderesourcetopology-api/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [liggitt]\n- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 11, 21, 14, 13, tzinfo=datetime.timezone.utc)}]","olivierlemasle (Issue Creator) on (2023-01-09 19:47:30 UTC): Now that https://github.com/kubernetes/kube-openapi/pull/344 has been merged:
/hold cancel

olivierlemasle (Issue Creator) on (2023-01-09 22:17:52 UTC): /auto-cc

apelisse (Assginee) on (2023-01-10 04:17:06 UTC): Thanks,
/lgtm
/approve

k8s-ci-robot on (2023-01-10 04:17:12 UTC): LGTM label has been added.  <details>Git tree hash: a18d544a947f24424a619dc5e2a96db2291c7696</details>

olivierlemasle (Issue Creator) on (2023-01-10 10:10:49 UTC): /assign @deads2k @liggitt

liggitt (Assginee) on (2023-01-10 17:26:56 UTC): /test pull-kubernetes-dependencies
to run check added in https://github.com/kubernetes/kubernetes/pull/114952

cici37 on (2023-01-10 21:19:18 UTC): /triage accepted

olivierlemasle (Issue Creator) on (2023-01-11 10:49:00 UTC): Had to rebase to fix a merge conflict

liggitt (Assginee) on (2023-01-11 21:10:19 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-11 21:10:29 UTC): LGTM label has been added.  <details>Git tree hash: e11056da55e06751fa843ca743bc13aa252d30ec</details>

k8s-ci-robot on (2023-01-11 21:14:13 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114879#issuecomment-1376711635"" title=""Approved"">apelisse</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114879#issuecomment-1379487843"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114879#"" title=""Author self-approved"">olivierlemasle</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [liggitt]
- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apimachinery/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cluster-bootstrap/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cluster-bootstrap/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cri-api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cri-api/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/csi-translation-lib/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/csi-translation-lib/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kube-controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-controller-manager/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kube-proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-proxy/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kube-scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-scheduler/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [apelisse,liggitt]
- ~~[staging/src/k8s.io/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubelet/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/mount-utils/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/mount-utils/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/noderesourcetopology-api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/noderesourcetopology-api/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [liggitt]
- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1523002449,pull_request,closed,,Ipvs: remove the scheduler validation,"#### What type of PR is this?

/kind bug

#### What this PR does / why we need it:

The `ipvs` scheduler was restricted to the ones existing in the kernel when proxy-mode=ipvs was implemented. However, new schedulers have been added since then and yet new ones may be implemented. It is also possible for a user to write their own ipvs scheduler.

This PR removes the scheduler validation and thus allow any current, future or own developed schedulers.

The validation of the configured scheduler is done by trying to use it, as implemented in PR https://github.com/kubernetes/kubernetes/pull/114669. From user perspective this should not be worse than to validate the strings, the `kube-proxy` will fail to start in both cases.

#### Which issue(s) this PR fixes:

Fixes #114619

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?

```release-note
IPVS: Any ipvs scheduler can now be configured. If a un-usable scheduler is configured `kube-proxy` will re-start and the logs must be checked (same as before but different log printouts).
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:


```docs

```

",uablrek,2023-01-06 18:53:48+00:00,['danwinship'],2023-01-17 20:52:47+00:00,2023-01-17 19:18:47+00:00,https://github.com/kubernetes/kubernetes/pull/114878,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('area/kube-proxy', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('area/ipvs', None), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1374006913, 'issue_id': 1523002449, 'author': 'k8s-ci-robot', 'body': 'Skipping CI for Draft Pull Request.\nIf you want CI signal for your change, please convert it to an actual PR.\nYou can still manually trigger a test run with `/test all`', 'created_at': datetime.datetime(2023, 1, 6, 18, 53, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374007014, 'issue_id': 1523002449, 'author': 'k8s-ci-robot', 'body': '@uablrek: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 6, 18, 53, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374007595, 'issue_id': 1523002449, 'author': 'uablrek', 'body': '/sig network\r\n/area ipvs\r\n/area kube-proxy', 'created_at': datetime.datetime(2023, 1, 6, 18, 54, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374432481, 'issue_id': 1523002449, 'author': 'uablrek', 'body': '/test pull-kubernetes-unit', 'created_at': datetime.datetime(2023, 1, 7, 10, 19, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374468628, 'issue_id': 1523002449, 'author': 'uablrek', 'body': '/retest-required', 'created_at': datetime.datetime(2023, 1, 7, 12, 42, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1384133603, 'issue_id': 1523002449, 'author': 'danwinship', 'body': '/test help', 'created_at': datetime.datetime(2023, 1, 16, 14, 18, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1384133667, 'issue_id': 1523002449, 'author': 'k8s-ci-robot', 'body': '@danwinship: The specified target(s) for `/test` were not found.\nThe following commands are available to trigger required jobs:\n* `/test pull-kubernetes-conformance-kind-ga-only-parallel`\n* `/test pull-kubernetes-coverage-unit`\n* `/test pull-kubernetes-dependencies`\n* `/test pull-kubernetes-dependencies-go-canary`\n* `/test pull-kubernetes-e2e-gce`\n* `/test pull-kubernetes-e2e-gce-100-performance`\n* `/test pull-kubernetes-e2e-gce-big-performance`\n* `/test pull-kubernetes-e2e-gce-canary`\n* `/test pull-kubernetes-e2e-gce-cos`\n* `/test pull-kubernetes-e2e-gce-cos-canary`\n* `/test pull-kubernetes-e2e-gce-cos-no-stage`\n* `/test pull-kubernetes-e2e-gce-network-proxy-http-connect`\n* `/test pull-kubernetes-e2e-gce-scale-performance-manual`\n* `/test pull-kubernetes-e2e-kind`\n* `/test pull-kubernetes-e2e-kind-ipv6`\n* `/test pull-kubernetes-integration`\n* `/test pull-kubernetes-integration-go-canary`\n* `/test pull-kubernetes-kubemark-e2e-gce-scale`\n* `/test pull-kubernetes-node-e2e-containerd`\n* `/test pull-kubernetes-typecheck`\n* `/test pull-kubernetes-unit`\n* `/test pull-kubernetes-unit-go-canary`\n* `/test pull-kubernetes-update`\n* `/test pull-kubernetes-verify`\n* `/test pull-kubernetes-verify-go-canary`\n* `/test pull-kubernetes-verify-govet-levee`\n\nThe following commands are available to trigger optional jobs:\n* `/test check-dependency-stats`\n* `/test pull-ci-kubernetes-unit-windows`\n* `/test pull-e2e-gce-cloud-provider-disabled`\n* `/test pull-kubernetes-conformance-image-test`\n* `/test pull-kubernetes-conformance-kind-ga-only`\n* `/test pull-kubernetes-conformance-kind-ipv6-parallel`\n* `/test pull-kubernetes-cos-cgroupv1-containerd-node-e2e`\n* `/test pull-kubernetes-cos-cgroupv1-containerd-node-e2e-features`\n* `/test pull-kubernetes-cos-cgroupv2-containerd-node-e2e`\n* `/test pull-kubernetes-cos-cgroupv2-containerd-node-e2e-features`\n* `/test pull-kubernetes-cos-cgroupv2-containerd-node-e2e-serial`\n* `/test pull-kubernetes-cross`\n* `/test pull-kubernetes-e2e-capz-azure-disk`\n* `/test pull-kubernetes-e2e-capz-azure-disk-vmss`\n* `/test pull-kubernetes-e2e-capz-azure-file`\n* `/test pull-kubernetes-e2e-capz-azure-file-vmss`\n* `/test pull-kubernetes-e2e-capz-conformance`\n* `/test pull-kubernetes-e2e-capz-ha-control-plane`\n* `/test pull-kubernetes-e2e-capz-windows-containerd`\n* `/test pull-kubernetes-e2e-containerd-gce`\n* `/test pull-kubernetes-e2e-gce-correctness`\n* `/test pull-kubernetes-e2e-gce-cos-alpha-features`\n* `/test pull-kubernetes-e2e-gce-cos-kubetest2`\n* `/test pull-kubernetes-e2e-gce-csi-serial`\n* `/test pull-kubernetes-e2e-gce-device-plugin-gpu`\n* `/test pull-kubernetes-e2e-gce-network-proxy-grpc`\n* `/test pull-kubernetes-e2e-gce-serial`\n* `/test pull-kubernetes-e2e-gce-storage-disruptive`\n* `/test pull-kubernetes-e2e-gce-storage-slow`\n* `/test pull-kubernetes-e2e-gce-storage-snapshot`\n* `/test pull-kubernetes-e2e-gci-gce-autoscaling`\n* `/test pull-kubernetes-e2e-gci-gce-ingress`\n* `/test pull-kubernetes-e2e-gci-gce-ipvs`\n* `/test pull-kubernetes-e2e-inplace-pod-resize-containerd-main-v2`\n* `/test pull-kubernetes-e2e-kind-canary`\n* `/test pull-kubernetes-e2e-kind-dual-canary`\n* `/test pull-kubernetes-e2e-kind-ipv6-canary`\n* `/test pull-kubernetes-e2e-kind-ipvs-dual-canary`\n* `/test pull-kubernetes-e2e-kind-multizone`\n* `/test pull-kubernetes-e2e-kops-aws`\n* `/test pull-kubernetes-e2e-kubelet-credential-provider`\n* `/test pull-kubernetes-e2e-ubuntu-gce-network-policies`\n* `/test pull-kubernetes-kind-dra`\n* `/test pull-kubernetes-kubemark-e2e-gce-big`\n* `/test pull-kubernetes-local-e2e`\n* `/test pull-kubernetes-node-crio-cgrpv1-evented-pleg-e2e`\n* `/test pull-kubernetes-node-crio-cgrpv2-e2e`\n* `/test pull-kubernetes-node-crio-cgrpv2-e2e-kubetest2`\n* `/test pull-kubernetes-node-crio-e2e`\n* `/test pull-kubernetes-node-crio-e2e-kubetest2`\n* `/test pull-kubernetes-node-e2e-containerd-alpha-features`\n* `/test pull-kubernetes-node-e2e-containerd-features`\n* `/test pull-kubernetes-node-e2e-containerd-features-kubetest2`\n* `/test pull-kubernetes-node-e2e-containerd-kubetest2`\n* `/test pull-kubernetes-node-kubelet-credential-provider`\n* `/test pull-kubernetes-node-kubelet-serial-containerd`\n* `/test pull-kubernetes-node-kubelet-serial-containerd-kubetest2`\n* `/test pull-kubernetes-node-kubelet-serial-cpu-manager`\n* `/test pull-kubernetes-node-kubelet-serial-cpu-manager-kubetest2`\n* `/test pull-kubernetes-node-kubelet-serial-crio-cgroupv1`\n* `/test pull-kubernetes-node-kubelet-serial-crio-cgroupv2`\n* `/test pull-kubernetes-node-kubelet-serial-hugepages`\n* `/test pull-kubernetes-node-kubelet-serial-memory-manager`\n* `/test pull-kubernetes-node-kubelet-serial-pod-disruption-conditions`\n* `/test pull-kubernetes-node-kubelet-serial-topology-manager`\n* `/test pull-kubernetes-node-kubelet-serial-topology-manager-kubetest2`\n* `/test pull-kubernetes-node-memoryqos-cgrpv2`\n* `/test pull-kubernetes-node-swap-fedora`\n* `/test pull-kubernetes-node-swap-fedora-serial`\n* `/test pull-kubernetes-node-swap-ubuntu-serial`\n* `/test pull-kubernetes-unit-experimental`\n* `/test pull-publishing-bot-validate`\n\nUse `/test all` to run the following jobs that were automatically triggered:\n* `pull-kubernetes-conformance-kind-ga-only-parallel`\n* `pull-kubernetes-dependencies`\n* `pull-kubernetes-e2e-gce`\n* `pull-kubernetes-e2e-gce-100-performance`\n* `pull-kubernetes-e2e-kind`\n* `pull-kubernetes-e2e-kind-ipv6`\n* `pull-kubernetes-integration`\n* `pull-kubernetes-node-e2e-containerd`\n* `pull-kubernetes-typecheck`\n* `pull-kubernetes-unit`\n* `pull-kubernetes-verify`\n* `pull-kubernetes-verify-govet-levee`\n\n\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114878#issuecomment-1384133603):\n\n>/test help\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 16, 14, 18, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1384134243, 'issue_id': 1523002449, 'author': 'danwinship', 'body': '/test pull-kubernetes-e2e-gci-gce-ipvs', 'created_at': datetime.datetime(2023, 1, 16, 14, 18, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1385613227, 'issue_id': 1523002449, 'author': 'danwinship', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 17, 15, 35, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1385613380, 'issue_id': 1523002449, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 8addd5e535af0ce9b5ce216fcaa205ca2b1dca41</details>', 'created_at': datetime.datetime(2023, 1, 17, 15, 35, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1385613895, 'issue_id': 1523002449, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114878#issuecomment-1385613227"" title=""Approved"">danwinship</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114878#"" title=""Author self-approved"">uablrek</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/proxy/apis/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/apis/config/OWNERS)~~ [danwinship]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 17, 15, 36, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1385751477, 'issue_id': 1523002449, 'author': 'uablrek', 'body': '/test pull-kubernetes-unit', 'created_at': datetime.datetime(2023, 1, 17, 17, 9, 24, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-06 18:53:50 UTC): Skipping CI for Draft Pull Request.
If you want CI signal for your change, please convert it to an actual PR.
You can still manually trigger a test run with `/test all`

k8s-ci-robot on (2023-01-06 18:53:56 UTC): @uablrek: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

uablrek (Issue Creator) on (2023-01-06 18:54:29 UTC): /sig network
/area ipvs
/area kube-proxy

uablrek (Issue Creator) on (2023-01-07 10:19:08 UTC): /test pull-kubernetes-unit

uablrek (Issue Creator) on (2023-01-07 12:42:39 UTC): /retest-required

danwinship (Assginee) on (2023-01-16 14:18:09 UTC): /test help

k8s-ci-robot on (2023-01-16 14:18:12 UTC): @danwinship: The specified target(s) for `/test` were not found.
The following commands are available to trigger required jobs:
* `/test pull-kubernetes-conformance-kind-ga-only-parallel`
* `/test pull-kubernetes-coverage-unit`
* `/test pull-kubernetes-dependencies`
* `/test pull-kubernetes-dependencies-go-canary`
* `/test pull-kubernetes-e2e-gce`
* `/test pull-kubernetes-e2e-gce-100-performance`
* `/test pull-kubernetes-e2e-gce-big-performance`
* `/test pull-kubernetes-e2e-gce-canary`
* `/test pull-kubernetes-e2e-gce-cos`
* `/test pull-kubernetes-e2e-gce-cos-canary`
* `/test pull-kubernetes-e2e-gce-cos-no-stage`
* `/test pull-kubernetes-e2e-gce-network-proxy-http-connect`
* `/test pull-kubernetes-e2e-gce-scale-performance-manual`
* `/test pull-kubernetes-e2e-kind`
* `/test pull-kubernetes-e2e-kind-ipv6`
* `/test pull-kubernetes-integration`
* `/test pull-kubernetes-integration-go-canary`
* `/test pull-kubernetes-kubemark-e2e-gce-scale`
* `/test pull-kubernetes-node-e2e-containerd`
* `/test pull-kubernetes-typecheck`
* `/test pull-kubernetes-unit`
* `/test pull-kubernetes-unit-go-canary`
* `/test pull-kubernetes-update`
* `/test pull-kubernetes-verify`
* `/test pull-kubernetes-verify-go-canary`
* `/test pull-kubernetes-verify-govet-levee`

The following commands are available to trigger optional jobs:
* `/test check-dependency-stats`
* `/test pull-ci-kubernetes-unit-windows`
* `/test pull-e2e-gce-cloud-provider-disabled`
* `/test pull-kubernetes-conformance-image-test`
* `/test pull-kubernetes-conformance-kind-ga-only`
* `/test pull-kubernetes-conformance-kind-ipv6-parallel`
* `/test pull-kubernetes-cos-cgroupv1-containerd-node-e2e`
* `/test pull-kubernetes-cos-cgroupv1-containerd-node-e2e-features`
* `/test pull-kubernetes-cos-cgroupv2-containerd-node-e2e`
* `/test pull-kubernetes-cos-cgroupv2-containerd-node-e2e-features`
* `/test pull-kubernetes-cos-cgroupv2-containerd-node-e2e-serial`
* `/test pull-kubernetes-cross`
* `/test pull-kubernetes-e2e-capz-azure-disk`
* `/test pull-kubernetes-e2e-capz-azure-disk-vmss`
* `/test pull-kubernetes-e2e-capz-azure-file`
* `/test pull-kubernetes-e2e-capz-azure-file-vmss`
* `/test pull-kubernetes-e2e-capz-conformance`
* `/test pull-kubernetes-e2e-capz-ha-control-plane`
* `/test pull-kubernetes-e2e-capz-windows-containerd`
* `/test pull-kubernetes-e2e-containerd-gce`
* `/test pull-kubernetes-e2e-gce-correctness`
* `/test pull-kubernetes-e2e-gce-cos-alpha-features`
* `/test pull-kubernetes-e2e-gce-cos-kubetest2`
* `/test pull-kubernetes-e2e-gce-csi-serial`
* `/test pull-kubernetes-e2e-gce-device-plugin-gpu`
* `/test pull-kubernetes-e2e-gce-network-proxy-grpc`
* `/test pull-kubernetes-e2e-gce-serial`
* `/test pull-kubernetes-e2e-gce-storage-disruptive`
* `/test pull-kubernetes-e2e-gce-storage-slow`
* `/test pull-kubernetes-e2e-gce-storage-snapshot`
* `/test pull-kubernetes-e2e-gci-gce-autoscaling`
* `/test pull-kubernetes-e2e-gci-gce-ingress`
* `/test pull-kubernetes-e2e-gci-gce-ipvs`
* `/test pull-kubernetes-e2e-inplace-pod-resize-containerd-main-v2`
* `/test pull-kubernetes-e2e-kind-canary`
* `/test pull-kubernetes-e2e-kind-dual-canary`
* `/test pull-kubernetes-e2e-kind-ipv6-canary`
* `/test pull-kubernetes-e2e-kind-ipvs-dual-canary`
* `/test pull-kubernetes-e2e-kind-multizone`
* `/test pull-kubernetes-e2e-kops-aws`
* `/test pull-kubernetes-e2e-kubelet-credential-provider`
* `/test pull-kubernetes-e2e-ubuntu-gce-network-policies`
* `/test pull-kubernetes-kind-dra`
* `/test pull-kubernetes-kubemark-e2e-gce-big`
* `/test pull-kubernetes-local-e2e`
* `/test pull-kubernetes-node-crio-cgrpv1-evented-pleg-e2e`
* `/test pull-kubernetes-node-crio-cgrpv2-e2e`
* `/test pull-kubernetes-node-crio-cgrpv2-e2e-kubetest2`
* `/test pull-kubernetes-node-crio-e2e`
* `/test pull-kubernetes-node-crio-e2e-kubetest2`
* `/test pull-kubernetes-node-e2e-containerd-alpha-features`
* `/test pull-kubernetes-node-e2e-containerd-features`
* `/test pull-kubernetes-node-e2e-containerd-features-kubetest2`
* `/test pull-kubernetes-node-e2e-containerd-kubetest2`
* `/test pull-kubernetes-node-kubelet-credential-provider`
* `/test pull-kubernetes-node-kubelet-serial-containerd`
* `/test pull-kubernetes-node-kubelet-serial-containerd-kubetest2`
* `/test pull-kubernetes-node-kubelet-serial-cpu-manager`
* `/test pull-kubernetes-node-kubelet-serial-cpu-manager-kubetest2`
* `/test pull-kubernetes-node-kubelet-serial-crio-cgroupv1`
* `/test pull-kubernetes-node-kubelet-serial-crio-cgroupv2`
* `/test pull-kubernetes-node-kubelet-serial-hugepages`
* `/test pull-kubernetes-node-kubelet-serial-memory-manager`
* `/test pull-kubernetes-node-kubelet-serial-pod-disruption-conditions`
* `/test pull-kubernetes-node-kubelet-serial-topology-manager`
* `/test pull-kubernetes-node-kubelet-serial-topology-manager-kubetest2`
* `/test pull-kubernetes-node-memoryqos-cgrpv2`
* `/test pull-kubernetes-node-swap-fedora`
* `/test pull-kubernetes-node-swap-fedora-serial`
* `/test pull-kubernetes-node-swap-ubuntu-serial`
* `/test pull-kubernetes-unit-experimental`
* `/test pull-publishing-bot-validate`

Use `/test all` to run the following jobs that were automatically triggered:
* `pull-kubernetes-conformance-kind-ga-only-parallel`
* `pull-kubernetes-dependencies`
* `pull-kubernetes-e2e-gce`
* `pull-kubernetes-e2e-gce-100-performance`
* `pull-kubernetes-e2e-kind`
* `pull-kubernetes-e2e-kind-ipv6`
* `pull-kubernetes-integration`
* `pull-kubernetes-node-e2e-containerd`
* `pull-kubernetes-typecheck`
* `pull-kubernetes-unit`
* `pull-kubernetes-verify`
* `pull-kubernetes-verify-govet-levee`



<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114878#issuecomment-1384133603):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

danwinship (Assginee) on (2023-01-16 14:18:33 UTC): /test pull-kubernetes-e2e-gci-gce-ipvs

danwinship (Assginee) on (2023-01-17 15:35:45 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-17 15:35:52 UTC): LGTM label has been added.  <details>Git tree hash: 8addd5e535af0ce9b5ce216fcaa205ca2b1dca41</details>

k8s-ci-robot on (2023-01-17 15:36:15 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114878#issuecomment-1385613227"" title=""Approved"">danwinship</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114878#"" title=""Author self-approved"">uablrek</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/proxy/apis/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/apis/config/OWNERS)~~ [danwinship]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

uablrek (Issue Creator) on (2023-01-17 17:09:24 UTC): /test pull-kubernetes-unit

"
1522773290,pull_request,closed,,Ensure job is up to date in informer cache in test,"#### What type of PR is this?

/kind bug
/kind flake

#### What this PR does / why we need it:

Increase timeout for Job active deadline test. I couldn't get the test to fail locally a single time in 100 iterations, suggesting that the logic is correct.

Also make the test stricter by setting the startTime equal to now, instead of one second old.

#### Which issue(s) this PR fixes:

Fixes #110697

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",alculquicondor,2023-01-06 15:41:12+00:00,['mimowo'],2023-01-10 08:38:40+00:00,2023-01-09 18:07:29+00:00,https://github.com/kubernetes/kubernetes/pull/114876,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('kind/flake', 'Categorizes issue or PR as related to a flaky test.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1373812834, 'issue_id': 1522773290, 'author': 'k8s-ci-robot', 'body': '@alculquicondor: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 6, 15, 41, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373814007, 'issue_id': 1522773290, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114876#"" title=""Author self-approved"">alculquicondor</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/controller/job/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/job/OWNERS)~~ [alculquicondor]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 6, 15, 41, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375361003, 'issue_id': 1522773290, 'author': 'mimowo', 'body': 'The issue is due to the fact that job_controller may step on its own feet and update the `startTime`, because in its cache it still does not see the start time set. This can be seen with the additional debug logs:\r\n\r\n```\r\n=== RUN   TestPastDeadlineJobFinished/New_job_created_without_start_time_being_set\r\nI0109 10:55:32.736395 1125685 job_controller.go:199] Starting job controller\r\nI0109 10:55:32.736438 1125685 shared_informer.go:314] Waiting for caches to sync for job\r\nI0109 10:55:32.736447 1125685 shared_informer.go:321] Caches are synced for job\r\nI0109 10:55:32.736458 1125685 job_controller.go:516] enqueueing job default/job1\r\nI0109 10:55:32.736494 1125685 job_controller.go:673] ""MYDEBUG syncJob starts!!!!""\r\nI0109 10:55:32.736538 1125685 job_controller.go:1340] ""MYDEBUG"" startTime=""2023-01-09 10:55:32 +0100 CET""\r\nI0109 10:55:32.736543 1125685 job_controller.go:1345] ""MYDEBUG"" duration=""0s""\r\nI0109 10:55:32.736646 1125685 job_controller.go:673] ""MYDEBUG syncJob starts!!!!""\r\nI0109 10:55:32.736669 1125685 job_controller.go:1340] ""MYDEBUG"" startTime=""2023-01-09 10:55:33 +0100 CET""\r\nI0109 10:55:32.736674 1125685 job_controller.go:1345] ""MYDEBUG"" duration=""0s""\r\nI0109 10:55:32.736691 1125685 job_controller.go:516] enqueueing job default/job1\r\nI0109 10:55:32.736713 1125685 job_controller.go:516] enqueueing job default/job1\r\nI0109 10:55:32.736740 1125685 job_controller.go:673] ""MYDEBUG syncJob starts!!!!""\r\nI0109 10:55:32.736821 1125685 job_controller.go:1340] ""MYDEBUG"" startTime=""2023-01-09 10:55:33 +0100 CET""\r\nI0109 10:55:32.736844 1125685 job_controller.go:1345] ""MYDEBUG"" duration=""0s""\r\nI0109 10:55:32.736871 1125685 job_controller.go:673] ""MYDEBUG syncJob starts!!!!""\r\nI0109 10:55:32.736899 1125685 job_controller.go:1340] ""MYDEBUG"" startTime=""2023-01-09 10:55:33 +0100 CET""\r\nI0109 10:55:32.736913 1125685 job_controller.go:1345] ""MYDEBUG"" duration=""0s""\r\n    job_controller_test.go:1906: Job failed to enforce activeDeadlineSeconds configuration. Expected condition with Reason \'DeadlineExceeded\' was not found in {[] 2023-01-09 10:55:33 +0100 CET <nil> 0 0 0  nil 0xc000520cec}\r\n--- FAIL: TestPastDeadlineJobFinished (5.10s)\r\n```\r\nSo, even though the `startTime` is set from the test client\'s perspective, and the clock is moved it remains nil from the job_controller client\'s perspecive, so it gets updated.', 'created_at': datetime.datetime(2023, 1, 9, 10, 0, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375379372, 'issue_id': 1522773290, 'author': 'mimowo', 'body': ""It also explains why the approach proposed by @harshanarayana at some point to add the `manager.clock.Sleep(200 * time.Millisecond)` at the end of the periodic loop works. I've tested locally by adding it to this PR and got 1000 passes, so I would suggest adding it with an appropriate comment, unless we have another idea."", 'created_at': datetime.datetime(2023, 1, 9, 10, 12, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375839061, 'issue_id': 1522773290, 'author': 'alculquicondor', 'body': 'Thanks @mimowo, those log lines really explain the bug.\r\n\r\nI figured we can avoid the extra sleep.', 'created_at': datetime.datetime(2023, 1, 9, 15, 48, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375878712, 'issue_id': 1522773290, 'author': 'mimowo', 'body': '/lgtm\r\nTested looping 1000 times', 'created_at': datetime.datetime(2023, 1, 9, 16, 10, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375879076, 'issue_id': 1522773290, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 08b132f4c478960c07c174459a01281fd1f63afe</details>', 'created_at': datetime.datetime(2023, 1, 9, 16, 10, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375905344, 'issue_id': 1522773290, 'author': 'alculquicondor', 'body': '/priority important-soon', 'created_at': datetime.datetime(2023, 1, 9, 16, 25, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375996456, 'issue_id': 1522773290, 'author': 'alculquicondor', 'body': 'flake #114438\r\n\r\n/retest', 'created_at': datetime.datetime(2023, 1, 9, 17, 31, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376583417, 'issue_id': 1522773290, 'author': 'sathyanarays', 'body': '@mimowo , @alculquicondor , I tried running the test 1000 times. The test failed after passing 26 times. \r\n\r\nI ran the test from commit id: 78f2b1de33590990c7225126c68b345a9c2909c7\r\n\r\nThe test failed with the following error:\r\n\r\n```\r\nI0110 06:35:59.182356 1572143 job_controller.go:199] Starting job controller\r\nI0110 06:35:59.182501 1572143 shared_informer.go:314] Waiting for caches to sync for job\r\nI0110 06:35:59.182518 1572143 shared_informer.go:321] Caches are synced for job\r\nI0110 06:35:59.182760 1572143 job_controller.go:516] enqueueing job default/job1\r\nI0110 06:35:59.183050 1572143 job_controller.go:516] enqueueing job default/job1\r\nI0110 06:35:59.183137 1572143 job_controller.go:516] enqueueing job default/job1\r\nI0110 06:36:02.183884 1572143 job_controller.go:516] enqueueing job default/job2\r\nI0110 06:36:02.184133 1572143 job_controller.go:516] enqueueing job default/job2\r\nI0110 06:36:02.184148 1572143 job_controller.go:516] enqueueing job default/job2\r\nI0110 06:36:02.184167 1572143 event.go:294] ""Event occurred"" object=""default/job2"" fieldPath="""" kind=""Job"" apiVersion="""" type=""Warning"" reason=""DeadlineExceeded"" message=""Job was active longer than specified deadline""\r\n--- FAIL: TestPastDeadlineJobFinished (3.30s)\r\n    --- FAIL: TestPastDeadlineJobFinished/New_job_created_without_start_time_being_set (3.00s)\r\n        job_controller_test.go:1922: Job failed to enforce activeDeadlineSeconds configuration. Expected condition with Reason \'DeadlineExceeded\' was not found in {[] 2023-01-10 06:35:59 +0530 IST <nil> 0 0 0  &UncountedTerminatedPods{Succeeded:[],Failed:[],} 0xc00012e7cc}\r\nFAIL\r\nFAIL    k8s.io/kubernetes/pkg/controller/job    3.323s\r\nFAIL\r\n```\r\nCan you confirm that there are no flakes?', 'created_at': datetime.datetime(2023, 1, 10, 1, 12, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376859472, 'issue_id': 1522773290, 'author': 'mimowo', 'body': '@sathyanarays thanks for double checking. I can confirm that the flakes still happen. Now, it failed 1/200 for me, it also fails if I increase the timeout to 5s.\r\n\r\nI rechecked and it passed 1000 tries for me when I added the `manager.clock.Sleep(200 * time.Millisecond)`. \r\n\r\nNot sure how to explain that I thought it passed 1000 retries, maybe it did, or maybe I had the sleep command from the branch I was playing with.', 'created_at': datetime.datetime(2023, 1, 10, 7, 54, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376905405, 'issue_id': 1522773290, 'author': 'mimowo', 'body': 'I re-run with extra logs and this is an example fail: \r\n```\r\n1094448-I0110 09:21:31.051897  174779 job_controller.go:213] Shutting down job controller\r\n1094530-=== RUN   TestPastDeadlineJobFinished/New_job_created_without_start_time_being_set\r\n1094613-I0110 09:21:31.153478  174779 job_controller.go:199] Starting job controller\r\n1094690-I0110 09:21:31.153575  174779 shared_informer.go:314] Waiting for caches to sync for job\r\n1094779-I0110 09:21:31.153589  174779 shared_informer.go:321] Caches are synced for job\r\n1094859-I0110 09:21:31.153691  174779 job_controller.go:516] enqueueing job default/job1\r\n1094940-I0110 09:21:31.154098  174779 job_controller.go:673] ""MYDEBUG syncJob starts""\r\n1095018-I0110 09:21:31.154205  174779 job_controller.go:754] ""MYDEBUG setting new startTime"" startTime=""2023-01-10 09:21:31 +0100 CET""\r\n1095145-I0110 09:21:31.154237  174779 job_controller.go:1341] ""MYDEBUG in pastActiveDeadline"" startTime=""2023-01-10 09:21:31 +0100 CET"" now=""2023-01-10 09:21:31 +0100 CET"" duration=""0s""\r\n1095323-I0110 09:21:31.154360  174779 job_controller.go:516] enqueueing job default/job1\r\n1095404-I0110 09:21:31.154395  174779 job_controller.go:673] ""MYDEBUG syncJob starts""\r\n1095482-I0110 09:21:31.154432  174779 job_controller.go:1341] ""MYDEBUG in pastActiveDeadline"" startTime=""2023-01-10 09:21:31 +0100 CET"" now=""2023-01-10 09:21:31 +0100 CET"" duration=""0s""\r\n1095660-    job_controller_test.go:1906: MYDEBUG syncing cache\r\n1095715-    job_controller_test.go:1911: MYDEBUG moving the time\r\n1095772-    job_controller_test.go:1913: MYDEBUG moved time\r\n1095824-    job_controller_test.go:1925: Job failed to enforce activeDeadlineSeconds configuration. Expected condition with Reason \'DeadlineExceeded\' was not found in {[] 2023-01-10 09:21:31 +0100 CET <nil> 1 0 0  &UncountedTerminatedPods{Succeeded:[],Failed:[],} 0xc0007c8424}\r\n```\r\n\r\nWhat you see here is that the last `syncJob` didn\'t detect active deadline, the next would, but it never happens because it is scheduled in the next second since after moving the clock, but the clock is never moved again to trigger the `syncJob`.', 'created_at': datetime.datetime(2023, 1, 10, 8, 37, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376906545, 'issue_id': 1522773290, 'author': 'mimowo', 'body': 'There might be another solution, than the sleep, but let me suggest this in a PR, and we can discuss.', 'created_at': datetime.datetime(2023, 1, 10, 8, 38, 39, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-06 15:41:20 UTC): @alculquicondor: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-06 15:41:51 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114876#"" title=""Author self-approved"">alculquicondor</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/controller/job/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/job/OWNERS)~~ [alculquicondor]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

mimowo (Assginee) on (2023-01-09 10:00:45 UTC): The issue is due to the fact that job_controller may step on its own feet and update the `startTime`, because in its cache it still does not see the start time set. This can be seen with the additional debug logs:

```
=== RUN   TestPastDeadlineJobFinished/New_job_created_without_start_time_being_set
I0109 10:55:32.736395 1125685 job_controller.go:199] Starting job controller
I0109 10:55:32.736438 1125685 shared_informer.go:314] Waiting for caches to sync for job
I0109 10:55:32.736447 1125685 shared_informer.go:321] Caches are synced for job
I0109 10:55:32.736458 1125685 job_controller.go:516] enqueueing job default/job1
I0109 10:55:32.736494 1125685 job_controller.go:673] ""MYDEBUG syncJob starts!!!!""
I0109 10:55:32.736538 1125685 job_controller.go:1340] ""MYDEBUG"" startTime=""2023-01-09 10:55:32 +0100 CET""
I0109 10:55:32.736543 1125685 job_controller.go:1345] ""MYDEBUG"" duration=""0s""
I0109 10:55:32.736646 1125685 job_controller.go:673] ""MYDEBUG syncJob starts!!!!""
I0109 10:55:32.736669 1125685 job_controller.go:1340] ""MYDEBUG"" startTime=""2023-01-09 10:55:33 +0100 CET""
I0109 10:55:32.736674 1125685 job_controller.go:1345] ""MYDEBUG"" duration=""0s""
I0109 10:55:32.736691 1125685 job_controller.go:516] enqueueing job default/job1
I0109 10:55:32.736713 1125685 job_controller.go:516] enqueueing job default/job1
I0109 10:55:32.736740 1125685 job_controller.go:673] ""MYDEBUG syncJob starts!!!!""
I0109 10:55:32.736821 1125685 job_controller.go:1340] ""MYDEBUG"" startTime=""2023-01-09 10:55:33 +0100 CET""
I0109 10:55:32.736844 1125685 job_controller.go:1345] ""MYDEBUG"" duration=""0s""
I0109 10:55:32.736871 1125685 job_controller.go:673] ""MYDEBUG syncJob starts!!!!""
I0109 10:55:32.736899 1125685 job_controller.go:1340] ""MYDEBUG"" startTime=""2023-01-09 10:55:33 +0100 CET""
I0109 10:55:32.736913 1125685 job_controller.go:1345] ""MYDEBUG"" duration=""0s""
    job_controller_test.go:1906: Job failed to enforce activeDeadlineSeconds configuration. Expected condition with Reason 'DeadlineExceeded' was not found in {[] 2023-01-09 10:55:33 +0100 CET <nil> 0 0 0  nil 0xc000520cec}
--- FAIL: TestPastDeadlineJobFinished (5.10s)
```
So, even though the `startTime` is set from the test client's perspective, and the clock is moved it remains nil from the job_controller client's perspecive, so it gets updated.

mimowo (Assginee) on (2023-01-09 10:12:59 UTC): It also explains why the approach proposed by @harshanarayana at some point to add the `manager.clock.Sleep(200 * time.Millisecond)` at the end of the periodic loop works. I've tested locally by adding it to this PR and got 1000 passes, so I would suggest adding it with an appropriate comment, unless we have another idea.

alculquicondor (Issue Creator) on (2023-01-09 15:48:52 UTC): Thanks @mimowo, those log lines really explain the bug.

I figured we can avoid the extra sleep.

mimowo (Assginee) on (2023-01-09 16:10:45 UTC): /lgtm
Tested looping 1000 times

k8s-ci-robot on (2023-01-09 16:10:53 UTC): LGTM label has been added.  <details>Git tree hash: 08b132f4c478960c07c174459a01281fd1f63afe</details>

alculquicondor (Issue Creator) on (2023-01-09 16:25:23 UTC): /priority important-soon

alculquicondor (Issue Creator) on (2023-01-09 17:31:18 UTC): flake #114438

/retest

sathyanarays on (2023-01-10 01:12:58 UTC): @mimowo , @alculquicondor , I tried running the test 1000 times. The test failed after passing 26 times. 

I ran the test from commit id: 78f2b1de33590990c7225126c68b345a9c2909c7

The test failed with the following error:

```
I0110 06:35:59.182356 1572143 job_controller.go:199] Starting job controller
I0110 06:35:59.182501 1572143 shared_informer.go:314] Waiting for caches to sync for job
I0110 06:35:59.182518 1572143 shared_informer.go:321] Caches are synced for job
I0110 06:35:59.182760 1572143 job_controller.go:516] enqueueing job default/job1
I0110 06:35:59.183050 1572143 job_controller.go:516] enqueueing job default/job1
I0110 06:35:59.183137 1572143 job_controller.go:516] enqueueing job default/job1
I0110 06:36:02.183884 1572143 job_controller.go:516] enqueueing job default/job2
I0110 06:36:02.184133 1572143 job_controller.go:516] enqueueing job default/job2
I0110 06:36:02.184148 1572143 job_controller.go:516] enqueueing job default/job2
I0110 06:36:02.184167 1572143 event.go:294] ""Event occurred"" object=""default/job2"" fieldPath="""" kind=""Job"" apiVersion="""" type=""Warning"" reason=""DeadlineExceeded"" message=""Job was active longer than specified deadline""
--- FAIL: TestPastDeadlineJobFinished (3.30s)
    --- FAIL: TestPastDeadlineJobFinished/New_job_created_without_start_time_being_set (3.00s)
        job_controller_test.go:1922: Job failed to enforce activeDeadlineSeconds configuration. Expected condition with Reason 'DeadlineExceeded' was not found in {[] 2023-01-10 06:35:59 +0530 IST <nil> 0 0 0  &UncountedTerminatedPods{Succeeded:[],Failed:[],} 0xc00012e7cc}
FAIL
FAIL    k8s.io/kubernetes/pkg/controller/job    3.323s
FAIL
```
Can you confirm that there are no flakes?

mimowo (Assginee) on (2023-01-10 07:54:07 UTC): @sathyanarays thanks for double checking. I can confirm that the flakes still happen. Now, it failed 1/200 for me, it also fails if I increase the timeout to 5s.

I rechecked and it passed 1000 tries for me when I added the `manager.clock.Sleep(200 * time.Millisecond)`. 

Not sure how to explain that I thought it passed 1000 retries, maybe it did, or maybe I had the sleep command from the branch I was playing with.

mimowo (Assginee) on (2023-01-10 08:37:27 UTC): I re-run with extra logs and this is an example fail: 
```
1094448-I0110 09:21:31.051897  174779 job_controller.go:213] Shutting down job controller
1094530-=== RUN   TestPastDeadlineJobFinished/New_job_created_without_start_time_being_set
1094613-I0110 09:21:31.153478  174779 job_controller.go:199] Starting job controller
1094690-I0110 09:21:31.153575  174779 shared_informer.go:314] Waiting for caches to sync for job
1094779-I0110 09:21:31.153589  174779 shared_informer.go:321] Caches are synced for job
1094859-I0110 09:21:31.153691  174779 job_controller.go:516] enqueueing job default/job1
1094940-I0110 09:21:31.154098  174779 job_controller.go:673] ""MYDEBUG syncJob starts""
1095018-I0110 09:21:31.154205  174779 job_controller.go:754] ""MYDEBUG setting new startTime"" startTime=""2023-01-10 09:21:31 +0100 CET""
1095145-I0110 09:21:31.154237  174779 job_controller.go:1341] ""MYDEBUG in pastActiveDeadline"" startTime=""2023-01-10 09:21:31 +0100 CET"" now=""2023-01-10 09:21:31 +0100 CET"" duration=""0s""
1095323-I0110 09:21:31.154360  174779 job_controller.go:516] enqueueing job default/job1
1095404-I0110 09:21:31.154395  174779 job_controller.go:673] ""MYDEBUG syncJob starts""
1095482-I0110 09:21:31.154432  174779 job_controller.go:1341] ""MYDEBUG in pastActiveDeadline"" startTime=""2023-01-10 09:21:31 +0100 CET"" now=""2023-01-10 09:21:31 +0100 CET"" duration=""0s""
1095660-    job_controller_test.go:1906: MYDEBUG syncing cache
1095715-    job_controller_test.go:1911: MYDEBUG moving the time
1095772-    job_controller_test.go:1913: MYDEBUG moved time
1095824-    job_controller_test.go:1925: Job failed to enforce activeDeadlineSeconds configuration. Expected condition with Reason 'DeadlineExceeded' was not found in {[] 2023-01-10 09:21:31 +0100 CET <nil> 1 0 0  &UncountedTerminatedPods{Succeeded:[],Failed:[],} 0xc0007c8424}
```

What you see here is that the last `syncJob` didn't detect active deadline, the next would, but it never happens because it is scheduled in the next second since after moving the clock, but the clock is never moved again to trigger the `syncJob`.

mimowo (Assginee) on (2023-01-10 08:38:39 UTC): There might be another solution, than the sleep, but let me suggest this in a PR, and we can discuss.

"
1522486587,pull_request,closed,,Fixed typo kind/documentation,"
![Screenshot (462)](https://user-images.githubusercontent.com/110167551/211010366-b1ce7e6b-3ffa-4073-b5b0-ed456cf30807.png)
Added necessary articles

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: ![Screenshot (462)](https://user-images.githubusercontent.com/110167551/211010208-140cdb34-2219-4c06-b96c-dc32b40b6a68.png)
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note

```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",prrajput1199,2023-01-06 12:12:13+00:00,['johnbelamaric'],2023-04-25 10:36:18+00:00,2023-04-25 10:36:16+00:00,https://github.com/kubernetes/kubernetes/pull/114875,"[('priority/backlog', 'Higher priority than priority/awaiting-more-evidence.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('lifecycle/stale', 'Denotes an issue or PR has remained open with no activity and has become stale.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1373553354, 'issue_id': 1522486587, 'author': 'linux-foundation-easycla[bot]', 'body': '<a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: prrajput1199 / name: Pratik Rajput  (0311a4e8e6dd0aaf560a60b92c70b426a9e7cb74)</li></ul>', 'created_at': datetime.datetime(2023, 1, 6, 12, 12, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373553398, 'issue_id': 1522486587, 'author': 'k8s-ci-robot', 'body': ""Welcome @prrajput1199! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:"", 'created_at': datetime.datetime(2023, 1, 6, 12, 12, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373553404, 'issue_id': 1522486587, 'author': 'k8s-ci-robot', 'body': '@prrajput1199: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 6, 12, 12, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373553406, 'issue_id': 1522486587, 'author': 'k8s-ci-robot', 'body': ""Hi @prrajput1199. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 6, 12, 12, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1520897921, 'issue_id': 1522486587, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 4, 24, 22, 14, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1520946402, 'issue_id': 1522486587, 'author': 'johnbelamaric', 'body': '/ok-to-test', 'created_at': datetime.datetime(2023, 4, 24, 23, 24, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1520948880, 'issue_id': 1522486587, 'author': 'johnbelamaric', 'body': '/approve\r\n/lgtm', 'created_at': datetime.datetime(2023, 4, 24, 23, 29, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1520948942, 'issue_id': 1522486587, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 03e952b14a993865a793c8edd1a5241a7fa03a75</details>', 'created_at': datetime.datetime(2023, 4, 24, 23, 29, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1520949029, 'issue_id': 1522486587, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114875#issuecomment-1520948880"" title=""LGTM"">johnbelamaric</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114875#"" title=""Author self-approved"">prrajput1199</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114875#pullrequestreview-1268312366"" title=""Approved"">r0b2g1t</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [johnbelamaric]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 4, 24, 23, 29, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1521438132, 'issue_id': 1522486587, 'author': 'pacoxu', 'body': '/kind cleanup\r\n/priority backlog\r\n/sig architecture\r\n/release-note-none', 'created_at': datetime.datetime(2023, 4, 25, 9, 6, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1521438482, 'issue_id': 1522486587, 'author': 'pacoxu', 'body': '/test pull-kubernetes-unit', 'created_at': datetime.datetime(2023, 4, 25, 9, 6, 36, tzinfo=datetime.timezone.utc)}]","linux-foundation-easycla[bot] on (2023-01-06 12:12:18 UTC): <a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: prrajput1199 / name: Pratik Rajput  (0311a4e8e6dd0aaf560a60b92c70b426a9e7cb74)</li></ul>

k8s-ci-robot on (2023-01-06 12:12:21 UTC): Welcome @prrajput1199! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:

k8s-ci-robot on (2023-01-06 12:12:22 UTC): @prrajput1199: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-06 12:12:22 UTC): Hi @prrajput1199. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-triage-robot on (2023-04-24 22:14:41 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

johnbelamaric (Assginee) on (2023-04-24 23:24:39 UTC): /ok-to-test

johnbelamaric (Assginee) on (2023-04-24 23:29:31 UTC): /approve
/lgtm

k8s-ci-robot on (2023-04-24 23:29:38 UTC): LGTM label has been added.  <details>Git tree hash: 03e952b14a993865a793c8edd1a5241a7fa03a75</details>

k8s-ci-robot on (2023-04-24 23:29:46 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114875#issuecomment-1520948880"" title=""LGTM"">johnbelamaric</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114875#"" title=""Author self-approved"">prrajput1199</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114875#pullrequestreview-1268312366"" title=""Approved"">r0b2g1t</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [johnbelamaric]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

pacoxu on (2023-04-25 09:06:20 UTC): /kind cleanup
/priority backlog
/sig architecture
/release-note-none

pacoxu on (2023-04-25 09:06:36 UTC): /test pull-kubernetes-unit

"
1522420197,pull_request,closed,,Log and event if a NodePort overlaps with on-node ephemeral range,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind feature
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
This PR checks if NodePort overlaps port range in /proc/sys/net/ipv4/ip_local_port_range.
It runs when proxier syncs rules, and only the node obtains the lease can report the event.
This PR only supports iptables and ipvs mode.
#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #111823

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Leases create/get/update permissions have been added to user system:kube-proxy, so the node that holds the lease can emit the event.
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs
None
```
",haoruan,2023-01-06 11:23:05+00:00,[],2024-02-04 07:17:34+00:00,2024-02-04 07:17:32+00:00,https://github.com/kubernetes/kubernetes/pull/114874,"[('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('sig/scalability', 'Categorizes an issue or PR as relevant to SIG Scalability.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('needs-rebase', 'Indicates a PR cannot be merged because it has merge conflicts with HEAD.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('area/ipvs', None), ('lifecycle/rotten', 'Denotes an issue or PR that has aged beyond stale and will be auto-closed.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1373491720, 'issue_id': 1522420197, 'author': 'k8s-ci-robot', 'body': '@haoruan: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 6, 11, 23, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373491734, 'issue_id': 1522420197, 'author': 'k8s-ci-robot', 'body': ""Hi @haoruan. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 6, 11, 23, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1498595071, 'issue_id': 1522420197, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114874#"" title=""Author self-approved"">haoruan</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign bowei, klueska, liggitt, shyamjvs for approval. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[cmd/kube-proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-proxy/OWNERS)**\n- **[pkg/kubemark/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubemark/OWNERS)**\n- **[pkg/proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/OWNERS)**\n- **[plugin/pkg/auth/authorizer/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/plugin/pkg/auth/authorizer/OWNERS)**\n- **[staging/src/k8s.io/component-helpers/node/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/node/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""bowei"",""klueska"",""liggitt"",""shyamjvs""]} -->', 'created_at': datetime.datetime(2023, 4, 6, 7, 9, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1502539615, 'issue_id': 1522420197, 'author': 'aojea', 'body': ""I'm not sure this is worth it"", 'created_at': datetime.datetime(2023, 4, 11, 1, 5, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1504774710, 'issue_id': 1522420197, 'author': 'k8s-ci-robot', 'body': 'PR needs rebase.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 4, 12, 7, 7, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1630305681, 'issue_id': 1522420197, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 7, 11, 7, 35, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1767116237, 'issue_id': 1522420197, 'author': 'danwinship', 'body': ""> I'm not sure this is worth it\r\n\r\nagree"", 'created_at': datetime.datetime(2023, 10, 17, 20, 25, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1925607968, 'issue_id': 1522420197, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 2, 4, 7, 17, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1925607993, 'issue_id': 1522420197, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114874#issuecomment-1925607968):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 2, 4, 7, 17, 33, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-06 11:23:13 UTC): @haoruan: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-06 11:23:14 UTC): Hi @haoruan. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-04-06 07:09:09 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114874#"" title=""Author self-approved"">haoruan</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign bowei, klueska, liggitt, shyamjvs for approval. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[cmd/kube-proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-proxy/OWNERS)**
- **[pkg/kubemark/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubemark/OWNERS)**
- **[pkg/proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/OWNERS)**
- **[plugin/pkg/auth/authorizer/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/plugin/pkg/auth/authorizer/OWNERS)**
- **[staging/src/k8s.io/component-helpers/node/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/node/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""bowei"",""klueska"",""liggitt"",""shyamjvs""]} -->

aojea on (2023-04-11 01:05:50 UTC): I'm not sure this is worth it

k8s-ci-robot on (2023-04-12 07:07:32 UTC): PR needs rebase.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-triage-robot on (2023-07-11 07:35:51 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

danwinship on (2023-10-17 20:25:33 UTC): agree

k8s-triage-robot on (2024-02-04 07:17:27 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2024-02-04 07:17:33 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114874#issuecomment-1925607968):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1522401810,pull_request,closed,,Fix unknown field error in deployment lifecycle e2e,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

The terminationGracePeriodSeconds field was capitalized wrongly, leading to unknown field warning when running deployment lifecycle e2e:

```
STEP: patching the Deployment @ 01/06/23 10:59:25.969 
W0106 10:59:25.978292  433473 warnings.go:70] unknown field ""spec.template.spec.TerminationGracePeriodSeconds""
```

The issue was undiscovered because the patched value didn't change, so the test would succeed anyway.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",tnqn,2023-01-06 11:12:55+00:00,['dims'],2023-05-09 01:49:54+00:00,2023-05-08 14:55:42+00:00,https://github.com/kubernetes/kubernetes/pull/114873,"[('area/test', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1420440963, 'issue_id': 1522401810, 'author': 'tnqn', 'body': '/retest', 'created_at': datetime.datetime(2023, 2, 7, 9, 15, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1537631449, 'issue_id': 1522401810, 'author': 'oomichi', 'body': 'Nice catch.\r\n\r\n/triage accepted\r\n/approve', 'created_at': datetime.datetime(2023, 5, 8, 1, 59, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1537830958, 'issue_id': 1522401810, 'author': 'tnqn', 'body': '@oomichi thanks for the review. It needs lgtm label to merge. Could you please add one, or should I request another reviewer?', 'created_at': datetime.datetime(2023, 5, 8, 6, 36, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1538398276, 'issue_id': 1522401810, 'author': 'dims', 'body': '/approve\r\n/lgtm', 'created_at': datetime.datetime(2023, 5, 8, 13, 53, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1538398830, 'issue_id': 1522401810, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114873#issuecomment-1538398276"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114873#issuecomment-1537631449"" title=""Approved"">oomichi</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114873#"" title=""Author self-approved"">tnqn</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[test/e2e/apps/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/apps/OWNERS)~~ [dims,oomichi]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 5, 8, 13, 53, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1538400500, 'issue_id': 1522401810, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: d6cf1ac32144aeb8eb344c3f69fb1417250a6544</details>', 'created_at': datetime.datetime(2023, 5, 8, 13, 55, 1, tzinfo=datetime.timezone.utc)}]","tnqn (Issue Creator) on (2023-02-07 09:15:51 UTC): /retest

oomichi on (2023-05-08 01:59:02 UTC): Nice catch.

/triage accepted
/approve

tnqn (Issue Creator) on (2023-05-08 06:36:04 UTC): @oomichi thanks for the review. It needs lgtm label to merge. Could you please add one, or should I request another reviewer?

dims (Assginee) on (2023-05-08 13:53:33 UTC): /approve
/lgtm

k8s-ci-robot on (2023-05-08 13:53:59 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114873#issuecomment-1538398276"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114873#issuecomment-1537631449"" title=""Approved"">oomichi</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114873#"" title=""Author self-approved"">tnqn</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/e2e/apps/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/apps/OWNERS)~~ [dims,oomichi]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-ci-robot on (2023-05-08 13:55:01 UTC): LGTM label has been added.  <details>Git tree hash: d6cf1ac32144aeb8eb344c3f69fb1417250a6544</details>

"
1522136460,pull_request,closed,,client-go: fix the wait time for trying to acquire the leader lease,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->
/kind bug
#### What this PR does / why we need it:

The current waiting time to acquire the leader lease is the current time + the currently configured leader time(--leader-elect-duration-seconds).

This means that even if the existing leader has been expired for a long time, the controller still needs to wait for `--leader-elect-lease-duration` after reboot.

Now use the existing leader to determine if the leader has expired.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
client-go: fix the wait time for trying to acquire the leader lease
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",Iceber,2023-01-06 07:55:38+00:00,['liggitt'],2024-05-27 13:23:52+00:00,2023-02-24 15:17:34+00:00,https://github.com/kubernetes/kubernetes/pull/114872,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1373396672, 'issue_id': 1522136460, 'author': 'Iceber', 'body': 'The unit test `pull-kubernetes-unit` fails because it does not use the expiration time of an existing leader record.\r\n\r\n**If there is nothing wrong with the pr idea, I will update the unit tests.**', 'created_at': datetime.datetime(2023, 1, 6, 9, 33, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375402414, 'issue_id': 1522136460, 'author': 'aojea', 'body': 'if the unit test fail is because you are modifying current behavior, that means this can not be right', 'created_at': datetime.datetime(2023, 1, 9, 10, 30, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375416364, 'issue_id': 1522136460, 'author': 'Iceber', 'body': '> if the unit test fail is because you are modifying current behavior, that means this can not be right\r\n\r\n@aojea I think the unit test doesn\'t fit my description of this pr because it is based on the fake time to determine how long to wait to get the lease, not the currently existing lease resources\r\n\r\neg.\r\nhttps://github.com/kubernetes/kubernetes/blob/cf7a3c5bbbebf295a15b37f3e67ae0e2f4c7dd84/staging/src/k8s.io/client-go/tools/leaderelection/leaderelection_test.go#L195-L208\r\n\r\nneeds to be roughly changed to\r\n```go\r\n \tname: ""don\'t acquire from led, acked object"", \r\n \treactors: []Reactor{ \r\n \t\t{ \r\n \t\t\tverb: ""get"", \r\n \t\t\treaction: func(action fakeclient.Action) (handled bool, ret runtime.Object, err error) { \r\n \t\t\t\treturn true, createLockObject(t, objectType, action.GetNamespace(), action.(fakeclient.GetAction).GetName(), &rl.LeaderElectionRecord{\r\n                                   HolderIdentity: ""bing"",\r\n                                   RenewTime: now,\r\n                                   LeaseDurationSeconds: future.Seconds(),\r\n                                    }), nil \r\n \t\t\t}, \r\n \t\t}, \r\n \t}, \r\n  \r\n \texpectSuccess: false, \r\n \toutHolder:     ""bing"", \r\n }, \r\n```', 'created_at': datetime.datetime(2023, 1, 9, 10, 43, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375541938, 'issue_id': 1522136460, 'author': 'liggitt', 'body': 'The delay on start protects against a skewed clock component taking over an active lease because it has a wrong view of the current time (or because the active lease component has a wrong view of the current time). This PR appears to drop that protection and make us vulnerable to that again. Is that right?', 'created_at': datetime.datetime(2023, 1, 9, 12, 16, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376671408, 'issue_id': 1522136460, 'author': 'Iceber', 'body': '> The delay on start protects against a skewed clock component taking over an active lease because it has a wrong view of the current time (or because the active lease component has a wrong view of the current time). This PR appears to drop that protection and make us vulnerable to that again. Is that right?\r\n\r\nI get it, thank you for the comment.\r\n\r\nBut that logic would make release meaningless, right?\r\nhttps://github.com/kubernetes/kubernetes/blob/1d6ae20301ba36c016af3d696716bd3eca5b0f89/staging/src/k8s.io/client-go/tools/leaderelection/leaderelection.go#L287-L310', 'created_at': datetime.datetime(2023, 1, 10, 3, 14, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376672986, 'issue_id': 1522136460, 'author': 'liggitt', 'body': '> But that logic would make release meaningless, right?\r\n\r\nrelease sets `LeaseDurationSeconds` to 1 second, so a new leader can acquire it very quickly', 'created_at': datetime.datetime(2023, 1, 10, 3, 17, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376727915, 'issue_id': 1522136460, 'author': 'Iceber', 'body': 'The current logic does not determine the expiration time of existed leases,`release()` will only cause the `oberservedTime` to be refreshed and wait for `le.config.LeaseDuration`\r\nhttps://github.com/kubernetes/kubernetes/blob/1d6ae20301ba36c016af3d696716bd3eca5b0f89/staging/src/k8s.io/client-go/tools/leaderelection/leaderelection.go#L349-L355', 'created_at': datetime.datetime(2023, 1, 10, 4, 43, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377878625, 'issue_id': 1522136460, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 20, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1438985471, 'issue_id': 1522136460, 'author': 'liggitt', 'body': 'this lgtm\r\n\r\ncc @wojtek-t @deads2k for another set of eyes on this change, I plan to tag by end of week', 'created_at': datetime.datetime(2023, 2, 21, 19, 27, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1439044817, 'issue_id': 1522136460, 'author': 'wojtek-t', 'body': 'This LGTM too.', 'created_at': datetime.datetime(2023, 2, 21, 20, 21, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1443666857, 'issue_id': 1522136460, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 2, 24, 13, 12, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1443666990, 'issue_id': 1522136460, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 8164193508c7d1be46ba1fc5b9fed56313b7ca30</details>', 'created_at': datetime.datetime(2023, 2, 24, 13, 12, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1443667519, 'issue_id': 1522136460, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114872#"" title=""Author self-approved"">Iceber</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114872#issuecomment-1443666857"" title=""Approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/client-go/tools/leaderelection/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/tools/leaderelection/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 2, 24, 13, 13, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 2130004016, 'issue_id': 1522136460, 'author': 'dprotaso', 'body': ""~I might be missing something but I don't see how the changes in this PR fix the problem of the initial delay - since observedTime is set to `time.now()` on process start~\r\n\r\n~created a slack there in k8s slack https://kubernetes.slack.com/archives/C0EG7JC6T/p1716569490338829~\r\n\r\nedit: read the comments in the file - and sorted it out"", 'created_at': datetime.datetime(2024, 5, 24, 17, 2, 24, tzinfo=datetime.timezone.utc)}]","Iceber (Issue Creator) on (2023-01-06 09:33:35 UTC): The unit test `pull-kubernetes-unit` fails because it does not use the expiration time of an existing leader record.

**If there is nothing wrong with the pr idea, I will update the unit tests.**

aojea on (2023-01-09 10:30:29 UTC): if the unit test fail is because you are modifying current behavior, that means this can not be right

Iceber (Issue Creator) on (2023-01-09 10:43:30 UTC): @aojea I think the unit test doesn't fit my description of this pr because it is based on the fake time to determine how long to wait to get the lease, not the currently existing lease resources

eg.
https://github.com/kubernetes/kubernetes/blob/cf7a3c5bbbebf295a15b37f3e67ae0e2f4c7dd84/staging/src/k8s.io/client-go/tools/leaderelection/leaderelection_test.go#L195-L208

needs to be roughly changed to
```go
 	name: ""don't acquire from led, acked object"", 
 	reactors: []Reactor{ 
 		{ 
 			verb: ""get"", 
 			reaction: func(action fakeclient.Action) (handled bool, ret runtime.Object, err error) { 
 				return true, createLockObject(t, objectType, action.GetNamespace(), action.(fakeclient.GetAction).GetName(), &rl.LeaderElectionRecord{
                                   HolderIdentity: ""bing"",
                                   RenewTime: now,
                                   LeaseDurationSeconds: future.Seconds(),
                                    }), nil 
 			}, 
 		}, 
 	}, 
  
 	expectSuccess: false, 
 	outHolder:     ""bing"", 
 }, 
```

liggitt (Assginee) on (2023-01-09 12:16:33 UTC): The delay on start protects against a skewed clock component taking over an active lease because it has a wrong view of the current time (or because the active lease component has a wrong view of the current time). This PR appears to drop that protection and make us vulnerable to that again. Is that right?

Iceber (Issue Creator) on (2023-01-10 03:14:59 UTC): I get it, thank you for the comment.

But that logic would make release meaningless, right?
https://github.com/kubernetes/kubernetes/blob/1d6ae20301ba36c016af3d696716bd3eca5b0f89/staging/src/k8s.io/client-go/tools/leaderelection/leaderelection.go#L287-L310

liggitt (Assginee) on (2023-01-10 03:17:29 UTC): release sets `LeaseDurationSeconds` to 1 second, so a new leader can acquire it very quickly

Iceber (Issue Creator) on (2023-01-10 04:43:50 UTC): The current logic does not determine the expiration time of existed leases,`release()` will only cause the `oberservedTime` to be refreshed and wait for `le.config.LeaseDuration`
https://github.com/kubernetes/kubernetes/blob/1d6ae20301ba36c016af3d696716bd3eca5b0f89/staging/src/k8s.io/client-go/tools/leaderelection/leaderelection.go#L349-L355

cici37 on (2023-01-10 21:20:14 UTC): /triage accepted

liggitt (Assginee) on (2023-02-21 19:27:56 UTC): this lgtm

cc @wojtek-t @deads2k for another set of eyes on this change, I plan to tag by end of week

wojtek-t on (2023-02-21 20:21:01 UTC): This LGTM too.

liggitt (Assginee) on (2023-02-24 13:12:31 UTC): /lgtm
/approve

k8s-ci-robot on (2023-02-24 13:12:38 UTC): LGTM label has been added.  <details>Git tree hash: 8164193508c7d1be46ba1fc5b9fed56313b7ca30</details>

k8s-ci-robot on (2023-02-24 13:13:07 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114872#"" title=""Author self-approved"">Iceber</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114872#issuecomment-1443666857"" title=""Approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/client-go/tools/leaderelection/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/tools/leaderelection/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

dprotaso on (2024-05-24 17:02:24 UTC): ~I might be missing something but I don't see how the changes in this PR fix the problem of the initial delay - since observedTime is set to `time.now()` on process start~

~created a slack there in k8s slack https://kubernetes.slack.com/archives/C0EG7JC6T/p1716569490338829~

edit: read the comments in the file - and sorted it out

"
1521946318,pull_request,closed,,Migrated `pkg/controller/replicaset` to contextual logging,"Signed-off-by: Naman <namanlakhwani@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind feature
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
Use contextual logging for `pkg/controller/replicaset`
#### Which issue(s) this PR fixes:
Part of https://github.com/kubernetes/enhancements/issues/3077
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Migrated the replicaset controller (within `kube-controller-manager`) to use [contextual logging](https://k8s.io/docs/concepts/cluster-administration/system-logs/#contextual-logging).
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs
- [KEP]: https://github.com/kubernetes/enhancements/tree/master/keps/sig-instrumentation/3077-contextual-logging
```

/wg structured-logging
/area logging
/assign @pohly",Namanl2001,2023-01-06 05:01:43+00:00,"['pohly', 'soltysh']",2023-03-07 12:19:54+00:00,2023-03-07 12:19:52+00:00,https://github.com/kubernetes/kubernetes/pull/114871,"[('area/test', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/logging', None), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/instrumentation', 'Categorizes an issue or PR as relevant to SIG Instrumentation.'), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('tide/merge-method-squash', 'Denotes a PR that should be squashed by tide when it merges.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.'), ('wg/structured-logging', 'Categorizes an issue or PR as relevant to WG Structured Logging.')]","[{'comment_id': 1373151189, 'issue_id': 1521946318, 'author': 'Namanl2001', 'body': 'remaining non-contextual logging in the `replica_set.go` requires changes in `staging`, therefore, skipping those in this PR\r\n\r\n/remove-sig api-machinery\r\n/remove-sig apps\r\n/remove-sig testing\r\n\r\n/sig instrumentation', 'created_at': datetime.datetime(2023, 1, 6, 5, 7, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377879003, 'issue_id': 1521946318, 'author': 'cici37', 'body': '/remove-sig api-machinery', 'created_at': datetime.datetime(2023, 1, 10, 21, 20, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380767674, 'issue_id': 1521946318, 'author': 'logicalhan', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 12, 17, 35, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1431189188, 'issue_id': 1521946318, 'author': 'pohly', 'body': '/test pull-kubernetes-verify', 'created_at': datetime.datetime(2023, 2, 15, 11, 16, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1435926525, 'issue_id': 1521946318, 'author': 'pohly', 'body': '@Namanl2001 : please check and fix the errors reported in https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114871/pull-kubernetes-verify/1625816367603126272', 'created_at': datetime.datetime(2023, 2, 19, 8, 39, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1443790502, 'issue_id': 1521946318, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 0828d8cb4245eff5a872c658be3c0e03ac0596ce</details>', 'created_at': datetime.datetime(2023, 2, 24, 14, 49, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1457721748, 'issue_id': 1521946318, 'author': 'soltysh', 'body': '/priority important-longterm', 'created_at': datetime.datetime(2023, 3, 7, 8, 3, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1457722095, 'issue_id': 1521946318, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114871#"" title=""Author self-approved"">Namanl2001</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114871#pullrequestreview-1327832454"" title=""Approved"">soltysh</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[cmd/kube-controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-controller-manager/OWNERS)~~ [soltysh]\n- ~~[pkg/controller/replicaset/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/replicaset/OWNERS)~~ [soltysh]\n- ~~[pkg/controller/replication/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/replication/OWNERS)~~ [soltysh]\n- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [soltysh]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 3, 7, 8, 3, 40, tzinfo=datetime.timezone.utc)}]","Namanl2001 (Issue Creator) on (2023-01-06 05:07:23 UTC): remaining non-contextual logging in the `replica_set.go` requires changes in `staging`, therefore, skipping those in this PR

/remove-sig api-machinery
/remove-sig apps
/remove-sig testing

/sig instrumentation

cici37 on (2023-01-10 21:20:29 UTC): /remove-sig api-machinery

logicalhan on (2023-01-12 17:35:34 UTC): /triage accepted

pohly (Assginee) on (2023-02-15 11:16:41 UTC): /test pull-kubernetes-verify

pohly (Assginee) on (2023-02-19 08:39:18 UTC): @Namanl2001 : please check and fix the errors reported in https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114871/pull-kubernetes-verify/1625816367603126272

k8s-ci-robot on (2023-02-24 14:49:46 UTC): LGTM label has been added.  <details>Git tree hash: 0828d8cb4245eff5a872c658be3c0e03ac0596ce</details>

soltysh (Assginee) on (2023-03-07 08:03:24 UTC): /priority important-longterm

k8s-ci-robot on (2023-03-07 08:03:40 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114871#"" title=""Author self-approved"">Namanl2001</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114871#pullrequestreview-1327832454"" title=""Approved"">soltysh</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[cmd/kube-controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-controller-manager/OWNERS)~~ [soltysh]
- ~~[pkg/controller/replicaset/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/replicaset/OWNERS)~~ [soltysh]
- ~~[pkg/controller/replication/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/replication/OWNERS)~~ [soltysh]
- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [soltysh]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1521694273,pull_request,closed,,Avoid mutation of PVC in stateful set controller shared cache,"/kind bug

#### What this PR does / why we need it:
The code currently mutates an object in the shared informer cache. Since the e2e for this code path is guarded as a Feature, the alpha e2e tests that have the mutation detector turned on have not been run.

```release-note
None
```

/cc @liggitt ",mattcary,2023-01-06 01:01:29+00:00,['liggitt'],2023-01-06 07:16:11+00:00,2023-01-06 07:16:10+00:00,https://github.com/kubernetes/kubernetes/pull/114870,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1372997450, 'issue_id': 1521694273, 'author': 'k8s-ci-robot', 'body': '@mattcary: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 6, 1, 1, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373003580, 'issue_id': 1521694273, 'author': 'mattcary', 'body': '/sig storage', 'created_at': datetime.datetime(2023, 1, 6, 1, 9, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373185840, 'issue_id': 1521694273, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 6, 6, 9, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373185908, 'issue_id': 1521694273, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114870#issuecomment-1373185840"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114870#"" title=""Author self-approved"">mattcary</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/controller/statefulset/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/statefulset/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 6, 6, 9, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373185910, 'issue_id': 1521694273, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 2a0c107937aaece283f864324243d60ce7d75455</details>', 'created_at': datetime.datetime(2023, 1, 6, 6, 9, 15, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-06 01:01:38 UTC): @mattcary: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

mattcary (Issue Creator) on (2023-01-06 01:09:08 UTC): /sig storage

liggitt (Assginee) on (2023-01-06 06:09:09 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-06 06:09:15 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114870#issuecomment-1373185840"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114870#"" title=""Author self-approved"">mattcary</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/controller/statefulset/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/statefulset/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-ci-robot on (2023-01-06 06:09:15 UTC): LGTM label has been added.  <details>Git tree hash: 2a0c107937aaece283f864324243d60ce7d75455</details>

"
1521618963,pull_request,closed,,bump kube-openapi,"/assign @apelisse 
/kind bug

Picks up:
- [x] https://github.com/kubernetes/kube-openapi/pull/347
- [x] https://github.com/kubernetes/kube-openapi/pull/349

In the process of updating here, discovered and resolved these issues as well:
- [x] https://github.com/kubernetes/kube-openapi/pull/353
- [x] https://github.com/kubernetes/kube-openapi/pull/352
- [x] https://github.com/kubernetes/kube-openapi/pull/351

```release-note
Fixes panic validating custom resource definition schemas that set `multipleOf` to 0
```
",liggitt,2023-01-05 23:34:26+00:00,"['apelisse', 'Jefftree']",2023-10-13 21:21:19+00:00,2023-01-06 21:31:27+00:00,https://github.com/kubernetes/kubernetes/pull/114869,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('area/apiserver', None), ('area/kubectl', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/cloudprovider', None), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('sig/cluster-lifecycle', 'Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/instrumentation', 'Categorizes an issue or PR as relevant to SIG Instrumentation.'), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('area/code-generation', ''), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372929629, 'issue_id': 1521618963, 'author': 'liggitt', 'body': '/sig api-machinery', 'created_at': datetime.datetime(2023, 1, 5, 23, 34, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372933045, 'issue_id': 1521618963, 'author': 'apelisse', 'body': 'There are actually quite a few changes but nothing I think is specifically critical. Thanks.\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 5, 23, 39, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372933093, 'issue_id': 1521618963, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 4c1c096d807c662b79a2ceee3a477e80cb1acfdc</details>', 'created_at': datetime.datetime(2023, 1, 5, 23, 39, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373077346, 'issue_id': 1521618963, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114869) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 6, 2, 55, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373099521, 'issue_id': 1521618963, 'author': 'pacoxu', 'body': '/hold \r\nfor CI failures\r\n```\r\n2023/01/05 23:43:29 OpenAPI code generation error: Failed executing generator: some packages had errors:\r\nerrors in package ""k8s.io/kubernetes/pkg/generated/openapi"":\r\noutput for ""openapi/zz_generated.openapi.go"" differs; first existing/expected diff: \r\n  ""\\"",\\n\\t\\t\\t\\t\\t\\t\\tType:        []string{\\""string\\""},\\n\\t\\t\\t\\t\\t\\t\\tFormat:      \\""\\"",\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\""matchPolic""\r\n  ""\\\\n\\\\nPossible enum values:\\\\n - `\\\\\\""Fail\\\\\\""` means that an error calling the webhook causes the admissio""\r\n\r\n!!! [0105 23:43:29] Call tree:\r\n!!! [0105 23:43:29]  1: /home/prow/go/src/k8s.io/kubernetes/hack/update-codegen.sh:836 codegen::openapi(...)\r\n+++ exit code: 1\r\n+++ error: 1\r\n\x1b[0;31mFAILED\x1b[0m   verify-codegen.sh\t147s\r\nV\r\n```', 'created_at': datetime.datetime(2023, 1, 6, 3, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373127716, 'issue_id': 1521618963, 'author': 'liggitt', 'body': '@apelisse seeing error serving OpenAPI:\r\n\r\n> Error from server (InternalError): Internal error occurred: mime: unexpected content after media subtype', 'created_at': datetime.datetime(2023, 1, 6, 4, 22, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373169474, 'issue_id': 1521618963, 'author': 'bart0sh', 'body': '/priority important-soon\r\n/triage accepted', 'created_at': datetime.datetime(2023, 1, 6, 5, 41, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373923647, 'issue_id': 1521618963, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114869#"" title=""Author self-approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [liggitt]\n- ~~[api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/api/OWNERS)~~ [liggitt]\n- ~~[pkg/generated/openapi/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/generated/openapi/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apimachinery/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/noderesourcetopology-api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/noderesourcetopology-api/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [liggitt]\n- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 6, 17, 29, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373923723, 'issue_id': 1521618963, 'author': 'liggitt', 'body': '/hold cancel', 'created_at': datetime.datetime(2023, 1, 6, 17, 29, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374090349, 'issue_id': 1521618963, 'author': 'Jefftree', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 6, 20, 21, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374090452, 'issue_id': 1521618963, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: c6c83f649f2374326bf52601c7cbe3244e214461</details>', 'created_at': datetime.datetime(2023, 1, 6, 20, 21, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1762052310, 'issue_id': 1521618963, 'author': 'jiahuif', 'body': 'Do we backport it for https://github.com/kubernetes/kube-openapi/pull/349 ?', 'created_at': datetime.datetime(2023, 10, 13, 19, 5, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1762241721, 'issue_id': 1521618963, 'author': 'apelisse', 'body': 'Should we backport only that change? We have the option of making a branch in kube-openapi for the specific release and just release that change if needed.', 'created_at': datetime.datetime(2023, 10, 13, 21, 21, 19, tzinfo=datetime.timezone.utc)}]","liggitt (Issue Creator) on (2023-01-05 23:34:48 UTC): /sig api-machinery

apelisse (Assginee) on (2023-01-05 23:39:17 UTC): There are actually quite a few changes but nothing I think is specifically critical. Thanks.
/lgtm

k8s-ci-robot on (2023-01-05 23:39:23 UTC): LGTM label has been added.  <details>Git tree hash: 4c1c096d807c662b79a2ceee3a477e80cb1acfdc</details>

k8s-triage-robot on (2023-01-06 02:55:34 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114869) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

pacoxu on (2023-01-06 03:30:00 UTC): /hold 
for CI failures
```
2023/01/05 23:43:29 OpenAPI code generation error: Failed executing generator: some packages had errors:
errors in package ""k8s.io/kubernetes/pkg/generated/openapi"":
output for ""openapi/zz_generated.openapi.go"" differs; first existing/expected diff: 
  ""\"",\n\t\t\t\t\t\t\tType:        []string{\""string\""},\n\t\t\t\t\t\t\tFormat:      \""\"",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\""matchPolic""
  ""\\n\\nPossible enum values:\\n - `\\\""Fail\\\""` means that an error calling the webhook causes the admissio""

!!! [0105 23:43:29] Call tree:
!!! [0105 23:43:29]  1: /home/prow/go/src/k8s.io/kubernetes/hack/update-codegen.sh:836 codegen::openapi(...)
+++ exit code: 1
+++ error: 1
[0;31mFAILED[0m   verify-codegen.sh	147s
V
```

liggitt (Issue Creator) on (2023-01-06 04:22:10 UTC): @apelisse seeing error serving OpenAPI:

bart0sh on (2023-01-06 05:41:52 UTC): /priority important-soon
/triage accepted

k8s-ci-robot on (2023-01-06 17:29:36 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114869#"" title=""Author self-approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [liggitt]
- ~~[api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/api/OWNERS)~~ [liggitt]
- ~~[pkg/generated/openapi/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/generated/openapi/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apimachinery/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/noderesourcetopology-api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/noderesourcetopology-api/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [liggitt]
- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

liggitt (Issue Creator) on (2023-01-06 17:29:41 UTC): /hold cancel

Jefftree (Assginee) on (2023-01-06 20:21:53 UTC): /lgtm

k8s-ci-robot on (2023-01-06 20:21:59 UTC): LGTM label has been added.  <details>Git tree hash: c6c83f649f2374326bf52601c7cbe3244e214461</details>

jiahuif on (2023-10-13 19:05:59 UTC): Do we backport it for https://github.com/kubernetes/kube-openapi/pull/349 ?

apelisse (Assginee) on (2023-10-13 21:21:19 UTC): Should we backport only that change? We have the option of making a branch in kube-openapi for the specific release and just release that change if needed.

"
1521534055,pull_request,closed,,fieldmanager: Make internal managers private,"Make internal managers private since they were never intended to be public, don't seem to be used by anyone, and force a lot of things to be public when they shouldn't in the test framework (some of the test framework clean-up is coming in a follow-up PR).

This has 0 code change or behavior change, it's strictly moving things around and re-organizing the package for clean-up before moving to a new place.

cc @Jefftree @kwiesmueller 

#### What type of PR is this?
/kind cleanup


#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
```release-note
NONE
```",apelisse,2023-01-05 22:20:46+00:00,['lavalamp'],2023-01-11 00:33:21+00:00,2023-01-11 00:33:19+00:00,https://github.com/kubernetes/kubernetes/pull/114868,"[('area/test', None), ('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/XXL', 'Denotes a PR that changes 1000+ lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372866876, 'issue_id': 1521534055, 'author': 'apelisse', 'body': '/triage accepted\r\n/priority important-soon', 'created_at': datetime.datetime(2023, 1, 5, 22, 21, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377995237, 'issue_id': 1521534055, 'author': 'lavalamp', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 10, 22, 48, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377995364, 'issue_id': 1521534055, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 11bbb2d50a1b3769e4401ef4393297e60ea71c77</details>', 'created_at': datetime.datetime(2023, 1, 10, 22, 48, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377995658, 'issue_id': 1521534055, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114868#"" title=""Author self-approved"">apelisse</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114868#issuecomment-1377995237"" title=""Approved"">lavalamp</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [lavalamp]\n- ~~[staging/src/k8s.io/apiserver/pkg/endpoints/handlers/fieldmanager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/endpoints/handlers/fieldmanager/OWNERS)~~ [apelisse,lavalamp]\n- ~~[test/integration/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/integration/apiserver/OWNERS)~~ [apelisse,lavalamp]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 10, 22, 48, 41, tzinfo=datetime.timezone.utc)}]","apelisse (Issue Creator) on (2023-01-05 22:21:02 UTC): /triage accepted
/priority important-soon

lavalamp (Assginee) on (2023-01-10 22:48:10 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-10 22:48:18 UTC): LGTM label has been added.  <details>Git tree hash: 11bbb2d50a1b3769e4401ef4393297e60ea71c77</details>

k8s-ci-robot on (2023-01-10 22:48:41 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114868#"" title=""Author self-approved"">apelisse</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114868#issuecomment-1377995237"" title=""Approved"">lavalamp</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [lavalamp]
- ~~[staging/src/k8s.io/apiserver/pkg/endpoints/handlers/fieldmanager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/endpoints/handlers/fieldmanager/OWNERS)~~ [apelisse,lavalamp]
- ~~[test/integration/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/integration/apiserver/OWNERS)~~ [apelisse,lavalamp]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1521531738,pull_request,closed,,add deads2k to approvers for code-generator and sample-controller,"Adding myself to a couple early staging repos.  Found when an /approve didn't work right.

/sig api-machinery
/assign @lavalamp 
/kind cleanup
/priority important-soon

```release-note
NONE
```",deads2k,2023-01-05 22:18:55+00:00,['lavalamp'],2023-01-10 21:20:46+00:00,2023-01-06 05:30:09+00:00,https://github.com/kubernetes/kubernetes/pull/114867,"[('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('area/code-generation', ''), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372869149, 'issue_id': 1521531738, 'author': 'lavalamp', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 5, 22, 23, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372869258, 'issue_id': 1521531738, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 9627d165b6752056122d2aa92ba29acbe21bfcde</details>', 'created_at': datetime.datetime(2023, 1, 5, 22, 23, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372869538, 'issue_id': 1521531738, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114867#"" title=""Author self-approved"">deads2k</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114867#issuecomment-1372869149"" title=""Approved"">lavalamp</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [lavalamp]\n- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [lavalamp]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 22, 23, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372972811, 'issue_id': 1521531738, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114867) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 6, 0, 28, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373098021, 'issue_id': 1521531738, 'author': 'pacoxu', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 6, 3, 28, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373114369, 'issue_id': 1521531738, 'author': 'pacoxu', 'body': '/test pull-kubernetes-unit\r\n[TestDifferentWidths](https://github.com/kubernetes/kubernetes/issues/106579) flake', 'created_at': datetime.datetime(2023, 1, 6, 4, 2, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377879409, 'issue_id': 1521531738, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 20, 41, tzinfo=datetime.timezone.utc)}]","lavalamp (Assginee) on (2023-01-05 22:23:26 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-05 22:23:33 UTC): LGTM label has been added.  <details>Git tree hash: 9627d165b6752056122d2aa92ba29acbe21bfcde</details>

k8s-ci-robot on (2023-01-05 22:23:52 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114867#"" title=""Author self-approved"">deads2k</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114867#issuecomment-1372869149"" title=""Approved"">lavalamp</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [lavalamp]
- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [lavalamp]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-triage-robot on (2023-01-06 00:28:34 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114867) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

pacoxu on (2023-01-06 03:28:21 UTC): /retest

pacoxu on (2023-01-06 04:02:26 UTC): /test pull-kubernetes-unit
[TestDifferentWidths](https://github.com/kubernetes/kubernetes/issues/106579) flake

cici37 on (2023-01-10 21:20:41 UTC): /triage accepted

"
1521454130,pull_request,closed,,staging/src/k8s.io/client-go/rest/request: Log latency for failed requests,"#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

Before this commit, this line could generate errors like:

    client rate limiter Wait returned an error: context deadline exceeded

This commit adds the latency to the error message, to match some of the non-error logging that had already included the latency.  It should help debug some failure modes, such as when client-side rate limiting is given an absurdly short or already expired Context deadline.

#### Does this PR introduce a user-facing change?

```release-note
NONE
```",wking,2023-01-05 21:31:59+00:00,['deads2k'],2023-06-09 23:44:00+00:00,2023-06-09 23:43:59+00:00,https://github.com/kubernetes/kubernetes/pull/114866,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('lifecycle/rotten', 'Denotes an issue or PR that has aged beyond stale and will be auto-closed.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372802694, 'issue_id': 1521454130, 'author': 'k8s-ci-robot', 'body': ""Hi @wking. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 5, 21, 32, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372803215, 'issue_id': 1521454130, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114866#"" title=""Author self-approved"">wking</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign caesarxuchao for approval by writing `/assign @caesarxuchao` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""caesarxuchao""]} -->', 'created_at': datetime.datetime(2023, 1, 5, 21, 32, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377880437, 'issue_id': 1521454130, 'author': 'cici37', 'body': '/assign @deads2k \r\n/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 21, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1502439861, 'issue_id': 1521454130, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 4, 10, 22, 58, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1542932217, 'issue_id': 1521454130, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle rotten\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 5, 10, 23, 30, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1585284081, 'issue_id': 1521454130, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 6, 9, 23, 43, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1585284110, 'issue_id': 1521454130, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114866#issuecomment-1585284081):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 6, 9, 23, 44, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 21:32:07 UTC): Hi @wking. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-05 21:32:42 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114866#"" title=""Author self-approved"">wking</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign caesarxuchao for approval by writing `/assign @caesarxuchao` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""caesarxuchao""]} -->

cici37 on (2023-01-10 21:21:11 UTC): /assign @deads2k 
/triage accepted

k8s-triage-robot on (2023-04-10 22:58:12 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2023-05-10 23:30:07 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle rotten

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2023-06-09 23:43:54 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2023-06-09 23:44:00 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114866#issuecomment-1585284081):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1521426116,pull_request,closed,,Cherry pick 114857 to release-1.24,"#### What type of PR is this?

/kind bug

#### What this PR does / why we need it:

Fixes kubernetes#114661 by picking up https://github.com/google/cel-go/pull/620

This bug can cause all requests matching the admission rules fail with an error rather than be properly validated.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #114661

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?

```release-note
Fix bug in CRD Validation Rules (beta) and ValidatingAdmissionPolicy (alpha) where all admission requests could result in `internal error: runtime error: index out of range [3] with length 3 evaluating rule: <rule name>` under certain circumstances.
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",jpbetz,2023-01-05 21:06:43+00:00,"['liggitt', 'Verolop']",2023-01-12 02:13:06+00:00,2023-01-12 02:13:06+00:00,https://github.com/kubernetes/kubernetes/pull/114865,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('cherry-pick-approved', 'Indicates a cherry-pick PR into a release branch has been approved by the release branch manager.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372764205, 'issue_id': 1521426116, 'author': 'jpbetz', 'body': '/sig api-machinery\r\n/triage accepted\r\ncc @liggitt @TristonianJones', 'created_at': datetime.datetime(2023, 1, 5, 21, 9, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372823402, 'issue_id': 1521426116, 'author': 'liggitt', 'body': 'TestCostEstimation unit test failure looks... related and surprising. Did we need to react to that change in 1.25+', 'created_at': datetime.datetime(2023, 1, 5, 21, 51, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373137460, 'issue_id': 1521426116, 'author': 'jpbetz', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 6, 4, 41, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373140473, 'issue_id': 1521426116, 'author': 'liggitt', 'body': '/lgtm\r\n/approve\r\n/cc @kubernetes/release-managers', 'created_at': datetime.datetime(2023, 1, 6, 4, 47, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373140531, 'issue_id': 1521426116, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 1b0de8ab796e566308d15cccba2028c5de76514a</details>', 'created_at': datetime.datetime(2023, 1, 6, 4, 48, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373140644, 'issue_id': 1521426116, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114865#"" title=""Author self-approved"">jpbetz</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114865#issuecomment-1373140473"" title=""Approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.24/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 6, 4, 48, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373926684, 'issue_id': 1521426116, 'author': 'liggitt', 'body': '/priority important-soon', 'created_at': datetime.datetime(2023, 1, 6, 17, 33, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379672493, 'issue_id': 1521426116, 'author': 'Verolop', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 12, 0, 57, 15, tzinfo=datetime.timezone.utc)}]","jpbetz (Issue Creator) on (2023-01-05 21:09:22 UTC): /sig api-machinery
/triage accepted
cc @liggitt @TristonianJones

liggitt (Assginee) on (2023-01-05 21:51:34 UTC): TestCostEstimation unit test failure looks... related and surprising. Did we need to react to that change in 1.25+

jpbetz (Issue Creator) on (2023-01-06 04:41:14 UTC): /retest

liggitt (Assginee) on (2023-01-06 04:47:57 UTC): /lgtm
/approve
/cc @kubernetes/release-managers

k8s-ci-robot on (2023-01-06 04:48:05 UTC): LGTM label has been added.  <details>Git tree hash: 1b0de8ab796e566308d15cccba2028c5de76514a</details>

k8s-ci-robot on (2023-01-06 04:48:20 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114865#"" title=""Author self-approved"">jpbetz</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114865#issuecomment-1373140473"" title=""Approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.24/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

liggitt (Assginee) on (2023-01-06 17:33:11 UTC): /priority important-soon

Verolop (Assginee) on (2023-01-12 00:57:15 UTC): /lgtm

"
1521421469,pull_request,closed,,Cherry pick 114857 to release-1.25,"#### What type of PR is this?

/kind bug

#### What this PR does / why we need it:

Fixes kubernetes#114661 by picking up https://github.com/google/cel-go/pull/620

This bug can cause all requests matching the admission rules fail with an error rather than be properly validated.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #114661

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?

```release-note
Fix bug in CRD Validation Rules (beta) and ValidatingAdmissionPolicy (alpha) where all admission requests could result in `internal error: runtime error: index out of range [3] with length 3 evaluating rule: <rule name>` under certain circumstances.
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",jpbetz,2023-01-05 21:03:07+00:00,"['liggitt', 'Verolop']",2023-01-12 02:07:02+00:00,2023-01-12 02:07:02+00:00,https://github.com/kubernetes/kubernetes/pull/114864,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('cherry-pick-approved', 'Indicates a cherry-pick PR into a release branch has been approved by the release branch manager.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372764274, 'issue_id': 1521421469, 'author': 'jpbetz', 'body': '/sig api-machinery\r\n/triage accepted\r\ncc @liggitt @TristonianJones', 'created_at': datetime.datetime(2023, 1, 5, 21, 9, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372822679, 'issue_id': 1521421469, 'author': 'liggitt', 'body': '/lgtm\r\n/approve\r\n/priority important-soon\r\n/kind bug\r\n/cc @kubernetes/release-managers', 'created_at': datetime.datetime(2023, 1, 5, 21, 50, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372822803, 'issue_id': 1521421469, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114864#"" title=""Author self-approved"">jpbetz</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114864#issuecomment-1372822679"" title=""Approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.25/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 21, 51, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372822831, 'issue_id': 1521421469, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: b05394f8be19282681fc33c393e35c47bb47be6a</details>', 'created_at': datetime.datetime(2023, 1, 5, 21, 51, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379672034, 'issue_id': 1521421469, 'author': 'Verolop', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 12, 0, 56, 30, tzinfo=datetime.timezone.utc)}]","jpbetz (Issue Creator) on (2023-01-05 21:09:24 UTC): /sig api-machinery
/triage accepted
cc @liggitt @TristonianJones

liggitt (Assginee) on (2023-01-05 21:50:54 UTC): /lgtm
/approve
/priority important-soon
/kind bug
/cc @kubernetes/release-managers

k8s-ci-robot on (2023-01-05 21:51:01 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114864#"" title=""Author self-approved"">jpbetz</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114864#issuecomment-1372822679"" title=""Approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.25/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-ci-robot on (2023-01-05 21:51:02 UTC): LGTM label has been added.  <details>Git tree hash: b05394f8be19282681fc33c393e35c47bb47be6a</details>

Verolop (Assginee) on (2023-01-12 00:56:30 UTC): /lgtm

"
1521418302,pull_request,closed,,Use label selector for filtering out resources when pruning for kubectl diff.,"#### What type of PR is this?
/kind bug

#### What this PR does / why we need it:
Use label selector for filtering out resources when pruning for kubectl diff.
Matches same behavior as kubectl apply when it comes to pruning.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:
Label selector in used in kubectl apply when pruning
https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/pkg/cmd/apply/prune.go#L57

kubectl diff was ignoring label selector for pruning, so matching behavior with kubectl apply.

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Make kubectl diff --prune behave correctly with the --selector/-l flag
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",danlenar,2023-01-05 21:01:07+00:00,['ardaguclu'],2023-03-03 21:10:51+00:00,2023-01-10 06:13:25+00:00,https://github.com/kubernetes/kubernetes/pull/114863,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('area/test', None), ('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('area/kubectl', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372745994, 'issue_id': 1521418302, 'author': 'k8s-ci-robot', 'body': ""Hi @danlenar. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 5, 21, 1, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373454741, 'issue_id': 1521418302, 'author': 'ardaguclu', 'body': 'Good catch and thanks for the PR @danlenar \r\n\r\nPatch looks good to me. Would you mind adding integration test in here https://github.com/kubernetes/kubernetes/blob/3ceb213fc15c347874f50027977a76ee05a1bb92/test/cmd/diff.sh#L22 to assure that it is working as expected and also prevent possible regressions in the future?\r\n\r\n/ok-to-test', 'created_at': datetime.datetime(2023, 1, 6, 10, 38, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374622946, 'issue_id': 1521418302, 'author': 'danlenar', 'body': '@ardaguclu \r\n\r\nI added integration tests as requested.', 'created_at': datetime.datetime(2023, 1, 7, 21, 44, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375932369, 'issue_id': 1521418302, 'author': 'danlenar', 'body': '@ardaguclu \r\n\r\nI have removed the tests', 'created_at': datetime.datetime(2023, 1, 9, 16, 44, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375934549, 'issue_id': 1521418302, 'author': 'ardaguclu', 'body': 'Thanks\n\n/approve\n/lgtm', 'created_at': datetime.datetime(2023, 1, 9, 16, 46, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375934685, 'issue_id': 1521418302, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: fb366c80583db96193a158c0c1fa0b4b4f563d6e</details>', 'created_at': datetime.datetime(2023, 1, 9, 16, 46, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375935005, 'issue_id': 1521418302, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114863#issuecomment-1375934549"" title=""LGTM"">ardaguclu</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114863#"" title=""Author self-approved"">danlenar</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [ardaguclu]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 9, 16, 47, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376700476, 'issue_id': 1521418302, 'author': 'pacoxu', 'body': '/release-note-edit \r\n```release-note\r\nkubectl: use label selector for filtering out resources when pruning for kubectl diff\r\n```\r\n/retest', 'created_at': datetime.datetime(2023, 1, 10, 4, 2, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1439262132, 'issue_id': 1521418302, 'author': 'KnVerey', 'body': '@nathanmartins at a recent SIG CLI meeting you volunteered (hopefully I have the right Nathan!) to do the [cherry-picks](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-release/cherry-picks.md) to backport this fix to 1.24, 1.25 and 1.26. Are you still interested in that task?', 'created_at': datetime.datetime(2023, 2, 22, 0, 20, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1439978331, 'issue_id': 1521418302, 'author': 'nathanmartins', 'body': 'Yep, about to do them, I saw that the tests got merged yesterday!', 'created_at': datetime.datetime(2023, 2, 22, 13, 0, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1440000259, 'issue_id': 1521418302, 'author': 'nathanmartins', 'body': '@KnVerey, we discussed maybe backporting to 1.23. Are we still doing that, or is 1.24 far enough?', 'created_at': datetime.datetime(2023, 2, 22, 13, 16, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1440656999, 'issue_id': 1521418302, 'author': 'KnVerey', 'body': ""1.24 is far enough--that's when the feature was introduced (https://github.com/kubernetes/kubernetes/pull/105164), plus I believe 1.23 is out of support now anyway."", 'created_at': datetime.datetime(2023, 2, 22, 19, 15, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1454134171, 'issue_id': 1521418302, 'author': 'KnVerey', 'body': ""/triage accepted\r\n/priority important-soon\r\n\r\nThanks for opening the backports @nathanmartins !\r\n\r\nEspecially since we're backporting this, I'm going to try to make a little tweak to the release note emphasize that this was a critical bug fix rather than an enhancement:\r\n\r\n/release-note-edit\r\n\r\n```release-note\r\nMake kubectl diff --prune behave correctly with the --selector/-l flag\r\n```"", 'created_at': datetime.datetime(2023, 3, 3, 21, 10, 46, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 21:01:16 UTC): Hi @danlenar. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

ardaguclu (Assginee) on (2023-01-06 10:38:40 UTC): Good catch and thanks for the PR @danlenar 

Patch looks good to me. Would you mind adding integration test in here https://github.com/kubernetes/kubernetes/blob/3ceb213fc15c347874f50027977a76ee05a1bb92/test/cmd/diff.sh#L22 to assure that it is working as expected and also prevent possible regressions in the future?

/ok-to-test

danlenar (Issue Creator) on (2023-01-07 21:44:37 UTC): @ardaguclu 

I added integration tests as requested.

danlenar (Issue Creator) on (2023-01-09 16:44:47 UTC): @ardaguclu 

I have removed the tests

ardaguclu (Assginee) on (2023-01-09 16:46:41 UTC): Thanks

/approve
/lgtm

k8s-ci-robot on (2023-01-09 16:46:48 UTC): LGTM label has been added.  <details>Git tree hash: fb366c80583db96193a158c0c1fa0b4b4f563d6e</details>

k8s-ci-robot on (2023-01-09 16:47:03 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114863#issuecomment-1375934549"" title=""LGTM"">ardaguclu</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114863#"" title=""Author self-approved"">danlenar</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [ardaguclu]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

pacoxu on (2023-01-10 04:02:58 UTC): /release-note-edit 
```release-note
kubectl: use label selector for filtering out resources when pruning for kubectl diff
```
/retest

KnVerey on (2023-02-22 00:20:48 UTC): @nathanmartins at a recent SIG CLI meeting you volunteered (hopefully I have the right Nathan!) to do the [cherry-picks](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-release/cherry-picks.md) to backport this fix to 1.24, 1.25 and 1.26. Are you still interested in that task?

nathanmartins on (2023-02-22 13:00:19 UTC): Yep, about to do them, I saw that the tests got merged yesterday!

nathanmartins on (2023-02-22 13:16:03 UTC): @KnVerey, we discussed maybe backporting to 1.23. Are we still doing that, or is 1.24 far enough?

KnVerey on (2023-02-22 19:15:13 UTC): 1.24 is far enough--that's when the feature was introduced (https://github.com/kubernetes/kubernetes/pull/105164), plus I believe 1.23 is out of support now anyway.

KnVerey on (2023-03-03 21:10:46 UTC): /triage accepted
/priority important-soon

Thanks for opening the backports @nathanmartins !

Especially since we're backporting this, I'm going to try to make a little tweak to the release note emphasize that this was a critical bug fix rather than an enhancement:

/release-note-edit

```release-note
Make kubectl diff --prune behave correctly with the --selector/-l flag
```

"
1521388178,pull_request,closed,,Cherry pick 114857 to release-1.26,"#### What type of PR is this?

/kind bug

#### What this PR does / why we need it:

Fixes kubernetes#114661 by picking up https://github.com/google/cel-go/pull/620

This bug can cause all requests matching the admission rules fail with an error rather than be properly validated.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #114661

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?

```release-note
Fix bug in CRD Validation Rules (beta) and ValidatingAdmissionPolicy (alpha) where all admission requests could result in `internal error: runtime error: index out of range [3] with length 3 evaluating rule: <rule name>` under certain circumstances.
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",jpbetz,2023-01-05 20:42:33+00:00,"['liggitt', 'Verolop']",2023-01-12 02:13:06+00:00,2023-01-12 02:13:06+00:00,https://github.com/kubernetes/kubernetes/pull/114861,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('area/apiserver', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/cloudprovider', None), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('cherry-pick-approved', 'Indicates a cherry-pick PR into a release branch has been approved by the release branch manager.'), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372764355, 'issue_id': 1521388178, 'author': 'jpbetz', 'body': '/sig api-machinery\r\n/triage accepted\r\ncc @liggitt @TristonianJones', 'created_at': datetime.datetime(2023, 1, 5, 21, 9, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372822213, 'issue_id': 1521388178, 'author': 'liggitt', 'body': '/lgtm\r\n/approve\r\n/priority important-soon\r\n/kind bug\r\n/cc @kubernetes/release-managers', 'created_at': datetime.datetime(2023, 1, 5, 21, 50, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372822358, 'issue_id': 1521388178, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114861#"" title=""Author self-approved"">jpbetz</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114861#issuecomment-1372822213"" title=""Approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/staging/src/k8s.io/controller-manager/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [liggitt]\n- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/vendor/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 21, 50, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372822387, 'issue_id': 1521388178, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 70a4b693fc9a25e72245e926e71667f4201aec69</details>', 'created_at': datetime.datetime(2023, 1, 5, 21, 50, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373410664, 'issue_id': 1521388178, 'author': 'xmudrii', 'body': ""@jpbetz @liggitt Just to make sure, we don't need to cherry-pick this to 1.23?"", 'created_at': datetime.datetime(2023, 1, 6, 9, 49, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373883698, 'issue_id': 1521388178, 'author': 'liggitt', 'body': ""> @jpbetz @liggitt Just to make sure, we don't need to cherry-pick this to 1.23?\r\n\r\nCEL was promoted to beta in 1.25, so 1.24 is the earliest server version that could be exposed to this issue without having opted into an alpha feature... I don't think we should take this back to 1.23"", 'created_at': datetime.datetime(2023, 1, 6, 16, 47, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379671336, 'issue_id': 1521388178, 'author': 'Verolop', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 12, 0, 55, 27, tzinfo=datetime.timezone.utc)}]","jpbetz (Issue Creator) on (2023-01-05 21:09:26 UTC): /sig api-machinery
/triage accepted
cc @liggitt @TristonianJones

liggitt (Assginee) on (2023-01-05 21:50:32 UTC): /lgtm
/approve
/priority important-soon
/kind bug
/cc @kubernetes/release-managers

k8s-ci-robot on (2023-01-05 21:50:38 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114861#"" title=""Author self-approved"">jpbetz</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114861#issuecomment-1372822213"" title=""Approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/staging/src/k8s.io/controller-manager/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [liggitt]
- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/vendor/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-ci-robot on (2023-01-05 21:50:39 UTC): LGTM label has been added.  <details>Git tree hash: 70a4b693fc9a25e72245e926e71667f4201aec69</details>

xmudrii on (2023-01-06 09:49:38 UTC): @jpbetz @liggitt Just to make sure, we don't need to cherry-pick this to 1.23?

liggitt (Assginee) on (2023-01-06 16:47:13 UTC): CEL was promoted to beta in 1.25, so 1.24 is the earliest server version that could be exposed to this issue without having opted into an alpha feature... I don't think we should take this back to 1.23

Verolop (Assginee) on (2023-01-12 00:55:27 UTC): /lgtm

"
1521379765,pull_request,closed,,"cmd/kubeapiserver: Clean code, avoid unnecessary condition, avoid non-nil but zero-length slice","Signed-off-by: TommyStarK <thomasmilox@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

If applied this commit will clean a bit the code by avoiding unnecessary conditions,  avoid declaring non-nil but zero-length slice, use make to initialize map and name unused args with `_`

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",TommyStarK,2023-01-05 20:36:57+00:00,['liggitt'],2023-01-10 21:21:47+00:00,2023-01-06 19:22:09+00:00,https://github.com/kubernetes/kubernetes/pull/114860,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372716125, 'issue_id': 1521379765, 'author': 'k8s-ci-robot', 'body': ""Hi @TommyStarK. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 5, 20, 37, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372721116, 'issue_id': 1521379765, 'author': 'TommyStarK', 'body': 'cc @liggitt, as usual any feedback from you will be greatly appreciated :)', 'created_at': datetime.datetime(2023, 1, 5, 20, 41, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373490225, 'issue_id': 1521379765, 'author': 'TommyStarK', 'body': ""@liggitt I realize I'm starting to fall into the pattern of chasing contributions rather than offering less but with real improvements. I will take the time to find a topic where I can propose a relevant and useful change and avoid taking up your time unnecessarily. Thank you for everything.\r\nps: I can even go ahead and close this PR if you prefer.\r\n\r\nBest regards,"", 'created_at': datetime.datetime(2023, 1, 6, 11, 21, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373881379, 'issue_id': 1521379765, 'author': 'liggitt', 'body': ""thanks for trying to balance churn of review/CI with net benefit of changes\r\n\r\nin this PR, the `return kubeAPIServerConfig.Complete().New(delegateAPIServer)` cleanup and the os.Hostname reorder seem like clear improvements to readability... I'd probably drop the rest of the changes"", 'created_at': datetime.datetime(2023, 1, 6, 16, 44, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373902945, 'issue_id': 1521379765, 'author': 'TommyStarK', 'body': 'understood and done @liggitt', 'created_at': datetime.datetime(2023, 1, 6, 17, 7, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373904916, 'issue_id': 1521379765, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 6, 17, 9, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373905031, 'issue_id': 1521379765, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 507060b8cd0a87565d60264f84764e1402f84d6f</details>', 'created_at': datetime.datetime(2023, 1, 6, 17, 9, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373905364, 'issue_id': 1521379765, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114860#issuecomment-1373904916"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114860#"" title=""Author self-approved"">TommyStarK</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[cmd/kube-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-apiserver/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 6, 17, 9, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377881512, 'issue_id': 1521379765, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 21, 42, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 20:37:06 UTC): Hi @TommyStarK. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

TommyStarK (Issue Creator) on (2023-01-05 20:41:45 UTC): cc @liggitt, as usual any feedback from you will be greatly appreciated :)

TommyStarK (Issue Creator) on (2023-01-06 11:21:16 UTC): @liggitt I realize I'm starting to fall into the pattern of chasing contributions rather than offering less but with real improvements. I will take the time to find a topic where I can propose a relevant and useful change and avoid taking up your time unnecessarily. Thank you for everything.
ps: I can even go ahead and close this PR if you prefer.

Best regards,

liggitt (Assginee) on (2023-01-06 16:44:53 UTC): thanks for trying to balance churn of review/CI with net benefit of changes

in this PR, the `return kubeAPIServerConfig.Complete().New(delegateAPIServer)` cleanup and the os.Hostname reorder seem like clear improvements to readability... I'd probably drop the rest of the changes

TommyStarK (Issue Creator) on (2023-01-06 17:07:08 UTC): understood and done @liggitt

liggitt (Assginee) on (2023-01-06 17:09:10 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-06 17:09:16 UTC): LGTM label has been added.  <details>Git tree hash: 507060b8cd0a87565d60264f84764e1402f84d6f</details>

k8s-ci-robot on (2023-01-06 17:09:35 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114860#issuecomment-1373904916"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114860#"" title=""Author self-approved"">TommyStarK</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[cmd/kube-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-apiserver/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

cici37 on (2023-01-10 21:21:42 UTC): /triage accepted

"
1521359857,pull_request,closed,,dependencies: update ginkgo to v2.7.0,"
#### What type of PR is this?
/kind cleanup

#### What this PR does / why we need it:

The new ginkgo release adds sorting of specs. This was triggered by the observation that parallel test execution of Kubernetes E2E tests sometimes ran the same spec twice and (presumably) other specs not at all because spec order was random due to iteration over a map.

Sorting should avoid that problem.

#### Special notes for your reviewer:

PR #114761 fixed the randomness in the E2E storage test. That change is no longer necessary and it can be reverted.

#### Does this PR introduce a user-facing change?

```release-note
NONE
```

/cc @onsi",pohly,2023-01-05 20:23:33+00:00,['aojea'],2023-01-10 23:25:40+00:00,2023-01-10 23:25:38+00:00,https://github.com/kubernetes/kubernetes/pull/114859,"[('area/test', None), ('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('area/kubectl', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/cloudprovider', None), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/instrumentation', 'Categorizes an issue or PR as relevant to SIG Instrumentation.'), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('area/code-generation', ''), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372703067, 'issue_id': 1521359857, 'author': 'k8s-ci-robot', 'body': ""@pohly: GitHub didn't allow me to request PR reviews from the following users: onsi.\n\nNote that only [kubernetes members](https://github.com/orgs/kubernetes/people) and repo collaborators can review this PR, and authors cannot review their own PRs.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114859):\n\n>\r\n>#### What type of PR is this?\r\n>/kind cleanup\r\n>\r\n>#### What this PR does / why we need it:\r\n>\r\n>The new ginkgo release adds sorting of specs. This was triggered by the observation that parallel test execution of Kubernetes E2E tests sometimes ran the same spec twice and (presumably) other specs not at all because spec order was random due to iteration over a map.\r\n>\r\n>Sorting should avoid that problem.\r\n>\r\n>#### Special notes for your reviewer:\r\n>\r\n>PR #114761 fixed the randomness in the E2E storage test. That change is no longer necessary and it can be reverted.\r\n>\r\n>#### Does this PR introduce a user-facing change?\r\n>\r\n>```release-note\r\n>NONE\r\n>```\r\n>\r\n>/cc @onsi\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 5, 20, 23, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373622482, 'issue_id': 1521359857, 'author': 'onsi', 'body': ""thanks @pohly - i think a useful validation would be to grab the report output from this PR (either JSON or JUnit) and grab the report output from a recent test run that has the same test suite but uses the prior version of ginkgo - and compare to validate that things have been deduped/ordered correctly. ideally both would have run in parallel but that's actually not super important.\n\ni'd be happy to do that work if you can point me at the relevant json or xml files."", 'created_at': datetime.datetime(2023, 1, 6, 13, 25, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373861754, 'issue_id': 1521359857, 'author': 'aojea', 'body': ""> i think a useful validation would be to grab the report output from this PR (either JSON or JUnit)\r\n\r\n> i'd be happy to do that work if you can point me at the relevant json or xml files.\r\n\r\n@onsi \r\n\r\n![image](https://user-images.githubusercontent.com/6450081/211053453-636764dd-b9b7-46f0-921d-2ab95bb3e33b.png)\r\n\r\n![image](https://user-images.githubusercontent.com/6450081/211053553-3f657465-99aa-4812-88e9-1f5323162b22.png)\r\n\r\n![image](https://user-images.githubusercontent.com/6450081/211053673-bdccc19b-6c12-4f9b-8817-4e3ba9121d07.png)\r\n\r\n![image](https://user-images.githubusercontent.com/6450081/211053732-c2ad2944-1d9b-441d-932c-f2f08bc4e85a.png)\r\n\r\n😄"", 'created_at': datetime.datetime(2023, 1, 6, 16, 23, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374167321, 'issue_id': 1521359857, 'author': 'onsi', 'body': 'thanks @aojea - so ""pull-kubernetes-conformance-kind-ipv6-parallel"" is the one I should always look at?  I had always assumed ""kind"" and ""ipv6"" meant ""a subset of"" but you\'re saying this is _the_ test suite, correct?', 'created_at': datetime.datetime(2023, 1, 6, 21, 42, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374609612, 'issue_id': 1521359857, 'author': 'pohly', 'body': ""We have different jobs which run in different environments (kind vs. gce, for example) and have different purposes and test coverage. `pull-kubernetes-e2e-kind ` and `pull-kubernetes-e2e-gce` are some of the bigger jobs. The latter has more tests.\r\n\r\nHere's a run of `pull-kubernetes-e2e-gce` for this PR: https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114859/pull-kubernetes-e2e-gce/1611096801559973888/\r\n\r\nHere's one for a different PR: https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/batch/pull-kubernetes-e2e-gce/1611104335188463616\r\n\r\nIt was started right next to the one for this PR and is for a PR  which didn't change tests, so the results should be comparable."", 'created_at': datetime.datetime(2023, 1, 7, 20, 56, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375099049, 'issue_id': 1521359857, 'author': 'onsi', 'body': 'Quick update.  I pulled the JSON reports from both of the runs @pohly suggested - and from the original run that first surfaced this issue.  I\'m finding that the JSON report from here:\r\n\r\nhttps://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/batch/pull-kubernetes-e2e-gce/1611104335188463616\r\n\r\n(i.e. the ""different PR"" that @pohly mentions) is fine: there are no duplicate specs being run.  I believe this is because this run had the slice code that @pohly inserted to ensure a stable distribution of specs).\r\n\r\nUnfortunately the report for this PR:\r\n\r\n https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/batch/pull-kubernetes-e2e-gce/1611104335188463616\r\n\r\n_does_ exhibit the duplicate specs.  I\'m not sure why yet.  When I iterate over a map locally and run in parallel I see the spec duplication issue occur when I turn off my Ginkgo-side sorting and then see it disappear when I turn my sorting back on.  So I know the fix is helping make specs generated by iterating over maps deterministic... but it doesn\'t seem to be working here.\r\n\r\nI have two hypotheses:\r\n\r\n1. There\'s something about this particular suite (e.g. something obscure related to file names or the actual spec structure in use here) that is breaking my sort solution.  I\'m going to dig into this by using the report to generate a synthetic spec tree and then look at how the sort does/does not work for it.\r\n\r\n2. Somehow the spec run for this PR didn\'t actually pick up the latest sha of Ginkgo?  I stared at the logs and I\'m pretty sure it did.  But.... possibly not?\r\n\r\nFinally - some good news: these are the only specs that exhibit this behavior.  So, as far as I can tell, no other dynamically generated specs in the suite have a non-deterministic order (and this includes specs that were skipped by e2e-gce).\r\n\r\nWill dig into it some more tomorrow.', 'created_at': datetime.datetime(2023, 1, 9, 4, 35, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375105065, 'issue_id': 1521359857, 'author': 'onsi', 'body': ""There was a third hypotheses that proved correct:  I had a bug on my end.  I somehow hadn't thought to try with `--randomize-all`.  The details aren't super interesting or important but I should have a fix out by tomorrow - I just want to take some time in the morning to add a better integration test on my end to make sure I cover this case more comprehensively and avoid a regression in the future."", 'created_at': datetime.datetime(2023, 1, 9, 4, 53, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375538186, 'issue_id': 1521359857, 'author': 'bart0sh', 'body': '/triage accepted\r\n/priority important-soon', 'created_at': datetime.datetime(2023, 1, 9, 12, 13, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375956610, 'issue_id': 1521359857, 'author': 'onsi', 'body': ""Alright - all fixed on my end.  The latest sha on Ginkgo master now correctly orders specs.  @pohly and/or @aojea do you mind bumping and rerunning this again?  Once that's done I'll grab the report JSON and run it through my validation.  If all goes well I'll cut an actual Ginkgo release."", 'created_at': datetime.datetime(2023, 1, 9, 17, 3, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375985389, 'issue_id': 1521359857, 'author': 'pohly', 'body': 'This PR now uses https://github.com/onsi/ginkgo/commit/89dda203832c75e84fcfcca8963e6242c00f1a5b', 'created_at': datetime.datetime(2023, 1, 9, 17, 22, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375992427, 'issue_id': 1521359857, 'author': 'onsi', 'body': 'thanks @pohly  - will keep an eye on it and circle back later today.', 'created_at': datetime.datetime(2023, 1, 9, 17, 28, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376131669, 'issue_id': 1521359857, 'author': 'onsi', 'body': ""ok this last run looks good.  I'll be cutting a new Ginkgo release soon.  this will be a minor release as it will include a few additional features that have been added recently."", 'created_at': datetime.datetime(2023, 1, 9, 18, 57, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376143100, 'issue_id': 1521359857, 'author': 'onsi', 'body': 'Ginkgo 2.7.0 was released which includes this fix', 'created_at': datetime.datetime(2023, 1, 9, 19, 7, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376188007, 'issue_id': 1521359857, 'author': 'pohly', 'body': 'This issue with random test coverage must have existed for a long time, right? The storage tests which triggered it are years old.\r\n\r\nI think this points towards a blind spot in our E2E testing: unless someone manually checks test coverage, we are not getting alerted when tests that should run don\'t run anymore. I\'m not sure what the solution is - after all, which tests to run is determined fairly dynamically in a decentralized way, so there can\'t be a central list of ""these tests must run"".', 'created_at': datetime.datetime(2023, 1, 9, 19, 45, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376295313, 'issue_id': 1521359857, 'author': 'onsi', 'body': '> This issue with random test coverage must have existed for a long time, right? The storage tests which triggered it are years old.\r\n\r\nYes, that\'s right.  It was only caught because of a fortunate confluence of events.\r\n\r\n> I think this points towards a blind spot in our E2E testing: unless someone manually checks test coverage, we are not getting alerted when tests that should run don\'t run anymore. I\'m not sure what the solution is - after all, which tests to run is determined fairly dynamically in a decentralized way, so there can\'t be a central list of ""these tests must run"".\r\n\r\nI too am not sure that a bullet-proof solution exists.  But I can think of a few things to consider prioritizing:\r\n\r\n### Ensure all specs have a unique name\r\n\r\nIt seems that prow\'s current behavior when computing the rollup for the `JUnit` section of the report (e.g. ""873/7092"" tests passed) is to parse the junit xml and count specs by their `Name` (i.e. the concatenation of their container strings and `It` string that Ginkgo [generates](https://github.com/onsi/ginkgo/blob/master/reporters/junit_report.go#L180-L194) to populate the `Name` field of the `JUnitTestCase`).  As I was digging into this I noticed that the numerator (""873"") was not stable between different runs in the presence of duplicate specs - this is because different parallel runs were happening to run different subsets of the storage tests.  Prow was merging all specs with the same name and counting them as one.  (Incidentally this is also how @aojea discovered the issue - we had a case where a spec ran more than once.  In one case it ran and passed and then it later ran and failed.  Prow marked this as ""flaky"" - which means prow isn\'t reading the [`FlakeAttempts`](https://github.com/onsi/ginkgo/blob/master/reporters/junit_report.go#L172) property to determine flakiness - it\'s just doing it\'s own aggregation of the report making assumptions that aren\'t strictly compatible with GInkgo).\r\n\r\nBut that\'s all background information.  A helpful policy and validation might be to require that every spec have a unique `Name`.  That would guard against:\r\n(a) developers inadvertantly having specs with the same name, which appears to generate confusing/inconsistent Prow reports\r\n(b) this weird parallel duplication thing from happening again.  (I do have tests in Ginkgo now that will ensure that Ginkgo doesn\'t cause this kind of problem any more... but I understand that some degree of trust has been lost here!)\r\n\r\nThis could be as simple as parsing the xml or json report and asserting that `Name` is unique.  Alternatively you can add a `ReportAfterSuite` that will run after the suite has completed and will have access to the spec report that ran.  It could then quickly validate that all spec names are unique and, if not, fail with a clear error.  I do that in the [integration spec](https://github.com/onsi/ginkgo/blob/master/integration/_fixtures/nondeterministic_fixture/nondeterministic_fixture_suite_test.go#L17-L36) that I just added to ensure this issue doesn\'t occur again.\r\n\r\n### Compare the output of `ginkgo --dry-run` to what actually ran\r\n\r\nIt\'s true that there is so much dynamism here (particularly with the use of filters and labels) that it could be hard to predict what ought to run.  One thing to potentially look into would be something like this:\r\n\r\n1. Run `ginkgo --dry-run --json-report=preliminary.json PLUS-ALL-YOUR-ADDITIONAL-FILTER-FLAGS`\r\n2. Run your actual `ginkgo` command\r\n3. Write something that compares the output of `ginkgo` to the output of `--dry-run` captured in `preliminary.json` (or `.xml` if you prefer).\r\n\r\nThe idea here would be that `--dry-run` would not have any of the complexity of actually running specs or even running in parallel.  It simply filters specs and generates a report of what will run (these will have `status=""passed""`) and what will be skipped (`status=""skipped""`).  Of course I know that y\'all do some runtime `Skip()`ing as well so whatever compares and constrasts will have to be smart about things.  Here too I could imagine doing this in a `ReportAfterSuite` so that the spec is self-validating and you don\'t have to maintain anything outside of the e2e suite itself.\r\n\r\n---\r\n\r\nObviously, without\r\n\r\n> a central list of ""these tests must run""\r\n\r\nthese are, at best, mitigations that reduce risk.  But they are options that come to mind.', 'created_at': datetime.datetime(2023, 1, 9, 20, 48, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377504049, 'issue_id': 1521359857, 'author': 'pohly', 'body': ""> Ensure all specs have a unique name\r\n\r\nI don't think that this is a problem, even if we don't enforce it.\r\n\r\n> Compare the output of ginkgo --dry-run to what actually ran\r\n\r\nThat would catch bugs in Ginkgo. Despite this episode with sorting of specs I still trust that this isn't going to be much of a problem :grin: \r\n\r\nMy main concern is that we configure jobs incorrectly or add skip calls that don't work as intended. That can only be detected by monitoring a job over time and alerting when tests disappear. But as there are legitimate reasons for that, too, it cannot be fully automatic. :cry:"", 'created_at': datetime.datetime(2023, 1, 10, 16, 11, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377505830, 'issue_id': 1521359857, 'author': 'pohly', 'body': '/cc @kubernetes/dep-approvers \r\n\r\nThis Ginkgo update is ready for review + approval.', 'created_at': datetime.datetime(2023, 1, 10, 16, 12, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377606620, 'issue_id': 1521359857, 'author': 'liggitt', 'body': '/test pull-kubernetes-dependencies\r\nto run check added in https://github.com/kubernetes/kubernetes/pull/114952', 'created_at': datetime.datetime(2023, 1, 10, 17, 27, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377888495, 'issue_id': 1521359857, 'author': 'pohly', 'body': '@liggitt: pull-kubernetes-dependencies passed.', 'created_at': datetime.datetime(2023, 1, 10, 21, 25, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377933411, 'issue_id': 1521359857, 'author': 'aojea', 'body': '/lgtm\r\n/approve\r\n\r\nfor the test, missing deps\r\nThanks', 'created_at': datetime.datetime(2023, 1, 10, 21, 47, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377933554, 'issue_id': 1521359857, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 733e4d44f85e94610e75034b18b678d2ba8b2711</details>', 'created_at': datetime.datetime(2023, 1, 10, 21, 47, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377943112, 'issue_id': 1521359857, 'author': 'liggitt', 'body': '/approve\r\nfor deps', 'created_at': datetime.datetime(2023, 1, 10, 21, 55, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377943668, 'issue_id': 1521359857, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114859#issuecomment-1377933411"" title=""Approved"">aojea</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114859#issuecomment-1377943112"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114859#"" title=""Author self-approved"">pohly</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apimachinery/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)~~ [liggitt,pohly]\n- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [liggitt]\n- ~~[test/e2e/storage/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/OWNERS)~~ [aojea,liggitt,pohly]\n- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 10, 21, 56, 21, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 20:23:35 UTC): @pohly: GitHub didn't allow me to request PR reviews from the following users: onsi.

Note that only [kubernetes members](https://github.com/orgs/kubernetes/people) and repo collaborators can review this PR, and authors cannot review their own PRs.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114859):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

onsi on (2023-01-06 13:25:59 UTC): thanks @pohly - i think a useful validation would be to grab the report output from this PR (either JSON or JUnit) and grab the report output from a recent test run that has the same test suite but uses the prior version of ginkgo - and compare to validate that things have been deduped/ordered correctly. ideally both would have run in parallel but that's actually not super important.

i'd be happy to do that work if you can point me at the relevant json or xml files.

aojea (Assginee) on (2023-01-06 16:23:30 UTC): @onsi 

![image](https://user-images.githubusercontent.com/6450081/211053453-636764dd-b9b7-46f0-921d-2ab95bb3e33b.png)

![image](https://user-images.githubusercontent.com/6450081/211053553-3f657465-99aa-4812-88e9-1f5323162b22.png)

![image](https://user-images.githubusercontent.com/6450081/211053673-bdccc19b-6c12-4f9b-8817-4e3ba9121d07.png)

![image](https://user-images.githubusercontent.com/6450081/211053732-c2ad2944-1d9b-441d-932c-f2f08bc4e85a.png)

😄

onsi on (2023-01-06 21:42:01 UTC): thanks @aojea - so ""pull-kubernetes-conformance-kind-ipv6-parallel"" is the one I should always look at?  I had always assumed ""kind"" and ""ipv6"" meant ""a subset of"" but you're saying this is _the_ test suite, correct?

pohly (Issue Creator) on (2023-01-07 20:56:07 UTC): We have different jobs which run in different environments (kind vs. gce, for example) and have different purposes and test coverage. `pull-kubernetes-e2e-kind ` and `pull-kubernetes-e2e-gce` are some of the bigger jobs. The latter has more tests.

Here's a run of `pull-kubernetes-e2e-gce` for this PR: https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114859/pull-kubernetes-e2e-gce/1611096801559973888/

Here's one for a different PR: https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/batch/pull-kubernetes-e2e-gce/1611104335188463616

It was started right next to the one for this PR and is for a PR  which didn't change tests, so the results should be comparable.

onsi on (2023-01-09 04:35:54 UTC): Quick update.  I pulled the JSON reports from both of the runs @pohly suggested - and from the original run that first surfaced this issue.  I'm finding that the JSON report from here:

https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/batch/pull-kubernetes-e2e-gce/1611104335188463616

(i.e. the ""different PR"" that @pohly mentions) is fine: there are no duplicate specs being run.  I believe this is because this run had the slice code that @pohly inserted to ensure a stable distribution of specs).

Unfortunately the report for this PR:

 https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/batch/pull-kubernetes-e2e-gce/1611104335188463616

_does_ exhibit the duplicate specs.  I'm not sure why yet.  When I iterate over a map locally and run in parallel I see the spec duplication issue occur when I turn off my Ginkgo-side sorting and then see it disappear when I turn my sorting back on.  So I know the fix is helping make specs generated by iterating over maps deterministic... but it doesn't seem to be working here.

I have two hypotheses:

1. There's something about this particular suite (e.g. something obscure related to file names or the actual spec structure in use here) that is breaking my sort solution.  I'm going to dig into this by using the report to generate a synthetic spec tree and then look at how the sort does/does not work for it.

2. Somehow the spec run for this PR didn't actually pick up the latest sha of Ginkgo?  I stared at the logs and I'm pretty sure it did.  But.... possibly not?

Finally - some good news: these are the only specs that exhibit this behavior.  So, as far as I can tell, no other dynamically generated specs in the suite have a non-deterministic order (and this includes specs that were skipped by e2e-gce).

Will dig into it some more tomorrow.

onsi on (2023-01-09 04:53:13 UTC): There was a third hypotheses that proved correct:  I had a bug on my end.  I somehow hadn't thought to try with `--randomize-all`.  The details aren't super interesting or important but I should have a fix out by tomorrow - I just want to take some time in the morning to add a better integration test on my end to make sure I cover this case more comprehensively and avoid a regression in the future.

bart0sh on (2023-01-09 12:13:45 UTC): /triage accepted
/priority important-soon

onsi on (2023-01-09 17:03:42 UTC): Alright - all fixed on my end.  The latest sha on Ginkgo master now correctly orders specs.  @pohly and/or @aojea do you mind bumping and rerunning this again?  Once that's done I'll grab the report JSON and run it through my validation.  If all goes well I'll cut an actual Ginkgo release.

pohly (Issue Creator) on (2023-01-09 17:22:53 UTC): This PR now uses https://github.com/onsi/ginkgo/commit/89dda203832c75e84fcfcca8963e6242c00f1a5b

onsi on (2023-01-09 17:28:17 UTC): thanks @pohly  - will keep an eye on it and circle back later today.

onsi on (2023-01-09 18:57:23 UTC): ok this last run looks good.  I'll be cutting a new Ginkgo release soon.  this will be a minor release as it will include a few additional features that have been added recently.

onsi on (2023-01-09 19:07:10 UTC): Ginkgo 2.7.0 was released which includes this fix

pohly (Issue Creator) on (2023-01-09 19:45:28 UTC): This issue with random test coverage must have existed for a long time, right? The storage tests which triggered it are years old.

I think this points towards a blind spot in our E2E testing: unless someone manually checks test coverage, we are not getting alerted when tests that should run don't run anymore. I'm not sure what the solution is - after all, which tests to run is determined fairly dynamically in a decentralized way, so there can't be a central list of ""these tests must run"".

onsi on (2023-01-09 20:48:32 UTC): Yes, that's right.  It was only caught because of a fortunate confluence of events.


I too am not sure that a bullet-proof solution exists.  But I can think of a few things to consider prioritizing:

### Ensure all specs have a unique name

It seems that prow's current behavior when computing the rollup for the `JUnit` section of the report (e.g. ""873/7092"" tests passed) is to parse the junit xml and count specs by their `Name` (i.e. the concatenation of their container strings and `It` string that Ginkgo [generates](https://github.com/onsi/ginkgo/blob/master/reporters/junit_report.go#L180-L194) to populate the `Name` field of the `JUnitTestCase`).  As I was digging into this I noticed that the numerator (""873"") was not stable between different runs in the presence of duplicate specs - this is because different parallel runs were happening to run different subsets of the storage tests.  Prow was merging all specs with the same name and counting them as one.  (Incidentally this is also how @aojea discovered the issue - we had a case where a spec ran more than once.  In one case it ran and passed and then it later ran and failed.  Prow marked this as ""flaky"" - which means prow isn't reading the [`FlakeAttempts`](https://github.com/onsi/ginkgo/blob/master/reporters/junit_report.go#L172) property to determine flakiness - it's just doing it's own aggregation of the report making assumptions that aren't strictly compatible with GInkgo).

But that's all background information.  A helpful policy and validation might be to require that every spec have a unique `Name`.  That would guard against:
(a) developers inadvertantly having specs with the same name, which appears to generate confusing/inconsistent Prow reports
(b) this weird parallel duplication thing from happening again.  (I do have tests in Ginkgo now that will ensure that Ginkgo doesn't cause this kind of problem any more... but I understand that some degree of trust has been lost here!)

This could be as simple as parsing the xml or json report and asserting that `Name` is unique.  Alternatively you can add a `ReportAfterSuite` that will run after the suite has completed and will have access to the spec report that ran.  It could then quickly validate that all spec names are unique and, if not, fail with a clear error.  I do that in the [integration spec](https://github.com/onsi/ginkgo/blob/master/integration/_fixtures/nondeterministic_fixture/nondeterministic_fixture_suite_test.go#L17-L36) that I just added to ensure this issue doesn't occur again.

### Compare the output of `ginkgo --dry-run` to what actually ran

It's true that there is so much dynamism here (particularly with the use of filters and labels) that it could be hard to predict what ought to run.  One thing to potentially look into would be something like this:

1. Run `ginkgo --dry-run --json-report=preliminary.json PLUS-ALL-YOUR-ADDITIONAL-FILTER-FLAGS`
2. Run your actual `ginkgo` command
3. Write something that compares the output of `ginkgo` to the output of `--dry-run` captured in `preliminary.json` (or `.xml` if you prefer).

The idea here would be that `--dry-run` would not have any of the complexity of actually running specs or even running in parallel.  It simply filters specs and generates a report of what will run (these will have `status=""passed""`) and what will be skipped (`status=""skipped""`).  Of course I know that y'all do some runtime `Skip()`ing as well so whatever compares and constrasts will have to be smart about things.  Here too I could imagine doing this in a `ReportAfterSuite` so that the spec is self-validating and you don't have to maintain anything outside of the e2e suite itself.

---

Obviously, without


these are, at best, mitigations that reduce risk.  But they are options that come to mind.

pohly (Issue Creator) on (2023-01-10 16:11:04 UTC): I don't think that this is a problem, even if we don't enforce it.


That would catch bugs in Ginkgo. Despite this episode with sorting of specs I still trust that this isn't going to be much of a problem :grin: 

My main concern is that we configure jobs incorrectly or add skip calls that don't work as intended. That can only be detected by monitoring a job over time and alerting when tests disappear. But as there are legitimate reasons for that, too, it cannot be fully automatic. :cry:

pohly (Issue Creator) on (2023-01-10 16:12:22 UTC): /cc @kubernetes/dep-approvers 

This Ginkgo update is ready for review + approval.

liggitt on (2023-01-10 17:27:21 UTC): /test pull-kubernetes-dependencies
to run check added in https://github.com/kubernetes/kubernetes/pull/114952

pohly (Issue Creator) on (2023-01-10 21:25:11 UTC): @liggitt: pull-kubernetes-dependencies passed.

aojea (Assginee) on (2023-01-10 21:47:51 UTC): /lgtm
/approve

for the test, missing deps
Thanks

k8s-ci-robot on (2023-01-10 21:47:58 UTC): LGTM label has been added.  <details>Git tree hash: 733e4d44f85e94610e75034b18b678d2ba8b2711</details>

liggitt on (2023-01-10 21:55:50 UTC): /approve
for deps

k8s-ci-robot on (2023-01-10 21:56:21 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114859#issuecomment-1377933411"" title=""Approved"">aojea</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114859#issuecomment-1377943112"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114859#"" title=""Author self-approved"">pohly</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apimachinery/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)~~ [liggitt,pohly]
- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [liggitt]
- ~~[test/e2e/storage/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/OWNERS)~~ [aojea,liggitt,pohly]
- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1521278198,pull_request,closed,,fix path for not approved licenses,"This builds on https://github.com/kubernetes/kubernetes/pull/114826 to fix the path on not approved licenses dump.


Signed-off-by: Alex Pana <8968914+acpana@users.noreply.github.com>


/kind bug
/kind cleanup
/kind failing-test

```release-note
NONE
```",acpana,2023-01-05 19:33:06+00:00,['liggitt'],2023-01-06 07:16:01+00:00,2023-01-06 07:15:59+00:00,https://github.com/kubernetes/kubernetes/pull/114858,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('kind/failing-test', 'Categorizes issue or PR as related to a consistently or frequently failing test.'), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1372644747, 'issue_id': 1521278198, 'author': 'linux-foundation-easycla[bot]', 'body': '<a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: acpana / name: alex  (124fd62ad253f8362d78d5710d8d363aa1b376df)</li></ul>', 'created_at': datetime.datetime(2023, 1, 5, 19, 33, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372644819, 'issue_id': 1521278198, 'author': 'k8s-ci-robot', 'body': ""Welcome @acpana! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:"", 'created_at': datetime.datetime(2023, 1, 5, 19, 33, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372644820, 'issue_id': 1521278198, 'author': 'k8s-ci-robot', 'body': '@acpana: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 5, 19, 33, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372644830, 'issue_id': 1521278198, 'author': 'k8s-ci-robot', 'body': ""Hi @acpana. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 5, 19, 33, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372888287, 'issue_id': 1521278198, 'author': 'liggitt', 'body': '/lgtm\r\n/approve\r\n/sig release', 'created_at': datetime.datetime(2023, 1, 5, 22, 46, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372888373, 'issue_id': 1521278198, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 58c165db7a4d6b4f87c79cff845d0716ae583c28</details>', 'created_at': datetime.datetime(2023, 1, 5, 22, 46, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372888704, 'issue_id': 1521278198, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114858#"" title=""Author self-approved"">acpana</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114858#issuecomment-1372888287"" title=""Approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 22, 46, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372999482, 'issue_id': 1521278198, 'author': 'acpana', 'body': '/retest-required', 'created_at': datetime.datetime(2023, 1, 6, 1, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372999709, 'issue_id': 1521278198, 'author': 'k8s-ci-robot', 'body': '@acpana: Cannot trigger testing until a trusted user reviews the PR and leaves an `/ok-to-test` message.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114858#issuecomment-1372999482):\n\n>/retest-required\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 6, 1, 4, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373067625, 'issue_id': 1521278198, 'author': 'liggitt', 'body': '/ok-to-test\r\n/retest', 'created_at': datetime.datetime(2023, 1, 6, 2, 38, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373100076, 'issue_id': 1521278198, 'author': 'pacoxu', 'body': '/retest\r\nTestCreateHealthcheck flake link to https://github.com/kubernetes/kubernetes/issues/114852', 'created_at': datetime.datetime(2023, 1, 6, 3, 31, 19, tzinfo=datetime.timezone.utc)}]","linux-foundation-easycla[bot] on (2023-01-05 19:33:10 UTC): <a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: acpana / name: alex  (124fd62ad253f8362d78d5710d8d363aa1b376df)</li></ul>

k8s-ci-robot on (2023-01-05 19:33:15 UTC): Welcome @acpana! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:

k8s-ci-robot on (2023-01-05 19:33:15 UTC): @acpana: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-05 19:33:16 UTC): Hi @acpana. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

liggitt (Assginee) on (2023-01-05 22:46:16 UTC): /lgtm
/approve
/sig release

k8s-ci-robot on (2023-01-05 22:46:23 UTC): LGTM label has been added.  <details>Git tree hash: 58c165db7a4d6b4f87c79cff845d0716ae583c28</details>

k8s-ci-robot on (2023-01-05 22:46:49 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114858#"" title=""Author self-approved"">acpana</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114858#issuecomment-1372888287"" title=""Approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

acpana (Issue Creator) on (2023-01-06 01:04:00 UTC): /retest-required

k8s-ci-robot on (2023-01-06 01:04:15 UTC): @acpana: Cannot trigger testing until a trusted user reviews the PR and leaves an `/ok-to-test` message.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114858#issuecomment-1372999482):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

liggitt (Assginee) on (2023-01-06 02:38:48 UTC): /ok-to-test
/retest

pacoxu on (2023-01-06 03:31:19 UTC): /retest
TestCreateHealthcheck flake link to https://github.com/kubernetes/kubernetes/issues/114852

"
1521270415,pull_request,closed,,Bump cel-go bump to 0.12.6 to fix bug in cel-go,"#### What type of PR is this?

/kind bug

#### What this PR does / why we need it:

Fixes kubernetes#114661 by picking up https://github.com/google/cel-go/pull/620

This bug can cause all requests matching the admission rules fail with an error rather than be properly validated.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #114661

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?

```release-note
Fix bug in CRD Validation Rules (beta) and ValidatingAdmissionPolicy (alpha) where all admission requests could result in `internal error: runtime error: index out of range [3] with length 3 evaluating rule: <rule name>` under certain circumstances.
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",jpbetz,2023-01-05 19:29:20+00:00,['liggitt'],2023-01-05 23:30:12+00:00,2023-01-05 23:30:10+00:00,https://github.com/kubernetes/kubernetes/pull/114857,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('area/apiserver', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/cloudprovider', None), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372764428, 'issue_id': 1521270415, 'author': 'jpbetz', 'body': '/sig api-machinery\r\n/triage accepted\r\ncc @liggitt @TristonianJones', 'created_at': datetime.datetime(2023, 1, 5, 21, 9, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372821416, 'issue_id': 1521270415, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 5, 21, 49, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372821544, 'issue_id': 1521270415, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 9652ad658980aa51063960aa7a71aed59f4ef790</details>', 'created_at': datetime.datetime(2023, 1, 5, 21, 49, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372821898, 'issue_id': 1521270415, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114857#"" title=""Author self-approved"">jpbetz</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114857#issuecomment-1372821416"" title=""Approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [liggitt]\n- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 21, 50, 15, tzinfo=datetime.timezone.utc)}]","jpbetz (Issue Creator) on (2023-01-05 21:09:28 UTC): /sig api-machinery
/triage accepted
cc @liggitt @TristonianJones

liggitt (Assginee) on (2023-01-05 21:49:50 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-05 21:49:57 UTC): LGTM label has been added.  <details>Git tree hash: 9652ad658980aa51063960aa7a71aed59f4ef790</details>

k8s-ci-robot on (2023-01-05 21:50:15 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114857#"" title=""Author self-approved"">jpbetz</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114857#issuecomment-1372821416"" title=""Approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [liggitt]
- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1521188625,pull_request,closed,,Remove Overly Permissive File Modes 2/5,"#### What type of PR is this?
/kind bug

#### What this PR does / why we need it:
This PR updates the overly permissive file modes from 0666 to 0644 in the `removeFromScsiSubsystem`  and `scsiHostRescan` functions in `pkg/volume/fc/fc_util.go`.
#### Which issue(s) this PR fixes:

Contributes to: https://github.com/kubernetes/kubernetes/issues/81116

#### Does this PR introduce a user-facing change?
Change file creation permission from 660 to 644

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

",cailyn-codes,2023-01-05 18:24:53+00:00,[],2023-06-04 19:50:46+00:00,2023-06-04 19:50:45+00:00,https://github.com/kubernetes/kubernetes/pull/114856,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('do-not-merge/release-note-label-needed', ""Indicates that a PR should not merge because it's missing one of the release note labels.""), ('lifecycle/rotten', 'Denotes an issue or PR that has aged beyond stale and will be auto-closed.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1372578321, 'issue_id': 1521188625, 'author': 'k8s-ci-robot', 'body': '@cailynse: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 5, 18, 24, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372578407, 'issue_id': 1521188625, 'author': 'k8s-ci-robot', 'body': '@cailynse: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 5, 18, 25, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372579033, 'issue_id': 1521188625, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114856#"" title=""Author self-approved"">cailynse</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign saad-ali for approval by writing `/assign @saad-ali` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[pkg/volume/fc/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/volume/fc/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""saad-ali""]} -->', 'created_at': datetime.datetime(2023, 1, 5, 18, 25, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1497971816, 'issue_id': 1521188625, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 4, 5, 18, 56, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1536685139, 'issue_id': 1521188625, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle rotten\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 5, 5, 19, 30, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1575689980, 'issue_id': 1521188625, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 6, 4, 19, 50, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1575689996, 'issue_id': 1521188625, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114856#issuecomment-1575689980):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 6, 4, 19, 50, 46, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 18:24:56 UTC): @cailynse: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-05 18:25:01 UTC): @cailynse: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-05 18:25:44 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114856#"" title=""Author self-approved"">cailynse</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign saad-ali for approval by writing `/assign @saad-ali` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[pkg/volume/fc/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/volume/fc/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""saad-ali""]} -->

k8s-triage-robot on (2023-04-05 18:56:43 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2023-05-05 19:30:59 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle rotten

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2023-06-04 19:50:40 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2023-06-04 19:50:46 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114856#issuecomment-1575689980):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1521188023,pull_request,closed,,Add endpoint to skip topology aware log when missing zone hint,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind documentation
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
Additional Topology Aware logging when endpoint does not have zone hint
#### Which issue(s) this PR fixes:

<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #
N/A
#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",SteveProXNA,2023-01-05 18:24:26+00:00,[],2023-06-21 23:08:32+00:00,2023-06-21 23:08:31+00:00,https://github.com/kubernetes/kubernetes/pull/114855,"[('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('kind/documentation', 'Categorizes issue or PR as related to documentation.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('lifecycle/rotten', 'Denotes an issue or PR that has aged beyond stale and will be auto-closed.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1372577934, 'issue_id': 1521188023, 'author': 'linux-foundation-easycla[bot]', 'body': '<a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: SteveProXNA / name: SteveProXNA  (fb6fd36384ea4e5a65145711160017a46f9377d5)</li></ul>', 'created_at': datetime.datetime(2023, 1, 5, 18, 24, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372577984, 'issue_id': 1521188023, 'author': 'k8s-ci-robot', 'body': ""Welcome @SteveProXNA! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:"", 'created_at': datetime.datetime(2023, 1, 5, 18, 24, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372577988, 'issue_id': 1521188023, 'author': 'k8s-ci-robot', 'body': '@SteveProXNA: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 5, 18, 24, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372577999, 'issue_id': 1521188023, 'author': 'k8s-ci-robot', 'body': ""Hi @SteveProXNA. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 5, 18, 24, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372578993, 'issue_id': 1521188023, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114855#"" title=""Author self-approved"">SteveProXNA</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign danwinship for approval by writing `/assign @danwinship` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[pkg/proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""danwinship""]} -->', 'created_at': datetime.datetime(2023, 1, 5, 18, 25, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399611775, 'issue_id': 1521188023, 'author': 'danwinship', 'body': '/ok-to-test\r\n\r\nAny particular reason for this? Did you run into some problem and have a hard time debugging it?', 'created_at': datetime.datetime(2023, 1, 22, 21, 21, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1518846373, 'issue_id': 1521188023, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 4, 22, 22, 2, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1558114091, 'issue_id': 1521188023, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle rotten\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 5, 22, 22, 28, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1601805340, 'issue_id': 1521188023, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 6, 21, 23, 8, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1601805401, 'issue_id': 1521188023, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114855#issuecomment-1601805340):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 6, 21, 23, 8, 32, tzinfo=datetime.timezone.utc)}]","linux-foundation-easycla[bot] on (2023-01-05 18:24:31 UTC): <a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: SteveProXNA / name: SteveProXNA  (fb6fd36384ea4e5a65145711160017a46f9377d5)</li></ul>

k8s-ci-robot on (2023-01-05 18:24:34 UTC): Welcome @SteveProXNA! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:

k8s-ci-robot on (2023-01-05 18:24:34 UTC): @SteveProXNA: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-05 18:24:35 UTC): Hi @SteveProXNA. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-05 18:25:41 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114855#"" title=""Author self-approved"">SteveProXNA</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign danwinship for approval by writing `/assign @danwinship` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[pkg/proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""danwinship""]} -->

danwinship on (2023-01-22 21:21:07 UTC): /ok-to-test

Any particular reason for this? Did you run into some problem and have a hard time debugging it?

k8s-triage-robot on (2023-04-22 22:02:39 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2023-05-22 22:28:23 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle rotten

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2023-06-21 23:08:26 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2023-06-21 23:08:32 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114855#issuecomment-1601805340):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1521032132,pull_request,closed,,Sync pkg/kubelet/cri/streaming with containerd/pkg/cri/streaming,"This change:

- Removes all code that logs httpstream.Connection (unsafe concurrent map read and write)
- Wires the request context to code paths that launch go routines
- Sets ReadHeaderTimeout on streaming server

Signed-off-by: Monis Khan <mok@microsoft.com>

/kind bug
/assign @dims @liggitt @tallclair 

```release-note
Resources associated with CRI streaming requests are correctly reclaimed when the request is canceled.
```",enj,2023-01-05 16:36:09+00:00,"['liggitt', 'tallclair']",2024-02-05 04:52:11+00:00,2024-02-04 13:23:28+00:00,https://github.com/kubernetes/kubernetes/pull/114854,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('area/kubelet', None), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('needs-rebase', 'Indicates a PR cannot be merged because it has merge conflicts with HEAD.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('lifecycle/rotten', 'Denotes an issue or PR that has aged beyond stale and will be auto-closed.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372454151, 'issue_id': 1521032132, 'author': 'enj', 'body': '/triage accepted\r\n/priority important-soon\r\n/milestone v1.27', 'created_at': datetime.datetime(2023, 1, 5, 16, 38, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372545142, 'issue_id': 1521032132, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114854#"" title=""Author self-approved"">enj</a>*\n**Once this PR has been reviewed and has the lgtm label**, please ask for approval from dims by writing `/assign @dims` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[pkg/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""dims""]} -->', 'created_at': datetime.datetime(2023, 1, 5, 17, 56, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372545995, 'issue_id': 1521032132, 'author': 'enj', 'body': '@liggitt PTAL', 'created_at': datetime.datetime(2023, 1, 5, 17, 57, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372700518, 'issue_id': 1521032132, 'author': 'matthyx', 'body': '/uncc', 'created_at': datetime.datetime(2023, 1, 5, 20, 20, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375929914, 'issue_id': 1521032132, 'author': 'enj', 'body': '@liggitt @aojea let me know if this needs anything else before I squash.', 'created_at': datetime.datetime(2023, 1, 9, 16, 42, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1382741850, 'issue_id': 1521032132, 'author': 'bart0sh', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 14, 13, 39, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1463942677, 'issue_id': 1521032132, 'author': 'dims', 'body': '@enj there are a bunch of unresolved comments. can you please check? would be difficult to land otherwise', 'created_at': datetime.datetime(2023, 3, 10, 15, 10, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1467193982, 'issue_id': 1521032132, 'author': 'enj', 'body': '/milestone v1.28\r\n\r\nWill pick this back up next release.', 'created_at': datetime.datetime(2023, 3, 14, 1, 11, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1516513595, 'issue_id': 1521032132, 'author': 'dims', 'body': 'next release is here @enj :)\r\n\r\n/woof', 'created_at': datetime.datetime(2023, 4, 20, 15, 14, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1516513646, 'issue_id': 1521032132, 'author': 'k8s-ci-robot', 'body': '@dims: [![dog image](https://random.dog/a039205e-0e3b-415f-84bd-8c98bdae3ed4.jpg)](https://random.dog/a039205e-0e3b-415f-84bd-8c98bdae3ed4.jpg)\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114854#issuecomment-1516513595):\n\n>next release is here @enj :)\r\n>\r\n>/woof\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 4, 20, 15, 14, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1520749778, 'issue_id': 1521032132, 'author': 'aojea', 'body': 'we should get this in @enj', 'created_at': datetime.datetime(2023, 4, 24, 20, 0, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1580963393, 'issue_id': 1521032132, 'author': 'hailkomputer', 'body': 'Hello @enj @aojea @dims, v1.28 Bug Triage Shadow here checking in. It is still early in the release cycle, but is this still on track for the v1.28 release?', 'created_at': datetime.datetime(2023, 6, 7, 14, 38, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1580963635, 'issue_id': 1521032132, 'author': 'k8s-ci-robot', 'body': 'PR needs rebase.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 6, 7, 14, 38, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1609603697, 'issue_id': 1521032132, 'author': 'hailkomputer', 'body': 'Hello! Bug triage team shadow here. I want to check the status. The code freeze is starting [01:00 UTC Wednesday 19th July 2023 / 18:00 PDT Tuesday 18th July 2023](https://everytimezone.com/s/72ee8496) (about three weeks from now), and while there is still plenty of time, we want to ensure that each PR has a chance to be merged on time.\r\n\r\nAs the PR is tagged for 1.28, is it still planned for this release?', 'created_at': datetime.datetime(2023, 6, 27, 14, 18, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1630871806, 'issue_id': 1521032132, 'author': 'hailkomputer', 'body': 'Hi! Bug triage team shadow here.\r\n\r\nWe are currently in Week 9 of the v1.28 release cycle, and the code freeze is happening next week (Week 10) at [01:00 UTC Wednesday 19th July 2023 / 18:00 PDT Tuesday 18th July 2023](https://everytimezone.com/s/72ee8496)\r\n\r\nPlease ensure all necessary contributions are made before the deadline if the PR still targets v1.28.\r\n\r\nLet me know if you need any assistance.', 'created_at': datetime.datetime(2023, 7, 11, 13, 49, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1642098480, 'issue_id': 1521032132, 'author': 'enj', 'body': 'I think most of this code is test only in k/k so we probably need a different approach to this.\r\n\r\n/milestone next-candidate', 'created_at': datetime.datetime(2023, 7, 19, 13, 35, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1670359036, 'issue_id': 1521032132, 'author': 'enj', 'body': '/milestone v1.29', 'created_at': datetime.datetime(2023, 8, 8, 21, 54, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1745694039, 'issue_id': 1521032132, 'author': 'kiashok', 'body': '> /milestone v1.29\r\n\r\n@enj are these changes waiting on anything?', 'created_at': datetime.datetime(2023, 10, 3, 20, 42, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1765119447, 'issue_id': 1521032132, 'author': 'moficodes', 'body': ""Hello @enj ! 👋🏼\r\nBug triage for the 1.29 release cycle is here!\r\nThis issue hasn't been updated for a long time, so I wanted to check what the status is. The code freeze will start ([01:00 UTC Wednesday 1st November 2023 / 18:00 PDT Tuesday 31st October 2023](https://everytimezone.com/s/3b849751)), which is about 2 weeks from now. And while there is still plenty of time, we want to make sure that every PR has a chance to be merged on time.\r\n\r\nAs the issue is tagged for 1.29, is it still planned for that release?"", 'created_at': datetime.datetime(2023, 10, 16, 19, 12, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1784375550, 'issue_id': 1521032132, 'author': 'moficodes', 'body': ""Hello @enj ! 👋🏼\r\nBug triage for the 1.29 release cycle is here!\r\nThis issue hasn't been updated for a long time, so I wanted to check what the status is. The code freeze will start ([01:00 UTC Wednesday 1st November 2023 / 18:00 PDT Tuesday 31st October 2023](https://everytimezone.com/s/3b849751)), which is this week. We want to make sure that every PR has a chance to be merged on time.\r\n\r\nAs the issue is tagged for 1.29, is it still planned for that release?"", 'created_at': datetime.datetime(2023, 10, 30, 2, 22, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1788128641, 'issue_id': 1521032132, 'author': 'dims', 'body': ""/milestone clear\r\n\r\nwon't make it to code freeze @enj !"", 'created_at': datetime.datetime(2023, 10, 31, 22, 36, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1836700729, 'issue_id': 1521032132, 'author': 'SergeyKanzhelev', 'body': '/remove-lifecycle rotten\r\n\r\nNeeded for https://github.com/containerd/containerd/issues/9435 and other downstream consumers of the cri/streaming package.', 'created_at': datetime.datetime(2023, 12, 1, 19, 58, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1836700859, 'issue_id': 1521032132, 'author': 'SergeyKanzhelev', 'body': '/cc @mrunalp', 'created_at': datetime.datetime(2023, 12, 1, 19, 58, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1925748591, 'issue_id': 1521032132, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 2, 4, 13, 23, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1925748625, 'issue_id': 1521032132, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114854#issuecomment-1925748591):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 2, 4, 13, 23, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1926228650, 'issue_id': 1521032132, 'author': 'samuelkarp', 'body': '/reopen', 'created_at': datetime.datetime(2024, 2, 5, 4, 52, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1926228700, 'issue_id': 1521032132, 'author': 'k8s-ci-robot', 'body': ""@samuelkarp: You can't reopen an issue/PR unless you authored it or you are a collaborator.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114854#issuecomment-1926228650):\n\n>/reopen\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2024, 2, 5, 4, 52, 10, tzinfo=datetime.timezone.utc)}]","enj (Issue Creator) on (2023-01-05 16:38:30 UTC): /triage accepted
/priority important-soon
/milestone v1.27

k8s-ci-robot on (2023-01-05 17:56:09 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114854#"" title=""Author self-approved"">enj</a>*
**Once this PR has been reviewed and has the lgtm label**, please ask for approval from dims by writing `/assign @dims` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[pkg/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""dims""]} -->

enj (Issue Creator) on (2023-01-05 17:57:01 UTC): @liggitt PTAL

matthyx on (2023-01-05 20:20:54 UTC): /uncc

enj (Issue Creator) on (2023-01-09 16:42:45 UTC): @liggitt @aojea let me know if this needs anything else before I squash.

bart0sh on (2023-01-14 13:39:26 UTC): /retest

dims on (2023-03-10 15:10:05 UTC): @enj there are a bunch of unresolved comments. can you please check? would be difficult to land otherwise

enj (Issue Creator) on (2023-03-14 01:11:30 UTC): /milestone v1.28

Will pick this back up next release.

dims on (2023-04-20 15:14:49 UTC): next release is here @enj :)

/woof

k8s-ci-robot on (2023-04-20 15:14:51 UTC): @dims: [![dog image](https://random.dog/a039205e-0e3b-415f-84bd-8c98bdae3ed4.jpg)](https://random.dog/a039205e-0e3b-415f-84bd-8c98bdae3ed4.jpg)

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114854#issuecomment-1516513595):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

aojea on (2023-04-24 20:00:01 UTC): we should get this in @enj

hailkomputer on (2023-06-07 14:38:43 UTC): Hello @enj @aojea @dims, v1.28 Bug Triage Shadow here checking in. It is still early in the release cycle, but is this still on track for the v1.28 release?

k8s-ci-robot on (2023-06-07 14:38:51 UTC): PR needs rebase.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

hailkomputer on (2023-06-27 14:18:28 UTC): Hello! Bug triage team shadow here. I want to check the status. The code freeze is starting [01:00 UTC Wednesday 19th July 2023 / 18:00 PDT Tuesday 18th July 2023](https://everytimezone.com/s/72ee8496) (about three weeks from now), and while there is still plenty of time, we want to ensure that each PR has a chance to be merged on time.

As the PR is tagged for 1.28, is it still planned for this release?

hailkomputer on (2023-07-11 13:49:52 UTC): Hi! Bug triage team shadow here.

We are currently in Week 9 of the v1.28 release cycle, and the code freeze is happening next week (Week 10) at [01:00 UTC Wednesday 19th July 2023 / 18:00 PDT Tuesday 18th July 2023](https://everytimezone.com/s/72ee8496)

Please ensure all necessary contributions are made before the deadline if the PR still targets v1.28.

Let me know if you need any assistance.

enj (Issue Creator) on (2023-07-19 13:35:53 UTC): I think most of this code is test only in k/k so we probably need a different approach to this.

/milestone next-candidate

enj (Issue Creator) on (2023-08-08 21:54:20 UTC): /milestone v1.29

kiashok on (2023-10-03 20:42:10 UTC): @enj are these changes waiting on anything?

moficodes on (2023-10-16 19:12:10 UTC): Hello @enj ! 👋🏼
Bug triage for the 1.29 release cycle is here!
This issue hasn't been updated for a long time, so I wanted to check what the status is. The code freeze will start ([01:00 UTC Wednesday 1st November 2023 / 18:00 PDT Tuesday 31st October 2023](https://everytimezone.com/s/3b849751)), which is about 2 weeks from now. And while there is still plenty of time, we want to make sure that every PR has a chance to be merged on time.

As the issue is tagged for 1.29, is it still planned for that release?

moficodes on (2023-10-30 02:22:51 UTC): Hello @enj ! 👋🏼
Bug triage for the 1.29 release cycle is here!
This issue hasn't been updated for a long time, so I wanted to check what the status is. The code freeze will start ([01:00 UTC Wednesday 1st November 2023 / 18:00 PDT Tuesday 31st October 2023](https://everytimezone.com/s/3b849751)), which is this week. We want to make sure that every PR has a chance to be merged on time.

As the issue is tagged for 1.29, is it still planned for that release?

dims on (2023-10-31 22:36:11 UTC): /milestone clear

won't make it to code freeze @enj !

SergeyKanzhelev on (2023-12-01 19:58:41 UTC): /remove-lifecycle rotten

Needed for https://github.com/containerd/containerd/issues/9435 and other downstream consumers of the cri/streaming package.

SergeyKanzhelev on (2023-12-01 19:58:48 UTC): /cc @mrunalp

k8s-triage-robot on (2024-02-04 13:23:24 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2024-02-04 13:23:29 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114854#issuecomment-1925748591):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

samuelkarp on (2024-02-05 04:52:05 UTC): /reopen

k8s-ci-robot on (2024-02-05 04:52:10 UTC): @samuelkarp: You can't reopen an issue/PR unless you authored it or you are a collaborator.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114854#issuecomment-1926228650):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1520860394,pull_request,closed,,Fix verify-license cleanup,"Follow up to https://github.com/kubernetes/kubernetes/pull/114826 to green up https://prow.k8s.io/?job=kubernetes-verify-go-licenses-periodical

The script worked locally once when I tried it on the previous PR because I had a `licenses` remote hanging around 🤦 

```release-note
NONE
```

/assign @dims",liggitt,2023-01-05 14:42:10+00:00,['dims'],2023-05-09 18:26:33+00:00,2023-01-05 20:54:20+00:00,https://github.com/kubernetes/kubernetes/pull/114851,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1372306512, 'issue_id': 1520860394, 'author': 'k8s-ci-robot', 'body': '@liggitt: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 5, 14, 42, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372358072, 'issue_id': 1520860394, 'author': 'dims', 'body': '/approve\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 5, 15, 23, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372358232, 'issue_id': 1520860394, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: b4d112e0dd9624d4c5d393ac4be7abef08a1bb61</details>', 'created_at': datetime.datetime(2023, 1, 5, 15, 23, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372358719, 'issue_id': 1520860394, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114851#issuecomment-1372358072"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114851#"" title=""Author self-approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [dims,liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 15, 23, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372366233, 'issue_id': 1520860394, 'author': 'liggitt', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 5, 15, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372648715, 'issue_id': 1520860394, 'author': 'liggitt', 'body': '/kind bug', 'created_at': datetime.datetime(2023, 1, 5, 19, 37, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372649527, 'issue_id': 1520860394, 'author': 'liggitt', 'body': '/sig release', 'created_at': datetime.datetime(2023, 1, 5, 19, 38, 25, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 14:42:19 UTC): @liggitt: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

dims (Assginee) on (2023-01-05 15:23:06 UTC): /approve
/lgtm

k8s-ci-robot on (2023-01-05 15:23:13 UTC): LGTM label has been added.  <details>Git tree hash: b4d112e0dd9624d4c5d393ac4be7abef08a1bb61</details>

k8s-ci-robot on (2023-01-05 15:23:34 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114851#issuecomment-1372358072"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114851#"" title=""Author self-approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [dims,liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

liggitt (Issue Creator) on (2023-01-05 15:29:00 UTC): /retest

liggitt (Issue Creator) on (2023-01-05 19:37:35 UTC): /kind bug

liggitt (Issue Creator) on (2023-01-05 19:38:25 UTC): /sig release

"
1520762409,pull_request,closed,,staging/publishing: open up kms package for sub packages and utils,"Signed-off-by: Krzysztof Ostrowski <kostrows@redhat.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->
/kind cleanup

#### What this PR does / why we need it:

Add `k8s.io/kms` to allowed imports for `k8s.io/kms`.

It should be possible to import `kms/api` for `kms/service` package.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #114678

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs
- [KEP] https://github.com/kubernetes/enhancements/tree/master/keps/sig-auth/3299-kms-v2-improvements
```
",ibihim,2023-01-05 13:37:49+00:00,"['dims', 'enj']",2023-01-05 19:08:33+00:00,2023-01-05 19:08:33+00:00,https://github.com/kubernetes/kubernetes/pull/114850,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('area/release-eng', 'Issues or PRs related to the Release Engineering subproject'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372225764, 'issue_id': 1520762409, 'author': 'k8s-ci-robot', 'body': ""Hi @ibihim. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 5, 13, 37, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372288408, 'issue_id': 1520762409, 'author': 'enj', 'body': '/lgtm\r\n/approve\r\n/assign dims\r\n/triage accepted', 'created_at': datetime.datetime(2023, 1, 5, 14, 27, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372288542, 'issue_id': 1520762409, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: b2ded0e66e7154d77374ef56dd4e988182045afb</details>', 'created_at': datetime.datetime(2023, 1, 5, 14, 27, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372288955, 'issue_id': 1520762409, 'author': 'enj', 'body': '/ok-to-test\r\n/milestone v1.27', 'created_at': datetime.datetime(2023, 1, 5, 14, 28, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372317842, 'issue_id': 1520762409, 'author': 'dims', 'body': '/approve\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 5, 14, 51, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372318361, 'issue_id': 1520762409, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114850#issuecomment-1372317842"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114850#issuecomment-1372288408"" title=""Approved"">enj</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114850#"" title=""Author self-approved"">ibihim</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/publishing/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/publishing/OWNERS)~~ [dims]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 14, 52, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372381386, 'issue_id': 1520762409, 'author': 'enj', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 5, 15, 40, 21, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 13:37:58 UTC): Hi @ibihim. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

enj (Assginee) on (2023-01-05 14:27:39 UTC): /lgtm
/approve
/assign dims
/triage accepted

k8s-ci-robot on (2023-01-05 14:27:47 UTC): LGTM label has been added.  <details>Git tree hash: b2ded0e66e7154d77374ef56dd4e988182045afb</details>

enj (Assginee) on (2023-01-05 14:28:06 UTC): /ok-to-test
/milestone v1.27

dims (Assginee) on (2023-01-05 14:51:39 UTC): /approve
/lgtm

k8s-ci-robot on (2023-01-05 14:52:04 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114850#issuecomment-1372317842"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114850#issuecomment-1372288408"" title=""Approved"">enj</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114850#"" title=""Author self-approved"">ibihim</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/publishing/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/publishing/OWNERS)~~ [dims]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

enj (Assginee) on (2023-01-05 15:40:21 UTC): /retest

"
1520644840,pull_request,closed,,handle event errors caused due to terminating namespaces,"Signed-off-by: Sunil Shivanand <sunil.shivanand@statnett.no>

#### What type of PR is this?

/kind bug

#### What this PR does / why we need it:

Create events are forbidden in terminating namespaces, use info instead of error to log the failed event.

#### Which issue(s) this PR fixes:
Fixes [#1208](https://github.com/kubernetes/client-go/issues/1208)

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?

```release-note
Users will no longer see an error for failed events caused due to terminating namespace.
```
",padlar,2023-01-05 12:11:44+00:00,"['DangerOnTheRanger', 'ehashman']",2023-06-20 13:26:48+00:00,2023-06-20 11:52:22+00:00,https://github.com/kubernetes/kubernetes/pull/114849,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372140064, 'issue_id': 1520644840, 'author': 'k8s-ci-robot', 'body': ""Hi @padlar. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 5, 12, 11, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377885693, 'issue_id': 1520644840, 'author': 'cici37', 'body': '/assign @DangerOnTheRanger \r\n/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 23, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378063849, 'issue_id': 1520644840, 'author': 'DangerOnTheRanger', 'body': '/ok-to-test', 'created_at': datetime.datetime(2023, 1, 11, 0, 13, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378500340, 'issue_id': 1520644840, 'author': 'padlar', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 11, 9, 59, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1413690574, 'issue_id': 1520644840, 'author': 'erikgb', 'body': '@DangerOnTheRanger any chance for another round of review on this one?', 'created_at': datetime.datetime(2023, 2, 2, 12, 46, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1414135099, 'issue_id': 1520644840, 'author': 'DangerOnTheRanger', 'body': '(sorry for the delay)\r\n\r\n/lgtm', 'created_at': datetime.datetime(2023, 2, 2, 17, 49, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1414135239, 'issue_id': 1520644840, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: df1fe8acefaf88fac91fc4de76387b54a4fbc9eb</details>', 'created_at': datetime.datetime(2023, 2, 2, 17, 49, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1448190762, 'issue_id': 1520644840, 'author': 'padlar', 'body': '@DangerOnTheRanger How do I get a approve label on this one?', 'created_at': datetime.datetime(2023, 2, 28, 13, 35, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1479583222, 'issue_id': 1520644840, 'author': 'padlar', 'body': '/retest', 'created_at': datetime.datetime(2023, 3, 22, 13, 38, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1480192373, 'issue_id': 1520644840, 'author': 'padlar', 'body': '@DangerOnTheRanger adding `release-note` markdown marker removed LGTM label on this one. Could you reapply the label?', 'created_at': datetime.datetime(2023, 3, 22, 20, 4, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1480238500, 'issue_id': 1520644840, 'author': 'DangerOnTheRanger', 'body': 'Sure thing\r\n\r\n/lgtm', 'created_at': datetime.datetime(2023, 3, 22, 20, 46, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1480238618, 'issue_id': 1520644840, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 007b465c13bda516d5ae6c758250375bdd1f883e</details>', 'created_at': datetime.datetime(2023, 3, 22, 20, 46, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1480245642, 'issue_id': 1520644840, 'author': 'padlar', 'body': '/assign @ehashman', 'created_at': datetime.datetime(2023, 3, 22, 20, 53, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1534253901, 'issue_id': 1520644840, 'author': 'padlar', 'body': '@ehashman Can we merge this one?', 'created_at': datetime.datetime(2023, 5, 4, 7, 59, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1569924525, 'issue_id': 1520644840, 'author': 'padlar', 'body': '@cici37 this MR has been open for long, can we merge this?', 'created_at': datetime.datetime(2023, 5, 31, 10, 24, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1598553031, 'issue_id': 1520644840, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114849#discussion_r1235093372"" title=""Approved"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114849#"" title=""Author self-approved"">padlar</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/client-go/tools/record/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/tools/record/OWNERS)~~ [dims]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 6, 20, 10, 55, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1598639020, 'issue_id': 1520644840, 'author': 'erikgb', 'body': 'What are the policies for cherry-picking? Would it be possible to consider this a bug worth back-porting?', 'created_at': datetime.datetime(2023, 6, 20, 11, 59, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1598791071, 'issue_id': 1520644840, 'author': 'dims', 'body': 'https://github.com/kubernetes/community/blob/master/contributors/devel/sig-release/cherry-picks.md', 'created_at': datetime.datetime(2023, 6, 20, 13, 26, 47, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 12:11:52 UTC): Hi @padlar. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

cici37 on (2023-01-10 21:23:46 UTC): /assign @DangerOnTheRanger 
/triage accepted

DangerOnTheRanger (Assginee) on (2023-01-11 00:13:23 UTC): /ok-to-test

padlar (Issue Creator) on (2023-01-11 09:59:28 UTC): /retest

erikgb on (2023-02-02 12:46:53 UTC): @DangerOnTheRanger any chance for another round of review on this one?

DangerOnTheRanger (Assginee) on (2023-02-02 17:49:39 UTC): (sorry for the delay)

/lgtm

k8s-ci-robot on (2023-02-02 17:49:48 UTC): LGTM label has been added.  <details>Git tree hash: df1fe8acefaf88fac91fc4de76387b54a4fbc9eb</details>

padlar (Issue Creator) on (2023-02-28 13:35:23 UTC): @DangerOnTheRanger How do I get a approve label on this one?

padlar (Issue Creator) on (2023-03-22 13:38:31 UTC): /retest

padlar (Issue Creator) on (2023-03-22 20:04:07 UTC): @DangerOnTheRanger adding `release-note` markdown marker removed LGTM label on this one. Could you reapply the label?

DangerOnTheRanger (Assginee) on (2023-03-22 20:46:44 UTC): Sure thing

/lgtm

k8s-ci-robot on (2023-03-22 20:46:50 UTC): LGTM label has been added.  <details>Git tree hash: 007b465c13bda516d5ae6c758250375bdd1f883e</details>

padlar (Issue Creator) on (2023-03-22 20:53:22 UTC): /assign @ehashman

padlar (Issue Creator) on (2023-05-04 07:59:28 UTC): @ehashman Can we merge this one?

padlar (Issue Creator) on (2023-05-31 10:24:55 UTC): @cici37 this MR has been open for long, can we merge this?

k8s-ci-robot on (2023-06-20 10:55:28 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114849#discussion_r1235093372"" title=""Approved"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114849#"" title=""Author self-approved"">padlar</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/client-go/tools/record/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/tools/record/OWNERS)~~ [dims]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

erikgb on (2023-06-20 11:59:07 UTC): What are the policies for cherry-picking? Would it be possible to consider this a bug worth back-porting?

dims on (2023-06-20 13:26:47 UTC): https://github.com/kubernetes/community/blob/master/contributors/devel/sig-release/cherry-picks.md

"
1520537404,pull_request,closed,,test/e2e: Replace deprecated pointer function,"Signed-off-by: TommyStarK <thomasmilox@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

If applied this commit will replace the deprecated `StringPtr`, `Int32Ptr` and `BoolPtr` functions by `String`, `Int32` and `Bool`.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",TommyStarK,2023-01-05 10:56:50+00:00,['liggitt'],2023-01-10 21:24:05+00:00,2023-01-05 20:54:09+00:00,https://github.com/kubernetes/kubernetes/pull/114848,"[('area/test', None), ('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('area/e2e-test-framework', 'Issues or PRs related to refactoring the kubernetes e2e test framework'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372066948, 'issue_id': 1520537404, 'author': 'k8s-ci-robot', 'body': ""Hi @TommyStarK. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 5, 10, 56, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372418448, 'issue_id': 1520537404, 'author': 'TommyStarK', 'body': 'cc @liggitt, another one for replacing deprecated function.', 'created_at': datetime.datetime(2023, 1, 5, 16, 9, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372420872, 'issue_id': 1520537404, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 5, 16, 10, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372421000, 'issue_id': 1520537404, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 50b5ffa43334ecd2ff126247166ffba754be8d9d</details>', 'created_at': datetime.datetime(2023, 1, 5, 16, 10, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372421377, 'issue_id': 1520537404, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114848#issuecomment-1372420872"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114848#"" title=""Author self-approved"">TommyStarK</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[test/e2e/apimachinery/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/apimachinery/OWNERS)~~ [liggitt]\n- ~~[test/e2e/common/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/common/OWNERS)~~ [liggitt]\n- ~~[test/e2e/framework/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/framework/OWNERS)~~ [liggitt]\n- ~~[test/e2e/network/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/network/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 16, 11, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372528676, 'issue_id': 1520537404, 'author': 'TommyStarK', 'body': '/retest-required', 'created_at': datetime.datetime(2023, 1, 5, 17, 40, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372528888, 'issue_id': 1520537404, 'author': 'k8s-ci-robot', 'body': '@TommyStarK: Cannot trigger testing until a trusted user reviews the PR and leaves an `/ok-to-test` message.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114848#issuecomment-1372528676):\n\n>/retest-required\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 5, 17, 40, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372582041, 'issue_id': 1520537404, 'author': 'TommyStarK', 'body': 'sorry to bother you one more time @liggitt but is it possible to have the `ok-to-test` label ? Some tests failed due to pod scheduling timing out and job `pull-kubernetes-e2e-gci-gce-ipvs` failed as well. I rebased against master. Just in case I need to trigger a specific job. Thanks', 'created_at': datetime.datetime(2023, 1, 5, 18, 28, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372586335, 'issue_id': 1520537404, 'author': 'liggitt', 'body': '/lgtm\r\n/ok-to-test\r\n\r\nany PR with a lgtm label automatically runs tests', 'created_at': datetime.datetime(2023, 1, 5, 18, 33, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372586475, 'issue_id': 1520537404, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: b5624e17c719422ab7f01353d8c7f1c3767dff50</details>', 'created_at': datetime.datetime(2023, 1, 5, 18, 33, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372644729, 'issue_id': 1520537404, 'author': 'k8s-ci-robot', 'body': '@TommyStarK: The following test **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:\n\nTest name | Commit | Details | Required | Rerun command\n--- | --- | --- | --- | ---\npull-kubernetes-e2e-gci-gce-ipvs | a46cfe5d1ee2732644b945d7f1922379129d762c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114848/pull-kubernetes-e2e-gci-gce-ipvs/1611068295618760704) | false | `/test pull-kubernetes-e2e-gci-gce-ipvs`\n\n[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114848). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3ATommyStarK). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).\n</details>\n<!-- test report -->', 'created_at': datetime.datetime(2023, 1, 5, 19, 33, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372723987, 'issue_id': 1520537404, 'author': 'TommyStarK', 'body': '/retest-required', 'created_at': datetime.datetime(2023, 1, 5, 20, 44, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372725504, 'issue_id': 1520537404, 'author': 'TommyStarK', 'body': '/test pull-kubernetes-e2e-gci-gce-ipvs', 'created_at': datetime.datetime(2023, 1, 5, 20, 45, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377886173, 'issue_id': 1520537404, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 24, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 10:56:58 UTC): Hi @TommyStarK. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

TommyStarK (Issue Creator) on (2023-01-05 16:09:01 UTC): cc @liggitt, another one for replacing deprecated function.

liggitt (Assginee) on (2023-01-05 16:10:42 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-05 16:10:49 UTC): LGTM label has been added.  <details>Git tree hash: 50b5ffa43334ecd2ff126247166ffba754be8d9d</details>

k8s-ci-robot on (2023-01-05 16:11:07 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114848#issuecomment-1372420872"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114848#"" title=""Author self-approved"">TommyStarK</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/e2e/apimachinery/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/apimachinery/OWNERS)~~ [liggitt]
- ~~[test/e2e/common/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/common/OWNERS)~~ [liggitt]
- ~~[test/e2e/framework/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/framework/OWNERS)~~ [liggitt]
- ~~[test/e2e/network/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/network/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

TommyStarK (Issue Creator) on (2023-01-05 17:40:01 UTC): /retest-required

k8s-ci-robot on (2023-01-05 17:40:16 UTC): @TommyStarK: Cannot trigger testing until a trusted user reviews the PR and leaves an `/ok-to-test` message.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114848#issuecomment-1372528676):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

TommyStarK (Issue Creator) on (2023-01-05 18:28:42 UTC): sorry to bother you one more time @liggitt but is it possible to have the `ok-to-test` label ? Some tests failed due to pod scheduling timing out and job `pull-kubernetes-e2e-gci-gce-ipvs` failed as well. I rebased against master. Just in case I need to trigger a specific job. Thanks

liggitt (Assginee) on (2023-01-05 18:33:05 UTC): /lgtm
/ok-to-test

any PR with a lgtm label automatically runs tests

k8s-ci-robot on (2023-01-05 18:33:10 UTC): LGTM label has been added.  <details>Git tree hash: b5624e17c719422ab7f01353d8c7f1c3767dff50</details>

k8s-ci-robot on (2023-01-05 19:33:09 UTC): @TommyStarK: The following test **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:

Test name | Commit | Details | Required | Rerun command
--- | --- | --- | --- | ---
pull-kubernetes-e2e-gci-gce-ipvs | a46cfe5d1ee2732644b945d7f1922379129d762c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114848/pull-kubernetes-e2e-gci-gce-ipvs/1611068295618760704) | false | `/test pull-kubernetes-e2e-gci-gce-ipvs`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114848). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3ATommyStarK). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->

TommyStarK (Issue Creator) on (2023-01-05 20:44:15 UTC): /retest-required

TommyStarK (Issue Creator) on (2023-01-05 20:45:50 UTC): /test pull-kubernetes-e2e-gci-gce-ipvs

cici37 on (2023-01-10 21:24:00 UTC): /triage accepted

"
1520464265,pull_request,closed,,kubelet: ensure secret pulled image,"Rebased on #94899 by @mikebrow

/kind feature
/cc @mikebrow

```release-note
Implement support in kubelet to ensure images pulled with pod imagePullSecrets are authenticated
by other pods that do not have the same credentials.
```

##### Design Details: track a hash map for the credentials in kubelet

https://github.com/kubernetes/enhancements/pull/3532
> Kubelet will track, in memory, a hash map for the credentials that were successfully used to pull an image. It has been decided that the hash map will be persisted to disk, in alpha.

**What to store**
- image: string
- auth hash (keys): string
- ensuredBySecret: bool


**Where to store the data**
- store in node status (need to be confirmed with sig-node): **it needs API-change** to add a list field like `ensuredPulledImage` in node status spec.  
- store in a local file like `cpu policy state` (should it be secured by an encryption scheme). [No API change, but a new file on every node.]
- store in a secure volume? too complex?

**Should the stored data be outdated after several hours for security reasons?**
maybe 1, 6 hours, or 12 hours.

**Scenarios that should be taken care of **
1. kubelet restart (that is why we need to store the data)
2. pinned image: any special logic for a pinned image?

##### TODO List

* [x]  [ensure secret pulled images enhancements#1608](https://github.com/kubernetes/enhancements/pull/1608)
  code complete
  [x] [feature gate added for issue comment](https://github.com/kubernetes/enhancements/pull/1608#issuecomment-838805092)
* [ ]  usage (not needed for alpha)
* [ ]  docs (not needed for alpha)
* [x]  test bucket(s)
  unit buckets complete.. for FG on and off

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

```docs
- [KEP]: https://github.com/kubernetes/enhancements/blob/master/keps/sig-node/2535-ensure-secret-pulled-images/README.md
```

Test demo:
```
[root@daocloud ~]# bash -c ""cat /var/lib/kubelet/image_manager_state | jq .""
{
  ""images"": {
    ""sha256:eb6cbbefef909d52f4b2b29f8972bbb6d86fc9dba6528e65aad4f119ce469f7a"": {
      ""authHash"": {
        ""115b8808c3e7f073"": {
          ""ensured"": true,
          ""dueDate"": ""2023-05-26T18:00:09.802153792+08:00""
        }
      },
      ""name"": ""daocloud.io/daocloud/dce-registry-tool:3.0.8""
    }
  }
}

[root@daocloud ~]# cat ensure.yaml
apiVersion: v1
kind: Pod
metadata:
  name: need-secret-but-has-no
spec:
  containers:
    - name: test-container
      image: daocloud.io/daocloud/dce-registry-tool:3.0.8

      command: [ ""sleep"", ""100000"" ]

---

apiVersion: v1
kind: Pod
metadata:
  name: need-secret-and-has-secret
spec:
  containers:
    - name: test-container
      image: daocloud.io/daocloud/dce-registry-tool:3.0.8
      command: [ ""sleep"", ""100000"" ]
  imagePullSecrets:
  - name: regcred

---

apiVersion: v1
kind: Pod
metadata:
  name: need-secret-and-has-wrong-secret
spec:
  containers:
    - name: test-container
      image: daocloud.io/daocloud/dce-registry-tool:3.0.8
      command: [ ""sleep"", ""100000"" ]
  imagePullSecrets:
  - name: regcred.1

[root@daocloud ~]#  kubectl get pod -o wide
NAME                               READY   STATUS             RESTARTS   AGE     IP               NODE       NOMINATED NODE   READINESS GATES
need-secret-and-has-secret         1/1     Running            0          2m5s    172.32.230.235   daocloud   <none>           <none>
need-secret-and-has-secret-2       1/1     Running            0          2m1s    172.32.230.234   daocloud   <none>           <none>
need-secret-and-has-wrong-secret   0/1     ImagePullBackOff   0          105s    172.32.230.236   daocloud   <none>           <none>
need-secret-but-has-no             0/1     ErrImagePull       0          70s     172.32.230.237   daocloud   <none>           <none>
```
",pacoxu,2023-01-05 10:11:06+00:00,"['mrunalp', 'dchen1107', 'haircommander', 'mikebrow']",2024-07-11 02:09:19+00:00,2024-07-11 02:09:17+00:00,https://github.com/kubernetes/kubernetes/pull/114847,"[('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('area/kubelet', None), ('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('needs-rebase', 'Indicates a PR cannot be merged because it has merge conflicts with HEAD.'), ('size/XL', 'Denotes a PR that changes 500-999 lines, ignoring generated files.'), ('kind/api-change', 'Categorizes issue or PR as related to adding, removing, or otherwise changing an API'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('do-not-merge/hold', 'Indicates that a PR should not merge because someone has issued a /hold command.'), ('area/code-generation', ''), ('lifecycle/rotten', 'Denotes an issue or PR that has aged beyond stale and will be auto-closed.'), ('api-review', 'Categorizes an issue or PR as actively needing an API review.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372032987, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': '/priority important-soon\r\n/triage accepted', 'created_at': datetime.datetime(2023, 1, 5, 10, 22, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1564093871, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': 'Tested on a local env, and it can work. The dueDate for the ensured auth is now only 1 hour that can cover the kubelet restarts.\r\n\r\n```\r\n[root@daocloud ~]#  kubectl get pod -o wide\r\nNAME                               READY   STATUS             RESTARTS   AGE     IP               NODE       NOMINATED NODE   READINESS GATES\r\nneed-secret-and-has-secret         1/1     Running            0          2m5s    172.32.230.235   daocloud   <none>           <none>\r\nneed-secret-and-has-secret-2       1/1     Running            0          2m1s    172.32.230.234   daocloud   <none>           <none>\r\nneed-secret-and-has-wrong-secret   0/1     ImagePullBackOff   0          105s    172.32.230.236   daocloud   <none>           <none>\r\nneed-secret-but-has-no             0/1     ErrImagePull       0          70s     172.32.230.237   daocloud   <none>           <none>\r\n```', 'created_at': datetime.datetime(2023, 5, 26, 9, 27, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1567657284, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': '/cc @bart0sh @SergeyKanzhelev', 'created_at': datetime.datetime(2023, 5, 30, 1, 45, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1658056033, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': '/test pull-kubernetes-e2e-gce-cos-alpha-features', 'created_at': datetime.datetime(2023, 7, 31, 9, 58, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1759358964, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': 'ACK, code freeze in three weeks.\r\n\r\nCan I get another round of review?', 'created_at': datetime.datetime(2023, 10, 12, 10, 37, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1784142156, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': '@haircommander  Sorry for the late update due to missing comments notification.', 'created_at': datetime.datetime(2023, 10, 29, 15, 20, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1785518853, 'issue_id': 1520464265, 'author': 'haircommander', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 10, 30, 15, 54, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1785519133, 'issue_id': 1520464265, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 36ca5e1953ba13f0595805f71cc95850d98d2f10</details>', 'created_at': datetime.datetime(2023, 10, 30, 15, 54, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1785667657, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': '/assign @mikebrow @mrunalp @dchen1107', 'created_at': datetime.datetime(2023, 10, 30, 17, 0, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1808736943, 'issue_id': 1520464265, 'author': 'haircommander', 'body': ""I know we risk bike shedding here, but I had some thoughts about this:\r\n- I don't understand the motivation to do the checkpointing. If the image is already present, but we have PullPolicy: Always, then the runtime *should* (based on my understanding) just auth with the server, and not actually pull any blobs redundantly. What's the risk of redoing that work over kubelet reboots?\r\n- If we do keep the checkpoint file: I can't see quickly where the location is. Are we keeping it on disk? if so, can we put it somewhere in a tmpfs instead? I don't think we need it across node reboots\r\n\r\nHappy to discuss on a call or something if that'd be better, sorry if I'm missing some context"", 'created_at': datetime.datetime(2023, 11, 13, 18, 13, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1828035042, 'issue_id': 1520464265, 'author': 'mikebrow', 'body': ""> I know we risk bike shedding here, but I had some thoughts about this:\r\n> \r\n> * I don't understand the motivation to do the checkpointing. \r\n\r\nMotivation Discussion here:\r\nhttps://github.com/kubernetes/kubernetes/pull/94899#issuecomment-1058443476\r\n\r\n> If the image is already present, but we have PullPolicy: Always, then the runtime _should_ (based on my understanding) just auth with the server, and not actually pull any blobs redundantly.\r\n\r\ncorrect, if every pod is using pull always or pull never policy or if the tags are `:latest` then no change\r\n\r\nThe performance and availability problem with that is having to connect and check manifests every time for every container image.  Additionally, at least one container registry charges(counts) the connect and manifest check as one of your container image pulls, even if you don't pull blobs. Further, the policy pull if not present policy is still an option and is not doing what users expect, and there is a desire to have a means to discover if an image was preloaded for disconnected use / performance reasons or pulled with pull always or pull if not present.\r\n\r\n> What's the risk of redoing that work over kubelet reboots?\r\n\r\nwhich images are pre-loaded images, which were pulled with a particular password and thus are considered only accessible with that access right...\r\n\r\n> * If we do keep the checkpoint file: I can't see quickly where the location is. Are we keeping it on disk? if so, can we put it somewhere in a tmpfs instead? \r\n\r\n@pacoxu ?\r\n\r\n> I don't think we need it across node reboots\r\n\r\nIf we reset (gc) the image cache maybe.. but that was rejected ^\r\n\r\n> Happy to discuss on a call or something if that'd be better, sorry if I'm missing some context\r\n\r\nSure let's chat!"", 'created_at': datetime.datetime(2023, 11, 27, 15, 17, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1830590853, 'issue_id': 1520464265, 'author': 'haircommander', 'body': ""> disconnected use / performance reasons\r\n\r\nI don't see how disconnected works with this TBH so I am unsure why it's a case to consider. Perf reasons is a reason to keep the checkpoint file, but enabling this feature generally is trading off perf and security. I guess the question is: is the added code of keeping the checkpoint worth saving for the (IMO ideally infrequent) situation of a kubelet restart?\r\n\r\n> If we reset (gc) the image cache maybe.. but that was rejected ^\r\n\r\nif the checkpoint file isn't present (if put in a tmpfs) then kubelet would treat every auth request as invalidated and rebuild the checkpointing. I don't think we need to clean the image cache to get this behavior."", 'created_at': datetime.datetime(2023, 11, 28, 19, 45, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1842830990, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': '@haircommander, I apologize for missing the SIG Node meeting yesterday (2 a.m. is too late for me).\r\n\r\nI reviewed some comments in the meeting notes. As Derek mentioned, we need to address disconnected needs.\r\n- I also believe we should tackle issues related to registry connection or registry failure time (the registry may crash as well). Additionally, the kubelet may be restarted as the same time.\r\n\r\nI will delve deeper into this when the SIG Node weekly meeting record is uploaded.', 'created_at': datetime.datetime(2023, 12, 6, 12, 57, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1846030247, 'issue_id': 1520464265, 'author': 'haircommander', 'body': '>  I also believe we should tackle issues related to registry connection or registry failure time (the registry may crash as well). Additionally, the kubelet may be restarted as the same time.\r\n\r\nI think this needs to be a calculated decision made by an administrator. This feature will reduce uptime in some scenerios and they should be aware of that/have registry mirrors configured to account for that. I think there should be a kubelet config field to toggle this behavior so that even after the feature goes GA an admin can opt-out', 'created_at': datetime.datetime(2023, 12, 7, 20, 3, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1857559176, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': ""I just watched the record https://www.youtube.com/watch?v=k7kzjKnmwSI.\r\n\r\nTo summarize:\r\n1. Current logic(without this PR)\r\nUser has to use `Always` as current IfNotPresent will never do re-check.\r\nNo Doubt \r\n\r\n2. Wanted Logic(Secure way using IfNotPresent):\r\n\r\nSkip re-check for checked secret in a period of 1h if kubelet is not restart.\r\n\r\n3. Add a new flag/kubelet configuration param (Derek inspired):\r\nA optional `PullImageSecretRecheckDuration` to configure the recheck duration\r\n- 0 for always re-check: most secure one.\r\n- -1: for never re-check: Set this to default to make no behavior change. But not secure at all.\r\n- a duration like 1h, 1d, 1m, 1week: after setting it, administrators can use IfNotPresent instead of Always then and the administors knows the trade-off.\r\n\r\nThen administrator can know that he has a cache buffer not to re-check secret.\r\n\r\n4. The Debate(use checkpoint or not): Should we skip the re-check after kubelet restart or reboot?\r\n \r\nI think that we may not use checkpoint. Reasons:\r\n - Restart Scenarios: \r\n   - upgrade: user needs to drain the node according to the best practice, and re-check is acceptable. (Honestly, many users don't)\r\n   - other problems(change a configuration or some scripts for memory leak): still some maintenance modes, and re-check is acceptable.\r\n- When no-checkpoints hurts?\r\n  - Continuous kubelet restarts（this is a bug scanerio）\r\n \r\n \r\n---\r\n\r\n\r\n- Should we make the PullImageSecretRecheckDuration configurable? I think yes.\r\n- Which should be the default behavior of IfNotPresent in the future? Always re-check? Never re-check? Re-check with 1h expired?  I prefer always recheck as it is most secure one **but a behavior change**.\r\n- Should we add a flag to support the checkpoint here for restarts/reboots? Just remove the checkpoint part? I prefer removing checkpoints. \r\n \r\n@mikebrow @haircommander @derekwaynecarr  correct me if I understand wrongly and give your opinions."", 'created_at': datetime.datetime(2023, 12, 15, 9, 32, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1857981556, 'issue_id': 1520464265, 'author': 'haircommander', 'body': ""Great summary. One point to clarify:  I think the IfNotPresent behavior will not necessarily always recheck. I think kubelet should still keep its internal hash map, and if the request uses the same creds again (pod is restarting or same user is creating multiple replicas) then the image shouldn't repull, until the duration expires. My point to drop the checkpoint was only to get rid of saving it in the file, for the reasons you outlined above. Thoughts??"", 'created_at': datetime.datetime(2023, 12, 15, 14, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1865432785, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': ""> I think kubelet should still keep its internal hash map, and if the request uses the same creds again (pod is restarting or same user is creating multiple replicas) then the image shouldn't repull, until the duration expires.\r\n\r\nSo we should have a new flag like `PullImageSecretRecheckDuration` to make the expired duration configurable. \r\nFor `IfNotPresent`image, we check the internal hash map and it can also expire. \r\n\r\n@haircommander  I agree with the part definitly.\r\n\r\n---\r\n\r\nFor the restart scenario, we will drop the checkpoint and do the recheck. \r\n- we add persist part in https://github.com/kubernetes/enhancements/pull/3532  @mrunalp @mikebrow \r\n\r\n@derekwaynecarr @dchen1107  Do you agree on removing the checkpoint part?\r\n\r\n@mikebrow I prefer to not use persist in the alpha stage and get more feedback later to decide if we will add the persist for this feature."", 'created_at': datetime.datetime(2023, 12, 21, 3, 43, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1905776024, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': 'I updated kep in https://github.com/kubernetes/enhancements/pull/4431 and I will update this PR later.', 'created_at': datetime.datetime(2024, 1, 23, 10, 46, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1959132266, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': 'I updated the PR\r\n- drop the checkpoint part\r\n- add new kubelet configuration `pullImageSecretRecheckDuration`\r\n\r\n/cc @mikebrow @haircommander \r\ndo you have time to take a look again?', 'created_at': datetime.datetime(2024, 2, 22, 10, 20, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1959290004, 'issue_id': 1520464265, 'author': 'k8s-triage-robot', 'body': 'This PR [may require API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#what-apis-need-to-be-reviewed).\n\nIf so, when the changes are ready, [complete the pre-review checklist and request an API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#mechanics).\n\nStatus of requested reviews is tracked in the [API Review project](https://github.com/orgs/kubernetes/projects/169).', 'created_at': datetime.datetime(2024, 2, 22, 11, 50, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1967506425, 'issue_id': 1520464265, 'author': 'kannon92', 'body': '@pacoxu can you update this PR to fix CI failures?', 'created_at': datetime.datetime(2024, 2, 27, 20, 7, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1968352116, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': '> @pacoxu can you update this PR to fix CI failures?\r\n\r\nFixed.', 'created_at': datetime.datetime(2024, 2, 28, 7, 1, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1968945414, 'issue_id': 1520464265, 'author': 'kannon92', 'body': '> > @pacoxu can you update this PR to fix CI failures?\r\n> \r\n> Fixed.\r\n\r\nStill have a failure in pull-kubernetes-linter-hints. Looks like you used pointer rather than ptr in some places.', 'created_at': datetime.datetime(2024, 2, 28, 13, 5, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1969984209, 'issue_id': 1520464265, 'author': 'haircommander', 'body': 'besides the nodes and the linter issue this LGTM', 'created_at': datetime.datetime(2024, 2, 28, 21, 54, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1975787206, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': '@harche  Thanks for your review.\r\nLatest comments are addressed in https://github.com/kubernetes/kubernetes/compare/5bc731fc6d5a9701b129c5effc3ab26e4c1eb45d..14570664618938bd33eabbcdb2052da8ddba5256.', 'created_at': datetime.datetime(2024, 3, 4, 5, 57, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1975792773, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': '@haircommander  @harche @mikebrow @rphillips \r\nDo you have time to take a look again before code freeze? Thanks.', 'created_at': datetime.datetime(2024, 3, 4, 6, 2, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1976759759, 'issue_id': 1520464265, 'author': 'haircommander', 'body': ""a nit and you have linter errors.\r\n\r\nOne more note: I think technically `PullImageSecretRecheckPeriod` would be more correct, as duration implies the recheck is happening for the whole duration, rather than periodically. I know it's late and I am not stubborn about this, but if you find time before this merges I think I'd prefer it everywhere *Duration is used as a name here"", 'created_at': datetime.datetime(2024, 3, 4, 14, 51, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1977025495, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': ""> One more note: I think technically `PullImageSecretRecheckPeriod` would be more correct, as duration implies the recheck is happening for the whole duration, rather than periodically. I know it's late and I am not stubborn about this, but if you find time before this merges I think I'd prefer it everywhere *Duration is used as a name here\r\n\r\nGood catch, we have `VolumeStatsAggPeriod` and `CPUManagerReconcilePeriod` and so on. \r\n\r\nPullImageSecretRecheckDuration -> PullImageSecretRecheckPeriod\r\nLGTM"", 'created_at': datetime.datetime(2024, 3, 4, 16, 46, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1977034264, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': ""> a nit and you have linter errors.\r\n\r\nFixed.\r\n \r\n> One more note: I think technically `PullImageSecretRecheckPeriod` would be more correct, as duration implies the recheck is happening for the whole duration, rather than periodically. I know it's late and I am not stubborn about this, but if you find time before this merges I think I'd prefer it everywhere *Duration is used as a name here\r\n\r\n`PullImageSecretRecheckDuration` -> `PullImageSecretRecheckPeriod`\r\n\r\nI will sync it with KEP later."", 'created_at': datetime.datetime(2024, 3, 4, 16, 51, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1979054037, 'issue_id': 1520464265, 'author': 'haircommander', 'body': '/lgtm', 'created_at': datetime.datetime(2024, 3, 5, 15, 36, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1979054318, 'issue_id': 1520464265, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 9fee0ce1cffee8bae434fda397ac4d3362c40bee</details>', 'created_at': datetime.datetime(2024, 3, 5, 15, 37, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1979912326, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': 'Fixed some naming and code reading problem. @mrunalp \r\nNot sure if I miss the code freeze😄', 'created_at': datetime.datetime(2024, 3, 6, 1, 23, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1979923943, 'issue_id': 1520464265, 'author': 'kannon92', 'body': '> Fixed some naming and code reading problem. @mrunalp Not sure if I miss the code freeze😄\r\n\r\nYea, I think it was at 1800 PST (38 minutes ago). You could file an exception especiall if its a basically done.', 'created_at': datetime.datetime(2024, 3, 6, 1, 38, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1980582996, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': '> > Fixed some naming and code reading problem. @mrunalp Not sure if I miss the code freeze😄\r\n> \r\n> Yea, I think it was at 1800 PST (38 minutes ago). You could file an exception especiall if its a basically done.\r\n\r\nI opened an exception.\r\n\r\nAs @mrunalp mentioned, this needs api review.\r\n/assign  @yujuhong @dchen1107 @liggitt', 'created_at': datetime.datetime(2024, 3, 6, 10, 45, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1981386970, 'issue_id': 1520464265, 'author': 'MaryamTavakkoli', 'body': '/milestone v1.30', 'created_at': datetime.datetime(2024, 3, 6, 17, 16, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1981387031, 'issue_id': 1520464265, 'author': 'k8s-ci-robot', 'body': '@MaryamTavakkoli: You must be a member of the [kubernetes/milestone-maintainers](https://github.com/orgs/kubernetes/teams/milestone-maintainers/members) GitHub team to set the milestone. If you believe you should be able to issue the /milestone command, please contact your Milestone Maintainers Team and have them propose you as an additional delegate for this responsibility.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114847#issuecomment-1981386970):\n\n>/milestone v1.30\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 3, 6, 17, 16, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1981535769, 'issue_id': 1520464265, 'author': 'dchen1107', 'body': '/milestone v1.30', 'created_at': datetime.datetime(2024, 3, 6, 18, 32, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1981561801, 'issue_id': 1520464265, 'author': 'dchen1107', 'body': '/lgtm', 'created_at': datetime.datetime(2024, 3, 6, 18, 49, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1981561986, 'issue_id': 1520464265, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: dd29f907ed1038ba212208edf02b50dec0cfb757</details>', 'created_at': datetime.datetime(2024, 3, 6, 18, 49, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1981564163, 'issue_id': 1520464265, 'author': 'dchen1107', 'body': '/approve', 'created_at': datetime.datetime(2024, 3, 6, 18, 50, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1981572225, 'issue_id': 1520464265, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114847#issuecomment-1981564163"" title=""Approved"">dchen1107</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114847#"" title=""Author self-approved"">pacoxu</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign [liggitt](https://github.com/liggitt) for approval. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/features/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/features/OWNERS)~~ [dchen1107]\n- ~~[pkg/generated/openapi/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/generated/openapi/OWNERS)~~ [dchen1107]\n- ~~[pkg/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/OWNERS)~~ [dchen1107]\n- **[pkg/kubelet/apis/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/apis/config/OWNERS)**\n- **[staging/src/k8s.io/kubelet/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubelet/config/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""liggitt""]} -->', 'created_at': datetime.datetime(2024, 3, 6, 18, 55, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1981717547, 'issue_id': 1520464265, 'author': 'kannon92', 'body': '/label api-review', 'created_at': datetime.datetime(2024, 3, 6, 20, 22, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1982157670, 'issue_id': 1520464265, 'author': 'k8s-ci-robot', 'body': 'New changes are detected. LGTM label has been removed.', 'created_at': datetime.datetime(2024, 3, 7, 1, 11, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1982159651, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': 'I changed the Default value in  https://github.com/kubernetes/kubernetes/compare/561eb58389377daf3d51d23ccf67e3792366a2eb..5acdb0defcb9cc2cf9318ced3318e562f48358b9.\r\n\r\n```\r\n\t// PullImageSecretRecheckPeriod defines the duration to recheck the pull image secret.\r\n\t// By default, the kubelet will not recheck the pull image secret.\r\n\t// For security reasons, we recommend rechecking the pull image secret, ideally every 24 hours (1d).\r\n```\r\nAdding a comment like this.', 'created_at': datetime.datetime(2024, 3, 7, 1, 13, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1982886879, 'issue_id': 1520464265, 'author': 'salehsedghpour', 'body': ""As the[ exception request](https://groups.google.com/g/kubernetes-sig-release/c/jrD06OyqiQ0/m/6LuENinSAgAJ) is approved, I'm adding a `/hold` label to prevent from accidental merge.\r\n/hold"", 'created_at': datetime.datetime(2024, 3, 7, 8, 18, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1982908443, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': '/test pull-kubernetes-e2e-gce', 'created_at': datetime.datetime(2024, 3, 7, 8, 25, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1983991152, 'issue_id': 1520464265, 'author': 'liggitt', 'body': ""> see proposed style change to named return vals...\r\n\r\nI'd rather minimize the diff... returning data (imageRef) alongside errors makes me wonder what is using that data in error cases"", 'created_at': datetime.datetime(2024, 3, 7, 16, 51, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1984037617, 'issue_id': 1520464265, 'author': 'mikebrow', 'body': ""> > see proposed style change to named return vals...\r\n> \r\n> I'd rather minimize the diff... returning data (imageRef) alongside errors makes me wonder what is using that data in error cases\r\n\r\nagreed.. I think it was a mistake to return imageRef that error case."", 'created_at': datetime.datetime(2024, 3, 7, 17, 16, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1984064439, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': ""https://github.com/kubernetes/kubernetes/compare/1f854e8d7b945d95c7444c6d613a1939b8fabf15..3d40dd9a76b085f86e83f5c3242be402d4c77d40\r\nhttps://github.com/kubernetes/kubernetes/compare/3d40dd9a76b085f86e83f5c3242be402d4c77d40..0ad580e18f54362718f95196453590e7ae216fc7\r\nupdate for Jordan's comments."", 'created_at': datetime.datetime(2024, 3, 7, 17, 31, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1986600687, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': '/hold\nfor there are still some things not clear.\n\n/milestone clear', 'created_at': datetime.datetime(2024, 3, 9, 0, 31, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2153643510, 'issue_id': 1520464265, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 6, 7, 0, 37, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 2153643611, 'issue_id': 1520464265, 'author': 'k8s-ci-robot', 'body': 'PR needs rebase.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 6, 7, 0, 37, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2212095743, 'issue_id': 1520464265, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle rotten\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 7, 7, 0, 59, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 2221852009, 'issue_id': 1520464265, 'author': 'pacoxu', 'body': '/close \r\nref https://github.com/kubernetes/kubernetes/pull/125817', 'created_at': datetime.datetime(2024, 7, 11, 2, 9, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2221852083, 'issue_id': 1520464265, 'author': 'k8s-ci-robot', 'body': '@pacoxu: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114847#issuecomment-2221852009):\n\n>/close \r\n>ref https://github.com/kubernetes/kubernetes/pull/125817\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 7, 11, 2, 9, 18, tzinfo=datetime.timezone.utc)}]","pacoxu (Issue Creator) on (2023-01-05 10:22:26 UTC): /priority important-soon
/triage accepted

pacoxu (Issue Creator) on (2023-05-26 09:27:14 UTC): Tested on a local env, and it can work. The dueDate for the ensured auth is now only 1 hour that can cover the kubelet restarts.

```
[root@daocloud ~]#  kubectl get pod -o wide
NAME                               READY   STATUS             RESTARTS   AGE     IP               NODE       NOMINATED NODE   READINESS GATES
need-secret-and-has-secret         1/1     Running            0          2m5s    172.32.230.235   daocloud   <none>           <none>
need-secret-and-has-secret-2       1/1     Running            0          2m1s    172.32.230.234   daocloud   <none>           <none>
need-secret-and-has-wrong-secret   0/1     ImagePullBackOff   0          105s    172.32.230.236   daocloud   <none>           <none>
need-secret-but-has-no             0/1     ErrImagePull       0          70s     172.32.230.237   daocloud   <none>           <none>
```

pacoxu (Issue Creator) on (2023-05-30 01:45:51 UTC): /cc @bart0sh @SergeyKanzhelev

pacoxu (Issue Creator) on (2023-07-31 09:58:33 UTC): /test pull-kubernetes-e2e-gce-cos-alpha-features

pacoxu (Issue Creator) on (2023-10-12 10:37:10 UTC): ACK, code freeze in three weeks.

Can I get another round of review?

pacoxu (Issue Creator) on (2023-10-29 15:20:47 UTC): @haircommander  Sorry for the late update due to missing comments notification.

haircommander (Assginee) on (2023-10-30 15:54:02 UTC): /lgtm

k8s-ci-robot on (2023-10-30 15:54:10 UTC): LGTM label has been added.  <details>Git tree hash: 36ca5e1953ba13f0595805f71cc95850d98d2f10</details>

pacoxu (Issue Creator) on (2023-10-30 17:00:01 UTC): /assign @mikebrow @mrunalp @dchen1107

haircommander (Assginee) on (2023-11-13 18:13:44 UTC): I know we risk bike shedding here, but I had some thoughts about this:
- I don't understand the motivation to do the checkpointing. If the image is already present, but we have PullPolicy: Always, then the runtime *should* (based on my understanding) just auth with the server, and not actually pull any blobs redundantly. What's the risk of redoing that work over kubelet reboots?
- If we do keep the checkpoint file: I can't see quickly where the location is. Are we keeping it on disk? if so, can we put it somewhere in a tmpfs instead? I don't think we need it across node reboots

Happy to discuss on a call or something if that'd be better, sorry if I'm missing some context

mikebrow (Assginee) on (2023-11-27 15:17:03 UTC): Motivation Discussion here:
https://github.com/kubernetes/kubernetes/pull/94899#issuecomment-1058443476


correct, if every pod is using pull always or pull never policy or if the tags are `:latest` then no change

The performance and availability problem with that is having to connect and check manifests every time for every container image.  Additionally, at least one container registry charges(counts) the connect and manifest check as one of your container image pulls, even if you don't pull blobs. Further, the policy pull if not present policy is still an option and is not doing what users expect, and there is a desire to have a means to discover if an image was preloaded for disconnected use / performance reasons or pulled with pull always or pull if not present.


which images are pre-loaded images, which were pulled with a particular password and thus are considered only accessible with that access right...


@pacoxu ?


If we reset (gc) the image cache maybe.. but that was rejected ^


Sure let's chat!

haircommander (Assginee) on (2023-11-28 19:45:51 UTC): I don't see how disconnected works with this TBH so I am unsure why it's a case to consider. Perf reasons is a reason to keep the checkpoint file, but enabling this feature generally is trading off perf and security. I guess the question is: is the added code of keeping the checkpoint worth saving for the (IMO ideally infrequent) situation of a kubelet restart?


if the checkpoint file isn't present (if put in a tmpfs) then kubelet would treat every auth request as invalidated and rebuild the checkpointing. I don't think we need to clean the image cache to get this behavior.

pacoxu (Issue Creator) on (2023-12-06 12:57:26 UTC): @haircommander, I apologize for missing the SIG Node meeting yesterday (2 a.m. is too late for me).

I reviewed some comments in the meeting notes. As Derek mentioned, we need to address disconnected needs.
- I also believe we should tackle issues related to registry connection or registry failure time (the registry may crash as well). Additionally, the kubelet may be restarted as the same time.

I will delve deeper into this when the SIG Node weekly meeting record is uploaded.

haircommander (Assginee) on (2023-12-07 20:03:52 UTC): I think this needs to be a calculated decision made by an administrator. This feature will reduce uptime in some scenerios and they should be aware of that/have registry mirrors configured to account for that. I think there should be a kubelet config field to toggle this behavior so that even after the feature goes GA an admin can opt-out

pacoxu (Issue Creator) on (2023-12-15 09:32:10 UTC): I just watched the record https://www.youtube.com/watch?v=k7kzjKnmwSI.

To summarize:
1. Current logic(without this PR)
User has to use `Always` as current IfNotPresent will never do re-check.
No Doubt 

2. Wanted Logic(Secure way using IfNotPresent):

Skip re-check for checked secret in a period of 1h if kubelet is not restart.

3. Add a new flag/kubelet configuration param (Derek inspired):
A optional `PullImageSecretRecheckDuration` to configure the recheck duration
- 0 for always re-check: most secure one.
- -1: for never re-check: Set this to default to make no behavior change. But not secure at all.
- a duration like 1h, 1d, 1m, 1week: after setting it, administrators can use IfNotPresent instead of Always then and the administors knows the trade-off.

Then administrator can know that he has a cache buffer not to re-check secret.

4. The Debate(use checkpoint or not): Should we skip the re-check after kubelet restart or reboot?
 
I think that we may not use checkpoint. Reasons:
 - Restart Scenarios: 
   - upgrade: user needs to drain the node according to the best practice, and re-check is acceptable. (Honestly, many users don't)
   - other problems(change a configuration or some scripts for memory leak): still some maintenance modes, and re-check is acceptable.
- When no-checkpoints hurts?
  - Continuous kubelet restarts（this is a bug scanerio）
 
 
---


- Should we make the PullImageSecretRecheckDuration configurable? I think yes.
- Which should be the default behavior of IfNotPresent in the future? Always re-check? Never re-check? Re-check with 1h expired?  I prefer always recheck as it is most secure one **but a behavior change**.
- Should we add a flag to support the checkpoint here for restarts/reboots? Just remove the checkpoint part? I prefer removing checkpoints. 
 
@mikebrow @haircommander @derekwaynecarr  correct me if I understand wrongly and give your opinions.

haircommander (Assginee) on (2023-12-15 14:35:00 UTC): Great summary. One point to clarify:  I think the IfNotPresent behavior will not necessarily always recheck. I think kubelet should still keep its internal hash map, and if the request uses the same creds again (pod is restarting or same user is creating multiple replicas) then the image shouldn't repull, until the duration expires. My point to drop the checkpoint was only to get rid of saving it in the file, for the reasons you outlined above. Thoughts??

pacoxu (Issue Creator) on (2023-12-21 03:43:48 UTC): So we should have a new flag like `PullImageSecretRecheckDuration` to make the expired duration configurable. 
For `IfNotPresent`image, we check the internal hash map and it can also expire. 

@haircommander  I agree with the part definitly.

---

For the restart scenario, we will drop the checkpoint and do the recheck. 
- we add persist part in https://github.com/kubernetes/enhancements/pull/3532  @mrunalp @mikebrow 

@derekwaynecarr @dchen1107  Do you agree on removing the checkpoint part?

@mikebrow I prefer to not use persist in the alpha stage and get more feedback later to decide if we will add the persist for this feature.

pacoxu (Issue Creator) on (2024-01-23 10:46:56 UTC): I updated kep in https://github.com/kubernetes/enhancements/pull/4431 and I will update this PR later.

pacoxu (Issue Creator) on (2024-02-22 10:20:57 UTC): I updated the PR
- drop the checkpoint part
- add new kubelet configuration `pullImageSecretRecheckDuration`

/cc @mikebrow @haircommander 
do you have time to take a look again?

k8s-triage-robot on (2024-02-22 11:50:33 UTC): This PR [may require API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#what-apis-need-to-be-reviewed).

If so, when the changes are ready, [complete the pre-review checklist and request an API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#mechanics).

Status of requested reviews is tracked in the [API Review project](https://github.com/orgs/kubernetes/projects/169).

kannon92 on (2024-02-27 20:07:01 UTC): @pacoxu can you update this PR to fix CI failures?

pacoxu (Issue Creator) on (2024-02-28 07:01:13 UTC): Fixed.

kannon92 on (2024-02-28 13:05:38 UTC): Still have a failure in pull-kubernetes-linter-hints. Looks like you used pointer rather than ptr in some places.

haircommander (Assginee) on (2024-02-28 21:54:09 UTC): besides the nodes and the linter issue this LGTM

pacoxu (Issue Creator) on (2024-03-04 05:57:38 UTC): @harche  Thanks for your review.
Latest comments are addressed in https://github.com/kubernetes/kubernetes/compare/5bc731fc6d5a9701b129c5effc3ab26e4c1eb45d..14570664618938bd33eabbcdb2052da8ddba5256.

pacoxu (Issue Creator) on (2024-03-04 06:02:12 UTC): @haircommander  @harche @mikebrow @rphillips 
Do you have time to take a look again before code freeze? Thanks.

haircommander (Assginee) on (2024-03-04 14:51:47 UTC): a nit and you have linter errors.

One more note: I think technically `PullImageSecretRecheckPeriod` would be more correct, as duration implies the recheck is happening for the whole duration, rather than periodically. I know it's late and I am not stubborn about this, but if you find time before this merges I think I'd prefer it everywhere *Duration is used as a name here

pacoxu (Issue Creator) on (2024-03-04 16:46:53 UTC): Good catch, we have `VolumeStatsAggPeriod` and `CPUManagerReconcilePeriod` and so on. 

PullImageSecretRecheckDuration -> PullImageSecretRecheckPeriod
LGTM

pacoxu (Issue Creator) on (2024-03-04 16:51:19 UTC): Fixed.
 

`PullImageSecretRecheckDuration` -> `PullImageSecretRecheckPeriod`

I will sync it with KEP later.

haircommander (Assginee) on (2024-03-05 15:36:54 UTC): /lgtm

k8s-ci-robot on (2024-03-05 15:37:01 UTC): LGTM label has been added.  <details>Git tree hash: 9fee0ce1cffee8bae434fda397ac4d3362c40bee</details>

pacoxu (Issue Creator) on (2024-03-06 01:23:36 UTC): Fixed some naming and code reading problem. @mrunalp 
Not sure if I miss the code freeze😄

kannon92 on (2024-03-06 01:38:44 UTC): Yea, I think it was at 1800 PST (38 minutes ago). You could file an exception especiall if its a basically done.

pacoxu (Issue Creator) on (2024-03-06 10:45:31 UTC): I opened an exception.

As @mrunalp mentioned, this needs api review.
/assign  @yujuhong @dchen1107 @liggitt

MaryamTavakkoli on (2024-03-06 17:16:02 UTC): /milestone v1.30

k8s-ci-robot on (2024-03-06 17:16:05 UTC): @MaryamTavakkoli: You must be a member of the [kubernetes/milestone-maintainers](https://github.com/orgs/kubernetes/teams/milestone-maintainers/members) GitHub team to set the milestone. If you believe you should be able to issue the /milestone command, please contact your Milestone Maintainers Team and have them propose you as an additional delegate for this responsibility.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114847#issuecomment-1981386970):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

dchen1107 (Assginee) on (2024-03-06 18:32:02 UTC): /milestone v1.30

dchen1107 (Assginee) on (2024-03-06 18:49:19 UTC): /lgtm

k8s-ci-robot on (2024-03-06 18:49:24 UTC): LGTM label has been added.  <details>Git tree hash: dd29f907ed1038ba212208edf02b50dec0cfb757</details>

dchen1107 (Assginee) on (2024-03-06 18:50:43 UTC): /approve

k8s-ci-robot on (2024-03-06 18:55:48 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114847#issuecomment-1981564163"" title=""Approved"">dchen1107</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114847#"" title=""Author self-approved"">pacoxu</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign [liggitt](https://github.com/liggitt) for approval. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- ~~[pkg/features/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/features/OWNERS)~~ [dchen1107]
- ~~[pkg/generated/openapi/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/generated/openapi/OWNERS)~~ [dchen1107]
- ~~[pkg/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/OWNERS)~~ [dchen1107]
- **[pkg/kubelet/apis/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/apis/config/OWNERS)**
- **[staging/src/k8s.io/kubelet/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubelet/config/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""liggitt""]} -->

kannon92 on (2024-03-06 20:22:01 UTC): /label api-review

k8s-ci-robot on (2024-03-07 01:11:36 UTC): New changes are detected. LGTM label has been removed.

pacoxu (Issue Creator) on (2024-03-07 01:13:47 UTC): I changed the Default value in  https://github.com/kubernetes/kubernetes/compare/561eb58389377daf3d51d23ccf67e3792366a2eb..5acdb0defcb9cc2cf9318ced3318e562f48358b9.

```
	// PullImageSecretRecheckPeriod defines the duration to recheck the pull image secret.
	// By default, the kubelet will not recheck the pull image secret.
	// For security reasons, we recommend rechecking the pull image secret, ideally every 24 hours (1d).
```
Adding a comment like this.

salehsedghpour on (2024-03-07 08:18:31 UTC): As the[ exception request](https://groups.google.com/g/kubernetes-sig-release/c/jrD06OyqiQ0/m/6LuENinSAgAJ) is approved, I'm adding a `/hold` label to prevent from accidental merge.
/hold

pacoxu (Issue Creator) on (2024-03-07 08:25:35 UTC): /test pull-kubernetes-e2e-gce

liggitt on (2024-03-07 16:51:07 UTC): I'd rather minimize the diff... returning data (imageRef) alongside errors makes me wonder what is using that data in error cases

mikebrow (Assginee) on (2024-03-07 17:16:14 UTC): agreed.. I think it was a mistake to return imageRef that error case.

pacoxu (Issue Creator) on (2024-03-07 17:31:31 UTC): https://github.com/kubernetes/kubernetes/compare/1f854e8d7b945d95c7444c6d613a1939b8fabf15..3d40dd9a76b085f86e83f5c3242be402d4c77d40
https://github.com/kubernetes/kubernetes/compare/3d40dd9a76b085f86e83f5c3242be402d4c77d40..0ad580e18f54362718f95196453590e7ae216fc7
update for Jordan's comments.

pacoxu (Issue Creator) on (2024-03-09 00:31:56 UTC): /hold
for there are still some things not clear.

/milestone clear

k8s-triage-robot on (2024-06-07 00:37:31 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2024-06-07 00:37:40 UTC): PR needs rebase.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.
</details>

k8s-triage-robot on (2024-07-07 00:59:43 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle rotten

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

pacoxu (Issue Creator) on (2024-07-11 02:09:13 UTC): /close 
ref https://github.com/kubernetes/kubernetes/pull/125817

k8s-ci-robot on (2024-07-11 02:09:18 UTC): @pacoxu: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114847#issuecomment-2221852009):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.
</details>

"
1520458468,pull_request,closed,,Remove support for seccomp annotations when determining whether a container update should trigger a policy evaluation,"
<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind cleanup

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
Followup #109819, since the seccomp fields are immutable, so we can just drop them in 1.27

https://github.com/kubernetes/kubernetes/pull/109819#discussion_r868578042
> container-level seccomp annotations could still influence 1.23 and 1.24 kubelets (which still honor them over pod level fields), so this is still a relevant change. keep this and leave a comment explaining why and a TODO to drop this in 1.27

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
xref #95171

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",SataQiu,2023-01-05 10:06:52+00:00,['liggitt'],2023-01-10 00:19:14+00:00,2023-01-10 00:19:12+00:00,https://github.com/kubernetes/kubernetes/pull/114846,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1372016194, 'issue_id': 1520458468, 'author': 'k8s-ci-robot', 'body': '@SataQiu: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 5, 10, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374510794, 'issue_id': 1520458468, 'author': 'SataQiu', 'body': '/assign @liggitt', 'created_at': datetime.datetime(2023, 1, 7, 15, 9, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375659169, 'issue_id': 1520458468, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 9, 13, 55, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375659356, 'issue_id': 1520458468, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: efa70f2df7405516cbdcdb8d4c85a2af28e9b9b0</details>', 'created_at': datetime.datetime(2023, 1, 9, 13, 55, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375659689, 'issue_id': 1520458468, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114846#issuecomment-1375659169"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114846#"" title=""Author self-approved"">SataQiu</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 9, 13, 56, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376043569, 'issue_id': 1520458468, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114846) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 9, 18, 10, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376422802, 'issue_id': 1520458468, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114846) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 9, 22, 30, 21, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 10:07:00 UTC): @SataQiu: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

SataQiu (Issue Creator) on (2023-01-07 15:09:27 UTC): /assign @liggitt

liggitt (Assginee) on (2023-01-09 13:55:46 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-09 13:55:56 UTC): LGTM label has been added.  <details>Git tree hash: efa70f2df7405516cbdcdb8d4c85a2af28e9b9b0</details>

k8s-ci-robot on (2023-01-09 13:56:13 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114846#issuecomment-1375659169"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114846#"" title=""Author self-approved"">SataQiu</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-triage-robot on (2023-01-09 18:10:21 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114846) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-09 22:30:21 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114846) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

"
1520385028,pull_request,closed,,dynamic resource allocation: add timeouts for communiction with plugin,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind feature

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
In the current implementation, there are no timeouts with gRPC call to dra plugins. It would prevent containers from starting or terminating. This PR adds timeouts for the gRPC call to avoid the problem.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #113867

#### Special notes for your reviewer:

I added the timeout value as constant. Should we enable it to be configured?

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
",saza-ku,2023-01-05 09:17:52+00:00,"['klueska', 'bart0sh']",2023-04-06 16:53:20+00:00,2023-03-13 11:34:57+00:00,https://github.com/kubernetes/kubernetes/pull/114844,"[('area/kubelet', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('tide/merge-method-squash', 'Denotes a PR that should be squashed by tide when it merges.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1371965290, 'issue_id': 1520385028, 'author': 'k8s-ci-robot', 'body': ""Welcome @Saza-ku! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:"", 'created_at': datetime.datetime(2023, 1, 5, 9, 17, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371965307, 'issue_id': 1520385028, 'author': 'k8s-ci-robot', 'body': ""Hi @Saza-ku. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 5, 9, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373138562, 'issue_id': 1520385028, 'author': 'bart0sh', 'body': '/triage accepted\r\n/priority important-longterm', 'created_at': datetime.datetime(2023, 1, 6, 4, 43, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373138721, 'issue_id': 1520385028, 'author': 'bart0sh', 'body': '/assign', 'created_at': datetime.datetime(2023, 1, 6, 4, 43, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373140737, 'issue_id': 1520385028, 'author': 'bart0sh', 'body': '@Saza-ku Thank you for your PR. It looks good overall. One general note: would it be better to move this logic to the lower level(pkg/kubelet/plugin/dra/plugin/client.go)?', 'created_at': datetime.datetime(2023, 1, 6, 4, 48, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373141243, 'issue_id': 1520385028, 'author': 'bart0sh', 'body': '/cc @klueska', 'created_at': datetime.datetime(2023, 1, 6, 4, 49, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380128024, 'issue_id': 1520385028, 'author': 'saza-ku', 'body': ""Now I set the timeout constant in `pkg/kubelet/cm/util`, since importing `pkg/kubelet/cm` from `pkg/kubelet/cm/dra/plugin` causes import cycle.\r\n\r\nI'm considering creating another pull request that makes the Device Manager use the constant, not adding the change to this PR. Is it okay?"", 'created_at': datetime.datetime(2023, 1, 12, 10, 35, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380227132, 'issue_id': 1520385028, 'author': 'bart0sh', 'body': '/ok-to-test', 'created_at': datetime.datetime(2023, 1, 12, 12, 3, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380313433, 'issue_id': 1520385028, 'author': 'saza-ku', 'body': '/retest-required', 'created_at': datetime.datetime(2023, 1, 12, 13, 4, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380717262, 'issue_id': 1520385028, 'author': 'bart0sh', 'body': '/lgtm\r\n/label tide/merge-method-squash', 'created_at': datetime.datetime(2023, 1, 12, 16, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380717397, 'issue_id': 1520385028, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 65c4cc6b4f75082b667e93bb4ad45e80a90443ed</details>', 'created_at': datetime.datetime(2023, 1, 12, 16, 55, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380717917, 'issue_id': 1520385028, 'author': 'bart0sh', 'body': '/assign @klueska', 'created_at': datetime.datetime(2023, 1, 12, 16, 55, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1465891389, 'issue_id': 1520385028, 'author': 'klueska', 'body': '/approve\r\n/lgtm\r\n@bart0sh please create a follow-up to add a constant', 'created_at': datetime.datetime(2023, 3, 13, 10, 35, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1465891885, 'issue_id': 1520385028, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114844#issuecomment-1465891389"" title=""LGTM"">klueska</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114844#"" title=""Author self-approved"">Saza-ku</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/kubelet/cm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/cm/OWNERS)~~ [klueska]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 3, 13, 10, 35, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1499353458, 'issue_id': 1520385028, 'author': 'klueska', 'body': 'This change is causing issues for me.\r\n\r\nWhen my plugin takes longer than 10 seconds to respond, the `NodePrepareResource()` call in the client (presumably) fails, but the failure is never bubbled up to the manager. Later on a timeout happens somewhere else in the stack (after 90s) and a *new* call to `NodePrepareResource()` in the manager is issued. This one succeeds (because my call only takes a very short amount of time because it returns a cached allocation from the first call). The first call *never* returns though, presumably blocked somewhere down inside the client.\r\n\r\nTo verify this, I temporarily extended the timeout beyond the length of time it takes for my plugin to succeed and everything works as expected.\r\n\r\n/cc @bart0sh', 'created_at': datetime.datetime(2023, 4, 6, 16, 53, 19, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 09:17:59 UTC): Welcome @Saza-ku! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:

k8s-ci-robot on (2023-01-05 09:18:00 UTC): Hi @Saza-ku. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

bart0sh (Assginee) on (2023-01-06 04:43:35 UTC): /triage accepted
/priority important-longterm

bart0sh (Assginee) on (2023-01-06 04:43:55 UTC): /assign

bart0sh (Assginee) on (2023-01-06 04:48:32 UTC): @Saza-ku Thank you for your PR. It looks good overall. One general note: would it be better to move this logic to the lower level(pkg/kubelet/plugin/dra/plugin/client.go)?

bart0sh (Assginee) on (2023-01-06 04:49:35 UTC): /cc @klueska

saza-ku (Issue Creator) on (2023-01-12 10:35:40 UTC): Now I set the timeout constant in `pkg/kubelet/cm/util`, since importing `pkg/kubelet/cm` from `pkg/kubelet/cm/dra/plugin` causes import cycle.

I'm considering creating another pull request that makes the Device Manager use the constant, not adding the change to this PR. Is it okay?

bart0sh (Assginee) on (2023-01-12 12:03:34 UTC): /ok-to-test

saza-ku (Issue Creator) on (2023-01-12 13:04:41 UTC): /retest-required

bart0sh (Assginee) on (2023-01-12 16:55:00 UTC): /lgtm
/label tide/merge-method-squash

k8s-ci-robot on (2023-01-12 16:55:06 UTC): LGTM label has been added.  <details>Git tree hash: 65c4cc6b4f75082b667e93bb4ad45e80a90443ed</details>

bart0sh (Assginee) on (2023-01-12 16:55:29 UTC): /assign @klueska

klueska (Assginee) on (2023-03-13 10:35:31 UTC): /approve
/lgtm
@bart0sh please create a follow-up to add a constant

k8s-ci-robot on (2023-03-13 10:35:54 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114844#issuecomment-1465891389"" title=""LGTM"">klueska</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114844#"" title=""Author self-approved"">Saza-ku</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/kubelet/cm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/cm/OWNERS)~~ [klueska]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

klueska (Assginee) on (2023-04-06 16:53:19 UTC): This change is causing issues for me.

When my plugin takes longer than 10 seconds to respond, the `NodePrepareResource()` call in the client (presumably) fails, but the failure is never bubbled up to the manager. Later on a timeout happens somewhere else in the stack (after 90s) and a *new* call to `NodePrepareResource()` in the manager is issued. This one succeeds (because my call only takes a very short amount of time because it returns a cached allocation from the first call). The first call *never* returns though, presumably blocked somewhere down inside the client.

To verify this, I temporarily extended the timeout beyond the length of time it takes for my plugin to succeed and everything works as expected.

/cc @bart0sh

"
1520350268,pull_request,closed,,Fix failure(context canceled) in scheduler_perf benchmark,"Scheduler-perf benchmark tests are always failed due to the cancelled context when tearing down

Signed-off-by: Kante Yin <kerthcet@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/sig scheduling
/kind bug
/kind failing-test

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

scheduler-perf benchmarks are always failed due to the error:
```
E0105 04:27:16.047290   27011 perf_utils.go:129] Error while deleting Node: client rate limiter Wait returned an error: context canceled
```

see testgrid: https://testgrid.k8s.io/sig-scalability-benchmarks#scheduler-perf

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",kerthcet,2023-01-05 08:54:56+00:00,"['pohly', 'alculquicondor', 'mikedanese']",2023-01-31 01:50:46+00:00,2023-01-31 00:21:01+00:00,https://github.com/kubernetes/kubernetes/pull/114843,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('area/test', None), ('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('kind/failing-test', 'Categorizes issue or PR as related to a consistently or frequently failing test.'), ('tide/merge-method-squash', 'Denotes a PR that should be squashed by tide when it merges.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1371939657, 'issue_id': 1520350268, 'author': 'k8s-ci-robot', 'body': '@kerthcet: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 5, 8, 55, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371940232, 'issue_id': 1520350268, 'author': 'kerthcet', 'body': 'also cc @pohly', 'created_at': datetime.datetime(2023, 1, 5, 8, 55, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372997499, 'issue_id': 1520350268, 'author': 'kerthcet', 'body': 'can you approve again? @alculquicondor', 'created_at': datetime.datetime(2023, 1, 6, 1, 1, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373620310, 'issue_id': 1520350268, 'author': 'alculquicondor', 'body': ""I don't have ownership for test/integration/framework\r\n\r\n/assign @mikedanese"", 'created_at': datetime.datetime(2023, 1, 6, 13, 23, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374363598, 'issue_id': 1520350268, 'author': 'kerthcet', 'body': '@aojea can you help to take a look of this? CI benchmark for scheduler_perf is always failed today.', 'created_at': datetime.datetime(2023, 1, 7, 3, 19, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375263422, 'issue_id': 1520350268, 'author': 'sanposhiho', 'body': 'The current ctx used to delete nodes is create d here, right?\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/master/test/integration/scheduler_perf/scheduler_perf_test.go#L644\r\n\r\nIs there a possibility that b.Cleanup is called **after** runWorkload func finished?(Probably when each [`b.Run`](https://github.com/kubernetes/kubernetes/blob/master/test/integration/scheduler_perf/scheduler_perf_test.go#L586) is finished, I guess?): `ctx` is canceled by defer func, then b.Cleanup is called after `b.Run` is finished, and that results in context canceled error?\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/master/test/integration/scheduler_perf/scheduler_perf_test.go#L642\r\n\r\nIf this hypothesis is correct, we can resolve it by just moving `ctx` creation to BenchmarkPerfScheduling just before `b.Run`, pass it to runWorkload and cancel it after `b.Run`. https://github.com/kubernetes/kubernetes/pull/114843#discussion_r1064356713', 'created_at': datetime.datetime(2023, 1, 9, 8, 30, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1381988517, 'issue_id': 1520350268, 'author': 'kerthcet', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 13, 15, 3, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1383623574, 'issue_id': 1520350268, 'author': 'kerthcet', 'body': 'kindly ping @pohly', 'created_at': datetime.datetime(2023, 1, 16, 8, 0, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1402036973, 'issue_id': 1520350268, 'author': 'pohly', 'body': '/hold', 'created_at': datetime.datetime(2023, 1, 24, 14, 26, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1402040426, 'issue_id': 1520350268, 'author': 'pohly', 'body': 'I was starting to base some of my own work (integration tests for dynamic resource allocation) on this branch when I noticed an issue:\r\n```\r\n$ make test-integration WHAT=./test/integration/scheduler_perf ETCD_LOGLEVEL=warn KUBE_TEST_VMODULE=""\'\'"" KUBE_TEST_ARGS=""-run=^$$ -benchtime=1ns -bench=BenchmarkPerfScheduling/SchedulingBasic/5000Nodes/5000InitPods/1000PodsToSchedule""\r\n...\r\nI0124 15:25:40.606292  586250 util.go:328] 1000 pods scheduled\r\nE0124 15:25:40.891464  586250 perf_utils.go:129] Error while deleting Node: client rate limiter Wait returned an error: context canceled\r\nE0124 15:25:40.891494  586250 perf_utils.go:129] Error while deleting Node: client rate limiter Wait returned an error: context canceled\r\n...\r\n```\r\n\r\nLooks like some cleanup code is still getting the wrong context.', 'created_at': datetime.datetime(2023, 1, 24, 14, 28, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1402040871, 'issue_id': 1520350268, 'author': 'pohly', 'body': '/lgtm cancel', 'created_at': datetime.datetime(2023, 1, 24, 14, 28, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1402047287, 'issue_id': 1520350268, 'author': 'pohly', 'body': 'Sorry for the confusion - I was on the master branch, not this one. The error above does not occur there anymore.\r\n\r\n/lgtm\r\n/hold cancel', 'created_at': datetime.datetime(2023, 1, 24, 14, 33, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1402047467, 'issue_id': 1520350268, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: ec4ead464bdac3e89e12bf908c624f5d4f9f16a9</details>', 'created_at': datetime.datetime(2023, 1, 24, 14, 33, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1402067812, 'issue_id': 1520350268, 'author': 'alculquicondor', 'body': '/hold\r\nI have some questions still', 'created_at': datetime.datetime(2023, 1, 24, 14, 47, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1409434559, 'issue_id': 1520350268, 'author': 'alculquicondor', 'body': '/hold cancel\r\n/lgtm\r\n/approve\r\n/label tide/merge-method-squash', 'created_at': datetime.datetime(2023, 1, 30, 22, 16, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1409434709, 'issue_id': 1520350268, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 79679fda475d2fe892e7f6fed93e4443a65fcb69</details>', 'created_at': datetime.datetime(2023, 1, 30, 22, 16, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1409435150, 'issue_id': 1520350268, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114843#issuecomment-1409434559"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114843#"" title=""Author self-approved"">kerthcet</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114843#pullrequestreview-1267587163"" title=""LGTM"">pohly</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [pohly]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 30, 22, 16, 33, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 08:55:03 UTC): @kerthcet: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

kerthcet (Issue Creator) on (2023-01-05 08:55:37 UTC): also cc @pohly

kerthcet (Issue Creator) on (2023-01-06 01:01:42 UTC): can you approve again? @alculquicondor

alculquicondor (Assginee) on (2023-01-06 13:23:43 UTC): I don't have ownership for test/integration/framework

/assign @mikedanese

kerthcet (Issue Creator) on (2023-01-07 03:19:02 UTC): @aojea can you help to take a look of this? CI benchmark for scheduler_perf is always failed today.

sanposhiho on (2023-01-09 08:30:57 UTC): The current ctx used to delete nodes is create d here, right?

https://github.com/kubernetes/kubernetes/blob/master/test/integration/scheduler_perf/scheduler_perf_test.go#L644

Is there a possibility that b.Cleanup is called **after** runWorkload func finished?(Probably when each [`b.Run`](https://github.com/kubernetes/kubernetes/blob/master/test/integration/scheduler_perf/scheduler_perf_test.go#L586) is finished, I guess?): `ctx` is canceled by defer func, then b.Cleanup is called after `b.Run` is finished, and that results in context canceled error?

https://github.com/kubernetes/kubernetes/blob/master/test/integration/scheduler_perf/scheduler_perf_test.go#L642

If this hypothesis is correct, we can resolve it by just moving `ctx` creation to BenchmarkPerfScheduling just before `b.Run`, pass it to runWorkload and cancel it after `b.Run`. https://github.com/kubernetes/kubernetes/pull/114843#discussion_r1064356713

kerthcet (Issue Creator) on (2023-01-13 15:03:36 UTC): /retest

kerthcet (Issue Creator) on (2023-01-16 08:00:22 UTC): kindly ping @pohly

pohly (Assginee) on (2023-01-24 14:26:13 UTC): /hold

pohly (Assginee) on (2023-01-24 14:28:31 UTC): I was starting to base some of my own work (integration tests for dynamic resource allocation) on this branch when I noticed an issue:
```
$ make test-integration WHAT=./test/integration/scheduler_perf ETCD_LOGLEVEL=warn KUBE_TEST_VMODULE=""''"" KUBE_TEST_ARGS=""-run=^$$ -benchtime=1ns -bench=BenchmarkPerfScheduling/SchedulingBasic/5000Nodes/5000InitPods/1000PodsToSchedule""
...
I0124 15:25:40.606292  586250 util.go:328] 1000 pods scheduled
E0124 15:25:40.891464  586250 perf_utils.go:129] Error while deleting Node: client rate limiter Wait returned an error: context canceled
E0124 15:25:40.891494  586250 perf_utils.go:129] Error while deleting Node: client rate limiter Wait returned an error: context canceled
...
```

Looks like some cleanup code is still getting the wrong context.

pohly (Assginee) on (2023-01-24 14:28:48 UTC): /lgtm cancel

pohly (Assginee) on (2023-01-24 14:33:20 UTC): Sorry for the confusion - I was on the master branch, not this one. The error above does not occur there anymore.

/lgtm
/hold cancel

k8s-ci-robot on (2023-01-24 14:33:26 UTC): LGTM label has been added.  <details>Git tree hash: ec4ead464bdac3e89e12bf908c624f5d4f9f16a9</details>

alculquicondor (Assginee) on (2023-01-24 14:47:14 UTC): /hold
I have some questions still

alculquicondor (Assginee) on (2023-01-30 22:16:05 UTC): /hold cancel
/lgtm
/approve
/label tide/merge-method-squash

k8s-ci-robot on (2023-01-30 22:16:11 UTC): LGTM label has been added.  <details>Git tree hash: 79679fda475d2fe892e7f6fed93e4443a65fcb69</details>

k8s-ci-robot on (2023-01-30 22:16:33 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114843#issuecomment-1409434559"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114843#"" title=""Author self-approved"">kerthcet</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114843#pullrequestreview-1267587163"" title=""LGTM"">pohly</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [pohly]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1520315451,pull_request,closed,,kubeadm: fix the nil pointer dereference in testcase,"`genCSRConfig.kubeadmConfig` is possible to be nil if there any error from the config loading, so access the field should only be done if there is no error in the previous step.

Signed-off-by: Dave Chen <dave.chen@arm.com>


ref: https://github.com/kubernetes/kubernetes/issues/113936

more context:
- a nil `kubeadmapiv1.InitConfiguration` is returned when some error was found, e.g.  client version cannot be parsed correctly.
https://github.com/kubernetes/kubernetes/blob/ca2f095cc7a69b2cb24569cd3e45a33cd37ff1be/cmd/kubeadm/app/util/config/initconfiguration.go#L242-L244

- Debug the testcase show that `config.kubeadmConfig` is nil if `test.expectErr` is true.
```bash
(dlv) p config.kubeadmConfig
*k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm.InitConfiguration nil
```

- The nil pointer dereference error msg should be like this.
https://github.com/kubernetes/kubernetes/issues/113936#issuecomment-1370551435
<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",chendave,2023-01-05 08:30:03+00:00,['neolit123'],2023-01-05 13:32:52+00:00,2023-01-05 13:32:22+00:00,https://github.com/kubernetes/kubernetes/pull/114842,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/cluster-lifecycle', 'Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('area/kubeadm', None), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372113587, 'issue_id': 1520315451, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: fa90a3259352431a56c792e9da12e6c2deca78ed</details>', 'created_at': datetime.datetime(2023, 1, 5, 11, 43, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372113816, 'issue_id': 1520315451, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114842#"" title=""Author self-approved"">chendave</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114842#pullrequestreview-1237254537"" title=""Approved"">neolit123</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[cmd/kubeadm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/OWNERS)~~ [neolit123]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 11, 43, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372155866, 'issue_id': 1520315451, 'author': 'chendave', 'body': '/kind cleanup', 'created_at': datetime.datetime(2023, 1, 5, 12, 29, 29, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 11:43:44 UTC): LGTM label has been added.  <details>Git tree hash: fa90a3259352431a56c792e9da12e6c2deca78ed</details>

k8s-ci-robot on (2023-01-05 11:43:58 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114842#"" title=""Author self-approved"">chendave</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114842#pullrequestreview-1237254537"" title=""Approved"">neolit123</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[cmd/kubeadm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/OWNERS)~~ [neolit123]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

chendave (Issue Creator) on (2023-01-05 12:29:29 UTC): /kind cleanup

"
1520266767,pull_request,closed,,"Revert ""Add link to to file""","This reverts commit 0b9399435c826b00e927454dc97a76c10e25de59.

Signed-off-by: aimuz <mr.imuz@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

/kind documentation

#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #114839

#### Special notes for your reviewer:

https://github.com/kubernetes/kubernetes/pull/113156#issuecomment-1357047936

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",aimuz,2023-01-05 07:54:08+00:00,"['dims', 'gjkim42']",2023-01-05 13:32:12+00:00,2023-01-05 13:32:10+00:00,https://github.com/kubernetes/kubernetes/pull/114840,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('kind/documentation', 'Categorizes issue or PR as related to documentation.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372042163, 'issue_id': 1520266767, 'author': 'aimuz', 'body': '/sig release', 'created_at': datetime.datetime(2023, 1, 5, 10, 31, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372042510, 'issue_id': 1520266767, 'author': 'aimuz', 'body': '/test pull-kubernetes-e2e-kind', 'created_at': datetime.datetime(2023, 1, 5, 10, 32, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372125594, 'issue_id': 1520266767, 'author': 'gjkim42', 'body': '/triage accepted\r\n/sig release\r\n/priority important-soon\r\n/kind bug\r\n/lgtm\r\n\r\nI think we need to revert this as this breaks the symlink. https://github.com/kubernetes/kubernetes/pull/113156#issuecomment-1357047936\r\n/assign @dims', 'created_at': datetime.datetime(2023, 1, 5, 11, 57, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372125681, 'issue_id': 1520266767, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 123a4e7dc79791bc4eecfd445cd9c0a027f844f7</details>', 'created_at': datetime.datetime(2023, 1, 5, 11, 57, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372136245, 'issue_id': 1520266767, 'author': 'dims', 'body': '/approve', 'created_at': datetime.datetime(2023, 1, 5, 12, 8, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372136779, 'issue_id': 1520266767, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114840#"" title=""Author self-approved"">aimuz</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114840#issuecomment-1372136245"" title=""Approved"">dims</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [dims]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 12, 8, 42, tzinfo=datetime.timezone.utc)}]","aimuz (Issue Creator) on (2023-01-05 10:31:39 UTC): /sig release

aimuz (Issue Creator) on (2023-01-05 10:32:02 UTC): /test pull-kubernetes-e2e-kind

gjkim42 (Assginee) on (2023-01-05 11:57:40 UTC): /triage accepted
/sig release
/priority important-soon
/kind bug
/lgtm

I think we need to revert this as this breaks the symlink. https://github.com/kubernetes/kubernetes/pull/113156#issuecomment-1357047936
/assign @dims

k8s-ci-robot on (2023-01-05 11:57:47 UTC): LGTM label has been added.  <details>Git tree hash: 123a4e7dc79791bc4eecfd445cd9c0a027f844f7</details>

dims (Assginee) on (2023-01-05 12:08:10 UTC): /approve

k8s-ci-robot on (2023-01-05 12:08:42 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114840#"" title=""Author self-approved"">aimuz</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114840#issuecomment-1372136245"" title=""Approved"">dims</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [dims]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1520256460,pull_request,closed,,Automated cherry pick of #114602: Removed the reverted changes from Changelogv1.26.md,"Cherry-pick of #114602 on release-1.26.

#114602: Removed the reverted changes from Changelogv1.26.md

For details on the cherry-pick process, see the [cherry-pick requests](https://git.k8s.io/community/contributors/devel/sig-release/cherry-picks.md) page.




#### Does this PR introduce a user-facing change?

```
None
```

",Shubham82,2023-01-05 07:45:42+00:00,"['saschagrunert', 'alculquicondor', 'xmudrii']",2023-01-16 12:42:51+00:00,2023-01-16 12:42:50+00:00,https://github.com/kubernetes/kubernetes/pull/114838,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('area/release-eng', 'Issues or PRs related to the Release Engineering subproject'), ('cherry-pick-approved', 'Indicates a cherry-pick PR into a release branch has been approved by the release branch manager.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1371881300, 'issue_id': 1520256460, 'author': 'k8s-ci-robot', 'body': '@Shubham82: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 5, 7, 45, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371881811, 'issue_id': 1520256460, 'author': 'Shubham82', 'body': '/kind bug\r\n/kind cleanup', 'created_at': datetime.datetime(2023, 1, 5, 7, 46, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371883214, 'issue_id': 1520256460, 'author': 'Shubham82', 'body': '/release-note-none', 'created_at': datetime.datetime(2023, 1, 5, 7, 48, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371887274, 'issue_id': 1520256460, 'author': 'Shubham82', 'body': 'Hi @jeremyrickard @justaugustus\r\nPTAL!', 'created_at': datetime.datetime(2023, 1, 5, 7, 54, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371901838, 'issue_id': 1520256460, 'author': 'Shubham82', 'body': '/ok-to-test', 'created_at': datetime.datetime(2023, 1, 5, 8, 11, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372245523, 'issue_id': 1520256460, 'author': 'alculquicondor', 'body': '/lgtm\r\n/retest', 'created_at': datetime.datetime(2023, 1, 5, 13, 56, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372245651, 'issue_id': 1520256460, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 8c9a48ae10c974d233a265849ed2e1f2c507b3c2</details>', 'created_at': datetime.datetime(2023, 1, 5, 13, 56, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376609748, 'issue_id': 1520256460, 'author': 'Shubham82', 'body': '/assign @saschagrunert', 'created_at': datetime.datetime(2023, 1, 10, 1, 47, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377334472, 'issue_id': 1520256460, 'author': 'alculquicondor', 'body': '/cc kubernetes/release-managers', 'created_at': datetime.datetime(2023, 1, 10, 14, 5, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379689288, 'issue_id': 1520256460, 'author': 'Shubham82', 'body': '/cc @kubernetes/release-managers', 'created_at': datetime.datetime(2023, 1, 12, 1, 21, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1383488534, 'issue_id': 1520256460, 'author': 'Shubham82', 'body': '/cc kubernetes/release-managers\r\n\r\nPTAL!', 'created_at': datetime.datetime(2023, 1, 16, 4, 53, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1383916290, 'issue_id': 1520256460, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114838#"" title=""Author self-approved"">Shubham82</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114838#pullrequestreview-1250016931"" title=""Approved"">xmudrii</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[CHANGELOG/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/CHANGELOG/OWNERS)~~ [xmudrii]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 16, 11, 37, 1, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 07:45:51 UTC): @Shubham82: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

Shubham82 (Issue Creator) on (2023-01-05 07:46:40 UTC): /kind bug
/kind cleanup

Shubham82 (Issue Creator) on (2023-01-05 07:48:54 UTC): /release-note-none

Shubham82 (Issue Creator) on (2023-01-05 07:54:34 UTC): Hi @jeremyrickard @justaugustus
PTAL!

Shubham82 (Issue Creator) on (2023-01-05 08:11:33 UTC): /ok-to-test

alculquicondor (Assginee) on (2023-01-05 13:56:20 UTC): /lgtm
/retest

k8s-ci-robot on (2023-01-05 13:56:28 UTC): LGTM label has been added.  <details>Git tree hash: 8c9a48ae10c974d233a265849ed2e1f2c507b3c2</details>

Shubham82 (Issue Creator) on (2023-01-10 01:47:15 UTC): /assign @saschagrunert

alculquicondor (Assginee) on (2023-01-10 14:05:27 UTC): /cc kubernetes/release-managers

Shubham82 (Issue Creator) on (2023-01-12 01:21:14 UTC): /cc @kubernetes/release-managers

Shubham82 (Issue Creator) on (2023-01-16 04:53:22 UTC): /cc kubernetes/release-managers

PTAL!

k8s-ci-robot on (2023-01-16 11:37:01 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114838#"" title=""Author self-approved"">Shubham82</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114838#pullrequestreview-1250016931"" title=""Approved"">xmudrii</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[CHANGELOG/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/CHANGELOG/OWNERS)~~ [xmudrii]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1520186618,pull_request,closed,,"Revert ""Revert ""bump golang.org/x/oauth2""""","#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

Re-applies https://github.com/kubernetes/kubernetes/pull/114822/, which was reverted in https://github.com/kubernetes/kubernetes/pull/114829.

/hold
Will need https://github.com/kubernetes/publishing-bot/pull/305 for the publishing-bot to be fixed first.

xref https://github.com/kubernetes/kubernetes/issues/113366, https://github.com/kubernetes/publishing-bot/issues/304

```release-note
NONE
```

/cc @dims  @liggitt ",nikhita,2023-01-05 06:48:41+00:00,['dims'],2023-01-12 08:00:10+00:00,2023-01-09 05:10:21+00:00,https://github.com/kubernetes/kubernetes/pull/114837,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('area/kubectl', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/cloudprovider', None), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('needs-rebase', 'Indicates a PR cannot be merged because it has merge conflicts with HEAD.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/instrumentation', 'Categorizes an issue or PR as relevant to SIG Instrumentation.'), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('do-not-merge/hold', 'Indicates that a PR should not merge because someone has issued a /hold command.'), ('area/code-generation', ''), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372128832, 'issue_id': 1520186618, 'author': 'dims', 'body': '/approve\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 5, 12, 1, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372128965, 'issue_id': 1520186618, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: b36a2ebbf1d6ac19dd1cbe59c9e5d740985fb035</details>', 'created_at': datetime.datetime(2023, 1, 5, 12, 1, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372129288, 'issue_id': 1520186618, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114837#issuecomment-1372128832"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114837#"" title=""Author self-approved"">nikhita</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [dims]\n- ~~[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)~~ [dims]\n- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [dims]\n- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [dims]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 12, 1, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372148841, 'issue_id': 1520186618, 'author': 'nikhita', 'body': '/hold cancel', 'created_at': datetime.datetime(2023, 1, 5, 12, 21, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372149864, 'issue_id': 1520186618, 'author': 'nikhita', 'body': '/hold\r\nhttps://github.com/kubernetes/publishing-bot/pull/305#discussion_r1062414743', 'created_at': datetime.datetime(2023, 1, 5, 12, 22, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372191965, 'issue_id': 1520186618, 'author': 'liggitt', 'body': ""/hold\r\n\r\nI'm not sure about the way the publishing bot got fixed. Seems like tidy should work without hijinks or we risk other consumers of the staging repos hitting issues."", 'created_at': datetime.datetime(2023, 1, 5, 13, 5, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374423408, 'issue_id': 1520186618, 'author': 'k8s-ci-robot', 'body': '@nikhita: PR needs rebase.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 7, 9, 18, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375115074, 'issue_id': 1520186618, 'author': 'nikhita', 'body': ""Closing. We'll need to fix https://github.com/kubernetes/kubernetes/issues/113366 to avoid breaking the publishing-bot again."", 'created_at': datetime.datetime(2023, 1, 9, 5, 10, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377889567, 'issue_id': 1520186618, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 25, 41, tzinfo=datetime.timezone.utc)}]","dims (Assginee) on (2023-01-05 12:01:15 UTC): /approve
/lgtm

k8s-ci-robot on (2023-01-05 12:01:23 UTC): LGTM label has been added.  <details>Git tree hash: b36a2ebbf1d6ac19dd1cbe59c9e5d740985fb035</details>

k8s-ci-robot on (2023-01-05 12:01:41 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114837#issuecomment-1372128832"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114837#"" title=""Author self-approved"">nikhita</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [dims]
- ~~[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)~~ [dims]
- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [dims]
- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [dims]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

nikhita (Issue Creator) on (2023-01-05 12:21:35 UTC): /hold cancel

nikhita (Issue Creator) on (2023-01-05 12:22:41 UTC): /hold
https://github.com/kubernetes/publishing-bot/pull/305#discussion_r1062414743

liggitt on (2023-01-05 13:05:53 UTC): /hold

I'm not sure about the way the publishing bot got fixed. Seems like tidy should work without hijinks or we risk other consumers of the staging repos hitting issues.

k8s-ci-robot on (2023-01-07 09:18:50 UTC): @nikhita: PR needs rebase.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

nikhita (Issue Creator) on (2023-01-09 05:10:21 UTC): Closing. We'll need to fix https://github.com/kubernetes/kubernetes/issues/113366 to avoid breaking the publishing-bot again.

cici37 on (2023-01-10 21:25:41 UTC): /triage accepted

"
1520033362,pull_request,closed,,Give TypeConverter to TestFieldManager,"This is mostly because the path, even for built-in, can change from test to test, so it's easier to make the whole thing configurable anyway.

#### What type of PR is this?
/kind cleanup

#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:
Continues to clean-up the fieldmanager package, in preparation for it to move to a place where it can be easily imported.

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",apelisse,2023-01-05 04:17:00+00:00,"['alexzielenski', 'Jefftree', 'kwiesmueller']",2023-01-05 19:08:23+00:00,2023-01-05 19:08:21+00:00,https://github.com/kubernetes/kubernetes/pull/114835,"[('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1371764207, 'issue_id': 1520033362, 'author': 'apelisse', 'body': '/triage accepted\r\n/priority important-soon', 'created_at': datetime.datetime(2023, 1, 5, 4, 17, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371764933, 'issue_id': 1520033362, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114835#"" title=""Author self-approved"">apelisse</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/apiserver/pkg/endpoints/handlers/fieldmanager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/endpoints/handlers/fieldmanager/OWNERS)~~ [apelisse]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 4, 18, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371765324, 'issue_id': 1520033362, 'author': 'apelisse', 'body': ""Pretty simple and mechanical change. We will want to configure the types for testfieldmanagers, let's make it configurable."", 'created_at': datetime.datetime(2023, 1, 5, 4, 19, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371765492, 'issue_id': 1520033362, 'author': 'apelisse', 'body': '/assign @kwiesmueller @alexzielenski', 'created_at': datetime.datetime(2023, 1, 5, 4, 20, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372533042, 'issue_id': 1520033362, 'author': 'Jefftree', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 5, 17, 44, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372533209, 'issue_id': 1520033362, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: e0e74a6787d26edbead3b1269c61e72e57315e41</details>', 'created_at': datetime.datetime(2023, 1, 5, 17, 44, 27, tzinfo=datetime.timezone.utc)}]","apelisse (Issue Creator) on (2023-01-05 04:17:16 UTC): /triage accepted
/priority important-soon

k8s-ci-robot on (2023-01-05 04:18:58 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114835#"" title=""Author self-approved"">apelisse</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/apiserver/pkg/endpoints/handlers/fieldmanager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/endpoints/handlers/fieldmanager/OWNERS)~~ [apelisse]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

apelisse (Issue Creator) on (2023-01-05 04:19:48 UTC): Pretty simple and mechanical change. We will want to configure the types for testfieldmanagers, let's make it configurable.

apelisse (Issue Creator) on (2023-01-05 04:20:07 UTC): /assign @kwiesmueller @alexzielenski

Jefftree (Assginee) on (2023-01-05 17:44:20 UTC): /lgtm

k8s-ci-robot on (2023-01-05 17:44:27 UTC): LGTM label has been added.  <details>Git tree hash: e0e74a6787d26edbead3b1269c61e72e57315e41</details>

"
1519987759,pull_request,closed,,kubeadm: unittest might run as non-root,"/kind bug

```bash
$ id -u
1000


go test k8s.io/kubernetes/cmd/kubeadm/app/cmd/upgrade -test.run TestEnforceRequirements -v
=== RUN   TestEnforceRequirements
=== RUN   TestEnforceRequirements/Fail_pre-flight_check
[upgrade/config] Making sure the configuration is correct:
[preflight] Running pre-flight checks.
=== RUN   TestEnforceRequirements/Bogus_preflight_check_specify_all_with_individual_check
[upgrade/config] Making sure the configuration is correct:
=== RUN   TestEnforceRequirements/Fail_to_create_client
--- PASS: TestEnforceRequirements (0.00s)
    --- PASS: TestEnforceRequirements/Fail_pre-flight_check (0.00s)
    --- PASS: TestEnforceRequirements/Bogus_preflight_check_specify_all_with_individual_check (0.00s)
    --- PASS: TestEnforceRequirements/Fail_to_create_client (0.00s)
PASS
ok      k8s.io/kubernetes/cmd/kubeadm/app/cmd/upgrade   0.031s
```

Signed-off-by: Dave Chen <dave.chen@arm.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes https://github.com/kubernetes/kubernetes/issues/114824

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",chendave,2023-01-05 03:17:53+00:00,['neolit123'],2023-01-05 08:55:41+00:00,2023-01-05 08:51:59+00:00,https://github.com/kubernetes/kubernetes/pull/114834,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/cluster-lifecycle', 'Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('area/kubeadm', None), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1371739152, 'issue_id': 1519987759, 'author': 'k8s-ci-robot', 'body': '@chendave: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 5, 3, 18, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371739398, 'issue_id': 1519987759, 'author': 'chendave', 'body': '/cc @BenTheElder @pacoxu @neolit123', 'created_at': datetime.datetime(2023, 1, 5, 3, 18, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371881547, 'issue_id': 1519987759, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 8228af995187e5219229bc3458fea00e338c6c99</details>', 'created_at': datetime.datetime(2023, 1, 5, 7, 46, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371881807, 'issue_id': 1519987759, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114834#"" title=""Author self-approved"">chendave</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114834#pullrequestreview-1236953699"" title=""Approved"">neolit123</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[cmd/kubeadm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/OWNERS)~~ [neolit123]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 7, 46, 39, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-05 03:18:01 UTC): @chendave: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

chendave (Issue Creator) on (2023-01-05 03:18:32 UTC): /cc @BenTheElder @pacoxu @neolit123

k8s-ci-robot on (2023-01-05 07:46:18 UTC): LGTM label has been added.  <details>Git tree hash: 8228af995187e5219229bc3458fea00e338c6c99</details>

k8s-ci-robot on (2023-01-05 07:46:39 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114834#"" title=""Author self-approved"">chendave</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114834#pullrequestreview-1236953699"" title=""Approved"">neolit123</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[cmd/kubeadm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/OWNERS)~~ [neolit123]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1519726492,pull_request,closed,,egress_selector.go: register konnectivity-client metrics.,"This registers new metrics provided by https://github.com/kubernetes/kubernetes/pull/114789.

#### What type of PR is this?

/kind feature

#### What this PR does / why we need it:

It can be difficult to debug Konnectivity issues inside kube-apiserver, where we have limited metrics (mainly egress_selector.go). Registering these konnectivity-client library instrumented metrics provides richer signal than before.

#### Which issue(s) this PR fixes:

#### Special notes for your reviewer:

This takes a dependency on https://github.com/kubernetes/kubernetes/pull/114646.

#### Does this PR introduce a user-facing change?
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

```docs
```
",jkh52,2023-01-04 23:25:13+00:00,"['logicalhan', 'liggitt']",2023-01-25 23:19:51+00:00,2023-01-06 00:36:03+00:00,https://github.com/kubernetes/kubernetes/pull/114832,"[('area/apiserver', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1371541553, 'issue_id': 1519726492, 'author': 'jkh52', 'body': '/assign @logicalhan \r\n/assign @liggitt \r\n/cc @Jefftree', 'created_at': datetime.datetime(2023, 1, 4, 23, 25, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371581953, 'issue_id': 1519726492, 'author': 'jkh52', 'body': ""Test failure looks like unrelated flake.\r\n\r\n```\r\n{Failed  === RUN   TestRemoveAPIService\r\nI0104 23:50:07.077875   84067 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 凣OC瓴业ǯSfĹǳƘ繙e to ResourceManager\r\nI0104 23:50:07.083876   84067 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 ɰ薗w2;3 to ResourceManager\r\nI0104 23:50:07.086710   84067 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 ȵʭ洒$\\' to ResourceManager\r\nI0104 23:50:07.088521   84067 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 壊3囜n繊ŀ槉@ to ResourceManager\r\nI0104 23:50:07.088649   84067 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º Hľȋ?{ə%ĺ誟ǀ還N儮 to ResourceManager\r\nI0104 23:50:07.088784   84067 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º ǭȐÿ to ResourceManager\r\nI0104 23:50:07.088899   84067 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º 闀8ǿ滃 to ResourceManager\r\nI0104 23:50:07.089024   84067 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º 覒ęȽ鉹鏪_败>ŵx¤蕰 to ResourceManager\r\nI0104 23:50:07.091422   84067 handler_discovery.go:403] Starting ResourceDiscoveryManager\r\nI0104 23:50:07.161418   84067 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 ɰ薗w2;3 to ResourceManager\r\nI0104 23:50:07.163354   84067 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 凣OC瓴业ǯSfĹǳƘ繙e to ResourceManager\r\nI0104 23:50:07.163546   84067 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 凣OC瓴业ǯSfĹǳƘ繙e to ResourceManager\r\n    handler_discovery_test.go:203: expected to find no groups after service deletion (got 1 groups)\r\n--- FAIL: TestRemoveAPIService (0.10s)\r\n}\r\n```\r\n\r\n/retest"", 'created_at': datetime.datetime(2023, 1, 5, 0, 30, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371606378, 'issue_id': 1519726492, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 90e728764e303814f035e04fdda2d4e293b5b407</details>', 'created_at': datetime.datetime(2023, 1, 5, 0, 57, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372896361, 'issue_id': 1519726492, 'author': 'liggitt', 'body': '/approve', 'created_at': datetime.datetime(2023, 1, 5, 22, 56, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372896835, 'issue_id': 1519726492, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114832#"" title=""Author self-approved"">jkh52</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114832#issuecomment-1372896361"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114832#pullrequestreview-1236663215"" title=""Approved"">logicalhan</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 22, 56, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377889939, 'issue_id': 1519726492, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 25, 53, tzinfo=datetime.timezone.utc)}]","jkh52 (Issue Creator) on (2023-01-04 23:25:55 UTC): /assign @logicalhan 
/assign @liggitt 
/cc @Jefftree

jkh52 (Issue Creator) on (2023-01-05 00:30:05 UTC): Test failure looks like unrelated flake.

```
{Failed  === RUN   TestRemoveAPIService
I0104 23:50:07.077875   84067 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 凣OC瓴业ǯSfĹǳƘ繙e to ResourceManager
I0104 23:50:07.083876   84067 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 ɰ薗w2;3 to ResourceManager
I0104 23:50:07.086710   84067 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 ȵʭ洒$\' to ResourceManager
I0104 23:50:07.088521   84067 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 壊3囜n繊ŀ槉@ to ResourceManager
I0104 23:50:07.088649   84067 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º Hľȋ?{ə%ĺ誟ǀ還N儮 to ResourceManager
I0104 23:50:07.088784   84067 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º ǭȐÿ to ResourceManager
I0104 23:50:07.088899   84067 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º 闀8ǿ滃 to ResourceManager
I0104 23:50:07.089024   84067 handler.go:149] Adding GroupVersion z,劚ƒqiM7婼<7圾º 覒ęȽ鉹鏪_败>ŵx¤蕰 to ResourceManager
I0104 23:50:07.091422   84067 handler_discovery.go:403] Starting ResourceDiscoveryManager
I0104 23:50:07.161418   84067 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 ɰ薗w2;3 to ResourceManager
I0104 23:50:07.163354   84067 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 凣OC瓴业ǯSfĹǳƘ繙e to ResourceManager
I0104 23:50:07.163546   84067 handler.go:149] Adding GroupVersion 摾Lʉĥ峡拓 凣OC瓴业ǯSfĹǳƘ繙e to ResourceManager
    handler_discovery_test.go:203: expected to find no groups after service deletion (got 1 groups)
--- FAIL: TestRemoveAPIService (0.10s)
}
```

/retest

k8s-ci-robot on (2023-01-05 00:57:57 UTC): LGTM label has been added.  <details>Git tree hash: 90e728764e303814f035e04fdda2d4e293b5b407</details>

liggitt (Assginee) on (2023-01-05 22:56:09 UTC): /approve

k8s-ci-robot on (2023-01-05 22:56:43 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114832#"" title=""Author self-approved"">jkh52</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114832#issuecomment-1372896361"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114832#pullrequestreview-1236663215"" title=""Approved"">logicalhan</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

cici37 on (2023-01-10 21:25:53 UTC): /triage accepted

"
1519717881,pull_request,closed,,WIP: Codegen: clean up and remove old files,"I noticed a bunch of files that do not get re-generated.  I asked @liggitt @lavalamp and @jpbetz about it and it seems some are old and should be removed.

I decided to try to make this automatic.  Step 1 was to remove everything that appears auto-generated and run each generator to see what comes back.  In doing this I found a few bugs and other less-than-ideal cases.

WIP: This PR is currently just the remove/re-add.  I will automate it, but I want to a) see what barfs in CI and b) solicit feedback on it.  Specifically:

* update-mocks.sh doesn't actually know which files were generated, so it looks at git diff, which misses newly-added files, which then do not get the boilerplate.  I fixed it, kind of, but it's still not pretty.
* update-generated-kubelet-plugin-registration and update-generated-pod-resources both were missing directives to generate properly (including a v1 API !!).  These scripts are far too fragile.
* One example was missing a generate directive

Overall it is (IMO) far too hard to know everything that is auto-generated.  We do not have consistent naming.  Does anyone object if I try to do better here?

/kind bug
/kind cleanup

```release-note
NONE
```

TODO:
* Scripts which grep for ""DO NOT EDIT"" causes verify-boilerplate to flag them (script files) as ""generated"", becuase it greps (indiscriminately) for ""DO NOT EDIT"" itself (and so it matches the ""grep"" command in the scripts).
* The subproject verify scripts need to be touched or dumped
* Maybe dump all the subproject stuff
* The mocks and stable-metrics need to be touched
* All the currently deleted ""deprecated"" trees are suspect.
* Strip out the ""remove all"" and ""regen X"" commits and just leave the meaningful changes
* Use `:(glob)` in git-ls-files for max correct behavior",thockin,2023-01-04 23:16:15+00:00,"['jpbetz', 'lavalamp', 'liggitt']",2024-03-10 01:05:39+00:00,2023-03-13 05:02:24+00:00,https://github.com/kubernetes/kubernetes/pull/114831,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('area/test', None), ('area/kubelet', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('area/kubectl', None), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('needs-rebase', 'Indicates a PR cannot be merged because it has merge conflicts with HEAD.'), ('size/XXL', 'Denotes a PR that changes 1000+ lines, ignoring generated files.'), ('kind/api-change', 'Categorizes issue or PR as related to adding, removing, or otherwise changing an API'), ('area/release-eng', 'Issues or PRs related to the Release Engineering subproject'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/instrumentation', 'Categorizes an issue or PR as relevant to SIG Instrumentation.'), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('do-not-merge/work-in-progress', 'Indicates that a PR should not merge because it is a work in progress.'), ('area/code-generation', ''), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1373185493, 'issue_id': 1519717881, 'author': 'thockin', 'body': 'Just repushed.\r\n\r\nI don\'t think I addressed any of your comments yet, but I merged all 5 ""run protoc"" update/verify into one script and call it from update-codegen now, so muuuuuuch simpler.\r\n\r\nNot done - the subproject verify scripts need to be touched, mocks and stable-metrics need to be touched, and all the currently deleted ""deprecated"" trees are suspect.\r\n\r\nWhen all that is done I can strip out the ""remove all"" and ""regen X"" commits and just leave the meaningful changes.\r\n\r\nHappy to take feedback in the meantime.', 'created_at': datetime.datetime(2023, 1, 6, 6, 8, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377890939, 'issue_id': 1519717881, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 26, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1382891520, 'issue_id': 1519717881, 'author': 'thockin', 'body': 'Once this is all happy I will remove TMP commits and break into a few smaller PRs (not much smaller, sorry)', 'created_at': datetime.datetime(2023, 1, 14, 19, 9, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1383079843, 'issue_id': 1519717881, 'author': 'thockin', 'body': '85% confident this one passes', 'created_at': datetime.datetime(2023, 1, 15, 7, 41, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1383252253, 'issue_id': 1519717881, 'author': 'thockin', 'body': 'Down to a sort-order issue.  95% confidence this time.', 'created_at': datetime.datetime(2023, 1, 15, 21, 3, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1383262549, 'issue_id': 1519717881, 'author': 'thockin', 'body': 'The sort issue is on my end, sigh', 'created_at': datetime.datetime(2023, 1, 15, 21, 54, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1383267933, 'issue_id': 1519717881, 'author': 'thockin', 'body': ""Rebased, cleaned up, sort should be stable now.  Let's see.\r\n\r\n97.5% confident\r\n\r\nAssuming it passes - @liggitt - how many PRs do you want?  I could break this up into as many as 30 PRs or as few as 4 or 5."", 'created_at': datetime.datetime(2023, 1, 15, 22, 18, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1383292670, 'issue_id': 1519717881, 'author': 'thockin', 'body': 'w00t!  All green', 'created_at': datetime.datetime(2023, 1, 16, 0, 5, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387184940, 'issue_id': 1519717881, 'author': 'liggitt', 'body': ""> Assuming it passes - @liggitt - how many PRs do you want? I could break this up into as many as 30 PRs or as few as 4 or 5.\r\n\r\nUmmmm..... fewer PRs with independent commits that are trivially reviewable or non-overlapping seems good, with independent cleanup stuff that doesn't mess with generated files hoisted into prereq PRs?"", 'created_at': datetime.datetime(2023, 1, 18, 14, 43, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387457995, 'issue_id': 1519717881, 'author': 'k8s-triage-robot', 'body': 'This PR [may require API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#what-apis-need-to-be-reviewed).\n\nIf so, when the changes are ready, [complete the pre-review checklist and request an API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#mechanics).\n\nStatus of requested reviews is tracked in the [API Review project](https://github.com/orgs/kubernetes/projects/13).', 'created_at': datetime.datetime(2023, 1, 18, 17, 34, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387484562, 'issue_id': 1519717881, 'author': 'thockin', 'body': ""I'll start breaking it up later today or tomorrow, will ping here.  Meantime, any furhter comments you have on this commits will get folded in."", 'created_at': datetime.datetime(2023, 1, 18, 17, 57, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396835988, 'issue_id': 1519717881, 'author': 'bart0sh', 'body': '/priority important-longterm', 'created_at': datetime.datetime(2023, 1, 19, 11, 34, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399645224, 'issue_id': 1519717881, 'author': 'thockin', 'body': ""Now that most of this has been merged in other PRs, I will revisit the subproject codegen.  It's ugggggggly but it seems to work AS LONG AS you are in a GOPATH.\r\n\r\n\r\nI am thinking:\r\n\r\n1) keep it working (so you can clone kube-aggregator and run a local update-codegen script)\r\n2) convert those verify-codegen scripts to use worktree (so they are trivial and mostly identical)\r\n3) clean up those update-codegen scripts as much as I can"", 'created_at': datetime.datetime(2023, 1, 22, 23, 53, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399657156, 'issue_id': 1519717881, 'author': 'thockin', 'body': ""How committed are we to this pattern where an end-user repo calls k8s.io/code-generator/generate-internal-groups.sh ?  Do we consider that an API we guarantee compat around, or are we willing to change it?\r\n\r\nI ask because it's fairly convoluted and hard to navigate, and I feel like it COULD be simpler, but I don't want to waste (more) time on a dead end.  \r\n\r\nAlso, as part of go workspaces, I think the deepcopy etc tools need to change their CLIs anyway."", 'created_at': datetime.datetime(2023, 1, 23, 0, 30, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1400474316, 'issue_id': 1519717881, 'author': 'liggitt', 'body': '> How committed are we to this pattern where an end-user repo calls k8s.io/code-generator/generate-internal-groups.sh ? Do we consider that an API we guarantee compat around, or are we willing to change it?\r\n\r\nI suspect any usable alternative would be fine, but would defer to @sttts', 'created_at': datetime.datetime(2023, 1, 23, 14, 47, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1455187454, 'issue_id': 1519717881, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114831#"" title=""Author self-approved"">thockin</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [thockin]\n- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [thockin]\n- ~~[staging/publishing/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/publishing/OWNERS)~~ [thockin]\n- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [thockin]\n- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [thockin]\n- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [thockin]\n- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [thockin]\n- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [thockin]\n- ~~[staging/src/k8s.io/noderesourcetopology-api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/noderesourcetopology-api/OWNERS)~~ [thockin]\n- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [thockin]\n- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [thockin]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 3, 5, 19, 54, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1464842627, 'issue_id': 1519717881, 'author': 'k8s-ci-robot', 'body': 'PR needs rebase.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 3, 11, 6, 37, 31, tzinfo=datetime.timezone.utc)}]","thockin (Issue Creator) on (2023-01-06 06:08:43 UTC): Just repushed.

I don't think I addressed any of your comments yet, but I merged all 5 ""run protoc"" update/verify into one script and call it from update-codegen now, so muuuuuuch simpler.

Not done - the subproject verify scripts need to be touched, mocks and stable-metrics need to be touched, and all the currently deleted ""deprecated"" trees are suspect.

When all that is done I can strip out the ""remove all"" and ""regen X"" commits and just leave the meaningful changes.

Happy to take feedback in the meantime.

cici37 on (2023-01-10 21:26:21 UTC): /triage accepted

thockin (Issue Creator) on (2023-01-14 19:09:54 UTC): Once this is all happy I will remove TMP commits and break into a few smaller PRs (not much smaller, sorry)

thockin (Issue Creator) on (2023-01-15 07:41:26 UTC): 85% confident this one passes

thockin (Issue Creator) on (2023-01-15 21:03:25 UTC): Down to a sort-order issue.  95% confidence this time.

thockin (Issue Creator) on (2023-01-15 21:54:35 UTC): The sort issue is on my end, sigh

thockin (Issue Creator) on (2023-01-15 22:18:10 UTC): Rebased, cleaned up, sort should be stable now.  Let's see.

97.5% confident

Assuming it passes - @liggitt - how many PRs do you want?  I could break this up into as many as 30 PRs or as few as 4 or 5.

thockin (Issue Creator) on (2023-01-16 00:05:17 UTC): w00t!  All green

liggitt (Assginee) on (2023-01-18 14:43:03 UTC): Ummmm..... fewer PRs with independent commits that are trivially reviewable or non-overlapping seems good, with independent cleanup stuff that doesn't mess with generated files hoisted into prereq PRs?

k8s-triage-robot on (2023-01-18 17:34:18 UTC): This PR [may require API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#what-apis-need-to-be-reviewed).

If so, when the changes are ready, [complete the pre-review checklist and request an API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#mechanics).

Status of requested reviews is tracked in the [API Review project](https://github.com/orgs/kubernetes/projects/13).

thockin (Issue Creator) on (2023-01-18 17:57:52 UTC): I'll start breaking it up later today or tomorrow, will ping here.  Meantime, any furhter comments you have on this commits will get folded in.

bart0sh on (2023-01-19 11:34:13 UTC): /priority important-longterm

thockin (Issue Creator) on (2023-01-22 23:53:24 UTC): Now that most of this has been merged in other PRs, I will revisit the subproject codegen.  It's ugggggggly but it seems to work AS LONG AS you are in a GOPATH.


I am thinking:

1) keep it working (so you can clone kube-aggregator and run a local update-codegen script)
2) convert those verify-codegen scripts to use worktree (so they are trivial and mostly identical)
3) clean up those update-codegen scripts as much as I can

thockin (Issue Creator) on (2023-01-23 00:30:20 UTC): How committed are we to this pattern where an end-user repo calls k8s.io/code-generator/generate-internal-groups.sh ?  Do we consider that an API we guarantee compat around, or are we willing to change it?

I ask because it's fairly convoluted and hard to navigate, and I feel like it COULD be simpler, but I don't want to waste (more) time on a dead end.  

Also, as part of go workspaces, I think the deepcopy etc tools need to change their CLIs anyway.

liggitt (Assginee) on (2023-01-23 14:47:14 UTC): I suspect any usable alternative would be fine, but would defer to @sttts

k8s-ci-robot on (2023-03-05 19:54:59 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114831#"" title=""Author self-approved"">thockin</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [thockin]
- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [thockin]
- ~~[staging/publishing/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/publishing/OWNERS)~~ [thockin]
- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [thockin]
- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [thockin]
- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [thockin]
- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [thockin]
- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [thockin]
- ~~[staging/src/k8s.io/noderesourcetopology-api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/noderesourcetopology-api/OWNERS)~~ [thockin]
- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [thockin]
- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [thockin]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-ci-robot on (2023-03-11 06:37:31 UTC): PR needs rebase.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1519713619,pull_request,closed,,WIP: cleanup: Removes redundant checks before returns,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

/kind cleanup

#### What this PR does / why we need it:

There are a few redundant checks that are being made in code, making it more verbose and slower than it should.

This removes some of these checks.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes: None.

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",claudiubelu,2023-01-04 23:12:15+00:00,[],2023-01-25 17:53:37+00:00,2023-01-25 17:53:35+00:00,https://github.com/kubernetes/kubernetes/pull/114830,"[('area/test', None), ('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('area/kubelet', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('area/apiserver', None), ('area/kubectl', None), ('area/cloudprovider', None), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('sig/cluster-lifecycle', 'Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.'), ('sig/autoscaling', 'Categorizes an issue or PR as relevant to SIG Autoscaling.'), ('needs-rebase', 'Indicates a PR cannot be merged because it has merge conflicts with HEAD.'), ('size/XXL', 'Denotes a PR that changes 1000+ lines, ignoring generated files.'), ('kind/api-change', 'Categorizes issue or PR as related to adding, removing, or otherwise changing an API'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('area/kubeadm', None), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/instrumentation', 'Categorizes an issue or PR as relevant to SIG Instrumentation.'), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('do-not-merge/work-in-progress', 'Indicates that a PR should not merge because it is a work in progress.'), ('area/code-generation', ''), ('area/ipvs', None), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('area/e2e-test-framework', 'Issues or PRs related to refactoring the kubernetes e2e test framework'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1372283041, 'issue_id': 1519713619, 'author': 'alculquicondor', 'body': 'This will have a better chance of getting reviewed if you do a PR for each SIG', 'created_at': datetime.datetime(2023, 1, 5, 14, 23, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372327508, 'issue_id': 1519713619, 'author': 'claudiubelu', 'body': ""> This will have a better chance of getting reviewed if you do a PR for each SIG\r\n\r\nIndeed, this touched a lot of files, making it hard to review. This is still WIP at the moment, and I'll split this up when it's ready. Currently trying to find other relevant patterns to add. There are many more similar cases in the generated code, but can't do anything for that at the moment."", 'created_at': datetime.datetime(2023, 1, 5, 14, 59, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375530360, 'issue_id': 1519713619, 'author': 'bart0sh', 'body': '/triage accepted\r\n/priority important-longterm', 'created_at': datetime.datetime(2023, 1, 9, 12, 8, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375610764, 'issue_id': 1519713619, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114830#"" title=""Author self-approved"">claudiubelu</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign deads2k, liggitt, mrunalp for approval by writing `/assign @deads2k @liggitt @mrunalp` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[cmd/kube-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-apiserver/OWNERS)**\n- **[cmd/kube-controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-controller-manager/OWNERS)**\n- **[cmd/kube-scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-scheduler/OWNERS)**\n- **[cmd/kubeadm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/OWNERS)**\n- **[cmd/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubelet/OWNERS)**\n- **[pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/OWNERS)**\n- **[pkg/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/api/OWNERS)**\n- **[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)**\n- **[plugin/pkg/admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/plugin/pkg/admission/OWNERS)**\n- **[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)**\n- **[staging/src/k8s.io/apiextensions-apiserver/pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/pkg/apis/OWNERS)**\n- **[staging/src/k8s.io/apimachinery/pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/OWNERS)**\n- **[staging/src/k8s.io/apimachinery/pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/apis/OWNERS)**\n- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**\n- **[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)**\n- **[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)**\n- **[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)**\n- **[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)**\n- **[staging/src/k8s.io/component-base/cli/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/cli/OWNERS)**\n- **[staging/src/k8s.io/component-base/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/metrics/OWNERS)**\n- **[staging/src/k8s.io/cri-api/pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cri-api/pkg/OWNERS)**\n- **[staging/src/k8s.io/csi-translation-lib/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/csi-translation-lib/OWNERS)**\n- **[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)**\n- **[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)**\n- **[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)**\n- **[staging/src/k8s.io/mount-utils/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/mount-utils/OWNERS)**\n- **[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)**\n- **[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)**\n- **[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""deads2k"",""liggitt"",""mrunalp""]} -->', 'created_at': datetime.datetime(2023, 1, 9, 13, 15, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375661387, 'issue_id': 1519713619, 'author': 'k8s-ci-robot', 'body': '@claudiubelu: The following tests **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:\n\nTest name | Commit | Details | Required | Rerun command\n--- | --- | --- | --- | ---\npull-kubernetes-node-e2e-containerd | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-node-e2e-containerd/1612437815260352512/) | true | `/test pull-kubernetes-node-e2e-containerd`\npull-kubernetes-integration | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-integration/1612437808780152832) | true | `/test pull-kubernetes-integration`\npull-kubernetes-conformance-kind-ipv6-parallel | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-conformance-kind-ipv6-parallel/1612437808595603456) | false | `/test pull-kubernetes-conformance-kind-ipv6-parallel`\npull-kubernetes-e2e-kind | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-kind/1612437808843067392) | true | `/test pull-kubernetes-e2e-kind`\npull-kubernetes-conformance-kind-ga-only-parallel | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-conformance-kind-ga-only-parallel/1612437808998256640) | true | `/test pull-kubernetes-conformance-kind-ga-only-parallel`\npull-kubernetes-e2e-ubuntu-gce-network-policies | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-ubuntu-gce-network-policies/1612437813591019520) | false | `/test pull-kubernetes-e2e-ubuntu-gce-network-policies`\npull-kubernetes-e2e-capz-azure-file-vmss | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-capz-azure-file-vmss/1612437811078631424) | false | `/test pull-kubernetes-e2e-capz-azure-file-vmss`\npull-kubernetes-e2e-kind-ipv6 | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-kind-ipv6/1612437808931147776) | true | `/test pull-kubernetes-e2e-kind-ipv6`\npull-kubernetes-verify-govet-levee | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-verify-govet-levee/1612437820301905920) | true | `/test pull-kubernetes-verify-govet-levee`\npull-kubernetes-typecheck | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-typecheck/1612437819458850816) | true | `/test pull-kubernetes-typecheck`\npull-kubernetes-e2e-gce | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-gce/1612437808725626880/) | true | `/test pull-kubernetes-e2e-gce`\npull-kubernetes-e2e-gce-100-performance | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-gce-100-performance/1612437816120184832) | true | `/test pull-kubernetes-e2e-gce-100-performance`\npull-kubernetes-e2e-capz-conformance | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-capz-conformance/1612437811925880832) | false | `/test pull-kubernetes-e2e-capz-conformance`\npull-kubernetes-e2e-gce-csi-serial | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-gce-csi-serial/1612437818611601408/) | false | `/test pull-kubernetes-e2e-gce-csi-serial`\npull-kubernetes-e2e-capz-azure-file | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-capz-azure-file/1612437810239770624) | false | `/test pull-kubernetes-e2e-capz-azure-file`\npull-kubernetes-e2e-gci-gce-ipvs | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-gci-gce-ipvs/1612437814434074624) | false | `/test pull-kubernetes-e2e-gci-gce-ipvs`\npull-kubernetes-e2e-capz-windows-containerd | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-capz-windows-containerd/1612437809136668672) | false | `/test pull-kubernetes-e2e-capz-windows-containerd`\npull-kubernetes-e2e-gci-gce-ingress | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-gci-gce-ingress/1612437812752158720) | false | `/test pull-kubernetes-e2e-gci-gce-ingress`\npull-kubernetes-e2e-capz-azure-disk | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-capz-azure-disk/1612437809216360448) | false | `/test pull-kubernetes-e2e-capz-azure-disk`\npull-kubernetes-e2e-capz-azure-disk-vmss | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-capz-azure-disk-vmss/1612437809400909824) | false | `/test pull-kubernetes-e2e-capz-azure-disk-vmss`\npull-kubernetes-e2e-gce-storage-snapshot | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-gce-storage-snapshot/1612437817772740608/) | false | `/test pull-kubernetes-e2e-gce-storage-snapshot`\npull-kubernetes-e2e-gce-storage-slow | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-gce-storage-slow/1612437816938074112/) | false | `/test pull-kubernetes-e2e-gce-storage-slow`\npull-kubernetes-unit | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-unit/1612437809069559808) | true | `/test pull-kubernetes-unit`\npull-kubernetes-verify | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-verify/1612437821358870528) | true | `/test pull-kubernetes-verify`\n\n[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114830). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3Aclaudiubelu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).\n</details>\n<!-- test report -->', 'created_at': datetime.datetime(2023, 1, 9, 13, 57, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379848111, 'issue_id': 1519713619, 'author': 'k8s-ci-robot', 'body': '@claudiubelu: PR needs rebase.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 12, 5, 51, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1404009289, 'issue_id': 1519713619, 'author': 'SergeyKanzhelev', 'body': '/close\r\n\r\nplease re-open if still needed and ideally do it package by package', 'created_at': datetime.datetime(2023, 1, 25, 17, 53, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1404009371, 'issue_id': 1519713619, 'author': 'k8s-ci-robot', 'body': '@SergeyKanzhelev: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114830#issuecomment-1404009289):\n\n>/close\r\n>\r\n>please re-open if still needed and ideally do it package by package\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 25, 17, 53, 36, tzinfo=datetime.timezone.utc)}]","alculquicondor on (2023-01-05 14:23:36 UTC): This will have a better chance of getting reviewed if you do a PR for each SIG

claudiubelu (Issue Creator) on (2023-01-05 14:59:42 UTC): Indeed, this touched a lot of files, making it hard to review. This is still WIP at the moment, and I'll split this up when it's ready. Currently trying to find other relevant patterns to add. There are many more similar cases in the generated code, but can't do anything for that at the moment.

bart0sh on (2023-01-09 12:08:02 UTC): /triage accepted
/priority important-longterm

k8s-ci-robot on (2023-01-09 13:15:25 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114830#"" title=""Author self-approved"">claudiubelu</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign deads2k, liggitt, mrunalp for approval by writing `/assign @deads2k @liggitt @mrunalp` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[cmd/kube-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-apiserver/OWNERS)**
- **[cmd/kube-controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-controller-manager/OWNERS)**
- **[cmd/kube-scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-scheduler/OWNERS)**
- **[cmd/kubeadm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/OWNERS)**
- **[cmd/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubelet/OWNERS)**
- **[pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/OWNERS)**
- **[pkg/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/api/OWNERS)**
- **[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)**
- **[plugin/pkg/admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/plugin/pkg/admission/OWNERS)**
- **[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)**
- **[staging/src/k8s.io/apiextensions-apiserver/pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/pkg/apis/OWNERS)**
- **[staging/src/k8s.io/apimachinery/pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/OWNERS)**
- **[staging/src/k8s.io/apimachinery/pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/apis/OWNERS)**
- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**
- **[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)**
- **[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)**
- **[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)**
- **[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)**
- **[staging/src/k8s.io/component-base/cli/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/cli/OWNERS)**
- **[staging/src/k8s.io/component-base/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/metrics/OWNERS)**
- **[staging/src/k8s.io/cri-api/pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cri-api/pkg/OWNERS)**
- **[staging/src/k8s.io/csi-translation-lib/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/csi-translation-lib/OWNERS)**
- **[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)**
- **[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)**
- **[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)**
- **[staging/src/k8s.io/mount-utils/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/mount-utils/OWNERS)**
- **[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)**
- **[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)**
- **[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""deads2k"",""liggitt"",""mrunalp""]} -->

k8s-ci-robot on (2023-01-09 13:57:38 UTC): @claudiubelu: The following tests **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:

Test name | Commit | Details | Required | Rerun command
--- | --- | --- | --- | ---
pull-kubernetes-node-e2e-containerd | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-node-e2e-containerd/1612437815260352512/) | true | `/test pull-kubernetes-node-e2e-containerd`
pull-kubernetes-integration | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-integration/1612437808780152832) | true | `/test pull-kubernetes-integration`
pull-kubernetes-conformance-kind-ipv6-parallel | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-conformance-kind-ipv6-parallel/1612437808595603456) | false | `/test pull-kubernetes-conformance-kind-ipv6-parallel`
pull-kubernetes-e2e-kind | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-kind/1612437808843067392) | true | `/test pull-kubernetes-e2e-kind`
pull-kubernetes-conformance-kind-ga-only-parallel | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-conformance-kind-ga-only-parallel/1612437808998256640) | true | `/test pull-kubernetes-conformance-kind-ga-only-parallel`
pull-kubernetes-e2e-ubuntu-gce-network-policies | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-ubuntu-gce-network-policies/1612437813591019520) | false | `/test pull-kubernetes-e2e-ubuntu-gce-network-policies`
pull-kubernetes-e2e-capz-azure-file-vmss | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-capz-azure-file-vmss/1612437811078631424) | false | `/test pull-kubernetes-e2e-capz-azure-file-vmss`
pull-kubernetes-e2e-kind-ipv6 | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-kind-ipv6/1612437808931147776) | true | `/test pull-kubernetes-e2e-kind-ipv6`
pull-kubernetes-verify-govet-levee | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-verify-govet-levee/1612437820301905920) | true | `/test pull-kubernetes-verify-govet-levee`
pull-kubernetes-typecheck | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-typecheck/1612437819458850816) | true | `/test pull-kubernetes-typecheck`
pull-kubernetes-e2e-gce | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-gce/1612437808725626880/) | true | `/test pull-kubernetes-e2e-gce`
pull-kubernetes-e2e-gce-100-performance | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-gce-100-performance/1612437816120184832) | true | `/test pull-kubernetes-e2e-gce-100-performance`
pull-kubernetes-e2e-capz-conformance | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-capz-conformance/1612437811925880832) | false | `/test pull-kubernetes-e2e-capz-conformance`
pull-kubernetes-e2e-gce-csi-serial | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-gce-csi-serial/1612437818611601408/) | false | `/test pull-kubernetes-e2e-gce-csi-serial`
pull-kubernetes-e2e-capz-azure-file | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-capz-azure-file/1612437810239770624) | false | `/test pull-kubernetes-e2e-capz-azure-file`
pull-kubernetes-e2e-gci-gce-ipvs | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-gci-gce-ipvs/1612437814434074624) | false | `/test pull-kubernetes-e2e-gci-gce-ipvs`
pull-kubernetes-e2e-capz-windows-containerd | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-capz-windows-containerd/1612437809136668672) | false | `/test pull-kubernetes-e2e-capz-windows-containerd`
pull-kubernetes-e2e-gci-gce-ingress | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-gci-gce-ingress/1612437812752158720) | false | `/test pull-kubernetes-e2e-gci-gce-ingress`
pull-kubernetes-e2e-capz-azure-disk | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-capz-azure-disk/1612437809216360448) | false | `/test pull-kubernetes-e2e-capz-azure-disk`
pull-kubernetes-e2e-capz-azure-disk-vmss | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-capz-azure-disk-vmss/1612437809400909824) | false | `/test pull-kubernetes-e2e-capz-azure-disk-vmss`
pull-kubernetes-e2e-gce-storage-snapshot | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-gce-storage-snapshot/1612437817772740608/) | false | `/test pull-kubernetes-e2e-gce-storage-snapshot`
pull-kubernetes-e2e-gce-storage-slow | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-e2e-gce-storage-slow/1612437816938074112/) | false | `/test pull-kubernetes-e2e-gce-storage-slow`
pull-kubernetes-unit | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-unit/1612437809069559808) | true | `/test pull-kubernetes-unit`
pull-kubernetes-verify | 5aa6209df839ac58e1b157cca1a7259eb637605b | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114830/pull-kubernetes-verify/1612437821358870528) | true | `/test pull-kubernetes-verify`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114830). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3Aclaudiubelu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->

k8s-ci-robot on (2023-01-12 05:51:17 UTC): @claudiubelu: PR needs rebase.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

SergeyKanzhelev on (2023-01-25 17:53:31 UTC): /close

please re-open if still needed and ideally do it package by package

k8s-ci-robot on (2023-01-25 17:53:36 UTC): @SergeyKanzhelev: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114830#issuecomment-1404009289):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1519700058,pull_request,closed,,"Revert ""bump golang.org/x/oauth2""","This reverts commit fc9a140badf29382c1396b7de4813849d6f3e3c9.

the bump broke `go mod download` used by the publishing bot:
https://github.com/kubernetes/kubernetes/issues/56876#issuecomment-1371476877:

```
go: downloading cloud.google.com/go/compute/metadata v0.2.0
    	k8s.io/kube-aggregator/pkg/cmd/server imports
    		k8s.io/apiserver/pkg/server/options imports
    		k8s.io/apiserver/pkg/storage/storagebackend/factory imports
    		go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc tested by
    		go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc.test imports
    		google.golang.org/grpc/interop imports
    		golang.org/x/oauth2/google imports
    		cloud.google.com/go/compute/metadata: ambiguous import: found package cloud.google.com/go/compute/metadata in multiple modules:
    		cloud.google.com/go v0.97.0 (/go-workspace/pkg/mod/cloud.google.com/go@v0.97.0/compute/metadata)
    		cloud.google.com/go/compute/metadata v0.2.0 (/go-workspace/pkg/mod/cloud.google.com/go/compute/metadata@v0.2.0)
```

```release-note
NONE
```

/cc @dims",liggitt,2023-01-04 22:59:13+00:00,['dims'],2023-05-09 18:26:34+00:00,2023-01-05 02:49:59+00:00,https://github.com/kubernetes/kubernetes/pull/114829,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('area/apiserver', None), ('area/kubectl', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/cloudprovider', None), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/instrumentation', 'Categorizes an issue or PR as relevant to SIG Instrumentation.'), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('area/code-generation', ''), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1371546193, 'issue_id': 1519700058, 'author': 'liggitt', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 4, 23, 34, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371573474, 'issue_id': 1519700058, 'author': 'dims', 'body': '/approve\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 5, 0, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371573554, 'issue_id': 1519700058, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: edf08525693f5a54ac6ba3579e49a7503c10d5b3</details>', 'created_at': datetime.datetime(2023, 1, 5, 0, 19, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371573775, 'issue_id': 1519700058, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114829#issuecomment-1371573474"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114829#"" title=""Author self-approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [dims,liggitt]\n- ~~[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [dims,liggitt]\n- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [dims,liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 0, 19, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371633309, 'issue_id': 1519700058, 'author': 'liggitt', 'body': '/kind bug', 'created_at': datetime.datetime(2023, 1, 5, 1, 32, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377891194, 'issue_id': 1519700058, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 26, 31, tzinfo=datetime.timezone.utc)}]","liggitt (Issue Creator) on (2023-01-04 23:34:19 UTC): /retest

dims (Assginee) on (2023-01-05 00:19:00 UTC): /approve
/lgtm

k8s-ci-robot on (2023-01-05 00:19:07 UTC): LGTM label has been added.  <details>Git tree hash: edf08525693f5a54ac6ba3579e49a7503c10d5b3</details>

k8s-ci-robot on (2023-01-05 00:19:24 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114829#issuecomment-1371573474"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114829#"" title=""Author self-approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [dims,liggitt]
- ~~[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [dims,liggitt]
- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [dims,liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

liggitt (Issue Creator) on (2023-01-05 01:32:50 UTC): /kind bug

cici37 on (2023-01-10 21:26:31 UTC): /triage accepted

"
1519609741,pull_request,open,,WIP - Add resourceVersion precondition to GC controller deletions,"#### What type of PR is this?

/kind bug

#### What this PR does / why we need it:

Adds a resourceVersion precondition to GC deletion so that we only delete the exact version of objects whose ownerReferences we inspected.

#### Which issue(s) this PR fixes:

Fixes https://github.com/kubernetes/kubernetes/issues/114603

#### Special notes for your reviewer:

/hold for tests of precondition functionality

This also introduces the possibility of rapid updates of unrelated fields in an object pre-empting deletion by the GC controller possibly perpetually. I think this is worth it to be sure we're deleting the exact owner references we inspected, but it is a risk.

#### Does this PR introduce a user-facing change?
```release-note
The garbage collection controller no longer races with changes to ownerReferences when deleting orphaned objects.
```

/assign @deads2k ",liggitt,2023-01-04 21:38:17+00:00,['deads2k'],2025-02-07 22:29:07+00:00,,https://github.com/kubernetes/kubernetes/pull/114828,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('do-not-merge/work-in-progress', 'Indicates that a PR should not merge because it is a work in progress.'), ('do-not-merge/hold', 'Indicates that a PR should not merge because someone has issued a /hold command.'), ('lifecycle/rotten', 'Denotes an issue or PR that has aged beyond stale and will be auto-closed.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1371458816, 'issue_id': 1519609741, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114828#"" title=""Author self-approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/controller/garbagecollector/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/garbagecollector/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 21, 39, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377891602, 'issue_id': 1519609741, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 26, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1476445615, 'issue_id': 1519609741, 'author': 'sftim', 'body': 'Changelog suggestion\r\n```diff\r\n-The garbage collection controller no longer races with changes to ownerReferences when deleting orphaned objects.\r\n+The garbage collection controller no longer races with changes to `ownerReferences` when deleting orphaned objects.\r\n```', 'created_at': datetime.datetime(2023, 3, 20, 15, 29, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1592628579, 'issue_id': 1519609741, 'author': 'furkatgofurov7', 'body': '@liggitt hi 👋🏼, v1.28 Bug Triage Lead here.\r\n\r\nJust checking-in on this PR and pinging if this is still on track for the 1.28 release?', 'created_at': datetime.datetime(2023, 6, 15, 8, 46, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1614236304, 'issue_id': 1519609741, 'author': 'furkatgofurov7', 'body': ""@liggitt hi!\r\n\r\nThis PR has not been updated for a long time, so I'd like to check what's the status once again!\r\nJust a reminder that the code freeze is starting [01:00 UTC Wednesday 19th July 2023 / 18:00 PDT Tuesday 18th July 2023](https://everytimezone.com/s/72ee8496) (about 3 weeks from now) and while there is still plenty of time, we want to ensure that each PR has a chance to be merged on time.\r\n\r\nAs the PR is tagged for 1.28, is it still planned for this release?"", 'created_at': datetime.datetime(2023, 6, 30, 7, 18, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1632050343, 'issue_id': 1519609741, 'author': 'furkatgofurov7', 'body': ""@liggitt hi!\r\n\r\nThis PR has not been updated for a long time now and I'd like to check what's the status with you once again. \r\nFYI, as I informed about it already 2 weeks ago, we are in week 9 currently and the code freeze is starting next week (week 10) at [01:00 UTC Wednesday 19th July 2023 / 18:00 PDT Tuesday 18th July 2023](https://everytimezone.com/s/72ee8496).\r\n\r\nPlease remove the milestone if this not currently tracked for v1.28 release or if it is still, please make sure that it is in before the code freeze date above, thanks!"", 'created_at': datetime.datetime(2023, 7, 12, 8, 12, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1633221659, 'issue_id': 1519609741, 'author': 'liggitt', 'body': ""updated with a sketch of what @deads2k and I discussed, where the resourceVersion precondition is used until a conflict occurs in which the update did not change ownerReferences. This is so rapid updates will not starve out GC. If this approach looks reasonable, I'll add unit tests"", 'created_at': datetime.datetime(2023, 7, 12, 21, 13, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1666033567, 'issue_id': 1519609741, 'author': 'deads2k', 'body': 'looks good.', 'created_at': datetime.datetime(2023, 8, 4, 18, 42, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1902265766, 'issue_id': 1519609741, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 1, 20, 21, 9, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1953173656, 'issue_id': 1519609741, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle rotten\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 2, 19, 21, 23, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 2010729893, 'issue_id': 1519609741, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 3, 20, 22, 8, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2010729991, 'issue_id': 1519609741, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114828#issuecomment-2010729893):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 3, 20, 22, 8, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2294258089, 'issue_id': 1519609741, 'author': 'liggitt', 'body': '/reopen', 'created_at': datetime.datetime(2024, 8, 16, 21, 0, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 2294258590, 'issue_id': 1519609741, 'author': 'k8s-ci-robot', 'body': '@liggitt: Reopened this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114828#issuecomment-2294258089):\n\n>/reopen\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 8, 16, 21, 1, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 2351807995, 'issue_id': 1519609741, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 9, 15, 22, 7, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2351808026, 'issue_id': 1519609741, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114828#issuecomment-2351807995):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 9, 15, 22, 7, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 2406058577, 'issue_id': 1519609741, 'author': 'liggitt', 'body': '/remove-lifecycle rotten', 'created_at': datetime.datetime(2024, 10, 10, 21, 20, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 2578738288, 'issue_id': 1519609741, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2025, 1, 8, 21, 53, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 2644245006, 'issue_id': 1519609741, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle rotten\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2025, 2, 7, 22, 29, 4, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 21:39:14 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114828#"" title=""Author self-approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/controller/garbagecollector/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/garbagecollector/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

cici37 on (2023-01-10 21:26:46 UTC): /triage accepted

sftim on (2023-03-20 15:29:01 UTC): Changelog suggestion
```diff
-The garbage collection controller no longer races with changes to ownerReferences when deleting orphaned objects.
+The garbage collection controller no longer races with changes to `ownerReferences` when deleting orphaned objects.
```

furkatgofurov7 on (2023-06-15 08:46:51 UTC): @liggitt hi 👋🏼, v1.28 Bug Triage Lead here.

Just checking-in on this PR and pinging if this is still on track for the 1.28 release?

furkatgofurov7 on (2023-06-30 07:18:33 UTC): @liggitt hi!

This PR has not been updated for a long time, so I'd like to check what's the status once again!
Just a reminder that the code freeze is starting [01:00 UTC Wednesday 19th July 2023 / 18:00 PDT Tuesday 18th July 2023](https://everytimezone.com/s/72ee8496) (about 3 weeks from now) and while there is still plenty of time, we want to ensure that each PR has a chance to be merged on time.

As the PR is tagged for 1.28, is it still planned for this release?

furkatgofurov7 on (2023-07-12 08:12:44 UTC): @liggitt hi!

This PR has not been updated for a long time now and I'd like to check what's the status with you once again. 
FYI, as I informed about it already 2 weeks ago, we are in week 9 currently and the code freeze is starting next week (week 10) at [01:00 UTC Wednesday 19th July 2023 / 18:00 PDT Tuesday 18th July 2023](https://everytimezone.com/s/72ee8496).

Please remove the milestone if this not currently tracked for v1.28 release or if it is still, please make sure that it is in before the code freeze date above, thanks!

liggitt (Issue Creator) on (2023-07-12 21:13:16 UTC): updated with a sketch of what @deads2k and I discussed, where the resourceVersion precondition is used until a conflict occurs in which the update did not change ownerReferences. This is so rapid updates will not starve out GC. If this approach looks reasonable, I'll add unit tests

deads2k (Assginee) on (2023-08-04 18:42:16 UTC): looks good.

k8s-triage-robot on (2024-01-20 21:09:55 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2024-02-19 21:23:12 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle rotten

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2024-03-20 22:08:01 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2024-03-20 22:08:06 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114828#issuecomment-2010729893):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

liggitt (Issue Creator) on (2024-08-16 21:00:56 UTC): /reopen

k8s-ci-robot on (2024-08-16 21:01:02 UTC): @liggitt: Reopened this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114828#issuecomment-2294258089):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.
</details>

k8s-triage-robot on (2024-09-15 22:07:34 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2024-09-15 22:07:40 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114828#issuecomment-2351807995):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.
</details>

liggitt (Issue Creator) on (2024-10-10 21:20:41 UTC): /remove-lifecycle rotten

k8s-triage-robot on (2025-01-08 21:53:04 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2025-02-07 22:29:04 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle rotten

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

"
1519551001,pull_request,closed,,Fix verify-licenses script,"fixes https://prow.k8s.io/?job=kubernetes-verify-go-licenses-periodical

The invocation was not correct at all, the job was failing with `> F0104 15:15:26.116891    1918 main.go:77] unknown flag: --git_remote`

cc @maxsmythe ",liggitt,2023-01-04 20:46:35+00:00,['dims'],2023-05-09 18:26:30+00:00,2023-01-05 07:03:59+00:00,https://github.com/kubernetes/kubernetes/pull/114826,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1371400991, 'issue_id': 1519551001, 'author': 'k8s-ci-robot', 'body': '@liggitt: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 20, 46, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371413029, 'issue_id': 1519551001, 'author': 'liggitt', 'body': '/assign @dims\r\n/cc @Priyankasaggu11929', 'created_at': datetime.datetime(2023, 1, 4, 21, 0, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371421819, 'issue_id': 1519551001, 'author': 'dims', 'body': '/kind bug\r\n/sig testing\r\n/release-note-none\r\n/approve\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 4, 21, 9, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371421897, 'issue_id': 1519551001, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 45ef4569b7717c449e35cdc4ab6877360c18527b</details>', 'created_at': datetime.datetime(2023, 1, 4, 21, 9, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371422146, 'issue_id': 1519551001, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114826#issuecomment-1371421819"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114826#"" title=""Author self-approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [dims,liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 21, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371668123, 'issue_id': 1519551001, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114826) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 5, 2, 12, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371817954, 'issue_id': 1519551001, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114826) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 5, 6, 3, 22, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 20:46:44 UTC): @liggitt: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

liggitt (Issue Creator) on (2023-01-04 21:00:55 UTC): /assign @dims
/cc @Priyankasaggu11929

dims (Assginee) on (2023-01-04 21:09:39 UTC): /kind bug
/sig testing
/release-note-none
/approve
/lgtm

k8s-ci-robot on (2023-01-04 21:09:45 UTC): LGTM label has been added.  <details>Git tree hash: 45ef4569b7717c449e35cdc4ab6877360c18527b</details>

k8s-ci-robot on (2023-01-04 21:10:00 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114826#issuecomment-1371421819"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114826#"" title=""Author self-approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [dims,liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-triage-robot on (2023-01-05 02:12:23 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114826) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-05 06:03:22 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114826) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

"
1519546514,pull_request,closed,,"e2: fix check of ""pod is consistently pending""","#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

The E2E framework had no good support for checking that something remains in a certain state consistently. Several tests (ab)used ""wait for pod running"" with the expectation that it only fails because of a timeout. That's not a correct assumption and thus could have led to false negatives (test passes when some other error occurred that should have been treated as a test failure).

It also obscures the intent of the test.

A better way to test for ""remains pending"" is with gomega.Consistently and new infrastructure in the E2E framework that gets introduced in this PR.

#### Special notes for your reviewer:

This is a subset of a larger effort to revamp polling, see https://github.com/kubernetes/kubernetes/pull/113298. This PR can and should be merged first, regardless whether that other PR follows, because the changes make sense by themselves.

#### Does this PR introduce a user-facing change?
```release-note
NONE
```
",pohly,2023-01-04 20:41:51+00:00,"['dims', 'aojea', 'haircommander', 'sunnylovestiramisu']",2023-01-22 20:56:05+00:00,2023-01-22 20:56:03+00:00,https://github.com/kubernetes/kubernetes/pull/114825,"[('area/test', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('area/e2e-test-framework', 'Issues or PRs related to refactoring the kubernetes e2e test framework'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1371472777, 'issue_id': 1519546514, 'author': 'pohly', 'body': 'This is not a complete fix. Other tests that use this pattern:\r\n- PersistentVolumes-local Local volume that cannot be mounted [Slow] should fail due to non-existent path \r\n- PersistentVolumes-local Local volume that cannot be mounted [Slow] should fail due to wrong node\r\n\r\nHowever, those use lots of additional helpers that all would need to be modified to separate ""create pod"" from ""wait for it to be running"". Let\'s address the current set of tests first, then deal with the rest in a separate PR.', 'created_at': datetime.datetime(2023, 1, 4, 21, 52, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372631778, 'issue_id': 1519546514, 'author': 'pohly', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 5, 19, 20, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372635607, 'issue_id': 1519546514, 'author': 'sunnylovestiramisu', 'body': '> This is not a complete fix. Other tests that use this pattern:\r\n> \r\n> * PersistentVolumes-local Local volume that cannot be mounted [Slow] should fail due to non-existent path\r\n> * PersistentVolumes-local Local volume that cannot be mounted [Slow] should fail due to wrong node\r\n> \r\n> However, those use lots of additional helpers that all would need to be modified to separate ""create pod"" from ""wait for it to be running"". Let\'s address the current set of tests first, then deal with the rest in a separate PR.\r\n\r\nShould we create an issue to track this?', 'created_at': datetime.datetime(2023, 1, 5, 19, 23, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372713066, 'issue_id': 1519546514, 'author': 'sunnylovestiramisu', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 5, 20, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372713192, 'issue_id': 1519546514, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: b3c83414cd6b273e4299c36ecc0756529134e59d</details>', 'created_at': datetime.datetime(2023, 1, 5, 20, 34, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372810508, 'issue_id': 1519546514, 'author': 'pohly', 'body': '> Should we create an issue to track this?\r\n\r\nNot necessary, those tests fail in https://github.com/kubernetes/kubernetes/pull/113298 when always returning a nil error, so I have a reminder to fix them.', 'created_at': datetime.datetime(2023, 1, 5, 21, 39, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374083691, 'issue_id': 1519546514, 'author': 'pohly', 'body': 'I pushed a [slight update](https://github.com/kubernetes/kubernetes/compare/42463c739586d6bc5296c42c4d6b85262bf5c099..eb8ccf648217dfab854a0743793c7c0e2d6820d3): `framework.ShouldRetry` came from `e2e/framework/pod` and now gets removed there in the commit that moves the code into the framework.', 'created_at': datetime.datetime(2023, 1, 6, 20, 17, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375495869, 'issue_id': 1519546514, 'author': 'pohly', 'body': 'https://storage.googleapis.com/k8s-triage/index.html?pr=1&text=pod%20pod-test%20found%20in%20namespace&test=Pods%20should%20run%20through%20the%20lifecycle%20of%20Pods%20and%20PodStatus is an unrelated flake.\r\n\r\n/retest', 'created_at': datetime.datetime(2023, 1, 9, 11, 35, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375958746, 'issue_id': 1519546514, 'author': 'sunnylovestiramisu', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 9, 17, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375958938, 'issue_id': 1519546514, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 578712331ec05b5df1edfb9006ce380bf4cb82f9</details>', 'created_at': datetime.datetime(2023, 1, 9, 17, 5, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378326456, 'issue_id': 1519546514, 'author': 'bart0sh', 'body': '/triage accepted\r\n/priority important-longterm', 'created_at': datetime.datetime(2023, 1, 11, 7, 14, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379307034, 'issue_id': 1519546514, 'author': 'SergeyKanzhelev', 'body': '/assign @haircommander\r\n\r\nfor node', 'created_at': datetime.datetime(2023, 1, 11, 18, 23, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379414603, 'issue_id': 1519546514, 'author': 'haircommander', 'body': 'couple of nits, none blocking, otherwise LGTM', 'created_at': datetime.datetime(2023, 1, 11, 20, 2, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1383641606, 'issue_id': 1519546514, 'author': 'pohly', 'body': ""I updated this PR:\r\n- addressed @haircommander's nits in https://github.com/kubernetes/kubernetes/compare/eb8ccf648217dfab854a0743793c7c0e2d6820d3..84d6d2c34145b771d6a4b0a39a39cd7e29bb3a60\r\n- rebased onto latest master to get access to revised timeout support\r\n- replaced `framework.NewTimeoutContextWithDefaults()` with `f.Timeouts`\r\n\r\n@haircommander, @aojea: okay to merge?"", 'created_at': datetime.datetime(2023, 1, 16, 8, 14, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1384134810, 'issue_id': 1519546514, 'author': 'haircommander', 'body': '/lgtm\r\n\r\nnice cleanup here @pohly', 'created_at': datetime.datetime(2023, 1, 16, 14, 18, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1384134976, 'issue_id': 1519546514, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: bc4cca1e746b83a2adf2b84d9985f124500cc21d</details>', 'created_at': datetime.datetime(2023, 1, 16, 14, 18, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1384174074, 'issue_id': 1519546514, 'author': 'pohly', 'body': '/assign @aojea \r\n\r\nFor approval.', 'created_at': datetime.datetime(2023, 1, 16, 14, 51, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396511050, 'issue_id': 1519546514, 'author': 'pohly', 'body': ""/hold\r\n\r\nTo give @aojea time for another look (not required), I'll lift the hold next week.\r\n\r\n/assign @kubernetes/dep-approvers \r\n\r\nFor approval of some new code being pulled from gomega. No version changes."", 'created_at': datetime.datetime(2023, 1, 19, 6, 48, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1397144134, 'issue_id': 1519546514, 'author': 'dims', 'body': '/approve\r\n/lgtm\r\n\r\n(changes in /vendor looks good to me)', 'created_at': datetime.datetime(2023, 1, 19, 15, 22, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1397145064, 'issue_id': 1519546514, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114825#issuecomment-1397144134"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114825#"" title=""Author self-approved"">pohly</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[test/e2e/common/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/common/OWNERS)~~ [dims,pohly]\n- ~~[test/e2e/framework/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/framework/OWNERS)~~ [dims,pohly]\n- ~~[test/e2e/storage/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/OWNERS)~~ [dims,pohly]\n- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [dims]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 19, 15, 22, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399578224, 'issue_id': 1519546514, 'author': 'aojea', 'body': ""/hold cancel\r\n\r\nI'm not able to review the gomega matchers since I don't have experience with that library, but I see other reviewers lgtm\r\n\r\nRegarding gomega matches,  I personally don't think I'll be using them for the sig-network tests, but each SIG should be free to choose whatever they decide meanwhile they maintain their tests healthy and in good shape\r\n\r\nThanks for the fix and the great work Patrick"", 'created_at': datetime.datetime(2023, 1, 22, 19, 13, 30, tzinfo=datetime.timezone.utc)}]","pohly (Issue Creator) on (2023-01-04 21:52:56 UTC): This is not a complete fix. Other tests that use this pattern:
- PersistentVolumes-local Local volume that cannot be mounted [Slow] should fail due to non-existent path 
- PersistentVolumes-local Local volume that cannot be mounted [Slow] should fail due to wrong node

However, those use lots of additional helpers that all would need to be modified to separate ""create pod"" from ""wait for it to be running"". Let's address the current set of tests first, then deal with the rest in a separate PR.

pohly (Issue Creator) on (2023-01-05 19:20:03 UTC): /retest

sunnylovestiramisu (Assginee) on (2023-01-05 19:23:53 UTC): Should we create an issue to track this?

sunnylovestiramisu (Assginee) on (2023-01-05 20:34:00 UTC): /lgtm

k8s-ci-robot on (2023-01-05 20:34:08 UTC): LGTM label has been added.  <details>Git tree hash: b3c83414cd6b273e4299c36ecc0756529134e59d</details>

pohly (Issue Creator) on (2023-01-05 21:39:56 UTC): Not necessary, those tests fail in https://github.com/kubernetes/kubernetes/pull/113298 when always returning a nil error, so I have a reminder to fix them.

pohly (Issue Creator) on (2023-01-06 20:17:12 UTC): I pushed a [slight update](https://github.com/kubernetes/kubernetes/compare/42463c739586d6bc5296c42c4d6b85262bf5c099..eb8ccf648217dfab854a0743793c7c0e2d6820d3): `framework.ShouldRetry` came from `e2e/framework/pod` and now gets removed there in the commit that moves the code into the framework.

pohly (Issue Creator) on (2023-01-09 11:35:50 UTC): https://storage.googleapis.com/k8s-triage/index.html?pr=1&text=pod%20pod-test%20found%20in%20namespace&test=Pods%20should%20run%20through%20the%20lifecycle%20of%20Pods%20and%20PodStatus is an unrelated flake.

/retest

sunnylovestiramisu (Assginee) on (2023-01-09 17:05:00 UTC): /lgtm

k8s-ci-robot on (2023-01-09 17:05:08 UTC): LGTM label has been added.  <details>Git tree hash: 578712331ec05b5df1edfb9006ce380bf4cb82f9</details>

bart0sh on (2023-01-11 07:14:14 UTC): /triage accepted
/priority important-longterm

SergeyKanzhelev on (2023-01-11 18:23:37 UTC): /assign @haircommander

for node

haircommander (Assginee) on (2023-01-11 20:02:13 UTC): couple of nits, none blocking, otherwise LGTM

pohly (Issue Creator) on (2023-01-16 08:14:02 UTC): I updated this PR:
- addressed @haircommander's nits in https://github.com/kubernetes/kubernetes/compare/eb8ccf648217dfab854a0743793c7c0e2d6820d3..84d6d2c34145b771d6a4b0a39a39cd7e29bb3a60
- rebased onto latest master to get access to revised timeout support
- replaced `framework.NewTimeoutContextWithDefaults()` with `f.Timeouts`

@haircommander, @aojea: okay to merge?

haircommander (Assginee) on (2023-01-16 14:18:47 UTC): /lgtm

nice cleanup here @pohly

k8s-ci-robot on (2023-01-16 14:18:54 UTC): LGTM label has been added.  <details>Git tree hash: bc4cca1e746b83a2adf2b84d9985f124500cc21d</details>

pohly (Issue Creator) on (2023-01-16 14:51:23 UTC): /assign @aojea 

For approval.

pohly (Issue Creator) on (2023-01-19 06:48:35 UTC): /hold

To give @aojea time for another look (not required), I'll lift the hold next week.

/assign @kubernetes/dep-approvers 

For approval of some new code being pulled from gomega. No version changes.

dims (Assginee) on (2023-01-19 15:22:02 UTC): /approve
/lgtm

(changes in /vendor looks good to me)

k8s-ci-robot on (2023-01-19 15:22:32 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114825#issuecomment-1397144134"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114825#"" title=""Author self-approved"">pohly</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/e2e/common/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/common/OWNERS)~~ [dims,pohly]
- ~~[test/e2e/framework/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/framework/OWNERS)~~ [dims,pohly]
- ~~[test/e2e/storage/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/OWNERS)~~ [dims,pohly]
- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [dims]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

aojea (Assginee) on (2023-01-22 19:13:30 UTC): /hold cancel

I'm not able to review the gomega matchers since I don't have experience with that library, but I see other reviewers lgtm

Regarding gomega matches,  I personally don't think I'll be using them for the sig-network tests, but each SIG should be free to choose whatever they decide meanwhile they maintain their tests healthy and in good shape

Thanks for the fix and the great work Patrick

"
1519263460,pull_request,closed,,Bump go-jose to v3.0.0,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

This replaces gopkg.in/square/go-jose.v2 with
github.com/go-jose/go-jose/v3 which is the currently-maintained stable version of go-jose.

This adds to vendor, but once go-oidc is bumped to a version including its go-jose bump, go-jose.v2 will be removed entirely.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",skitt,2023-01-04 16:31:14+00:00,[],2023-01-10 21:27:00+00:00,2023-01-05 16:18:00+00:00,https://github.com/kubernetes/kubernetes/pull/114823,"[('area/test', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('sig/cluster-lifecycle', 'Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('area/kubeadm', None), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1371151324, 'issue_id': 1519263460, 'author': 'k8s-ci-robot', 'body': ""Hi @skitt. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 4, 16, 31, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371151826, 'issue_id': 1519263460, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114823#"" title=""Author self-approved"">skitt</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign liggitt for approval by writing `/assign @liggitt` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)**\n- **[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)**\n- **[cmd/kubeadm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/OWNERS)**\n- **[pkg/controller/serviceaccount/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/serviceaccount/OWNERS)**\n- **[pkg/serviceaccount/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/serviceaccount/OWNERS)**\n- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**\n- **[staging/src/k8s.io/cluster-bootstrap/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cluster-bootstrap/OWNERS)**\n- **[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)**\n- **[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""liggitt""]} -->', 'created_at': datetime.datetime(2023, 1, 4, 16, 31, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371180671, 'issue_id': 1519263460, 'author': 'skitt', 'body': 'This will be handled in #114772.', 'created_at': datetime.datetime(2023, 1, 4, 16, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377891954, 'issue_id': 1519263460, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 26, 56, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 16:31:23 UTC): Hi @skitt. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-04 16:31:51 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114823#"" title=""Author self-approved"">skitt</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign liggitt for approval by writing `/assign @liggitt` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)**
- **[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)**
- **[cmd/kubeadm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/OWNERS)**
- **[pkg/controller/serviceaccount/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/serviceaccount/OWNERS)**
- **[pkg/serviceaccount/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/serviceaccount/OWNERS)**
- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**
- **[staging/src/k8s.io/cluster-bootstrap/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cluster-bootstrap/OWNERS)**
- **[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)**
- **[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""liggitt""]} -->

skitt (Issue Creator) on (2023-01-04 16:57:00 UTC): This will be handled in #114772.

cici37 on (2023-01-10 21:26:56 UTC): /triage accepted

"
1519244770,pull_request,closed,,bump golang.org/x/oauth2,"#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

Updates to a tagged version of golang.org/x/oauth2 which also cuts transitive dependencies on cloud.google.com/go modules.

Part of https://github.com/kubernetes/kubernetes/issues/113366

```release-note
NONE
```

/assign @dims",liggitt,2023-01-04 16:18:34+00:00,['dims'],2023-05-09 18:26:34+00:00,2023-01-04 18:26:00+00:00,https://github.com/kubernetes/kubernetes/pull/114822,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('area/kubectl', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/cloudprovider', None), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/instrumentation', 'Categorizes an issue or PR as relevant to SIG Instrumentation.'), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('area/code-generation', ''), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1371179494, 'issue_id': 1519244770, 'author': 'dims', 'body': 'Not bad! Also glad to see `golang.org/x/oauth2` go to a specific tag.\r\n\r\n```\r\n-Transitive Dependencies: 234 \r\n-Total Dependencies: 285 \r\n+Transitive Dependencies: 235 \r\n+Total Dependencies: 286 \r\n Max Depth Of Dependencies: 23 \r\n```', 'created_at': datetime.datetime(2023, 1, 4, 16, 55, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371179915, 'issue_id': 1519244770, 'author': 'dims', 'body': '/approve\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 4, 16, 56, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371180055, 'issue_id': 1519244770, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 11aa6eb24a58c9b1dcd81369e069851f52e0b833</details>', 'created_at': datetime.datetime(2023, 1, 4, 16, 56, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371180378, 'issue_id': 1519244770, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114822#issuecomment-1371179915"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114822#"" title=""Author self-approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [dims,liggitt]\n- ~~[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)~~ [dims,liggitt]\n- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [dims,liggitt]\n- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [dims,liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 16, 56, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377892267, 'issue_id': 1519244770, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 27, 5, tzinfo=datetime.timezone.utc)}]","dims (Assginee) on (2023-01-04 16:55:57 UTC): Not bad! Also glad to see `golang.org/x/oauth2` go to a specific tag.

```
-Transitive Dependencies: 234 
-Total Dependencies: 285 
+Transitive Dependencies: 235 
+Total Dependencies: 286 
 Max Depth Of Dependencies: 23 
```

dims (Assginee) on (2023-01-04 16:56:17 UTC): /approve
/lgtm

k8s-ci-robot on (2023-01-04 16:56:24 UTC): LGTM label has been added.  <details>Git tree hash: 11aa6eb24a58c9b1dcd81369e069851f52e0b833</details>

k8s-ci-robot on (2023-01-04 16:56:43 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114822#issuecomment-1371179915"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114822#"" title=""Author self-approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [dims,liggitt]
- ~~[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)~~ [dims,liggitt]
- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [dims,liggitt]
- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [dims,liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

cici37 on (2023-01-10 21:27:05 UTC): /triage accepted

"
1519105686,pull_request,closed,,fix：remove ioutil for accomodate newer Go versions,"Remove ioutil for accomodate newer Go versions
We should clean all io/util package according the url: https://go.dev/doc/go1.16#ioutil
Thanks
Signed-off-by: yulng <wei.yang@daocloud.io>",yulng,2023-01-04 14:47:48+00:00,[],2023-01-10 21:27:25+00:00,2023-01-04 15:01:27+00:00,https://github.com/kubernetes/kubernetes/pull/114821,"[('area/test', None), ('area/apiserver', None), ('area/cloudprovider', None), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('do-not-merge/release-note-label-needed', ""Indicates that a PR should not merge because it's missing one of the release note labels.""), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.'), ('do-not-merge/needs-kind', 'Indicates a PR lacks a `kind/foo` label and requires one.')]","[{'comment_id': 1371022011, 'issue_id': 1519105686, 'author': 'k8s-ci-robot', 'body': '@yulng: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 14, 47, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371022161, 'issue_id': 1519105686, 'author': 'k8s-ci-robot', 'body': ""Hi @yulng. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 4, 14, 47, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371023321, 'issue_id': 1519105686, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114821#"" title=""Author self-approved"">yulng</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign cheftako, deads2k for approval by writing `/assign @cheftako @deads2k` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[pkg/client/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/client/OWNERS)**\n- **[pkg/credentialprovider/azure/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/credentialprovider/azure/OWNERS)**\n- **[plugin/pkg/admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/plugin/pkg/admission/OWNERS)**\n- **[staging/src/k8s.io/apimachinery/pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/OWNERS)**\n- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**\n- **[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)**\n- **[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)**\n- **[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)**\n- **[test/e2e_node/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e_node/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""cheftako"",""deads2k""]} -->', 'created_at': datetime.datetime(2023, 1, 4, 14, 48, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371038447, 'issue_id': 1519105686, 'author': 'yulng', 'body': 'https://github.com/kubernetes/kubernetes/pull/114481/files', 'created_at': datetime.datetime(2023, 1, 4, 15, 1, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377892827, 'issue_id': 1519105686, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 27, 21, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 14:47:50 UTC): @yulng: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-04 14:47:57 UTC): Hi @yulng. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-04 14:48:58 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114821#"" title=""Author self-approved"">yulng</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign cheftako, deads2k for approval by writing `/assign @cheftako @deads2k` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[pkg/client/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/client/OWNERS)**
- **[pkg/credentialprovider/azure/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/credentialprovider/azure/OWNERS)**
- **[plugin/pkg/admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/plugin/pkg/admission/OWNERS)**
- **[staging/src/k8s.io/apimachinery/pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/OWNERS)**
- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**
- **[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)**
- **[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)**
- **[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)**
- **[test/e2e_node/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e_node/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""cheftako"",""deads2k""]} -->

yulng (Issue Creator) on (2023-01-04 15:01:27 UTC): https://github.com/kubernetes/kubernetes/pull/114481/files

cici37 on (2023-01-10 21:27:21 UTC): /triage accepted

"
1519069167,pull_request,closed,,test/integration: Replace deprecated pointer function,"Signed-off-by: TommyStarK <thomasmilox@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

If applied this commit will replace the deprecated `StringPtr`, `Int32Ptr` and `BoolPtr` functions by `String`, `Int32` and `Bool`.


#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",TommyStarK,2023-01-04 14:24:50+00:00,['liggitt'],2023-01-05 22:01:01+00:00,2023-01-05 21:58:11+00:00,https://github.com/kubernetes/kubernetes/pull/114820,"[('area/test', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1370994748, 'issue_id': 1519069167, 'author': 'k8s-ci-robot', 'body': '@TommyStarK: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 14, 24, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370994760, 'issue_id': 1519069167, 'author': 'k8s-ci-robot', 'body': ""Hi @TommyStarK. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 4, 14, 24, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372419322, 'issue_id': 1519069167, 'author': 'TommyStarK', 'body': 'cc @liggitt, another one for replacing deprecated function.', 'created_at': datetime.datetime(2023, 1, 5, 16, 9, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372421065, 'issue_id': 1519069167, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 5, 16, 10, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372421216, 'issue_id': 1519069167, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 82227e93deff94b063df1ec6bc755e66d5fbc761</details>', 'created_at': datetime.datetime(2023, 1, 5, 16, 10, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372421538, 'issue_id': 1519069167, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114820#issuecomment-1372421065"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114820#"" title=""Author self-approved"">TommyStarK</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 16, 11, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372581899, 'issue_id': 1519069167, 'author': 'TommyStarK', 'body': 'sorry to bother you one more time @liggitt but is it possible to have the `ok-to-test` label ? Some tests failed due to pod scheduling timing out and job `pull-kubernetes-e2e-gci-gce-ipvs` failed as well. I rebased against master. Just in case I need to trigger a specific job. Thanks', 'created_at': datetime.datetime(2023, 1, 5, 18, 28, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372586978, 'issue_id': 1519069167, 'author': 'liggitt', 'body': '/lgtm\r\n/ok-to-test', 'created_at': datetime.datetime(2023, 1, 5, 18, 33, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372587142, 'issue_id': 1519069167, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 16244a81f40c9d3343aebbc13845805ce2d579bc</details>', 'created_at': datetime.datetime(2023, 1, 5, 18, 33, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372672852, 'issue_id': 1519069167, 'author': 'TommyStarK', 'body': '/retest-required', 'created_at': datetime.datetime(2023, 1, 5, 20, 2, 3, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 14:24:59 UTC): @TommyStarK: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-04 14:24:59 UTC): Hi @TommyStarK. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

TommyStarK (Issue Creator) on (2023-01-05 16:09:35 UTC): cc @liggitt, another one for replacing deprecated function.

liggitt (Assginee) on (2023-01-05 16:10:52 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-05 16:10:59 UTC): LGTM label has been added.  <details>Git tree hash: 82227e93deff94b063df1ec6bc755e66d5fbc761</details>

k8s-ci-robot on (2023-01-05 16:11:15 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114820#issuecomment-1372421065"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114820#"" title=""Author self-approved"">TommyStarK</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

TommyStarK (Issue Creator) on (2023-01-05 18:28:32 UTC): sorry to bother you one more time @liggitt but is it possible to have the `ok-to-test` label ? Some tests failed due to pod scheduling timing out and job `pull-kubernetes-e2e-gci-gce-ipvs` failed as well. I rebased against master. Just in case I need to trigger a specific job. Thanks

liggitt (Assginee) on (2023-01-05 18:33:25 UTC): /lgtm
/ok-to-test

k8s-ci-robot on (2023-01-05 18:33:31 UTC): LGTM label has been added.  <details>Git tree hash: 16244a81f40c9d3343aebbc13845805ce2d579bc</details>

TommyStarK (Issue Creator) on (2023-01-05 20:02:03 UTC): /retest-required

"
1518973791,pull_request,closed,,Automated cherry pick of #113787: Update daemonSet status even if syncDaemonSet fails,"Cherry pick of #113787 on release-1.26.

#113787: Update daemonSet status even if syncDaemonSet fails

For details on the cherry pick process, see the [cherry pick requests](https://git.k8s.io/community/contributors/devel/sig-release/cherry-picks.md) page.

```release-note
Fixed DaemonSet to update the status even if it fails to create a pod.
```",gjkim42,2023-01-04 13:22:16+00:00,"['soltysh', 'Verolop']",2023-01-11 21:52:19+00:00,2023-01-11 19:42:08+00:00,https://github.com/kubernetes/kubernetes/pull/114819,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('area/test', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('cherry-pick-approved', 'Indicates a cherry-pick PR into a release branch has been approved by the release branch manager.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1370959494, 'issue_id': 1518973791, 'author': 'gjkim42', 'body': '/kind bug\r\n/assign @soltysh', 'created_at': datetime.datetime(2023, 1, 4, 13, 56, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371117616, 'issue_id': 1518973791, 'author': 'gjkim42', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 4, 16, 4, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371851582, 'issue_id': 1518973791, 'author': 'Shubham82', 'body': '/triage accepted\r\n/priority important-longterm', 'created_at': datetime.datetime(2023, 1, 5, 7, 3, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371995862, 'issue_id': 1518973791, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 882e2301fd1d54e61f4ca40be914279d7f01bd25</details>', 'created_at': datetime.datetime(2023, 1, 5, 9, 48, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371996230, 'issue_id': 1518973791, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114819#"" title=""Author self-approved"">gjkim42</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114819#pullrequestreview-1237105491"" title=""Approved"">soltysh</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/controller/daemon/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/pkg/controller/daemon/OWNERS)~~ [soltysh]\n- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/test/OWNERS)~~ [soltysh]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 9, 48, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372117655, 'issue_id': 1518973791, 'author': 'gjkim42', 'body': '/cc @kubernetes/release-managers', 'created_at': datetime.datetime(2023, 1, 5, 11, 48, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379311945, 'issue_id': 1518973791, 'author': 'Verolop', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 11, 18, 27, 55, tzinfo=datetime.timezone.utc)}]","gjkim42 (Issue Creator) on (2023-01-04 13:56:15 UTC): /kind bug
/assign @soltysh

gjkim42 (Issue Creator) on (2023-01-04 16:04:33 UTC): /retest

Shubham82 on (2023-01-05 07:03:08 UTC): /triage accepted
/priority important-longterm

k8s-ci-robot on (2023-01-05 09:48:29 UTC): LGTM label has been added.  <details>Git tree hash: 882e2301fd1d54e61f4ca40be914279d7f01bd25</details>

k8s-ci-robot on (2023-01-05 09:48:51 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114819#"" title=""Author self-approved"">gjkim42</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114819#pullrequestreview-1237105491"" title=""Approved"">soltysh</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/controller/daemon/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/pkg/controller/daemon/OWNERS)~~ [soltysh]
- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/test/OWNERS)~~ [soltysh]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

gjkim42 (Issue Creator) on (2023-01-05 11:48:29 UTC): /cc @kubernetes/release-managers

Verolop (Assginee) on (2023-01-11 18:27:55 UTC): /lgtm

"
1518973441,pull_request,closed,,Automated cherry pick of #113787: Update daemonSet status even if syncDaemonSet fails,"Cherry pick of #113787 on release-1.25.

#113787: Update daemonSet status even if syncDaemonSet fails

For details on the cherry pick process, see the [cherry pick requests](https://git.k8s.io/community/contributors/devel/sig-release/cherry-picks.md) page.

```release-note
Fixed DaemonSet to update the status even if it fails to create a pod.
```",gjkim42,2023-01-04 13:22:03+00:00,"['soltysh', 'Verolop']",2023-01-11 21:52:30+00:00,2023-01-11 21:30:08+00:00,https://github.com/kubernetes/kubernetes/pull/114818,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('area/test', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('cherry-pick-approved', 'Indicates a cherry-pick PR into a release branch has been approved by the release branch manager.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1370959422, 'issue_id': 1518973441, 'author': 'gjkim42', 'body': '/kind bug\r\n/assign @soltysh', 'created_at': datetime.datetime(2023, 1, 4, 13, 56, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371853660, 'issue_id': 1518973441, 'author': 'Shubham82', 'body': '/triage accepted\r\n/priority important-longterm', 'created_at': datetime.datetime(2023, 1, 5, 7, 5, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371996189, 'issue_id': 1518973441, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 3f3fe744e986aeb12f34e32a168db5d7ae22a254</details>', 'created_at': datetime.datetime(2023, 1, 5, 9, 48, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371996622, 'issue_id': 1518973441, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114818#"" title=""Author self-approved"">gjkim42</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114818#pullrequestreview-1237105911"" title=""Approved"">soltysh</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/controller/daemon/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.25/pkg/controller/daemon/OWNERS)~~ [soltysh]\n- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.25/test/OWNERS)~~ [soltysh]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 9, 49, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372117439, 'issue_id': 1518973441, 'author': 'gjkim42', 'body': '/cc @kubernetes/release-managers', 'created_at': datetime.datetime(2023, 1, 5, 11, 48, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379312042, 'issue_id': 1518973441, 'author': 'Verolop', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 11, 18, 28, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379476468, 'issue_id': 1518973441, 'author': 'Verolop', 'body': '/test pull-kubernetes-unit', 'created_at': datetime.datetime(2023, 1, 11, 20, 58, 53, tzinfo=datetime.timezone.utc)}]","gjkim42 (Issue Creator) on (2023-01-04 13:56:11 UTC): /kind bug
/assign @soltysh

Shubham82 on (2023-01-05 07:05:35 UTC): /triage accepted
/priority important-longterm

k8s-ci-robot on (2023-01-05 09:48:48 UTC): LGTM label has been added.  <details>Git tree hash: 3f3fe744e986aeb12f34e32a168db5d7ae22a254</details>

k8s-ci-robot on (2023-01-05 09:49:15 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114818#"" title=""Author self-approved"">gjkim42</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114818#pullrequestreview-1237105911"" title=""Approved"">soltysh</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/controller/daemon/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.25/pkg/controller/daemon/OWNERS)~~ [soltysh]
- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.25/test/OWNERS)~~ [soltysh]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

gjkim42 (Issue Creator) on (2023-01-05 11:48:14 UTC): /cc @kubernetes/release-managers

Verolop (Assginee) on (2023-01-11 18:28:01 UTC): /lgtm

Verolop (Assginee) on (2023-01-11 20:58:53 UTC): /test pull-kubernetes-unit

"
1518965542,pull_request,closed,,plugin/pkg/admission: Replace deprecated pointer function,"Signed-off-by: TommyStarK <thomasmilox@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

If applied this commit will replace the deprecated `StringPtr` and `Int32Ptr` functions by `String` and `Int32`.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",TommyStarK,2023-01-04 13:17:12+00:00,['liggitt'],2023-01-04 22:31:14+00:00,2023-01-04 22:30:44+00:00,https://github.com/kubernetes/kubernetes/pull/114817,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1370919160, 'issue_id': 1518965542, 'author': 'k8s-ci-robot', 'body': '@TommyStarK: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 13, 17, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370920189, 'issue_id': 1518965542, 'author': 'k8s-ci-robot', 'body': ""Hi @TommyStarK. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 4, 13, 18, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371205775, 'issue_id': 1518965542, 'author': 'TommyStarK', 'body': ""Hello @liggitt,\r\n\r\nA small one while I'm looking for another piece to work on.\r\n\r\nHappy new year, best wishes.\r\nCheers"", 'created_at': datetime.datetime(2023, 1, 4, 17, 19, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371227407, 'issue_id': 1518965542, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 4, 17, 38, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371227504, 'issue_id': 1518965542, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 9241b01d289a4a7fc5139dbd5a26428b2c674c7a</details>', 'created_at': datetime.datetime(2023, 1, 4, 17, 38, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371227970, 'issue_id': 1518965542, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114817#issuecomment-1371227407"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114817#"" title=""Author self-approved"">TommyStarK</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[plugin/pkg/admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/plugin/pkg/admission/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 17, 39, 21, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 13:17:21 UTC): @TommyStarK: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-04 13:18:23 UTC): Hi @TommyStarK. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

TommyStarK (Issue Creator) on (2023-01-04 17:19:35 UTC): Hello @liggitt,

A small one while I'm looking for another piece to work on.

Happy new year, best wishes.
Cheers

liggitt (Assginee) on (2023-01-04 17:38:47 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-04 17:38:54 UTC): LGTM label has been added.  <details>Git tree hash: 9241b01d289a4a7fc5139dbd5a26428b2c674c7a</details>

k8s-ci-robot on (2023-01-04 17:39:21 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114817#issuecomment-1371227407"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114817#"" title=""Author self-approved"">TommyStarK</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[plugin/pkg/admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/plugin/pkg/admission/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1518932815,pull_request,closed,,Fix broken link to api-conventions doc.,"Signed-off-by: kkkkun <scuzk373x@gmail.com>

#### What type of PR is this?
/kind documentation
/release-note-none




#### What this PR does / why we need it:
Follow up on https://github.com/kubernetes/kubernetes/pull/81770
#### Which issue(s) this PR fixes:

Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note

```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",kkkkun,2023-01-04 12:55:47+00:00,"['lavalamp', 'cici37']",2023-03-05 09:25:04+00:00,2023-03-05 09:25:02+00:00,https://github.com/kubernetes/kubernetes/pull/114816,"[('kind/documentation', 'Categorizes issue or PR as related to documentation.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('needs-rebase', 'Indicates a PR cannot be merged because it has merge conflicts with HEAD.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('kind/api-change', 'Categorizes issue or PR as related to adding, removing, or otherwise changing an API'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1370897447, 'issue_id': 1518932815, 'author': 'k8s-ci-robot', 'body': ""Hi @kkkkun. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 4, 12, 55, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370897941, 'issue_id': 1518932815, 'author': 'kkkkun', 'body': '/release-note-none', 'created_at': datetime.datetime(2023, 1, 4, 12, 56, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370897958, 'issue_id': 1518932815, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114816#"" title=""Author self-approved"">kkkkun</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign lavalamp for approval by writing `/assign @lavalamp` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)**\n- **[staging/src/k8s.io/apiserver/pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/apis/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""lavalamp""]} -->', 'created_at': datetime.datetime(2023, 1, 4, 12, 56, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370956149, 'issue_id': 1518932815, 'author': 'k8s-triage-robot', 'body': 'This PR [may require API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#what-apis-need-to-be-reviewed).\n\nIf so, when the changes are ready, [complete the pre-review checklist and request an API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#mechanics).\n\nStatus of requested reviews is tracked in the [API Review project](https://github.com/orgs/kubernetes/projects/13).', 'created_at': datetime.datetime(2023, 1, 4, 13, 53, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377894800, 'issue_id': 1518932815, 'author': 'cici37', 'body': '/triage accepted\r\n/assign', 'created_at': datetime.datetime(2023, 1, 10, 21, 28, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387515357, 'issue_id': 1518932815, 'author': 'cici37', 'body': '/release-note-none\r\n/ok-to-test\r\n/lgtm\r\nThanks for the fix!', 'created_at': datetime.datetime(2023, 1, 18, 18, 22, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387515551, 'issue_id': 1518932815, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: dbfb8cc23556dda51902bd5b12c4c84e57c5f3c9</details>', 'created_at': datetime.datetime(2023, 1, 18, 18, 22, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387516922, 'issue_id': 1518932815, 'author': 'cici37', 'body': '/assign @lavalamp \r\nfor approval. Thanks', 'created_at': datetime.datetime(2023, 1, 18, 18, 23, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396197672, 'issue_id': 1518932815, 'author': 'cici37', 'body': '/test pull-kubernetes-e2e-gce', 'created_at': datetime.datetime(2023, 1, 18, 22, 49, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396236862, 'issue_id': 1518932815, 'author': 'lavalamp', 'body': 'is that .proto file really generated? if so, need to fix the source too.', 'created_at': datetime.datetime(2023, 1, 18, 23, 41, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396497919, 'issue_id': 1518932815, 'author': 'kkkkun', 'body': ""> is that .proto file really generated? if so, need to fix the source too.\r\n\r\nThey are not generated. I do not found how to generated this.  But https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/apis/example2/v1/types.go#L31 has changed before, but .proto do not changed. It's strange."", 'created_at': datetime.datetime(2023, 1, 19, 6, 28, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1454815924, 'issue_id': 1518932815, 'author': 'k8s-ci-robot', 'body': 'PR needs rebase.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 3, 4, 17, 35, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1455036147, 'issue_id': 1518932815, 'author': 'kkkkun', 'body': 'It seems resovled in PR https://github.com/kubernetes/kubernetes/pull/116106.\r\n/close', 'created_at': datetime.datetime(2023, 3, 5, 9, 24, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1455036164, 'issue_id': 1518932815, 'author': 'k8s-ci-robot', 'body': '@kkkkun: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114816#issuecomment-1455036147):\n\n>It seems resovled in PR https://github.com/kubernetes/kubernetes/pull/116106.\r\n>/close\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 3, 5, 9, 25, 3, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 12:55:56 UTC): Hi @kkkkun. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

kkkkun (Issue Creator) on (2023-01-04 12:56:27 UTC): /release-note-none

k8s-ci-robot on (2023-01-04 12:56:28 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114816#"" title=""Author self-approved"">kkkkun</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign lavalamp for approval by writing `/assign @lavalamp` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)**
- **[staging/src/k8s.io/apiserver/pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/apis/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""lavalamp""]} -->

k8s-triage-robot on (2023-01-04 13:53:11 UTC): This PR [may require API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#what-apis-need-to-be-reviewed).

If so, when the changes are ready, [complete the pre-review checklist and request an API review](https://git.k8s.io/community/sig-architecture/api-review-process.md#mechanics).

Status of requested reviews is tracked in the [API Review project](https://github.com/orgs/kubernetes/projects/13).

cici37 (Assginee) on (2023-01-10 21:28:18 UTC): /triage accepted
/assign

cici37 (Assginee) on (2023-01-18 18:22:26 UTC): /release-note-none
/ok-to-test
/lgtm
Thanks for the fix!

k8s-ci-robot on (2023-01-18 18:22:33 UTC): LGTM label has been added.  <details>Git tree hash: dbfb8cc23556dda51902bd5b12c4c84e57c5f3c9</details>

cici37 (Assginee) on (2023-01-18 18:23:20 UTC): /assign @lavalamp 
for approval. Thanks

cici37 (Assginee) on (2023-01-18 22:49:02 UTC): /test pull-kubernetes-e2e-gce

lavalamp (Assginee) on (2023-01-18 23:41:06 UTC): is that .proto file really generated? if so, need to fix the source too.

kkkkun (Issue Creator) on (2023-01-19 06:28:14 UTC): They are not generated. I do not found how to generated this.  But https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/apis/example2/v1/types.go#L31 has changed before, but .proto do not changed. It's strange.

k8s-ci-robot on (2023-03-04 17:35:59 UTC): PR needs rebase.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

kkkkun (Issue Creator) on (2023-03-05 09:24:58 UTC): It seems resovled in PR https://github.com/kubernetes/kubernetes/pull/116106.
/close

k8s-ci-robot on (2023-03-05 09:25:03 UTC): @kkkkun: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114816#issuecomment-1455036147):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1518903271,pull_request,closed,,Do not create endpoints for Services of type ExternalName,"#### What type of PR is this?

/kind bug

#### What this PR does / why we need it:

Service of type ExternalName should not create endpoints. Before, endpoints were created with ""headless"" label, and after switching to clusterIP service was not working, because endpoint was already created with headless label and kube-proxy were not creating iptable rule for it

#### Which issue(s) this PR fixes:
Fixes https://github.com/kubernetes/kubernetes/issues/105986

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Don't create endpoints for Service of type ExternalName.
```

/assign aojea",panslava,2023-01-04 12:35:55+00:00,"['robscott', 'aojea']",2023-01-18 11:12:36+00:00,2023-01-18 11:12:34+00:00,https://github.com/kubernetes/kubernetes/pull/114814,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('area/test', None), ('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('tide/merge-method-squash', 'Denotes a PR that should be squashed by tide when it merges.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1370875421, 'issue_id': 1518903271, 'author': 'k8s-ci-robot', 'body': '@panslava: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 12, 36, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373856364, 'issue_id': 1518903271, 'author': 'aojea', 'body': 'overall LGTM, the integration test need a small change to avoid races\r\n\r\n/assign @robscott', 'created_at': datetime.datetime(2023, 1, 6, 16, 18, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374604978, 'issue_id': 1518903271, 'author': 'aojea', 'body': '/lgtm\r\n@robscott or @thockin for final approval', 'created_at': datetime.datetime(2023, 1, 7, 20, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374605003, 'issue_id': 1518903271, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 865ec61fb990bc135335aeba1d7dd3f7f4ca7216</details>', 'created_at': datetime.datetime(2023, 1, 7, 20, 40, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374605350, 'issue_id': 1518903271, 'author': 'aojea', 'body': '/label tide/merge-method-squash', 'created_at': datetime.datetime(2023, 1, 7, 20, 41, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1386214751, 'issue_id': 1518903271, 'author': 'robscott', 'body': 'Thanks @panslava!\r\n\r\n/approve', 'created_at': datetime.datetime(2023, 1, 17, 23, 18, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1386789484, 'issue_id': 1518903271, 'author': 'aojea', 'body': '/approve\r\n\r\nThanks', 'created_at': datetime.datetime(2023, 1, 18, 10, 3, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1386790116, 'issue_id': 1518903271, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114814#issuecomment-1386789484"" title=""Approved"">aojea</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114814#"" title=""Author self-approved"">panslava</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114814#issuecomment-1386214751"" title=""Approved"">robscott</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/controller/endpoint/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/endpoint/OWNERS)~~ [aojea,robscott]\n- ~~[pkg/controller/endpointslice/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/endpointslice/OWNERS)~~ [aojea,robscott]\n- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [aojea]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 18, 10, 3, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1386841588, 'issue_id': 1518903271, 'author': 'panslava', 'body': '/test pull-kubernetes-unit', 'created_at': datetime.datetime(2023, 1, 18, 10, 40, 37, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 12:36:04 UTC): @panslava: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

aojea (Assginee) on (2023-01-06 16:18:06 UTC): overall LGTM, the integration test need a small change to avoid races

/assign @robscott

aojea (Assginee) on (2023-01-07 20:40:00 UTC): /lgtm
@robscott or @thockin for final approval

k8s-ci-robot on (2023-01-07 20:40:06 UTC): LGTM label has been added.  <details>Git tree hash: 865ec61fb990bc135335aeba1d7dd3f7f4ca7216</details>

aojea (Assginee) on (2023-01-07 20:41:10 UTC): /label tide/merge-method-squash

robscott (Assginee) on (2023-01-17 23:18:31 UTC): Thanks @panslava!

/approve

aojea (Assginee) on (2023-01-18 10:03:23 UTC): /approve

Thanks

k8s-ci-robot on (2023-01-18 10:03:49 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114814#issuecomment-1386789484"" title=""Approved"">aojea</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114814#"" title=""Author self-approved"">panslava</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114814#issuecomment-1386214751"" title=""Approved"">robscott</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/controller/endpoint/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/endpoint/OWNERS)~~ [aojea,robscott]
- ~~[pkg/controller/endpointslice/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/endpointslice/OWNERS)~~ [aojea,robscott]
- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [aojea]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

panslava (Issue Creator) on (2023-01-18 10:40:37 UTC): /test pull-kubernetes-unit

"
1518806187,pull_request,closed,,Automated cherry pick of #114782: Licensing: skip modules with fewer subdirs than mods,"Cherry pick of #114782 on release-1.26.

#114782: Licensing: skip modules with fewer subdirs than mods

For details on the cherry pick process, see the [cherry pick requests](https://git.k8s.io/community/contributors/devel/sig-release/cherry-picks.md) page.

```release-note
NONE
```",skitt,2023-01-04 11:26:14+00:00,"['liggitt', 'Verolop']",2023-01-19 17:13:23+00:00,2023-01-12 02:12:55+00:00,https://github.com/kubernetes/kubernetes/pull/114812,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('cherry-pick-approved', 'Indicates a cherry-pick PR into a release branch has been approved by the release branch manager.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.'), ('sig/k8s-infra', 'Categorizes an issue or PR as relevant to SIG K8s Infra.')]","[{'comment_id': 1370805712, 'issue_id': 1518806187, 'author': 'k8s-ci-robot', 'body': '@skitt: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 11, 26, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370805713, 'issue_id': 1518806187, 'author': 'k8s-ci-robot', 'body': ""Hi @skitt. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 4, 11, 26, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370919221, 'issue_id': 1518806187, 'author': 'skitt', 'body': '/sig k8s-infra\r\n/kind bug\r\n/cc @liggitt', 'created_at': datetime.datetime(2023, 1, 4, 13, 17, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371170090, 'issue_id': 1518806187, 'author': 'liggitt', 'body': '/lgtm\r\n/approve\r\n/kind cleanup\r\n/priority important-longterm\r\n/ok-to-test\r\n/sig release', 'created_at': datetime.datetime(2023, 1, 4, 16, 47, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371170235, 'issue_id': 1518806187, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 6f1042ec644bf678262a53337cfd04e1b20491f7</details>', 'created_at': datetime.datetime(2023, 1, 4, 16, 47, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371170978, 'issue_id': 1518806187, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114812#issuecomment-1371170090"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114812#"" title=""Author self-approved"">skitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/hack/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 16, 48, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379678315, 'issue_id': 1518806187, 'author': 'Verolop', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 12, 1, 5, 49, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 11:26:22 UTC): @skitt: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-04 11:26:22 UTC): Hi @skitt. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

skitt (Issue Creator) on (2023-01-04 13:17:26 UTC): /sig k8s-infra
/kind bug
/cc @liggitt

liggitt (Assginee) on (2023-01-04 16:47:20 UTC): /lgtm
/approve
/kind cleanup
/priority important-longterm
/ok-to-test
/sig release

k8s-ci-robot on (2023-01-04 16:47:28 UTC): LGTM label has been added.  <details>Git tree hash: 6f1042ec644bf678262a53337cfd04e1b20491f7</details>

k8s-ci-robot on (2023-01-04 16:48:11 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114812#issuecomment-1371170090"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114812#"" title=""Author self-approved"">skitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/hack/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

Verolop (Assginee) on (2023-01-12 01:05:49 UTC): /lgtm

"
1518805782,pull_request,closed,,Automated cherry pick of #114782: Licensing: skip modules with fewer subdirs than mods,"Cherry pick of #114782 on release-1.25.

#114782: Licensing: skip modules with fewer subdirs than mods

For details on the cherry pick process, see the [cherry pick requests](https://git.k8s.io/community/contributors/devel/sig-release/cherry-picks.md) page.

```release-note
NONE
```",skitt,2023-01-04 11:25:56+00:00,['liggitt'],2023-01-19 17:13:28+00:00,2023-01-12 03:16:54+00:00,https://github.com/kubernetes/kubernetes/pull/114811,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('cherry-pick-approved', 'Indicates a cherry-pick PR into a release branch has been approved by the release branch manager.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.'), ('sig/k8s-infra', 'Categorizes an issue or PR as relevant to SIG K8s Infra.')]","[{'comment_id': 1370805412, 'issue_id': 1518805782, 'author': 'k8s-ci-robot', 'body': ""Hi @skitt. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 4, 11, 26, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370805414, 'issue_id': 1518805782, 'author': 'k8s-ci-robot', 'body': '@skitt: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 11, 26, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370919016, 'issue_id': 1518805782, 'author': 'skitt', 'body': '/sig k8s-infra\r\n/kind bug\r\n/cc @liggitt', 'created_at': datetime.datetime(2023, 1, 4, 13, 17, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371170050, 'issue_id': 1518805782, 'author': 'liggitt', 'body': '/lgtm\r\n/approve\r\n/kind cleanup\r\n/priority important-longterm\r\n/ok-to-test\r\n/sig release', 'created_at': datetime.datetime(2023, 1, 4, 16, 47, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371170166, 'issue_id': 1518805782, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114811#issuecomment-1371170050"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114811#"" title=""Author self-approved"">skitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.25/hack/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 16, 47, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371170191, 'issue_id': 1518805782, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 228d9173baee68c594fce0f2bbec354ece7a3c11</details>', 'created_at': datetime.datetime(2023, 1, 4, 16, 47, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371490674, 'issue_id': 1518805782, 'author': 'Verolop', 'body': '/test pull-kubernetes-integration', 'created_at': datetime.datetime(2023, 1, 4, 22, 13, 2, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 11:26:04 UTC): Hi @skitt. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-04 11:26:04 UTC): @skitt: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

skitt (Issue Creator) on (2023-01-04 13:17:12 UTC): /sig k8s-infra
/kind bug
/cc @liggitt

liggitt (Assginee) on (2023-01-04 16:47:18 UTC): /lgtm
/approve
/kind cleanup
/priority important-longterm
/ok-to-test
/sig release

k8s-ci-robot on (2023-01-04 16:47:24 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114811#issuecomment-1371170050"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114811#"" title=""Author self-approved"">skitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.25/hack/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-ci-robot on (2023-01-04 16:47:25 UTC): LGTM label has been added.  <details>Git tree hash: 228d9173baee68c594fce0f2bbec354ece7a3c11</details>

Verolop on (2023-01-04 22:13:02 UTC): /test pull-kubernetes-integration

"
1518803966,pull_request,closed,,Automated cherry pick of #114782: Licensing: skip modules with fewer subdirs than mods,"Cherry pick of #114782 on release-1.24.

#114782: Licensing: skip modules with fewer subdirs than mods

For details on the cherry pick process, see the [cherry pick requests](https://git.k8s.io/community/contributors/devel/sig-release/cherry-picks.md) page.

```release-note
NONE
```",skitt,2023-01-04 11:24:41+00:00,"['liggitt', 'Verolop']",2023-01-19 17:13:33+00:00,2023-01-12 02:12:55+00:00,https://github.com/kubernetes/kubernetes/pull/114810,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('cherry-pick-approved', 'Indicates a cherry-pick PR into a release branch has been approved by the release branch manager.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.'), ('sig/k8s-infra', 'Categorizes an issue or PR as relevant to SIG K8s Infra.')]","[{'comment_id': 1370804142, 'issue_id': 1518803966, 'author': 'k8s-ci-robot', 'body': ""Hi @skitt. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 4, 11, 24, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370804143, 'issue_id': 1518803966, 'author': 'k8s-ci-robot', 'body': '@skitt: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 11, 24, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370918764, 'issue_id': 1518803966, 'author': 'skitt', 'body': '/sig k8s-infra\r\n/kind bug\r\n/cc @liggitt', 'created_at': datetime.datetime(2023, 1, 4, 13, 16, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371170008, 'issue_id': 1518803966, 'author': 'liggitt', 'body': '/lgtm\r\n/approve\r\n/kind cleanup\r\n/priority important-longterm\r\n/ok-to-test\r\n/sig release', 'created_at': datetime.datetime(2023, 1, 4, 16, 47, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371170143, 'issue_id': 1518803966, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 0f61352d69b956aa24dbc2853dd2ddbce9fc32b1</details>', 'created_at': datetime.datetime(2023, 1, 4, 16, 47, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371170703, 'issue_id': 1518803966, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114810#issuecomment-1371170008"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114810#"" title=""Author self-approved"">skitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.24/hack/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 16, 47, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379679164, 'issue_id': 1518803966, 'author': 'Verolop', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 12, 1, 7, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 11:24:49 UTC): Hi @skitt. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-04 11:24:49 UTC): @skitt: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

skitt (Issue Creator) on (2023-01-04 13:16:58 UTC): /sig k8s-infra
/kind bug
/cc @liggitt

liggitt (Assginee) on (2023-01-04 16:47:15 UTC): /lgtm
/approve
/kind cleanup
/priority important-longterm
/ok-to-test
/sig release

k8s-ci-robot on (2023-01-04 16:47:23 UTC): LGTM label has been added.  <details>Git tree hash: 0f61352d69b956aa24dbc2853dd2ddbce9fc32b1</details>

k8s-ci-robot on (2023-01-04 16:47:54 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114810#issuecomment-1371170008"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114810#"" title=""Author self-approved"">skitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.24/hack/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

Verolop (Assginee) on (2023-01-12 01:07:00 UTC): /lgtm

"
1518803041,pull_request,closed,,Automated cherry pick of #114782: Licensing: skip modules with fewer subdirs than mods,"Cherry pick of #114782 on release-1.23.

#114782: Licensing: skip modules with fewer subdirs than mods

For details on the cherry pick process, see the [cherry pick requests](https://git.k8s.io/community/contributors/devel/sig-release/cherry-picks.md) page.

```release-note
NONE
```",skitt,2023-01-04 11:24:15+00:00,"['liggitt', 'Verolop']",2023-01-19 17:13:38+00:00,2023-01-12 03:40:54+00:00,https://github.com/kubernetes/kubernetes/pull/114809,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('cherry-pick-approved', 'Indicates a cherry-pick PR into a release branch has been approved by the release branch manager.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.'), ('sig/k8s-infra', 'Categorizes an issue or PR as relevant to SIG K8s Infra.')]","[{'comment_id': 1370803719, 'issue_id': 1518803041, 'author': 'k8s-ci-robot', 'body': ""Hi @skitt. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 4, 11, 24, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370803721, 'issue_id': 1518803041, 'author': 'k8s-ci-robot', 'body': '@skitt: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 11, 24, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370917617, 'issue_id': 1518803041, 'author': 'skitt', 'body': '/sig k8s-infra\r\n/kind bug', 'created_at': datetime.datetime(2023, 1, 4, 13, 15, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370918162, 'issue_id': 1518803041, 'author': 'skitt', 'body': '/cc @liggitt', 'created_at': datetime.datetime(2023, 1, 4, 13, 16, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371169956, 'issue_id': 1518803041, 'author': 'liggitt', 'body': '/lgtm\r\n/approve\r\n/kind cleanup\r\n/priority important-longterm\r\n/ok-to-test\r\n/sig release', 'created_at': datetime.datetime(2023, 1, 4, 16, 47, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371170100, 'issue_id': 1518803041, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 6fb6e2ec5d6725995e83a74a74c3be99a103f3f6</details>', 'created_at': datetime.datetime(2023, 1, 4, 16, 47, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371171546, 'issue_id': 1518803041, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114809#issuecomment-1371169956"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114809#"" title=""Author self-approved"">skitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.23/hack/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 16, 48, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372431386, 'issue_id': 1518803041, 'author': 'skitt', 'body': '/test pull-kubernetes-unit', 'created_at': datetime.datetime(2023, 1, 5, 16, 18, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379679730, 'issue_id': 1518803041, 'author': 'Verolop', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 12, 1, 7, 54, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 11:24:24 UTC): Hi @skitt. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-04 11:24:24 UTC): @skitt: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

skitt (Issue Creator) on (2023-01-04 13:15:48 UTC): /sig k8s-infra
/kind bug

skitt (Issue Creator) on (2023-01-04 13:16:23 UTC): /cc @liggitt

liggitt (Assginee) on (2023-01-04 16:47:13 UTC): /lgtm
/approve
/kind cleanup
/priority important-longterm
/ok-to-test
/sig release

k8s-ci-robot on (2023-01-04 16:47:20 UTC): LGTM label has been added.  <details>Git tree hash: 6fb6e2ec5d6725995e83a74a74c3be99a103f3f6</details>

k8s-ci-robot on (2023-01-04 16:48:42 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114809#issuecomment-1371169956"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114809#"" title=""Author self-approved"">skitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.23/hack/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

skitt (Issue Creator) on (2023-01-05 16:18:54 UTC): /test pull-kubernetes-unit

Verolop (Assginee) on (2023-01-12 01:07:54 UTC): /lgtm

"
1518798984,pull_request,closed,,Automated cherry pick of #114770: Fix clearing rate limiter in disruption controller,"Cherry pick of #114770 on release-1.25.

#114770: Fix clearing rate limiter in disruption controller

For details on the cherry pick process, see the [cherry pick requests](https://git.k8s.io/community/contributors/devel/sig-release/cherry-picks.md) page.

```release-note
Fix clearing of rate-limiter for the queue of checks for cleaning stale pod disruption conditions. 
The bug could result in the PDB synchronization updates firing too often or the pod disruption cleanups taking too long to happen.

```",mimowo,2023-01-04 11:22:25+00:00,['soltysh'],2023-03-18 18:37:51+00:00,2023-01-04 11:42:31+00:00,https://github.com/kubernetes/kubernetes/pull/114808,"[('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('do-not-merge/cherry-pick-not-approved', 'Indicates that a PR is not yet approved to merge into a release branch.'), ('do-not-merge/work-in-progress', 'Indicates that a PR should not merge because it is a work in progress.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.'), ('do-not-merge/needs-kind', 'Indicates a PR lacks a `kind/foo` label and requires one.')]","[{'comment_id': 1370801708, 'issue_id': 1518798984, 'author': 'k8s-ci-robot', 'body': '@mimowo: This cherry pick PR is for a release branch and has not yet been approved by [Release Managers](https://k8s.io/releases/release-managers).\nAdding the `do-not-merge/cherry-pick-not-approved` label.\n\nTo merge this cherry pick, it must first be approved (`/lgtm` + `/approve`) by the relevant OWNERS.\n\n**AFTER** it has been approved by code owners, please leave the following comment on a line **by itself, with no leading whitespace**: **/cc kubernetes/release-managers**\n\n(This command will request a cherry pick review from [Release Managers](https://github.com/orgs/kubernetes/teams/release-managers) and should work for all GitHub users, whether they are members of the Kubernetes GitHub organization or not.)\n\nFor details on the patch release process and schedule, see the [Patch Releases](https://k8s.io/releases/patch-releases) page.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 11, 22, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370801824, 'issue_id': 1518798984, 'author': 'k8s-ci-robot', 'body': '@mimowo: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 11, 22, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370802359, 'issue_id': 1518798984, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114808#"" title=""Author self-approved"">mimowo</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign janetkuo for approval by writing `/assign @janetkuo` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[pkg/controller/disruption/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.25/pkg/controller/disruption/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""janetkuo""]} -->', 'created_at': datetime.datetime(2023, 1, 4, 11, 23, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370803247, 'issue_id': 1518798984, 'author': 'mimowo', 'body': ""/assign @soltysh \r\n\r\nI think we should also fix this as the disruption controller code isn't protected by a feature gate. It is indirectly protected, because the code would only activate if there is a pod disruption condition added (and adding pod disruption conditions was alpha in 1.25). However, in case of a version skew, it can be added by for example scheduler in 1.26."", 'created_at': datetime.datetime(2023, 1, 4, 11, 23, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370809646, 'issue_id': 1518798984, 'author': 'mimowo', 'body': '/cc @alculquicondor', 'created_at': datetime.datetime(2023, 1, 4, 11, 29, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370825037, 'issue_id': 1518798984, 'author': 'mimowo', 'body': 'Closing for now as it seems unnecessary as discussed here: https://github.com/kubernetes/kubernetes/pull/114780#issuecomment-1370817591. Will reopen if needed.', 'created_at': datetime.datetime(2023, 1, 4, 11, 42, 31, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 11:22:28 UTC): @mimowo: This cherry pick PR is for a release branch and has not yet been approved by [Release Managers](https://k8s.io/releases/release-managers).
Adding the `do-not-merge/cherry-pick-not-approved` label.

To merge this cherry pick, it must first be approved (`/lgtm` + `/approve`) by the relevant OWNERS.

**AFTER** it has been approved by code owners, please leave the following comment on a line **by itself, with no leading whitespace**: **/cc kubernetes/release-managers**

(This command will request a cherry pick review from [Release Managers](https://github.com/orgs/kubernetes/teams/release-managers) and should work for all GitHub users, whether they are members of the Kubernetes GitHub organization or not.)

For details on the patch release process and schedule, see the [Patch Releases](https://k8s.io/releases/patch-releases) page.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-04 11:22:35 UTC): @mimowo: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-04 11:23:05 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114808#"" title=""Author self-approved"">mimowo</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign janetkuo for approval by writing `/assign @janetkuo` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[pkg/controller/disruption/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.25/pkg/controller/disruption/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""janetkuo""]} -->

mimowo (Issue Creator) on (2023-01-04 11:23:53 UTC): /assign @soltysh 

I think we should also fix this as the disruption controller code isn't protected by a feature gate. It is indirectly protected, because the code would only activate if there is a pod disruption condition added (and adding pod disruption conditions was alpha in 1.25). However, in case of a version skew, it can be added by for example scheduler in 1.26.

mimowo (Issue Creator) on (2023-01-04 11:29:40 UTC): /cc @alculquicondor

mimowo (Issue Creator) on (2023-01-04 11:42:31 UTC): Closing for now as it seems unnecessary as discussed here: https://github.com/kubernetes/kubernetes/pull/114780#issuecomment-1370817591. Will reopen if needed.

"
1518692095,pull_request,closed,,Automated cherry pick of #114754: CHANGELOG-1.26: move OpenStack in-tree provider removal to,"Cherry pick of #114754 on release-1.26.

#114754: CHANGELOG-1.26: move OpenStack in-tree provider removal to

For details on the cherry pick process, see the [cherry pick requests](https://git.k8s.io/community/contributors/devel/sig-release/cherry-picks.md) page.

```release-note

```",xmudrii,2023-01-04 10:12:12+00:00,['ameukam'],2023-04-04 15:04:11+00:00,2023-04-04 14:47:54+00:00,https://github.com/kubernetes/kubernetes/pull/114807,"[('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('kind/documentation', 'Categorizes issue or PR as related to documentation.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('area/release-eng', 'Issues or PRs related to the Release Engineering subproject'), ('cherry-pick-approved', 'Indicates a cherry-pick PR into a release branch has been approved by the release branch manager.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('lifecycle/stale', 'Denotes an issue or PR has remained open with no activity and has become stale.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1370729876, 'issue_id': 1518692095, 'author': 'k8s-ci-robot', 'body': '@xmudrii: This cherry pick PR is for a release branch and has not yet been approved by [Release Managers](https://k8s.io/releases/release-managers).\nAdding the `do-not-merge/cherry-pick-not-approved` label.\n\nTo merge this cherry pick, it must first be approved (`/lgtm` + `/approve`) by the relevant OWNERS.\n\n**AFTER** it has been approved by code owners, please leave the following comment on a line **by itself, with no leading whitespace**: **/cc kubernetes/release-managers**\n\n(This command will request a cherry pick review from [Release Managers](https://github.com/orgs/kubernetes/teams/release-managers) and should work for all GitHub users, whether they are members of the Kubernetes GitHub organization or not.)\n\nFor details on the patch release process and schedule, see the [Patch Releases](https://k8s.io/releases/patch-releases) page.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 10, 12, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370730501, 'issue_id': 1518692095, 'author': 'xmudrii', 'body': '/sig release\r\n/triage accepted\r\n/release-note-none\r\n/priority important-soon\r\n/kind documentation', 'created_at': datetime.datetime(2023, 1, 4, 10, 12, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370731181, 'issue_id': 1518692095, 'author': 'xmudrii', 'body': 'cc @kubernetes/release-engineering', 'created_at': datetime.datetime(2023, 1, 4, 10, 13, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1495745240, 'issue_id': 1518692095, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 4, 4, 10, 43, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1495817741, 'issue_id': 1518692095, 'author': 'ameukam', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 4, 4, 11, 37, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1495817777, 'issue_id': 1518692095, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114807#pullrequestreview-1370780698"" title=""Approved"">saschagrunert</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114807#"" title=""Author self-approved"">xmudrii</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[CHANGELOG/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/CHANGELOG/OWNERS)~~ [saschagrunert,xmudrii]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 4, 4, 11, 37, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1495817930, 'issue_id': 1518692095, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: e75c79d83d7a91cc5606b90ef4d4887d938e2bec</details>', 'created_at': datetime.datetime(2023, 4, 4, 11, 37, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1495820312, 'issue_id': 1518692095, 'author': 'ameukam', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 4, 4, 11, 39, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1496010374, 'issue_id': 1518692095, 'author': 'cici37', 'body': '/test pull-kubernetes-e2e-gce-ubuntu-containerd', 'created_at': datetime.datetime(2023, 4, 4, 13, 49, 35, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 10:12:15 UTC): @xmudrii: This cherry pick PR is for a release branch and has not yet been approved by [Release Managers](https://k8s.io/releases/release-managers).
Adding the `do-not-merge/cherry-pick-not-approved` label.

To merge this cherry pick, it must first be approved (`/lgtm` + `/approve`) by the relevant OWNERS.

**AFTER** it has been approved by code owners, please leave the following comment on a line **by itself, with no leading whitespace**: **/cc kubernetes/release-managers**

(This command will request a cherry pick review from [Release Managers](https://github.com/orgs/kubernetes/teams/release-managers) and should work for all GitHub users, whether they are members of the Kubernetes GitHub organization or not.)

For details on the patch release process and schedule, see the [Patch Releases](https://k8s.io/releases/patch-releases) page.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

xmudrii (Issue Creator) on (2023-01-04 10:12:53 UTC): /sig release
/triage accepted
/release-note-none
/priority important-soon
/kind documentation

xmudrii (Issue Creator) on (2023-01-04 10:13:30 UTC): cc @kubernetes/release-engineering

k8s-triage-robot on (2023-04-04 10:43:45 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

ameukam (Assginee) on (2023-04-04 11:37:45 UTC): /lgtm

k8s-ci-robot on (2023-04-04 11:37:48 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114807#pullrequestreview-1370780698"" title=""Approved"">saschagrunert</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114807#"" title=""Author self-approved"">xmudrii</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[CHANGELOG/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/CHANGELOG/OWNERS)~~ [saschagrunert,xmudrii]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-ci-robot on (2023-04-04 11:37:56 UTC): LGTM label has been added.  <details>Git tree hash: e75c79d83d7a91cc5606b90ef4d4887d938e2bec</details>

ameukam (Assginee) on (2023-04-04 11:39:39 UTC): /lgtm

cici37 on (2023-04-04 13:49:35 UTC): /test pull-kubernetes-e2e-gce-ubuntu-containerd

"
1518665879,pull_request,closed,,fix typo in volume util,"Signed-off-by: qingwave <isguory@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind cleanup
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
fix typo in pkg/volume/util
#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:
/cc @xing-yang 

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",qingwave,2023-01-04 09:54:53+00:00,['xing-yang'],2023-05-18 15:32:36+00:00,2023-05-18 15:32:34+00:00,https://github.com/kubernetes/kubernetes/pull/114806,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1370709402, 'issue_id': 1518665879, 'author': 'k8s-ci-robot', 'body': '@qingwave: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 9, 55, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370709423, 'issue_id': 1518665879, 'author': 'k8s-ci-robot', 'body': ""Hi @qingwave. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 4, 9, 55, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1386609008, 'issue_id': 1518665879, 'author': 'qingwave', 'body': '/ok-to-test', 'created_at': datetime.datetime(2023, 1, 18, 7, 33, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1512668218, 'issue_id': 1518665879, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 4, 18, 8, 24, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1552734405, 'issue_id': 1518665879, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle rotten\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 5, 18, 8, 43, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1553158824, 'issue_id': 1518665879, 'author': 'xing-yang', 'body': '/remove-lifecycle rotten', 'created_at': datetime.datetime(2023, 5, 18, 14, 34, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1553159008, 'issue_id': 1518665879, 'author': 'xing-yang', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 5, 18, 14, 34, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1553159178, 'issue_id': 1518665879, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 356ba9e8c6655c728ba589e9ebb9615124f3bdd5</details>', 'created_at': datetime.datetime(2023, 5, 18, 14, 34, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1553159596, 'issue_id': 1518665879, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114806#"" title=""Author self-approved"">qingwave</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114806#issuecomment-1553159008"" title=""Approved"">xing-yang</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/volume/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/volume/OWNERS)~~ [xing-yang]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 5, 18, 14, 34, 59, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 09:55:01 UTC): @qingwave: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-04 09:55:02 UTC): Hi @qingwave. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

qingwave (Issue Creator) on (2023-01-18 07:33:15 UTC): /ok-to-test

k8s-triage-robot on (2023-04-18 08:24:57 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2023-05-18 08:43:09 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle rotten

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

xing-yang (Assginee) on (2023-05-18 14:34:27 UTC): /remove-lifecycle rotten

xing-yang (Assginee) on (2023-05-18 14:34:34 UTC): /lgtm
/approve

k8s-ci-robot on (2023-05-18 14:34:41 UTC): LGTM label has been added.  <details>Git tree hash: 356ba9e8c6655c728ba589e9ebb9615124f3bdd5</details>

k8s-ci-robot on (2023-05-18 14:34:59 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114806#"" title=""Author self-approved"">qingwave</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114806#issuecomment-1553159008"" title=""Approved"">xing-yang</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/volume/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/volume/OWNERS)~~ [xing-yang]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1518649233,pull_request,closed,,Remove  `volume.beta.kubernetes.io/storage-provisioner` annotation,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind cleanup
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
The `volume.beta.kubernetes.io/storage-provisioner` annotation has been deprecated since v1.23 and uses `volume.kubernetes.io/storage-provisioner` instead.
- https://github.com/kubernetes/kubernetes/pull/104590

Now we can remove beta annotation because the deprecation period has ended(more than a year and 3 minor releases).
see https://kubernetes.io/docs/reference/using-api/deprecation-policy/#deprecating-parts-of-the-api for more deprecation details. 

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Ref:  
- https://github.com/kubernetes/kubernetes/issues/104760
- https://github.com/kubernetes/kubernetes/issues/102357

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Action required: Remove the `volume.beta.kubernetes.io/storage-provisioner` annotation, deprecated since v1.23, and use `volume.kubernetes.io/storage-provisioner` instead.
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```

/sig storage

/cc @jsafrane @msau42 @Jiawei0227 ",mengjiao-liu,2023-01-04 09:43:24+00:00,[],2024-12-28 13:21:05+00:00,2024-12-28 13:21:03+00:00,https://github.com/kubernetes/kubernetes/pull/114804,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('needs-rebase', 'Indicates a PR cannot be merged because it has merge conflicts with HEAD.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('release-note-action-required', 'Denotes a PR that introduces potentially breaking changes that require user action.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('lifecycle/rotten', 'Denotes an issue or PR that has aged beyond stale and will be auto-closed.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1370697768, 'issue_id': 1518649233, 'author': 'k8s-ci-robot', 'body': '@mengjiao-liu: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 9, 43, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370763918, 'issue_id': 1518649233, 'author': 'mengjiao-liu', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 4, 10, 45, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370823387, 'issue_id': 1518649233, 'author': 'k8s-ci-robot', 'body': '@mengjiao-liu: The following tests **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:\n\nTest name | Commit | Details | Required | Rerun command\n--- | --- | --- | --- | ---\npull-kubernetes-e2e-gce | 1af1584a105d4edb426d1969cf509f3700563f1d | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114804/pull-kubernetes-e2e-gce/1610572601975902208/) | true | `/test pull-kubernetes-e2e-gce`\npull-kubernetes-e2e-kind-ipv6 | 1af1584a105d4edb426d1969cf509f3700563f1d | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114804/pull-kubernetes-e2e-kind-ipv6/1610588131944304640) | true | `/test pull-kubernetes-e2e-kind-ipv6`\npull-kubernetes-e2e-kind | 1af1584a105d4edb426d1969cf509f3700563f1d | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114804/pull-kubernetes-e2e-kind/1610588131759755264) | true | `/test pull-kubernetes-e2e-kind`\npull-kubernetes-e2e-gce-100-performance | 1af1584a105d4edb426d1969cf509f3700563f1d | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114804/pull-kubernetes-e2e-gce-100-performance/1610588132061745152) | true | `/test pull-kubernetes-e2e-gce-100-performance`\npull-kubernetes-e2e-gce-storage-slow | 1af1584a105d4edb426d1969cf509f3700563f1d | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114804/pull-kubernetes-e2e-gce-storage-slow/1610588132166602752/) | false | `/test pull-kubernetes-e2e-gce-storage-slow`\n\n[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114804). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3Amengjiao-liu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).\n</details>\n<!-- test report -->', 'created_at': datetime.datetime(2023, 1, 4, 11, 40, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371020218, 'issue_id': 1518649233, 'author': 'jsafrane', 'body': 'It looks like the e2e test failures are genuine.\r\n\r\n* Tests with `[Driver: nfs]`: [the external provisioner](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner) used in the tests needs to be updated to support `volume.kubernetes.io/storage-provisioner`.\r\n* `StatefulSet Basic StatefulSet functionality` tests use external-provisier `rancher.io/local-path` that needs to be updated too. Or a different provisioner must be used.', 'created_at': datetime.datetime(2023, 1, 4, 14, 46, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371225780, 'issue_id': 1518649233, 'author': 'msau42', 'body': 'Can we remove support for beta annotations? The deprecation policy says that beta annotations are part of the API, and a stable API cannot be removed: https://kubernetes.io/docs/reference/using-api/deprecation-policy/', 'created_at': datetime.datetime(2023, 1, 4, 17, 37, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371853894, 'issue_id': 1518649233, 'author': 'mengjiao-liu', 'body': ""> * Tests with `[Driver: nfs]`: [the external provisioner](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner) used in the tests needs to be updated to support `volume.kubernetes.io/storage-provisioner`.\r\n\r\n`[Driver: nfs]`: [the external provisioner](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner) uses `volume.beta.kubernetes.io/storage-provisioner` annotations by using link library [kubernetes-sigs/sig-storage-lib-external-provisioner](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner), which has merged [the PR](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner/pull/110) for updating `volume.beta.kubernetes.io/storage-provisioner` annotation in version [v8.0.0](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner/releases/tag/v8.0.0).\r\n\r\nBut `[Driver: nfs]`: [the external provisioner](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner) is now using nfs-subdir-external-provisioner version [v6.0.0](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/blob/4c82f69eefaa06e1200a165e5f64f6de0e57c796/go.mod#L11), so https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner repo should update the version of library kubernetes-sigs/sig-storage-lib-external-provisioner  to v8.0.0\r\n\r\nPR https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/pull/206 wants to update dependencies to the latest version but hasn't finished it yet.\r\n\r\n> StatefulSet Basic StatefulSet functionality tests use external-provisier rancher.io/local-path that needs to be updated too. Or a different provisioner must be used.\r\n\r\nexternal-provisier [rancher.io/local-path](https://github.com/rancher/local-path-provisioner) library for the same reason as above, using [sigs.k8s.io/sig-storage-lib-external-provisioner v4.0.2-0.20200115000635-36885abbb2bd+incompatible](https://github.com/rancher/local-path-provisioner/blob/3436e3cf83ed0c43f3a2f92f53a5f698718d640a/go.mod#L26) rather than v8.0.0"", 'created_at': datetime.datetime(2023, 1, 5, 7, 5, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371861246, 'issue_id': 1518649233, 'author': 'mengjiao-liu', 'body': '> Can we remove support for beta annotations? The deprecation policy says that beta annotations are part of the API, and a stable API cannot be removed: https://kubernetes.io/docs/reference/using-api/deprecation-policy/\r\n\r\nIn my understanding, beta annotations can be removed referring to  https://kubernetes.io/docs/reference/using-api/deprecation-policy/.\r\n```\r\nThe following rules govern the deprecation of elements of the API. This includes:\r\n- Annotations on REST resources, including ""beta"" annotations but not including ""alpha"" annotations.\r\n```\r\n\r\nhttps://github.com/kubernetes/kubernetes/issues/102357#issuecomment-906226651\r\n```\r\nKubernetes will need to set both beta and GA annotations for quite some time, beta annotations have the same deprecation policy as regular fields \r\n```', 'created_at': datetime.datetime(2023, 1, 5, 7, 15, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372574931, 'issue_id': 1518649233, 'author': 'msau42', 'body': 'The way I read the deprecation policy is that the only way to ""remove"" the annotation is to introduce a new API version with it removed:\r\n```\r\nRule #1: API elements may only be removed by incrementing the version of the API group.\r\n```\r\nSo since PVC and PV are in core/v1, we could only remove the annotation in a core/v2, or consider moving it to a storage/v2.\r\n\r\n@jsafrane wdyt?', 'created_at': datetime.datetime(2023, 1, 5, 18, 22, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373105950, 'issue_id': 1518649233, 'author': 'mengjiao-liu', 'body': '```\r\nRule #1: API elements may only be removed by incrementing the version of the API group.\r\n\r\nOnce an API element has been added to an API group at a particular version, it can not be removed from that version or have its behavior significantly changed, regardless of track.\r\n```\r\n\r\n```\r\nRule #4a: API lifetime is determined by the API stability level\r\n\r\nBeta API versions are deprecated no more than 9 months or 3 minor releases after introduction (whichever is longer), and are no longer served 9 months or 3 minor releases after deprecation (whichever is longer)\r\n```\r\nIndeed, it feels like rule#1 and rule#4a are a little confusing.', 'created_at': datetime.datetime(2023, 1, 6, 3, 44, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373712602, 'issue_id': 1518649233, 'author': 'jsafrane', 'body': '`Beta API versions` is like `apiVersion: v2beta1`. Annotations are like fields in `v1` API. But we dropped support for fields in v1 API already, e.g. `pv.spec.flocker`. Can we remove the beta annotation this way?\r\n\r\nSince even our e2e tests use the beta annotation, IMO the world is not yet ready for that. If we decide we can remove the annotation, can we throw a warning first (+ alert?), wait for couple of releases and then remove it?', 'created_at': datetime.datetime(2023, 1, 6, 14, 30, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373984726, 'issue_id': 1518649233, 'author': 'msau42', 'body': 'I think flocker is an extreme case because the entire project was discontinued.\r\n\r\nI think we could definitely have warnings. I am still not sure we can remove it according to the policy.', 'created_at': datetime.datetime(2023, 1, 6, 18, 26, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375014339, 'issue_id': 1518649233, 'author': 'mengjiao-liu', 'body': ""> Since even our e2e tests use the beta annotation, IMO the world is not yet ready for that. If we decide we can remove the annotation, can we throw a warning first (+ alert?), wait for couple of releases and then remove it?\r\n\r\nYes, I agree with throwing a warning/alert first.\r\n\r\n> `Beta API versions` is like `apiVersion: v2beta1`. Annotations are like fields in `v1` API. But we dropped support for fields in v1 API already, e.g. `pv.spec.flocker`. Can we remove the beta annotation this way?\r\n\r\n@liggitt  Could you please help confirm this problem? We're a little unsure when we can remove this annotation."", 'created_at': datetime.datetime(2023, 1, 9, 1, 55, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375683153, 'issue_id': 1518649233, 'author': 'liggitt', 'body': '> The way I read the deprecation policy is that the only way to ""remove"" the annotation is to introduce a new API version with it removed:\r\n> \r\n> ```\r\n> Rule #1: API elements may only be removed by incrementing the version of the API group.\r\n> ```\r\n\r\nThat rule refers to removing API fields, dropping existing data. In this case, existing data in annotations is still preserved, even if controllers stop actuating on that data. This PR isn\'t removing the ability to set, persist, and retrieve the annotation.\r\n\r\nWhat happens if someone has an existing object with only the beta annotation, and doesn\'t update it. The PVC will sit, unprovisioned, until the GA annotation is added?\r\n\r\nThis seems in-bounds to drop from controller logic, but we should make sure we clean up as much usage as possible, communicate steps clearly.\r\n\r\nI would ask questions like:\r\n1. is the annotation still being relied on by kubernetes provisioners?\r\n2. is the annotation still being set by kubernetes projects?\r\n3. is the annotation still being relied on by non-kubernetes provisioners?\r\n4. is the annotation still being set by non-kubernetes projects?\r\n5. what actions is someone with existing objects with the beta annotation required to take to non-disruptively update to the GA version? is it possible (are all objects that require updating mutable)? are those steps documented and are people in that situation pointed to those docs anywhere?\r\n\r\nAnswering those, cleaning up our usage to ensure we consistently honor the GA version with higher precedence than the beta annotation, and only set the GA version, opening issues for out-of-project uses we find, seem like good first steps.', 'created_at': datetime.datetime(2023, 1, 9, 14, 12, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1409666635, 'issue_id': 1518649233, 'author': 'mengjiao-liu', 'body': '> is the annotation still being relied on by kubernetes provisioners?\r\n\r\nNo, but kubernetes-sigs provisioner [nfs-subdir-external-provisioner](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner ) use it. The provisioner does not update the dependency library kubernetes-sigs/sig-storage-lib-external-provisioner to v8.0.0+.\r\n\r\nPR https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/pull/258 is working on updateing it.\r\n\r\n> is the annotation still being set by kubernetes projects?\r\n\r\nNo, but kubernetes-sigs provisioner nfs-subdir-external-provisioner use it. The provisioner does not update the dependency library kubernetes-sigs/sig-storage-lib-external-provisioner to v8.0.0+.\r\n\r\n> is the annotation still being relied on by non-kubernetes provisioners?\r\n\r\nFrom the e2e tests,[rancher.io/local-path](https://github.com/rancher/local-path-provisioner) provisioner depends on it because rancher.io/local-path provisioner does not update the dependency library sigs/sig-storage-lib-external-provisioner to v8.0.0+.\r\n\r\n\r\n\r\n> what actions is someone with existing objects with the beta annotation required to take to non-disruptively update to the GA version? is it possible (are all objects that require updating mutable)? are those steps documented and are people in that situation pointed to those docs anywhere?\r\n\r\nI looked at this part of the Kubernetes code. This annotation is added to PVC automatically, not manually. Therefore, if the provisioner uses the correct [dependency library](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner), it can be smoothly upgraded to the GA version. In the dependency library https://github.com/kubernetes-sigs\r\n[sig-storage-lib-external-provisioner](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner) now [supports both bata and GA version annotations](https://github.com/kubernetes-csi/external-provisioner/pull/667)(volume.beta.kubernetes.io/storage-provisioner and volume.kubernetes.io/storage-provisioner).\r\n\r\n@divyenpatel @jsafrane help confirm.', 'created_at': datetime.datetime(2023, 1, 31, 2, 53, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1469628433, 'issue_id': 1518649233, 'author': 'k8s-ci-robot', 'body': 'PR needs rebase.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 3, 15, 9, 12, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1588902104, 'issue_id': 1518649233, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 6, 13, 9, 26, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1633936337, 'issue_id': 1518649233, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle rotten\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 7, 13, 9, 58, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1633986784, 'issue_id': 1518649233, 'author': 'mengjiao-liu', 'body': '> > is the annotation still being relied on by kubernetes provisioners?\r\n> \r\n> No, but kubernetes-sigs provisioner [nfs-subdir-external-provisioner](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner) use it. The provisioner does not update the dependency library kubernetes-sigs/sig-storage-lib-external-provisioner to v8.0.0+.\r\n> \r\n> PR [kubernetes-sigs/nfs-subdir-external-provisioner#258](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/pull/258) is working on updateing it.\r\n> \r\n> > is the annotation still being set by kubernetes projects?\r\n> \r\n> No, but kubernetes-sigs provisioner nfs-subdir-external-provisioner use it. The provisioner does not update the dependency library kubernetes-sigs/sig-storage-lib-external-provisioner to v8.0.0+.\r\n> \r\n> > is the annotation still being relied on by non-kubernetes provisioners?\r\n> \r\n> From the e2e tests,[rancher.io/local-path](https://github.com/rancher/local-path-provisioner) provisioner depends on it because rancher.io/local-path provisioner does not update the dependency library sigs/sig-storage-lib-external-provisioner to v8.0.0+.\r\n> \r\n> > what actions is someone with existing objects with the beta annotation required to take to non-disruptively update to the GA version? is it possible (are all objects that require updating mutable)? are those steps documented and are people in that situation pointed to those docs anywhere?\r\n> \r\n> I looked at this part of the Kubernetes code. This annotation is added to PVC automatically, not manually. Therefore, if the provisioner uses the correct [dependency library](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner), it can be smoothly upgraded to the GA version. In the dependency library https://github.com/kubernetes-sigs [sig-storage-lib-external-provisioner](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner) now [supports both bata and GA version annotations](https://github.com/kubernetes-csi/external-provisioner/pull/667)(volume.beta.kubernetes.io/storage-provisioner and volume.kubernetes.io/storage-provisioner).\r\n> \r\n\r\nProcess:\r\n- [x] rancher: https://github.com/rancher/local-path-provisioner/pull/296\r\n- [ ] https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/pull/258', 'created_at': datetime.datetime(2023, 7, 13, 10, 34, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1633987029, 'issue_id': 1518649233, 'author': 'mengjiao-liu', 'body': '/remove-lifecycle rotten', 'created_at': datetime.datetime(2023, 7, 13, 10, 34, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1925509501, 'issue_id': 1518649233, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 2, 4, 1, 13, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1925509528, 'issue_id': 1518649233, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114804#issuecomment-1925509501):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 2, 4, 1, 13, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1925568106, 'issue_id': 1518649233, 'author': 'mengjiao-liu', 'body': 'Need to wait for the [PR](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/pull/258) update of the third-party repo.\r\n/reopen', 'created_at': datetime.datetime(2024, 2, 4, 3, 36, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1925568127, 'issue_id': 1518649233, 'author': 'k8s-ci-robot', 'body': '@mengjiao-liu: Reopened this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114804#issuecomment-1925568106):\n\n>Need to wait for the [PR](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/pull/258) update of the third-party repo.\r\n>/reopen\r\n>\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 2, 4, 3, 36, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1925568263, 'issue_id': 1518649233, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114804#"" title=""Author self-approved"">mengjiao-liu</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign [xing-yang](https://github.com/xing-yang) for approval. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[pkg/controller/volume/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/volume/OWNERS)**\n- **[staging/src/k8s.io/component-helpers/storage/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/storage/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""xing-yang""]} -->', 'created_at': datetime.datetime(2024, 2, 4, 3, 36, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1977948610, 'issue_id': 1518649233, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 3, 5, 4, 30, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1977948660, 'issue_id': 1518649233, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114804#issuecomment-1977948610):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 3, 5, 4, 30, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 2443536482, 'issue_id': 1518649233, 'author': 'mengjiao-liu', 'body': '/reopen', 'created_at': datetime.datetime(2024, 10, 29, 8, 19, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 2443536659, 'issue_id': 1518649233, 'author': 'k8s-ci-robot', 'body': '@mengjiao-liu: Reopened this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114804#issuecomment-2443536482):\n\n>/reopen\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 10, 29, 8, 19, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 2443598516, 'issue_id': 1518649233, 'author': 'carlory', 'body': ""@mengjiao-liu  FYI: some discussion on Slack about the problem statement. https://kubernetes.slack.com/archives/C09QZFCE5/p1698141130960549\r\n\r\nBefore removing it, we need to ensure @liggitt's question is resolved. \r\n\r\n```\r\nbut it's not clear to me what will happen to an existing system with existing persisted objects if support for the annotation is dropped and the cluster is upgraded\r\n```\r\n\r\nWe may need a proposal for how to handle this. My initial thought is like this (but I'm not sure if it's the best way):\r\n\r\n1. Write an automated tool to copy the storage class from the annotation to the spec. i.e. writing a goroutine in the pv controller to do this.\r\n2. Re-send a deprecation warning when the annotation is used. i.e. `deprecated in v1.32, non-functional in v1.35+`\r\n3. Wait for 3 releases to ensure all existing PVs are updated.\r\n4. Remove all the code related to the annotation.\r\n\r\nI'm unsure whether a feature gate `LegacyBetaAnnotationVolumeStorageProvisioner` is needed. \r\n\r\ncc @jsafrane @msau42 @liggitt"", 'created_at': datetime.datetime(2024, 10, 29, 8, 49, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2505675971, 'issue_id': 1518649233, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 11, 28, 9, 43, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2505676219, 'issue_id': 1518649233, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114804#issuecomment-2505675971):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 11, 28, 9, 43, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 2506041069, 'issue_id': 1518649233, 'author': 'mengjiao-liu', 'body': ""/reopen\r\nI'm pushing ahead with the PR https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/pull/358."", 'created_at': datetime.datetime(2024, 11, 28, 12, 46, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 2506041258, 'issue_id': 1518649233, 'author': 'k8s-ci-robot', 'body': ""@mengjiao-liu: Reopened this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114804#issuecomment-2506041069):\n\n>/reopen\r\n>I'm pushing ahead with the PR https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/pull/358.\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2024, 11, 28, 12, 47, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 2506041317, 'issue_id': 1518649233, 'author': 'k8s-ci-robot', 'body': ""Please note that we're already in [Test Freeze](https://github.com/kubernetes/sig-release/blob/master/releases/release_phases.md#test-freeze) for the `release-1.32` branch. This means every merged PR will be automatically fast-forwarded via the periodic [ci-fast-forward](https://testgrid.k8s.io/sig-release-releng-blocking#git-repo-kubernetes-fast-forward) job to the release branch of the upcoming v1.32.0 release.\n\nFast forwards are scheduled to happen every 6 hours, whereas the most recent run was: Thu Nov 28 10:39:15 UTC 2024."", 'created_at': datetime.datetime(2024, 11, 28, 12, 47, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 2564324226, 'issue_id': 1518649233, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 12, 28, 13, 20, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 2564324244, 'issue_id': 1518649233, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114804#issuecomment-2564324226):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 12, 28, 13, 21, 4, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 09:43:31 UTC): @mengjiao-liu: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

mengjiao-liu (Issue Creator) on (2023-01-04 10:45:06 UTC): /retest

k8s-ci-robot on (2023-01-04 11:40:36 UTC): @mengjiao-liu: The following tests **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:

Test name | Commit | Details | Required | Rerun command
--- | --- | --- | --- | ---
pull-kubernetes-e2e-gce | 1af1584a105d4edb426d1969cf509f3700563f1d | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114804/pull-kubernetes-e2e-gce/1610572601975902208/) | true | `/test pull-kubernetes-e2e-gce`
pull-kubernetes-e2e-kind-ipv6 | 1af1584a105d4edb426d1969cf509f3700563f1d | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114804/pull-kubernetes-e2e-kind-ipv6/1610588131944304640) | true | `/test pull-kubernetes-e2e-kind-ipv6`
pull-kubernetes-e2e-kind | 1af1584a105d4edb426d1969cf509f3700563f1d | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114804/pull-kubernetes-e2e-kind/1610588131759755264) | true | `/test pull-kubernetes-e2e-kind`
pull-kubernetes-e2e-gce-100-performance | 1af1584a105d4edb426d1969cf509f3700563f1d | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114804/pull-kubernetes-e2e-gce-100-performance/1610588132061745152) | true | `/test pull-kubernetes-e2e-gce-100-performance`
pull-kubernetes-e2e-gce-storage-slow | 1af1584a105d4edb426d1969cf509f3700563f1d | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114804/pull-kubernetes-e2e-gce-storage-slow/1610588132166602752/) | false | `/test pull-kubernetes-e2e-gce-storage-slow`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114804). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3Amengjiao-liu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->

jsafrane on (2023-01-04 14:46:24 UTC): It looks like the e2e test failures are genuine.

* Tests with `[Driver: nfs]`: [the external provisioner](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner) used in the tests needs to be updated to support `volume.kubernetes.io/storage-provisioner`.
* `StatefulSet Basic StatefulSet functionality` tests use external-provisier `rancher.io/local-path` that needs to be updated too. Or a different provisioner must be used.

msau42 on (2023-01-04 17:37:07 UTC): Can we remove support for beta annotations? The deprecation policy says that beta annotations are part of the API, and a stable API cannot be removed: https://kubernetes.io/docs/reference/using-api/deprecation-policy/

mengjiao-liu (Issue Creator) on (2023-01-05 07:05:53 UTC): `[Driver: nfs]`: [the external provisioner](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner) uses `volume.beta.kubernetes.io/storage-provisioner` annotations by using link library [kubernetes-sigs/sig-storage-lib-external-provisioner](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner), which has merged [the PR](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner/pull/110) for updating `volume.beta.kubernetes.io/storage-provisioner` annotation in version [v8.0.0](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner/releases/tag/v8.0.0).

But `[Driver: nfs]`: [the external provisioner](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner) is now using nfs-subdir-external-provisioner version [v6.0.0](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/blob/4c82f69eefaa06e1200a165e5f64f6de0e57c796/go.mod#L11), so https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner repo should update the version of library kubernetes-sigs/sig-storage-lib-external-provisioner  to v8.0.0

PR https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/pull/206 wants to update dependencies to the latest version but hasn't finished it yet.


external-provisier [rancher.io/local-path](https://github.com/rancher/local-path-provisioner) library for the same reason as above, using [sigs.k8s.io/sig-storage-lib-external-provisioner v4.0.2-0.20200115000635-36885abbb2bd+incompatible](https://github.com/rancher/local-path-provisioner/blob/3436e3cf83ed0c43f3a2f92f53a5f698718d640a/go.mod#L26) rather than v8.0.0

mengjiao-liu (Issue Creator) on (2023-01-05 07:15:17 UTC): In my understanding, beta annotations can be removed referring to  https://kubernetes.io/docs/reference/using-api/deprecation-policy/.
```
The following rules govern the deprecation of elements of the API. This includes:
- Annotations on REST resources, including ""beta"" annotations but not including ""alpha"" annotations.
```

https://github.com/kubernetes/kubernetes/issues/102357#issuecomment-906226651
```
Kubernetes will need to set both beta and GA annotations for quite some time, beta annotations have the same deprecation policy as regular fields 
```

msau42 on (2023-01-05 18:22:11 UTC): The way I read the deprecation policy is that the only way to ""remove"" the annotation is to introduce a new API version with it removed:
```
Rule #1: API elements may only be removed by incrementing the version of the API group.
```
So since PVC and PV are in core/v1, we could only remove the annotation in a core/v2, or consider moving it to a storage/v2.

@jsafrane wdyt?

mengjiao-liu (Issue Creator) on (2023-01-06 03:44:33 UTC): ```
Rule #1: API elements may only be removed by incrementing the version of the API group.

Once an API element has been added to an API group at a particular version, it can not be removed from that version or have its behavior significantly changed, regardless of track.
```

```
Rule #4a: API lifetime is determined by the API stability level

Beta API versions are deprecated no more than 9 months or 3 minor releases after introduction (whichever is longer), and are no longer served 9 months or 3 minor releases after deprecation (whichever is longer)
```
Indeed, it feels like rule#1 and rule#4a are a little confusing.

jsafrane on (2023-01-06 14:30:28 UTC): `Beta API versions` is like `apiVersion: v2beta1`. Annotations are like fields in `v1` API. But we dropped support for fields in v1 API already, e.g. `pv.spec.flocker`. Can we remove the beta annotation this way?

Since even our e2e tests use the beta annotation, IMO the world is not yet ready for that. If we decide we can remove the annotation, can we throw a warning first (+ alert?), wait for couple of releases and then remove it?

msau42 on (2023-01-06 18:26:09 UTC): I think flocker is an extreme case because the entire project was discontinued.

I think we could definitely have warnings. I am still not sure we can remove it according to the policy.

mengjiao-liu (Issue Creator) on (2023-01-09 01:55:34 UTC): Yes, I agree with throwing a warning/alert first.


@liggitt  Could you please help confirm this problem? We're a little unsure when we can remove this annotation.

liggitt on (2023-01-09 14:12:10 UTC): That rule refers to removing API fields, dropping existing data. In this case, existing data in annotations is still preserved, even if controllers stop actuating on that data. This PR isn't removing the ability to set, persist, and retrieve the annotation.

What happens if someone has an existing object with only the beta annotation, and doesn't update it. The PVC will sit, unprovisioned, until the GA annotation is added?

This seems in-bounds to drop from controller logic, but we should make sure we clean up as much usage as possible, communicate steps clearly.

I would ask questions like:
1. is the annotation still being relied on by kubernetes provisioners?
2. is the annotation still being set by kubernetes projects?
3. is the annotation still being relied on by non-kubernetes provisioners?
4. is the annotation still being set by non-kubernetes projects?
5. what actions is someone with existing objects with the beta annotation required to take to non-disruptively update to the GA version? is it possible (are all objects that require updating mutable)? are those steps documented and are people in that situation pointed to those docs anywhere?

Answering those, cleaning up our usage to ensure we consistently honor the GA version with higher precedence than the beta annotation, and only set the GA version, opening issues for out-of-project uses we find, seem like good first steps.

mengjiao-liu (Issue Creator) on (2023-01-31 02:53:36 UTC): No, but kubernetes-sigs provisioner [nfs-subdir-external-provisioner](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner ) use it. The provisioner does not update the dependency library kubernetes-sigs/sig-storage-lib-external-provisioner to v8.0.0+.

PR https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/pull/258 is working on updateing it.


No, but kubernetes-sigs provisioner nfs-subdir-external-provisioner use it. The provisioner does not update the dependency library kubernetes-sigs/sig-storage-lib-external-provisioner to v8.0.0+.


From the e2e tests,[rancher.io/local-path](https://github.com/rancher/local-path-provisioner) provisioner depends on it because rancher.io/local-path provisioner does not update the dependency library sigs/sig-storage-lib-external-provisioner to v8.0.0+.




I looked at this part of the Kubernetes code. This annotation is added to PVC automatically, not manually. Therefore, if the provisioner uses the correct [dependency library](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner), it can be smoothly upgraded to the GA version. In the dependency library https://github.com/kubernetes-sigs
[sig-storage-lib-external-provisioner](https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner) now [supports both bata and GA version annotations](https://github.com/kubernetes-csi/external-provisioner/pull/667)(volume.beta.kubernetes.io/storage-provisioner and volume.kubernetes.io/storage-provisioner).

@divyenpatel @jsafrane help confirm.

k8s-ci-robot on (2023-03-15 09:12:50 UTC): PR needs rebase.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-triage-robot on (2023-06-13 09:26:02 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2023-07-13 09:58:12 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle rotten

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

mengjiao-liu (Issue Creator) on (2023-07-13 10:34:22 UTC): Process:
- [x] rancher: https://github.com/rancher/local-path-provisioner/pull/296
- [ ] https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/pull/258

mengjiao-liu (Issue Creator) on (2023-07-13 10:34:34 UTC): /remove-lifecycle rotten

k8s-triage-robot on (2024-02-04 01:13:27 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2024-02-04 01:13:32 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114804#issuecomment-1925509501):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

mengjiao-liu (Issue Creator) on (2024-02-04 03:36:04 UTC): Need to wait for the [PR](https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/pull/258) update of the third-party repo.
/reopen

k8s-ci-robot on (2024-02-04 03:36:10 UTC): @mengjiao-liu: Reopened this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114804#issuecomment-1925568106):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2024-02-04 03:36:56 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114804#"" title=""Author self-approved"">mengjiao-liu</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign [xing-yang](https://github.com/xing-yang) for approval. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[pkg/controller/volume/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/volume/OWNERS)**
- **[staging/src/k8s.io/component-helpers/storage/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/storage/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""xing-yang""]} -->

k8s-triage-robot on (2024-03-05 04:30:30 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2024-03-05 04:30:34 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114804#issuecomment-1977948610):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

mengjiao-liu (Issue Creator) on (2024-10-29 08:19:17 UTC): /reopen

k8s-ci-robot on (2024-10-29 08:19:23 UTC): @mengjiao-liu: Reopened this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114804#issuecomment-2443536482):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.
</details>

carlory on (2024-10-29 08:49:06 UTC): @mengjiao-liu  FYI: some discussion on Slack about the problem statement. https://kubernetes.slack.com/archives/C09QZFCE5/p1698141130960549

Before removing it, we need to ensure @liggitt's question is resolved. 

```
but it's not clear to me what will happen to an existing system with existing persisted objects if support for the annotation is dropped and the cluster is upgraded
```

We may need a proposal for how to handle this. My initial thought is like this (but I'm not sure if it's the best way):

1. Write an automated tool to copy the storage class from the annotation to the spec. i.e. writing a goroutine in the pv controller to do this.
2. Re-send a deprecation warning when the annotation is used. i.e. `deprecated in v1.32, non-functional in v1.35+`
3. Wait for 3 releases to ensure all existing PVs are updated.
4. Remove all the code related to the annotation.

I'm unsure whether a feature gate `LegacyBetaAnnotationVolumeStorageProvisioner` is needed. 

cc @jsafrane @msau42 @liggitt

k8s-triage-robot on (2024-11-28 09:43:13 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2024-11-28 09:43:19 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114804#issuecomment-2505675971):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.
</details>

mengjiao-liu (Issue Creator) on (2024-11-28 12:46:59 UTC): /reopen
I'm pushing ahead with the PR https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/pull/358.

k8s-ci-robot on (2024-11-28 12:47:05 UTC): @mengjiao-liu: Reopened this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114804#issuecomment-2506041069):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2024-11-28 12:47:06 UTC): Please note that we're already in [Test Freeze](https://github.com/kubernetes/sig-release/blob/master/releases/release_phases.md#test-freeze) for the `release-1.32` branch. This means every merged PR will be automatically fast-forwarded via the periodic [ci-fast-forward](https://testgrid.k8s.io/sig-release-releng-blocking#git-repo-kubernetes-fast-forward) job to the release branch of the upcoming v1.32.0 release.

Fast forwards are scheduled to happen every 6 hours, whereas the most recent run was: Thu Nov 28 10:39:15 UTC 2024.

k8s-triage-robot on (2024-12-28 13:20:57 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2024-12-28 13:21:04 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114804#issuecomment-2564324226):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes-sigs/prow](https://github.com/kubernetes-sigs/prow/issues/new?title=Prow%20issue:) repository.
</details>

"
1518645679,pull_request,closed,,pkg/registry: Replace deprecated pointer function,"Signed-off-by: TommyStarK <thomasmilox@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

If applied this commit will replace the deprecated `StringPtr` function by `String`.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",TommyStarK,2023-01-04 09:40:56+00:00,['wojtek-t'],2023-01-10 21:28:35+00:00,2023-01-04 12:48:00+00:00,https://github.com/kubernetes/kubernetes/pull/114803,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1370695015, 'issue_id': 1518645679, 'author': 'k8s-ci-robot', 'body': ""Hi @TommyStarK. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 4, 9, 41, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370701532, 'issue_id': 1518645679, 'author': 'wojtek-t', 'body': '/sig api-machinery\r\n/ok-to-test\r\n\r\n/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 4, 9, 47, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370701643, 'issue_id': 1518645679, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: f3b28f97694baa89edda4c6cd404fff2dec356fa</details>', 'created_at': datetime.datetime(2023, 1, 4, 9, 47, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370701868, 'issue_id': 1518645679, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114803#"" title=""Author self-approved"">TommyStarK</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114803#issuecomment-1370701532"" title=""Approved"">wojtek-t</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/registry/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/registry/OWNERS)~~ [wojtek-t]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 9, 47, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370781594, 'issue_id': 1518645679, 'author': 'TommyStarK', 'body': '/retest-required', 'created_at': datetime.datetime(2023, 1, 4, 11, 2, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377895260, 'issue_id': 1518645679, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 28, 30, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 09:41:05 UTC): Hi @TommyStarK. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

wojtek-t (Assginee) on (2023-01-04 09:47:02 UTC): /sig api-machinery
/ok-to-test

/lgtm
/approve

k8s-ci-robot on (2023-01-04 09:47:09 UTC): LGTM label has been added.  <details>Git tree hash: f3b28f97694baa89edda4c6cd404fff2dec356fa</details>

k8s-ci-robot on (2023-01-04 09:47:23 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114803#"" title=""Author self-approved"">TommyStarK</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114803#issuecomment-1370701532"" title=""Approved"">wojtek-t</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/registry/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/registry/OWNERS)~~ [wojtek-t]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

TommyStarK (Issue Creator) on (2023-01-04 11:02:43 UTC): /retest-required

cici37 on (2023-01-10 21:28:30 UTC): /triage accepted

"
1518593173,pull_request,closed,,kubelet podresource: fix GetAllocatableResources metrics,"The GetAllocatableResources increase twice the PodResourcesEndpointRequestsTotalCount This PR fix this.

Signed-off-by: Moshe Levi <moshele@nvidia.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind bug
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
NONE
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note

```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",moshe010,2023-01-04 09:07:19+00:00,"['mrunalp', 'klueska', 'derekwaynecarr', 'dchen1107', 'bart0sh', 'swatisehgal', 'ffromani']",2023-01-11 14:43:47+00:00,2023-01-11 14:43:45+00:00,https://github.com/kubernetes/kubernetes/pull/114802,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('area/kubelet', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1370649570, 'issue_id': 1518593173, 'author': 'k8s-ci-robot', 'body': ""Hi @moshe010. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 4, 9, 7, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373149033, 'issue_id': 1518593173, 'author': 'bart0sh', 'body': '/priority important-soon\r\n/triage accepted\r\n/ok-to-test', 'created_at': datetime.datetime(2023, 1, 6, 5, 4, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373155985, 'issue_id': 1518593173, 'author': 'bart0sh', 'body': '/release-note-none', 'created_at': datetime.datetime(2023, 1, 6, 5, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373210426, 'issue_id': 1518593173, 'author': 'bart0sh', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 6, 6, 53, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373210471, 'issue_id': 1518593173, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: d245e7f9c228cb3949721d7ba6b4456e8f1efb94</details>', 'created_at': datetime.datetime(2023, 1, 6, 6, 53, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373210666, 'issue_id': 1518593173, 'author': 'bart0sh', 'body': '/assign @derekwaynecarr @dchen1107 @mrunalp', 'created_at': datetime.datetime(2023, 1, 6, 6, 53, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378698408, 'issue_id': 1518593173, 'author': 'ffromani', 'body': '/lgtm\r\n(just agreeing here, was already added)', 'created_at': datetime.datetime(2023, 1, 11, 12, 47, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378699606, 'issue_id': 1518593173, 'author': 'swatisehgal', 'body': '/lgtm\r\n\r\n/assign @klueska \r\nfor approval', 'created_at': datetime.datetime(2023, 1, 11, 12, 48, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378699704, 'issue_id': 1518593173, 'author': 'klueska', 'body': '/approve', 'created_at': datetime.datetime(2023, 1, 11, 12, 48, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378700204, 'issue_id': 1518593173, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114802#issuecomment-1378699704"" title=""Approved"">klueska</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114802#"" title=""Author self-approved"">moshe010</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/OWNERS)~~ [klueska]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 11, 12, 49, 5, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 09:07:28 UTC): Hi @moshe010. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

bart0sh (Assginee) on (2023-01-06 05:04:19 UTC): /priority important-soon
/triage accepted
/ok-to-test

bart0sh (Assginee) on (2023-01-06 05:15:00 UTC): /release-note-none

bart0sh (Assginee) on (2023-01-06 06:53:05 UTC): /lgtm

k8s-ci-robot on (2023-01-06 06:53:11 UTC): LGTM label has been added.  <details>Git tree hash: d245e7f9c228cb3949721d7ba6b4456e8f1efb94</details>

bart0sh (Assginee) on (2023-01-06 06:53:37 UTC): /assign @derekwaynecarr @dchen1107 @mrunalp

ffromani (Assginee) on (2023-01-11 12:47:26 UTC): /lgtm
(just agreeing here, was already added)

swatisehgal (Assginee) on (2023-01-11 12:48:29 UTC): /lgtm

/assign @klueska 
for approval

klueska (Assginee) on (2023-01-11 12:48:35 UTC): /approve

k8s-ci-robot on (2023-01-11 12:49:05 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114802#issuecomment-1378699704"" title=""Approved"">klueska</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114802#"" title=""Author self-approved"">moshe010</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/OWNERS)~~ [klueska]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1518546792,pull_request,closed,,Remove heapster rule from system:controller:horizontal-pod-autoscaler clusterrole,"
<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind cleanup
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
Followup #90368, remove heapster rule from `system:controller:horizontal-pod-autoscaler` clusterrole.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",SataQiu,2023-01-04 08:31:58+00:00,['liggitt'],2023-01-04 16:24:03+00:00,2023-01-04 16:24:01+00:00,https://github.com/kubernetes/kubernetes/pull/114801,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1370616876, 'issue_id': 1518546792, 'author': 'k8s-ci-robot', 'body': '@SataQiu: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 8, 32, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370687891, 'issue_id': 1518546792, 'author': 'SataQiu', 'body': '/test pull-kubernetes-e2e-gce', 'created_at': datetime.datetime(2023, 1, 4, 9, 34, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371057642, 'issue_id': 1518546792, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 4, 15, 15, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371057795, 'issue_id': 1518546792, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: ecc1fd009d4ab04472d55ea81c133edd5e17272a</details>', 'created_at': datetime.datetime(2023, 1, 4, 15, 15, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371058364, 'issue_id': 1518546792, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114801#issuecomment-1371057642"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114801#"" title=""Author self-approved"">SataQiu</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[plugin/pkg/auth/authorizer/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/plugin/pkg/auth/authorizer/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 15, 16, 20, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 08:32:06 UTC): @SataQiu: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

SataQiu (Issue Creator) on (2023-01-04 09:34:26 UTC): /test pull-kubernetes-e2e-gce

liggitt (Assginee) on (2023-01-04 15:15:43 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-04 15:15:50 UTC): LGTM label has been added.  <details>Git tree hash: ecc1fd009d4ab04472d55ea81c133edd5e17272a</details>

k8s-ci-robot on (2023-01-04 15:16:20 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114801#issuecomment-1371057642"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114801#"" title=""Author self-approved"">SataQiu</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[plugin/pkg/auth/authorizer/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/plugin/pkg/auth/authorizer/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1518490489,pull_request,closed,,Capture spew.Sprintf() with all our favorite config into a util func,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind cleanup
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
A wrapper of spew.Sprintf, so to pretty print object with a util function
#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #8976

#### Special notes for your reviewer:
Discussed with @thockin in thread https://github.com/kubernetes/utils/pull/226#issuecomment-1279600221, we will do this cleanup in k/k first.
#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
None
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs
None
```
",haoruan,2023-01-04 07:49:52+00:00,"['thockin', 'haircommander']",2023-04-11 22:35:00+00:00,2023-04-11 22:34:58+00:00,https://github.com/kubernetes/kubernetes/pull/114800,"[('area/test', None), ('area/kubelet', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('area/e2e-test-framework', 'Issues or PRs related to refactoring the kubernetes e2e test framework'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1370582475, 'issue_id': 1518490489, 'author': 'k8s-ci-robot', 'body': ""Hi @haoruan. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 4, 7, 50, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370701195, 'issue_id': 1518490489, 'author': 'bart0sh', 'body': '/priority important-longterm\r\n/triage accepted\r\n/ok-to-test', 'created_at': datetime.datetime(2023, 1, 4, 9, 46, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370860089, 'issue_id': 1518490489, 'author': 'bart0sh', 'body': '/priority important-longterm\r\n/triage accepted', 'created_at': datetime.datetime(2023, 1, 4, 12, 19, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1398913374, 'issue_id': 1518490489, 'author': 'haircommander', 'body': '/lgtm\r\n\r\nfor SIG node', 'created_at': datetime.datetime(2023, 1, 20, 20, 43, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1398913478, 'issue_id': 1518490489, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 16bd13613b6db556c5d7c6958ddee3c5a6014305</details>', 'created_at': datetime.datetime(2023, 1, 20, 20, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1418383281, 'issue_id': 1518490489, 'author': 'haoruan', 'body': '@thockin could you approve it so we can continue the cleanup?', 'created_at': datetime.datetime(2023, 2, 6, 1, 58, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1439764457, 'issue_id': 1518490489, 'author': 'haoruan', 'body': '/retest', 'created_at': datetime.datetime(2023, 2, 22, 10, 21, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1446742704, 'issue_id': 1518490489, 'author': 'nilekhc', 'body': '@thockin Could you please review this PR since you open the original issue?', 'created_at': datetime.datetime(2023, 2, 27, 17, 26, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1467157502, 'issue_id': 1518490489, 'author': 'thockin', 'body': ""Copying context from other PR:\r\n\r\nhttps://go.dev/play/p/L9rXnbLzuOu\r\n\r\nSpew is unmaintained and large. I am sure we could fork it and make it do what we want but....ugh\r\n\r\nkr.Pretty is already used transitively, though I can't see how to make it's output not include newlines.\r\n\r\ngithub.com/kylelemons/godebug/pretty is good output but seems abandoned\r\n\r\n\r\nlitter is nice output, but is a net new dep. If we could get 3 or 4 deps which use spew to switch, we could justify this as a one-for-one.\r\n\r\nPlan: \r\n1) move this kubernetes/kubernetes/pkg/util\r\n2) convert all callsites in k/k to use this new function (same PR)\r\n    == We should have only one place that uses spew\r\n3) we work with a few deps to kill off spew\r\n4) we convert it to litter or something else\r\n    == No deps on spew\r\n5) Move to kubernetes/utils"", 'created_at': datetime.datetime(2023, 3, 14, 0, 19, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1482316435, 'issue_id': 1518490489, 'author': 'haoruan', 'body': ""Sure, let's put it in apimachinery\r\n\r\n> Rather than 2 implementations of this, can we get away with just the one in apimachinery?\r\n> \r\n> I realize that replacing this with another pretty-print (other than spew) might be challenging because the hash is being used in durable ways, but we can cross that bridge when we get there.\r\n> \r\n> Looking at apimachinery I see more opportunities for cleanup - util/diff seems to almost always be used to test equivalence, but it's a pretty expensive way to do that. :) Another PR, for another day."", 'created_at': datetime.datetime(2023, 3, 24, 6, 28, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1482797833, 'issue_id': 1518490489, 'author': 'haoruan', 'body': '/retest', 'created_at': datetime.datetime(2023, 3, 24, 13, 27, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1485370178, 'issue_id': 1518490489, 'author': 'thockin', 'body': 'Thanks!\r\n\r\n/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 3, 27, 15, 43, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1485370461, 'issue_id': 1518490489, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 1a457f986edca8486027fc8a384892984c4bd0f3</details>', 'created_at': datetime.datetime(2023, 3, 27, 15, 43, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1485371128, 'issue_id': 1518490489, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114800#"" title=""Author self-approved"">haoruan</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114800#issuecomment-1485370178"" title=""Approved"">thockin</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/OWNERS)~~ [thockin]\n- ~~[pkg/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/api/OWNERS)~~ [thockin]\n- ~~[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)~~ [thockin]\n- ~~[staging/src/k8s.io/apimachinery/pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/OWNERS)~~ [thockin]\n- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [thockin]\n- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [thockin]\n- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [thockin]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 3, 27, 15, 43, 25, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 07:50:01 UTC): Hi @haoruan. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

bart0sh on (2023-01-04 09:46:40 UTC): /priority important-longterm
/triage accepted
/ok-to-test

bart0sh on (2023-01-04 12:19:25 UTC): /priority important-longterm
/triage accepted

haircommander (Assginee) on (2023-01-20 20:43:52 UTC): /lgtm

for SIG node

k8s-ci-robot on (2023-01-20 20:44:00 UTC): LGTM label has been added.  <details>Git tree hash: 16bd13613b6db556c5d7c6958ddee3c5a6014305</details>

haoruan (Issue Creator) on (2023-02-06 01:58:44 UTC): @thockin could you approve it so we can continue the cleanup?

haoruan (Issue Creator) on (2023-02-22 10:21:13 UTC): /retest

nilekhc on (2023-02-27 17:26:51 UTC): @thockin Could you please review this PR since you open the original issue?

thockin (Assginee) on (2023-03-14 00:19:11 UTC): Copying context from other PR:

https://go.dev/play/p/L9rXnbLzuOu

Spew is unmaintained and large. I am sure we could fork it and make it do what we want but....ugh

kr.Pretty is already used transitively, though I can't see how to make it's output not include newlines.

github.com/kylelemons/godebug/pretty is good output but seems abandoned


litter is nice output, but is a net new dep. If we could get 3 or 4 deps which use spew to switch, we could justify this as a one-for-one.

Plan: 
1) move this kubernetes/kubernetes/pkg/util
2) convert all callsites in k/k to use this new function (same PR)
    == We should have only one place that uses spew
3) we work with a few deps to kill off spew
4) we convert it to litter or something else
    == No deps on spew
5) Move to kubernetes/utils

haoruan (Issue Creator) on (2023-03-24 06:28:50 UTC): Sure, let's put it in apimachinery

haoruan (Issue Creator) on (2023-03-24 13:27:38 UTC): /retest

thockin (Assginee) on (2023-03-27 15:43:01 UTC): Thanks!

/lgtm
/approve

k8s-ci-robot on (2023-03-27 15:43:08 UTC): LGTM label has been added.  <details>Git tree hash: 1a457f986edca8486027fc8a384892984c4bd0f3</details>

k8s-ci-robot on (2023-03-27 15:43:25 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114800#"" title=""Author self-approved"">haoruan</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114800#issuecomment-1485370178"" title=""Approved"">thockin</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/OWNERS)~~ [thockin]
- ~~[pkg/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/api/OWNERS)~~ [thockin]
- ~~[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)~~ [thockin]
- ~~[staging/src/k8s.io/apimachinery/pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/OWNERS)~~ [thockin]
- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [thockin]
- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [thockin]
- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [thockin]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1518210387,pull_request,closed,,Code refactor for readability in `RunFilterPlugins`,"Signed-off-by: Kante Yin <kerthcet@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/sig scheduling
/kind cleanup

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes https://github.com/kubernetes/kubernetes/pull/114629#discussion_r1060869538

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",kerthcet,2023-01-04 02:52:07+00:00,"['Huang-Wei', 'sanposhiho']",2023-01-10 02:30:35+00:00,2023-01-10 01:31:13+00:00,https://github.com/kubernetes/kubernetes/pull/114798,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1370431389, 'issue_id': 1518210387, 'author': 'k8s-ci-robot', 'body': '@kerthcet: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 2, 52, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370431435, 'issue_id': 1518210387, 'author': 'kerthcet', 'body': '/assign @Huang-Wei', 'created_at': datetime.datetime(2023, 1, 4, 2, 52, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370434008, 'issue_id': 1518210387, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 365e7ce9e519ac38008793f422621283d7f4b5f7</details>', 'created_at': datetime.datetime(2023, 1, 4, 2, 58, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374741934, 'issue_id': 1518210387, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 42c7eb92612c7e66dfae5c2294396798622ad890</details>', 'created_at': datetime.datetime(2023, 1, 8, 7, 34, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375025233, 'issue_id': 1518210387, 'author': 'kerthcet', 'body': 'cc @Huang-Wei , this addressed the comment https://github.com/kubernetes/kubernetes/pull/114629#discussion_r1060869538', 'created_at': datetime.datetime(2023, 1, 9, 2, 11, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376539658, 'issue_id': 1518210387, 'author': 'Huang-Wei', 'body': '/approve\r\n\r\nThanks.', 'created_at': datetime.datetime(2023, 1, 10, 0, 25, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376540051, 'issue_id': 1518210387, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114798#issuecomment-1376539658"" title=""Approved"">Huang-Wei</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114798#"" title=""Author self-approved"">kerthcet</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114798#pullrequestreview-1239741035"" title=""LGTM"">sanposhiho</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [Huang-Wei]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 10, 0, 26, 15, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 02:52:14 UTC): @kerthcet: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

kerthcet (Issue Creator) on (2023-01-04 02:52:19 UTC): /assign @Huang-Wei

k8s-ci-robot on (2023-01-04 02:58:35 UTC): LGTM label has been added.  <details>Git tree hash: 365e7ce9e519ac38008793f422621283d7f4b5f7</details>

k8s-ci-robot on (2023-01-08 07:34:36 UTC): LGTM label has been added.  <details>Git tree hash: 42c7eb92612c7e66dfae5c2294396798622ad890</details>

kerthcet (Issue Creator) on (2023-01-09 02:11:49 UTC): cc @Huang-Wei , this addressed the comment https://github.com/kubernetes/kubernetes/pull/114629#discussion_r1060869538

Huang-Wei (Assginee) on (2023-01-10 00:25:52 UTC): /approve

Thanks.

k8s-ci-robot on (2023-01-10 00:26:15 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114798#issuecomment-1376539658"" title=""Approved"">Huang-Wei</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114798#"" title=""Author self-approved"">kerthcet</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114798#pullrequestreview-1239741035"" title=""LGTM"">sanposhiho</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [Huang-Wei]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1518143515,pull_request,closed,,cleanup(scheduler_perf): remove all removed feature gates,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup
/kind failing-test

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

Remove removed feature gates from scheduler_perf's config.

https://prow.k8s.io/view/gs/kubernetes-jenkins/logs/ci-benchmark-scheduler-perf-master/1609847120766963712

```
BenchmarkPerfScheduling/SchedulingMigratedInTreePVs/500Nodes
panic: feature ""CSIMigration"" is not registered in FeatureGate ""k8s.io/apiserver/pkg/util/feature/feature_gate.go:28""
```


#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #114795

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",sanposhiho,2023-01-04 01:08:58+00:00,"['alculquicondor', 'kerthcet']",2023-01-07 07:52:11+00:00,2023-01-04 22:30:33+00:00,https://github.com/kubernetes/kubernetes/pull/114796,"[('area/test', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('kind/failing-test', 'Categorizes issue or PR as related to a consistently or frequently failing test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1370381642, 'issue_id': 1518143515, 'author': 'k8s-ci-robot', 'body': '@sanposhiho: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 4, 1, 9, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370537539, 'issue_id': 1518143515, 'author': 'kerthcet', 'body': 'Thanks @sanposhiho \r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 4, 6, 37, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370537596, 'issue_id': 1518143515, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: db336c570938734bdc3aec1575557ab379f0f017</details>', 'created_at': datetime.datetime(2023, 1, 4, 6, 37, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370569928, 'issue_id': 1518143515, 'author': 'sanposhiho', 'body': '/assign @alculquicondor', 'created_at': datetime.datetime(2023, 1, 4, 7, 30, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371070324, 'issue_id': 1518143515, 'author': 'alculquicondor', 'body': '/approve', 'created_at': datetime.datetime(2023, 1, 4, 15, 25, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371193690, 'issue_id': 1518143515, 'author': 'sanposhiho', 'body': ""@alculquicondor \r\n\r\n`/approve` somehow didn't work. 🤔 \r\nCould you `/approve` again?"", 'created_at': datetime.datetime(2023, 1, 4, 17, 8, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371252926, 'issue_id': 1518143515, 'author': 'alculquicondor', 'body': '/approve', 'created_at': datetime.datetime(2023, 1, 4, 18, 5, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371253355, 'issue_id': 1518143515, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114796#issuecomment-1371252926"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114796#"" title=""Author self-approved"">sanposhiho</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[test/integration/scheduler_perf/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/integration/scheduler_perf/OWNERS)~~ [alculquicondor]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 18, 5, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374408576, 'issue_id': 1518143515, 'author': 'sanposhiho', 'body': '/sig scheduling', 'created_at': datetime.datetime(2023, 1, 7, 7, 52, 9, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-04 01:09:05 UTC): @sanposhiho: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

kerthcet (Assginee) on (2023-01-04 06:37:06 UTC): Thanks @sanposhiho 
/lgtm

k8s-ci-robot on (2023-01-04 06:37:12 UTC): LGTM label has been added.  <details>Git tree hash: db336c570938734bdc3aec1575557ab379f0f017</details>

sanposhiho (Issue Creator) on (2023-01-04 07:30:02 UTC): /assign @alculquicondor

alculquicondor (Assginee) on (2023-01-04 15:25:52 UTC): /approve

sanposhiho (Issue Creator) on (2023-01-04 17:08:20 UTC): @alculquicondor 

`/approve` somehow didn't work. 🤔 
Could you `/approve` again?

alculquicondor (Assginee) on (2023-01-04 18:05:29 UTC): /approve

k8s-ci-robot on (2023-01-04 18:05:53 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114796#issuecomment-1371252926"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114796#"" title=""Author self-approved"">sanposhiho</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/integration/scheduler_perf/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/integration/scheduler_perf/OWNERS)~~ [alculquicondor]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

sanposhiho (Issue Creator) on (2023-01-07 07:52:09 UTC): /sig scheduling

"
1518106189,pull_request,closed,,Do not N^2 loading webhook configurations,"This adds a processing delay to deduplicate notifications to reload webhook configurations. Solves N^2 behavior on startup and prevents useless work when webhooks change in rapid succession.

#### What type of PR is this?

/kind bug
/kind cleanup

#### What this PR does / why we need it:

Fixes N^2 behavior I noticed while working on #113985.


#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
kube-apiserver: removed N^2 behavior loading webhook configurations.
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",lavalamp,2023-01-04 00:38:34+00:00,['apelisse'],2023-01-13 00:03:26+00:00,2023-01-13 00:03:24+00:00,https://github.com/kubernetes/kubernetes/pull/114794,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('area/kubectl', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/cloudprovider', None), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/XL', 'Denotes a PR that changes 500-999 lines, ignoring generated files.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('area/code-generation', ''), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1370366774, 'issue_id': 1518106189, 'author': 'lavalamp', 'body': ""I'll add corresponding changes to the mutating version of this file once someone looks at this."", 'created_at': datetime.datetime(2023, 1, 4, 0, 39, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370366864, 'issue_id': 1518106189, 'author': 'lavalamp', 'body': '/sig api-machinery', 'created_at': datetime.datetime(2023, 1, 4, 0, 39, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371291075, 'issue_id': 1518106189, 'author': 'lavalamp', 'body': ""The test fail is real, the goroutine doesn't get cleaned up."", 'created_at': datetime.datetime(2023, 1, 4, 18, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373824343, 'issue_id': 1518106189, 'author': 'deads2k', 'body': ""having `updateConfiguration` handle the complete list of validating or mutating admission webhooks ensures \r\n\r\n1. order of updates to admission webhooks will always be honored. It is impossible to update-2 for webhook/B to take effect before update-1 for webhook/A to take effect.\r\n\r\nBut the only known failure mode is actually the lister.List call itself: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/admission/configuration/validating_webhook_manager.go#L77-L84\r\n\r\nWith the new ability to ensure processing of the initial list has happened (your previous hasSync'd fix) and the synchronous processing done in the add/update/delete func, is there still value in having the `List` versus having special handling for delete and performing a running adding/remove, perhaps with a periodic sanity check for a diff with a lock and panic on failure?"", 'created_at': datetime.datetime(2023, 1, 6, 15, 50, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373903415, 'issue_id': 1518106189, 'author': 'lavalamp', 'body': ""> With the new ability to ensure processing of the initial list has happened (your previous hasSync'd fix) and the synchronous processing done in the add/update/delete func, is there still value in having the List versus having special handling for delete and performing a running adding/remove, perhaps with a periodic sanity check for a diff with a lock and panic on failure?\r\n\r\nI think it was probably just done this way for simplicity? But yes, it could be changed to not list. I think that would be more invasive? This change is pretty small. And waiting and then listing once is probably more efficient on startup than doing N inserts (not that it matters much for this code -- it's about the precedent for me)."", 'created_at': datetime.datetime(2023, 1, 6, 17, 7, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373994069, 'issue_id': 1518106189, 'author': 'deads2k', 'body': '> And waiting and then listing once is probably more efficient on startup than doing N inserts (not that it matters much for this code -- it\'s about the precedent for me)\r\n\r\nWhich precedent do we want?  Prior to your PR that tracks ""have all event handlers handled"", this was the state of the art.  After your PR, it is possible to build reliable tracking without the list and I think that combined with a periodic consistency checker, is likely how I would suggest people handle it.  Would you suggest using a list plus a delay instead?', 'created_at': datetime.datetime(2023, 1, 6, 18, 37, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376493350, 'issue_id': 1518106189, 'author': 'lavalamp', 'body': ""Switched from the delay to lazy computation. (Incremental computation isn't efficient because I'd have to switch to a map from a list for intermediate storage and there would be a lot of copying.)\r\n\r\nThe tests got longer because they were broken previously (not actually testing the informer delivery notification) and I fixed them.\r\n\r\nWhere should the Lazy type go?"", 'created_at': datetime.datetime(2023, 1, 9, 23, 35, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377895750, 'issue_id': 1518106189, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 28, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380770030, 'issue_id': 1518106189, 'author': 'logicalhan', 'body': '/remove-sig instrumentation', 'created_at': datetime.datetime(2023, 1, 12, 17, 37, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380965665, 'issue_id': 1518106189, 'author': 'apelisse', 'body': ""/lgtm\r\n/approve\r\nIf you want to make the test external, I don't really care:\r\n/hold"", 'created_at': datetime.datetime(2023, 1, 12, 20, 34, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380965782, 'issue_id': 1518106189, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: c71b82421fff3463a7870a49e2f3c4cbb662f5bd</details>', 'created_at': datetime.datetime(2023, 1, 12, 20, 34, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380966009, 'issue_id': 1518106189, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114794#issuecomment-1380965665"" title=""Approved"">apelisse</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114794#"" title=""Author self-approved"">lavalamp</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [lavalamp]\n- ~~[staging/src/k8s.io/client-go/tools/cache/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/tools/cache/OWNERS)~~ [lavalamp]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 12, 20, 34, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380989333, 'issue_id': 1518106189, 'author': 'apelisse', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 12, 21, 1, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380989414, 'issue_id': 1518106189, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 2d1ecb82975186122e94b77b4c2d206724b92e7c</details>', 'created_at': datetime.datetime(2023, 1, 12, 21, 1, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380991157, 'issue_id': 1518106189, 'author': 'lavalamp', 'body': '/hold cancel', 'created_at': datetime.datetime(2023, 1, 12, 21, 3, 42, tzinfo=datetime.timezone.utc)}]","lavalamp (Issue Creator) on (2023-01-04 00:39:12 UTC): I'll add corresponding changes to the mutating version of this file once someone looks at this.

lavalamp (Issue Creator) on (2023-01-04 00:39:21 UTC): /sig api-machinery

lavalamp (Issue Creator) on (2023-01-04 18:45:00 UTC): The test fail is real, the goroutine doesn't get cleaned up.

deads2k on (2023-01-06 15:50:48 UTC): having `updateConfiguration` handle the complete list of validating or mutating admission webhooks ensures 

1. order of updates to admission webhooks will always be honored. It is impossible to update-2 for webhook/B to take effect before update-1 for webhook/A to take effect.

But the only known failure mode is actually the lister.List call itself: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/admission/configuration/validating_webhook_manager.go#L77-L84

With the new ability to ensure processing of the initial list has happened (your previous hasSync'd fix) and the synchronous processing done in the add/update/delete func, is there still value in having the `List` versus having special handling for delete and performing a running adding/remove, perhaps with a periodic sanity check for a diff with a lock and panic on failure?

lavalamp (Issue Creator) on (2023-01-06 17:07:37 UTC): I think it was probably just done this way for simplicity? But yes, it could be changed to not list. I think that would be more invasive? This change is pretty small. And waiting and then listing once is probably more efficient on startup than doing N inserts (not that it matters much for this code -- it's about the precedent for me).

deads2k on (2023-01-06 18:37:58 UTC): Which precedent do we want?  Prior to your PR that tracks ""have all event handlers handled"", this was the state of the art.  After your PR, it is possible to build reliable tracking without the list and I think that combined with a periodic consistency checker, is likely how I would suggest people handle it.  Would you suggest using a list plus a delay instead?

lavalamp (Issue Creator) on (2023-01-09 23:35:10 UTC): Switched from the delay to lazy computation. (Incremental computation isn't efficient because I'd have to switch to a map from a list for intermediate storage and there would be a lot of copying.)

The tests got longer because they were broken previously (not actually testing the informer delivery notification) and I fixed them.

Where should the Lazy type go?

cici37 on (2023-01-10 21:28:49 UTC): /triage accepted

logicalhan on (2023-01-12 17:37:52 UTC): /remove-sig instrumentation

apelisse (Assginee) on (2023-01-12 20:34:24 UTC): /lgtm
/approve
If you want to make the test external, I don't really care:
/hold

k8s-ci-robot on (2023-01-12 20:34:32 UTC): LGTM label has been added.  <details>Git tree hash: c71b82421fff3463a7870a49e2f3c4cbb662f5bd</details>

k8s-ci-robot on (2023-01-12 20:34:48 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114794#issuecomment-1380965665"" title=""Approved"">apelisse</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114794#"" title=""Author self-approved"">lavalamp</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [lavalamp]
- ~~[staging/src/k8s.io/client-go/tools/cache/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/tools/cache/OWNERS)~~ [lavalamp]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

apelisse (Assginee) on (2023-01-12 21:01:30 UTC): /lgtm

k8s-ci-robot on (2023-01-12 21:01:36 UTC): LGTM label has been added.  <details>Git tree hash: 2d1ecb82975186122e94b77b4c2d206724b92e7c</details>

lavalamp (Issue Creator) on (2023-01-12 21:03:42 UTC): /hold cancel

"
1517999264,pull_request,closed,,Added Warning log callback in client-go loading rules,"Also test that the log is not shown when v=1 is not set. Because a klog warning by default is not allowed in library code.

Thanks to [Debanitrkl](https://github.com/Debanitrkl)

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind bug

#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:

Fixes #94428

#### Special notes for your reviewer:

This finishes review requested changes by [yliaog](https://github.com/yliaog) on stale PR https://github.com/kubernetes/kubernetes/pull/108510

#### Does this PR introduce a user-facing change?

```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

```docs

```
",illume,2023-01-03 22:33:36+00:00,['yliaog'],2023-05-25 13:47:41+00:00,2023-05-25 13:47:33+00:00,https://github.com/kubernetes/kubernetes/pull/114793,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('needs-rebase', 'Indicates a PR cannot be merged because it has merge conflicts with HEAD.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('do-not-merge/hold', 'Indicates that a PR should not merge because someone has issued a /hold command.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1370292528, 'issue_id': 1517999264, 'author': 'linux-foundation-easycla[bot]', 'body': '<a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: illume / name: René Dudfield  (265bce42b053a0b1da9e46f74cdee398b45af368)</li></ul>', 'created_at': datetime.datetime(2023, 1, 3, 22, 33, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370292568, 'issue_id': 1517999264, 'author': 'k8s-ci-robot', 'body': ""Welcome @illume! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:"", 'created_at': datetime.datetime(2023, 1, 3, 22, 33, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370292578, 'issue_id': 1517999264, 'author': 'k8s-ci-robot', 'body': ""Hi @illume. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 3, 22, 33, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377897288, 'issue_id': 1517999264, 'author': 'cici37', 'body': '/assign @yliaog \r\n/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 29, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1384441329, 'issue_id': 1517999264, 'author': 'yliaog', 'body': '/ok-to-test', 'created_at': datetime.datetime(2023, 1, 16, 18, 56, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396388123, 'issue_id': 1517999264, 'author': 'yliaog', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 19, 3, 16, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396388178, 'issue_id': 1517999264, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 377f22d4d67b813fb1b8449aba7e30f9110917c3</details>', 'created_at': datetime.datetime(2023, 1, 19, 3, 16, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396388355, 'issue_id': 1517999264, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114793#"" title=""Author self-approved"">illume</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114793#issuecomment-1396388123"" title=""Approved"">yliaog</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [yliaog]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 19, 3, 16, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396453777, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 19, 5, 20, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396585753, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 19, 8, 8, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396784863, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 19, 10, 56, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396999035, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 19, 13, 44, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1397249733, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 19, 16, 25, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1397474432, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 19, 19, 9, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1397659868, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 19, 21, 54, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1397787810, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 20, 0, 39, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1397881316, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 20, 3, 27, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1397961952, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 20, 6, 9, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1398083001, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 20, 8, 51, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1398256569, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 20, 11, 33, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1398460332, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 20, 14, 20, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1398680615, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 20, 17, 8, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1398863831, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 20, 19, 56, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399037013, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 20, 22, 40, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399142220, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 21, 1, 41, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399177056, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 21, 4, 41, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399198481, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 21, 7, 24, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399221743, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 21, 10, 9, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399247012, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 21, 12, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399275902, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 21, 15, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399311188, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 21, 18, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399340914, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 21, 22, 1, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399367394, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 22, 0, 41, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399394536, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 22, 3, 21, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399411800, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 22, 6, 5, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399433041, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 22, 8, 53, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399461749, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 22, 11, 41, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399504584, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 22, 14, 29, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399550810, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 22, 17, 17, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399591919, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 22, 19, 59, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399600861, 'issue_id': 1517999264, 'author': 'aojea', 'body': 'failure seems related \r\n\r\n> > \t0s\r\n> {Failed  === RUN   TestNoWarningMissingFiles\r\n>     loader_test.go:193: log not expected: ""Config not found: bogus""', 'created_at': datetime.datetime(2023, 1, 22, 20, 36, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399628750, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 22, 22, 41, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399676944, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 23, 1, 29, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399775851, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 23, 4, 12, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399886222, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 23, 6, 52, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1400038541, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 23, 9, 32, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1400243416, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 23, 12, 12, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1400481546, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 23, 14, 52, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1400721458, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 23, 17, 32, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1400924489, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 23, 20, 17, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1401126551, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 23, 23, 5, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1401299469, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 24, 1, 53, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1401395225, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 24, 4, 53, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1401511281, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 24, 7, 53, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1401704992, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 24, 10, 33, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1401933249, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 24, 13, 15, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1402186443, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 24, 15, 58, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1402423003, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 24, 18, 42, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1402683352, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 24, 21, 22, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1402851388, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 25, 0, 3, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1403022231, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 25, 2, 45, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1403116293, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 25, 5, 29, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1403242021, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 25, 8, 17, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1403439776, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 25, 11, 5, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1403657441, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 25, 13, 51, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1403894551, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 25, 16, 32, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1404108658, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 25, 19, 13, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1404275554, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 25, 21, 53, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1404411027, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 26, 0, 38, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1404523877, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 26, 3, 26, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1404600951, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 26, 6, 14, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1404715488, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 26, 9, 2, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1404895100, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 26, 11, 50, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1405087154, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 26, 14, 30, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1405186750, 'issue_id': 1517999264, 'author': 'dims', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 26, 15, 31, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1405402381, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 26, 18, 10, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1405633752, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 26, 20, 50, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1405811669, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 26, 23, 30, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1405932020, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 27, 2, 11, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1406022222, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 27, 4, 57, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1406132985, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 27, 7, 45, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1406314254, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 27, 10, 33, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1406503907, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 27, 13, 21, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1406587727, 'issue_id': 1517999264, 'author': 'pacoxu', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 27, 14, 35, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1406797232, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 27, 17, 7, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1407004259, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 27, 19, 51, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1407154840, 'issue_id': 1517999264, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 27, 22, 37, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1407179658, 'issue_id': 1517999264, 'author': 'k8s-ci-robot', 'body': '@illume: The following test **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:\n\nTest name | Commit | Details | Required | Rerun command\n--- | --- | --- | --- | ---\npull-kubernetes-unit | 265bce42b053a0b1da9e46f74cdee398b45af368 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114793/pull-kubernetes-unit/1619102308954542080) | true | `/test pull-kubernetes-unit`\n\n[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114793). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3Aillume). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).\n</details>\n<!-- test report -->', 'created_at': datetime.datetime(2023, 1, 27, 23, 11, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1407194618, 'issue_id': 1517999264, 'author': 'aojea', 'body': '/hold\r\n\r\nthe failure is legit', 'created_at': datetime.datetime(2023, 1, 27, 23, 42, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1488881528, 'issue_id': 1517999264, 'author': 'ardaguclu', 'body': '/cc', 'created_at': datetime.datetime(2023, 3, 29, 15, 53, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1562830807, 'issue_id': 1517999264, 'author': 'k8s-ci-robot', 'body': 'PR needs rebase.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 5, 25, 12, 35, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 1562942216, 'issue_id': 1517999264, 'author': 'illume', 'body': 'Closing because @ardaguclu took this into https://github.com/kubernetes/kubernetes/pull/117233', 'created_at': datetime.datetime(2023, 5, 25, 13, 47, 33, tzinfo=datetime.timezone.utc)}]","linux-foundation-easycla[bot] on (2023-01-03 22:33:41 UTC): <a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: illume / name: René Dudfield  (265bce42b053a0b1da9e46f74cdee398b45af368)</li></ul>

k8s-ci-robot on (2023-01-03 22:33:44 UTC): Welcome @illume! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:

k8s-ci-robot on (2023-01-03 22:33:45 UTC): Hi @illume. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

cici37 on (2023-01-10 21:29:33 UTC): /assign @yliaog 
/triage accepted

yliaog (Assginee) on (2023-01-16 18:56:52 UTC): /ok-to-test

yliaog (Assginee) on (2023-01-19 03:16:28 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-19 03:16:34 UTC): LGTM label has been added.  <details>Git tree hash: 377f22d4d67b813fb1b8449aba7e30f9110917c3</details>

k8s-ci-robot on (2023-01-19 03:16:57 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114793#"" title=""Author self-approved"">illume</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114793#issuecomment-1396388123"" title=""Approved"">yliaog</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [yliaog]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-triage-robot on (2023-01-19 05:20:19 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-19 08:08:18 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-19 10:56:18 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-19 13:44:18 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-19 16:25:19 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-19 19:09:19 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-19 21:54:26 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-20 00:39:27 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-20 03:27:31 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-20 06:09:27 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-20 08:51:27 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-20 11:33:29 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-20 14:20:27 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-20 17:08:28 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-20 19:56:43 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-20 22:40:59 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-21 01:41:59 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-21 04:41:59 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-21 07:24:59 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-21 10:09:59 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-21 12:58:00 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-21 15:46:00 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-21 18:55:00 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-21 22:01:45 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-22 00:41:45 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-22 03:21:45 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-22 06:05:45 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-22 08:53:46 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-22 11:41:46 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-22 14:29:46 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-22 17:17:46 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-22 19:59:46 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

aojea on (2023-01-22 20:36:34 UTC): failure seems related

k8s-triage-robot on (2023-01-22 22:41:17 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-23 01:29:18 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-23 04:12:17 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-23 06:52:17 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-23 09:32:18 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-23 12:12:18 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-23 14:52:18 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-23 17:32:19 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-23 20:17:49 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-23 23:05:49 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-24 01:53:49 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-24 04:53:50 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-24 07:53:50 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-24 10:33:50 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-24 13:15:50 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-24 15:58:50 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-24 18:42:49 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-24 21:22:49 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-25 00:03:49 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-25 02:45:49 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-25 05:29:50 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-25 08:17:49 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-25 11:05:50 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-25 13:51:50 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-25 16:32:49 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-25 19:13:52 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-25 21:53:52 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-26 00:38:52 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-26 03:26:53 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-26 06:14:53 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-26 09:02:53 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-26 11:50:53 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-26 14:30:52 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

dims on (2023-01-26 15:31:34 UTC): /retest

k8s-triage-robot on (2023-01-26 18:10:53 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-26 20:50:53 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-26 23:30:53 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-27 02:11:54 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-27 04:57:54 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-27 07:45:53 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-27 10:33:54 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-27 13:21:53 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

pacoxu on (2023-01-27 14:35:22 UTC): /retest

k8s-triage-robot on (2023-01-27 17:07:54 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-27 19:51:12 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-triage-robot on (2023-01-27 22:37:12 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114793) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

k8s-ci-robot on (2023-01-27 23:11:18 UTC): @illume: The following test **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:

Test name | Commit | Details | Required | Rerun command
--- | --- | --- | --- | ---
pull-kubernetes-unit | 265bce42b053a0b1da9e46f74cdee398b45af368 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114793/pull-kubernetes-unit/1619102308954542080) | true | `/test pull-kubernetes-unit`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114793). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3Aillume). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->

aojea on (2023-01-27 23:42:07 UTC): /hold

the failure is legit

ardaguclu on (2023-03-29 15:53:54 UTC): /cc

k8s-ci-robot on (2023-05-25 12:35:37 UTC): PR needs rebase.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

illume (Issue Creator) on (2023-05-25 13:47:33 UTC): Closing because @ardaguclu took this into https://github.com/kubernetes/kubernetes/pull/117233

"
1517995162,pull_request,closed,,Hide OpenAPI details behind the NewTypeConverter,"The fact that we're building the OpenAPI using the proto.Models is an implementation detail that we shouldn't have to expose. Since we're going to change the way this is transformed, let's first hide it behind the common NewTypeConverter so that the next change is transparent.

This will also enable other clean-ups like hiding the gvkParser which shouldn't be exposed and prevent some refactoring.

#### What type of PR is this?
/kind cleanup

#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:",apelisse,2023-01-03 22:29:19+00:00,"['lavalamp', 'kwiesmueller']",2023-01-04 22:30:23+00:00,2023-01-04 22:30:21+00:00,https://github.com/kubernetes/kubernetes/pull/114792,"[('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1370303384, 'issue_id': 1517995162, 'author': 'kwiesmueller', 'body': '/lgtm \r\nfor the fieldManager changes', 'created_at': datetime.datetime(2023, 1, 3, 22, 51, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370303450, 'issue_id': 1517995162, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: d00271e17d517fa21b1d4101be09485aecf7b2bf</details>', 'created_at': datetime.datetime(2023, 1, 3, 22, 51, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371065864, 'issue_id': 1517995162, 'author': 'kwiesmueller', 'body': '/lgtm\r\nfor the fieldManager changes', 'created_at': datetime.datetime(2023, 1, 4, 15, 22, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371066018, 'issue_id': 1517995162, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: d06c2817aeb9a1dc2d5c1d1de7d3a9d7499522c5</details>', 'created_at': datetime.datetime(2023, 1, 4, 15, 22, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371254052, 'issue_id': 1517995162, 'author': 'lavalamp', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 4, 18, 6, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371254424, 'issue_id': 1517995162, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114792#"" title=""Author self-approved"">apelisse</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114792#issuecomment-1371254052"" title=""Approved"">lavalamp</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [lavalamp]\n- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [lavalamp]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 18, 6, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371496918, 'issue_id': 1517995162, 'author': 'apelisse', 'body': '/triage accepted\r\n/priority important-soon', 'created_at': datetime.datetime(2023, 1, 4, 22, 20, 47, tzinfo=datetime.timezone.utc)}]","kwiesmueller (Assginee) on (2023-01-03 22:51:33 UTC): /lgtm 
for the fieldManager changes

k8s-ci-robot on (2023-01-03 22:51:39 UTC): LGTM label has been added.  <details>Git tree hash: d00271e17d517fa21b1d4101be09485aecf7b2bf</details>

kwiesmueller (Assginee) on (2023-01-04 15:22:29 UTC): /lgtm
for the fieldManager changes

k8s-ci-robot on (2023-01-04 15:22:36 UTC): LGTM label has been added.  <details>Git tree hash: d06c2817aeb9a1dc2d5c1d1de7d3a9d7499522c5</details>

lavalamp (Assginee) on (2023-01-04 18:06:32 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-04 18:06:55 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114792#"" title=""Author self-approved"">apelisse</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114792#issuecomment-1371254052"" title=""Approved"">lavalamp</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [lavalamp]
- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [lavalamp]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

apelisse (Issue Creator) on (2023-01-04 22:20:47 UTC): /triage accepted
/priority important-soon

"
1517922596,pull_request,closed,,Automated cherry pick of #114217: Fix issues in volumesnapshot test for ephemeral storage,"Cherry pick of #114217 on release-1.26.

#114217: Fix issues in volumesnapshot test for ephemeral storage

For details on the cherry pick process, see the [cherry pick requests](https://git.k8s.io/community/contributors/devel/sig-release/cherry-picks.md) page.

```release-note
NONE
```",mauriciopoppe,2023-01-03 21:11:49+00:00,"['jsafrane', 'xmudrii']",2023-01-04 23:20:12+00:00,2023-01-04 23:20:12+00:00,https://github.com/kubernetes/kubernetes/pull/114791,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('area/test', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('cherry-pick-approved', 'Indicates a cherry-pick PR into a release branch has been approved by the release branch manager.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1370229325, 'issue_id': 1517922596, 'author': 'k8s-ci-robot', 'body': '@mauriciopoppe: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 3, 21, 11, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370229350, 'issue_id': 1517922596, 'author': 'mauriciopoppe', 'body': '/kind bug\r\n/sig storage\r\n/cc @jingxu97 @jsafrane', 'created_at': datetime.datetime(2023, 1, 3, 21, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370307474, 'issue_id': 1517922596, 'author': 'mauriciopoppe', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 3, 22, 58, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370361263, 'issue_id': 1517922596, 'author': 'mauriciopoppe', 'body': '/uncc @pohly @gnufied', 'created_at': datetime.datetime(2023, 1, 4, 0, 29, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371002134, 'issue_id': 1517922596, 'author': 'jsafrane', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 4, 14, 31, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371002258, 'issue_id': 1517922596, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: ede639b45d551af39f53a9b261321cc8e92dde1c</details>', 'created_at': datetime.datetime(2023, 1, 4, 14, 31, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371359449, 'issue_id': 1517922596, 'author': 'mauriciopoppe', 'body': '/cc kubernetes/release-managers', 'created_at': datetime.datetime(2023, 1, 4, 20, 0, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371475527, 'issue_id': 1517922596, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114791#issuecomment-1371002134"" title=""Approved"">jsafrane</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114791#"" title=""Author self-approved"">mauriciopoppe</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114791#pullrequestreview-1236531366"" title=""Approved"">xmudrii</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[test/e2e/storage/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/test/e2e/storage/OWNERS)~~ [jsafrane]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 21, 56, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371479594, 'issue_id': 1517922596, 'author': 'mauriciopoppe', 'body': 'thanks for the quick review @xmudrii, appreciated :)', 'created_at': datetime.datetime(2023, 1, 4, 22, 1, 28, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-03 21:11:58 UTC): @mauriciopoppe: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

mauriciopoppe (Issue Creator) on (2023-01-03 21:12:00 UTC): /kind bug
/sig storage
/cc @jingxu97 @jsafrane

mauriciopoppe (Issue Creator) on (2023-01-03 22:58:52 UTC): /retest

mauriciopoppe (Issue Creator) on (2023-01-04 00:29:54 UTC): /uncc @pohly @gnufied

jsafrane (Assginee) on (2023-01-04 14:31:13 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-04 14:31:20 UTC): LGTM label has been added.  <details>Git tree hash: ede639b45d551af39f53a9b261321cc8e92dde1c</details>

mauriciopoppe (Issue Creator) on (2023-01-04 20:00:32 UTC): /cc kubernetes/release-managers

k8s-ci-robot on (2023-01-04 21:56:26 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114791#issuecomment-1371002134"" title=""Approved"">jsafrane</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114791#"" title=""Author self-approved"">mauriciopoppe</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114791#pullrequestreview-1236531366"" title=""Approved"">xmudrii</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/e2e/storage/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/test/e2e/storage/OWNERS)~~ [jsafrane]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

mauriciopoppe (Issue Creator) on (2023-01-04 22:01:28 UTC): thanks for the quick review @xmudrii, appreciated :)

"
1517916063,pull_request,closed,,Automated cherry pick of #114217: Fix issues in volumesnapshot test for ephemeral storage,"Cherry pick of #114217 on release-1.25.

#114217: Fix issues in volumesnapshot test for ephemeral storage

For details on the cherry pick process, see the [cherry pick requests](https://git.k8s.io/community/contributors/devel/sig-release/cherry-picks.md) page.

```release-note
NONE
```",mauriciopoppe,2023-01-03 21:05:14+00:00,"['jsafrane', 'xmudrii']",2023-01-04 21:57:59+00:00,2023-01-04 21:57:59+00:00,https://github.com/kubernetes/kubernetes/pull/114790,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('area/test', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('cherry-pick-approved', 'Indicates a cherry-pick PR into a release branch has been approved by the release branch manager.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1370223718, 'issue_id': 1517916063, 'author': 'k8s-ci-robot', 'body': '@mauriciopoppe: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 3, 21, 5, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370224477, 'issue_id': 1517916063, 'author': 'mauriciopoppe', 'body': '/cc @jsafrane @jingxu97', 'created_at': datetime.datetime(2023, 1, 3, 21, 6, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370224677, 'issue_id': 1517916063, 'author': 'mauriciopoppe', 'body': '/uncc @mattcary @msau42', 'created_at': datetime.datetime(2023, 1, 3, 21, 6, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370225244, 'issue_id': 1517916063, 'author': 'mauriciopoppe', 'body': '/kind bug', 'created_at': datetime.datetime(2023, 1, 3, 21, 7, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371002086, 'issue_id': 1517916063, 'author': 'jsafrane', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 4, 14, 31, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371002213, 'issue_id': 1517916063, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: a1befd91741a310b6b6cc2fc704e4de51947e6b3</details>', 'created_at': datetime.datetime(2023, 1, 4, 14, 31, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371359630, 'issue_id': 1517916063, 'author': 'mauriciopoppe', 'body': '/cc kubernetes/release-managers', 'created_at': datetime.datetime(2023, 1, 4, 20, 0, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371475688, 'issue_id': 1517916063, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114790#issuecomment-1371002086"" title=""Approved"">jsafrane</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114790#"" title=""Author self-approved"">mauriciopoppe</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114790#pullrequestreview-1236531426"" title=""Approved"">xmudrii</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[test/e2e/storage/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.25/test/e2e/storage/OWNERS)~~ [jsafrane]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 21, 56, 40, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-03 21:05:23 UTC): @mauriciopoppe: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

mauriciopoppe (Issue Creator) on (2023-01-03 21:06:20 UTC): /cc @jsafrane @jingxu97

mauriciopoppe (Issue Creator) on (2023-01-03 21:06:31 UTC): /uncc @mattcary @msau42

mauriciopoppe (Issue Creator) on (2023-01-03 21:07:12 UTC): /kind bug

jsafrane (Assginee) on (2023-01-04 14:31:10 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-04 14:31:18 UTC): LGTM label has been added.  <details>Git tree hash: a1befd91741a310b6b6cc2fc704e4de51947e6b3</details>

mauriciopoppe (Issue Creator) on (2023-01-04 20:00:43 UTC): /cc kubernetes/release-managers

k8s-ci-robot on (2023-01-04 21:56:40 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114790#issuecomment-1371002086"" title=""Approved"">jsafrane</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114790#"" title=""Author self-approved"">mauriciopoppe</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114790#pullrequestreview-1236531426"" title=""Approved"">xmudrii</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/e2e/storage/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.25/test/e2e/storage/OWNERS)~~ [jsafrane]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1517883177,pull_request,closed,,Bump konnectivity-client to v0.0.35,"Bump konnectivity-client to v0.0.35

#### What type of PR is this?

/kind feature

#### What this PR does / why we need it:

See [v0.0.33 to v0.0.35](https://github.com/kubernetes-sigs/apiserver-network-proxy/compare/v0.0.33...v0.0.35).

Several new metrics are added, and there are logging improvements. Bug fixes are mostly trivial, and there are no large / risky changes.

#### Which issue(s) this PR fixes:

#### Special notes for your reviewer:

./hack/pin-dependency.sh sigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.0.35
./hack/update-codegen.sh
./hack/update-vendor.sh

Manual adjustments:
vendor/modules.txt
cluster/gce/addons/konnectivity-agent/konnectivity-agent-ds.yaml cluster/gce/manifests/konnectivity-server.yaml


#### Does this PR introduce a user-facing change?
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

```docs
NONE
```
",jkh52,2023-01-03 20:29:58+00:00,"['liggitt', 'Jefftree']",2023-01-04 22:30:12+00:00,2023-01-04 22:30:10+00:00,https://github.com/kubernetes/kubernetes/pull/114789,"[('area/apiserver', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/cloudprovider', None), ('area/provider/gcp', 'Issues or PRs related to gcp provider'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1370235705, 'issue_id': 1517883177, 'author': 'fedebongio', 'body': '/assign @Jefftree \r\n/triage accepted', 'created_at': datetime.datetime(2023, 1, 3, 21, 20, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370285452, 'issue_id': 1517883177, 'author': 'jkh52', 'body': ""The flake looks test infra related, not konnectivity-client related.\r\n\r\n```\r\nW0103 21:53:55.769] subprocess.CalledProcessError: Command '('kubetest', '--dump=/workspace/_artifacts', '--gcp-service-account=/etc/service-account/service-account.json', '--build=quick', '--stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-network-proxy-http-connect', '--up', '--down', '--test', '--provider=gce', '--cluster=e2e-ce87ecd6a4-87eec', '--gcp-network=e2e-ce87ecd6a4-87eec', '--extract=local', '--gcp-node-image=gci', '--gcp-zone=us-west1-b', '--ginkgo-parallel=30', '--test_args=--ginkgo.skip=\\\\[Driver:.gcepd\\\\]|\\\\[Slow\\\\]|\\\\[Serial\\\\]|\\\\[Disruptive\\\\]|\\\\[Flaky\\\\]|\\\\[Feature:.+\\\\] --minStartupPods=9', '--timeout=80m')' returned non-zero exit status 1\r\nE0103 21:53:55.769] Command failed\r\n```\r\n\r\n/retest"", 'created_at': datetime.datetime(2023, 1, 3, 22, 23, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371289177, 'issue_id': 1517883177, 'author': 'jkh52', 'body': 'I kept this a pure version bump. After this gets in, in a separate PR I will register the new metrics package: [example commit](https://github.com/kubernetes/kubernetes/commit/9e4fefdc88852ad06c4a63c61afe43b2b99f5b05)', 'created_at': datetime.datetime(2023, 1, 4, 18, 42, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371293151, 'issue_id': 1517883177, 'author': 'Jefftree', 'body': '/lgtm\r\n/assign @liggitt', 'created_at': datetime.datetime(2023, 1, 4, 18, 47, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371293237, 'issue_id': 1517883177, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 088b8c03bff870bdf6af8e68144db97b090c0130</details>', 'created_at': datetime.datetime(2023, 1, 4, 18, 47, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371295215, 'issue_id': 1517883177, 'author': 'liggitt', 'body': '/approve', 'created_at': datetime.datetime(2023, 1, 4, 18, 49, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371298612, 'issue_id': 1517883177, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114789#"" title=""Author self-approved"">jkh52</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114789#issuecomment-1371295215"" title=""Approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [liggitt]\n- ~~[cluster/gce/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cluster/gce/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [liggitt]\n- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 18, 53, 37, tzinfo=datetime.timezone.utc)}]","fedebongio on (2023-01-03 21:20:02 UTC): /assign @Jefftree 
/triage accepted

jkh52 (Issue Creator) on (2023-01-03 22:23:40 UTC): The flake looks test infra related, not konnectivity-client related.

```
W0103 21:53:55.769] subprocess.CalledProcessError: Command '('kubetest', '--dump=/workspace/_artifacts', '--gcp-service-account=/etc/service-account/service-account.json', '--build=quick', '--stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-network-proxy-http-connect', '--up', '--down', '--test', '--provider=gce', '--cluster=e2e-ce87ecd6a4-87eec', '--gcp-network=e2e-ce87ecd6a4-87eec', '--extract=local', '--gcp-node-image=gci', '--gcp-zone=us-west1-b', '--ginkgo-parallel=30', '--test_args=--ginkgo.skip=\\[Driver:.gcepd\\]|\\[Slow\\]|\\[Serial\\]|\\[Disruptive\\]|\\[Flaky\\]|\\[Feature:.+\\] --minStartupPods=9', '--timeout=80m')' returned non-zero exit status 1
E0103 21:53:55.769] Command failed
```

/retest

jkh52 (Issue Creator) on (2023-01-04 18:42:47 UTC): I kept this a pure version bump. After this gets in, in a separate PR I will register the new metrics package: [example commit](https://github.com/kubernetes/kubernetes/commit/9e4fefdc88852ad06c4a63c61afe43b2b99f5b05)

Jefftree (Assginee) on (2023-01-04 18:47:25 UTC): /lgtm
/assign @liggitt

k8s-ci-robot on (2023-01-04 18:47:31 UTC): LGTM label has been added.  <details>Git tree hash: 088b8c03bff870bdf6af8e68144db97b090c0130</details>

liggitt (Assginee) on (2023-01-04 18:49:46 UTC): /approve

k8s-ci-robot on (2023-01-04 18:53:37 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114789#"" title=""Author self-approved"">jkh52</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114789#issuecomment-1371295215"" title=""Approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [liggitt]
- ~~[cluster/gce/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cluster/gce/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [liggitt]
- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1517811478,pull_request,closed,,feat: Remove unwanted unschedulable taint message for tenants,,hunterlong,2023-01-03 19:14:52+00:00,[],2023-01-03 19:57:38+00:00,2023-01-03 19:42:12+00:00,https://github.com/kubernetes/kubernetes/pull/114787,"[('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('cncf-cla: no', ""Indicates the PR's author has not signed the CNCF CLA.""), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('do-not-merge/release-note-label-needed', ""Indicates that a PR should not merge because it's missing one of the release note labels.""), ('do-not-merge/cherry-pick-not-approved', 'Indicates that a PR is not yet approved to merge into a release branch.'), ('do-not-merge/work-in-progress', 'Indicates that a PR should not merge because it is a work in progress.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.'), ('do-not-merge/needs-kind', 'Indicates a PR lacks a `kind/foo` label and requires one.')]","[{'comment_id': 1370133940, 'issue_id': 1517811478, 'author': 'k8s-ci-robot', 'body': '@hunterlong: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 3, 19, 14, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370133946, 'issue_id': 1517811478, 'author': 'k8s-ci-robot', 'body': '@hunterlong: This cherry pick PR is for a release branch and has not yet been approved by [Release Managers](https://k8s.io/releases/release-managers).\nAdding the `do-not-merge/cherry-pick-not-approved` label.\n\nTo merge this cherry pick, it must first be approved (`/lgtm` + `/approve`) by the relevant OWNERS.\n\n**AFTER** it has been approved by code owners, please leave the following comment on a line **by itself, with no leading whitespace**: **/cc kubernetes/release-managers**\n\n(This command will request a cherry pick review from [Release Managers](https://github.com/orgs/kubernetes/teams/release-managers) and should work for all GitHub users, whether they are members of the Kubernetes GitHub organization or not.)\n\nFor details on the patch release process and schedule, see the [Patch Releases](https://k8s.io/releases/patch-releases) page.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 3, 19, 14, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370133970, 'issue_id': 1517811478, 'author': 'linux-foundation-easycla[bot]', 'body': '<a href=""https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/18706487/20580498/114787/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg"" alt=""CLA Not Signed"" align=""left"" height=""28"" width=""328""></a><br/><br /><ul><li><a href=\'https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/18706487/20580498/114787/#/?version=2\' target=\'_blank\'>:x:</a> - login: @hunterlong / name: Hunter Long . The commit (ab681acdbc296d0fd008bcc98c8771c075805889) is not authorized under a signed CLA. <a href=\'https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/18706487/20580498/114787/#/?version=2\' target=\'_blank\'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href=\'https://jira.linuxfoundation.org/servicedesk/customer/portal/4\' target=\'_blank\'>please submit a support request ticket</a>.</li></ul>', 'created_at': datetime.datetime(2023, 1, 3, 19, 14, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370134044, 'issue_id': 1517811478, 'author': 'k8s-ci-robot', 'body': ""Welcome @hunterlong! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:"", 'created_at': datetime.datetime(2023, 1, 3, 19, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370134054, 'issue_id': 1517811478, 'author': 'k8s-ci-robot', 'body': '@hunterlong: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 3, 19, 15, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370134060, 'issue_id': 1517811478, 'author': 'k8s-ci-robot', 'body': ""Hi @hunterlong. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 3, 19, 15, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370134611, 'issue_id': 1517811478, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114787#"" title=""Author self-approved"">hunterlong</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign alculquicondor for approval by writing `/assign @alculquicondor` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.20/pkg/scheduler/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""alculquicondor""]} -->', 'created_at': datetime.datetime(2023, 1, 3, 19, 15, 42, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-03 19:14:54 UTC): @hunterlong: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-03 19:14:54 UTC): @hunterlong: This cherry pick PR is for a release branch and has not yet been approved by [Release Managers](https://k8s.io/releases/release-managers).
Adding the `do-not-merge/cherry-pick-not-approved` label.

To merge this cherry pick, it must first be approved (`/lgtm` + `/approve`) by the relevant OWNERS.

**AFTER** it has been approved by code owners, please leave the following comment on a line **by itself, with no leading whitespace**: **/cc kubernetes/release-managers**

(This command will request a cherry pick review from [Release Managers](https://github.com/orgs/kubernetes/teams/release-managers) and should work for all GitHub users, whether they are members of the Kubernetes GitHub organization or not.)

For details on the patch release process and schedule, see the [Patch Releases](https://k8s.io/releases/patch-releases) page.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

linux-foundation-easycla[bot] on (2023-01-03 19:14:56 UTC): <a href=""https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/18706487/20580498/114787/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg"" alt=""CLA Not Signed"" align=""left"" height=""28"" width=""328""></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/18706487/20580498/114787/#/?version=2' target='_blank'>:x:</a> - login: @hunterlong / name: Hunter Long . The commit (ab681acdbc296d0fd008bcc98c8771c075805889) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/18706487/20580498/114787/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>

k8s-ci-robot on (2023-01-03 19:15:00 UTC): Welcome @hunterlong! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:

k8s-ci-robot on (2023-01-03 19:15:01 UTC): @hunterlong: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-03 19:15:01 UTC): Hi @hunterlong. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-03 19:15:42 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114787#"" title=""Author self-approved"">hunterlong</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign alculquicondor for approval by writing `/assign @alculquicondor` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.20/pkg/scheduler/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""alculquicondor""]} -->

"
1517808411,pull_request,closed,,Update doc about json tag is needed to generate informer externalversion package,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind documentation

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?

<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note

```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```


```release-note
NONE
```",CatherineF-dev,2023-01-03 19:11:38+00:00,"['munnerz', 'JoelSpeed']",2023-01-05 17:12:13+00:00,2023-01-05 17:12:11+00:00,https://github.com/kubernetes/kubernetes/pull/114786,"[('kind/documentation', 'Categorizes issue or PR as related to documentation.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1370132279, 'issue_id': 1517808411, 'author': 'CatherineF-dev', 'body': '/sig api-machinery', 'created_at': datetime.datetime(2023, 1, 3, 19, 13, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370235334, 'issue_id': 1517808411, 'author': 'fedebongio', 'body': '/assign @JoelSpeed \r\n/triage accepted', 'created_at': datetime.datetime(2023, 1, 3, 21, 19, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371018411, 'issue_id': 1517808411, 'author': 'JoelSpeed', 'body': '/lgtm\r\n\r\nWill need someone from sig-api-machinery to take a look and check they agree', 'created_at': datetime.datetime(2023, 1, 4, 14, 44, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371018546, 'issue_id': 1517808411, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 8ba0bee10966a2640a7193d0615efdbe52467e56</details>', 'created_at': datetime.datetime(2023, 1, 4, 14, 44, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371081078, 'issue_id': 1517808411, 'author': 'deads2k', 'body': ""I'd be happy to see the internal type generators for clients, informers, and listers be removed.  The internal client-side tooling only works when the client is fully aware of all possible defaulting and conversion. We decided several years ago that such things are only the domain of the server.  This PR improves the current state of the world, but I'd be happy to see another PR that removes the possibility of internal generation entirely.\r\n\r\n/approve"", 'created_at': datetime.datetime(2023, 1, 4, 15, 34, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372267999, 'issue_id': 1517808411, 'author': 'CatherineF-dev', 'body': ""cc @munnerz @sttts  Could you help approve this small PR when you're available? Thanks! I found it needs approvals from OWNER."", 'created_at': datetime.datetime(2023, 1, 5, 14, 14, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372404244, 'issue_id': 1517808411, 'author': 'munnerz', 'body': '/approve\n/lgtm', 'created_at': datetime.datetime(2023, 1, 5, 15, 59, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372404801, 'issue_id': 1517808411, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114786#"" title=""Author self-approved"">CatherineF-dev</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114786#issuecomment-1371081078"" title=""Approved"">deads2k</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114786#issuecomment-1372404244"" title=""LGTM"">munnerz</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [munnerz]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 15, 59, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372417681, 'issue_id': 1517808411, 'author': 'CatherineF-dev', 'body': '/release-note-none', 'created_at': datetime.datetime(2023, 1, 5, 16, 8, 25, tzinfo=datetime.timezone.utc)}]","CatherineF-dev (Issue Creator) on (2023-01-03 19:13:01 UTC): /sig api-machinery

fedebongio on (2023-01-03 21:19:34 UTC): /assign @JoelSpeed 
/triage accepted

JoelSpeed (Assginee) on (2023-01-04 14:44:53 UTC): /lgtm

Will need someone from sig-api-machinery to take a look and check they agree

k8s-ci-robot on (2023-01-04 14:44:59 UTC): LGTM label has been added.  <details>Git tree hash: 8ba0bee10966a2640a7193d0615efdbe52467e56</details>

deads2k on (2023-01-04 15:34:36 UTC): I'd be happy to see the internal type generators for clients, informers, and listers be removed.  The internal client-side tooling only works when the client is fully aware of all possible defaulting and conversion. We decided several years ago that such things are only the domain of the server.  This PR improves the current state of the world, but I'd be happy to see another PR that removes the possibility of internal generation entirely.

/approve

CatherineF-dev (Issue Creator) on (2023-01-05 14:14:39 UTC): cc @munnerz @sttts  Could you help approve this small PR when you're available? Thanks! I found it needs approvals from OWNER.

munnerz (Assginee) on (2023-01-05 15:59:01 UTC): /approve
/lgtm

k8s-ci-robot on (2023-01-05 15:59:30 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114786#"" title=""Author self-approved"">CatherineF-dev</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114786#issuecomment-1371081078"" title=""Approved"">deads2k</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114786#issuecomment-1372404244"" title=""LGTM"">munnerz</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [munnerz]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

CatherineF-dev (Issue Creator) on (2023-01-05 16:08:25 UTC): /release-note-none

"
1517774050,pull_request,closed,,kubelet: Replace deprecated pointer function,"Signed-off-by: TommyStarK <thomasmilox@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

If applied this commit will replace the deprecated `(Int32|Int64|Float64|Bool|String)Ptr` function by `Int32|Int64|Float64|Bool|String`.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",TommyStarK,2023-01-03 18:35:31+00:00,"['thockin', 'SergeyKanzhelev', 'bart0sh']",2023-03-02 09:10:26+00:00,2023-03-02 02:04:55+00:00,https://github.com/kubernetes/kubernetes/pull/114785,"[('area/kubelet', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1370099612, 'issue_id': 1517774050, 'author': 'k8s-ci-robot', 'body': ""Hi @TommyStarK. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 3, 18, 35, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370117473, 'issue_id': 1517774050, 'author': 'bart0sh', 'body': '/priority important-longterm\r\n/triage accepted\r\n/ok-to-test', 'created_at': datetime.datetime(2023, 1, 3, 18, 56, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370117682, 'issue_id': 1517774050, 'author': 'bart0sh', 'body': '/assign', 'created_at': datetime.datetime(2023, 1, 3, 18, 56, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370616861, 'issue_id': 1517774050, 'author': 'bart0sh', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 4, 8, 32, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370616947, 'issue_id': 1517774050, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 22f7351f38f60565a78d0a28bb9128063e639709</details>', 'created_at': datetime.datetime(2023, 1, 4, 8, 32, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375456062, 'issue_id': 1517774050, 'author': 'bart0sh', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 9, 11, 11, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375456314, 'issue_id': 1517774050, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: a0a88baa1bea1492df42c5799cc392be717ad80b</details>', 'created_at': datetime.datetime(2023, 1, 9, 11, 11, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1439007331, 'issue_id': 1517774050, 'author': 'TommyStarK', 'body': 'following instructions from k8s-ci-robot\n\n/assign thockin', 'created_at': datetime.datetime(2023, 2, 21, 19, 48, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1439744533, 'issue_id': 1517774050, 'author': 'pacoxu', 'body': '/assign  dchen1107 mrunalp', 'created_at': datetime.datetime(2023, 2, 22, 10, 7, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1451074784, 'issue_id': 1517774050, 'author': 'thockin', 'body': '/approve', 'created_at': datetime.datetime(2023, 3, 2, 0, 11, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1451075103, 'issue_id': 1517774050, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114785#pullrequestreview-1308059160"" title=""LGTM"">SergeyKanzhelev</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114785#issuecomment-1451074784"" title=""Approved"">thockin</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114785#"" title=""Author self-approved"">TommyStarK</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/OWNERS)~~ [thockin]\n- ~~[pkg/kubelet/apis/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/apis/config/OWNERS)~~ [thockin]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 3, 2, 0, 11, 41, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-03 18:35:39 UTC): Hi @TommyStarK. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

bart0sh (Assginee) on (2023-01-03 18:56:26 UTC): /priority important-longterm
/triage accepted
/ok-to-test

bart0sh (Assginee) on (2023-01-03 18:56:40 UTC): /assign

bart0sh (Assginee) on (2023-01-04 08:32:04 UTC): /lgtm

k8s-ci-robot on (2023-01-04 08:32:10 UTC): LGTM label has been added.  <details>Git tree hash: 22f7351f38f60565a78d0a28bb9128063e639709</details>

bart0sh (Assginee) on (2023-01-09 11:11:40 UTC): /lgtm

k8s-ci-robot on (2023-01-09 11:11:45 UTC): LGTM label has been added.  <details>Git tree hash: a0a88baa1bea1492df42c5799cc392be717ad80b</details>

TommyStarK (Issue Creator) on (2023-02-21 19:48:01 UTC): following instructions from k8s-ci-robot

/assign thockin

pacoxu on (2023-02-22 10:07:25 UTC): /assign  dchen1107 mrunalp

thockin (Assginee) on (2023-03-02 00:11:18 UTC): /approve

k8s-ci-robot on (2023-03-02 00:11:41 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114785#pullrequestreview-1308059160"" title=""LGTM"">SergeyKanzhelev</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114785#issuecomment-1451074784"" title=""Approved"">thockin</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114785#"" title=""Author self-approved"">TommyStarK</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/OWNERS)~~ [thockin]
- ~~[pkg/kubelet/apis/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/apis/config/OWNERS)~~ [thockin]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1517765671,pull_request,closed,,pkg/apis: Replace deprecated pointer function,"Signed-off-by: TommyStarK <thomasmilox@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

If applied this commit will replace the deprecated `StringPtr`, `StringPtrDerefOr`, `Int64Ptr`, `Int32Ptr`, `BoolPtr` functions by `String`, `StringDeref`, `Int64`, `Int32` and `BoolPtr`.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",TommyStarK,2023-01-03 18:26:31+00:00,['liggitt'],2023-01-05 19:24:34+00:00,2023-01-05 19:08:10+00:00,https://github.com/kubernetes/kubernetes/pull/114784,"[('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XL', 'Denotes a PR that changes 500-999 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1370091844, 'issue_id': 1517765671, 'author': 'k8s-ci-robot', 'body': '@TommyStarK: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 3, 18, 26, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370091857, 'issue_id': 1517765671, 'author': 'k8s-ci-robot', 'body': ""Hi @TommyStarK. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 3, 18, 26, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372421250, 'issue_id': 1517765671, 'author': 'TommyStarK', 'body': 'cc @liggitt, another one for replacing deprecated function.', 'created_at': datetime.datetime(2023, 1, 5, 16, 11, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372423659, 'issue_id': 1517765671, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 5, 16, 12, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372423794, 'issue_id': 1517765671, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 3f9a3c4193a077ff52b2e42df43a995e99974aed</details>', 'created_at': datetime.datetime(2023, 1, 5, 16, 12, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372424105, 'issue_id': 1517765671, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114784#issuecomment-1372423659"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114784#"" title=""Author self-approved"">TommyStarK</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 16, 13, 6, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-03 18:26:39 UTC): @TommyStarK: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-03 18:26:40 UTC): Hi @TommyStarK. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

TommyStarK (Issue Creator) on (2023-01-05 16:11:02 UTC): cc @liggitt, another one for replacing deprecated function.

liggitt (Assginee) on (2023-01-05 16:12:44 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-05 16:12:51 UTC): LGTM label has been added.  <details>Git tree hash: 3f9a3c4193a077ff52b2e42df43a995e99974aed</details>

k8s-ci-robot on (2023-01-05 16:13:06 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114784#issuecomment-1372423659"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114784#"" title=""Author self-approved"">TommyStarK</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1517670164,pull_request,closed,,e2e framework: consolidate timeouts and intervals,"#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

Some timeouts were defined in TestContext, others in TimeoutContext. Some were constants in source code. The long-term goal is to move all of those durations into TimeoutContext and provide a uniform configuration mechanism for them. This PR is a first step towards that.

### Special notes for your reviewer:

This was motivated by https://github.com/kubernetes/community/pull/7021#discussion_r1060376259

#### Does this PR introduce a user-facing change?
```release-note
NONE
```

",pohly,2023-01-03 17:00:01+00:00,['aojea'],2023-01-12 11:29:10+00:00,2023-01-12 11:29:08+00:00,https://github.com/kubernetes/kubernetes/pull/114783,"[('area/test', None), ('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('area/e2e-test-framework', 'Issues or PRs related to refactoring the kubernetes e2e test framework'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1370005486, 'issue_id': 1517670164, 'author': 'k8s-ci-robot', 'body': '@pohly: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 3, 17, 0, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372101683, 'issue_id': 1517670164, 'author': 'pohly', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 5, 11, 30, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372154031, 'issue_id': 1517670164, 'author': 'pohly', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 5, 12, 27, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372156745, 'issue_id': 1517670164, 'author': 'pohly', 'body': '@bertinatto : you initially introduced timeouts.go. Perhaps you can have a look at this update for it?', 'created_at': datetime.datetime(2023, 1, 5, 12, 30, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372344081, 'issue_id': 1517670164, 'author': 'pohly', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 5, 15, 12, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374423127, 'issue_id': 1517670164, 'author': 'pohly', 'body': '/retest\r\n\r\n/assign @aojea \r\n\r\nThis PR would be good to merge before these:\r\n- https://github.com/kubernetes/community/pull/7021\r\n- https://github.com/kubernetes/kubernetes/pull/114825\r\n- https://github.com/kubernetes/community/pull/7021', 'created_at': datetime.datetime(2023, 1, 7, 9, 16, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377412641, 'issue_id': 1517670164, 'author': 'pohly', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 10, 15, 5, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380114308, 'issue_id': 1517670164, 'author': 'aojea', 'body': '/lgtm\r\n/approve\r\n\r\nThanks', 'created_at': datetime.datetime(2023, 1, 12, 10, 24, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380114460, 'issue_id': 1517670164, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 5ea6c9800259e626174927740868d265fc1ebbcc</details>', 'created_at': datetime.datetime(2023, 1, 12, 10, 24, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380114842, 'issue_id': 1517670164, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114783#issuecomment-1380114308"" title=""Approved"">aojea</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114783#"" title=""Author self-approved"">pohly</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [aojea,pohly]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 12, 10, 24, 46, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-03 17:00:09 UTC): @pohly: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

pohly (Issue Creator) on (2023-01-05 11:30:09 UTC): /retest

pohly (Issue Creator) on (2023-01-05 12:27:19 UTC): /retest

pohly (Issue Creator) on (2023-01-05 12:30:29 UTC): @bertinatto : you initially introduced timeouts.go. Perhaps you can have a look at this update for it?

pohly (Issue Creator) on (2023-01-05 15:12:30 UTC): /retest

pohly (Issue Creator) on (2023-01-07 09:16:46 UTC): /retest

/assign @aojea 

This PR would be good to merge before these:
- https://github.com/kubernetes/community/pull/7021
- https://github.com/kubernetes/kubernetes/pull/114825
- https://github.com/kubernetes/community/pull/7021

pohly (Issue Creator) on (2023-01-10 15:05:24 UTC): /retest

aojea (Assginee) on (2023-01-12 10:24:20 UTC): /lgtm
/approve

Thanks

k8s-ci-robot on (2023-01-12 10:24:26 UTC): LGTM label has been added.  <details>Git tree hash: 5ea6c9800259e626174927740868d265fc1ebbcc</details>

k8s-ci-robot on (2023-01-12 10:24:46 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114783#issuecomment-1380114308"" title=""Approved"">aojea</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114783#"" title=""Author self-approved"">pohly</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [aojea,pohly]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1517590364,pull_request,closed,,Licensing: skip modules with fewer subdirs than mods,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind bug

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

This came up when updating go-oidc. After updating go-oidc (with its dependency tree), cloud.google.com/go was no longer used as a package import, but still listed in the module dependency graph; as a result, ""go mod vendor"" no longer pulled in cloud.google.com/go itself, but update-vendor-licenses.sh still wanted a license file for it since it appeared in the list of modules.

This scenario is already supposed to be handled: when a module doesn't contain any *files* as first-level content, if the number of subdirectories it contains *equals* the number of submodules it contains (excluding itself), the module is skipped. This fails for cloud.google.com/go because several submodules are included in the module dependency graph but aren't actually used, and therefore not vendored.

Updating the test to check that the number of subdirectories is less than or equal to the number of expected submodules fixes this.

The correct fix would be to process the submodules first, keeping a note of which ones really have content, then check that the top-level module only contains subdirectories corresponding to those modules; but it's not clear to me that this is worth the effort (especially in a shell script).

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #114781

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",skitt,2023-01-03 15:54:44+00:00,['liggitt'],2023-01-04 11:26:20+00:00,2023-01-03 18:35:47+00:00,https://github.com/kubernetes/kubernetes/pull/114782,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.'), ('sig/k8s-infra', 'Categorizes an issue or PR as relevant to SIG K8s Infra.')]","[{'comment_id': 1369932633, 'issue_id': 1517590364, 'author': 'k8s-ci-robot', 'body': '@skitt: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 3, 15, 54, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369932642, 'issue_id': 1517590364, 'author': 'k8s-ci-robot', 'body': ""Hi @skitt. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 3, 15, 54, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369954225, 'issue_id': 1517590364, 'author': 'liggitt', 'body': '/lgtm\r\n/approve\r\n\r\nthanks for the fix... after this merges, can you also open picks of this back to release-1.23 (using `hack/cherry_pick_pull.sh`)?', 'created_at': datetime.datetime(2023, 1, 3, 16, 13, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369954362, 'issue_id': 1517590364, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 17965cbe21ac1c39223fc1b8a469eb30c18358d9</details>', 'created_at': datetime.datetime(2023, 1, 3, 16, 13, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369954783, 'issue_id': 1517590364, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114782#issuecomment-1369954225"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114782#"" title=""Author self-approved"">skitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 3, 16, 13, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369956721, 'issue_id': 1517590364, 'author': 'skitt', 'body': '> thanks for the fix... after this merges, can you also open picks of this back to release-1.23 (using `hack/cherry_pick_pull.sh`)?\r\n\r\nWill do, thanks!', 'created_at': datetime.datetime(2023, 1, 3, 16, 15, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369982444, 'issue_id': 1517590364, 'author': 'skitt', 'body': '/sig k8s-infra', 'created_at': datetime.datetime(2023, 1, 3, 16, 38, 17, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-03 15:54:52 UTC): @skitt: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-03 15:54:53 UTC): Hi @skitt. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

liggitt (Assginee) on (2023-01-03 16:13:15 UTC): /lgtm
/approve

thanks for the fix... after this merges, can you also open picks of this back to release-1.23 (using `hack/cherry_pick_pull.sh`)?

k8s-ci-robot on (2023-01-03 16:13:22 UTC): LGTM label has been added.  <details>Git tree hash: 17965cbe21ac1c39223fc1b8a469eb30c18358d9</details>

k8s-ci-robot on (2023-01-03 16:13:44 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114782#issuecomment-1369954225"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114782#"" title=""Author self-approved"">skitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

skitt (Issue Creator) on (2023-01-03 16:15:19 UTC): Will do, thanks!

skitt (Issue Creator) on (2023-01-03 16:38:17 UTC): /sig k8s-infra

"
1517566690,pull_request,closed,,Automated cherry pick of #114770: Fix clearing rate limiter in disruption controller,"Cherry pick of #114770 on release-1.26.

#114770: Fix clearing rate limiter in disruption controller

For details on the cherry pick process, see the [cherry pick requests](https://git.k8s.io/community/contributors/devel/sig-release/cherry-picks.md) page.

```release-note
Fix a regression in default 1.26 configurations with the PodDisruptionConditions feature enabled clearing of rate-limiter for the queue of checks for cleaning stale pod disruption conditions. The bug could result in the PDB synchronization updates firing too often or the pod disruption cleanups taking too long to happen.
```",mimowo,2023-01-03 15:38:13+00:00,"['soltysh', 'alculquicondor', 'xmudrii']",2023-09-27 02:01:58+00:00,2023-01-04 23:20:00+00:00,https://github.com/kubernetes/kubernetes/pull/114780,"[('priority/critical-urgent', ""Highest priority. Must be actively worked on as someone's top priority right now.""), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('cherry-pick-approved', 'Indicates a cherry-pick PR into a release branch has been approved by the release branch manager.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('kind/regression', 'Categorizes issue or PR as related to a regression from a prior release.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1369914412, 'issue_id': 1517566690, 'author': 'mimowo', 'body': '/assign @alculquicondor', 'created_at': datetime.datetime(2023, 1, 3, 15, 39, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370024778, 'issue_id': 1517566690, 'author': 'mimowo', 'body': '/assign @soltysh', 'created_at': datetime.datetime(2023, 1, 3, 17, 15, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370624642, 'issue_id': 1517566690, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: e658349b2bf017ec1a0b703041d401af10d204aa</details>', 'created_at': datetime.datetime(2023, 1, 4, 8, 41, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370625454, 'issue_id': 1517566690, 'author': 'soltysh', 'body': '/kind regression\r\n/triage accepted\r\n/priority critical-urgent', 'created_at': datetime.datetime(2023, 1, 4, 8, 42, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370627632, 'issue_id': 1517566690, 'author': 'mimowo', 'body': '/cc kubernetes/release-managers', 'created_at': datetime.datetime(2023, 1, 4, 8, 44, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370772564, 'issue_id': 1517566690, 'author': 'xmudrii', 'body': '@mimowo @soltysh Is this affecting only 1.26?', 'created_at': datetime.datetime(2023, 1, 4, 10, 53, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370784585, 'issue_id': 1517566690, 'author': 'mimowo', 'body': '> Is this affecting only 1.26?\r\n\r\nIt also affects 1.25, @xmudrii should I prepare an analogous PR?', 'created_at': datetime.datetime(2023, 1, 4, 11, 5, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370789021, 'issue_id': 1517566690, 'author': 'xmudrii', 'body': '@mimowo Yes, please.', 'created_at': datetime.datetime(2023, 1, 4, 11, 9, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370802915, 'issue_id': 1517566690, 'author': 'mimowo', 'body': '> @mimowo Yes, please.\r\n\r\nThere you go: https://github.com/kubernetes/kubernetes/pull/114808', 'created_at': datetime.datetime(2023, 1, 4, 11, 23, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370817591, 'issue_id': 1517566690, 'author': 'mimowo', 'body': ""> > @mimowo Yes, please.\r\n> \r\n> There you go: #114808\r\n\r\nActually, I'm in a doubt after a second thought. \r\n\r\nThe code wasn't protected by a feature gate in 1.25, however, it was indirectly protected as it would only activate if the pod disruption condition was added (https://github.com/kubernetes/kubernetes/blob/release-1.25/pkg/controller/disruption/disruption.go#L487-L489), and adding pod disruption conditions was alpha in 1.25. @alculquicondor @soltysh WDYT?\r\n\r\nClosing the other PR for 1.25 for now."", 'created_at': datetime.datetime(2023, 1, 4, 11, 34, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370825522, 'issue_id': 1517566690, 'author': 'soltysh', 'body': ""> The code wasn't protected by a feature gate in 1.25, however, it was indirectly protected as it would only activate if the pod disruption condition was added (https://github.com/kubernetes/kubernetes/blob/release-1.25/pkg/controller/disruption/disruption.go#L487-L489), and adding pod disruption conditions was alpha in 1.25. @alculquicondor @soltysh WDYT?\r\n\r\nBased on [general guidelines for cherry-picks](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-release/cherry-picks.md#what-kind-of-prs-are-good-for-cherry-picks) 1.25 wouldn't have to be fixed in this case. So I'm inclined to say to not to fix it there."", 'created_at': datetime.datetime(2023, 1, 4, 11, 43, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371488850, 'issue_id': 1517566690, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114780#"" title=""Author self-approved"">mimowo</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114780#pullrequestreview-1235516851"" title=""Approved"">soltysh</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114780#pullrequestreview-1236545437"" title=""Approved"">xmudrii</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/controller/disruption/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/pkg/controller/disruption/OWNERS)~~ [soltysh]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 22, 10, 50, tzinfo=datetime.timezone.utc)}]","mimowo (Issue Creator) on (2023-01-03 15:39:23 UTC): /assign @alculquicondor

mimowo (Issue Creator) on (2023-01-03 17:15:09 UTC): /assign @soltysh

k8s-ci-robot on (2023-01-04 08:41:19 UTC): LGTM label has been added.  <details>Git tree hash: e658349b2bf017ec1a0b703041d401af10d204aa</details>

soltysh (Assginee) on (2023-01-04 08:42:18 UTC): /kind regression
/triage accepted
/priority critical-urgent

mimowo (Issue Creator) on (2023-01-04 08:44:53 UTC): /cc kubernetes/release-managers

xmudrii (Assginee) on (2023-01-04 10:53:39 UTC): @mimowo @soltysh Is this affecting only 1.26?

mimowo (Issue Creator) on (2023-01-04 11:05:30 UTC): It also affects 1.25, @xmudrii should I prepare an analogous PR?

xmudrii (Assginee) on (2023-01-04 11:09:33 UTC): @mimowo Yes, please.

mimowo (Issue Creator) on (2023-01-04 11:23:35 UTC): There you go: https://github.com/kubernetes/kubernetes/pull/114808

mimowo (Issue Creator) on (2023-01-04 11:34:45 UTC): Actually, I'm in a doubt after a second thought. 

The code wasn't protected by a feature gate in 1.25, however, it was indirectly protected as it would only activate if the pod disruption condition was added (https://github.com/kubernetes/kubernetes/blob/release-1.25/pkg/controller/disruption/disruption.go#L487-L489), and adding pod disruption conditions was alpha in 1.25. @alculquicondor @soltysh WDYT?

Closing the other PR for 1.25 for now.

soltysh (Assginee) on (2023-01-04 11:43:04 UTC): Based on [general guidelines for cherry-picks](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-release/cherry-picks.md#what-kind-of-prs-are-good-for-cherry-picks) 1.25 wouldn't have to be fixed in this case. So I'm inclined to say to not to fix it there.

k8s-ci-robot on (2023-01-04 22:10:50 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114780#"" title=""Author self-approved"">mimowo</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114780#pullrequestreview-1235516851"" title=""Approved"">soltysh</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114780#pullrequestreview-1236545437"" title=""Approved"">xmudrii</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/controller/disruption/OWNERS](https://github.com/kubernetes/kubernetes/blob/release-1.26/pkg/controller/disruption/OWNERS)~~ [soltysh]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1517549274,pull_request,closed,,Bump go-jose to v3.0.0,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

This replaces gopkg.in/square/go-jose.v2 with
github.com/go-jose/go-jose/v3 which is the currently-maintained stable version of go-jose.

This adds to vendor, but once go-oidc is bumped to a version including its go-jose bump, go-jose.v2 will be removed entirely.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",skitt,2023-01-03 15:26:52+00:00,[],2023-01-10 21:29:48+00:00,2023-01-04 11:14:57+00:00,https://github.com/kubernetes/kubernetes/pull/114779,"[('area/test', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('sig/cluster-lifecycle', 'Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('area/kubeadm', None), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1369899920, 'issue_id': 1517549274, 'author': 'k8s-ci-robot', 'body': ""Hi @skitt. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 3, 15, 27, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369900496, 'issue_id': 1517549274, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114779#"" title=""Author self-approved"">skitt</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign liggitt for approval by writing `/assign @liggitt` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)**\n- **[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)**\n- **[cmd/kubeadm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/OWNERS)**\n- **[pkg/controller/serviceaccount/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/serviceaccount/OWNERS)**\n- **[pkg/serviceaccount/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/serviceaccount/OWNERS)**\n- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**\n- **[staging/src/k8s.io/cluster-bootstrap/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cluster-bootstrap/OWNERS)**\n- **[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)**\n- **[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""liggitt""]} -->', 'created_at': datetime.datetime(2023, 1, 3, 15, 27, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370234728, 'issue_id': 1517549274, 'author': 'fedebongio', 'body': '/cc @liggitt', 'created_at': datetime.datetime(2023, 1, 3, 21, 18, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370794387, 'issue_id': 1517549274, 'author': 'skitt', 'body': 'Folded back into #114772.', 'created_at': datetime.datetime(2023, 1, 4, 11, 14, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377897701, 'issue_id': 1517549274, 'author': 'cici37', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 10, 21, 29, 44, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-03 15:27:01 UTC): Hi @skitt. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-03 15:27:30 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114779#"" title=""Author self-approved"">skitt</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign liggitt for approval by writing `/assign @liggitt` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)**
- **[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)**
- **[cmd/kubeadm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/OWNERS)**
- **[pkg/controller/serviceaccount/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/serviceaccount/OWNERS)**
- **[pkg/serviceaccount/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/serviceaccount/OWNERS)**
- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**
- **[staging/src/k8s.io/cluster-bootstrap/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cluster-bootstrap/OWNERS)**
- **[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)**
- **[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""liggitt""]} -->

fedebongio on (2023-01-03 21:18:49 UTC): /cc @liggitt

skitt (Issue Creator) on (2023-01-04 11:14:57 UTC): Folded back into #114772.

cici37 on (2023-01-10 21:29:44 UTC): /triage accepted

"
1517411404,pull_request,closed,,Allow SecretReference.Name in PVs to have 253 characters,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind bug

#### What this PR does / why we need it:

`PV.Spec.CSI.*SecretReference.Name` should be allowed to have up to 253 characters (`DNS1123Subdomain`) and not to be limited to 63 characters (`DNS1123Label`), so all possible Secrets names can be used as secrets in a PV.

This is continuation of https://github.com/kubernetes/kubernetes/pull/108331 / Kubernetes 1.25, which implemented ratcheting validation, i.e. allowed updating a PV with a long secret name, if the PV already had the long secret name. This makes sure downgrade from 1.27 to 1.26 works well and allows PVs created with long secret names in 1.27 to be updated in 1.26.

Now the long secret names are accepted during PV creation too.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes: https://github.com/kubernetes-csi/external-provisioner/issues/708

#### Special notes for your reviewer:
Kudos to @humblec for the original [PR](https://github.com/kubernetes/kubernetes/pull/108331).

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Fixed CSI PersistentVolumes to allow Secrets names longer than 63 characters.
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",jsafrane,2023-01-03 13:41:44+00:00,['liggitt'],2023-01-18 18:54:36+00:00,2023-01-18 18:54:34+00:00,https://github.com/kubernetes/kubernetes/pull/114776,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('api-review', 'Categorizes an issue or PR as actively needing an API review.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1375074450, 'issue_id': 1517411404, 'author': 'humblec', 'body': '@jsafrane my plan was to consume `validatePVSecretReference()` and  `allowDNSSubDomainSecretName` arg as general one for addressing issues with other volume sources too. There are more instances of volume sources to be corrected from the limitation of short secrets are only allowed. so I am wondering can we keep that func with that arg in place?', 'created_at': datetime.datetime(2023, 1, 9, 3, 58, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375567296, 'issue_id': 1517411404, 'author': 'jsafrane', 'body': 'Is there a plan to fix the other volume types? We fixed CSI in 1.25, but nobody has opened a PR nor issue for the other volumes since then.', 'created_at': datetime.datetime(2023, 1, 9, 12, 39, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377048359, 'issue_id': 1517411404, 'author': 'humblec', 'body': '> Is there a plan to fix the other volume types? We fixed CSI in 1.25, but nobody has opened a PR nor issue for the other volumes since then.\r\n\r\nIn initial review of one of the groundwork PR , this was discussed, however as you noted other volume source PRs have not been landed yet since the introduction of the general func. I see that, if we want to send a PR to address other volume source ( atleast one) we are pretty much going to introduce same model.  One of initial version of    `validatePVSecretReference` also had validation for `name and namespace`  which should ideally help to refactor these validation for many volume sources. \r\n\r\nBack to your question of -  is there any plan to fix.. ? , I was in an impression that , plugin maintainers could also help for their own driver, but it has not happened yet. I am interested to address the same as in initial plan  still though :).  Hence,  if we got a way to have these in place but address this requirement of downgrade in a different way , that would be really great. At the same time,  if that second version of  this PR add unwanted complexity, we can remove these for now and bring back when we go for refactoring.. my 2 cents.', 'created_at': datetime.datetime(2023, 1, 10, 10, 33, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1381906389, 'issue_id': 1517411404, 'author': 'jsafrane', 'body': '/label api-review', 'created_at': datetime.datetime(2023, 1, 13, 14, 4, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1381906824, 'issue_id': 1517411404, 'author': 'jsafrane', 'body': '/priority important-longterm', 'created_at': datetime.datetime(2023, 1, 13, 14, 4, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1381907337, 'issue_id': 1517411404, 'author': 'jsafrane', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 13, 14, 5, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1386885857, 'issue_id': 1517411404, 'author': 'jsafrane', 'body': 'cc @kubernetes/api-reviewers, this could be simple to review (unless I made a stupid mistake)', 'created_at': datetime.datetime(2023, 1, 18, 11, 14, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387058582, 'issue_id': 1517411404, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 18, 13, 16, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387058762, 'issue_id': 1517411404, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: b8d074cd9f7b220bcfa8958c943e1d44c8e5a104</details>', 'created_at': datetime.datetime(2023, 1, 18, 13, 16, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387059772, 'issue_id': 1517411404, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114776#"" title=""Author self-approved"">jsafrane</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114776#issuecomment-1387058582"" title=""Approved"">liggitt</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 18, 13, 17, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387369562, 'issue_id': 1517411404, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114776) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 18, 16, 42, 18, tzinfo=datetime.timezone.utc)}]","humblec on (2023-01-09 03:58:07 UTC): @jsafrane my plan was to consume `validatePVSecretReference()` and  `allowDNSSubDomainSecretName` arg as general one for addressing issues with other volume sources too. There are more instances of volume sources to be corrected from the limitation of short secrets are only allowed. so I am wondering can we keep that func with that arg in place?

jsafrane (Issue Creator) on (2023-01-09 12:39:11 UTC): Is there a plan to fix the other volume types? We fixed CSI in 1.25, but nobody has opened a PR nor issue for the other volumes since then.

humblec on (2023-01-10 10:33:42 UTC): In initial review of one of the groundwork PR , this was discussed, however as you noted other volume source PRs have not been landed yet since the introduction of the general func. I see that, if we want to send a PR to address other volume source ( atleast one) we are pretty much going to introduce same model.  One of initial version of    `validatePVSecretReference` also had validation for `name and namespace`  which should ideally help to refactor these validation for many volume sources. 

Back to your question of -  is there any plan to fix.. ? , I was in an impression that , plugin maintainers could also help for their own driver, but it has not happened yet. I am interested to address the same as in initial plan  still though :).  Hence,  if we got a way to have these in place but address this requirement of downgrade in a different way , that would be really great. At the same time,  if that second version of  this PR add unwanted complexity, we can remove these for now and bring back when we go for refactoring.. my 2 cents.

jsafrane (Issue Creator) on (2023-01-13 14:04:16 UTC): /label api-review

jsafrane (Issue Creator) on (2023-01-13 14:04:39 UTC): /priority important-longterm

jsafrane (Issue Creator) on (2023-01-13 14:05:03 UTC): /triage accepted

jsafrane (Issue Creator) on (2023-01-18 11:14:18 UTC): cc @kubernetes/api-reviewers, this could be simple to review (unless I made a stupid mistake)

liggitt (Assginee) on (2023-01-18 13:16:27 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-18 13:16:34 UTC): LGTM label has been added.  <details>Git tree hash: b8d074cd9f7b220bcfa8958c943e1d44c8e5a104</details>

k8s-ci-robot on (2023-01-18 13:17:15 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114776#"" title=""Author self-approved"">jsafrane</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114776#issuecomment-1387058582"" title=""Approved"">liggitt</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/apis/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

k8s-triage-robot on (2023-01-18 16:42:18 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114776) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

"
1517374666,pull_request,closed,,kubelet/cm/cpumanager: Improving test coverage,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup


#### What this PR does / why we need it:

If applied this commit will increase the unit tests code coverage of `pkg/kubelet/cm/cpumanager`.

- Initial unit tests code coverage

<img width=""733"" alt=""Screenshot 2023-01-02 at 20 34 22"" src=""https://user-images.githubusercontent.com/9576370/210363360-b1588b26-b89b-4dfa-a388-b515cb9fb935.png"">

- After Changes

<img width=""732"" alt=""Screenshot 2023-01-03 at 14 07 09"" src=""https://user-images.githubusercontent.com/9576370/210363396-5229a00d-8788-4a87-9359-8ac241de05cc.png"">


#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",TommyStarK,2023-01-03 13:12:23+00:00,"['mrunalp', 'klueska', 'derekwaynecarr', 'dchen1107', 'bart0sh']",2024-03-20 16:02:07+00:00,2024-03-20 16:02:05+00:00,https://github.com/kubernetes/kubernetes/pull/114775,"[('area/kubelet', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('lifecycle/rotten', 'Denotes an issue or PR that has aged beyond stale and will be auto-closed.'), ('tide/merge-method-squash', 'Denotes a PR that should be squashed by tide when it merges.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1369890930, 'issue_id': 1517374666, 'author': 'k8s-triage-robot', 'body': 'Unknown CLA label state. Rechecking for CLA labels.\n\nSend feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/check-cla\n/easycla', 'created_at': datetime.datetime(2023, 1, 3, 15, 19, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370015995, 'issue_id': 1517374666, 'author': 'TommyStarK', 'body': '/kind cleanup\r\n/area kubelet\r\n/sig node', 'created_at': datetime.datetime(2023, 1, 3, 17, 8, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370031619, 'issue_id': 1517374666, 'author': 'TommyStarK', 'body': 'Hello @bart0sh \n\nI opened this one but the robot failed to label it properly. Had to do it manually. Not sure if I should add the size myself for example or if I can trigger the label step again. \n\nHappy new year, best wishes. \nCheers,', 'created_at': datetime.datetime(2023, 1, 3, 17, 20, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370106457, 'issue_id': 1517374666, 'author': 'bart0sh', 'body': '/ok-to-test\r\n/priority important-longterm\r\n/triage accepted', 'created_at': datetime.datetime(2023, 1, 3, 18, 43, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370111188, 'issue_id': 1517374666, 'author': 'bart0sh', 'body': '/check-required-labels', 'created_at': datetime.datetime(2023, 1, 3, 18, 49, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370113029, 'issue_id': 1517374666, 'author': 'bart0sh', 'body': ""@TommyStarK \r\n> Not sure if I should add the size myself for example or if I can trigger the label step again.\r\n\r\nI hope the robot will relabel this PR when it's rebased."", 'created_at': datetime.datetime(2023, 1, 3, 18, 51, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370113281, 'issue_id': 1517374666, 'author': 'bart0sh', 'body': '/assign', 'created_at': datetime.datetime(2023, 1, 3, 18, 51, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370114901, 'issue_id': 1517374666, 'author': 'bart0sh', 'body': '/release-note-none', 'created_at': datetime.datetime(2023, 1, 3, 18, 53, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370215287, 'issue_id': 1517374666, 'author': 'TommyStarK', 'body': '/retest-required', 'created_at': datetime.datetime(2023, 1, 3, 20, 55, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370725889, 'issue_id': 1517374666, 'author': 'bart0sh', 'body': '/label tide/merge-method-squash', 'created_at': datetime.datetime(2023, 1, 4, 10, 9, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370727117, 'issue_id': 1517374666, 'author': 'TommyStarK', 'body': '@bart0sh Do you want me to squash my commits into a single one ?', 'created_at': datetime.datetime(2023, 1, 4, 10, 10, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370747773, 'issue_id': 1517374666, 'author': 'bart0sh', 'body': ""@TommyStarK it would be nice, but you don't have to. `tide/merge-method-squash` should do it.\r\nPlease, read [this guide](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#squashing) for more details."", 'created_at': datetime.datetime(2023, 1, 4, 10, 28, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370777254, 'issue_id': 1517374666, 'author': 'bart0sh', 'body': '/lgtm\r\n/assign @derekwaynecarr @dchen1107 @mrunalp', 'created_at': datetime.datetime(2023, 1, 4, 10, 58, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370777330, 'issue_id': 1517374666, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 426354c086d22ff2a821173bed12cd6fbef4ff64</details>', 'created_at': datetime.datetime(2023, 1, 4, 10, 58, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370777523, 'issue_id': 1517374666, 'author': 'bart0sh', 'body': '/assign @klueska', 'created_at': datetime.datetime(2023, 1, 4, 10, 58, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370782919, 'issue_id': 1517374666, 'author': 'TommyStarK', 'body': ""@bart0sh It's done. Thank you as usual for taking the time and sharing this guide I obviously missed"", 'created_at': datetime.datetime(2023, 1, 4, 11, 3, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372057240, 'issue_id': 1517374666, 'author': 'bart0sh', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 5, 10, 47, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372057340, 'issue_id': 1517374666, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 9811e51631c61127eba621b8b009eb43ab0272f3</details>', 'created_at': datetime.datetime(2023, 1, 5, 10, 47, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1439762525, 'issue_id': 1517374666, 'author': 'TommyStarK', 'body': '/assign @derekwaynecarr', 'created_at': datetime.datetime(2023, 2, 22, 10, 19, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1454875818, 'issue_id': 1517374666, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114775#"" title=""Author self-approved"">TommyStarK</a>*\n**Once this PR has been reviewed and has the lgtm label**, please ask for approval from dchen1107. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[pkg/kubelet/cm/cpumanager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/cm/cpumanager/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""dchen1107""]} -->', 'created_at': datetime.datetime(2023, 3, 4, 21, 6, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1454875986, 'issue_id': 1517374666, 'author': 'TommyStarK', 'body': '@bart0sh PR has been rebased', 'created_at': datetime.datetime(2023, 3, 4, 21, 7, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1455043740, 'issue_id': 1517374666, 'author': 'bart0sh', 'body': '/lgtm\r\n@klueska can you have a look?', 'created_at': datetime.datetime(2023, 3, 5, 10, 2, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1455043774, 'issue_id': 1517374666, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 1bd1c2b75544f3fabd9d693920bb9edc5fbe0308</details>', 'created_at': datetime.datetime(2023, 3, 5, 10, 2, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1457895225, 'issue_id': 1517374666, 'author': 'TommyStarK', 'body': '@SergeyKanzhelev I tried to contact kubelet approvers to move on on those PRs and avoid the lifecycle/stale label', 'created_at': datetime.datetime(2023, 3, 7, 10, 8, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1463590931, 'issue_id': 1517374666, 'author': 'TommyStarK', 'body': '@derekwaynecarr I know you are super busy, another small coverage improvement', 'created_at': datetime.datetime(2023, 3, 10, 10, 23, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1582344765, 'issue_id': 1517374666, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 6, 8, 10, 35, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1608797302, 'issue_id': 1517374666, 'author': 'TommyStarK', 'body': '/remove-lifecycle stale', 'created_at': datetime.datetime(2023, 6, 27, 4, 57, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1643423324, 'issue_id': 1517374666, 'author': 'TommyStarK', 'body': ""@klueska when you have time I'd like to complete this PR and merge it"", 'created_at': datetime.datetime(2023, 7, 20, 7, 32, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1902126297, 'issue_id': 1517374666, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 1, 20, 15, 8, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1952679752, 'issue_id': 1517374666, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle rotten\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 2, 19, 15, 22, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 2009931305, 'issue_id': 1517374666, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 3, 20, 16, 2, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 2009931531, 'issue_id': 1517374666, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114775#issuecomment-2009931305):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 3, 20, 16, 2, 6, tzinfo=datetime.timezone.utc)}]","k8s-triage-robot on (2023-01-03 15:19:44 UTC): Unknown CLA label state. Rechecking for CLA labels.

Send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/check-cla
/easycla

TommyStarK (Issue Creator) on (2023-01-03 17:08:24 UTC): /kind cleanup
/area kubelet
/sig node

TommyStarK (Issue Creator) on (2023-01-03 17:20:58 UTC): Hello @bart0sh 

I opened this one but the robot failed to label it properly. Had to do it manually. Not sure if I should add the size myself for example or if I can trigger the label step again. 

Happy new year, best wishes. 
Cheers,

bart0sh (Assginee) on (2023-01-03 18:43:44 UTC): /ok-to-test
/priority important-longterm
/triage accepted

bart0sh (Assginee) on (2023-01-03 18:49:01 UTC): /check-required-labels

bart0sh (Assginee) on (2023-01-03 18:51:10 UTC): @TommyStarK 

I hope the robot will relabel this PR when it's rebased.

bart0sh (Assginee) on (2023-01-03 18:51:27 UTC): /assign

bart0sh (Assginee) on (2023-01-03 18:53:18 UTC): /release-note-none

TommyStarK (Issue Creator) on (2023-01-03 20:55:14 UTC): /retest-required

bart0sh (Assginee) on (2023-01-04 10:09:02 UTC): /label tide/merge-method-squash

TommyStarK (Issue Creator) on (2023-01-04 10:10:03 UTC): @bart0sh Do you want me to squash my commits into a single one ?

bart0sh (Assginee) on (2023-01-04 10:28:59 UTC): @TommyStarK it would be nice, but you don't have to. `tide/merge-method-squash` should do it.
Please, read [this guide](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#squashing) for more details.

bart0sh (Assginee) on (2023-01-04 10:58:27 UTC): /lgtm
/assign @derekwaynecarr @dchen1107 @mrunalp

k8s-ci-robot on (2023-01-04 10:58:33 UTC): LGTM label has been added.  <details>Git tree hash: 426354c086d22ff2a821173bed12cd6fbef4ff64</details>

bart0sh (Assginee) on (2023-01-04 10:58:45 UTC): /assign @klueska

TommyStarK (Issue Creator) on (2023-01-04 11:03:57 UTC): @bart0sh It's done. Thank you as usual for taking the time and sharing this guide I obviously missed

bart0sh (Assginee) on (2023-01-05 10:47:02 UTC): /lgtm

k8s-ci-robot on (2023-01-05 10:47:08 UTC): LGTM label has been added.  <details>Git tree hash: 9811e51631c61127eba621b8b009eb43ab0272f3</details>

TommyStarK (Issue Creator) on (2023-02-22 10:19:51 UTC): /assign @derekwaynecarr

k8s-ci-robot on (2023-03-04 21:06:45 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114775#"" title=""Author self-approved"">TommyStarK</a>*
**Once this PR has been reviewed and has the lgtm label**, please ask for approval from dchen1107. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[pkg/kubelet/cm/cpumanager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/cm/cpumanager/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""dchen1107""]} -->

TommyStarK (Issue Creator) on (2023-03-04 21:07:22 UTC): @bart0sh PR has been rebased

bart0sh (Assginee) on (2023-03-05 10:02:16 UTC): /lgtm
@klueska can you have a look?

k8s-ci-robot on (2023-03-05 10:02:22 UTC): LGTM label has been added.  <details>Git tree hash: 1bd1c2b75544f3fabd9d693920bb9edc5fbe0308</details>

TommyStarK (Issue Creator) on (2023-03-07 10:08:20 UTC): @SergeyKanzhelev I tried to contact kubelet approvers to move on on those PRs and avoid the lifecycle/stale label

TommyStarK (Issue Creator) on (2023-03-10 10:23:53 UTC): @derekwaynecarr I know you are super busy, another small coverage improvement

k8s-triage-robot on (2023-06-08 10:35:53 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

TommyStarK (Issue Creator) on (2023-06-27 04:57:26 UTC): /remove-lifecycle stale

TommyStarK (Issue Creator) on (2023-07-20 07:32:29 UTC): @klueska when you have time I'd like to complete this PR and merge it

k8s-triage-robot on (2024-01-20 15:08:55 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2024-02-19 15:22:13 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle rotten

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2024-03-20 16:02:01 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2024-03-20 16:02:06 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114775#issuecomment-2009931305):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1517349514,pull_request,closed,,Fix normal request metric verb correctly,"Signed-off-by: kkkkun <scuzk373x@gmail.com>

#### What type of PR is this?
/kind bug

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
When a request which is getting logs comes to apiserver，it is labeled as `CONNECT` in `apiserver_longrunning_gauge`,  but it is labeled as `GET` in `apiserver_request_duration_seconds_bucket`. We should label all to `CONNECT`  verb correctly.



# before:
```
kubectl  get  --raw=""/metrics"" |  grep log 
# HELP apiserver_audit_requests_rejected_total [ALPHA] Counter of apiserver requests rejected due to an error in audit logging backend.
apiserver_longrunning_gauge{component=""apiserver"",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.005""} 8
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.01""} 22
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.02""} 25
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.03""} 25
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.04""} 25
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.05""} 25
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.1""} 25
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.15""} 25
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.2""} 25
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.25""} 25
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.3""} 25
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.35""} 25
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.4""} 25
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.45""} 25
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.5""} 28
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.6""} 31
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.7""} 31
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.8""} 31
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""0.9""} 32
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""1""} 33
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""1.25""} 33
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""1.5""} 33
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""1.75""} 36
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""2""} 36
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""2.5""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""3""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""3.5""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""4""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""4.5""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""5""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""6""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""7""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""8""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""9""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""10""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""15""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""20""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""25""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""30""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""40""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""50""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""60""} 39
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1"",le=""+Inf""} 39
apiserver_request_duration_seconds_sum{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1""} 17.326923664000002
apiserver_request_duration_seconds_count{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1""} 39
apiserver_request_total{code=""200"",component=""apiserver"",contentType=""text/plain"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1""} 18
apiserver_request_total{code=""500"",component=""apiserver"",contentType=""application/json"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""GET"",version=""v1""} 21
```
# after
```
kubectl  get  --raw=""/metrics"" |  grep log 
# HELP apiserver_audit_requests_rejected_total [ALPHA] Counter of apiserver requests rejected due to an error in audit logging backend.
apiserver_longrunning_gauge{component=""apiserver"",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.005""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.01""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.02""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.03""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.04""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.05""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.1""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.15""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.2""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.25""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.3""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.35""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.4""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.45""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.5""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.6""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.7""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.8""} 0
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""0.9""} 3
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""1""} 3
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""1.25""} 3
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""1.5""} 6
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""1.75""} 6
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""2""} 6
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""2.5""} 6
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""3""} 6
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""3.5""} 6
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""4""} 6
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""4.5""} 6
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""5""} 6
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""6""} 6
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""7""} 6
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""8""} 6
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""9""} 6
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""10""} 6
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""15""} 9
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""20""} 9
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""25""} 9
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""30""} 9
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""40""} 9
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""50""} 9
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""60""} 9
apiserver_request_duration_seconds_bucket{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1"",le=""+Inf""} 9
apiserver_request_duration_seconds_sum{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1""} 42.375272964
apiserver_request_duration_seconds_count{component=""apiserver"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1""} 9
apiserver_request_total{code=""200"",component=""apiserver"",contentType=""text/plain"",dry_run="""",group="""",resource=""pods"",scope=""resource"",subresource=""log"",verb=""CONNECT"",version=""v1""} 9
```



#### Which issue(s) this PR fixes:
Fixes # 



#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note

```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",kkkkun,2023-01-03 12:51:34+00:00,['wojtek-t'],2023-01-04 14:06:00+00:00,2023-01-04 14:04:00+00:00,https://github.com/kubernetes/kubernetes/pull/114774,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('area/apiserver', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1369732825, 'issue_id': 1517349514, 'author': 'k8s-ci-robot', 'body': ""Hi @kkkkun. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 3, 12, 51, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369734811, 'issue_id': 1517349514, 'author': 'kkkkun', 'body': '/release-note-none', 'created_at': datetime.datetime(2023, 1, 3, 12, 54, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369735620, 'issue_id': 1517349514, 'author': 'kkkkun', 'body': '/assign @wojtek-t', 'created_at': datetime.datetime(2023, 1, 3, 12, 55, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369743307, 'issue_id': 1517349514, 'author': 'aojea', 'body': '/ok-to-test\r\nthis is a follow up on https://github.com/kubernetes/kubernetes/pull/111988 , right?', 'created_at': datetime.datetime(2023, 1, 3, 13, 3, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369752946, 'issue_id': 1517349514, 'author': 'kkkkun', 'body': ""> this is a follow up on #111988 , right?\r\n\r\nYes, it's imported by #111988."", 'created_at': datetime.datetime(2023, 1, 3, 13, 13, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370233267, 'issue_id': 1517349514, 'author': 'fedebongio', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 3, 21, 16, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370696425, 'issue_id': 1517349514, 'author': 'wojtek-t', 'body': 'Heh... - thanks for catching this.\r\n\r\n/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 4, 9, 42, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370696543, 'issue_id': 1517349514, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: b1ec2fbdca8393282b6922e40484a682f2394a28</details>', 'created_at': datetime.datetime(2023, 1, 4, 9, 42, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370696795, 'issue_id': 1517349514, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114774#"" title=""Author self-approved"">kkkkun</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114774#issuecomment-1370696425"" title=""Approved"">wojtek-t</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[staging/src/k8s.io/apiserver/pkg/endpoints/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/endpoints/metrics/OWNERS)~~ [wojtek-t]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 4, 9, 42, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370856044, 'issue_id': 1517349514, 'author': 'kkkkun', 'body': '/test pull-kubernetes-unit', 'created_at': datetime.datetime(2023, 1, 4, 12, 15, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370901267, 'issue_id': 1517349514, 'author': 'kkkkun', 'body': '/test pull-kubernetes-unit', 'created_at': datetime.datetime(2023, 1, 4, 12, 59, 48, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-03 12:51:43 UTC): Hi @kkkkun. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

kkkkun (Issue Creator) on (2023-01-03 12:54:07 UTC): /release-note-none

kkkkun (Issue Creator) on (2023-01-03 12:55:04 UTC): /assign @wojtek-t

aojea on (2023-01-03 13:03:22 UTC): /ok-to-test
this is a follow up on https://github.com/kubernetes/kubernetes/pull/111988 , right?

kkkkun (Issue Creator) on (2023-01-03 13:13:07 UTC): Yes, it's imported by #111988.

fedebongio on (2023-01-03 21:16:52 UTC): /triage accepted

wojtek-t (Assginee) on (2023-01-04 09:42:13 UTC): Heh... - thanks for catching this.

/lgtm
/approve

k8s-ci-robot on (2023-01-04 09:42:19 UTC): LGTM label has been added.  <details>Git tree hash: b1ec2fbdca8393282b6922e40484a682f2394a28</details>

k8s-ci-robot on (2023-01-04 09:42:34 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114774#"" title=""Author self-approved"">kkkkun</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114774#issuecomment-1370696425"" title=""Approved"">wojtek-t</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[staging/src/k8s.io/apiserver/pkg/endpoints/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/endpoints/metrics/OWNERS)~~ [wojtek-t]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

kkkkun (Issue Creator) on (2023-01-04 12:15:06 UTC): /test pull-kubernetes-unit

kkkkun (Issue Creator) on (2023-01-04 12:59:48 UTC): /test pull-kubernetes-unit

"
1517303177,pull_request,closed,,fix a small log error about proxy,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind cleanup
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
fix a small log error about proxy
#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
 ""NONE""
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",yangjunmyfm192085,2023-01-03 12:08:51+00:00,['aojea'],2023-01-11 15:51:46+00:00,2023-01-11 15:51:43+00:00,https://github.com/kubernetes/kubernetes/pull/114773,"[('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1369696724, 'issue_id': 1517303177, 'author': 'k8s-ci-robot', 'body': '@yangjunmyfm192085: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 3, 12, 8, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369697692, 'issue_id': 1517303177, 'author': 'yangjunmyfm192085', 'body': '/cc @aojea', 'created_at': datetime.datetime(2023, 1, 3, 12, 10, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378739480, 'issue_id': 1517303177, 'author': 'yangjunmyfm192085', 'body': ""@aojea This is indeed a very small log fault. I haven't found any more issues yet. Is this worth to fix?"", 'created_at': datetime.datetime(2023, 1, 11, 13, 17, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378831760, 'issue_id': 1517303177, 'author': 'aojea', 'body': ""> @aojea This is indeed a very small log fault. I haven't found any more issues yet. Is this worth to fix?\r\n\r\nan error is an error 😄 \r\n\r\nthanks for fixing it\r\n\r\n/lgtm\r\n/approve"", 'created_at': datetime.datetime(2023, 1, 11, 14, 25, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378831952, 'issue_id': 1517303177, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: f656554154d67e18558df9f9ee7ea185e3e839f6</details>', 'created_at': datetime.datetime(2023, 1, 11, 14, 25, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1378832286, 'issue_id': 1517303177, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114773#issuecomment-1378831760"" title=""Approved"">aojea</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114773#"" title=""Author self-approved"">yangjunmyfm192085</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[cmd/kube-proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-proxy/OWNERS)~~ [aojea]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 11, 14, 25, 31, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-03 12:08:59 UTC): @yangjunmyfm192085: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

yangjunmyfm192085 (Issue Creator) on (2023-01-03 12:10:02 UTC): /cc @aojea

yangjunmyfm192085 (Issue Creator) on (2023-01-11 13:17:39 UTC): @aojea This is indeed a very small log fault. I haven't found any more issues yet. Is this worth to fix?

aojea (Assginee) on (2023-01-11 14:25:09 UTC): an error is an error 😄 

thanks for fixing it

/lgtm
/approve

k8s-ci-robot on (2023-01-11 14:25:17 UTC): LGTM label has been added.  <details>Git tree hash: f656554154d67e18558df9f9ee7ea185e3e839f6</details>

k8s-ci-robot on (2023-01-11 14:25:31 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114773#issuecomment-1378831760"" title=""Approved"">aojea</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114773#"" title=""Author self-approved"">yangjunmyfm192085</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[cmd/kube-proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-proxy/OWNERS)~~ [aojea]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1517174030,pull_request,closed,,Bump go-oidc to 3.6.0,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

This updates go-oidc to v3.5.0, which is now a proper semantically-versioned Go module. Most importantly for Kubernetes, it pulls in newer versions of various Go dependencies, which help with the cloud.google.com/go / genproto untangling (#113366).

The transitive upgrade of cloud.google.com/go/compute/metadata requires a bump of cloud.google.com/go/compute to a version where metadata is split out; this patch upgrades to the version matching metadata v0.2.1, compute v1.12.1. (Later versions pull in newer genproto versions which re-introduce a firestore module dependency.)

go-jose is bumped too; this involves handling the change in jwt.NewNumericDate(), which now returns a pointer.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
None.

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",skitt,2023-01-03 10:07:33+00:00,['aramase'],2024-02-04 06:16:32+00:00,2024-02-04 06:16:30+00:00,https://github.com/kubernetes/kubernetes/pull/114772,"[('area/test', None), ('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('area/kubectl', None), ('area/cloudprovider', None), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('sig/cluster-lifecycle', 'Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.'), ('needs-rebase', 'Indicates a PR cannot be merged because it has merge conflicts with HEAD.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('area/code-generation', ''), ('lifecycle/rotten', 'Denotes an issue or PR that has aged beyond stale and will be auto-closed.'), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1369587203, 'issue_id': 1517174030, 'author': 'k8s-ci-robot', 'body': ""Hi @skitt. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 3, 10, 7, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369700197, 'issue_id': 1517174030, 'author': 'skitt', 'body': '/kind cleanup', 'created_at': datetime.datetime(2023, 1, 3, 12, 12, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369715792, 'issue_id': 1517174030, 'author': 'dims', 'body': '/ok-to-test', 'created_at': datetime.datetime(2023, 1, 3, 12, 31, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369716229, 'issue_id': 1517174030, 'author': 'dims', 'body': '/assign @liggitt', 'created_at': datetime.datetime(2023, 1, 3, 12, 32, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370232767, 'issue_id': 1517174030, 'author': 'fedebongio', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 3, 21, 16, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370756855, 'issue_id': 1517174030, 'author': 'bart0sh', 'body': '/priority important-soon', 'created_at': datetime.datetime(2023, 1, 4, 10, 37, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370825193, 'issue_id': 1517174030, 'author': 'skitt', 'body': 'The `cloud.google.com/go/firestore` error is caused by https://github.com/googleapis/go-genproto/commit/67e5cbc046fddc8362f3cdb8d7897dfc780fbb12.', 'created_at': datetime.datetime(2023, 1, 4, 11, 42, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371067021, 'issue_id': 1517174030, 'author': 'liggitt', 'body': 'oof, the updated cloud.google.com module adds 100 additional transitive deps :-(\r\n\r\n```diff\r\n-Direct Dependencies: 212 \r\n-Transitive Dependencies: 234 \r\n-Total Dependencies: 285 \r\n-Max Depth Of Dependencies: 23 \r\n+Direct Dependencies: 213 \r\n+Transitive Dependencies: 337 \r\n+Total Dependencies: 386 \r\n+Max Depth Of Dependencies: 19 \r\n```', 'created_at': datetime.datetime(2023, 1, 4, 15, 23, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371094314, 'issue_id': 1517174030, 'author': 'skitt', 'body': '> oof, the updated cloud.google.com module adds 100 additional transitive deps :-(\r\n\r\nYes, it’s not really a cleanup PR any more :-(. I saw that go/compute got updated to v1.13.0 instead of the v1.12.1 in the commit message, I’ve downgraded to v1.12.1 but it doesn’t help:\r\n\r\n```diff\r\n-Direct Dependencies: 212 \r\n-Transitive Dependencies: 234 \r\n-Total Dependencies: 285 \r\n-Max Depth Of Dependencies: 23 \r\n+Direct Dependencies: 213 \r\n+Transitive Dependencies: 337 \r\n+Total Dependencies: 386 \r\n+Max Depth Of Dependencies: 19 \r\n```', 'created_at': datetime.datetime(2023, 1, 4, 15, 45, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371116001, 'issue_id': 1517174030, 'author': 'skitt', 'body': 'Scratch that, it’s genproto that’s pulling in all the cloud.google.com module dependencies.', 'created_at': datetime.datetime(2023, 1, 4, 16, 3, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371141869, 'issue_id': 1517174030, 'author': 'liggitt', 'body': ""We're pulling in cloud.google.com/go via these four dependencies on master:\r\n\r\n* github.com/google/cadvisor@v0.46.0 cloud.google.com/go@v0.97.0\r\n* go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc@v0.35.0 cloud.google.com/go@v0.97.0\r\n* golang.org/x/oauth2@v0.0.0-20220223155221-ee480838109b cloud.google.com/go@v0.97.0\r\n  * updating this to v0.3.0 narrows this to only use the isolated metadata dep... opened https://github.com/kubernetes/kubernetes/pull/114822 to do that\r\n* google.golang.org/grpc@v1.51.0 cloud.google.com/go@v0.97.0\r\n\r\nAs you noted, this PR updates genproto to a version that pulls in massive numbers of additional cloud.google.com deps.\r\n\r\nI think we want to work through dropping the cadvisor, otelgrpc, grpc, genproto deps before bumping."", 'created_at': datetime.datetime(2023, 1, 4, 16, 23, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371146393, 'issue_id': 1517174030, 'author': 'skitt', 'body': 'Should I re-open the go-jose PR so that part of this bump can get merged?', 'created_at': datetime.datetime(2023, 1, 4, 16, 27, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371148541, 'issue_id': 1517174030, 'author': 'liggitt', 'body': ""> Should I re-open the go-jose PR so that part of this bump can get merged?\r\n\r\nPossibly, I'm open to incremental isolated bumps if we can do it without dragging in a bunch of additional stuff, or simultaneously depending on multiple versions of a module"", 'created_at': datetime.datetime(2023, 1, 4, 16, 28, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371151959, 'issue_id': 1517174030, 'author': 'skitt', 'body': ""> > Should I re-open the go-jose PR so that part of this bump can get merged?\r\n> \r\n> Possibly, I'm open to incremental isolated bumps if we can do it without dragging in a bunch of additional stuff, or simultaneously depending on multiple versions of a module\r\n\r\nIt’s #114823, but it does mean having a direct dependency on jose v3 and an indirect dependency on v2 (through go-oicd)."", 'created_at': datetime.datetime(2023, 1, 4, 16, 31, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371164896, 'issue_id': 1517174030, 'author': 'liggitt', 'body': ""> It’s #114823, but it does mean having a direct dependency on jose v3 and an indirect dependency on v2 (through go-oicd).\r\n\r\nhmm... I'm not sure it's worth adding v3 if we can't drop v2 yet"", 'created_at': datetime.datetime(2023, 1, 4, 16, 42, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371181013, 'issue_id': 1517174030, 'author': 'skitt', 'body': ""> > It’s #114823, but it does mean having a direct dependency on jose v3 and an indirect dependency on v2 (through go-oicd).\r\n> \r\n> hmm... I'm not sure it's worth adding v3 if we can't drop v2 yet\r\n\r\nProbably not, let’s handle it here."", 'created_at': datetime.datetime(2023, 1, 4, 16, 57, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371187439, 'issue_id': 1517174030, 'author': 'skitt', 'body': 'The cadvisor dependency on cloud.google.com/go should be taken care of by https://github.com/google/cadvisor/pull/3194.\r\nThe grpc dependency is taken care of already, by https://github.com/grpc/grpc-go/pull/5803; once the next release happens, upgrading that will drop the dependency there.\r\ngo.opentelemetry.io pulls in cloud.google.com/go through oauth2 and grpc, once grpc is released I’ll update https://github.com/open-telemetry/opentelemetry-go-contrib/pull/3133.', 'created_at': datetime.datetime(2023, 1, 4, 17, 3, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1382878463, 'issue_id': 1517174030, 'author': 'bart0sh', 'body': '@skitt  If you still need this PR then please rebase, if not, please close the PR.', 'created_at': datetime.datetime(2023, 1, 14, 18, 20, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1382881774, 'issue_id': 1517174030, 'author': 'liggitt', 'body': ""This is blocked on the cloud dependency tangle, so I don't think it's worth keeping rebased right now"", 'created_at': datetime.datetime(2023, 1, 14, 18, 31, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1467574579, 'issue_id': 1517174030, 'author': 'pacoxu', 'body': '/remove-area kubeadm', 'created_at': datetime.datetime(2023, 3, 14, 7, 52, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1578964192, 'issue_id': 1517174030, 'author': 'skitt', 'body': '@liggitt the dependency stats are rather nice now (or rather, the dependency tree is already bad, this PR doesn’t make it worse):\r\n\r\n```patch\r\n --- /logs/artifacts/stats-base.txt\t2023-06-06 15:07:06.551904748 +0000\r\n+++ /logs/artifacts/stats.txt\t2023-06-06 15:07:06.167869665 +0000\r\n@@ -1,6 +1,6 @@\r\n-Direct Dependencies: 210 \r\n-Transitive Dependencies: 340 \r\n-Total Dependencies: 389 \r\n+Direct Dependencies: 209 \r\n+Transitive Dependencies: 341 \r\n+Total Dependencies: 388 \r\n Max Depth Of Dependencies: 17 \r\n```', 'created_at': datetime.datetime(2023, 6, 6, 15, 17, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1648214745, 'issue_id': 1517174030, 'author': 'aramase', 'body': '/uncc liggitt\r\n/unassign liggitt \r\nas per https://github.com/kubernetes/kubernetes/pull/114772#pullrequestreview-1515045221\r\n\r\n/assign aramase', 'created_at': datetime.datetime(2023, 7, 24, 16, 14, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1666219191, 'issue_id': 1517174030, 'author': 'rexagod', 'body': '/remove-sig instrumentation', 'created_at': datetime.datetime(2023, 8, 4, 21, 58, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1666220030, 'issue_id': 1517174030, 'author': 'skitt', 'body': '> @skitt Are you still working on this?\r\n\r\nYes, but I won’t have time to revisit it for another two weeks or so.', 'created_at': datetime.datetime(2023, 8, 4, 22, 0, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1730080396, 'issue_id': 1517174030, 'author': 'aramase', 'body': '> > @skitt Are you still working on this?\r\n> \r\n> Yes, but I won’t have time to revisit it for another two weeks or so.\r\n\r\nbump on this! The PR requires rebase.', 'created_at': datetime.datetime(2023, 9, 21, 18, 19, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1732989333, 'issue_id': 1517174030, 'author': 'k8s-ci-robot', 'body': '@skitt: The following test **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:\n\nTest name | Commit | Details | Required | Rerun command\n--- | --- | --- | --- | ---\npull-kubernetes-e2e-kind-kms | 1d85e425bd98ea8917ffa12d86c14c734c80dd09 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114772/pull-kubernetes-e2e-kind-kms/1648269821353136128) | false | `/test pull-kubernetes-e2e-kind-kms`\n\n[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114772). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3Askitt). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).\n</details>\n<!-- test report -->', 'created_at': datetime.datetime(2023, 9, 25, 6, 18, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1732997974, 'issue_id': 1517174030, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114772#"" title=""Author self-approved"">skitt</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign [liggitt](https://github.com/liggitt) for approval. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)**\n- **[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)**\n- **[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)**\n- **[pkg/controller/serviceaccount/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/serviceaccount/OWNERS)**\n- **[pkg/serviceaccount/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/serviceaccount/OWNERS)**\n- **[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)**\n- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**\n- **[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)**\n- **[staging/src/k8s.io/cluster-bootstrap/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cluster-bootstrap/OWNERS)**\n- **[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)**\n- **[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)**\n- **[staging/src/k8s.io/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubelet/OWNERS)**\n- **[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)**\n- **[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)**\n- **[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)**\n- **[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""liggitt""]} -->', 'created_at': datetime.datetime(2023, 9, 25, 6, 26, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1762460358, 'issue_id': 1517174030, 'author': 'k8s-ci-robot', 'body': 'PR needs rebase.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 10, 14, 1, 14, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1925595824, 'issue_id': 1517174030, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2024, 2, 4, 6, 16, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1925595848, 'issue_id': 1517174030, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114772#issuecomment-1925595824):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2024, 2, 4, 6, 16, 31, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-03 10:07:42 UTC): Hi @skitt. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

skitt (Issue Creator) on (2023-01-03 12:12:57 UTC): /kind cleanup

dims on (2023-01-03 12:31:56 UTC): /ok-to-test

dims on (2023-01-03 12:32:25 UTC): /assign @liggitt

fedebongio on (2023-01-03 21:16:13 UTC): /triage accepted

bart0sh on (2023-01-04 10:37:56 UTC): /priority important-soon

skitt (Issue Creator) on (2023-01-04 11:42:40 UTC): The `cloud.google.com/go/firestore` error is caused by https://github.com/googleapis/go-genproto/commit/67e5cbc046fddc8362f3cdb8d7897dfc780fbb12.

liggitt on (2023-01-04 15:23:24 UTC): oof, the updated cloud.google.com module adds 100 additional transitive deps :-(

```diff
-Direct Dependencies: 212 
-Transitive Dependencies: 234 
-Total Dependencies: 285 
-Max Depth Of Dependencies: 23 
+Direct Dependencies: 213 
+Transitive Dependencies: 337 
+Total Dependencies: 386 
+Max Depth Of Dependencies: 19 
```

skitt (Issue Creator) on (2023-01-04 15:45:30 UTC): Yes, it’s not really a cleanup PR any more :-(. I saw that go/compute got updated to v1.13.0 instead of the v1.12.1 in the commit message, I’ve downgraded to v1.12.1 but it doesn’t help:

```diff
-Direct Dependencies: 212 
-Transitive Dependencies: 234 
-Total Dependencies: 285 
-Max Depth Of Dependencies: 23 
+Direct Dependencies: 213 
+Transitive Dependencies: 337 
+Total Dependencies: 386 
+Max Depth Of Dependencies: 19 
```

skitt (Issue Creator) on (2023-01-04 16:03:24 UTC): Scratch that, it’s genproto that’s pulling in all the cloud.google.com module dependencies.

liggitt on (2023-01-04 16:23:29 UTC): We're pulling in cloud.google.com/go via these four dependencies on master:

* github.com/google/cadvisor@v0.46.0 cloud.google.com/go@v0.97.0
* go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc@v0.35.0 cloud.google.com/go@v0.97.0
* golang.org/x/oauth2@v0.0.0-20220223155221-ee480838109b cloud.google.com/go@v0.97.0
  * updating this to v0.3.0 narrows this to only use the isolated metadata dep... opened https://github.com/kubernetes/kubernetes/pull/114822 to do that
* google.golang.org/grpc@v1.51.0 cloud.google.com/go@v0.97.0

As you noted, this PR updates genproto to a version that pulls in massive numbers of additional cloud.google.com deps.

I think we want to work through dropping the cadvisor, otelgrpc, grpc, genproto deps before bumping.

skitt (Issue Creator) on (2023-01-04 16:27:13 UTC): Should I re-open the go-jose PR so that part of this bump can get merged?

liggitt on (2023-01-04 16:28:59 UTC): Possibly, I'm open to incremental isolated bumps if we can do it without dragging in a bunch of additional stuff, or simultaneously depending on multiple versions of a module

skitt (Issue Creator) on (2023-01-04 16:31:58 UTC): It’s #114823, but it does mean having a direct dependency on jose v3 and an indirect dependency on v2 (through go-oicd).

liggitt on (2023-01-04 16:42:41 UTC): hmm... I'm not sure it's worth adding v3 if we can't drop v2 yet

skitt (Issue Creator) on (2023-01-04 16:57:21 UTC): Probably not, let’s handle it here.

skitt (Issue Creator) on (2023-01-04 17:03:07 UTC): The cadvisor dependency on cloud.google.com/go should be taken care of by https://github.com/google/cadvisor/pull/3194.
The grpc dependency is taken care of already, by https://github.com/grpc/grpc-go/pull/5803; once the next release happens, upgrading that will drop the dependency there.
go.opentelemetry.io pulls in cloud.google.com/go through oauth2 and grpc, once grpc is released I’ll update https://github.com/open-telemetry/opentelemetry-go-contrib/pull/3133.

bart0sh on (2023-01-14 18:20:32 UTC): @skitt  If you still need this PR then please rebase, if not, please close the PR.

liggitt on (2023-01-14 18:31:01 UTC): This is blocked on the cloud dependency tangle, so I don't think it's worth keeping rebased right now

pacoxu on (2023-03-14 07:52:24 UTC): /remove-area kubeadm

skitt (Issue Creator) on (2023-06-06 15:17:53 UTC): @liggitt the dependency stats are rather nice now (or rather, the dependency tree is already bad, this PR doesn’t make it worse):

```patch
 --- /logs/artifacts/stats-base.txt	2023-06-06 15:07:06.551904748 +0000
+++ /logs/artifacts/stats.txt	2023-06-06 15:07:06.167869665 +0000
@@ -1,6 +1,6 @@
-Direct Dependencies: 210 
-Transitive Dependencies: 340 
-Total Dependencies: 389 
+Direct Dependencies: 209 
+Transitive Dependencies: 341 
+Total Dependencies: 388 
 Max Depth Of Dependencies: 17 
```

aramase (Assginee) on (2023-07-24 16:14:38 UTC): /uncc liggitt
/unassign liggitt 
as per https://github.com/kubernetes/kubernetes/pull/114772#pullrequestreview-1515045221

/assign aramase

rexagod on (2023-08-04 21:58:54 UTC): /remove-sig instrumentation

skitt (Issue Creator) on (2023-08-04 22:00:21 UTC): Yes, but I won’t have time to revisit it for another two weeks or so.

aramase (Assginee) on (2023-09-21 18:19:08 UTC): bump on this! The PR requires rebase.

k8s-ci-robot on (2023-09-25 06:18:10 UTC): @skitt: The following test **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:

Test name | Commit | Details | Required | Rerun command
--- | --- | --- | --- | ---
pull-kubernetes-e2e-kind-kms | 1d85e425bd98ea8917ffa12d86c14c734c80dd09 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114772/pull-kubernetes-e2e-kind-kms/1648269821353136128) | false | `/test pull-kubernetes-e2e-kind-kms`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114772). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3Askitt). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->

k8s-ci-robot on (2023-09-25 06:26:55 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114772#"" title=""Author self-approved"">skitt</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign [liggitt](https://github.com/liggitt) for approval. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)**
- **[LICENSES/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/LICENSES/OWNERS)**
- **[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)**
- **[pkg/controller/serviceaccount/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/serviceaccount/OWNERS)**
- **[pkg/serviceaccount/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/serviceaccount/OWNERS)**
- **[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)**
- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**
- **[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)**
- **[staging/src/k8s.io/cluster-bootstrap/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cluster-bootstrap/OWNERS)**
- **[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)**
- **[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)**
- **[staging/src/k8s.io/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubelet/OWNERS)**
- **[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)**
- **[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)**
- **[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)**
- **[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""liggitt""]} -->

k8s-ci-robot on (2023-10-14 01:14:22 UTC): PR needs rebase.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-triage-robot on (2024-02-04 06:16:25 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2024-02-04 06:16:31 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114772#issuecomment-1925595824):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1517078381,pull_request,closed,,feature(scheduler_perf): distinguish result in scheduler_scheduling_attempt_duration_seconds metric result,"
<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind feature

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

https://github.com/kubernetes/kubernetes/issues/114509#issuecomment-1369484525

We should distinguish them so that we can notice the performance degradation on the unhappy path with scheduler_perf. 
The result will be like ↓

```
{
  ""version"": ""v1"",
  ""dataItems"": [
    {
      ""data"": {
        ""Average"": 162.6,
        ""Perc50"": 145,
        ""Perc90"": 271,
        ""Perc95"": 311,
        ""Perc99"": 331
      },
      ""unit"": ""pods/s"",
      ""labels"": {
        ""Metric"": ""SchedulingThroughput"",
        ""Name"": ""BenchmarkPerfScheduling/Unschedulable/5000Nodes/2000InitPods/namespace-2""
      }
    },
    {
      ""data"": {
        ""Average"": 136832.44154198433,
        ""Perc50"": 122880,
        ""Perc90"": 155648.00000000003,
        ""Perc95"": 159744,
        ""Perc99"": 163020.80000000002
      },
      ""unit"": ""ms"",
      ""labels"": {
        ""Metric"": ""scheduler_pod_scheduling_duration_seconds"",
        ""Name"": ""BenchmarkPerfScheduling/Unschedulable/5000Nodes/2000InitPods/namespace-2""
      }
    },
    {
      ""data"": {
        ""Average"": 6.979840945285685,
        ""Perc50"": 0.5870967741935484,
        ""Perc90"": 11.913967861557479,
        ""Perc95"": 47.95492957746479,
        ""Perc99"": 94.97034700315457
      },
      ""unit"": ""ms"",
      ""labels"": {
        ""Metric"": ""scheduler_framework_extension_point_duration_seconds"",
        ""Name"": ""BenchmarkPerfScheduling/Unschedulable/5000Nodes/2000InitPods/namespace-2"",
        ""extension_point"": ""Filter""
      }
    },
    {
      ""data"": {
        ""Average"": 3.387086253799991,
        ""Perc50"": 0.7629764065335753,
        ""Perc90"": 1.5397986221515634,
        ""Perc95"": 2.68,
        ""Perc99"": 86.49937888198758
      },
      ""unit"": ""ms"",
      ""labels"": {
        ""Metric"": ""scheduler_framework_extension_point_duration_seconds"",
        ""Name"": ""BenchmarkPerfScheduling/Unschedulable/5000Nodes/2000InitPods/namespace-2"",
        ""extension_point"": ""Score""
      }
    },
    {
      ""data"": {
        ""Average"": 15.886441675400057,
        ""Perc50"": 3.402131239484016,
        ""Perc90"": 79.40372670807454,
        ""Perc95"": 104.24844720496895,
        ""Perc99"": 124.12422360248448
      },
      ""unit"": ""ms"",
      ""labels"": {
        ""Metric"": ""scheduler_scheduling_attempt_duration_seconds"",
        ""Name"": ""BenchmarkPerfScheduling/Unschedulable/5000Nodes/2000InitPods/namespace-2"",
        ""result"": ""scheduled""
      }
    },
    {
      ""data"": {
        ""Average"": 53.55418182849996,
        ""Perc50"": 29.235880398671096,
        ""Perc90"": 117.50399999999999,
        ""Perc95"": 164,
        ""Perc99"": 423.38461538461536
      },
      ""unit"": ""ms"",
      ""labels"": {
        ""Metric"": ""scheduler_scheduling_attempt_duration_seconds"",
        ""Name"": ""BenchmarkPerfScheduling/Unschedulable/5000Nodes/2000InitPods/namespace-2"",
        ""result"": ""unschedulable""
      }
    }
  ]
}
```

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Ref #https://github.com/kubernetes/kubernetes/issues/114509

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",sanposhiho,2023-01-03 08:37:02+00:00,['kerthcet'],2023-06-07 13:18:15+00:00,2023-06-07 13:18:13+00:00,https://github.com/kubernetes/kubernetes/pull/114771,"[('area/test', None), ('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1369503461, 'issue_id': 1517078381, 'author': 'k8s-ci-robot', 'body': '@sanposhiho: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 3, 8, 37, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370346786, 'issue_id': 1517078381, 'author': 'sanposhiho', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 4, 0, 6, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1495217079, 'issue_id': 1517078381, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 4, 4, 1, 36, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1495222329, 'issue_id': 1517078381, 'author': 'sanposhiho', 'body': '/remove-lifecycle stale', 'created_at': datetime.datetime(2023, 4, 4, 1, 46, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1495222814, 'issue_id': 1517078381, 'author': 'sanposhiho', 'body': '@kerthcet Could you have time to review this? 🙏', 'created_at': datetime.datetime(2023, 4, 4, 1, 47, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1495647961, 'issue_id': 1517078381, 'author': 'kerthcet', 'body': '/assign', 'created_at': datetime.datetime(2023, 4, 4, 9, 31, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1573858163, 'issue_id': 1517078381, 'author': 'sanposhiho', 'body': '@kerthcet Sorry about the delay! I fixed that.', 'created_at': datetime.datetime(2023, 6, 2, 14, 47, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1579087172, 'issue_id': 1517078381, 'author': 'dims', 'body': '@kerthcet please look again! this seems ready now', 'created_at': datetime.datetime(2023, 6, 6, 16, 26, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1580643188, 'issue_id': 1517078381, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: d05ed6b2255ee93c3403f890092881dbb7f3e2fe</details>', 'created_at': datetime.datetime(2023, 6, 7, 11, 51, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1580644411, 'issue_id': 1517078381, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114771#pullrequestreview-1467446684"" title=""Approved"">kerthcet</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114771#"" title=""Author self-approved"">sanposhiho</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [kerthcet,sanposhiho]\n- ~~[test/integration/scheduler_perf/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/integration/scheduler_perf/OWNERS)~~ [kerthcet,sanposhiho]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 6, 7, 11, 52, 9, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-03 08:37:12 UTC): @sanposhiho: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

sanposhiho (Issue Creator) on (2023-01-04 00:06:16 UTC): /retest

k8s-triage-robot on (2023-04-04 01:36:44 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

sanposhiho (Issue Creator) on (2023-04-04 01:46:10 UTC): /remove-lifecycle stale

sanposhiho (Issue Creator) on (2023-04-04 01:47:12 UTC): @kerthcet Could you have time to review this? 🙏

kerthcet (Assginee) on (2023-04-04 09:31:12 UTC): /assign

sanposhiho (Issue Creator) on (2023-06-02 14:47:15 UTC): @kerthcet Sorry about the delay! I fixed that.

dims on (2023-06-06 16:26:48 UTC): @kerthcet please look again! this seems ready now

k8s-ci-robot on (2023-06-07 11:51:42 UTC): LGTM label has been added.  <details>Git tree hash: d05ed6b2255ee93c3403f890092881dbb7f3e2fe</details>

k8s-ci-robot on (2023-06-07 11:52:09 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114771#pullrequestreview-1467446684"" title=""Approved"">kerthcet</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114771#"" title=""Author self-approved"">sanposhiho</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)~~ [kerthcet,sanposhiho]
- ~~[test/integration/scheduler_perf/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/integration/scheduler_perf/OWNERS)~~ [kerthcet,sanposhiho]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1517074638,pull_request,closed,,Fix clearing of rate-limiter for the queue of checks for cleaning stale pod disruption conditions,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind bug
/kind regression

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

A successful check for cleaning Pod stale disruption condition results in clearing the wrong rate limiter (for the PDB, rather than for stale pod disruption conditions).

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
- Tracking issue: https://github.com/kubernetes/enhancements/issues/3329

#### Special notes for your reviewer:

- Wondering about the best way to test it as it seems to be a `typo`. No test for now, but will follow on the reviewers suggestion. 

- I think it should be cherry-picked for 1.26.

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Fix a regression in default 1.26 configurations with the PodDisruptionConditions feature enabled clearing of rate-limiter for the queue of checks for cleaning stale pod disruption conditions. The bug could result in the PDB synchronization updates firing too often or the pod disruption cleanups taking too long to happen.
```
#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",mimowo,2023-01-03 08:32:27+00:00,"['soltysh', 'alculquicondor']",2023-09-10 00:16:13+00:00,2023-01-03 15:21:32+00:00,https://github.com/kubernetes/kubernetes/pull/114770,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('priority/critical-urgent', ""Highest priority. Must be actively worked on as someone's top priority right now.""), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('kind/regression', 'Categorizes issue or PR as related to a regression from a prior release.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1369515985, 'issue_id': 1517074638, 'author': 'mimowo', 'body': '/sig apps', 'created_at': datetime.datetime(2023, 1, 3, 8, 54, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369516269, 'issue_id': 1517074638, 'author': 'mimowo', 'body': '/assign @alculquicondor', 'created_at': datetime.datetime(2023, 1, 3, 8, 55, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369833920, 'issue_id': 1517074638, 'author': 'alculquicondor', 'body': '/lgtm\r\n/assign @soltysh \r\n/priority critical-urgent', 'created_at': datetime.datetime(2023, 1, 3, 14, 30, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369834004, 'issue_id': 1517074638, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 21eb8cdc566b7d1c28da5a555ed5977823b04f1c</details>', 'created_at': datetime.datetime(2023, 1, 3, 14, 30, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369839555, 'issue_id': 1517074638, 'author': 'soltysh', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 3, 14, 36, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369839607, 'issue_id': 1517074638, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114770#"" title=""Author self-approved"">mimowo</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114770#pullrequestreview-1234642154"" title=""Approved"">soltysh</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/controller/disruption/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/disruption/OWNERS)~~ [soltysh]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 3, 14, 36, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369844991, 'issue_id': 1517074638, 'author': 'mimowo', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 3, 14, 41, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369851474, 'issue_id': 1517074638, 'author': 'mimowo', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 3, 14, 47, 9, tzinfo=datetime.timezone.utc)}]","mimowo (Issue Creator) on (2023-01-03 08:54:39 UTC): /sig apps

mimowo (Issue Creator) on (2023-01-03 08:55:02 UTC): /assign @alculquicondor

alculquicondor (Assginee) on (2023-01-03 14:30:28 UTC): /lgtm
/assign @soltysh 
/priority critical-urgent

k8s-ci-robot on (2023-01-03 14:30:34 UTC): LGTM label has been added.  <details>Git tree hash: 21eb8cdc566b7d1c28da5a555ed5977823b04f1c</details>

soltysh (Assginee) on (2023-01-03 14:36:01 UTC): /triage accepted

k8s-ci-robot on (2023-01-03 14:36:04 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114770#"" title=""Author self-approved"">mimowo</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114770#pullrequestreview-1234642154"" title=""Approved"">soltysh</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/controller/disruption/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/disruption/OWNERS)~~ [soltysh]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

mimowo (Issue Creator) on (2023-01-03 14:41:08 UTC): /retest

mimowo (Issue Creator) on (2023-01-03 14:47:09 UTC): /retest

"
1517074627,pull_request,closed,,test/OWNERS: add pohly as approver,"#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

As technical lead in SIG Testing it would be useful to have the right to approve test changes...

#### Does this PR introduce a user-facing change?
```release-note
NONE
```

/assign @aojea ",pohly,2023-01-03 08:32:26+00:00,"['dims', 'spiffxp', 'BenTheElder', 'aojea']",2023-01-09 23:11:29+00:00,2023-01-09 23:11:28+00:00,https://github.com/kubernetes/kubernetes/pull/114769,"[('area/test', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('area/e2e-test-framework', 'Issues or PRs related to refactoring the kubernetes e2e test framework'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1369554238, 'issue_id': 1517074627, 'author': 'aojea', 'body': 'I think we should just add ourselves to the corresponding aliases https://github.com/kubernetes/kubernetes/blob/1edbb8cf1a864c2dd71a1e5b7282de4bc3d8f5fa/OWNERS_ALIASES#L214-L222 \r\n\r\nsig-testing-reviewers and sig-testing-approvers will give you the same rights (well earned)', 'created_at': datetime.datetime(2023, 1, 3, 9, 33, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369597544, 'issue_id': 1517074627, 'author': 'pohly', 'body': ""`sig-testing-reviewers` isn't used for `test`, so I added myself there as before. For approval rights I modified the alias and also cleaned up a bit while at it."", 'created_at': datetime.datetime(2023, 1, 3, 10, 18, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369715738, 'issue_id': 1517074627, 'author': 'aojea', 'body': '/lgtm\r\n/assign @BenTheElder @dims @spiffxp', 'created_at': datetime.datetime(2023, 1, 3, 12, 31, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369715808, 'issue_id': 1517074627, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: a6d0bbcb025dc0f50dffdec7d62be61eb35e2c8b</details>', 'created_at': datetime.datetime(2023, 1, 3, 12, 31, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369944312, 'issue_id': 1517074627, 'author': 'dims', 'body': '/approve\r\n/lgtm\r\n/hold for additional folks to chime in', 'created_at': datetime.datetime(2023, 1, 3, 16, 4, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369944424, 'issue_id': 1517074627, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: d09f9659e4cbc8437ab14ed5c125a7a72588df21</details>', 'created_at': datetime.datetime(2023, 1, 3, 16, 5, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376376087, 'issue_id': 1517074627, 'author': 'dims', 'body': '/approve\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 9, 21, 50, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376376164, 'issue_id': 1517074627, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 2434982f95762ab7d5310bea05fca547cd2e716e</details>', 'created_at': datetime.datetime(2023, 1, 9, 21, 50, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376387332, 'issue_id': 1517074627, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114769#pullrequestreview-1241264970"" title=""Approved"">BenTheElder</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114769#issuecomment-1376376087"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114769#"" title=""Author self-approved"">pohly</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [BenTheElder,dims]\n- ~~[hack/jenkins/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/jenkins/OWNERS)~~ [BenTheElder,dims]\n- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [BenTheElder,dims]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 9, 22, 1, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376387661, 'issue_id': 1517074627, 'author': 'BenTheElder', 'body': '/hold cancel\r\n\r\nThanks for all your work so far and thanks for cleaning that alias up!', 'created_at': datetime.datetime(2023, 1, 9, 22, 2, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1376451225, 'issue_id': 1517074627, 'author': 'aojea', 'body': '> /lgtm\r\n\r\n👏', 'created_at': datetime.datetime(2023, 1, 9, 22, 57, 57, tzinfo=datetime.timezone.utc)}]","aojea (Assginee) on (2023-01-03 09:33:10 UTC): I think we should just add ourselves to the corresponding aliases https://github.com/kubernetes/kubernetes/blob/1edbb8cf1a864c2dd71a1e5b7282de4bc3d8f5fa/OWNERS_ALIASES#L214-L222 

sig-testing-reviewers and sig-testing-approvers will give you the same rights (well earned)

pohly (Issue Creator) on (2023-01-03 10:18:33 UTC): `sig-testing-reviewers` isn't used for `test`, so I added myself there as before. For approval rights I modified the alias and also cleaned up a bit while at it.

aojea (Assginee) on (2023-01-03 12:31:51 UTC): /lgtm
/assign @BenTheElder @dims @spiffxp

k8s-ci-robot on (2023-01-03 12:31:57 UTC): LGTM label has been added.  <details>Git tree hash: a6d0bbcb025dc0f50dffdec7d62be61eb35e2c8b</details>

dims (Assginee) on (2023-01-03 16:04:57 UTC): /approve
/lgtm
/hold for additional folks to chime in

k8s-ci-robot on (2023-01-03 16:05:03 UTC): LGTM label has been added.  <details>Git tree hash: d09f9659e4cbc8437ab14ed5c125a7a72588df21</details>

dims (Assginee) on (2023-01-09 21:50:35 UTC): /approve
/lgtm

k8s-ci-robot on (2023-01-09 21:50:41 UTC): LGTM label has been added.  <details>Git tree hash: 2434982f95762ab7d5310bea05fca547cd2e716e</details>

k8s-ci-robot on (2023-01-09 22:01:55 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114769#pullrequestreview-1241264970"" title=""Approved"">BenTheElder</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114769#issuecomment-1376376087"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114769#"" title=""Author self-approved"">pohly</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [BenTheElder,dims]
- ~~[hack/jenkins/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/jenkins/OWNERS)~~ [BenTheElder,dims]
- ~~[test/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/OWNERS)~~ [BenTheElder,dims]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

BenTheElder (Assginee) on (2023-01-09 22:02:10 UTC): /hold cancel

Thanks for all your work so far and thanks for cleaning that alias up!

aojea (Assginee) on (2023-01-09 22:57:57 UTC): 👏

"
1517056489,pull_request,closed,,Decouple batch/job back-off logic from workqueues,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
With this change, we don't need to rely on back-offs managed by `workqueue`. We are using the `queue.addAfter` to re-check the back-off conditions.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #114391 
Preparatory refactoring for #114650

#### Special notes for your reviewer:
There will be a follow-up PR for #114650

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
The job controller back-off logic is now decoupled from workqueue. In case of parallelism > 1, if there are multiple new failures in a reconciliation cycle, all the failures are taken into account to compute the back-off. Previously, the back-off kicked in for all types of failures; with this change, only pod failures are taken into account. If the back-off limits exceeds, the job is marked as failed immediately; before this change, the job is marked as failed in the next back-off.
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",sathyanarays,2023-01-03 08:11:49+00:00,"['alculquicondor', 'mimowo']",2023-03-17 03:26:52+00:00,2023-03-16 17:15:22+00:00,https://github.com/kubernetes/kubernetes/pull/114768,"[('area/test', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/XXL', 'Denotes a PR that changes 1000+ lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('tide/merge-method-squash', 'Denotes a PR that should be squashed by tide when it merges.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1369485955, 'issue_id': 1517056489, 'author': 'k8s-ci-robot', 'body': ""Hi @sathyanarays. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 3, 8, 11, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369485958, 'issue_id': 1517056489, 'author': 'k8s-ci-robot', 'body': '@sathyanarays: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 3, 8, 11, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369788978, 'issue_id': 1517056489, 'author': 'mimowo', 'body': '/cc @alculquicondor', 'created_at': datetime.datetime(2023, 1, 3, 13, 47, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369852557, 'issue_id': 1517056489, 'author': 'alculquicondor', 'body': ""This is definitely too much for a backport, given that it's not fixing a regression.\r\n\r\nBut +1 for 1.27"", 'created_at': datetime.datetime(2023, 1, 3, 14, 48, 9, tzinfo=datetime.timezone.utc)}, {'comment_id': 1398275869, 'issue_id': 1517056489, 'author': 'mimowo', 'body': '/ok-to-test', 'created_at': datetime.datetime(2023, 1, 20, 11, 55, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399415464, 'issue_id': 1517056489, 'author': 'sathyanarays', 'body': '/test pull-kubernetes-conformance-kind-ga-only-parallel', 'created_at': datetime.datetime(2023, 1, 22, 6, 39, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399435519, 'issue_id': 1517056489, 'author': 'sathyanarays', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 22, 9, 9, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1399858322, 'issue_id': 1517056489, 'author': 'sathyanarays', 'body': '/test pull-kubernetes-unit', 'created_at': datetime.datetime(2023, 1, 23, 6, 16, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1420895722, 'issue_id': 1517056489, 'author': 'alculquicondor', 'body': '/kind feature', 'created_at': datetime.datetime(2023, 2, 7, 14, 46, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1420904305, 'issue_id': 1517056489, 'author': 'mimowo', 'body': ""@sathyanarays I can see recent updates and I'm going to do another pass on the changes. Please mark addressed comments as resolved with a note."", 'created_at': datetime.datetime(2023, 2, 7, 14, 52, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1421944254, 'issue_id': 1517056489, 'author': 'sathyanarays', 'body': ""> One more comment regarding the `getFinishedTime` function. I think we should aim to get more precise time for pods in a terminal phase.\r\n\r\n@mimowo I don't think I fully understand this comment. Please check if this is still applicable. If yes, can you please explain a bit?"", 'created_at': datetime.datetime(2023, 2, 8, 3, 34, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1433053987, 'issue_id': 1517056489, 'author': 'mimowo', 'body': ""@sathyanarays please update also the release note to reflect the changes from the user perspective. IIUC there are a couple of changes around backoff handling here we could mention, like:\r\n- how is handling of pod failures in parallel jobs impacted?\r\n- now we only react to pod failures, so other type of controller errors don't impact the backoff time, right?\r\n- there used to be an unnecessary delay between the last failed pod and marking the job as failed?"", 'created_at': datetime.datetime(2023, 2, 16, 13, 1, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1434579296, 'issue_id': 1517056489, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 01da6aa1c2ce9c4071f9c4ed15f4ef3b016feef0</details>', 'created_at': datetime.datetime(2023, 2, 17, 12, 33, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1439474471, 'issue_id': 1517056489, 'author': 'sathyanarays', 'body': '/retest', 'created_at': datetime.datetime(2023, 2, 22, 5, 49, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1441688769, 'issue_id': 1517056489, 'author': 'sathyanarays', 'body': '/retest', 'created_at': datetime.datetime(2023, 2, 23, 12, 29, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1448262762, 'issue_id': 1517056489, 'author': 'sathyanarays', 'body': '/retest', 'created_at': datetime.datetime(2023, 2, 28, 14, 20, tzinfo=datetime.timezone.utc)}, {'comment_id': 1458672436, 'issue_id': 1517056489, 'author': 'alculquicondor', 'body': 'FYI that code freeze is quickly approaching.\r\n\r\nIIRC, this was almost ready. Please take care of the last comments and CLA.', 'created_at': datetime.datetime(2023, 3, 7, 18, 59, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1468178365, 'issue_id': 1517056489, 'author': 'alculquicondor', 'body': '/retest\r\n/approve', 'created_at': datetime.datetime(2023, 3, 14, 14, 12, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1468179043, 'issue_id': 1517056489, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114768#issuecomment-1468178365"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114768#"" title=""Author self-approved"">sathyanarays</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/controller/job/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/job/OWNERS)~~ [alculquicondor]\n- ~~[test/integration/job/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/integration/job/OWNERS)~~ [alculquicondor]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 3, 14, 14, 12, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1470095455, 'issue_id': 1517056489, 'author': 'alculquicondor', 'body': '/lgtm\r\n/label tide/merge-method-squash', 'created_at': datetime.datetime(2023, 3, 15, 14, 20, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1470095611, 'issue_id': 1517056489, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 94d28f5a1aea9e563d0313994cfc516e93722595</details>', 'created_at': datetime.datetime(2023, 3, 15, 14, 20, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1470096401, 'issue_id': 1517056489, 'author': 'alculquicondor', 'body': 'Note that this will only merge if this is added to the milestone, which will happen if the exception is approved.', 'created_at': datetime.datetime(2023, 3, 15, 14, 20, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1470371572, 'issue_id': 1517056489, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114768) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 3, 15, 16, 37, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1472286386, 'issue_id': 1517056489, 'author': 'salaxander', 'body': '/milestone v1.27', 'created_at': datetime.datetime(2023, 3, 16, 16, 18, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1472315857, 'issue_id': 1517056489, 'author': 'marosset', 'body': '/test', 'created_at': datetime.datetime(2023, 3, 16, 16, 35, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1472315951, 'issue_id': 1517056489, 'author': 'k8s-ci-robot', 'body': '@marosset: The `/test` command needs one or more targets.\nThe following commands are available to trigger required jobs:\n* `/test pull-cadvisor-e2e-kubernetes`\n* `/test pull-kubernetes-conformance-kind-ga-only-parallel`\n* `/test pull-kubernetes-coverage-unit`\n* `/test pull-kubernetes-dependencies`\n* `/test pull-kubernetes-dependencies-go-canary`\n* `/test pull-kubernetes-e2e-gce`\n* `/test pull-kubernetes-e2e-gce-100-performance`\n* `/test pull-kubernetes-e2e-gce-big-performance`\n* `/test pull-kubernetes-e2e-gce-canary`\n* `/test pull-kubernetes-e2e-gce-cos`\n* `/test pull-kubernetes-e2e-gce-cos-canary`\n* `/test pull-kubernetes-e2e-gce-cos-no-stage`\n* `/test pull-kubernetes-e2e-gce-network-proxy-http-connect`\n* `/test pull-kubernetes-e2e-gce-scale-performance-manual`\n* `/test pull-kubernetes-e2e-kind`\n* `/test pull-kubernetes-e2e-kind-ipv6`\n* `/test pull-kubernetes-integration`\n* `/test pull-kubernetes-integration-go-canary`\n* `/test pull-kubernetes-kubemark-e2e-gce-scale`\n* `/test pull-kubernetes-node-e2e-containerd`\n* `/test pull-kubernetes-typecheck`\n* `/test pull-kubernetes-unit`\n* `/test pull-kubernetes-unit-go-canary`\n* `/test pull-kubernetes-update`\n* `/test pull-kubernetes-verify`\n* `/test pull-kubernetes-verify-go-canary`\n* `/test pull-kubernetes-verify-govet-levee`\n\nThe following commands are available to trigger optional jobs:\n* `/test check-dependency-stats`\n* `/test pull-ci-kubernetes-unit-windows`\n* `/test pull-e2e-gce-cloud-provider-disabled`\n* `/test pull-kubernetes-conformance-image-test`\n* `/test pull-kubernetes-conformance-kind-ga-only`\n* `/test pull-kubernetes-conformance-kind-ipv6-parallel`\n* `/test pull-kubernetes-cos-cgroupv1-containerd-node-e2e`\n* `/test pull-kubernetes-cos-cgroupv1-containerd-node-e2e-features`\n* `/test pull-kubernetes-cos-cgroupv2-containerd-node-e2e`\n* `/test pull-kubernetes-cos-cgroupv2-containerd-node-e2e-eviction`\n* `/test pull-kubernetes-cos-cgroupv2-containerd-node-e2e-features`\n* `/test pull-kubernetes-cos-cgroupv2-containerd-node-e2e-serial`\n* `/test pull-kubernetes-cross`\n* `/test pull-kubernetes-e2e-autoscaling-hpa-cm`\n* `/test pull-kubernetes-e2e-autoscaling-hpa-cpu`\n* `/test pull-kubernetes-e2e-capz-azure-disk`\n* `/test pull-kubernetes-e2e-capz-azure-disk-vmss`\n* `/test pull-kubernetes-e2e-capz-azure-file`\n* `/test pull-kubernetes-e2e-capz-azure-file-vmss`\n* `/test pull-kubernetes-e2e-capz-conformance`\n* `/test pull-kubernetes-e2e-capz-ha-control-plane`\n* `/test pull-kubernetes-e2e-capz-windows-containerd`\n* `/test pull-kubernetes-e2e-containerd-gce`\n* `/test pull-kubernetes-e2e-gce-correctness`\n* `/test pull-kubernetes-e2e-gce-cos-alpha-features`\n* `/test pull-kubernetes-e2e-gce-cos-kubetest2`\n* `/test pull-kubernetes-e2e-gce-csi-serial`\n* `/test pull-kubernetes-e2e-gce-device-plugin-gpu`\n* `/test pull-kubernetes-e2e-gce-network-proxy-grpc`\n* `/test pull-kubernetes-e2e-gce-serial`\n* `/test pull-kubernetes-e2e-gce-storage-disruptive`\n* `/test pull-kubernetes-e2e-gce-storage-slow`\n* `/test pull-kubernetes-e2e-gce-storage-snapshot`\n* `/test pull-kubernetes-e2e-gci-gce-autoscaling`\n* `/test pull-kubernetes-e2e-gci-gce-ingress`\n* `/test pull-kubernetes-e2e-gci-gce-ipvs`\n* `/test pull-kubernetes-e2e-inplace-pod-resize-containerd-main-v2`\n* `/test pull-kubernetes-e2e-kind-canary`\n* `/test pull-kubernetes-e2e-kind-dual-canary`\n* `/test pull-kubernetes-e2e-kind-ipv6-canary`\n* `/test pull-kubernetes-e2e-kind-ipvs-dual-canary`\n* `/test pull-kubernetes-e2e-kind-kms`\n* `/test pull-kubernetes-e2e-kind-multizone`\n* `/test pull-kubernetes-e2e-kops-aws`\n* `/test pull-kubernetes-e2e-kubelet-credential-provider`\n* `/test pull-kubernetes-e2e-ubuntu-gce-network-policies`\n* `/test pull-kubernetes-kind-dra`\n* `/test pull-kubernetes-kubemark-e2e-gce-big`\n* `/test pull-kubernetes-local-e2e`\n* `/test pull-kubernetes-node-crio-cgrpv1-evented-pleg-e2e`\n* `/test pull-kubernetes-node-crio-cgrpv2-e2e`\n* `/test pull-kubernetes-node-crio-cgrpv2-e2e-kubetest2`\n* `/test pull-kubernetes-node-crio-e2e`\n* `/test pull-kubernetes-node-crio-e2e-kubetest2`\n* `/test pull-kubernetes-node-e2e-containerd-alpha-features`\n* `/test pull-kubernetes-node-e2e-containerd-features`\n* `/test pull-kubernetes-node-e2e-containerd-features-kubetest2`\n* `/test pull-kubernetes-node-e2e-containerd-kubetest2`\n* `/test pull-kubernetes-node-e2e-containerd-sidecar-containers`\n* `/test pull-kubernetes-node-e2e-containerd-standalone-mode`\n* `/test pull-kubernetes-node-e2e-containerd-standalone-mode-all-alpha`\n* `/test pull-kubernetes-node-kubelet-credential-provider`\n* `/test pull-kubernetes-node-kubelet-serial-containerd`\n* `/test pull-kubernetes-node-kubelet-serial-containerd-kubetest2`\n* `/test pull-kubernetes-node-kubelet-serial-cpu-manager`\n* `/test pull-kubernetes-node-kubelet-serial-cpu-manager-kubetest2`\n* `/test pull-kubernetes-node-kubelet-serial-crio-cgroupv1`\n* `/test pull-kubernetes-node-kubelet-serial-crio-cgroupv2`\n* `/test pull-kubernetes-node-kubelet-serial-hugepages`\n* `/test pull-kubernetes-node-kubelet-serial-memory-manager`\n* `/test pull-kubernetes-node-kubelet-serial-pod-disruption-conditions`\n* `/test pull-kubernetes-node-kubelet-serial-topology-manager`\n* `/test pull-kubernetes-node-kubelet-serial-topology-manager-kubetest2`\n* `/test pull-kubernetes-node-memoryqos-cgrpv2`\n* `/test pull-kubernetes-node-swap-fedora`\n* `/test pull-kubernetes-node-swap-fedora-serial`\n* `/test pull-kubernetes-node-swap-ubuntu-serial`\n* `/test pull-kubernetes-unit-experimental`\n* `/test pull-kubernetes-verify-strict-lint`\n* `/test pull-publishing-bot-validate`\n\nUse `/test all` to run the following jobs that were automatically triggered:\n* `pull-kubernetes-conformance-kind-ga-only-parallel`\n* `pull-kubernetes-conformance-kind-ipv6-parallel`\n* `pull-kubernetes-dependencies`\n* `pull-kubernetes-e2e-gce`\n* `pull-kubernetes-e2e-kind`\n* `pull-kubernetes-e2e-kind-ipv6`\n* `pull-kubernetes-integration`\n* `pull-kubernetes-node-e2e-containerd`\n* `pull-kubernetes-typecheck`\n* `pull-kubernetes-unit`\n* `pull-kubernetes-verify`\n* `pull-kubernetes-verify-govet-levee`\n\n\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114768#issuecomment-1472315857):\n\n>/test\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 3, 16, 16, 35, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1472317938, 'issue_id': 1517056489, 'author': 'marosset', 'body': ""@sathyanarays please link to the k/enhancements issue in the issue description in the 'Additional Documentation' section."", 'created_at': datetime.datetime(2023, 3, 16, 16, 36, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1472318373, 'issue_id': 1517056489, 'author': 'marosset', 'body': '/test pull-kubernetes-e2e-kind', 'created_at': datetime.datetime(2023, 3, 16, 16, 36, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1472320045, 'issue_id': 1517056489, 'author': 'salaxander', 'body': '@marosset - it looks like this one may not be tied to a KEP but rather a bug triage issue', 'created_at': datetime.datetime(2023, 3, 16, 16, 38, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1472357969, 'issue_id': 1517056489, 'author': 'marosset', 'body': '> @marosset - it looks like this one may not be tied to a KEP but rather a bug triage issue\r\n\r\nYup, my bad', 'created_at': datetime.datetime(2023, 3, 16, 17, 0, 34, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-03 08:11:57 UTC): Hi @sathyanarays. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-03 08:11:57 UTC): @sathyanarays: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

mimowo (Assginee) on (2023-01-03 13:47:12 UTC): /cc @alculquicondor

alculquicondor (Assginee) on (2023-01-03 14:48:09 UTC): This is definitely too much for a backport, given that it's not fixing a regression.

But +1 for 1.27

mimowo (Assginee) on (2023-01-20 11:55:17 UTC): /ok-to-test

sathyanarays (Issue Creator) on (2023-01-22 06:39:02 UTC): /test pull-kubernetes-conformance-kind-ga-only-parallel

sathyanarays (Issue Creator) on (2023-01-22 09:09:24 UTC): /retest

sathyanarays (Issue Creator) on (2023-01-23 06:16:33 UTC): /test pull-kubernetes-unit

alculquicondor (Assginee) on (2023-02-07 14:46:39 UTC): /kind feature

mimowo (Assginee) on (2023-02-07 14:52:19 UTC): @sathyanarays I can see recent updates and I'm going to do another pass on the changes. Please mark addressed comments as resolved with a note.

sathyanarays (Issue Creator) on (2023-02-08 03:34:55 UTC): @mimowo I don't think I fully understand this comment. Please check if this is still applicable. If yes, can you please explain a bit?

mimowo (Assginee) on (2023-02-16 13:01:08 UTC): @sathyanarays please update also the release note to reflect the changes from the user perspective. IIUC there are a couple of changes around backoff handling here we could mention, like:
- how is handling of pod failures in parallel jobs impacted?
- now we only react to pod failures, so other type of controller errors don't impact the backoff time, right?
- there used to be an unnecessary delay between the last failed pod and marking the job as failed?

k8s-ci-robot on (2023-02-17 12:33:55 UTC): LGTM label has been added.  <details>Git tree hash: 01da6aa1c2ce9c4071f9c4ed15f4ef3b016feef0</details>

sathyanarays (Issue Creator) on (2023-02-22 05:49:27 UTC): /retest

sathyanarays (Issue Creator) on (2023-02-23 12:29:44 UTC): /retest

sathyanarays (Issue Creator) on (2023-02-28 14:20:00 UTC): /retest

alculquicondor (Assginee) on (2023-03-07 18:59:24 UTC): FYI that code freeze is quickly approaching.

IIRC, this was almost ready. Please take care of the last comments and CLA.

alculquicondor (Assginee) on (2023-03-14 14:12:06 UTC): /retest
/approve

k8s-ci-robot on (2023-03-14 14:12:30 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114768#issuecomment-1468178365"" title=""Approved"">alculquicondor</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114768#"" title=""Author self-approved"">sathyanarays</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/controller/job/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/job/OWNERS)~~ [alculquicondor]
- ~~[test/integration/job/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/integration/job/OWNERS)~~ [alculquicondor]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

alculquicondor (Assginee) on (2023-03-15 14:20:06 UTC): /lgtm
/label tide/merge-method-squash

k8s-ci-robot on (2023-03-15 14:20:13 UTC): LGTM label has been added.  <details>Git tree hash: 94d28f5a1aea9e563d0313994cfc516e93722595</details>

alculquicondor (Assginee) on (2023-03-15 14:20:41 UTC): Note that this will only merge if this is added to the milestone, which will happen if the exception is approved.

k8s-triage-robot on (2023-03-15 16:37:26 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114768) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

salaxander on (2023-03-16 16:18:19 UTC): /milestone v1.27

marosset on (2023-03-16 16:35:23 UTC): /test

k8s-ci-robot on (2023-03-16 16:35:26 UTC): @marosset: The `/test` command needs one or more targets.
The following commands are available to trigger required jobs:
* `/test pull-cadvisor-e2e-kubernetes`
* `/test pull-kubernetes-conformance-kind-ga-only-parallel`
* `/test pull-kubernetes-coverage-unit`
* `/test pull-kubernetes-dependencies`
* `/test pull-kubernetes-dependencies-go-canary`
* `/test pull-kubernetes-e2e-gce`
* `/test pull-kubernetes-e2e-gce-100-performance`
* `/test pull-kubernetes-e2e-gce-big-performance`
* `/test pull-kubernetes-e2e-gce-canary`
* `/test pull-kubernetes-e2e-gce-cos`
* `/test pull-kubernetes-e2e-gce-cos-canary`
* `/test pull-kubernetes-e2e-gce-cos-no-stage`
* `/test pull-kubernetes-e2e-gce-network-proxy-http-connect`
* `/test pull-kubernetes-e2e-gce-scale-performance-manual`
* `/test pull-kubernetes-e2e-kind`
* `/test pull-kubernetes-e2e-kind-ipv6`
* `/test pull-kubernetes-integration`
* `/test pull-kubernetes-integration-go-canary`
* `/test pull-kubernetes-kubemark-e2e-gce-scale`
* `/test pull-kubernetes-node-e2e-containerd`
* `/test pull-kubernetes-typecheck`
* `/test pull-kubernetes-unit`
* `/test pull-kubernetes-unit-go-canary`
* `/test pull-kubernetes-update`
* `/test pull-kubernetes-verify`
* `/test pull-kubernetes-verify-go-canary`
* `/test pull-kubernetes-verify-govet-levee`

The following commands are available to trigger optional jobs:
* `/test check-dependency-stats`
* `/test pull-ci-kubernetes-unit-windows`
* `/test pull-e2e-gce-cloud-provider-disabled`
* `/test pull-kubernetes-conformance-image-test`
* `/test pull-kubernetes-conformance-kind-ga-only`
* `/test pull-kubernetes-conformance-kind-ipv6-parallel`
* `/test pull-kubernetes-cos-cgroupv1-containerd-node-e2e`
* `/test pull-kubernetes-cos-cgroupv1-containerd-node-e2e-features`
* `/test pull-kubernetes-cos-cgroupv2-containerd-node-e2e`
* `/test pull-kubernetes-cos-cgroupv2-containerd-node-e2e-eviction`
* `/test pull-kubernetes-cos-cgroupv2-containerd-node-e2e-features`
* `/test pull-kubernetes-cos-cgroupv2-containerd-node-e2e-serial`
* `/test pull-kubernetes-cross`
* `/test pull-kubernetes-e2e-autoscaling-hpa-cm`
* `/test pull-kubernetes-e2e-autoscaling-hpa-cpu`
* `/test pull-kubernetes-e2e-capz-azure-disk`
* `/test pull-kubernetes-e2e-capz-azure-disk-vmss`
* `/test pull-kubernetes-e2e-capz-azure-file`
* `/test pull-kubernetes-e2e-capz-azure-file-vmss`
* `/test pull-kubernetes-e2e-capz-conformance`
* `/test pull-kubernetes-e2e-capz-ha-control-plane`
* `/test pull-kubernetes-e2e-capz-windows-containerd`
* `/test pull-kubernetes-e2e-containerd-gce`
* `/test pull-kubernetes-e2e-gce-correctness`
* `/test pull-kubernetes-e2e-gce-cos-alpha-features`
* `/test pull-kubernetes-e2e-gce-cos-kubetest2`
* `/test pull-kubernetes-e2e-gce-csi-serial`
* `/test pull-kubernetes-e2e-gce-device-plugin-gpu`
* `/test pull-kubernetes-e2e-gce-network-proxy-grpc`
* `/test pull-kubernetes-e2e-gce-serial`
* `/test pull-kubernetes-e2e-gce-storage-disruptive`
* `/test pull-kubernetes-e2e-gce-storage-slow`
* `/test pull-kubernetes-e2e-gce-storage-snapshot`
* `/test pull-kubernetes-e2e-gci-gce-autoscaling`
* `/test pull-kubernetes-e2e-gci-gce-ingress`
* `/test pull-kubernetes-e2e-gci-gce-ipvs`
* `/test pull-kubernetes-e2e-inplace-pod-resize-containerd-main-v2`
* `/test pull-kubernetes-e2e-kind-canary`
* `/test pull-kubernetes-e2e-kind-dual-canary`
* `/test pull-kubernetes-e2e-kind-ipv6-canary`
* `/test pull-kubernetes-e2e-kind-ipvs-dual-canary`
* `/test pull-kubernetes-e2e-kind-kms`
* `/test pull-kubernetes-e2e-kind-multizone`
* `/test pull-kubernetes-e2e-kops-aws`
* `/test pull-kubernetes-e2e-kubelet-credential-provider`
* `/test pull-kubernetes-e2e-ubuntu-gce-network-policies`
* `/test pull-kubernetes-kind-dra`
* `/test pull-kubernetes-kubemark-e2e-gce-big`
* `/test pull-kubernetes-local-e2e`
* `/test pull-kubernetes-node-crio-cgrpv1-evented-pleg-e2e`
* `/test pull-kubernetes-node-crio-cgrpv2-e2e`
* `/test pull-kubernetes-node-crio-cgrpv2-e2e-kubetest2`
* `/test pull-kubernetes-node-crio-e2e`
* `/test pull-kubernetes-node-crio-e2e-kubetest2`
* `/test pull-kubernetes-node-e2e-containerd-alpha-features`
* `/test pull-kubernetes-node-e2e-containerd-features`
* `/test pull-kubernetes-node-e2e-containerd-features-kubetest2`
* `/test pull-kubernetes-node-e2e-containerd-kubetest2`
* `/test pull-kubernetes-node-e2e-containerd-sidecar-containers`
* `/test pull-kubernetes-node-e2e-containerd-standalone-mode`
* `/test pull-kubernetes-node-e2e-containerd-standalone-mode-all-alpha`
* `/test pull-kubernetes-node-kubelet-credential-provider`
* `/test pull-kubernetes-node-kubelet-serial-containerd`
* `/test pull-kubernetes-node-kubelet-serial-containerd-kubetest2`
* `/test pull-kubernetes-node-kubelet-serial-cpu-manager`
* `/test pull-kubernetes-node-kubelet-serial-cpu-manager-kubetest2`
* `/test pull-kubernetes-node-kubelet-serial-crio-cgroupv1`
* `/test pull-kubernetes-node-kubelet-serial-crio-cgroupv2`
* `/test pull-kubernetes-node-kubelet-serial-hugepages`
* `/test pull-kubernetes-node-kubelet-serial-memory-manager`
* `/test pull-kubernetes-node-kubelet-serial-pod-disruption-conditions`
* `/test pull-kubernetes-node-kubelet-serial-topology-manager`
* `/test pull-kubernetes-node-kubelet-serial-topology-manager-kubetest2`
* `/test pull-kubernetes-node-memoryqos-cgrpv2`
* `/test pull-kubernetes-node-swap-fedora`
* `/test pull-kubernetes-node-swap-fedora-serial`
* `/test pull-kubernetes-node-swap-ubuntu-serial`
* `/test pull-kubernetes-unit-experimental`
* `/test pull-kubernetes-verify-strict-lint`
* `/test pull-publishing-bot-validate`

Use `/test all` to run the following jobs that were automatically triggered:
* `pull-kubernetes-conformance-kind-ga-only-parallel`
* `pull-kubernetes-conformance-kind-ipv6-parallel`
* `pull-kubernetes-dependencies`
* `pull-kubernetes-e2e-gce`
* `pull-kubernetes-e2e-kind`
* `pull-kubernetes-e2e-kind-ipv6`
* `pull-kubernetes-integration`
* `pull-kubernetes-node-e2e-containerd`
* `pull-kubernetes-typecheck`
* `pull-kubernetes-unit`
* `pull-kubernetes-verify`
* `pull-kubernetes-verify-govet-levee`



<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114768#issuecomment-1472315857):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

marosset on (2023-03-16 16:36:42 UTC): @sathyanarays please link to the k/enhancements issue in the issue description in the 'Additional Documentation' section.

marosset on (2023-03-16 16:36:57 UTC): /test pull-kubernetes-e2e-kind

salaxander on (2023-03-16 16:38:05 UTC): @marosset - it looks like this one may not be tied to a KEP but rather a bug triage issue

marosset on (2023-03-16 17:00:34 UTC): Yup, my bad

"
1516928521,pull_request,closed,,Add Affinity field prints in describing Pod and Pod template,"Signed-off-by: Xiaodong Ye <yeahdongcn@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

/kind feature

#### What this PR does / why we need it:

The `Affinity` field is missing in describing pod and deployment/daemonset/etc. (with pod template). This PR adds extra prints in `describePod` and `DescribePodTemplate` in `staging/src/k8s.io/kubectl/pkg/describe/describe.go`.

Tests were done against the following pod manifests (from the official documentation):

1. [pod-with-affinity-anti-affinity.yaml](https://github.com/kubernetes/website/blob/main/content/en/examples/pods/pod-with-affinity-anti-affinity.yaml)
  ```bash
  ❯ ./kubectl describe pod with-affinity-anti-affinity | grep -C 10 Affinity
  Node:             gcc-pc-01/192.168.5.229
  Start Time:       Tue, 03 Jan 2023 09:06:12 +0800
  Labels:           <none>
  Annotations:      cni.projectcalico.org/containerID: 53f0bd62e9e8e931f4376a40475b8d5f99f959fea18bab0ed4fcc80d00f52eec
                    cni.projectcalico.org/podIP: 10.244.3.157/32
                    cni.projectcalico.org/podIPs: 10.244.3.157/32
  Status:           Running
  IP:               10.244.3.157
  IPs:
    IP:  10.244.3.157
  Affinity:
    Node Affinity:     
      Required Terms:  
        Term 0:
          Match Expressions:  kubernetes.io/os in [linux]
          Match Fields:       <none>
      Preferred Terms:        
        Term 0:
          Weight 1:
          Preference:           
            Match Expressions:  label-1 in [key-1]
            Match Fields:       <none>
        Term 1:
          Weight 50:
          Preference:           
            Match Expressions:  label-2 in [key-2]
            Match Fields:       <none>
    Pod Affinity:               <none>
    Pod Anti-affinity:          <none>
  Containers:
    with-node-affinity:
      Container ID:   containerd://70729f33167c6dacde027940ebaa38ac53f79db099320269c83323546f5eaeb4
      Image:          registry.k8s.io/pause:2.0
      Image ID:       sha256:5de2169ecc98c9854e95ca8f965b0755a04674351b9a3bddc47375a9b63f5bd6
      Port:           <none>
      Host Port:      <none>
      State:          Waiting
        Reason:       CrashLoopBackOff
  ```
2. [pod-with-node-affinity.yaml](https://github.com/kubernetes/website/blob/main/content/en/examples/pods/pod-with-node-affinity.yaml)
  ```bash
  ❯ ./kubectl describe pod with-node-affinity | grep -C 10 Affinity
  Name:             with-node-affinity
  Namespace:        default
  Priority:         0
  Service Account:  default
  Node:             <none>
  Labels:           <none>
  Annotations:      <none>
  Status:           Pending
  IP:               
  IPs:              <none>
  Affinity:
    Node Affinity:     
      Required Terms:  
        Term 0:
          Match Expressions:  topology.kubernetes.io/zone in [antarctica-east1, antarctica-west1]
          Match Fields:       <none>
      Preferred Terms:        
        Term 0:
          Weight 1:
          Preference:           
            Match Expressions:  another-node-label-key in [another-node-label-value]
            Match Fields:       <none>
    Pod Affinity:               <none>
    Pod Anti-affinity:          <none>
  Containers:
    with-node-affinity:
      Image:        registry.k8s.io/pause:2.0
      Port:         <none>
      Host Port:    <none>
      Environment:  <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-s7vfb (ro)
  Conditions:
  ```
3. [pod-with-pod-affinity.yaml](https://github.com/kubernetes/website/blob/main/content/en/examples/pods/pod-with-pod-affinity.yaml)
  ```bash
  ❯ ./kubectl describe pod with-pod-affinity | grep -C 10 Affinity
  Name:             with-pod-affinity
  Namespace:        default
  Priority:         0
  Service Account:  default
  Node:             <none>
  Labels:           <none>
  Annotations:      <none>
  Status:           Pending
  IP:               
  IPs:              <none>
  Affinity:
    Node Affinity:     <none>
    Pod Affinity:      
      Required Terms:  
        Term 0:
          Label Selector:      security in (S1)
          Namespaces:          []
          Topology Key:        topology.kubernetes.io/zone
          Namespace Selector:  <none>
      Preferred Terms:         <none>
    Pod Anti-affinity:         
      Required Terms:          <none>
      Preferred Terms:         
        Term 0:
          Weight:                100
          Pod Affinity Term:     
            Label Selector:      security in (S2)
            Namespaces:          []
            Topology Key:        topology.kubernetes.io/zone
            Namespace Selector:  <none>
  Containers:
    with-pod-affinity:
      Image:        registry.k8s.io/pause:2.0
      Port:         <none>
      Host Port:    <none>
      Environment:  <none>
  ```

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:
One function (`printNodeSelectorMultilineWithIndent`) is extracted to reduce code duplication and `describeClusterCIDRV1alpha1` && `describePersistentVolume` are affected as well.

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Print the Affinity field in kubectl describe pod/deployment/daemonset/etc.
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",yeahdongcn,2023-01-03 04:54:19+00:00,[],2023-06-02 11:31:36+00:00,2023-06-02 11:31:34+00:00,https://github.com/kubernetes/kubernetes/pull/114767,"[('area/kubectl', None), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('lifecycle/rotten', 'Denotes an issue or PR that has aged beyond stale and will be auto-closed.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1369393906, 'issue_id': 1516928521, 'author': 'linux-foundation-easycla[bot]', 'body': '<a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: yeahdongcn / name: R0CKSTAR  (fd7b0a3d067aaa93d0f90890bd3ff8f7c843e275)</li></ul>', 'created_at': datetime.datetime(2023, 1, 3, 4, 54, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369393928, 'issue_id': 1516928521, 'author': 'k8s-ci-robot', 'body': '@yeahdongcn: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 3, 4, 54, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369393934, 'issue_id': 1516928521, 'author': 'k8s-ci-robot', 'body': ""Hi @yeahdongcn. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 3, 4, 54, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369394136, 'issue_id': 1516928521, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114767#"" title=""Author self-approved"">yeahdongcn</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign eddiezane for approval by writing `/assign @eddiezane` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""eddiezane""]} -->', 'created_at': datetime.datetime(2023, 1, 3, 4, 55, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1494078871, 'issue_id': 1516928521, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 4, 3, 10, 33, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1532842215, 'issue_id': 1516928521, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle rotten\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 5, 3, 11, 6, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1573587279, 'issue_id': 1516928521, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 6, 2, 11, 31, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1573587411, 'issue_id': 1516928521, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114767#issuecomment-1573587279):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 6, 2, 11, 31, 36, tzinfo=datetime.timezone.utc)}]","linux-foundation-easycla[bot] on (2023-01-03 04:54:22 UTC): <a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: yeahdongcn / name: R0CKSTAR  (fd7b0a3d067aaa93d0f90890bd3ff8f7c843e275)</li></ul>

k8s-ci-robot on (2023-01-03 04:54:27 UTC): @yeahdongcn: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-03 04:54:28 UTC): Hi @yeahdongcn. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-03 04:55:22 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114767#"" title=""Author self-approved"">yeahdongcn</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign eddiezane for approval by writing `/assign @eddiezane` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""eddiezane""]} -->

k8s-triage-robot on (2023-04-03 10:33:43 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2023-05-03 11:06:50 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle rotten

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2023-06-02 11:31:30 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2023-06-02 11:31:36 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114767#issuecomment-1573587279):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1516643832,pull_request,closed,,[Prepare for go1.20] *: Bump versions and fix tests,"#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

Commit 1:

Bumping version of govmomi to include changes that
better handle TLS errors. Bump nescessary
to prepare for when the version of Go is
bumped to 1.20.

Command run:
```
./hack/pin-dependency.sh github.com/vmware/govmomi v0.30.0 
```

See https://github.com/kubernetes/kubernetes/pull/114502#issuecomment-1369026247

Commit 2:

This PR also adapts to this bump.

Commit 3:

This commit modifies the unwrap logic of tests for vclib connection tests to accommodate for new error types introduced in go1.20 and be backward compatible with go1.19

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->

#### Special notes for your reviewer:

~On running the canary job for unit tests, the `TestWithVerificationWithoutCaCertOrThumbprint` test will still fail. See https://github.com/kubernetes/kubernetes/pull/114502#issuecomment-1369030189~

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```

/priority important-soon
/assign @liggitt @dims 

(I messed up something in git because of which the previous PR closed, apologies!)
",MadhavJivrajani,2023-01-02 18:57:45+00:00,"['dims', 'liggitt']",2023-01-12 15:10:57+00:00,2023-01-12 15:10:55+00:00,https://github.com/kubernetes/kubernetes/pull/114766,"[('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('area/kubectl', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/cloudprovider', None), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('sig/cluster-lifecycle', 'Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/instrumentation', 'Categorizes an issue or PR as relevant to SIG Instrumentation.'), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('area/code-generation', ''), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1369147370, 'issue_id': 1516643832, 'author': 'MadhavJivrajani', 'body': '/test pull-kubernetes-unit-go-canary\r\n\r\n~The `TestWithVerificationWithoutCaCertOrThumbprint` test will still fail.\r\nSee https://github.com/kubernetes/kubernetes/pull/114502#issuecomment-1369030189~', 'created_at': datetime.datetime(2023, 1, 2, 18, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369213753, 'issue_id': 1516643832, 'author': 'liggitt', 'body': 'xref https://github.com/kubernetes/release/issues/2815', 'created_at': datetime.datetime(2023, 1, 2, 21, 22, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370164010, 'issue_id': 1516643832, 'author': 'liggitt', 'body': 'hmm... [check-dependency-stats](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114766/check-dependency-stats/1610338908925595648) thinks total dependencies increased by 4:\r\n\r\n```diff\r\n {\r\n-\t""directDependencies"": 212,\r\n-\t""transitiveDependencies"": 234,\r\n-\t""totalDependencies"": 285,\r\n+\t""directDependencies"": 213,\r\n+\t""transitiveDependencies"": 238,\r\n+\t""totalDependencies"": 289,\r\n \t""maxDepthOfDependencies"": 23\r\n }\r\n```', 'created_at': datetime.datetime(2023, 1, 3, 19, 50, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370164182, 'issue_id': 1516643832, 'author': 'liggitt', 'body': '/test pull-kubernetes-unit-go-canary', 'created_at': datetime.datetime(2023, 1, 3, 19, 50, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370168605, 'issue_id': 1516643832, 'author': 'liggitt', 'body': 'hmm... govmomi already includes 6700+ init() functions (80+% of the init functions in kubernetes), and this library bump adds ~470+ more (search ""+func init()"" in https://patch-diff.githubusercontent.com/raw/kubernetes/kubernetes/pull/114766.diff)\r\n\r\nthe unfortunate thing is that those run on every startup of every binary they are linked into, even ones which don\'t make use of vmware functionality at all :-/', 'created_at': datetime.datetime(2023, 1, 3, 19, 56, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370217077, 'issue_id': 1516643832, 'author': 'liggitt', 'body': ""depstat is saying this adds these new deps to the dependency tree:\r\n* github.com/a8m/tree\r\n* github.com/dougm/pretty\r\n* github.com/pkg/diff\r\n* github.com/vmware/vmw-guestinfo\r\n\r\ndeps this drops from the dependency tree:\r\n* gopkg.in/errgo.v2\r\n\r\nI'm trying to figure out whether these are actually new or not... something about the indirect addition may be confusing depstat or go mod graph"", 'created_at': datetime.datetime(2023, 1, 3, 20, 57, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370232509, 'issue_id': 1516643832, 'author': 'fedebongio', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 3, 21, 15, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370948032, 'issue_id': 1516643832, 'author': 'liggitt', 'body': '/test check-dependency-stats', 'created_at': datetime.datetime(2023, 1, 4, 13, 45, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372433103, 'issue_id': 1516643832, 'author': 'liggitt', 'body': ""After chasing https://github.com/kubernetes/kubernetes/pull/114766#issuecomment-1370164010, I think that's spurious... need to dig more, but I don't think that blocks this merging\r\n\r\nI'm not thrilled with https://github.com/kubernetes/kubernetes/pull/114766#issuecomment-1370168605, especially since we'll likely need to backport this to release branches in order to move them to go1.20. That said, I don't see a quick fix to that."", 'created_at': datetime.datetime(2023, 1, 5, 16, 20, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373231829, 'issue_id': 1516643832, 'author': 'MadhavJivrajani', 'body': '/test pull-kubernetes-unit-go-canary', 'created_at': datetime.datetime(2023, 1, 6, 7, 11, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373354197, 'issue_id': 1516643832, 'author': 'MadhavJivrajani', 'body': '/test pull-kubernetes-unit-go-canary', 'created_at': datetime.datetime(2023, 1, 6, 8, 43, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373400662, 'issue_id': 1516643832, 'author': 'MadhavJivrajani', 'body': '/test pull-kubernetes-unit-go-canary', 'created_at': datetime.datetime(2023, 1, 6, 9, 38, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373901165, 'issue_id': 1516643832, 'author': 'liggitt', 'body': 'https://github.com/kubernetes/kubernetes/pull/114078 was opened last year and addressed the azure test, can drop that change out of this PR', 'created_at': datetime.datetime(2023, 1, 6, 17, 5, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1373982215, 'issue_id': 1516643832, 'author': 'MadhavJivrajani', 'body': '@liggitt done.\r\n/test pull-kubernetes-unit-go-canary', 'created_at': datetime.datetime(2023, 1, 6, 18, 22, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374083402, 'issue_id': 1516643832, 'author': 'liggitt', 'body': 'both unit tests flaked on https://github.com/kubernetes/kubernetes/pull/114678#issuecomment-1374075860\r\n\r\n/retest', 'created_at': datetime.datetime(2023, 1, 6, 20, 17, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1374139298, 'issue_id': 1516643832, 'author': 'MadhavJivrajani', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 6, 21, 14, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377607121, 'issue_id': 1516643832, 'author': 'liggitt', 'body': '/test pull-kubernetes-dependencies\r\nto run check added in https://github.com/kubernetes/kubernetes/pull/114952', 'created_at': datetime.datetime(2023, 1, 10, 17, 27, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379559633, 'issue_id': 1516643832, 'author': 'liggitt', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 11, 22, 20, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379559788, 'issue_id': 1516643832, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 251a9521655fa664449b4af863c429ec1ce468c3</details>', 'created_at': datetime.datetime(2023, 1, 11, 22, 20, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380052341, 'issue_id': 1516643832, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114766#issuecomment-1379559633"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114766#"" title=""Author self-approved"">MadhavJivrajani</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apimachinery/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cluster-bootstrap/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cluster-bootstrap/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/cri-api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cri-api/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/csi-translation-lib/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/csi-translation-lib/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kube-controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-controller-manager/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kube-proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-proxy/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kube-scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-scheduler/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubelet/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/mount-utils/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/mount-utils/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/noderesourcetopology-api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/noderesourcetopology-api/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)~~ [liggitt]\n- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [liggitt]\n- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [liggitt]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 12, 9, 39, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380407000, 'issue_id': 1516643832, 'author': 'liggitt', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 12, 14, 7, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380407161, 'issue_id': 1516643832, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 7603391429f359dfcd96b9e781a9574b21384b19</details>', 'created_at': datetime.datetime(2023, 1, 12, 14, 7, 55, tzinfo=datetime.timezone.utc)}]","MadhavJivrajani (Issue Creator) on (2023-01-02 18:58:00 UTC): /test pull-kubernetes-unit-go-canary

~The `TestWithVerificationWithoutCaCertOrThumbprint` test will still fail.
See https://github.com/kubernetes/kubernetes/pull/114502#issuecomment-1369030189~

liggitt (Assginee) on (2023-01-02 21:22:26 UTC): xref https://github.com/kubernetes/release/issues/2815

liggitt (Assginee) on (2023-01-03 19:50:43 UTC): hmm... [check-dependency-stats](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114766/check-dependency-stats/1610338908925595648) thinks total dependencies increased by 4:

```diff
 {
-	""directDependencies"": 212,
-	""transitiveDependencies"": 234,
-	""totalDependencies"": 285,
+	""directDependencies"": 213,
+	""transitiveDependencies"": 238,
+	""totalDependencies"": 289,
 	""maxDepthOfDependencies"": 23
 }
```

liggitt (Assginee) on (2023-01-03 19:50:56 UTC): /test pull-kubernetes-unit-go-canary

liggitt (Assginee) on (2023-01-03 19:56:32 UTC): hmm... govmomi already includes 6700+ init() functions (80+% of the init functions in kubernetes), and this library bump adds ~470+ more (search ""+func init()"" in https://patch-diff.githubusercontent.com/raw/kubernetes/kubernetes/pull/114766.diff)

the unfortunate thing is that those run on every startup of every binary they are linked into, even ones which don't make use of vmware functionality at all :-/

liggitt (Assginee) on (2023-01-03 20:57:28 UTC): depstat is saying this adds these new deps to the dependency tree:
* github.com/a8m/tree
* github.com/dougm/pretty
* github.com/pkg/diff
* github.com/vmware/vmw-guestinfo

deps this drops from the dependency tree:
* gopkg.in/errgo.v2

I'm trying to figure out whether these are actually new or not... something about the indirect addition may be confusing depstat or go mod graph

fedebongio on (2023-01-03 21:15:54 UTC): /triage accepted

liggitt (Assginee) on (2023-01-04 13:45:35 UTC): /test check-dependency-stats

liggitt (Assginee) on (2023-01-05 16:20:19 UTC): After chasing https://github.com/kubernetes/kubernetes/pull/114766#issuecomment-1370164010, I think that's spurious... need to dig more, but I don't think that blocks this merging

I'm not thrilled with https://github.com/kubernetes/kubernetes/pull/114766#issuecomment-1370168605, especially since we'll likely need to backport this to release branches in order to move them to go1.20. That said, I don't see a quick fix to that.

MadhavJivrajani (Issue Creator) on (2023-01-06 07:11:39 UTC): /test pull-kubernetes-unit-go-canary

MadhavJivrajani (Issue Creator) on (2023-01-06 08:43:37 UTC): /test pull-kubernetes-unit-go-canary

MadhavJivrajani (Issue Creator) on (2023-01-06 09:38:05 UTC): /test pull-kubernetes-unit-go-canary

liggitt (Assginee) on (2023-01-06 17:05:27 UTC): https://github.com/kubernetes/kubernetes/pull/114078 was opened last year and addressed the azure test, can drop that change out of this PR

MadhavJivrajani (Issue Creator) on (2023-01-06 18:22:51 UTC): @liggitt done.
/test pull-kubernetes-unit-go-canary

liggitt (Assginee) on (2023-01-06 20:17:03 UTC): both unit tests flaked on https://github.com/kubernetes/kubernetes/pull/114678#issuecomment-1374075860

/retest

MadhavJivrajani (Issue Creator) on (2023-01-06 21:14:01 UTC): /retest

liggitt (Assginee) on (2023-01-10 17:27:45 UTC): /test pull-kubernetes-dependencies
to run check added in https://github.com/kubernetes/kubernetes/pull/114952

liggitt (Assginee) on (2023-01-11 22:20:22 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-11 22:20:32 UTC): LGTM label has been added.  <details>Git tree hash: 251a9521655fa664449b4af863c429ec1ce468c3</details>

k8s-ci-robot on (2023-01-12 09:39:51 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114766#issuecomment-1379559633"" title=""Approved"">liggitt</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114766#"" title=""Author self-approved"">MadhavJivrajani</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apimachinery/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cluster-bootstrap/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cluster-bootstrap/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/component-base/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/cri-api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cri-api/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/csi-translation-lib/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/csi-translation-lib/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kube-controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-controller-manager/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kube-proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-proxy/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kube-scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-scheduler/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/kubelet/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubelet/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/metrics/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/mount-utils/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/mount-utils/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/noderesourcetopology-api/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/noderesourcetopology-api/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)~~ [liggitt]
- ~~[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)~~ [liggitt]
- ~~[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)~~ [liggitt]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

liggitt (Assginee) on (2023-01-12 14:07:49 UTC): /lgtm

k8s-ci-robot on (2023-01-12 14:07:55 UTC): LGTM label has been added.  <details>Git tree hash: 7603391429f359dfcd96b9e781a9574b21384b19</details>

"
1516572313,pull_request,closed,,unittests: Fixes unit tests for Windows (part 7),"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

/sig testing
/sig windows

/kind failing-tests
/priority important-soon
/milestone v1.27

#### What this PR does / why we need it:

Currently, there are some unit tests that are failing on Windows due to various reasons:

- if a powershell command that could return an array (e.g.: ``Get-Disk``) would return an array of only one element, powershell will in fact return that object directly, and **not** an array containing that element. In a few cases, these commands are used and their output is converted to json, after which they're unmarshalled in golang, with the expectation that the unmarshalled data to be an array. If it's not an array, we get an error.
- when mounting Block Devices, Windows expects the given source to be a Disk Number, not a path.
- for ``rbd_windows_test.go``, we should start with Disk Number 0, which exists on all hosts.
- if a Disk has multiple volumes, ``Get-Volume`` doesn't return the volumes in the same order. This can result in various assertions failing.
- the ``pkg/volume/rbd/rdb_test.TestPlugin`` test expects that ``mounter.MountSensitive`` is called when ``attacher.MountDevice`` is called. The Windows attacher doesn't currently make that call.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Related: https://github.com/kubernetes/kubernetes/issues/51540

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",claudiubelu,2023-01-02 17:00:11+00:00,"['humblec', 'saad-ali']",2023-05-08 18:52:52+00:00,2023-05-08 18:52:51+00:00,https://github.com/kubernetes/kubernetes/pull/114764,"[('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('sig/windows', 'Categorizes an issue or PR as relevant to SIG Windows.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1369092028, 'issue_id': 1516572313, 'author': 'k8s-ci-robot', 'body': ""@claudiubelu: The label(s) `kind/failing-tests` cannot be applied, because the repository doesn't have them.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114764):\n\n>\r\n>\r\n>#### What type of PR is this?\r\n>\r\n>\r\n>\r\n>/sig testing\r\n>/sig windows\r\n>\r\n>/kind failing-tests\r\n>/priority important-soon\r\n>/milestone v1.27\r\n>\r\n>#### What this PR does / why we need it:\r\n>\r\n>Currently, there are some unit tests that are failing on Windows due to various reasons:\r\n>\r\n>- if a powershell command that could return an array (e.g.: ``Get-Disk``) would return an array of only one element, powershell will in fact return that object directly, and **not** an array containing that element. In a few cases, these commands are used and their output is converted to json, after which they're unmarshalled in golang, with the expectation that the unmarshalled data to be an array. If it's not an array, we get an error.\r\n>- flexvolume coverts its paths to absolute paths, which means that on Windows the ``C:\\`` prefix will be added. This becomes an issue when ``prober.fs.Walk`` is called, which will join 2 absolute paths, both containing the ``C:\\`` prefix, resulting in an incorrect path.\r\n>- when mounting Block Devices, Windows expects the given source to be a Disk Number, not a path.\r\n>- for ``rbd_windows_test.go``, we should start with Disk Number 0, which exists on all hosts.\r\n>- if a Disk has multiple volumes, ``Get-Volume`` doesn't return the volumes in the same order. This can result in various assertions failing.\r\n>- the ``pkg/volume/rbd/rdb_test.TestPlugin`` test expects that ``mounter.MountSensitive`` is called when ``attacher.MountDevice`` is called. The Windows attacher doesn't currently make that call.\r\n>\r\n>#### Which issue(s) this PR fixes:\r\n>\r\n>Related: https://github.com/kubernetes/kubernetes/issues/51540\r\n>\r\n>#### Special notes for your reviewer:\r\n>\r\n>#### Does this PR introduce a user-facing change?\r\n>\r\n>```release-note\r\n>NONE\r\n>```\r\n>\r\n>#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:\r\n>\r\n>\r\n>```docs\r\n>\r\n>```\r\n>\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 2, 17, 0, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369092067, 'issue_id': 1516572313, 'author': 'k8s-ci-robot', 'body': '@claudiubelu: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 2, 17, 0, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370960597, 'issue_id': 1516572313, 'author': 'claudiubelu', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 4, 13, 57, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1380784562, 'issue_id': 1516572313, 'author': 'claudiubelu', 'body': '/cc @marosset for the powershell array bits.', 'created_at': datetime.datetime(2023, 1, 12, 17, 51, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1386009183, 'issue_id': 1516572313, 'author': 'marosset', 'body': '/test pull-kubernetes-e2e-capz-azure-disk-vmss\r\n/test pull-kubernetes-verify\r\n/test pull-kubernetes-e2e-capz-azure-file-vmss\r\n/test pull-kubernetes-e2e-capz-azure-file-vmss\r\n/test pull-kubernetes-e2e-capz-conformance\r\n/test pull-kubernetes-e2e-capz-azure-file\r\n\r\nTriggering some CAPZ PR jobs to try for another investigation cc @CecileRobertMichon', 'created_at': datetime.datetime(2023, 1, 17, 20, 27, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1387438707, 'issue_id': 1516572313, 'author': 'CecileRobertMichon', 'body': '/test pull-kubernetes-e2e-capz-azure-file-vmss\r\n/test pull-kubernetes-e2e-capz-azure-disk-vmss\r\n/test pull-kubernetes-e2e-capz-conformance\r\n/test pull-kubernetes-e2e-capz-azure-file\r\n/test pull-kubernetes-e2e-capz-azure-disk', 'created_at': datetime.datetime(2023, 1, 18, 17, 17, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1403672905, 'issue_id': 1516572313, 'author': 'claudiubelu', 'body': '/test pull-kubernetes-e2e-capz-conformance\r\n/test pull-kubernetes-e2e-capz-conformance-1-7\r\n/test pull-kubernetes-e2e-capz-azure-disk-1-7', 'created_at': datetime.datetime(2023, 1, 25, 14, 3, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1404187882, 'issue_id': 1516572313, 'author': 'claudiubelu', 'body': '/test pull-kubernetes-e2e-capz-azure-disk-1-7', 'created_at': datetime.datetime(2023, 1, 25, 20, 30, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1404217037, 'issue_id': 1516572313, 'author': 'CecileRobertMichon', 'body': ""@claudiubelu `pull-kubernetes-e2e-capz-azure-disk-1-7` is currently broken due to known issue (https://github.com/kubernetes-sigs/cluster-api-provider-azure/issues/3082) we've reverted all the jobs to 1.6 and added 1.7 as optional to help us debug\r\n\r\n@marosset and I used your PR to debug the broken the test before, you should be good to ignore that job. `pull-kubernetes-e2e-capz-azure-disk ` provides the equivalent coverage."", 'created_at': datetime.datetime(2023, 1, 25, 21, 0, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1405280888, 'issue_id': 1516572313, 'author': 'CecileRobertMichon', 'body': 'test should be fixed now\r\n\r\n/test pull-kubernetes-e2e-capz-azure-disk-1-7\r\n\r\n@marosset ^', 'created_at': datetime.datetime(2023, 1, 26, 16, 36, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1406575561, 'issue_id': 1516572313, 'author': 'claudiubelu', 'body': '/test pull-ci-kubernetes-unit-windows', 'created_at': datetime.datetime(2023, 1, 27, 14, 24, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1407444488, 'issue_id': 1516572313, 'author': 'claudiubelu', 'body': '/test pull-kubernetes-e2e-gce', 'created_at': datetime.datetime(2023, 1, 28, 17, 21, 57, tzinfo=datetime.timezone.utc)}, {'comment_id': 1410706620, 'issue_id': 1516572313, 'author': 'claudiubelu', 'body': '/assign @saad-ali', 'created_at': datetime.datetime(2023, 1, 31, 16, 37, 2, tzinfo=datetime.timezone.utc)}, {'comment_id': 1435095654, 'issue_id': 1516572313, 'author': 'valaparthvi', 'body': 'Hi @claudiubelu! I am from the Bug triage release team for v1.27. I am checking in to see if this PR is on track for 1.27.', 'created_at': datetime.datetime(2023, 2, 17, 18, 51, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1436557199, 'issue_id': 1516572313, 'author': 'claudiubelu', 'body': '> \r\n\r\nIt is. Waiting for it to get reviewed / approved.', 'created_at': datetime.datetime(2023, 2, 20, 8, 44, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1459921452, 'issue_id': 1516572313, 'author': 'valaparthvi', 'body': 'Hi, I am from the Bug triage release team for v1.27.\r\nI see the PR is waiting for review from other SIGs, possibly @kubernetes/sig-storage-leads or @kubernetes/sig-testing-leads . Can this PR get some love so that we can keep it on track for 1.27 release? :)', 'created_at': datetime.datetime(2023, 3, 8, 10, 4, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1478081785, 'issue_id': 1516572313, 'author': 'liggitt', 'body': '/milestone clear\r\n\r\nsince this is touching code outside of test files after code freeze', 'created_at': datetime.datetime(2023, 3, 21, 15, 48, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1522001243, 'issue_id': 1516572313, 'author': 'claudiubelu', 'body': '/milestone v1.28', 'created_at': datetime.datetime(2023, 4, 25, 15, 28, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1525193420, 'issue_id': 1516572313, 'author': 'jsafrane', 'body': '/approve', 'created_at': datetime.datetime(2023, 4, 27, 9, 2, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1525194264, 'issue_id': 1516572313, 'author': 'jsafrane', 'body': '/kind cleanup', 'created_at': datetime.datetime(2023, 4, 27, 9, 2, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1525194552, 'issue_id': 1516572313, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114764#"" title=""Author self-approved"">claudiubelu</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114764#issuecomment-1525193420"" title=""Approved"">jsafrane</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/volume/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/volume/OWNERS)~~ [jsafrane]\n- ~~[staging/src/k8s.io/mount-utils/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/mount-utils/OWNERS)~~ [jsafrane]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 4, 27, 9, 3, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1525198056, 'issue_id': 1516572313, 'author': 'jsafrane', 'body': '@humblec, can you please review this?', 'created_at': datetime.datetime(2023, 4, 27, 9, 4, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1525241885, 'issue_id': 1516572313, 'author': 'humblec', 'body': '> @humblec, can you please review this?\r\n\r\nsure. on it.. thanks!', 'created_at': datetime.datetime(2023, 4, 27, 9, 22, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1525338226, 'issue_id': 1516572313, 'author': 'humblec', 'body': '@claudiubelu the change on rbd side looks good to me.. however I have a couple of questions here:\r\n\r\n```\r\nif a powershell command that could return an array (e.g.: Get-Disk) would return an array of only one element, powershell will in fact return that object directly, and not an array containing that element. \r\n```\r\n\r\nis this behaviour specific to any particular  version of powershell? or its same across all powershell versions?\r\n\r\n```\r\nfor rbd_windows_test.go, we should start with Disk Number 0, which exists on all hosts.\r\n```\r\nits fine to start with number 0, it would have been better if the test case of other OS used `rbd0` instead of `rbd1` to be consistent, but current version is fine too. can you please explain bit more on the point that `....Number 0, which exists on all hosts...` , are you referring the test case or something in general?', 'created_at': datetime.datetime(2023, 4, 27, 10, 0, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1533663042, 'issue_id': 1516572313, 'author': 'claudiubelu', 'body': '/milestone v1.28', 'created_at': datetime.datetime(2023, 5, 3, 20, 5, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1538063188, 'issue_id': 1516572313, 'author': 'claudiubelu', 'body': 'Hello, thanks for the review!\r\n\r\n> @claudiubelu the change on rbd side looks good to me.. however I have a couple of questions here:\r\n> \r\n> ```\r\n> if a powershell command that could return an array (e.g.: Get-Disk) would return an array of only one element, powershell will in fact return that object directly, and not an array containing that element. \r\n> ```\r\n> \r\n> is this behaviour specific to any particular version of powershell? or its same across all powershell versions?\r\n> \r\n\r\nIt\'s been known as a ""feature"" for quite some time [1][2]. This is also exemplified here [3]: ``PowerShell likes to unwrap or enumerate arrays. This is a core aspect of the way PowerShell uses the pipeline but there are times that you don\'t want that to happen.``. And it can also happen when returning arrays: ``This unwrapping of arrays also happens when you output or return values from a function. You can still get an array if you assign the output to a variable so this isn\'t commonly an issue.``\r\n\r\n[1] https://stackoverflow.com/questions/11107428/how-can-i-force-powershell-to-return-an-array-when-a-call-only-returns-one-objec\r\n[2] https://superuser.com/questions/414650/why-does-powershell-silently-convert-a-string-array-with-one-item-to-a-string\r\n[3] https://learn.microsoft.com/en-us/powershell/scripting/learn/deep-dives/everything-about-arrays?view=powershell-7.3#write-output--noenumerate\r\n\r\n> ```\r\n> for rbd_windows_test.go, we should start with Disk Number 0, which exists on all hosts.\r\n> ```\r\n> \r\n> its fine to start with number 0, it would have been better if the test case of other OS used `rbd0` instead of `rbd1` to be consistent, but current version is fine too. can you please explain bit more on the point that `....Number 0, which exists on all hosts...` , are you referring the test case or something in general?\r\n\r\nI can change ``rbd1`` to ``rdb0``. As for ``....Number 0, which exists on all hosts...``, that basically refers to the fact that you basically have the disk you\'ve booted from, which will be Disk Number 0, so ``Get-Disk`` will return at least one element.', 'created_at': datetime.datetime(2023, 5, 8, 9, 37, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1538237568, 'issue_id': 1516572313, 'author': 'k8s-ci-robot', 'body': '@claudiubelu: The following test **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:\n\nTest name | Commit | Details | Required | Rerun command\n--- | --- | --- | --- | ---\npull-kubernetes-e2e-capz-azure-disk-1-7 | f7473acb8b852642bf7c968afe8b5cc2d7ee7cbf | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114764/pull-kubernetes-e2e-capz-azure-disk-1-7/1618916655306379264) | false | `/test pull-kubernetes-e2e-capz-azure-disk-1-7`\n\n[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114764). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3Aclaudiubelu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).\n</details>\n<!-- test report -->', 'created_at': datetime.datetime(2023, 5, 8, 11, 57, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1538399340, 'issue_id': 1516572313, 'author': 'dims', 'body': '> > @humblec, can you please review this?\r\n> \r\n> sure. on it.. thanks!\r\n\r\n@humblec ping :)', 'created_at': datetime.datetime(2023, 5, 8, 13, 54, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1538517919, 'issue_id': 1516572313, 'author': 'humblec', 'body': ""@claudiubelu thanks for providing details: 👍 \r\n\r\n>\r\n\r\n    for rbd_windows_test.go, we should start with Disk Number 0, which exists on all hosts.\r\n\r\n    its fine to start with number 0, it would have been better if the test case of other OS used rbd0 instead of rbd1 to be consistent, but current version is fine too. can you please explain bit more on the point that ....Number 0, which exists on all hosts... , are you referring the test case or something in general?\r\n\r\n>I can change rbd1 to rdb0. As for ....Number 0, which exists on all hosts..., that basically refers to the fact that you basically have the disk you've booted from, which will be Disk Number 0, so Get-Disk will return at least one element.\r\n\r\nhmmm... considering rbd disks are network attached, ( mostly) its not going to be the boot disk.. so expecting it is present is not really a thing, but in this test context,  having  `rbd0`  in place of `rbd1` is fine.."", 'created_at': datetime.datetime(2023, 5, 8, 15, 6, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1538520755, 'issue_id': 1516572313, 'author': 'humblec', 'body': '> > > @humblec, can you please review this?\r\n> > \r\n> > \r\n> > sure. on it.. thanks!\r\n> \r\n> @humblec ping :)\r\n\r\n@dims I was waiting for https://github.com/kubernetes/kubernetes/pull/114764#issuecomment-1525338226 to be answered :) , considering we have it now, this is good to go.', 'created_at': datetime.datetime(2023, 5, 8, 15, 7, 36, tzinfo=datetime.timezone.utc)}, {'comment_id': 1538522616, 'issue_id': 1516572313, 'author': 'humblec', 'body': '/test pull-kubernetes-e2e-gce', 'created_at': datetime.datetime(2023, 5, 8, 15, 8, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1538523160, 'issue_id': 1516572313, 'author': 'humblec', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 5, 8, 15, 8, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1538523460, 'issue_id': 1516572313, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 4281443c33fa13fac236aaf9f5a49ca46c615d47</details>', 'created_at': datetime.datetime(2023, 5, 8, 15, 8, 33, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-02 17:00:15 UTC): @claudiubelu: The label(s) `kind/failing-tests` cannot be applied, because the repository doesn't have them.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114764):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-02 17:00:19 UTC): @claudiubelu: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

claudiubelu (Issue Creator) on (2023-01-04 13:57:15 UTC): /retest

claudiubelu (Issue Creator) on (2023-01-12 17:51:53 UTC): /cc @marosset for the powershell array bits.

marosset on (2023-01-17 20:27:15 UTC): /test pull-kubernetes-e2e-capz-azure-disk-vmss
/test pull-kubernetes-verify
/test pull-kubernetes-e2e-capz-azure-file-vmss
/test pull-kubernetes-e2e-capz-azure-file-vmss
/test pull-kubernetes-e2e-capz-conformance
/test pull-kubernetes-e2e-capz-azure-file

Triggering some CAPZ PR jobs to try for another investigation cc @CecileRobertMichon

CecileRobertMichon on (2023-01-18 17:17:52 UTC): /test pull-kubernetes-e2e-capz-azure-file-vmss
/test pull-kubernetes-e2e-capz-azure-disk-vmss
/test pull-kubernetes-e2e-capz-conformance
/test pull-kubernetes-e2e-capz-azure-file
/test pull-kubernetes-e2e-capz-azure-disk

claudiubelu (Issue Creator) on (2023-01-25 14:03:30 UTC): /test pull-kubernetes-e2e-capz-conformance
/test pull-kubernetes-e2e-capz-conformance-1-7
/test pull-kubernetes-e2e-capz-azure-disk-1-7

claudiubelu (Issue Creator) on (2023-01-25 20:30:02 UTC): /test pull-kubernetes-e2e-capz-azure-disk-1-7

CecileRobertMichon on (2023-01-25 21:00:36 UTC): @claudiubelu `pull-kubernetes-e2e-capz-azure-disk-1-7` is currently broken due to known issue (https://github.com/kubernetes-sigs/cluster-api-provider-azure/issues/3082) we've reverted all the jobs to 1.6 and added 1.7 as optional to help us debug

@marosset and I used your PR to debug the broken the test before, you should be good to ignore that job. `pull-kubernetes-e2e-capz-azure-disk ` provides the equivalent coverage.

CecileRobertMichon on (2023-01-26 16:36:48 UTC): test should be fixed now

/test pull-kubernetes-e2e-capz-azure-disk-1-7

@marosset ^

claudiubelu (Issue Creator) on (2023-01-27 14:24:52 UTC): /test pull-ci-kubernetes-unit-windows

claudiubelu (Issue Creator) on (2023-01-28 17:21:57 UTC): /test pull-kubernetes-e2e-gce

claudiubelu (Issue Creator) on (2023-01-31 16:37:02 UTC): /assign @saad-ali

valaparthvi on (2023-02-17 18:51:12 UTC): Hi @claudiubelu! I am from the Bug triage release team for v1.27. I am checking in to see if this PR is on track for 1.27.

claudiubelu (Issue Creator) on (2023-02-20 08:44:27 UTC): It is. Waiting for it to get reviewed / approved.

valaparthvi on (2023-03-08 10:04:07 UTC): Hi, I am from the Bug triage release team for v1.27.
I see the PR is waiting for review from other SIGs, possibly @kubernetes/sig-storage-leads or @kubernetes/sig-testing-leads . Can this PR get some love so that we can keep it on track for 1.27 release? :)

liggitt on (2023-03-21 15:48:36 UTC): /milestone clear

since this is touching code outside of test files after code freeze

claudiubelu (Issue Creator) on (2023-04-25 15:28:36 UTC): /milestone v1.28

jsafrane on (2023-04-27 09:02:39 UTC): /approve

jsafrane on (2023-04-27 09:02:59 UTC): /kind cleanup

k8s-ci-robot on (2023-04-27 09:03:06 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114764#"" title=""Author self-approved"">claudiubelu</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114764#issuecomment-1525193420"" title=""Approved"">jsafrane</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/volume/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/volume/OWNERS)~~ [jsafrane]
- ~~[staging/src/k8s.io/mount-utils/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/mount-utils/OWNERS)~~ [jsafrane]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

jsafrane on (2023-04-27 09:04:28 UTC): @humblec, can you please review this?

humblec (Assginee) on (2023-04-27 09:22:24 UTC): sure. on it.. thanks!

humblec (Assginee) on (2023-04-27 10:00:41 UTC): @claudiubelu the change on rbd side looks good to me.. however I have a couple of questions here:

```
if a powershell command that could return an array (e.g.: Get-Disk) would return an array of only one element, powershell will in fact return that object directly, and not an array containing that element. 
```

is this behaviour specific to any particular  version of powershell? or its same across all powershell versions?

```
for rbd_windows_test.go, we should start with Disk Number 0, which exists on all hosts.
```
its fine to start with number 0, it would have been better if the test case of other OS used `rbd0` instead of `rbd1` to be consistent, but current version is fine too. can you please explain bit more on the point that `....Number 0, which exists on all hosts...` , are you referring the test case or something in general?

claudiubelu (Issue Creator) on (2023-05-03 20:05:44 UTC): /milestone v1.28

claudiubelu (Issue Creator) on (2023-05-08 09:37:36 UTC): Hello, thanks for the review!


It's been known as a ""feature"" for quite some time [1][2]. This is also exemplified here [3]: ``PowerShell likes to unwrap or enumerate arrays. This is a core aspect of the way PowerShell uses the pipeline but there are times that you don't want that to happen.``. And it can also happen when returning arrays: ``This unwrapping of arrays also happens when you output or return values from a function. You can still get an array if you assign the output to a variable so this isn't commonly an issue.``

[1] https://stackoverflow.com/questions/11107428/how-can-i-force-powershell-to-return-an-array-when-a-call-only-returns-one-objec
[2] https://superuser.com/questions/414650/why-does-powershell-silently-convert-a-string-array-with-one-item-to-a-string
[3] https://learn.microsoft.com/en-us/powershell/scripting/learn/deep-dives/everything-about-arrays?view=powershell-7.3#write-output--noenumerate


I can change ``rbd1`` to ``rdb0``. As for ``....Number 0, which exists on all hosts...``, that basically refers to the fact that you basically have the disk you've booted from, which will be Disk Number 0, so ``Get-Disk`` will return at least one element.

k8s-ci-robot on (2023-05-08 11:57:59 UTC): @claudiubelu: The following test **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:

Test name | Commit | Details | Required | Rerun command
--- | --- | --- | --- | ---
pull-kubernetes-e2e-capz-azure-disk-1-7 | f7473acb8b852642bf7c968afe8b5cc2d7ee7cbf | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114764/pull-kubernetes-e2e-capz-azure-disk-1-7/1618916655306379264) | false | `/test pull-kubernetes-e2e-capz-azure-disk-1-7`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114764). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3Aclaudiubelu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->

dims on (2023-05-08 13:54:19 UTC): @humblec ping :)

humblec (Assginee) on (2023-05-08 15:06:35 UTC): @claudiubelu thanks for providing details: 👍 


    for rbd_windows_test.go, we should start with Disk Number 0, which exists on all hosts.

    its fine to start with number 0, it would have been better if the test case of other OS used rbd0 instead of rbd1 to be consistent, but current version is fine too. can you please explain bit more on the point that ....Number 0, which exists on all hosts... , are you referring the test case or something in general?


hmmm... considering rbd disks are network attached, ( mostly) its not going to be the boot disk.. so expecting it is present is not really a thing, but in this test context,  having  `rbd0`  in place of `rbd1` is fine..

humblec (Assginee) on (2023-05-08 15:07:36 UTC): @dims I was waiting for https://github.com/kubernetes/kubernetes/pull/114764#issuecomment-1525338226 to be answered :) , considering we have it now, this is good to go.

humblec (Assginee) on (2023-05-08 15:08:14 UTC): /test pull-kubernetes-e2e-gce

humblec (Assginee) on (2023-05-08 15:08:26 UTC): /lgtm

k8s-ci-robot on (2023-05-08 15:08:33 UTC): LGTM label has been added.  <details>Git tree hash: 4281443c33fa13fac236aaf9f5a49ca46c615d47</details>

"
1516566797,pull_request,closed,,[Prepare for go1.20] vclib: Update the unwrap check for UnknownAuthorityError,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

This commit accounts for the introduction of CertificateVerificationError in go1.20 and how govmomi handles it.

This commit also gets rid of the check for the text of the x509.CertificateVerificationError error since we already check if the erorr is that type.

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->

#### Special notes for your reviewer:

To be merged only after Go has been bumped to 1.20

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```",MadhavJivrajani,2023-01-02 16:50:19+00:00,[],2023-01-03 18:15:29+00:00,2023-01-03 18:15:28+00:00,https://github.com/kubernetes/kubernetes/pull/114763,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/cloudprovider', None), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('do-not-merge/work-in-progress', 'Indicates that a PR should not merge because it is a work in progress.'), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1369087666, 'issue_id': 1516566797, 'author': 'k8s-ci-robot', 'body': 'Skipping CI for Draft Pull Request.\nIf you want CI signal for your change, please convert it to an actual PR.\nYou can still manually trigger a test run with `/test all`', 'created_at': datetime.datetime(2023, 1, 2, 16, 50, 21, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369087723, 'issue_id': 1516566797, 'author': 'k8s-ci-robot', 'body': '@MadhavJivrajani: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 2, 16, 50, 27, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369088015, 'issue_id': 1516566797, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114763#"" title=""Author self-approved"">MadhavJivrajani</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign andrewsykim for approval by writing `/assign @andrewsykim` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""andrewsykim""]} -->', 'created_at': datetime.datetime(2023, 1, 2, 16, 51, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369206649, 'issue_id': 1516566797, 'author': 'liggitt', 'body': 'xref https://github.com/kubernetes/release/issues/2815', 'created_at': datetime.datetime(2023, 1, 2, 21, 10, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370082324, 'issue_id': 1516566797, 'author': 'MadhavJivrajani', 'body': '/close\r\nIncorporated changes here to unify PRs on account of https://github.com/kubernetes/kubernetes/pull/114763#discussion_r1060189505: https://github.com/kubernetes/kubernetes/pull/114766/commits/ec223a48afedb596166f8c5613d3859e3fc5dc01', 'created_at': datetime.datetime(2023, 1, 3, 18, 15, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370082418, 'issue_id': 1516566797, 'author': 'k8s-ci-robot', 'body': '@MadhavJivrajani: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114763#issuecomment-1370082324):\n\n>/close\r\n>Incorporated changes here to unify PRs on account of https://github.com/kubernetes/kubernetes/pull/114763#discussion_r1060189505: https://github.com/kubernetes/kubernetes/pull/114766/commits/ec223a48afedb596166f8c5613d3859e3fc5dc01\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 3, 18, 15, 29, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-02 16:50:21 UTC): Skipping CI for Draft Pull Request.
If you want CI signal for your change, please convert it to an actual PR.
You can still manually trigger a test run with `/test all`

k8s-ci-robot on (2023-01-02 16:50:27 UTC): @MadhavJivrajani: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-02 16:51:06 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114763#"" title=""Author self-approved"">MadhavJivrajani</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign andrewsykim for approval by writing `/assign @andrewsykim` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""andrewsykim""]} -->

liggitt on (2023-01-02 21:10:56 UTC): xref https://github.com/kubernetes/release/issues/2815

MadhavJivrajani (Issue Creator) on (2023-01-03 18:15:23 UTC): /close
Incorporated changes here to unify PRs on account of https://github.com/kubernetes/kubernetes/pull/114763#discussion_r1060189505: https://github.com/kubernetes/kubernetes/pull/114766/commits/ec223a48afedb596166f8c5613d3859e3fc5dc01

k8s-ci-robot on (2023-01-03 18:15:29 UTC): @MadhavJivrajani: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114763#issuecomment-1370082324):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1516561839,pull_request,closed,,[Prepare for go1.20] *: Bump version of vmware/govmomi,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

Bumping version to include changes that
better handle TLS errors. Bump nescessary
to prepare for when the version of Go is
bumped to 1.20.

Command run:
```
./hack/pin-dependency.sh github.com/vmware/govmomi v0.30.0 
```

See https://github.com/kubernetes/kubernetes/pull/114502#issuecomment-1369026247

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->

#### Special notes for your reviewer:

On running the canary job for unit tests, the `TestWithVerificationWithoutCaCertOrThumbprint` test will still fail. See https://github.com/kubernetes/kubernetes/pull/114502#issuecomment-1369030189

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```

/priority important-soon
/assign @liggitt @dims 

",MadhavJivrajani,2023-01-02 16:41:48+00:00,"['dims', 'liggitt']",2023-01-03 21:15:41+00:00,2023-01-02 18:53:25+00:00,https://github.com/kubernetes/kubernetes/pull/114762,"[('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/apiserver', None), ('area/kubectl', None), ('area/cloudprovider', None), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('area/code-generation', ''), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('area/dependency', 'Issues or PRs related to dependency changes'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1369083960, 'issue_id': 1516561839, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114762#"" title=""Author self-approved"">MadhavJivrajani</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign deads2k, lavalamp, liggitt, sttts for approval by writing `/assign @deads2k @lavalamp @liggitt @sttts` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)**\n- **[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)**\n- **[staging/src/k8s.io/apimachinery/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/OWNERS)**\n- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**\n- **[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)**\n- **[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)**\n- **[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)**\n- **[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)**\n- **[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)**\n- **[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)**\n- **[staging/src/k8s.io/csi-translation-lib/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/csi-translation-lib/OWNERS)**\n- **[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)**\n- **[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)**\n- **[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)**\n- **[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)**\n- **[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)**\n- **[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)**\n- **[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)**\n- **[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)**\n- **[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""deads2k"",""lavalamp"",""liggitt"",""sttts""]} -->', 'created_at': datetime.datetime(2023, 1, 2, 16, 42, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369084135, 'issue_id': 1516561839, 'author': 'MadhavJivrajani', 'body': '/test pull-kubernetes-unit-go-canary\r\n\r\nThe TestWithVerificationWithoutCaCertOrThumbprint test will still fail.\r\nSee https://github.com/kubernetes/kubernetes/pull/114502#issuecomment-1369030189', 'created_at': datetime.datetime(2023, 1, 2, 16, 43, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369112885, 'issue_id': 1516561839, 'author': 'k8s-ci-robot', 'body': '@MadhavJivrajani: The following tests **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:\n\nTest name | Commit | Details | Required | Rerun command\n--- | --- | --- | --- | ---\npull-kubernetes-unit | d42ec1f891364a7b8e930e92e943dec9636d5a9c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114762/pull-kubernetes-unit/1609953125823680512) | true | `/test pull-kubernetes-unit`\npull-kubernetes-unit-go-canary | d42ec1f891364a7b8e930e92e943dec9636d5a9c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114762/pull-kubernetes-unit-go-canary/1609953453159747584) | true | `/test pull-kubernetes-unit-go-canary`\npull-kubernetes-verify | d42ec1f891364a7b8e930e92e943dec9636d5a9c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114762/pull-kubernetes-verify/1609953130936537088) | true | `/test pull-kubernetes-verify`\n\n[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114762). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3AMadhavJivrajani). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).\n</details>\n<!-- test report -->', 'created_at': datetime.datetime(2023, 1, 2, 17, 36, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369206984, 'issue_id': 1516561839, 'author': 'liggitt', 'body': 'xref https://github.com/kubernetes/release/issues/2815', 'created_at': datetime.datetime(2023, 1, 2, 21, 11, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370232289, 'issue_id': 1516561839, 'author': 'fedebongio', 'body': '/triage accepted', 'created_at': datetime.datetime(2023, 1, 3, 21, 15, 37, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-02 16:42:44 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114762#"" title=""Author self-approved"">MadhavJivrajani</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign deads2k, lavalamp, liggitt, sttts for approval by writing `/assign @deads2k @lavalamp @liggitt @sttts` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[OWNERS](https://github.com/kubernetes/kubernetes/blob/master/OWNERS)**
- **[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)**
- **[staging/src/k8s.io/apimachinery/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/OWNERS)**
- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**
- **[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)**
- **[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)**
- **[staging/src/k8s.io/cloud-provider/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider/OWNERS)**
- **[staging/src/k8s.io/code-generator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator/OWNERS)**
- **[staging/src/k8s.io/component-helpers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-helpers/OWNERS)**
- **[staging/src/k8s.io/controller-manager/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager/OWNERS)**
- **[staging/src/k8s.io/csi-translation-lib/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/csi-translation-lib/OWNERS)**
- **[staging/src/k8s.io/dynamic-resource-allocation/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/dynamic-resource-allocation/OWNERS)**
- **[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)**
- **[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)**
- **[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)**
- **[staging/src/k8s.io/pod-security-admission/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/pod-security-admission/OWNERS)**
- **[staging/src/k8s.io/sample-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-apiserver/OWNERS)**
- **[staging/src/k8s.io/sample-cli-plugin/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-cli-plugin/OWNERS)**
- **[staging/src/k8s.io/sample-controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/sample-controller/OWNERS)**
- **[vendor/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/vendor/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""deads2k"",""lavalamp"",""liggitt"",""sttts""]} -->

MadhavJivrajani (Issue Creator) on (2023-01-02 16:43:07 UTC): /test pull-kubernetes-unit-go-canary

The TestWithVerificationWithoutCaCertOrThumbprint test will still fail.
See https://github.com/kubernetes/kubernetes/pull/114502#issuecomment-1369030189

k8s-ci-robot on (2023-01-02 17:36:47 UTC): @MadhavJivrajani: The following tests **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:

Test name | Commit | Details | Required | Rerun command
--- | --- | --- | --- | ---
pull-kubernetes-unit | d42ec1f891364a7b8e930e92e943dec9636d5a9c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114762/pull-kubernetes-unit/1609953125823680512) | true | `/test pull-kubernetes-unit`
pull-kubernetes-unit-go-canary | d42ec1f891364a7b8e930e92e943dec9636d5a9c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114762/pull-kubernetes-unit-go-canary/1609953453159747584) | true | `/test pull-kubernetes-unit-go-canary`
pull-kubernetes-verify | d42ec1f891364a7b8e930e92e943dec9636d5a9c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114762/pull-kubernetes-verify/1609953130936537088) | true | `/test pull-kubernetes-verify`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114762). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3AMadhavJivrajani). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->

liggitt (Assginee) on (2023-01-02 21:11:33 UTC): xref https://github.com/kubernetes/release/issues/2815

fedebongio on (2023-01-03 21:15:37 UTC): /triage accepted

"
1516506315,pull_request,closed,,e2e storage: define local PersistentVolume tests in deterministic order,"#### What type of PR is this?

/kind bug
/kind failing-test

#### What this PR does / why we need it:

Ginkgo relies on all workers defining all tests in exactly the same order. This wasn't guaranteed for these tests, with the result that some tests might have been executed more than once and others not at all when running in parallel.

This was noticed when some of these tests started to flake and then were reported both as failure and success, as if they had been retried.


#### Does this PR introduce a user-facing change?
```release-note
NONE
```

/cc @onsi @aojea ",pohly,2023-01-02 15:25:38+00:00,['aojea'],2023-01-05 17:45:15+00:00,2023-01-02 22:57:42+00:00,https://github.com/kubernetes/kubernetes/pull/114761,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('area/test', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('kind/failing-test', 'Categorizes issue or PR as related to a consistently or frequently failing test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1369034900, 'issue_id': 1516506315, 'author': 'k8s-ci-robot', 'body': ""@pohly: GitHub didn't allow me to request PR reviews from the following users: onsi.\n\nNote that only [kubernetes members](https://github.com/orgs/kubernetes/people) and repo collaborators can review this PR, and authors cannot review their own PRs.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114761):\n\n>#### What type of PR is this?\r\n>\r\n>/kind bug\r\n>/kind failing-test\r\n>\r\n>#### What this PR does / why we need it:\r\n>\r\n>Ginkgo relies on all workers defining all tests in exactly the same order. This wasn't guaranteed for these tests, with the result that some tests might have been executed more than once and others not at all when running in parallel.\r\n>\r\n>This was noticed when some of these tests started to flake and then were reported both as failure and success, as if they had been retried.\r\n>\r\n>\r\n>#### Does this PR introduce a user-facing change?\r\n>```release-note\r\n>NONE\r\n>```\r\n>\r\n>/cc @onsi @aojea \n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 2, 15, 25, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369034959, 'issue_id': 1516506315, 'author': 'k8s-ci-robot', 'body': '@pohly: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 2, 15, 25, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369054314, 'issue_id': 1516506315, 'author': 'onsi', 'body': ""this lgtm - once i fix this on ginkgo's end it will no longer be necessary.  i don't know if you'll want to revert it then or keep it?"", 'created_at': datetime.datetime(2023, 1, 2, 15, 58, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369105111, 'issue_id': 1516506315, 'author': 'aojea', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 2, 17, 18, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369105184, 'issue_id': 1516506315, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: f7e6a02acc605bd69ae04e3416476450c29821e8</details>', 'created_at': datetime.datetime(2023, 1, 2, 17, 18, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369105354, 'issue_id': 1516506315, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114761#issuecomment-1369105111"" title=""Approved"">aojea</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114761#"" title=""Author self-approved"">pohly</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[test/e2e/storage/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/OWNERS)~~ [aojea,pohly]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 2, 17, 18, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369140710, 'issue_id': 1516506315, 'author': 'pohly', 'body': ""> i don't know if you'll want to revert it then or keep it?\r\n\r\nI prefer to revert (simplifies the code)."", 'created_at': datetime.datetime(2023, 1, 2, 18, 37, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369149720, 'issue_id': 1516506315, 'author': 'onsi', 'body': ""> I prefer to revert (simplifies the code).\n\nagreed.  i'll ping you when the fix is in.  it will be a new patch release of Ginkgo."", 'created_at': datetime.datetime(2023, 1, 2, 19, 2, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369149808, 'issue_id': 1516506315, 'author': 'onsi', 'body': ""> I prefer to revert (simplifies the code).\n\nagreed.  i'll ping you when the fix is in.  it will be a new patch release of Ginkgo."", 'created_at': datetime.datetime(2023, 1, 2, 19, 2, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369222040, 'issue_id': 1516506315, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.\n\nThis bot retests PRs for certain kubernetes repos according to the following rules:\n- The PR does have any `do-not-merge/*` labels\n- The PR does not have the `needs-ok-to-test` label\n- The PR is mergeable (does not have a `needs-rebase` label)\n- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)\n- The PR is failing tests required for merge\n\nYou can:\n- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114761) for this PR\n- Prevent this bot from retesting with `/lgtm cancel` or `/hold`\n- Help make our tests less flaky by following our [Flaky Tests Guide][1]\n\n/retest\n\n[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md', 'created_at': datetime.datetime(2023, 1, 2, 21, 31, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372534158, 'issue_id': 1516506315, 'author': 'onsi', 'body': ""hey @pohly and @aojea - a fix for this is on Ginkgo master.  if you have time to pull it in and rerun the k8s integration suite i'd appreciate it.  i'm changing how spec order is computed and while I think I've covered my bases i want to make sure there aren't any weird edge cases i've missed and the k8s test suite is a good one to validate that!!"", 'created_at': datetime.datetime(2023, 1, 5, 17, 45, 15, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-02 15:25:41 UTC): @pohly: GitHub didn't allow me to request PR reviews from the following users: onsi.

Note that only [kubernetes members](https://github.com/orgs/kubernetes/people) and repo collaborators can review this PR, and authors cannot review their own PRs.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114761):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-02 15:25:46 UTC): @pohly: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

onsi on (2023-01-02 15:58:29 UTC): this lgtm - once i fix this on ginkgo's end it will no longer be necessary.  i don't know if you'll want to revert it then or keep it?

aojea (Assginee) on (2023-01-02 17:18:05 UTC): /lgtm
/approve

k8s-ci-robot on (2023-01-02 17:18:12 UTC): LGTM label has been added.  <details>Git tree hash: f7e6a02acc605bd69ae04e3416476450c29821e8</details>

k8s-ci-robot on (2023-01-02 17:18:32 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114761#issuecomment-1369105111"" title=""Approved"">aojea</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114761#"" title=""Author self-approved"">pohly</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/e2e/storage/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/OWNERS)~~ [aojea,pohly]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

pohly (Issue Creator) on (2023-01-02 18:37:01 UTC): I prefer to revert (simplifies the code).

onsi on (2023-01-02 19:02:48 UTC): agreed.  i'll ping you when the fix is in.  it will be a new patch release of Ginkgo.

onsi on (2023-01-02 19:02:56 UTC): agreed.  i'll ping you when the fix is in.  it will be a new patch release of Ginkgo.

k8s-triage-robot on (2023-01-02 21:31:42 UTC): The Kubernetes project has merge-blocking tests that are currently too flaky to consistently pass.

This bot retests PRs for certain kubernetes repos according to the following rules:
- The PR does have any `do-not-merge/*` labels
- The PR does not have the `needs-ok-to-test` label
- The PR is mergeable (does not have a `needs-rebase` label)
- The PR is approved (has `cncf-cla: yes`, `lgtm`, `approved` labels)
- The PR is failing tests required for merge

You can:
- Review the [full test history](https://prow.k8s.io/pr-history/?org=kubernetes&repo=kubernetes&pr=114761) for this PR
- Prevent this bot from retesting with `/lgtm cancel` or `/hold`
- Help make our tests less flaky by following our [Flaky Tests Guide][1]

/retest

[1]: https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md

onsi on (2023-01-05 17:45:15 UTC): hey @pohly and @aojea - a fix for this is on Ginkgo master.  if you have time to pull it in and rerun the k8s integration suite i'd appreciate it.  i'm changing how spec order is computed and while I think I've covered my bases i want to make sure there aren't any weird edge cases i've missed and the k8s test suite is a good one to validate that!!

"
1516414299,pull_request,closed,,kubelet/cm/containermap: Improving test coverage,"Signed-off-by: TommyStarK <thomasmilox@gmail.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

If applied this commit will increase the unit tests code coverage of `pkg/kubelet/cm/containermap`.

- Initial unit tests code coverage

<img width=""731"" alt=""Screenshot 2023-01-02 at 14 43 03"" src=""https://user-images.githubusercontent.com/9576370/210239461-d910b8c2-329b-401d-853a-faa21e08e087.png"">

- After changes

<img width=""730"" alt=""Screenshot 2023-01-02 at 14 42 16"" src=""https://user-images.githubusercontent.com/9576370/210239494-a000a267-8475-4b7c-b908-1ff33d442b16.png"">


#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",TommyStarK,2023-01-02 13:45:33+00:00,"['dims', 'mrunalp', 'derekwaynecarr', 'dchen1107', 'bart0sh']",2023-06-06 18:30:58+00:00,2023-06-06 18:18:24+00:00,https://github.com/kubernetes/kubernetes/pull/114760,"[('area/kubelet', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1368960039, 'issue_id': 1516414299, 'author': 'k8s-ci-robot', 'body': ""Hi @TommyStarK. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 2, 13, 45, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369021333, 'issue_id': 1516414299, 'author': 'bart0sh', 'body': '/ok-to-test', 'created_at': datetime.datetime(2023, 1, 2, 15, 8, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369024586, 'issue_id': 1516414299, 'author': 'bart0sh', 'body': '/priority important-longterm\r\n/triage accepted', 'created_at': datetime.datetime(2023, 1, 2, 15, 12, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369024755, 'issue_id': 1516414299, 'author': 'bart0sh', 'body': '/assign', 'created_at': datetime.datetime(2023, 1, 2, 15, 12, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369095635, 'issue_id': 1516414299, 'author': 'TommyStarK', 'body': '/test pull-kubernetes-e2e-gce', 'created_at': datetime.datetime(2023, 1, 2, 17, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369453693, 'issue_id': 1516414299, 'author': 'bart0sh', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 3, 7, 13, 51, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369453740, 'issue_id': 1516414299, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: d068fbbcb583f30328939cdb1f0a995d590a20ff</details>', 'created_at': datetime.datetime(2023, 1, 3, 7, 13, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369454531, 'issue_id': 1516414299, 'author': 'bart0sh', 'body': '/assign @mrunalp @derekwaynecarr @dchen1107', 'created_at': datetime.datetime(2023, 1, 3, 7, 15, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1457896730, 'issue_id': 1516414299, 'author': 'TommyStarK', 'body': '@SergeyKanzhelev I tried to contact kubelet approvers to move on on those PRs and avoid the lifecycle/stale label', 'created_at': datetime.datetime(2023, 3, 7, 10, 9, 19, tzinfo=datetime.timezone.utc)}, {'comment_id': 1463589759, 'issue_id': 1516414299, 'author': 'TommyStarK', 'body': '@derekwaynecarr I know you are super busy, another small coverage improvement', 'created_at': datetime.datetime(2023, 3, 10, 10, 23, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1579110660, 'issue_id': 1516414299, 'author': 'dims', 'body': '/approve\r\n/lgtm\r\n\r\ncomfortable landing this test-ONLY change that improves coverage by using `cm.Visit`', 'created_at': datetime.datetime(2023, 6, 6, 16, 44, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1579111095, 'issue_id': 1516414299, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114760#issuecomment-1579110660"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114760#"" title=""Author self-approved"">TommyStarK</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/kubelet/cm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/cm/OWNERS)~~ [dims]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 6, 6, 16, 44, 35, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-02 13:45:42 UTC): Hi @TommyStarK. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

bart0sh (Assginee) on (2023-01-02 15:08:52 UTC): /ok-to-test

bart0sh (Assginee) on (2023-01-02 15:12:12 UTC): /priority important-longterm
/triage accepted

bart0sh (Assginee) on (2023-01-02 15:12:23 UTC): /assign

TommyStarK (Issue Creator) on (2023-01-02 17:05:00 UTC): /test pull-kubernetes-e2e-gce

bart0sh (Assginee) on (2023-01-03 07:13:51 UTC): /lgtm

k8s-ci-robot on (2023-01-03 07:13:56 UTC): LGTM label has been added.  <details>Git tree hash: d068fbbcb583f30328939cdb1f0a995d590a20ff</details>

bart0sh (Assginee) on (2023-01-03 07:15:25 UTC): /assign @mrunalp @derekwaynecarr @dchen1107

TommyStarK (Issue Creator) on (2023-03-07 10:09:19 UTC): @SergeyKanzhelev I tried to contact kubelet approvers to move on on those PRs and avoid the lifecycle/stale label

TommyStarK (Issue Creator) on (2023-03-10 10:23:03 UTC): @derekwaynecarr I know you are super busy, another small coverage improvement

dims (Assginee) on (2023-06-06 16:44:14 UTC): /approve
/lgtm

comfortable landing this test-ONLY change that improves coverage by using `cm.Visit`

k8s-ci-robot on (2023-06-06 16:44:35 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114760#issuecomment-1579110660"" title=""LGTM"">dims</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114760#"" title=""Author self-approved"">TommyStarK</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/kubelet/cm/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/cm/OWNERS)~~ [dims]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1516377891,pull_request,closed,,chore: add k8s node-role.kubernetes.io/control-plane taint,"`node-role.kubernetes.io/master` has been deprecated from 1.20, and replaced by `node-role.kubernetes.io/control-plane`.

https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.20.md
<img width=""1055"" alt=""image"" src=""https://user-images.githubusercontent.com/76980726/210051749-5a7ef27f-9edf-4ed9-8840-16be3dec7da7.png"">

/kind cleanup",my-git9,2023-01-02 13:05:39+00:00,"['endocrimes', 'KnVerey', 'matthyx', 'kinzhi']",2023-02-01 05:01:19+00:00,2023-02-01 05:01:17+00:00,https://github.com/kubernetes/kubernetes/pull/114759,"[('area/test', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('priority/important-longterm', 'Important over the long term, but may not be staffed and/or may need multiple releases to complete.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1368930331, 'issue_id': 1516377891, 'author': 'my-git9', 'body': '/release-note-none', 'created_at': datetime.datetime(2023, 1, 2, 13, 5, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369182656, 'issue_id': 1516377891, 'author': 'matthyx', 'body': '/triage accepted\r\n/priority important-longterm\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 2, 20, 13, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369182719, 'issue_id': 1516377891, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: e3620e6a1e33eb7ceedc25bb0d414bcc5f6e412a</details>', 'created_at': datetime.datetime(2023, 1, 2, 20, 14, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369314066, 'issue_id': 1516377891, 'author': 'pacoxu', 'body': '/assign @endocrimes @KnVerey', 'created_at': datetime.datetime(2023, 1, 3, 1, 38, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370165067, 'issue_id': 1516377891, 'author': 'KnVerey', 'body': '/approve for SIG CLI', 'created_at': datetime.datetime(2023, 1, 3, 19, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370199358, 'issue_id': 1516377891, 'author': 'endocrimes', 'body': ""/hold\r\n/approve\r\n\r\nwe don't run these tests in kubernetes CI, so cc @fromanirh and @swatisehgal (as it does run in RH CI) for a final confirmation. Otherwise this lgtm."", 'created_at': datetime.datetime(2023, 1, 3, 20, 34, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370199702, 'issue_id': 1516377891, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114759#issuecomment-1370199358"" title=""Approved"">endocrimes</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114759#issuecomment-1370165067"" title=""Approved"">KnVerey</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114759#"" title=""Author self-approved"">my-git9</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/printers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/printers/OWNERS)~~ [KnVerey]\n- ~~[test/e2e_node/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e_node/OWNERS)~~ [endocrimes]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 3, 20, 34, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370534625, 'issue_id': 1516377891, 'author': 'pacoxu', 'body': 'For kubeadm, the old taint `node-role.kubernetes.io/master` is not applied any more since v1.25, and we removed the toleration in v1.26.\r\n\r\n> Kubeadm: removed the toleration for the node-role.kubernetes.io/master taint from the CoreDNS deployment of kubeadm. With the 1.25 release of kubeadm the taint node-role.kubernetes.io/master is no longer applied to control plane nodes and the toleration for it can be removed with the release of 1.26. You can also perform the same toleration removal from your own addon manifests. (https://github.com/kubernetes/kubernetes/pull/112008', 'created_at': datetime.datetime(2023, 1, 4, 6, 31, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1411386407, 'issue_id': 1516377891, 'author': 'kinzhi', 'body': '/hold cancel\r\n/lgtm\r\n/retest', 'created_at': datetime.datetime(2023, 2, 1, 2, 59, 14, tzinfo=datetime.timezone.utc)}]","my-git9 (Issue Creator) on (2023-01-02 13:05:59 UTC): /release-note-none

matthyx (Assginee) on (2023-01-02 20:13:55 UTC): /triage accepted
/priority important-longterm
/lgtm

k8s-ci-robot on (2023-01-02 20:14:01 UTC): LGTM label has been added.  <details>Git tree hash: e3620e6a1e33eb7ceedc25bb0d414bcc5f6e412a</details>

pacoxu on (2023-01-03 01:38:04 UTC): /assign @endocrimes @KnVerey

KnVerey (Assginee) on (2023-01-03 19:52:00 UTC): /approve for SIG CLI

endocrimes (Assginee) on (2023-01-03 20:34:06 UTC): /hold
/approve

we don't run these tests in kubernetes CI, so cc @fromanirh and @swatisehgal (as it does run in RH CI) for a final confirmation. Otherwise this lgtm.

k8s-ci-robot on (2023-01-03 20:34:33 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114759#issuecomment-1370199358"" title=""Approved"">endocrimes</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114759#issuecomment-1370165067"" title=""Approved"">KnVerey</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114759#"" title=""Author self-approved"">my-git9</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/printers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/printers/OWNERS)~~ [KnVerey]
- ~~[test/e2e_node/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e_node/OWNERS)~~ [endocrimes]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

pacoxu on (2023-01-04 06:31:11 UTC): For kubeadm, the old taint `node-role.kubernetes.io/master` is not applied any more since v1.25, and we removed the toleration in v1.26.

kinzhi (Assginee) on (2023-02-01 02:59:14 UTC): /hold cancel
/lgtm
/retest

"
1515864534,pull_request,closed,,Drop unused Endpoints-tracking code from pkg/proxy/,"#### What type of PR is this?
/kind cleanup
/sig network
/priority backlog

#### What this PR does / why we need it:
As with #114749, kube-proxy no longer supports backends that use Endpoints rather than EndpointSlice, but we still have some of the associated code.

Porting the last-change-time test to EndpointSlice turned up an apparent bug in the EndpointSlice last-change-time tracking; it was not merging add+delete / update+delete in the same way as the Endpoints code, and without fixing that, it didn't pass the unit test.
/cc @robscott 

The end result of this is somewhat silly (it preserves the distinction between the mostly-Endpoints-specific `EndpointChangeTracker` and the EndpointSlice-specific `EndpointSliceCache`, and the distinction between their unit tests, despite the fact that ECT is now mostly gutted). But that can be cleaned up more in further PRs.

#### Does this PR introduce a user-facing change?
```release-note
NONE
```",danwinship,2023-01-01 22:06:43+00:00,['robscott'],2023-01-05 15:15:12+00:00,2023-01-03 18:35:35+00:00,https://github.com/kubernetes/kubernetes/pull/114757,"[('priority/backlog', 'Higher priority than priority/awaiting-more-evidence.'), ('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XXL', 'Denotes a PR that changes 1000+ lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1368548927, 'issue_id': 1515864534, 'author': 'k8s-ci-robot', 'body': '@danwinship: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 1, 22, 6, 50, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368549054, 'issue_id': 1515864534, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114757#"" title=""Author self-approved"">danwinship</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/OWNERS)~~ [danwinship]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 1, 22, 7, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370036232, 'issue_id': 1515864534, 'author': 'robscott', 'body': 'Thanks @danwinship!\r\n\r\n/lgtm', 'created_at': datetime.datetime(2023, 1, 3, 17, 25, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370036340, 'issue_id': 1515864534, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 7278d07ade935f1af952c889c2af6cbd0fcc1e07</details>', 'created_at': datetime.datetime(2023, 1, 3, 17, 25, 47, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-01 22:06:50 UTC): @danwinship: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-01 22:07:18 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114757#"" title=""Author self-approved"">danwinship</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/OWNERS)~~ [danwinship]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

robscott (Assginee) on (2023-01-03 17:25:41 UTC): Thanks @danwinship!

/lgtm

k8s-ci-robot on (2023-01-03 17:25:47 UTC): LGTM label has been added.  <details>Git tree hash: 7278d07ade935f1af952c889c2af6cbd0fcc1e07</details>

"
1515641511,pull_request,closed,,kubectl api-resources --help command,"The command help content resulted with a grammar error. In options, find explanation for the --categories=[]:

#### What type of PR is this?
/kind cleanup
/kind documentation

#### What this PR does / why we need it:
The command `kubectl api-resources --help` listed a grammar mistake.

#### Special notes for your reviewer:
This is not a fix, I found something off in the help content, so pushing this.

#### Does this PR introduce a user-facing change?
""NONE""
",VishnuAnand,2023-01-01 15:25:57+00:00,[],2023-05-31 17:03:35+00:00,2023-05-31 17:03:33+00:00,https://github.com/kubernetes/kubernetes/pull/114755,"[('kind/documentation', 'Categorizes issue or PR as related to documentation.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('area/kubectl', None), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('do-not-merge/release-note-label-needed', ""Indicates that a PR should not merge because it's missing one of the release note labels.""), ('lifecycle/rotten', 'Denotes an issue or PR that has aged beyond stale and will be auto-closed.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1368468835, 'issue_id': 1515641511, 'author': 'k8s-ci-robot', 'body': '@VishnuAnand: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 1, 15, 25, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368468846, 'issue_id': 1515641511, 'author': 'linux-foundation-easycla[bot]', 'body': '<a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: VishnuAnand / name: Vishnu Anand  (6a107fce3aee5ff5dda464b9f4a49323da26b5b1)</li></ul>', 'created_at': datetime.datetime(2023, 1, 1, 15, 26, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368468857, 'issue_id': 1515641511, 'author': 'k8s-ci-robot', 'body': '@VishnuAnand: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 1, 15, 26, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368468858, 'issue_id': 1515641511, 'author': 'k8s-ci-robot', 'body': ""Welcome @VishnuAnand! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:"", 'created_at': datetime.datetime(2023, 1, 1, 15, 26, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368468862, 'issue_id': 1515641511, 'author': 'k8s-ci-robot', 'body': ""Hi @VishnuAnand. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 1, 15, 26, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368468986, 'issue_id': 1515641511, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114755#"" title=""Author self-approved"">VishnuAnand</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign knverey for approval by writing `/assign @knverey` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""knverey""]} -->', 'created_at': datetime.datetime(2023, 1, 1, 15, 26, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1493035853, 'issue_id': 1515641511, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 4, 1, 16, 14, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1529937692, 'issue_id': 1515641511, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle rotten\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 5, 1, 16, 47, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1570596858, 'issue_id': 1515641511, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Reopen this PR with `/reopen`\n- Mark this PR as fresh with `/remove-lifecycle rotten`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/close\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 5, 31, 17, 3, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1570596987, 'issue_id': 1515641511, 'author': 'k8s-ci-robot', 'body': '@k8s-triage-robot: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114755#issuecomment-1570596858):\n\n>The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.\n>\n>This bot triages PRs according to the following rules:\n>- After 90d of inactivity, `lifecycle/stale` is applied\n>- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n>- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n>\n>You can:\n>- Reopen this PR with `/reopen`\n>- Mark this PR as fresh with `/remove-lifecycle rotten`\n>- Offer to help out with [Issue Triage][1]\n>\n>Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n>\n>/close\n>\n>[1]: https://www.kubernetes.dev/docs/guide/issue-triage/\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 5, 31, 17, 3, 34, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2023-01-01 15:25:58 UTC): @VishnuAnand: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

linux-foundation-easycla[bot] on (2023-01-01 15:26:01 UTC): <a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: VishnuAnand / name: Vishnu Anand  (6a107fce3aee5ff5dda464b9f4a49323da26b5b1)</li></ul>

k8s-ci-robot on (2023-01-01 15:26:04 UTC): @VishnuAnand: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-01 15:26:04 UTC): Welcome @VishnuAnand! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:

k8s-ci-robot on (2023-01-01 15:26:05 UTC): Hi @VishnuAnand. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2023-01-01 15:26:59 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114755#"" title=""Author self-approved"">VishnuAnand</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign knverey for approval by writing `/assign @knverey` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""knverey""]} -->

k8s-triage-robot on (2023-04-01 16:14:42 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2023-05-01 16:47:52 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle rotten

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-triage-robot on (2023-05-31 17:03:28 UTC): The Kubernetes project currently lacks enough active contributors to adequately respond to all issues and PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Reopen this PR with `/reopen`
- Mark this PR as fresh with `/remove-lifecycle rotten`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/close

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

k8s-ci-robot on (2023-05-31 17:03:34 UTC): @k8s-triage-robot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114755#issuecomment-1570596858):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1515596911,pull_request,closed,,CHANGELOG-1.26: move OpenStack in-tree provider removal to urgent notes,"#### What type of PR is this?

/kind documentation

#### What this PR does / why we need it:

OpenStack in-tree cloud provider removal is a big change for OpenStack users. Right now, the release note for this change is in the Cleanup section at the end of the changelog, making it very easy to miss it. Not migrating to the external CCM/CSI before upgrading to Kubernetes 1.26 can lead to a broken cluster, so I believe it's critical to highlight this change as much as we can.

That being said, this PR moves this release note from the Cleanup section to the Urgent Upgrade Notes section.

Slack discussion: https://kubernetes.slack.com/archives/C2C40FMNF/p1672251871666299

#### Does this PR introduce a user-facing change?
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:
```docs

```

cc @dims @kubernetes/release-engineering ",xmudrii,2023-01-01 14:12:16+00:00,['cpanato'],2023-01-03 12:46:55+00:00,2023-01-02 18:25:42+00:00,https://github.com/kubernetes/kubernetes/pull/114754,"[('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('kind/documentation', 'Categorizes issue or PR as related to documentation.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('area/release-eng', 'Issues or PRs related to the Release Engineering subproject'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1368455504, 'issue_id': 1515596911, 'author': 'xmudrii', 'body': '/triage accepted\r\n/priority important-soon', 'created_at': datetime.datetime(2023, 1, 1, 14, 16, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369048437, 'issue_id': 1515596911, 'author': 'cpanato', 'body': '/test pull-kubernetes-conformance-kind-ga-only-parallel', 'created_at': datetime.datetime(2023, 1, 2, 15, 47, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369048623, 'issue_id': 1515596911, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 3e9853ce86cf34e9d3d2c06905a8c7a88662af5f</details>', 'created_at': datetime.datetime(2023, 1, 2, 15, 48, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369048758, 'issue_id': 1515596911, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114754#pullrequestreview-1233871914"" title=""LGTM"">cpanato</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114754#"" title=""Author self-approved"">xmudrii</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[CHANGELOG/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/OWNERS)~~ [cpanato,xmudrii]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 2, 15, 48, 22, tzinfo=datetime.timezone.utc)}]","xmudrii (Issue Creator) on (2023-01-01 14:16:56 UTC): /triage accepted
/priority important-soon

cpanato (Assginee) on (2023-01-02 15:47:48 UTC): /test pull-kubernetes-conformance-kind-ga-only-parallel

k8s-ci-robot on (2023-01-02 15:48:08 UTC): LGTM label has been added.  <details>Git tree hash: 3e9853ce86cf34e9d3d2c06905a8c7a88662af5f</details>

k8s-ci-robot on (2023-01-02 15:48:22 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114754#pullrequestreview-1233871914"" title=""LGTM"">cpanato</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114754#"" title=""Author self-approved"">xmudrii</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[CHANGELOG/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/OWNERS)~~ [cpanato,xmudrii]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1515176611,pull_request,closed,,set.string to set.sets,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note

```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",DeeptanshuDas,2022-12-31 18:14:27+00:00,[],2023-04-03 07:45:19+00:00,2023-04-03 07:45:17+00:00,https://github.com/kubernetes/kubernetes/pull/114753,"[('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('do-not-merge/release-note-label-needed', ""Indicates that a PR should not merge because it's missing one of the release note labels.""), ('lifecycle/stale', 'Denotes an issue or PR has remained open with no activity and has become stale.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.'), ('do-not-merge/needs-kind', 'Indicates a PR lacks a `kind/foo` label and requires one.')]","[{'comment_id': 1368261078, 'issue_id': 1515176611, 'author': 'k8s-ci-robot', 'body': '@DeeptanshuDas: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 31, 18, 14, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368261084, 'issue_id': 1515176611, 'author': 'linux-foundation-easycla[bot]', 'body': '<a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: DeeptanshuDas / name: Deeptanshu Das  (00a74738eecaca39edae787e8bd3acfb1d4114fa)</li></ul>', 'created_at': datetime.datetime(2022, 12, 31, 18, 14, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368261096, 'issue_id': 1515176611, 'author': 'k8s-ci-robot', 'body': '@DeeptanshuDas: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 31, 18, 14, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368261097, 'issue_id': 1515176611, 'author': 'k8s-ci-robot', 'body': ""Hi @DeeptanshuDas. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2022, 12, 31, 18, 14, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368261158, 'issue_id': 1515176611, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114753#"" title=""Author self-approved"">DeeptanshuDas</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign alculquicondor for approval by writing `/assign @alculquicondor` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""alculquicondor""]} -->', 'created_at': datetime.datetime(2022, 12, 31, 18, 15, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1493821600, 'issue_id': 1515176611, 'author': 'k8s-triage-robot', 'body': 'The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.\n\nThis bot triages PRs according to the following rules:\n- After 90d of inactivity, `lifecycle/stale` is applied\n- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied\n- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed\n\nYou can:\n- Mark this PR as fresh with `/remove-lifecycle stale`\n- Close this PR with `/close`\n- Offer to help out with [Issue Triage][1]\n\nPlease send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).\n\n/lifecycle stale\n\n[1]: https://www.kubernetes.dev/docs/guide/issue-triage/', 'created_at': datetime.datetime(2023, 4, 3, 7, 31, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1493836745, 'issue_id': 1515176611, 'author': 'kerthcet', 'body': ""Covered by https://github.com/kubernetes/kubernetes/pull/116940, so let's close this.\r\n/close"", 'created_at': datetime.datetime(2023, 4, 3, 7, 45, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1493836872, 'issue_id': 1515176611, 'author': 'k8s-ci-robot', 'body': ""@kerthcet: Closed this PR.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114753#issuecomment-1493836745):\n\n>Covered by https://github.com/kubernetes/kubernetes/pull/116940, so let's close this.\r\n>/close\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 4, 3, 7, 45, 18, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2022-12-31 18:14:28 UTC): @DeeptanshuDas: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

linux-foundation-easycla[bot] on (2022-12-31 18:14:30 UTC): <a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: DeeptanshuDas / name: Deeptanshu Das  (00a74738eecaca39edae787e8bd3acfb1d4114fa)</li></ul>

k8s-ci-robot on (2022-12-31 18:14:35 UTC): @DeeptanshuDas: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2022-12-31 18:14:35 UTC): Hi @DeeptanshuDas. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2022-12-31 18:15:05 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114753#"" title=""Author self-approved"">DeeptanshuDas</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign alculquicondor for approval by writing `/assign @alculquicondor` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""alculquicondor""]} -->

k8s-triage-robot on (2023-04-03 07:31:45 UTC): The Kubernetes project currently lacks enough contributors to adequately respond to all PRs.

This bot triages PRs according to the following rules:
- After 90d of inactivity, `lifecycle/stale` is applied
- After 30d of inactivity since `lifecycle/stale` was applied, `lifecycle/rotten` is applied
- After 30d of inactivity since `lifecycle/rotten` was applied, the PR is closed

You can:
- Mark this PR as fresh with `/remove-lifecycle stale`
- Close this PR with `/close`
- Offer to help out with [Issue Triage][1]

Please send feedback to sig-contributor-experience at [kubernetes/community](https://github.com/kubernetes/community).

/lifecycle stale

[1]: https://www.kubernetes.dev/docs/guide/issue-triage/

kerthcet on (2023-04-03 07:45:13 UTC): Covered by https://github.com/kubernetes/kubernetes/pull/116940, so let's close this.
/close

k8s-ci-robot on (2023-04-03 07:45:18 UTC): @kerthcet: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114753#issuecomment-1493836745):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

"
1515175219,pull_request,closed,,set.string to set.sets,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note

```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",DeeptanshuDas,2022-12-31 18:07:20+00:00,[],2022-12-31 18:09:18+00:00,2022-12-31 18:09:18+00:00,https://github.com/kubernetes/kubernetes/pull/114752,"[('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('size/S', 'Denotes a PR that changes 10-29 lines, ignoring generated files.'), ('cncf-cla: no', ""Indicates the PR's author has not signed the CNCF CLA.""), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('do-not-merge/release-note-label-needed', ""Indicates that a PR should not merge because it's missing one of the release note labels.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.'), ('do-not-merge/needs-kind', 'Indicates a PR lacks a `kind/foo` label and requires one.')]","[{'comment_id': 1368260259, 'issue_id': 1515175219, 'author': 'k8s-ci-robot', 'body': '@DeeptanshuDas: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 31, 18, 7, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368260264, 'issue_id': 1515175219, 'author': 'linux-foundation-easycla[bot]', 'body': '<a href=""https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/18706487/20580498/114752/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg"" alt=""CLA Not Signed"" align=""left"" height=""28"" width=""328""></a><br/><br /><ul><li><a href=\'https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/18706487/20580498/114752/#/?version=2\' target=\'_blank\'>:x:</a> - login: @DeeptanshuDas / name: Deeptanshu Das . The commit (00a74738eecaca39edae787e8bd3acfb1d4114fa) is not authorized under a signed CLA. <a href=\'https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/18706487/20580498/114752/#/?version=2\' target=\'_blank\'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href=\'https://jira.linuxfoundation.org/servicedesk/customer/portal/4\' target=\'_blank\'>please submit a support request ticket</a>.</li></ul>', 'created_at': datetime.datetime(2022, 12, 31, 18, 7, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368260273, 'issue_id': 1515175219, 'author': 'k8s-ci-robot', 'body': ""Welcome @DeeptanshuDas! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:"", 'created_at': datetime.datetime(2022, 12, 31, 18, 7, 28, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368260276, 'issue_id': 1515175219, 'author': 'k8s-ci-robot', 'body': '@DeeptanshuDas: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 31, 18, 7, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368260277, 'issue_id': 1515175219, 'author': 'k8s-ci-robot', 'body': ""Hi @DeeptanshuDas. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2022, 12, 31, 18, 7, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368260340, 'issue_id': 1515175219, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114752#"" title=""Author self-approved"">DeeptanshuDas</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign huang-wei for approval by writing `/assign @huang-wei` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""huang-wei""]} -->', 'created_at': datetime.datetime(2022, 12, 31, 18, 8, 1, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2022-12-31 18:07:22 UTC): @DeeptanshuDas: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

linux-foundation-easycla[bot] on (2022-12-31 18:07:24 UTC): <a href=""https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/18706487/20580498/114752/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg"" alt=""CLA Not Signed"" align=""left"" height=""28"" width=""328""></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/18706487/20580498/114752/#/?version=2' target='_blank'>:x:</a> - login: @DeeptanshuDas / name: Deeptanshu Das . The commit (00a74738eecaca39edae787e8bd3acfb1d4114fa) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/18706487/20580498/114752/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>

k8s-ci-robot on (2022-12-31 18:07:28 UTC): Welcome @DeeptanshuDas! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:

k8s-ci-robot on (2022-12-31 18:07:29 UTC): @DeeptanshuDas: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2022-12-31 18:07:29 UTC): Hi @DeeptanshuDas. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2022-12-31 18:08:01 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114752#"" title=""Author self-approved"">DeeptanshuDas</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign huang-wei for approval by writing `/assign @huang-wei` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[pkg/scheduler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""huang-wei""]} -->

"
1515112570,pull_request,closed,,refactor current ipallocator,"- rename files to match the allocator backend (preparation for KEP 1880)
- use t.Run for tests and cover large ranges
- add benchmarks
- check that the bitmap ip allocator satisfies the interface

```
goos: linux
goarch: amd64

pkg: k8s.io/kubernetes/pkg/registry/core/service/ipallocator cpu: Intel(R) Xeon(R) CPU E5-2678 v3 @ 2.50GHz
BenchmarkAllocateNextIPv4Size1048574
BenchmarkAllocateNextIPv4Size1048574-24    	 1517683
7373 ns/op	     135 B/op	       8 allocs/op
BenchmarkAllocateNextIPv6Size65535
BenchmarkAllocateNextIPv6Size65535-24      	 5607438
193.9 ns/op	      18 B/op	       2 allocs/op
PASS
```

/kind cleanup
```release-note
NONE
```

/sig network",aojea,2022-12-31 12:49:58+00:00,"['BenTheElder', 'thockin', 'wojtek-t']",2023-01-02 22:57:33+00:00,2023-01-02 22:57:31+00:00,https://github.com/kubernetes/kubernetes/pull/114750,"[('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1368211734, 'issue_id': 1515112570, 'author': 'k8s-ci-robot', 'body': '@aojea: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 31, 12, 50, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368211746, 'issue_id': 1515112570, 'author': 'aojea', 'body': '/assign @thockin @BenTheElder', 'created_at': datetime.datetime(2022, 12, 31, 12, 50, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368781370, 'issue_id': 1515112570, 'author': 'aojea', 'body': '/assign @wojtek-t', 'created_at': datetime.datetime(2023, 1, 2, 9, 39, 32, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369169986, 'issue_id': 1515112570, 'author': 'wojtek-t', 'body': 'Reviewing with w=1 option made that easier. This is useful cleanup - thanks!\r\n\r\n/lgtm\r\n/approve', 'created_at': datetime.datetime(2023, 1, 2, 19, 48, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369170002, 'issue_id': 1515112570, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: ed121897b5b7cda3e76e29a34207813968fed0d9</details>', 'created_at': datetime.datetime(2023, 1, 2, 19, 48, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369170092, 'issue_id': 1515112570, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114750#"" title=""Author self-approved"">aojea</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114750#issuecomment-1369169986"" title=""Approved"">wojtek-t</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/registry/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/registry/OWNERS)~~ [wojtek-t]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 2, 19, 48, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369232442, 'issue_id': 1515112570, 'author': 'aojea', 'body': '> Kubernetes e2e suite: [It] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]\xa0expand_less\r\n\r\n/test pull-kubernetes-conformance-kind-ga-only-parallel', 'created_at': datetime.datetime(2023, 1, 2, 21, 55, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369239472, 'issue_id': 1515112570, 'author': 'aojea', 'body': '> > Kubernetes e2e suite: [It] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]\xa0expand_less\r\n> \r\n> /test pull-kubernetes-conformance-kind-ga-only-parallel\r\n\r\nthe resource_quota controller start to process the service after the namespace start to be deleted\r\n\r\n```\r\n2023-01-02T20:12:21.568440949Z stderr F I0102 20:12:21.568252       1 namespaced_resources_deleter.go:502] namespace controller - deleteAllContent - namespace: resourcequota-7258\r\n2023-01-02T20:12:21.591862049Z stderr F I0102 20:12:21.591682       1 tokens_controller.go:244] syncServiceAccount(resourcequota-7258/default), service account deleted, removing tokens\r\n2023-01-02T20:12:21.591928259Z stderr F I0102 20:12:21.591752       1 resource_quota_monitor.go:355] QuotaMonitor process object: /v1, Resource=serviceaccounts, namespace resourcequota-7258, name default, uid d6a5cb42-34d1-4b4b-999a-fab53680aab1, event type delete\r\n```\r\nhttps://storage.googleapis.com/kubernetes-jenkins/pr-logs/pull/114750/pull-kubernetes-conformance-kind-ga-only-parallel/1610000352151605248/artifacts/kind-control-plane/pods/kube-system_kube-controller-manager-kind-control-plane_bc85953f20e7d251c62d5da90799c0c3/kube-controller-manager/0.log', 'created_at': datetime.datetime(2023, 1, 2, 22, 7, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369246702, 'issue_id': 1515112570, 'author': 'aojea', 'body': ""> > > Kubernetes e2e suite: [It] [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]\xa0expand_less\r\n> > \r\n> > \r\n> > /test pull-kubernetes-conformance-kind-ga-only-parallel\r\n> \r\n> the resource_quota controller start to process the service after the namespace start to be deleted\r\n> \r\n> ```\r\n> 2023-01-02T20:12:21.568440949Z stderr F I0102 20:12:21.568252       1 namespaced_resources_deleter.go:502] namespace controller - deleteAllContent - namespace: resourcequota-7258\r\n> 2023-01-02T20:12:21.591862049Z stderr F I0102 20:12:21.591682       1 tokens_controller.go:244] syncServiceAccount(resourcequota-7258/default), service account deleted, removing tokens\r\n> 2023-01-02T20:12:21.591928259Z stderr F I0102 20:12:21.591752       1 resource_quota_monitor.go:355] QuotaMonitor process object: /v1, Resource=serviceaccounts, namespace resourcequota-7258, name default, uid d6a5cb42-34d1-4b4b-999a-fab53680aab1, event type delete\r\n> ```\r\n> \r\n> https://storage.googleapis.com/kubernetes-jenkins/pr-logs/pull/114750/pull-kubernetes-conformance-kind-ga-only-parallel/1610000352151605248/artifacts/kind-control-plane/pods/kube-system_kube-controller-manager-kind-control-plane_bc85953f20e7d251c62d5da90799c0c3/kube-controller-manager/0.log\r\n\r\nit doesn't seem happening often though\r\n\r\nhttps://storage.googleapis.com/k8s-triage/index.html?pr=1&test=ResourceQuota&xjob=-cri-containerd-e2e-cos-"", 'created_at': datetime.datetime(2023, 1, 2, 22, 20, 28, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2022-12-31 12:50:05 UTC): @aojea: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

aojea (Issue Creator) on (2022-12-31 12:50:11 UTC): /assign @thockin @BenTheElder

aojea (Issue Creator) on (2023-01-02 09:39:32 UTC): /assign @wojtek-t

wojtek-t (Assginee) on (2023-01-02 19:48:29 UTC): Reviewing with w=1 option made that easier. This is useful cleanup - thanks!

/lgtm
/approve

k8s-ci-robot on (2023-01-02 19:48:34 UTC): LGTM label has been added.  <details>Git tree hash: ed121897b5b7cda3e76e29a34207813968fed0d9</details>

k8s-ci-robot on (2023-01-02 19:48:52 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114750#"" title=""Author self-approved"">aojea</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114750#issuecomment-1369169986"" title=""Approved"">wojtek-t</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/registry/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/registry/OWNERS)~~ [wojtek-t]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

aojea (Issue Creator) on (2023-01-02 21:55:06 UTC): /test pull-kubernetes-conformance-kind-ga-only-parallel

aojea (Issue Creator) on (2023-01-02 22:07:41 UTC): the resource_quota controller start to process the service after the namespace start to be deleted

```
2023-01-02T20:12:21.568440949Z stderr F I0102 20:12:21.568252       1 namespaced_resources_deleter.go:502] namespace controller - deleteAllContent - namespace: resourcequota-7258
2023-01-02T20:12:21.591862049Z stderr F I0102 20:12:21.591682       1 tokens_controller.go:244] syncServiceAccount(resourcequota-7258/default), service account deleted, removing tokens
2023-01-02T20:12:21.591928259Z stderr F I0102 20:12:21.591752       1 resource_quota_monitor.go:355] QuotaMonitor process object: /v1, Resource=serviceaccounts, namespace resourcequota-7258, name default, uid d6a5cb42-34d1-4b4b-999a-fab53680aab1, event type delete
```
https://storage.googleapis.com/kubernetes-jenkins/pr-logs/pull/114750/pull-kubernetes-conformance-kind-ga-only-parallel/1610000352151605248/artifacts/kind-control-plane/pods/kube-system_kube-controller-manager-kind-control-plane_bc85953f20e7d251c62d5da90799c0c3/kube-controller-manager/0.log

aojea (Issue Creator) on (2023-01-02 22:20:28 UTC): it doesn't seem happening often though

https://storage.googleapis.com/k8s-triage/index.html?pr=1&test=ResourceQuota&xjob=-cri-containerd-e2e-cos-

"
1514965699,pull_request,closed,,Drop unused EndpointsHandler / EndpointsConfig from pkg/proxy/config,"#### What type of PR is this?
/kind cleanup

#### What this PR does / why we need it:
kube-proxy no longer supports backends that use Endpoints rather than EndpointSlice, but we still have some of the associated code.

In the process of removing this, I discovered that we were unit testing EndpointsHandler and EndpointsConfig, but _not_ testing EndpointSliceHandler / EndpointSliceConfig, so I fixed that too.

#### Does this PR introduce a user-facing change?
```release-note
NONE
```

/sig network
/priority backlog
/cc @robscott",danwinship,2022-12-31 02:43:47+00:00,"['aojea', 'wojtek-t']",2023-01-05 15:14:34+00:00,2023-01-05 11:58:10+00:00,https://github.com/kubernetes/kubernetes/pull/114749,"[('priority/backlog', 'Higher priority than priority/awaiting-more-evidence.'), ('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('sig/scalability', 'Categorizes an issue or PR as relevant to SIG Scalability.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1368152350, 'issue_id': 1514965699, 'author': 'k8s-ci-robot', 'body': '@danwinship: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 31, 2, 43, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368527512, 'issue_id': 1514965699, 'author': 'aojea', 'body': '> Run ./hack/update-gofmt.sh}\r\n\r\nthe failure is legit', 'created_at': datetime.datetime(2023, 1, 1, 20, 18, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368553203, 'issue_id': 1514965699, 'author': 'aojea', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 1, 22, 26, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368553216, 'issue_id': 1514965699, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 666ffcb06ddae9ccba390011583d3cadc6f18ef8</details>', 'created_at': datetime.datetime(2023, 1, 1, 22, 26, 58, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369806812, 'issue_id': 1514965699, 'author': 'danwinship', 'body': '/assign @wojtek-t \r\nthis one has a trivial kubemark change too', 'created_at': datetime.datetime(2023, 1, 3, 14, 5, 48, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370027522, 'issue_id': 1514965699, 'author': 'robscott', 'body': 'Thanks @danwinship!\r\n\r\n/lgtm for kube-proxy', 'created_at': datetime.datetime(2023, 1, 3, 17, 17, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372063138, 'issue_id': 1514965699, 'author': 'wojtek-t', 'body': '/lgtm\r\n/approve\r\n\r\nThanks!', 'created_at': datetime.datetime(2023, 1, 5, 10, 52, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372063438, 'issue_id': 1514965699, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114749#"" title=""Author self-approved"">danwinship</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114749#issuecomment-1372063138"" title=""Approved"">wojtek-t</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/kubemark/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubemark/OWNERS)~~ [wojtek-t]\n- ~~[pkg/proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/OWNERS)~~ [danwinship,wojtek-t]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 5, 10, 53, 16, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2022-12-31 02:43:54 UTC): @danwinship: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

aojea (Assginee) on (2023-01-01 20:18:59 UTC): the failure is legit

aojea (Assginee) on (2023-01-01 22:26:52 UTC): /lgtm

k8s-ci-robot on (2023-01-01 22:26:58 UTC): LGTM label has been added.  <details>Git tree hash: 666ffcb06ddae9ccba390011583d3cadc6f18ef8</details>

danwinship (Issue Creator) on (2023-01-03 14:05:48 UTC): /assign @wojtek-t 
this one has a trivial kubemark change too

robscott on (2023-01-03 17:17:47 UTC): Thanks @danwinship!

/lgtm for kube-proxy

wojtek-t (Assginee) on (2023-01-05 10:52:55 UTC): /lgtm
/approve

Thanks!

k8s-ci-robot on (2023-01-05 10:53:16 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114749#"" title=""Author self-approved"">danwinship</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114749#issuecomment-1372063138"" title=""Approved"">wojtek-t</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/kubemark/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubemark/OWNERS)~~ [wojtek-t]
- ~~[pkg/proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/OWNERS)~~ [danwinship,wojtek-t]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1514579878,pull_request,closed,,don't retry e2e flakes by default,"
/kind bug
/kind flake

```release-note
NONE
```

Since Dec 2019 the policy for e2e test is to not retry on tests , to avoid flaky tests to go unnoticed

https://groups.google.com/g/kubernetes-sig-leads/c/uXn1YyNrbKY/m/CCdP42JLAgAJ 

I don't know if there was a change on behavior with the `--flake-attempts` flag between ginkgo v2 and v1, but it seems that now we are retrying tests on CI 

https://github.com/kubernetes/kubernetes/pull/114703#issuecomment-1367955676

I don't remember to see retries previously, the only change that seem related is https://github.com/kubernetes/kubernetes/pull/113214

The goal is to disable retries by default, I don't know if this is the right approach, and if affirmative, I can't explain why it was working previously

",aojea,2022-12-30 15:02:46+00:00,"['pohly', 'BenTheElder', 'liggitt', 'wojtek-t']",2023-01-04 13:11:35+00:00,2023-01-02 22:00:54+00:00,https://github.com/kubernetes/kubernetes/pull/114748,"[('kind/bug', 'Categorizes issue or PR as related to a bug.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('kind/flake', 'Categorizes issue or PR as related to a flaky test.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('do-not-merge/hold', 'Indicates that a PR should not merge because someone has issued a /hold command.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1367961026, 'issue_id': 1514579878, 'author': 'k8s-ci-robot', 'body': '@aojea: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 30, 15, 2, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367961082, 'issue_id': 1514579878, 'author': 'aojea', 'body': '/assign @pohly @onsi @liggitt @BenTheElder', 'created_at': datetime.datetime(2022, 12, 30, 15, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367961122, 'issue_id': 1514579878, 'author': 'k8s-ci-robot', 'body': ""@aojea: GitHub didn't allow me to assign the following users: onsi.\n\nNote that only [kubernetes members](https://github.com/orgs/kubernetes/people) with read permissions, repo collaborators and people who have commented on this issue/PR can be assigned. Additionally, issues/PRs can only have 10 assignees at the same time.\nFor more information please see [the contributor guide](https://git.k8s.io/community/contributors/guide/first-contribution.md#issue-assignment-in-github)\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114748#issuecomment-1367961082):\n\n>/assign @pohly @onsi @liggitt @BenTheElder \n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2022, 12, 30, 15, 3, 4, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367961191, 'issue_id': 1514579878, 'author': 'aojea', 'body': '/sig testing', 'created_at': datetime.datetime(2022, 12, 30, 15, 3, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367961437, 'issue_id': 1514579878, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114748#"" title=""Author self-approved"">aojea</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign sttts for approval by writing `/assign @sttts` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""sttts""]} -->', 'created_at': datetime.datetime(2022, 12, 30, 15, 3, 37, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368014186, 'issue_id': 1514579878, 'author': 'aojea', 'body': '/hold\r\n\r\nIt seems this is working as expected', 'created_at': datetime.datetime(2022, 12, 30, 17, 5, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368125624, 'issue_id': 1514579878, 'author': 'onsi', 'body': 'hey @aojea can you point me to the logs where you see the retry occurring?  There is a new `FlakeAttempts` decorator in v2 - perhaps someone has introduced that to one of the specs?', 'created_at': datetime.datetime(2022, 12, 30, 23, 48, 10, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368696645, 'issue_id': 1514579878, 'author': 'wojtek-t', 'body': ""+1 for not retrying.\r\n\r\nRegarding retries - maybe I'm mixing this up, but I think at some point there was a difference between presubmits and postsubmits. Might be worth verifying that too (and deciding where we are now and what exactly we want).\r\n\r\n/assign"", 'created_at': datetime.datetime(2023, 1, 2, 7, 1, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368744103, 'issue_id': 1514579878, 'author': 'aojea', 'body': '> hey @aojea can you point me to the logs where you see the retry occurring? There is a new FlakeAttempts decorator in v2 - perhaps someone has introduced that to one of the specs?\r\n\r\n\r\n@onsi https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114703/pull-kubernetes-e2e-gce/1608810719640293376', 'created_at': datetime.datetime(2023, 1, 2, 8, 43, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368948679, 'issue_id': 1514579878, 'author': 'pohly', 'body': 'https://github.com/kubernetes/kubernetes/pull/114703#issuecomment-1367967177:\r\n> no. i know it\'s confusing but you have to set it to something > 1 to get retries.\r\n\r\n```\r\n --flake-attempts [int] (default: 0 - failed tests are not retried)\r\n```\r\n\r\nTo me that implies that 1 means ""retry once"", leading to two tries in total (the initial one and the retry).\r\n\r\nBut experimentation shows that indeed, `--flake-attempts=1` doesn\'t retry. When it does with `--flake-attempts=2`, it shows:\r\n```Attempt #1 Failed.  Retrying```\r\n\r\nI don\'t see that in https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114703/pull-kubernetes-e2e-gce/1608810719640293376, so perhaps the test really only ran once?\r\n\r\nThe full JUnit file is https://storage.googleapis.com/kubernetes-jenkins/pr-logs/pull/114703/pull-kubernetes-e2e-gce/1608810719640293376/artifacts/ginkgo_report.xml\r\n\r\nIt shows `[It] [sig-storage] PersistentVolumes-local [Volume type: dir-link] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2` twice, with different time stamps:\r\n\r\n```\r\n12/30/22 13:34:02.981 STEP: Creating a kubernetes client - test/e2e/framework/framework.go:198\r\n```\r\n\r\n```\r\n12/30/22 13:39:33.695 STEP: Creating a kubernetes client - test/e2e/framework/framework.go:198\r\n```\r\n\r\nSo it did indeed run twice, but for unknown reasons?! Very peculiar.', 'created_at': datetime.datetime(2023, 1, 2, 13, 29, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368951578, 'issue_id': 1514579878, 'author': 'pohly', 'body': 'What is interesting is that in https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114580/pull-kubernetes-e2e-gce/1609848919540371456/, the successful run comes *first*, but only in the [JUnit XML](https://storage.googleapis.com/kubernetes-jenkins/pr-logs/pull/114580/pull-kubernetes-e2e-gce/1609848919540371456/artifacts/ginkgo_report.xml). According to the time stamps, the failed attempt ran first.', 'created_at': datetime.datetime(2023, 1, 2, 13, 33, 8, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369008236, 'issue_id': 1514579878, 'author': 'onsi', 'body': ""Well... I have some good news and some bad news.  The good news is I think I understand what is happening.  The bad news is you probably aren't gonna like it!\n\nThese specs are running in parallel and for Ginkgo to coordinate parallelism across multiple processes it requires that the spec trees be constructed identically on each process.  Normally this works without issue - the same binary is invoked and the spec trees are constructed int he same order.  However the tests in [Persistent Volumes (local)](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/persistent_volumes-local.go) [iterate](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/persistent_volumes-local.go#L184) over a [map](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/persistent_volumes-local.go#L99) to construct the test tree.  Therefore the test tree order is not guaranteed.\n\nThe end result is that different parallel nodes are getting different orders and this is breaking parallelization.  It seems your tooling then combines these to report them as a flaky spec even though Ginkgo isn't actually retrying.  The real danger here is that a spec is being missed.\n\nOn Ginkgo's end I can introduce some sort of checksum that will fail with a clearer message if it detects that different processes have different spec orders.  But you will likely need to audit the entire suite and look for cases where you are iterating over maps and perform a more stable loop (e.g. iterate over sorted keys or use a slice instead of a map)."", 'created_at': datetime.datetime(2023, 1, 2, 14, 52, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369020970, 'issue_id': 1514579878, 'author': 'onsi', 'body': ""The other thing i can do is presort the specs on the basis of their file location and the full text in the spec and all containers.  this is not always guaranteed to be unique though - but it's probably safer than relying on the user order being stable and would allow me to fail early if any two specs have an identical sort key."", 'created_at': datetime.datetime(2023, 1, 2, 15, 8, 30, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369023219, 'issue_id': 1514579878, 'author': 'pohly', 'body': ""We can fix this one instance of non-deterministic order, but I don't see how we can reliably prevent developers from adding such tests - there are way too many developers, and most of them won't know about this gotcha. Therefore any kind of help that ginkgo could provide would be very welcome."", 'created_at': datetime.datetime(2023, 1, 2, 15, 10, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369025264, 'issue_id': 1514579878, 'author': 'onsi', 'body': ""yeah - i think i'll try to make the sort more stable on ginkgo's side first.  i'm currently on vacation without my computer but can dig into this when i'm back later this week."", 'created_at': datetime.datetime(2023, 1, 2, 15, 12, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369234676, 'issue_id': 1514579878, 'author': 'aojea', 'body': ""Thanks for the prompt response and detailed answers, Patrick will fix the test and we'll wait for the ginkgo improvements\r\n\r\nIt's a pleasure working with you 😄"", 'created_at': datetime.datetime(2023, 1, 2, 22, 0, 54, tzinfo=datetime.timezone.utc)}, {'comment_id': 1370913093, 'issue_id': 1514579878, 'author': 'onsi', 'body': '❤️ thanks @aojea - should have something for you all within the next week or so.', 'created_at': datetime.datetime(2023, 1, 4, 13, 11, 35, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2022-12-30 15:02:54 UTC): @aojea: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

aojea (Issue Creator) on (2022-12-30 15:03:00 UTC): /assign @pohly @onsi @liggitt @BenTheElder

k8s-ci-robot on (2022-12-30 15:03:04 UTC): @aojea: GitHub didn't allow me to assign the following users: onsi.

Note that only [kubernetes members](https://github.com/orgs/kubernetes/people) with read permissions, repo collaborators and people who have commented on this issue/PR can be assigned. Additionally, issues/PRs can only have 10 assignees at the same time.
For more information please see [the contributor guide](https://git.k8s.io/community/contributors/guide/first-contribution.md#issue-assignment-in-github)

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114748#issuecomment-1367961082):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

aojea (Issue Creator) on (2022-12-30 15:03:11 UTC): /sig testing

k8s-ci-robot on (2022-12-30 15:03:37 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114748#"" title=""Author self-approved"">aojea</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign sttts for approval by writing `/assign @sttts` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[hack/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/hack/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""sttts""]} -->

aojea (Issue Creator) on (2022-12-30 17:05:44 UTC): /hold

It seems this is working as expected

onsi on (2022-12-30 23:48:10 UTC): hey @aojea can you point me to the logs where you see the retry occurring?  There is a new `FlakeAttempts` decorator in v2 - perhaps someone has introduced that to one of the specs?

wojtek-t (Assginee) on (2023-01-02 07:01:39 UTC): +1 for not retrying.

Regarding retries - maybe I'm mixing this up, but I think at some point there was a difference between presubmits and postsubmits. Might be worth verifying that too (and deciding where we are now and what exactly we want).

/assign

aojea (Issue Creator) on (2023-01-02 08:43:01 UTC): @onsi https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114703/pull-kubernetes-e2e-gce/1608810719640293376

pohly (Assginee) on (2023-01-02 13:29:34 UTC): https://github.com/kubernetes/kubernetes/pull/114703#issuecomment-1367967177:

```
 --flake-attempts [int] (default: 0 - failed tests are not retried)
```

To me that implies that 1 means ""retry once"", leading to two tries in total (the initial one and the retry).

But experimentation shows that indeed, `--flake-attempts=1` doesn't retry. When it does with `--flake-attempts=2`, it shows:
```Attempt #1 Failed.  Retrying```

I don't see that in https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114703/pull-kubernetes-e2e-gce/1608810719640293376, so perhaps the test really only ran once?

The full JUnit file is https://storage.googleapis.com/kubernetes-jenkins/pr-logs/pull/114703/pull-kubernetes-e2e-gce/1608810719640293376/artifacts/ginkgo_report.xml

It shows `[It] [sig-storage] PersistentVolumes-local [Volume type: dir-link] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2` twice, with different time stamps:

```
12/30/22 13:34:02.981 STEP: Creating a kubernetes client - test/e2e/framework/framework.go:198
```

```
12/30/22 13:39:33.695 STEP: Creating a kubernetes client - test/e2e/framework/framework.go:198
```

So it did indeed run twice, but for unknown reasons?! Very peculiar.

pohly (Assginee) on (2023-01-02 13:33:08 UTC): What is interesting is that in https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114580/pull-kubernetes-e2e-gce/1609848919540371456/, the successful run comes *first*, but only in the [JUnit XML](https://storage.googleapis.com/kubernetes-jenkins/pr-logs/pull/114580/pull-kubernetes-e2e-gce/1609848919540371456/artifacts/ginkgo_report.xml). According to the time stamps, the failed attempt ran first.

onsi on (2023-01-02 14:52:01 UTC): Well... I have some good news and some bad news.  The good news is I think I understand what is happening.  The bad news is you probably aren't gonna like it!

These specs are running in parallel and for Ginkgo to coordinate parallelism across multiple processes it requires that the spec trees be constructed identically on each process.  Normally this works without issue - the same binary is invoked and the spec trees are constructed int he same order.  However the tests in [Persistent Volumes (local)](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/persistent_volumes-local.go) [iterate](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/persistent_volumes-local.go#L184) over a [map](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/persistent_volumes-local.go#L99) to construct the test tree.  Therefore the test tree order is not guaranteed.

The end result is that different parallel nodes are getting different orders and this is breaking parallelization.  It seems your tooling then combines these to report them as a flaky spec even though Ginkgo isn't actually retrying.  The real danger here is that a spec is being missed.

On Ginkgo's end I can introduce some sort of checksum that will fail with a clearer message if it detects that different processes have different spec orders.  But you will likely need to audit the entire suite and look for cases where you are iterating over maps and perform a more stable loop (e.g. iterate over sorted keys or use a slice instead of a map).

onsi on (2023-01-02 15:08:30 UTC): The other thing i can do is presort the specs on the basis of their file location and the full text in the spec and all containers.  this is not always guaranteed to be unique though - but it's probably safer than relying on the user order being stable and would allow me to fail early if any two specs have an identical sort key.

pohly (Assginee) on (2023-01-02 15:10:40 UTC): We can fix this one instance of non-deterministic order, but I don't see how we can reliably prevent developers from adding such tests - there are way too many developers, and most of them won't know about this gotcha. Therefore any kind of help that ginkgo could provide would be very welcome.

onsi on (2023-01-02 15:12:56 UTC): yeah - i think i'll try to make the sort more stable on ginkgo's side first.  i'm currently on vacation without my computer but can dig into this when i'm back later this week.

aojea (Issue Creator) on (2023-01-02 22:00:54 UTC): Thanks for the prompt response and detailed answers, Patrick will fix the test and we'll wait for the ginkgo improvements

It's a pleasure working with you 😄

onsi on (2023-01-04 13:11:35 UTC): ❤️ thanks @aojea - should have something for you all within the next week or so.

"
1514294682,pull_request,closed,,fix test cases that may be incorrect,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind cleanup
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
A different ipv6 address was used in the wrong test cases. Might not be able to achieve what needs to be tested
#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
 ""NONE""
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",yangjunmyfm192085,2022-12-30 07:00:34+00:00,"['thockin', 'aojea']",2023-04-11 22:34:53+00:00,2023-04-11 22:34:51+00:00,https://github.com/kubernetes/kubernetes/pull/114746,"[('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('area/ipvs', None), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1367758223, 'issue_id': 1514294682, 'author': 'k8s-ci-robot', 'body': '@yangjunmyfm192085: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 30, 7, 0, 42, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367820731, 'issue_id': 1514294682, 'author': 'aojea', 'body': '/lgtm\r\n/approve', 'created_at': datetime.datetime(2022, 12, 30, 9, 41, 25, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367820770, 'issue_id': 1514294682, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 83347be4ae0e92a6687ad089b2e5ba27fb01df69</details>', 'created_at': datetime.datetime(2022, 12, 30, 9, 41, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1474190330, 'issue_id': 1514294682, 'author': 'danwinship', 'body': '/assign @thockin \r\nshould we add `sig-network-approvers` to `pkg/util/ipvs/OWNERS` and `pkg/util/iptables/OWNERS`?', 'created_at': datetime.datetime(2023, 3, 17, 17, 41, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1474413354, 'issue_id': 1514294682, 'author': 'thockin', 'body': '@danwinship yes\r\n\r\n/approve', 'created_at': datetime.datetime(2023, 3, 17, 21, 20, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1474413635, 'issue_id': 1514294682, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114746#issuecomment-1367820731"" title=""Approved"">aojea</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114746#issuecomment-1474413354"" title=""Approved"">thockin</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114746#"" title=""Author self-approved"">yangjunmyfm192085</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/util/ipvs/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/util/ipvs/OWNERS)~~ [thockin]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 3, 17, 21, 20, 48, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2022-12-30 07:00:42 UTC): @yangjunmyfm192085: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

aojea (Assginee) on (2022-12-30 09:41:25 UTC): /lgtm
/approve

k8s-ci-robot on (2022-12-30 09:41:31 UTC): LGTM label has been added.  <details>Git tree hash: 83347be4ae0e92a6687ad089b2e5ba27fb01df69</details>

danwinship on (2023-03-17 17:41:53 UTC): /assign @thockin 
should we add `sig-network-approvers` to `pkg/util/ipvs/OWNERS` and `pkg/util/iptables/OWNERS`?

thockin (Assginee) on (2023-03-17 21:20:24 UTC): @danwinship yes

/approve

k8s-ci-robot on (2023-03-17 21:20:48 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114746#issuecomment-1367820731"" title=""Approved"">aojea</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114746#issuecomment-1474413354"" title=""Approved"">thockin</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114746#"" title=""Author self-approved"">yangjunmyfm192085</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/util/ipvs/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/util/ipvs/OWNERS)~~ [thockin]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

"
1514237061,pull_request,closed,,Add ipvs support of Maglev load distribution method to kube-proxy,"#### What type of PR is this?

/kind feature
/sig network
/area ipvs
/area kube-proxy

#### What this PR does / why we need it:

This new load distribution offers a network load balancing method based on hashing the source IP and source port. Unlike the ""source hashing"" distribution method, the Maglev algorithm keeps the hash table of worker nodes identical regardless of changes in endpoint availability. Because the hash table is consistent across worker nodes, ipvs can keep forwarding connections to the same pods even when the connections fail over from one worker node to another.

None of the existing load distribution methods can retain the endpoint of an existing connection after the connection is re-distributed to another worker node due to the failure of the original worker node.

#### Which issue(s) this PR fixes:

NONE

#### Special notes for your reviewer:


The scheduler can be examinated with

```
TCP  192.168.1.4:32000 mh (mh-port)
  -> 11.0.1.3:5001                Masq    1      0          2
  -> 11.0.2.3:5001                Masq    1      0          3
  -> 11.0.3.3:5001                Masq    1      0          4
  -> 11.0.4.3:5001                Masq    1      0          3
TCP  12.0.111.131:7001 mh (mh-port)
  -> 11.0.1.3:5001                Masq    1      0          0
  -> 11.0.2.3:5001                Masq    1      0          0
  -> 11.0.3.3:5001                Masq    1      0          0
  -> 11.0.4.3:5001                Masq    1      0          0
```

#### Does this PR introduce a user-facing change?

In proxy-mode=ipvs the scheduler can be configured in the KubeProxyConfiguration manifest as follows (for instance)

```
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
ipvs:
  excludeCIDRs: null
  minSyncPeriod: 0s
  scheduler: ""mh""
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

```docs
- [Other doc]: https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/ipvs/README.md
```",sondinht,2022-12-30 04:37:36+00:00,[],2023-01-12 08:00:34+00:00,2023-01-12 08:00:34+00:00,https://github.com/kubernetes/kubernetes/pull/114745,"[('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('area/kube-proxy', None), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('do-not-merge/release-note-label-needed', ""Indicates that a PR should not merge because it's missing one of the release note labels.""), ('area/ipvs', None), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1367720519, 'issue_id': 1514237061, 'author': 'k8s-ci-robot', 'body': '@sondinht: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 30, 4, 37, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367720536, 'issue_id': 1514237061, 'author': 'k8s-ci-robot', 'body': '@sondinht: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 30, 4, 37, 43, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367720541, 'issue_id': 1514237061, 'author': 'k8s-ci-robot', 'body': ""Hi @sondinht. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2022, 12, 30, 4, 37, 45, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367720657, 'issue_id': 1514237061, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114745#"" title=""Author self-approved"">sondinht</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign thockin for approval by writing `/assign @thockin` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[pkg/proxy/apis/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/apis/config/OWNERS)**\n- **[pkg/proxy/ipvs/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/ipvs/OWNERS)**\n- **[pkg/util/ipvs/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/util/ipvs/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""thockin""]} -->', 'created_at': datetime.datetime(2022, 12, 30, 4, 38, 29, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375172842, 'issue_id': 1514237061, 'author': 'uablrek', 'body': '> Because the hash table is consistent across worker nodes, ipvs can keep forwarding connections to the same pods even when the connections fail over from one worker node to another.\r\n>\r\n> None of the existing load distribution methods can retain the endpoint of an existing connection after the connection is re-distributed to another worker node due to the failure of the original worker node.\r\n\r\nI suppose this similar to the case I have tested in https://github.com/kubernetes/kubernetes/issues/114619#issuecomment-1362617444? The traffic from an external source is for some reason re-directed to another node.\r\n\r\nAs @mcarbonneaux pointed out in https://github.com/kubernetes/kubernetes/issues/114619#issuecomment-1374977038, this will not work because of masq (SNAT). When traffic enters another node, the source address will be different even if traffic is directed to the same pod as before.\r\n\r\nAlso there is no coordination between ipvs instances on different nodes. Now it could happen to be that the configs will be the same ""by accident"" since they get the same data. But I think they will diverge after some re-configs, re-starts, updates, etc, and if so they will not become the same again.', 'created_at': datetime.datetime(2023, 1, 9, 6, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375174513, 'issue_id': 1514237061, 'author': 'uablrek', 'body': 'The main reason no one have triaged your PR is because only **issues** are scanned and triaged on the bi-weekly sig/network meetings. A ""orphan"" PR is very likely to go unnoticed.\r\n\r\nThe correct way would be to write an issue, like https://github.com/kubernetes/kubernetes/issues/114619 **and** a PR.', 'created_at': datetime.datetime(2023, 1, 9, 6, 50, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375180124, 'issue_id': 1514237061, 'author': 'uablrek', 'body': ""I will not accept any sysctl setting in `kube-proxy`. So the `net/ipv4/vs/sloppy_*` settings must go away. There is an ongoing effort to remove privileges from `kube-proxy` as @aojea points out in https://github.com/kubernetes/kubernetes/issues/114619#issuecomment-1362537334. The goal is to _remove_ sysctl settings as they require privileges, rather than adding new ones.\r\n\r\nThe required sysctl settings should instead be documented.\r\n\r\nI don't have the final say in this, and others may think that a few more sysctls are acceptable."", 'created_at': datetime.datetime(2023, 1, 9, 7, 1, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375183303, 'issue_id': 1514237061, 'author': 'uablrek', 'body': 'The `FlagSourceHash` is a good addition. Thanks for finding it :+1: I suppose some kernel digging was involved.', 'created_at': datetime.datetime(2023, 1, 9, 7, 4, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375185714, 'issue_id': 1514237061, 'author': 'uablrek', 'body': ""If it's OK I suggest further discussions about the usage of mh is taken in https://github.com/kubernetes/kubernetes/issues/114619 so we have them in one place."", 'created_at': datetime.datetime(2023, 1, 9, 7, 6, 12, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375266841, 'issue_id': 1514237061, 'author': 'sondinht', 'body': '> If it\'s OK I suggest further discussions about the usage of mh is taken in #114619 so we have them in one place.\r\n\r\nIt\'s fine to have all discussions about the ""mh"" load distribution in #114619 as the issue is actually discussing about adding all supported ipvs load distribution methods to kube-proxy', 'created_at': datetime.datetime(2023, 1, 9, 8, 35, 15, tzinfo=datetime.timezone.utc)}, {'comment_id': 1375267755, 'issue_id': 1514237061, 'author': 'sondinht', 'body': '> The main reason no one have triaged your PR is because only **issues** are scanned and triaged on the bi-weekly sig/network meetings. A ""orphan"" PR is very likely to go unnoticed.\r\n> \r\n> The correct way would be to write an issue, like #114619 **and** a PR.\r\n\r\nThanks for your useful information and tip.', 'created_at': datetime.datetime(2023, 1, 9, 8, 36, 22, tzinfo=datetime.timezone.utc)}, {'comment_id': 1379941765, 'issue_id': 1514237061, 'author': 'sondinht', 'body': 'Closing the PR as discussed in the comment https://github.com/kubernetes/kubernetes/issues/114619#issuecomment-1376617860 related to adding support of all ipvs load distribution methods (including ""mh"") to `kube-proxy`.\r\n\r\nPart of this commit will be moved to another PR linked to a separate issue that adds ""FlagSourceHash"" support to the `mh` and `sh` method after PR #114878 is merged.', 'created_at': datetime.datetime(2023, 1, 12, 8, 0, 34, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2022-12-30 04:37:38 UTC): @sondinht: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2022-12-30 04:37:43 UTC): @sondinht: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2022-12-30 04:37:45 UTC): Hi @sondinht. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2022-12-30 04:38:29 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114745#"" title=""Author self-approved"">sondinht</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign thockin for approval by writing `/assign @thockin` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[pkg/proxy/apis/config/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/apis/config/OWNERS)**
- **[pkg/proxy/ipvs/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/ipvs/OWNERS)**
- **[pkg/util/ipvs/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/util/ipvs/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""thockin""]} -->

uablrek on (2023-01-09 06:47:00 UTC): I suppose this similar to the case I have tested in https://github.com/kubernetes/kubernetes/issues/114619#issuecomment-1362617444? The traffic from an external source is for some reason re-directed to another node.

As @mcarbonneaux pointed out in https://github.com/kubernetes/kubernetes/issues/114619#issuecomment-1374977038, this will not work because of masq (SNAT). When traffic enters another node, the source address will be different even if traffic is directed to the same pod as before.

Also there is no coordination between ipvs instances on different nodes. Now it could happen to be that the configs will be the same ""by accident"" since they get the same data. But I think they will diverge after some re-configs, re-starts, updates, etc, and if so they will not become the same again.

uablrek on (2023-01-09 06:50:26 UTC): The main reason no one have triaged your PR is because only **issues** are scanned and triaged on the bi-weekly sig/network meetings. A ""orphan"" PR is very likely to go unnoticed.

The correct way would be to write an issue, like https://github.com/kubernetes/kubernetes/issues/114619 **and** a PR.

uablrek on (2023-01-09 07:01:12 UTC): I will not accept any sysctl setting in `kube-proxy`. So the `net/ipv4/vs/sloppy_*` settings must go away. There is an ongoing effort to remove privileges from `kube-proxy` as @aojea points out in https://github.com/kubernetes/kubernetes/issues/114619#issuecomment-1362537334. The goal is to _remove_ sysctl settings as they require privileges, rather than adding new ones.

The required sysctl settings should instead be documented.

I don't have the final say in this, and others may think that a few more sysctls are acceptable.

uablrek on (2023-01-09 07:04:14 UTC): The `FlagSourceHash` is a good addition. Thanks for finding it :+1: I suppose some kernel digging was involved.

uablrek on (2023-01-09 07:06:12 UTC): If it's OK I suggest further discussions about the usage of mh is taken in https://github.com/kubernetes/kubernetes/issues/114619 so we have them in one place.

sondinht (Issue Creator) on (2023-01-09 08:35:15 UTC): It's fine to have all discussions about the ""mh"" load distribution in #114619 as the issue is actually discussing about adding all supported ipvs load distribution methods to kube-proxy

sondinht (Issue Creator) on (2023-01-09 08:36:22 UTC): Thanks for your useful information and tip.

sondinht (Issue Creator) on (2023-01-12 08:00:34 UTC): Closing the PR as discussed in the comment https://github.com/kubernetes/kubernetes/issues/114619#issuecomment-1376617860 related to adding support of all ipvs load distribution methods (including ""mh"") to `kube-proxy`.

Part of this commit will be moved to another PR linked to a separate issue that adds ""FlagSourceHash"" support to the `mh` and `sh` method after PR #114878 is merged.

"
1514208110,pull_request,closed,,Use errors.Is to check for a specific error in staging dir,"Signed-off-by: Fish-pro <zechun.chen@daocloud.io>

<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?

/kind cleanup

#### What this PR does / why we need it:

Comparing with `==` will fail on wrapped errors. Use errors.Is to check for a specific error

#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->
Fixes #

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",Fish-pro,2022-12-30 03:19:03+00:00,"['bart0sh', 'mmiranda96']",2023-03-09 09:25:35+00:00,2023-03-09 09:25:35+00:00,https://github.com/kubernetes/kubernetes/pull/114744,"[('area/test', None), ('priority/important-soon', 'Must be staffed and worked on either currently, or very soon, ideally in time for the next release.'), ('sig/network', 'Categorizes an issue or PR as relevant to SIG Network.'), ('area/kubelet', None), ('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('sig/scheduling', 'Categorizes an issue or PR as relevant to SIG Scheduling.'), ('area/apiserver', None), ('area/kubectl', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('area/cloudprovider', None), ('sig/storage', 'Categorizes an issue or PR as relevant to SIG Storage.'), ('sig/node', 'Categorizes an issue or PR as relevant to SIG Node.'), ('sig/api-machinery', 'Categorizes an issue or PR as relevant to SIG API Machinery.'), ('sig/cluster-lifecycle', 'Categorizes an issue or PR as relevant to SIG Cluster Lifecycle.'), ('sig/autoscaling', 'Categorizes an issue or PR as relevant to SIG Autoscaling.'), ('size/L', 'Denotes a PR that changes 100-499 lines, ignoring generated files.'), ('area/release-eng', 'Issues or PRs related to the Release Engineering subproject'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('sig/auth', 'Categorizes an issue or PR as relevant to SIG Auth.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('sig/cli', 'Categorizes an issue or PR as relevant to SIG CLI.'), ('area/kubeadm', None), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('sig/release', 'Categorizes an issue or PR as relevant to SIG Release.'), ('sig/architecture', 'Categorizes an issue or PR as relevant to SIG Architecture.'), ('area/conformance', 'Issues or PRs related to kubernetes conformance tests'), ('sig/cloud-provider', 'Categorizes an issue or PR as relevant to SIG Cloud Provider.'), ('area/e2e-test-framework', 'Issues or PRs related to refactoring the kubernetes e2e test framework'), ('triage/accepted', 'Indicates an issue or PR is ready to be actively worked on.')]","[{'comment_id': 1367703314, 'issue_id': 1514208110, 'author': 'Fish-pro', 'body': '/cc @apelisse @ardaguclu', 'created_at': datetime.datetime(2022, 12, 30, 3, 23, 34, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367740199, 'issue_id': 1514208110, 'author': 'Fish-pro', 'body': '/test pull-kubernetes-e2e-kind-ipv6', 'created_at': datetime.datetime(2022, 12, 30, 5, 51, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368217768, 'issue_id': 1514208110, 'author': 'bart0sh', 'body': '/triage accepted\r\n/priority important-soon', 'created_at': datetime.datetime(2022, 12, 31, 13, 46, 59, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368220329, 'issue_id': 1514208110, 'author': 'bart0sh', 'body': ""@Fish-pro Thank you for your PR. \r\n\r\nPlease, consider including other than io.EOF errors.\r\n\r\nHint:\r\n```\r\n~/go/src/k8s.io/kubernetes $ git grep 'err ==' | grep -v ^vendor | sed 's/.*err == \\([^ :),;.]\\+\\).*/\\1/g' | grep Err | sort -u \r\nErrExit\r\nErrFIFOClosed\r\nErrNoContext\r\nErrNoNodesAvailable\r\nErrNoZoneTagInVC\r\nErrRegistryUnavailable\r\nErrorNotVmssInstance\r\nObjectCountNotFoundErr\r\nObjectCountStaleErr\r\nenqueuedVirtualDeleteEventErr\r\nfakeError\r\nmissingResourceError\r\nnamespacedOwnerOfClusterScopedObjectErr\r\nprocessorErr\r\n```"", 'created_at': datetime.datetime(2022, 12, 31, 14, 8, 55, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368220575, 'issue_id': 1514208110, 'author': 'bart0sh', 'body': '/assign', 'created_at': datetime.datetime(2022, 12, 31, 14, 11, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368501745, 'issue_id': 1514208110, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114744#"" title=""Author self-approved"">Fish-pro</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign deads2k, ehashman, liggitt for approval by writing `/assign @deads2k @ehashman @liggitt` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)**\n- **[staging/src/k8s.io/apimachinery/pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/OWNERS)**\n- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**\n- **[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)**\n- **[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)**\n- **[staging/src/k8s.io/component-base/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/metrics/OWNERS)**\n- **[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)**\n- **[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)**\n- **[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)**\n- **[staging/src/k8s.io/mount-utils/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/mount-utils/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""deads2k"",""ehashman"",""liggitt""]} -->', 'created_at': datetime.datetime(2023, 1, 1, 18, 10, 44, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368503711, 'issue_id': 1514208110, 'author': 'sizwe-cry', 'body': '...\n\nOn Sun, 01 Jan 2023, 19:50 Kubernetes Prow Robot, ***@***.***>\nwrote:\n\n> @Fish-pro <https://github.com/Fish-pro>: The following tests *failed*,\n> say /retest to rerun all failed tests or /retest-required to rerun all\n> mandatory failed tests:\n> Test name Commit Details Required Rerun command\n> pull-kubernetes-conformance-image-test 4837870\n> <https://github.com/kubernetes/kubernetes/commit/48378708d1160009da709c284fadd748e8d72d1c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-conformance-image-test/1609598379694755840/>\n> false /test pull-kubernetes-conformance-image-test\n> pull-kubernetes-conformance-kind-ipv6-parallel 4837870\n> <https://github.com/kubernetes/kubernetes/commit/48378708d1160009da709c284fadd748e8d72d1c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-conformance-kind-ipv6-parallel/1609598379757670400>\n> false /test pull-kubernetes-conformance-kind-ipv6-parallel\n> pull-kubernetes-e2e-gce-storage-snapshot 4837870\n> <https://github.com/kubernetes/kubernetes/commit/48378708d1160009da709c284fadd748e8d72d1c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gce-storage-snapshot/1609598390331510784/>\n> false /test pull-kubernetes-e2e-gce-storage-snapshot\n> pull-kubernetes-e2e-capz-azure-file 4837870\n> <https://github.com/kubernetes/kubernetes/commit/48378708d1160009da709c284fadd748e8d72d1c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-capz-azure-file/1609598382202949632>\n> false /test pull-kubernetes-e2e-capz-azure-file\n> pull-kubernetes-e2e-capz-azure-disk 4837870\n> <https://github.com/kubernetes/kubernetes/commit/48378708d1160009da709c284fadd748e8d72d1c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-capz-azure-disk/1609598380571365376>\n> false /test pull-kubernetes-e2e-capz-azure-disk\n> pull-kubernetes-e2e-gci-gce-ingress 4837870\n> <https://github.com/kubernetes/kubernetes/commit/48378708d1160009da709c284fadd748e8d72d1c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gci-gce-ingress/1609598384719532032>\n> false /test pull-kubernetes-e2e-gci-gce-ingress\n> pull-kubernetes-e2e-gci-gce-ipvs 4837870\n> <https://github.com/kubernetes/kubernetes/commit/48378708d1160009da709c284fadd748e8d72d1c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gci-gce-ipvs/1609598386401447936>\n> false /test pull-kubernetes-e2e-gci-gce-ipvs\n> pull-kubernetes-e2e-capz-conformance 4837870\n> <https://github.com/kubernetes/kubernetes/commit/48378708d1160009da709c284fadd748e8d72d1c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-capz-conformance/1609598383918419968>\n> false /test pull-kubernetes-e2e-capz-conformance\n> pull-kubernetes-e2e-ubuntu-gce-network-policies 4837870\n> <https://github.com/kubernetes/kubernetes/commit/48378708d1160009da709c284fadd748e8d72d1c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-ubuntu-gce-network-policies/1609598385575170048>\n> false /test pull-kubernetes-e2e-ubuntu-gce-network-policies\n> pull-kubernetes-e2e-kind deb52f4\n> <https://github.com/kubernetes/kubernetes/commit/deb52f4846833b1a60835a0244f12e2280ebb98c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-kind/1609603198715170816>\n> true /test pull-kubernetes-e2e-kind\n> pull-kubernetes-typecheck deb52f4\n> <https://github.com/kubernetes/kubernetes/commit/deb52f4846833b1a60835a0244f12e2280ebb98c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-typecheck/1609603206768234496>\n> true /test pull-kubernetes-typecheck\n> pull-kubernetes-e2e-kind-ipv6 deb52f4\n> <https://github.com/kubernetes/kubernetes/commit/deb52f4846833b1a60835a0244f12e2280ebb98c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-kind-ipv6/1609603198765502464>\n> true /test pull-kubernetes-e2e-kind-ipv6\n> pull-kubernetes-node-e2e-containerd deb52f4\n> <https://github.com/kubernetes/kubernetes/commit/deb52f4846833b1a60835a0244f12e2280ebb98c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-node-e2e-containerd/1609603202582319104/>\n> true /test pull-kubernetes-node-e2e-containerd\n> pull-kubernetes-conformance-kind-ga-only-parallel deb52f4\n> <https://github.com/kubernetes/kubernetes/commit/deb52f4846833b1a60835a0244f12e2280ebb98c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-conformance-kind-ga-only-parallel/1609603198820028416>\n> true /test pull-kubernetes-conformance-kind-ga-only-parallel\n> pull-kubernetes-e2e-gce-100-performance deb52f4\n> <https://github.com/kubernetes/kubernetes/commit/deb52f4846833b1a60835a0244f12e2280ebb98c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gce-100-performance/1609603203412791296>\n> true /test pull-kubernetes-e2e-gce-100-performance\n> pull-kubernetes-verify-govet-levee deb52f4\n> <https://github.com/kubernetes/kubernetes/commit/deb52f4846833b1a60835a0244f12e2280ebb98c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-verify-govet-levee/1609603207602900992>\n> true /test pull-kubernetes-verify-govet-levee\n> pull-kubernetes-e2e-gce-csi-serial deb52f4\n> <https://github.com/kubernetes/kubernetes/commit/deb52f4846833b1a60835a0244f12e2280ebb98c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gce-csi-serial/1609603205920985088/>\n> false /test pull-kubernetes-e2e-gce-csi-serial\n> pull-kubernetes-e2e-gce deb52f4\n> <https://github.com/kubernetes/kubernetes/commit/deb52f4846833b1a60835a0244f12e2280ebb98c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gce/1609603198601924608/>\n> true /test pull-kubernetes-e2e-gce\n> pull-kubernetes-e2e-capz-windows-containerd deb52f4\n> <https://github.com/kubernetes/kubernetes/commit/deb52f4846833b1a60835a0244f12e2280ebb98c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-capz-windows-containerd/1609603198920691712>\n> false /test pull-kubernetes-e2e-capz-windows-containerd\n> pull-kubernetes-e2e-gce-storage-slow deb52f4\n> <https://github.com/kubernetes/kubernetes/commit/deb52f4846833b1a60835a0244f12e2280ebb98c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gce-storage-slow/1609603204243263488/>\n> false /test pull-kubernetes-e2e-gce-storage-slow\n> pull-kubernetes-e2e-capz-azure-file-vmss deb52f4\n> <https://github.com/kubernetes/kubernetes/commit/deb52f4846833b1a60835a0244f12e2280ebb98c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-capz-azure-file-vmss/1609603200753602560>\n> false /test pull-kubernetes-e2e-capz-azure-file-vmss\n> pull-kubernetes-e2e-capz-azure-disk-vmss deb52f4\n> <https://github.com/kubernetes/kubernetes/commit/deb52f4846833b1a60835a0244f12e2280ebb98c>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-capz-azure-disk-vmss/1609603199067492352>\n> false /test pull-kubernetes-e2e-capz-azure-disk-vmss\n> pull-kubernetes-integration de0227e\n> <https://github.com/kubernetes/kubernetes/commit/de0227e3d59193613b371ded9b1424eef404a5cb>\n> link\n> <https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-integration/1609606090020884480>\n> true /test pull-kubernetes-integration\n>\n> Full PR test history\n> <https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114744>.\n> Your PR dashboard\n> <https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3AFish-pro>.\n> Please help us cut down on flakes by linking to\n> <https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests>\n> an open issue\n> <https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open> when\n> you hit one in your PR.\n>\n> Instructions for interacting with me using PR comments are available here\n> <https://git.k8s.io/community/contributors/guide/pull-requests.md>. If\n> you have questions or suggestions related to my behavior, please file an\n> issue against the kubernetes/test-infra\n> <https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:>\n> repository. I understand the commands that are listed here\n> <https://go.k8s.io/bot-commands>.\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/kubernetes/kubernetes/pull/114744#issuecomment-1368496044>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ATY5R5VVTVJSPDSRPJXSU4TWQG7XPANCNFSM6AAAAAATMSIBQU>\n> .\n> You are receiving this because you are subscribed to this thread.Message\n> ID: ***@***.***>\n>', 'created_at': datetime.datetime(2023, 1, 1, 18, 22, 52, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368656345, 'issue_id': 1514208110, 'author': 'Fish-pro', 'body': '> @Fish-pro Thank you for your PR.\r\n> \r\n> Please, consider including other than io.EOF errors.\r\n> \r\n> Hint:\r\n> \r\n> ```\r\n> ~/go/src/k8s.io/kubernetes $ git grep \'err ==\' | grep -v ^vendor | sed \'s/.*err == \\([^ :),;.]\\+\\).*/\\1/g\' | grep Err | sort -u \r\n> ErrExit\r\n> ErrFIFOClosed\r\n> ErrNoContext\r\n> ErrNoNodesAvailable\r\n> ErrNoZoneTagInVC\r\n> ErrRegistryUnavailable\r\n> ErrorNotVmssInstance\r\n> ObjectCountNotFoundErr\r\n> ObjectCountStaleErr\r\n> enqueuedVirtualDeleteEventErr\r\n> fakeError\r\n> missingResourceError\r\n> namespacedOwnerOfClusterScopedObjectErr\r\n> processorErr\r\n> ```\r\n\r\n@bart0sh \r\nA pr modification, the change is huge, can it be divided into multiple pr modifications, to ensure stability\r\nThis pr modifies the staging directory, the unmodified part below, because err is of type `interface{}`\r\n```sh\r\n➜  kubernetes git:(cleanup/errorsis) ✗ git grep \'err ==\' | grep -v ^vendor | grep ^staging | sed \'s/.*err == \\([^ :),;.]\\+\\).*/\\1/g\' | grep Err | grep -v ""err == nil"" | sort -u\r\nstaging/src/k8s.io/apiserver/pkg/server/filters/wrap.go:\t\tif err == http.ErrAbortHandler {\r\n```', 'created_at': datetime.datetime(2023, 1, 2, 4, 56, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368671862, 'issue_id': 1514208110, 'author': 'k8s-ci-robot', 'body': '@Fish-pro: The following tests **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:\n\nTest name | Commit | Details | Required | Rerun command\n--- | --- | --- | --- | ---\npull-kubernetes-conformance-image-test | 48378708d1160009da709c284fadd748e8d72d1c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-conformance-image-test/1609598379694755840/) | false | `/test pull-kubernetes-conformance-image-test`\npull-kubernetes-conformance-kind-ipv6-parallel | 48378708d1160009da709c284fadd748e8d72d1c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-conformance-kind-ipv6-parallel/1609598379757670400) | false | `/test pull-kubernetes-conformance-kind-ipv6-parallel`\npull-kubernetes-e2e-gci-gce-ingress | 48378708d1160009da709c284fadd748e8d72d1c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gci-gce-ingress/1609598384719532032) | false | `/test pull-kubernetes-e2e-gci-gce-ingress`\npull-kubernetes-e2e-gci-gce-ipvs | 48378708d1160009da709c284fadd748e8d72d1c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gci-gce-ipvs/1609598386401447936) | false | `/test pull-kubernetes-e2e-gci-gce-ipvs`\npull-kubernetes-e2e-ubuntu-gce-network-policies | 48378708d1160009da709c284fadd748e8d72d1c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-ubuntu-gce-network-policies/1609598385575170048) | false | `/test pull-kubernetes-e2e-ubuntu-gce-network-policies`\npull-kubernetes-e2e-gce-storage-snapshot | a4768b0bda20e0b1ecd06618f8cc03ce5a57c729 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gce-storage-snapshot/1609608883825807360/) | false | `/test pull-kubernetes-e2e-gce-storage-snapshot`\npull-kubernetes-e2e-gce-storage-slow | a4768b0bda20e0b1ecd06618f8cc03ce5a57c729 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gce-storage-slow/1609608882991140864/) | false | `/test pull-kubernetes-e2e-gce-storage-slow`\npull-kubernetes-e2e-gce-csi-serial | a4768b0bda20e0b1ecd06618f8cc03ce5a57c729 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gce-csi-serial/1609608884664668160/) | false | `/test pull-kubernetes-e2e-gce-csi-serial`\n\n[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114744). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3AFish-pro). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).\n</details>\n<!-- test report -->', 'created_at': datetime.datetime(2023, 1, 2, 5, 45, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368769988, 'issue_id': 1514208110, 'author': 'bart0sh', 'body': '> A pr modification, the change is huge, can it be divided into multiple pr modifications, to ensure stability\r\n\r\nAbosolutely', 'created_at': datetime.datetime(2023, 1, 2, 9, 19, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368780706, 'issue_id': 1514208110, 'author': 'bart0sh', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 2, 9, 38, 16, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368807235, 'issue_id': 1514208110, 'author': 'bart0sh', 'body': '/lgtm', 'created_at': datetime.datetime(2023, 1, 2, 10, 15, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1368807312, 'issue_id': 1514208110, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 960428c25c3363cfbee3006c4fd781f20cdcc8e0</details>', 'created_at': datetime.datetime(2023, 1, 2, 10, 15, 53, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371257941, 'issue_id': 1514208110, 'author': 'SergeyKanzhelev', 'body': '/assign @mmiranda96 for node portion', 'created_at': datetime.datetime(2023, 1, 4, 18, 10, 24, tzinfo=datetime.timezone.utc)}, {'comment_id': 1371257995, 'issue_id': 1514208110, 'author': 'k8s-ci-robot', 'body': ""@SergeyKanzhelev: GitHub didn't allow me to assign the following users: for, node, portion.\n\nNote that only [kubernetes members](https://github.com/orgs/kubernetes/people) with read permissions, repo collaborators and people who have commented on this issue/PR can be assigned. Additionally, issues/PRs can only have 10 assignees at the same time.\nFor more information please see [the contributor guide](https://git.k8s.io/community/contributors/guide/first-contribution.md#issue-assignment-in-github)\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114744#issuecomment-1371257941):\n\n>/assign @mmiranda96 for node portion\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2023, 1, 4, 18, 10, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1396164706, 'issue_id': 1514208110, 'author': 'apelisse', 'body': ""/unassign\r\nI'll let someone else take a look at this."", 'created_at': datetime.datetime(2023, 1, 18, 22, 15, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1405371474, 'issue_id': 1514208110, 'author': 'logicalhan', 'body': '/remove-sig instrumentation', 'created_at': datetime.datetime(2023, 1, 26, 17, 46, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1431407694, 'issue_id': 1514208110, 'author': 'pohly', 'body': '/remove-wg structured-logging', 'created_at': datetime.datetime(2023, 2, 15, 13, 55, 28, tzinfo=datetime.timezone.utc)}]","Fish-pro (Issue Creator) on (2022-12-30 03:23:34 UTC): /cc @apelisse @ardaguclu

Fish-pro (Issue Creator) on (2022-12-30 05:51:06 UTC): /test pull-kubernetes-e2e-kind-ipv6

bart0sh (Assginee) on (2022-12-31 13:46:59 UTC): /triage accepted
/priority important-soon

bart0sh (Assginee) on (2022-12-31 14:08:55 UTC): @Fish-pro Thank you for your PR. 

Please, consider including other than io.EOF errors.

Hint:
```
~/go/src/k8s.io/kubernetes $ git grep 'err ==' | grep -v ^vendor | sed 's/.*err == \([^ :),;.]\+\).*/\1/g' | grep Err | sort -u 
ErrExit
ErrFIFOClosed
ErrNoContext
ErrNoNodesAvailable
ErrNoZoneTagInVC
ErrRegistryUnavailable
ErrorNotVmssInstance
ObjectCountNotFoundErr
ObjectCountStaleErr
enqueuedVirtualDeleteEventErr
fakeError
missingResourceError
namespacedOwnerOfClusterScopedObjectErr
processorErr
```

bart0sh (Assginee) on (2022-12-31 14:11:07 UTC): /assign

k8s-ci-robot on (2023-01-01 18:10:44 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114744#"" title=""Author self-approved"">Fish-pro</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign deads2k, ehashman, liggitt for approval by writing `/assign @deads2k @ehashman @liggitt` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[staging/src/k8s.io/apiextensions-apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver/OWNERS)**
- **[staging/src/k8s.io/apimachinery/pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/OWNERS)**
- **[staging/src/k8s.io/apiserver/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/OWNERS)**
- **[staging/src/k8s.io/cli-runtime/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/OWNERS)**
- **[staging/src/k8s.io/client-go/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/OWNERS)**
- **[staging/src/k8s.io/component-base/metrics/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/metrics/OWNERS)**
- **[staging/src/k8s.io/kube-aggregator/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kube-aggregator/OWNERS)**
- **[staging/src/k8s.io/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/kubectl/OWNERS)**
- **[staging/src/k8s.io/legacy-cloud-providers/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/legacy-cloud-providers/OWNERS)**
- **[staging/src/k8s.io/mount-utils/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/mount-utils/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""deads2k"",""ehashman"",""liggitt""]} -->

sizwe-cry on (2023-01-01 18:22:52 UTC): ...

On Sun, 01 Jan 2023, 19:50 Kubernetes Prow Robot, ***@***.***>
wrote:

Fish-pro (Issue Creator) on (2023-01-02 04:56:13 UTC): @bart0sh 
A pr modification, the change is huge, can it be divided into multiple pr modifications, to ensure stability
This pr modifies the staging directory, the unmodified part below, because err is of type `interface{}`
```sh
➜  kubernetes git:(cleanup/errorsis) ✗ git grep 'err ==' | grep -v ^vendor | grep ^staging | sed 's/.*err == \([^ :),;.]\+\).*/\1/g' | grep Err | grep -v ""err == nil"" | sort -u
staging/src/k8s.io/apiserver/pkg/server/filters/wrap.go:		if err == http.ErrAbortHandler {
```

k8s-ci-robot on (2023-01-02 05:45:13 UTC): @Fish-pro: The following tests **failed**, say `/retest` to rerun all failed tests or `/retest-required` to rerun all mandatory failed tests:

Test name | Commit | Details | Required | Rerun command
--- | --- | --- | --- | ---
pull-kubernetes-conformance-image-test | 48378708d1160009da709c284fadd748e8d72d1c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-conformance-image-test/1609598379694755840/) | false | `/test pull-kubernetes-conformance-image-test`
pull-kubernetes-conformance-kind-ipv6-parallel | 48378708d1160009da709c284fadd748e8d72d1c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-conformance-kind-ipv6-parallel/1609598379757670400) | false | `/test pull-kubernetes-conformance-kind-ipv6-parallel`
pull-kubernetes-e2e-gci-gce-ingress | 48378708d1160009da709c284fadd748e8d72d1c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gci-gce-ingress/1609598384719532032) | false | `/test pull-kubernetes-e2e-gci-gce-ingress`
pull-kubernetes-e2e-gci-gce-ipvs | 48378708d1160009da709c284fadd748e8d72d1c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gci-gce-ipvs/1609598386401447936) | false | `/test pull-kubernetes-e2e-gci-gce-ipvs`
pull-kubernetes-e2e-ubuntu-gce-network-policies | 48378708d1160009da709c284fadd748e8d72d1c | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-ubuntu-gce-network-policies/1609598385575170048) | false | `/test pull-kubernetes-e2e-ubuntu-gce-network-policies`
pull-kubernetes-e2e-gce-storage-snapshot | a4768b0bda20e0b1ecd06618f8cc03ce5a57c729 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gce-storage-snapshot/1609608883825807360/) | false | `/test pull-kubernetes-e2e-gce-storage-snapshot`
pull-kubernetes-e2e-gce-storage-slow | a4768b0bda20e0b1ecd06618f8cc03ce5a57c729 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gce-storage-slow/1609608882991140864/) | false | `/test pull-kubernetes-e2e-gce-storage-slow`
pull-kubernetes-e2e-gce-csi-serial | a4768b0bda20e0b1ecd06618f8cc03ce5a57c729 | [link](https://prow.k8s.io/view/gs/kubernetes-jenkins/pr-logs/pull/114744/pull-kubernetes-e2e-gce-csi-serial/1609608884664668160/) | false | `/test pull-kubernetes-e2e-gce-csi-serial`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=114744). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3AFish-pro). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->

bart0sh (Assginee) on (2023-01-02 09:19:40 UTC): Abosolutely

bart0sh (Assginee) on (2023-01-02 09:38:16 UTC): /retest

bart0sh (Assginee) on (2023-01-02 10:15:47 UTC): /lgtm

k8s-ci-robot on (2023-01-02 10:15:53 UTC): LGTM label has been added.  <details>Git tree hash: 960428c25c3363cfbee3006c4fd781f20cdcc8e0</details>

SergeyKanzhelev on (2023-01-04 18:10:24 UTC): /assign @mmiranda96 for node portion

k8s-ci-robot on (2023-01-04 18:10:26 UTC): @SergeyKanzhelev: GitHub didn't allow me to assign the following users: for, node, portion.

Note that only [kubernetes members](https://github.com/orgs/kubernetes/people) with read permissions, repo collaborators and people who have commented on this issue/PR can be assigned. Additionally, issues/PRs can only have 10 assignees at the same time.
For more information please see [the contributor guide](https://git.k8s.io/community/contributors/guide/first-contribution.md#issue-assignment-in-github)

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114744#issuecomment-1371257941):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

apelisse on (2023-01-18 22:15:07 UTC): /unassign
I'll let someone else take a look at this.

logicalhan on (2023-01-26 17:46:18 UTC): /remove-sig instrumentation

pohly on (2023-02-15 13:55:28 UTC): /remove-wg structured-logging

"
1513866871,pull_request,closed,,Changed remaining code to improve output for files under test/e2e/autoscaling,"#### What type of PR is this?

/kind feature

#### What this PR does / why we need it:

Provides better & more informative outputs to developers when tests fail. This PR takes care of the remaining open points in `test/e2e/autoscaling`

#### Which issue(s) this PR fixes:

Part of #105678

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?

```release-note
NONE
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",Transmitt0r,2022-12-29 16:07:30+00:00,"['pohly', 'MaciekPytel']",2023-01-10 20:06:31+00:00,2023-01-10 18:39:48+00:00,https://github.com/kubernetes/kubernetes/pull/114742,"[('area/test', None), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('sig/autoscaling', 'Categorizes an issue or PR as relevant to SIG Autoscaling.'), ('size/M', 'Denotes a PR that changes 30-99 lines, ignoring generated files.'), ('kind/feature', 'Categorizes issue or PR as related to a new feature.'), ('release-note-none', ""Denotes a PR that doesn't merit a release note.""), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('sig/testing', 'Categorizes an issue or PR as relevant to SIG Testing.'), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1367434936, 'issue_id': 1513866871, 'author': 'linux-foundation-easycla[bot]', 'body': '<a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Transmitt0r / name: Lukas Grotz  (c81967f72e08791bcfb90bc5d1282564a0ac789d)</li></ul>', 'created_at': datetime.datetime(2022, 12, 29, 16, 7, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367434989, 'issue_id': 1513866871, 'author': 'k8s-ci-robot', 'body': ""Welcome @Transmitt0r! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:"", 'created_at': datetime.datetime(2022, 12, 29, 16, 7, 38, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367435003, 'issue_id': 1513866871, 'author': 'k8s-ci-robot', 'body': ""Hi @Transmitt0r. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2022, 12, 29, 16, 7, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367435012, 'issue_id': 1513866871, 'author': 'k8s-ci-robot', 'body': '@Transmitt0r: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 29, 16, 7, 39, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367544090, 'issue_id': 1513866871, 'author': 'aojea', 'body': '/assign @pohly', 'created_at': datetime.datetime(2022, 12, 29, 19, 42, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369162885, 'issue_id': 1513866871, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: 21e5a51e3869beacba44a143b91347f7f9e58859</details>', 'created_at': datetime.datetime(2023, 1, 2, 19, 25, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369165876, 'issue_id': 1513866871, 'author': 'Transmitt0r', 'body': '/assign @maciekpytel', 'created_at': datetime.datetime(2023, 1, 2, 19, 34, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369179147, 'issue_id': 1513866871, 'author': 'Transmitt0r', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 2, 20, 8, 33, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369179328, 'issue_id': 1513866871, 'author': 'k8s-ci-robot', 'body': '@Transmitt0r: Cannot trigger testing until a trusted user reviews the PR and leaves an `/ok-to-test` message.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114742#issuecomment-1369179147):\n\n>/retest\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2023, 1, 2, 20, 8, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1369489143, 'issue_id': 1513866871, 'author': 'pohly', 'body': '/retest', 'created_at': datetime.datetime(2023, 1, 3, 8, 16, 26, tzinfo=datetime.timezone.utc)}, {'comment_id': 1372414225, 'issue_id': 1513866871, 'author': 'Transmitt0r', 'body': '@pohly seems like all tests passed the second time', 'created_at': datetime.datetime(2023, 1, 5, 16, 5, 56, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377508615, 'issue_id': 1513866871, 'author': 'pohly', 'body': ""/approve\r\n\r\nI should have approval rights now... let's see whether that works."", 'created_at': datetime.datetime(2023, 1, 10, 16, 14, 17, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377509219, 'issue_id': 1513866871, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114742#issuecomment-1377508615"" title=""Approved"">pohly</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114742#"" title=""Author self-approved"">Transmitt0r</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[test/e2e/autoscaling/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/autoscaling/OWNERS)~~ [pohly]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2023, 1, 10, 16, 14, 41, tzinfo=datetime.timezone.utc)}, {'comment_id': 1377785595, 'issue_id': 1513866871, 'author': 'Transmitt0r', 'body': 'Thanks for the support @pohly', 'created_at': datetime.datetime(2023, 1, 10, 20, 6, 30, tzinfo=datetime.timezone.utc)}]","linux-foundation-easycla[bot] on (2022-12-29 16:07:33 UTC): <a href=""https://easycla.lfx.linuxfoundation.org/#/?version=2""><img src=""https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg"" alt=""CLA Signed"" align=""left"" height=""28"" width=""328"" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Transmitt0r / name: Lukas Grotz  (c81967f72e08791bcfb90bc5d1282564a0ac789d)</li></ul>

k8s-ci-robot on (2022-12-29 16:07:38 UTC): Welcome @Transmitt0r! <br><br>It looks like this is your first PR to <a href='https://github.com/kubernetes/kubernetes'>kubernetes/kubernetes</a> 🎉. Please refer to our [pull request process documentation](https://git.k8s.io/community/contributors/guide/pull-requests.md) to help your PR have a smooth ride to approval. <br><br>You will be prompted by a bot to use commands during the review process. Do not be afraid to follow the prompts! It is okay to experiment. [Here is the bot commands documentation](https://go.k8s.io/bot-commands). <br><br>You can also check if kubernetes/kubernetes has [its own contribution guidelines](https://github.com/kubernetes/kubernetes/tree/master/CONTRIBUTING.md). <br><br>You may want to refer to our [testing guide](https://git.k8s.io/community/contributors/devel/sig-testing/testing.md) if you run into trouble with your tests not passing. <br><br>If you are having difficulty getting your pull request seen, please follow the [recommended escalation practices](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md#why-is-my-pull-request-not-getting-reviewed). Also, for tips and tricks in the contribution process you may want to read the [Kubernetes contributor cheat sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md). We want to make sure your contribution gets all the attention it needs! <br><br>Thank you, and welcome to Kubernetes. :smiley:

k8s-ci-robot on (2022-12-29 16:07:39 UTC): Hi @Transmitt0r. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2022-12-29 16:07:39 UTC): @Transmitt0r: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

aojea on (2022-12-29 19:42:11 UTC): /assign @pohly

k8s-ci-robot on (2023-01-02 19:25:05 UTC): LGTM label has been added.  <details>Git tree hash: 21e5a51e3869beacba44a143b91347f7f9e58859</details>

Transmitt0r (Issue Creator) on (2023-01-02 19:34:11 UTC): /assign @maciekpytel

Transmitt0r (Issue Creator) on (2023-01-02 20:08:33 UTC): /retest

k8s-ci-robot on (2023-01-02 20:08:47 UTC): @Transmitt0r: Cannot trigger testing until a trusted user reviews the PR and leaves an `/ok-to-test` message.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114742#issuecomment-1369179147):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

pohly (Assginee) on (2023-01-03 08:16:26 UTC): /retest

Transmitt0r (Issue Creator) on (2023-01-05 16:05:56 UTC): @pohly seems like all tests passed the second time

pohly (Assginee) on (2023-01-10 16:14:17 UTC): /approve

I should have approval rights now... let's see whether that works.

k8s-ci-robot on (2023-01-10 16:14:41 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114742#issuecomment-1377508615"" title=""Approved"">pohly</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114742#"" title=""Author self-approved"">Transmitt0r</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/e2e/autoscaling/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/autoscaling/OWNERS)~~ [pohly]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

Transmitt0r (Issue Creator) on (2023-01-10 20:06:30 UTC): Thanks for the support @pohly

"
1513633058,pull_request,closed,,fix:should replace x += 1 with x++,"fix:should replace x += 1 with x++

Thanks

Signed-off-by: yulng <wei.yang@daocloud.io>


",yulng,2022-12-29 11:11:38+00:00,[],2022-12-30 02:25:36+00:00,2022-12-30 02:25:36+00:00,https://github.com/kubernetes/kubernetes/pull/114741,"[('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('needs-ok-to-test', 'Indicates a PR that requires an org member to verify it is safe to test.'), ('do-not-merge/release-note-label-needed', ""Indicates that a PR should not merge because it's missing one of the release note labels.""), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.'), ('do-not-merge/needs-kind', 'Indicates a PR lacks a `kind/foo` label and requires one.')]","[{'comment_id': 1367245849, 'issue_id': 1513633058, 'author': 'k8s-ci-robot', 'body': '@yulng: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 29, 11, 11, 40, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367245908, 'issue_id': 1513633058, 'author': 'k8s-ci-robot', 'body': ""Hi @yulng. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2022, 12, 29, 11, 11, 46, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367245920, 'issue_id': 1513633058, 'author': 'k8s-ci-robot', 'body': '@yulng: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 29, 11, 11, 47, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367246318, 'issue_id': 1513633058, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **NOT APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114741#"" title=""Author self-approved"">yulng</a>*\n**Once this PR has been reviewed and has the lgtm label**, please assign smarterclayton for approval by writing `/assign @smarterclayton` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details open>\nNeeds approval from an approver in each of these files:\n\n- **[pkg/controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/OWNERS)**\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[""smarterclayton""]} -->', 'created_at': datetime.datetime(2022, 12, 29, 11, 12, 26, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2022-12-29 11:11:40 UTC): @yulng: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2022-12-29 11:11:46 UTC): Hi @yulng. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2022-12-29 11:11:47 UTC): @yulng: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2022-12-29 11:12:26 UTC): [APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114741#"" title=""Author self-approved"">yulng</a>*
**Once this PR has been reviewed and has the lgtm label**, please assign smarterclayton for approval by writing `/assign @smarterclayton` in a comment. For more information see [the Kubernetes Code Review Process](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process).

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details open>
Needs approval from an approver in each of these files:

- **[pkg/controller/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""smarterclayton""]} -->

"
1513627610,pull_request,closed,,Misleading message when there are no metrics.,"<!--  Thanks for sending a pull request!  Here are some tips for you:

1. If this is your first time, please read our contributor guidelines: https://git.k8s.io/community/contributors/guide/first-contribution.md#your-first-contribution and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here:
https://git.k8s.io/community/contributors/devel/sig-release/release.md#issuepr-kind-label
3. Ensure you have added or ran the appropriate tests for your PR: https://git.k8s.io/community/contributors/devel/sig-testing/testing.md
4. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
5. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

#### What type of PR is this?
/kind cleanup
<!--
Add one of the following kinds:
/kind bug
/kind cleanup
/kind documentation
/kind feature

Optionally add one or more of the following kinds if applicable:
/kind api-change
/kind deprecation
/kind failing-test
/kind flake
/kind regression
-->

#### What this PR does / why we need it:
When there are no metrics received for pod under HPA. The message reads ""did not receive metrics for any ready pods"".

Fixed the message to be ""did not receive metrics for targetted pods (pods might be unready)"". The problem is that users will assume that pods were running.
#### Which issue(s) this PR fixes:
<!--
*Automatically closes linked issue when PR is merged.
Usage: `Fixes #<issue number>`, or `Fixes (paste link of issue)`.
_If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_*
-->

#### Special notes for your reviewer:

#### Does this PR introduce a user-facing change?
Yes
<!--
If no, just write ""NONE"" in the release-note block below.
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".

For more information on release notes see: https://git.k8s.io/community/contributors/guide/release-notes.md
-->
```release-note
Improved misleading message, in case of no metrics received for the HPA controlled pods.
```

#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:

<!--
This section can be blank if this pull request does not require a release note.

When adding links which point to resources within git repositories, like
KEPs or supporting documentation, please reference a specific commit and avoid
linking directly to the master branch. This ensures that links reference a
specific point in time, rather than a document that may change over time.

See here for guidance on getting permanent links to files: https://help.github.com/en/articles/getting-permanent-links-to-files

Please use the following format for linking documentation:
- [KEP]: <link>
- [Usage]: <link>
- [Other doc]: <link>
-->
```docs

```
",kushagra98,2022-12-29 11:04:52+00:00,['mwielgus'],2022-12-29 19:09:30+00:00,2022-12-29 19:09:29+00:00,https://github.com/kubernetes/kubernetes/pull/114740,"[('kind/cleanup', 'Categorizes issue or PR as related to cleaning up code, process, or technical debt.'), ('lgtm', '""Looks good to me"", indicates that a PR is ready to be merged.'), ('release-note', 'Denotes a PR that will be considered when it comes time to generate release notes.'), ('sig/autoscaling', 'Categorizes an issue or PR as relevant to SIG Autoscaling.'), ('size/XS', 'Denotes a PR that changes 0-9 lines, ignoring generated files.'), ('sig/apps', 'Categorizes an issue or PR as relevant to SIG Apps.'), ('approved', 'Indicates a PR has been approved by an approver from all required OWNERS files.'), ('cncf-cla: yes', ""Indicates the PR's author has signed the CNCF CLA.""), ('ok-to-test', 'Indicates a non-member PR verified by an org member that is safe to test.'), ('needs-priority', 'Indicates a PR lacks a `priority/foo` label and requires one.'), ('needs-triage', 'Indicates an issue or PR lacks a `triage/foo` label and requires one.')]","[{'comment_id': 1367241727, 'issue_id': 1513627610, 'author': 'k8s-ci-robot', 'body': '@kushagra98: This issue is currently awaiting triage.\n\nIf a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.\n\nThe `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.\n\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 29, 11, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367241735, 'issue_id': 1513627610, 'author': 'k8s-ci-robot', 'body': ""Hi @kushagra98. Thanks for your PR.\n\nI'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.\n\nOnce the patch is verified, the new status will be reflected by the `ok-to-test` label.\n\nI understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\n<details>\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>"", 'created_at': datetime.datetime(2022, 12, 29, 11, 5, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367241859, 'issue_id': 1513627610, 'author': 'kushagra98', 'body': '/sig-autoscaling', 'created_at': datetime.datetime(2022, 12, 29, 11, 5, 14, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367246165, 'issue_id': 1513627610, 'author': 'kushagra98', 'body': '@pbeschetnov Please review this PR. Thanks!', 'created_at': datetime.datetime(2022, 12, 29, 11, 12, 13, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367247827, 'issue_id': 1513627610, 'author': 'pbeschetnov', 'body': '/lgtm', 'created_at': datetime.datetime(2022, 12, 29, 11, 15, 3, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367247866, 'issue_id': 1513627610, 'author': 'k8s-ci-robot', 'body': '@pbeschetnov: changing LGTM is restricted to collaborators\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114740#issuecomment-1367247827):\n\n>/lgtm\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 29, 11, 15, 7, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367454591, 'issue_id': 1513627610, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: b481dc864e1ae3d5d113931c8fc1b287735f873c</details>', 'created_at': datetime.datetime(2022, 12, 29, 16, 41, 6, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367454731, 'issue_id': 1513627610, 'author': 'k8s-ci-robot', 'body': '[APPROVALNOTIFIER] This PR is **APPROVED**\n\nThis pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114740#"" title=""Author self-approved"">kushagra98</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114740#pullrequestreview-1232632647"" title=""Approved"">mwielgus</a>*\n\nThe full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).\n\nThe pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)\n\n<details >\nNeeds approval from an approver in each of these files:\n\n- ~~[pkg/controller/podautoscaler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/podautoscaler/OWNERS)~~ [mwielgus]\n\nApprovers can indicate their approval by writing `/approve` in a comment\nApprovers can cancel approval by writing `/approve cancel` in a comment\n</details>\n<!-- META={""approvers"":[]} -->', 'created_at': datetime.datetime(2022, 12, 29, 16, 41, 23, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367487058, 'issue_id': 1513627610, 'author': 'kushagra98', 'body': '/retest', 'created_at': datetime.datetime(2022, 12, 29, 17, 41, 35, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367487163, 'issue_id': 1513627610, 'author': 'k8s-ci-robot', 'body': '@kushagra98: Cannot trigger testing until a trusted user reviews the PR and leaves an `/ok-to-test` message.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114740#issuecomment-1367487058):\n\n>/retest\r\n>\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 29, 17, 41, 49, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367489736, 'issue_id': 1513627610, 'author': 'kushagra98', 'body': '/ok-to-test', 'created_at': datetime.datetime(2022, 12, 29, 17, 47, 18, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367489833, 'issue_id': 1513627610, 'author': 'k8s-ci-robot', 'body': '@kushagra98: Cannot trigger testing until a trusted user reviews the PR and leaves an `/ok-to-test` message.\n\n<details>\n\nIn response to [this](https://github.com/kubernetes/kubernetes/pull/114740#issuecomment-1367489736):\n\n>/ok-to-test\n\n\nInstructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.\n</details>', 'created_at': datetime.datetime(2022, 12, 29, 17, 47, 31, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367497979, 'issue_id': 1513627610, 'author': 'mwielgus', 'body': '/ok-to-test', 'created_at': datetime.datetime(2022, 12, 29, 18, 4, 1, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367498090, 'issue_id': 1513627610, 'author': 'mwielgus', 'body': '/lgtm', 'created_at': datetime.datetime(2022, 12, 29, 18, 4, 11, tzinfo=datetime.timezone.utc)}, {'comment_id': 1367498132, 'issue_id': 1513627610, 'author': 'k8s-ci-robot', 'body': 'LGTM label has been added.  <details>Git tree hash: f47074f3be52875f49caf8f7f7b509b25360d09b</details>', 'created_at': datetime.datetime(2022, 12, 29, 18, 4, 17, tzinfo=datetime.timezone.utc)}]","k8s-ci-robot on (2022-12-29 11:05:00 UTC): @kushagra98: This issue is currently awaiting triage.

If a SIG or subproject determines this is a relevant issue, they will accept it by applying the `triage/accepted` label and provide further guidance.

The `triage/accepted` label can be added by org members by writing `/triage accepted` in a comment.


<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2022-12-29 11:05:00 UTC): Hi @kushagra98. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

kushagra98 (Issue Creator) on (2022-12-29 11:05:14 UTC): /sig-autoscaling

kushagra98 (Issue Creator) on (2022-12-29 11:12:13 UTC): @pbeschetnov Please review this PR. Thanks!

pbeschetnov on (2022-12-29 11:15:03 UTC): /lgtm

k8s-ci-robot on (2022-12-29 11:15:07 UTC): @pbeschetnov: changing LGTM is restricted to collaborators

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114740#issuecomment-1367247827):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

k8s-ci-robot on (2022-12-29 16:41:06 UTC): LGTM label has been added.  <details>Git tree hash: b481dc864e1ae3d5d113931c8fc1b287735f873c</details>

k8s-ci-robot on (2022-12-29 16:41:23 UTC): [APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/114740#"" title=""Author self-approved"">kushagra98</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/114740#pullrequestreview-1232632647"" title=""Approved"">mwielgus</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[pkg/controller/podautoscaler/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/podautoscaler/OWNERS)~~ [mwielgus]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->

kushagra98 (Issue Creator) on (2022-12-29 17:41:35 UTC): /retest

k8s-ci-robot on (2022-12-29 17:41:49 UTC): @kushagra98: Cannot trigger testing until a trusted user reviews the PR and leaves an `/ok-to-test` message.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114740#issuecomment-1367487058):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

kushagra98 (Issue Creator) on (2022-12-29 17:47:18 UTC): /ok-to-test

k8s-ci-robot on (2022-12-29 17:47:31 UTC): @kushagra98: Cannot trigger testing until a trusted user reviews the PR and leaves an `/ok-to-test` message.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/114740#issuecomment-1367489736):



Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>

mwielgus (Assginee) on (2022-12-29 18:04:01 UTC): /ok-to-test

mwielgus (Assginee) on (2022-12-29 18:04:11 UTC): /lgtm

k8s-ci-robot on (2022-12-29 18:04:17 UTC): LGTM label has been added.  <details>Git tree hash: f47074f3be52875f49caf8f7f7b509b25360d09b</details>

"
